<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1158" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1141.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1141.00"> </text><svg id="frames" x="10" width="1180" total_samples="1242"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0000%" y="741" width="0.0805%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="725" width="0.0805%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="0.4026%" y="645" width="0.3221%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="4"/><text x="0.6526%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5636%" y="629" width="0.1610%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="2"/><text x="0.8136%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.8052%" y="629" width="0.0805%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="1"/><text x="1.0552%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8052%" y="613" width="0.0805%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="1"/><text x="1.0552%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8857%" y="629" width="0.2415%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="3"/><text x="1.1357%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.1272%" y="629" width="0.1610%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="2"/><text x="1.3772%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4493%" y="613" width="0.0805%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="1"/><text x="1.6993%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="0.3221%" y="661" width="1.3688%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="17"/><text x="0.5721%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="0.7246%" y="645" width="0.9662%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="12"/><text x="0.9746%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.2882%" y="629" width="0.4026%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="5"/><text x="1.5382%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.5298%" y="613" width="0.1610%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="2"/><text x="1.7798%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5298%" y="597" width="0.1610%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="2"/><text x="1.7798%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.61%)</title><rect x="0.1610%" y="693" width="1.6103%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="20"/><text x="0.4110%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.61%)</title><rect x="0.1610%" y="677" width="1.6103%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="20"/><text x="0.4110%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6908%" y="661" width="0.0805%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="1"/><text x="1.9408%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.69%)</title><rect x="0.1610%" y="725" width="1.6908%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="21"/><text x="0.4110%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (21 samples, 1.69%)</title><rect x="0.1610%" y="709" width="1.6908%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="21"/><text x="0.4110%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7713%" y="693" width="0.0805%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="1"/><text x="2.0213%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="0.0000%" y="757" width="1.9324%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="24"/><text x="0.2500%" y="767.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (23 samples, 1.85%)</title><rect x="0.0805%" y="741" width="1.8519%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="23"/><text x="0.3305%" y="751.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8519%" y="725" width="0.0805%" height="15" fill="rgb(221,5,38)" fg:x="23" fg:w="1"/><text x="2.1019%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="1.9324%" y="725" width="0.0805%" height="15" fill="rgb(247,18,42)" fg:x="24" fg:w="1"/><text x="2.1824%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.0129%" y="709" width="0.0805%" height="15" fill="rgb(241,131,45)" fg:x="25" fg:w="1"/><text x="2.2629%" y="719.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="2.0934%" y="693" width="0.0805%" height="15" fill="rgb(249,31,29)" fg:x="26" fg:w="1"/><text x="2.3434%" y="703.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.4960%" y="629" width="0.0805%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="1"/><text x="2.7460%" y="639.50"></text></g><g><title>__strerror_r (1 samples, 0.08%)</title><rect x="2.4960%" y="613" width="0.0805%" height="15" fill="rgb(238,160,17)" fg:x="31" fg:w="1"/><text x="2.7460%" y="623.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.4960%" y="645" width="0.1610%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="2"/><text x="2.7460%" y="655.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="2.5765%" y="629" width="0.0805%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="1"/><text x="2.8265%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.97%)</title><rect x="2.3349%" y="677" width="0.9662%" height="15" fill="rgb(209,103,24)" fg:x="29" fg:w="12"/><text x="2.5849%" y="687.50"></text></g><g><title>libloading::safe::Library::new (10 samples, 0.81%)</title><rect x="2.4960%" y="661" width="0.8052%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="10"/><text x="2.7460%" y="671.50"></text></g><g><title>dlopen (8 samples, 0.64%)</title><rect x="2.6570%" y="645" width="0.6441%" height="15" fill="rgb(213,181,19)" fg:x="33" fg:w="8"/><text x="2.9070%" y="655.50"></text></g><g><title>_dl_catch_error (8 samples, 0.64%)</title><rect x="2.6570%" y="629" width="0.6441%" height="15" fill="rgb(254,191,54)" fg:x="33" fg:w="8"/><text x="2.9070%" y="639.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.6570%" y="613" width="0.6441%" height="15" fill="rgb(241,83,37)" fg:x="33" fg:w="8"/><text x="2.9070%" y="623.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.6570%" y="597" width="0.6441%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="8"/><text x="2.9070%" y="607.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="2.7375%" y="581" width="0.5636%" height="15" fill="rgb(226,3,54)" fg:x="34" fg:w="7"/><text x="2.9875%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.2206%" y="565" width="0.0805%" height="15" fill="rgb(245,192,40)" fg:x="40" fg:w="1"/><text x="3.4706%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.29%)</title><rect x="2.1739%" y="693" width="1.2882%" height="15" fill="rgb(238,167,29)" fg:x="27" fg:w="16"/><text x="2.4239%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.3011%" y="677" width="0.1610%" height="15" fill="rgb(232,182,51)" fg:x="41" fg:w="2"/><text x="3.5511%" y="687.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.3011%" y="661" width="0.1610%" height="15" fill="rgb(231,60,39)" fg:x="41" fg:w="2"/><text x="3.5511%" y="671.50"></text></g><g><title>engine::session::Session::initialize (18 samples, 1.45%)</title><rect x="2.0934%" y="709" width="1.4493%" height="15" fill="rgb(208,69,12)" fg:x="26" fg:w="18"/><text x="2.3434%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="3.4622%" y="693" width="0.0805%" height="15" fill="rgb(235,93,37)" fg:x="43" fg:w="1"/><text x="3.7122%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.4622%" y="677" width="0.0805%" height="15" fill="rgb(213,116,39)" fg:x="43" fg:w="1"/><text x="3.7122%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.4622%" y="661" width="0.0805%" height="15" fill="rgb(222,207,29)" fg:x="43" fg:w="1"/><text x="3.7122%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.4622%" y="645" width="0.0805%" height="15" fill="rgb(206,96,30)" fg:x="43" fg:w="1"/><text x="3.7122%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.4622%" y="629" width="0.0805%" height="15" fill="rgb(218,138,4)" fg:x="43" fg:w="1"/><text x="3.7122%" y="639.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="3.5427%" y="709" width="0.1610%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="2"/><text x="3.7927%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.5427%" y="693" width="0.1610%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="2"/><text x="3.7927%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.5427%" y="677" width="0.1610%" height="15" fill="rgb(206,27,48)" fg:x="44" fg:w="2"/><text x="3.7927%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.5427%" y="661" width="0.1610%" height="15" fill="rgb(225,35,8)" fg:x="44" fg:w="2"/><text x="3.7927%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6232%" y="645" width="0.0805%" height="15" fill="rgb(250,213,24)" fg:x="45" fg:w="1"/><text x="3.8732%" y="655.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (24 samples, 1.93%)</title><rect x="1.9324%" y="757" width="1.9324%" height="15" fill="rgb(247,123,22)" fg:x="24" fg:w="24"/><text x="2.1824%" y="767.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (24 samples, 1.93%)</title><rect x="1.9324%" y="741" width="1.9324%" height="15" fill="rgb(231,138,38)" fg:x="24" fg:w="24"/><text x="2.1824%" y="751.50">e..</text></g><g><title>engine::session::Session::new (23 samples, 1.85%)</title><rect x="2.0129%" y="725" width="1.8519%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="23"/><text x="2.2629%" y="735.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.7037%" y="709" width="0.1610%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="2"/><text x="3.9537%" y="719.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.7037%" y="693" width="0.1610%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="2"/><text x="3.9537%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9452%" y="741" width="0.0805%" height="15" fill="rgb(247,81,37)" fg:x="49" fg:w="1"/><text x="4.1952%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9452%" y="725" width="0.0805%" height="15" fill="rgb(209,12,38)" fg:x="49" fg:w="1"/><text x="4.1952%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.1868%" y="677" width="0.0805%" height="15" fill="rgb(227,1,9)" fg:x="52" fg:w="1"/><text x="4.4368%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.1868%" y="661" width="0.0805%" height="15" fill="rgb(248,47,43)" fg:x="52" fg:w="1"/><text x="4.4368%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.1868%" y="645" width="0.0805%" height="15" fill="rgb(221,10,30)" fg:x="52" fg:w="1"/><text x="4.4368%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.2673%" y="661" width="0.0805%" height="15" fill="rgb(210,229,1)" fg:x="53" fg:w="1"/><text x="4.5173%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.4283%" y="629" width="0.1610%" height="15" fill="rgb(222,148,37)" fg:x="55" fg:w="2"/><text x="4.6783%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.5089%" y="613" width="0.0805%" height="15" fill="rgb(234,67,33)" fg:x="56" fg:w="1"/><text x="4.7589%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.5089%" y="597" width="0.0805%" height="15" fill="rgb(247,98,35)" fg:x="56" fg:w="1"/><text x="4.7589%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.5089%" y="581" width="0.0805%" height="15" fill="rgb(247,138,52)" fg:x="56" fg:w="1"/><text x="4.7589%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="4.3478%" y="645" width="0.5636%" height="15" fill="rgb(213,79,30)" fg:x="54" fg:w="7"/><text x="4.5978%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.5894%" y="629" width="0.3221%" height="15" fill="rgb(246,177,23)" fg:x="57" fg:w="4"/><text x="4.8394%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.7504%" y="613" width="0.1610%" height="15" fill="rgb(230,62,27)" fg:x="59" fg:w="2"/><text x="5.0004%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8309%" y="597" width="0.0805%" height="15" fill="rgb(216,154,8)" fg:x="60" fg:w="1"/><text x="5.0809%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.9114%" y="629" width="0.2415%" height="15" fill="rgb(244,35,45)" fg:x="61" fg:w="3"/><text x="5.1614%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.9919%" y="613" width="0.1610%" height="15" fill="rgb(251,115,12)" fg:x="62" fg:w="2"/><text x="5.2419%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.9919%" y="597" width="0.1610%" height="15" fill="rgb(240,54,50)" fg:x="62" fg:w="2"/><text x="5.2419%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.9919%" y="581" width="0.1610%" height="15" fill="rgb(233,84,52)" fg:x="62" fg:w="2"/><text x="5.2419%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.9919%" y="565" width="0.1610%" height="15" fill="rgb(207,117,47)" fg:x="62" fg:w="2"/><text x="5.2419%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.9919%" y="549" width="0.1610%" height="15" fill="rgb(249,43,39)" fg:x="62" fg:w="2"/><text x="5.2419%" y="559.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="5.0725%" y="533" width="0.0805%" height="15" fill="rgb(209,38,44)" fg:x="63" fg:w="1"/><text x="5.3225%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="5.0725%" y="517" width="0.0805%" height="15" fill="rgb(236,212,23)" fg:x="63" fg:w="1"/><text x="5.3225%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.2335%" y="581" width="0.0805%" height="15" fill="rgb(242,79,21)" fg:x="65" fg:w="1"/><text x="5.4835%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2335%" y="565" width="0.0805%" height="15" fill="rgb(211,96,35)" fg:x="65" fg:w="1"/><text x="5.4835%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2335%" y="549" width="0.0805%" height="15" fill="rgb(253,215,40)" fg:x="65" fg:w="1"/><text x="5.4835%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.2335%" y="533" width="0.0805%" height="15" fill="rgb(211,81,21)" fg:x="65" fg:w="1"/><text x="5.4835%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="5.1530%" y="597" width="0.3221%" height="15" fill="rgb(208,190,38)" fg:x="64" fg:w="4"/><text x="5.4030%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.3140%" y="581" width="0.1610%" height="15" fill="rgb(235,213,38)" fg:x="66" fg:w="2"/><text x="5.5640%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.3140%" y="565" width="0.1610%" height="15" fill="rgb(237,122,38)" fg:x="66" fg:w="2"/><text x="5.5640%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3945%" y="549" width="0.0805%" height="15" fill="rgb(244,218,35)" fg:x="67" fg:w="1"/><text x="5.6445%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="5.1530%" y="613" width="0.4026%" height="15" fill="rgb(240,68,47)" fg:x="64" fg:w="5"/><text x="5.4030%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4750%" y="597" width="0.0805%" height="15" fill="rgb(210,16,53)" fg:x="68" fg:w="1"/><text x="5.7250%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.4750%" y="581" width="0.0805%" height="15" fill="rgb(235,124,12)" fg:x="68" fg:w="1"/><text x="5.7250%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4750%" y="565" width="0.0805%" height="15" fill="rgb(224,169,11)" fg:x="68" fg:w="1"/><text x="5.7250%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="5.5556%" y="613" width="0.4831%" height="15" fill="rgb(250,166,2)" fg:x="69" fg:w="6"/><text x="5.8056%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.7166%" y="597" width="0.3221%" height="15" fill="rgb(242,216,29)" fg:x="71" fg:w="4"/><text x="5.9666%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.7971%" y="581" width="0.2415%" height="15" fill="rgb(230,116,27)" fg:x="72" fg:w="3"/><text x="6.0471%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.8776%" y="565" width="0.1610%" height="15" fill="rgb(228,99,48)" fg:x="73" fg:w="2"/><text x="6.1276%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.0386%" y="597" width="0.2415%" height="15" fill="rgb(253,11,6)" fg:x="75" fg:w="3"/><text x="6.2886%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.1997%" y="581" width="0.0805%" height="15" fill="rgb(247,143,39)" fg:x="77" fg:w="1"/><text x="6.4497%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.3607%" y="581" width="0.2415%" height="15" fill="rgb(236,97,10)" fg:x="79" fg:w="3"/><text x="6.6107%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.3607%" y="565" width="0.2415%" height="15" fill="rgb(233,208,19)" fg:x="79" fg:w="3"/><text x="6.6107%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5217%" y="549" width="0.0805%" height="15" fill="rgb(216,164,2)" fg:x="81" fg:w="1"/><text x="6.7717%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.6828%" y="565" width="0.0805%" height="15" fill="rgb(220,129,5)" fg:x="83" fg:w="1"/><text x="6.9328%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6828%" y="549" width="0.0805%" height="15" fill="rgb(242,17,10)" fg:x="83" fg:w="1"/><text x="6.9328%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.7633%" y="565" width="0.3221%" height="15" fill="rgb(242,107,0)" fg:x="84" fg:w="4"/><text x="7.0133%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="6.7633%" y="549" width="0.3221%" height="15" fill="rgb(251,28,31)" fg:x="84" fg:w="4"/><text x="7.0133%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.7633%" y="533" width="0.3221%" height="15" fill="rgb(233,223,10)" fg:x="84" fg:w="4"/><text x="7.0133%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="6.7633%" y="517" width="0.3221%" height="15" fill="rgb(215,21,27)" fg:x="84" fg:w="4"/><text x="7.0133%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="6.7633%" y="501" width="0.3221%" height="15" fill="rgb(232,23,21)" fg:x="84" fg:w="4"/><text x="7.0133%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="6.7633%" y="485" width="0.3221%" height="15" fill="rgb(244,5,23)" fg:x="84" fg:w="4"/><text x="7.0133%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="6.7633%" y="469" width="0.3221%" height="15" fill="rgb(226,81,46)" fg:x="84" fg:w="4"/><text x="7.0133%" y="479.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="6.7633%" y="453" width="0.3221%" height="15" fill="rgb(247,70,30)" fg:x="84" fg:w="4"/><text x="7.0133%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="6.6023%" y="581" width="0.6441%" height="15" fill="rgb(212,68,19)" fg:x="82" fg:w="8"/><text x="6.8523%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.0853%" y="565" width="0.1610%" height="15" fill="rgb(240,187,13)" fg:x="88" fg:w="2"/><text x="7.3353%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1659%" y="549" width="0.0805%" height="15" fill="rgb(223,113,26)" fg:x="89" fg:w="1"/><text x="7.4159%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1659%" y="533" width="0.0805%" height="15" fill="rgb(206,192,2)" fg:x="89" fg:w="1"/><text x="7.4159%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="6.0386%" y="613" width="1.2882%" height="15" fill="rgb(241,108,4)" fg:x="75" fg:w="16"/><text x="6.2886%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="6.2802%" y="597" width="1.0467%" height="15" fill="rgb(247,173,49)" fg:x="78" fg:w="13"/><text x="6.5302%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.2464%" y="581" width="0.0805%" height="15" fill="rgb(224,114,35)" fg:x="90" fg:w="1"/><text x="7.4964%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2464%" y="565" width="0.0805%" height="15" fill="rgb(245,159,27)" fg:x="90" fg:w="1"/><text x="7.4964%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="5.1530%" y="629" width="2.2544%" height="15" fill="rgb(245,172,44)" fg:x="64" fg:w="28"/><text x="5.4030%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3269%" y="613" width="0.0805%" height="15" fill="rgb(236,23,11)" fg:x="91" fg:w="1"/><text x="7.5769%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3269%" y="597" width="0.0805%" height="15" fill="rgb(205,117,38)" fg:x="91" fg:w="1"/><text x="7.5769%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3269%" y="581" width="0.0805%" height="15" fill="rgb(237,72,25)" fg:x="91" fg:w="1"/><text x="7.5769%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.06%)</title><rect x="4.9114%" y="645" width="3.0596%" height="15" fill="rgb(244,70,9)" fg:x="61" fg:w="38"/><text x="5.1614%" y="655.50">ser..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="7.4074%" y="629" width="0.5636%" height="15" fill="rgb(217,125,39)" fg:x="92" fg:w="7"/><text x="7.6574%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="7.4879%" y="613" width="0.4831%" height="15" fill="rgb(235,36,10)" fg:x="93" fg:w="6"/><text x="7.7379%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="7.6490%" y="597" width="0.3221%" height="15" fill="rgb(251,123,47)" fg:x="95" fg:w="4"/><text x="7.8990%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.8905%" y="581" width="0.0805%" height="15" fill="rgb(221,13,13)" fg:x="98" fg:w="1"/><text x="8.1405%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.8905%" y="565" width="0.0805%" height="15" fill="rgb(238,131,9)" fg:x="98" fg:w="1"/><text x="8.1405%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.70%)</title><rect x="4.3478%" y="661" width="3.7037%" height="15" fill="rgb(211,50,8)" fg:x="54" fg:w="46"/><text x="4.5978%" y="671.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9710%" y="645" width="0.0805%" height="15" fill="rgb(245,182,24)" fg:x="99" fg:w="1"/><text x="8.2210%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9710%" y="629" width="0.0805%" height="15" fill="rgb(242,14,37)" fg:x="99" fg:w="1"/><text x="8.2210%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9710%" y="613" width="0.0805%" height="15" fill="rgb(246,228,12)" fg:x="99" fg:w="1"/><text x="8.2210%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.9710%" y="597" width="0.0805%" height="15" fill="rgb(213,55,15)" fg:x="99" fg:w="1"/><text x="8.2210%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.9710%" y="581" width="0.0805%" height="15" fill="rgb(209,9,3)" fg:x="99" fg:w="1"/><text x="8.2210%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="8.0515%" y="629" width="0.1610%" height="15" fill="rgb(230,59,30)" fg:x="100" fg:w="2"/><text x="8.3015%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1320%" y="613" width="0.0805%" height="15" fill="rgb(209,121,21)" fg:x="101" fg:w="1"/><text x="8.3820%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="8.2126%" y="597" width="0.1610%" height="15" fill="rgb(220,109,13)" fg:x="102" fg:w="2"/><text x="8.4626%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2931%" y="581" width="0.0805%" height="15" fill="rgb(232,18,1)" fg:x="103" fg:w="1"/><text x="8.5431%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.3736%" y="581" width="0.0805%" height="15" fill="rgb(215,41,42)" fg:x="104" fg:w="1"/><text x="8.6236%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3736%" y="565" width="0.0805%" height="15" fill="rgb(224,123,36)" fg:x="104" fg:w="1"/><text x="8.6236%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="8.0515%" y="661" width="0.7246%" height="15" fill="rgb(240,125,3)" fg:x="100" fg:w="9"/><text x="8.3015%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="8.0515%" y="645" width="0.7246%" height="15" fill="rgb(205,98,50)" fg:x="100" fg:w="9"/><text x="8.3015%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.2126%" y="629" width="0.5636%" height="15" fill="rgb(205,185,37)" fg:x="102" fg:w="7"/><text x="8.4626%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.2126%" y="613" width="0.5636%" height="15" fill="rgb(238,207,15)" fg:x="102" fg:w="7"/><text x="8.4626%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="8.3736%" y="597" width="0.4026%" height="15" fill="rgb(213,199,42)" fg:x="104" fg:w="5"/><text x="8.6236%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="8.4541%" y="581" width="0.3221%" height="15" fill="rgb(235,201,11)" fg:x="105" fg:w="4"/><text x="8.7041%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="8.4541%" y="565" width="0.3221%" height="15" fill="rgb(207,46,11)" fg:x="105" fg:w="4"/><text x="8.7041%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="8.5346%" y="549" width="0.2415%" height="15" fill="rgb(241,35,35)" fg:x="106" fg:w="3"/><text x="8.7846%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.8567%" y="629" width="0.0805%" height="15" fill="rgb(243,32,47)" fg:x="110" fg:w="1"/><text x="9.1067%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8567%" y="613" width="0.0805%" height="15" fill="rgb(247,202,23)" fg:x="110" fg:w="1"/><text x="9.1067%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="8.8567%" y="645" width="0.1610%" height="15" fill="rgb(219,102,11)" fg:x="110" fg:w="2"/><text x="9.1067%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.9372%" y="629" width="0.0805%" height="15" fill="rgb(243,110,44)" fg:x="111" fg:w="1"/><text x="9.1872%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="9.0177%" y="645" width="0.0805%" height="15" fill="rgb(222,74,54)" fg:x="112" fg:w="1"/><text x="9.2677%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.0177%" y="629" width="0.0805%" height="15" fill="rgb(216,99,12)" fg:x="112" fg:w="1"/><text x="9.2677%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.3398%" y="613" width="0.1610%" height="15" fill="rgb(226,22,26)" fg:x="116" fg:w="2"/><text x="9.5898%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.5008%" y="613" width="0.2415%" height="15" fill="rgb(217,163,10)" fg:x="118" fg:w="3"/><text x="9.7508%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.5813%" y="597" width="0.1610%" height="15" fill="rgb(213,25,53)" fg:x="119" fg:w="2"/><text x="9.8313%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7424%" y="613" width="0.0805%" height="15" fill="rgb(252,105,26)" fg:x="121" fg:w="1"/><text x="9.9924%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.7424%" y="597" width="0.0805%" height="15" fill="rgb(220,39,43)" fg:x="121" fg:w="1"/><text x="9.9924%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="9.8229%" y="613" width="0.0805%" height="15" fill="rgb(229,68,48)" fg:x="122" fg:w="1"/><text x="10.0729%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.4670%" y="485" width="0.0805%" height="15" fill="rgb(252,8,32)" fg:x="130" fg:w="1"/><text x="10.7170%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="10.3865%" y="517" width="0.2415%" height="15" fill="rgb(223,20,43)" fg:x="129" fg:w="3"/><text x="10.6365%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="10.3865%" y="501" width="0.2415%" height="15" fill="rgb(229,81,49)" fg:x="129" fg:w="3"/><text x="10.6365%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.5475%" y="485" width="0.0805%" height="15" fill="rgb(236,28,36)" fg:x="131" fg:w="1"/><text x="10.7975%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5475%" y="469" width="0.0805%" height="15" fill="rgb(249,185,26)" fg:x="131" fg:w="1"/><text x="10.7975%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="10.3060%" y="549" width="0.4026%" height="15" fill="rgb(249,174,33)" fg:x="128" fg:w="5"/><text x="10.5560%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="10.3865%" y="533" width="0.3221%" height="15" fill="rgb(233,201,37)" fg:x="129" fg:w="4"/><text x="10.6365%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6280%" y="517" width="0.0805%" height="15" fill="rgb(221,78,26)" fg:x="132" fg:w="1"/><text x="10.8780%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="10.0644%" y="597" width="0.8052%" height="15" fill="rgb(250,127,30)" fg:x="125" fg:w="10"/><text x="10.3144%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="10.2254%" y="581" width="0.6441%" height="15" fill="rgb(230,49,44)" fg:x="127" fg:w="8"/><text x="10.4754%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="10.2254%" y="565" width="0.6441%" height="15" fill="rgb(229,67,23)" fg:x="127" fg:w="8"/><text x="10.4754%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.7085%" y="549" width="0.1610%" height="15" fill="rgb(249,83,47)" fg:x="133" fg:w="2"/><text x="10.9585%" y="559.50"></text></g><g><title>engine::session::Session::flush (86 samples, 6.92%)</title><rect x="4.0258%" y="741" width="6.9243%" height="15" fill="rgb(215,43,3)" fg:x="50" fg:w="86"/><text x="4.2758%" y="751.50">engine::s..</text></g><g><title>engine::session::state::State::close (86 samples, 6.92%)</title><rect x="4.0258%" y="725" width="6.9243%" height="15" fill="rgb(238,154,13)" fg:x="50" fg:w="86"/><text x="4.2758%" y="735.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (86 samples, 6.92%)</title><rect x="4.0258%" y="709" width="6.9243%" height="15" fill="rgb(219,56,2)" fg:x="50" fg:w="86"/><text x="4.2758%" y="719.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (86 samples, 6.92%)</title><rect x="4.0258%" y="693" width="6.9243%" height="15" fill="rgb(233,0,4)" fg:x="50" fg:w="86"/><text x="4.2758%" y="703.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (83 samples, 6.68%)</title><rect x="4.2673%" y="677" width="6.6828%" height="15" fill="rgb(235,30,7)" fg:x="53" fg:w="83"/><text x="4.5173%" y="687.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.17%)</title><rect x="8.7762%" y="661" width="2.1739%" height="15" fill="rgb(250,79,13)" fg:x="109" fg:w="27"/><text x="9.0262%" y="671.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.85%)</title><rect x="9.0982%" y="645" width="1.8519%" height="15" fill="rgb(211,146,34)" fg:x="113" fg:w="23"/><text x="9.3482%" y="655.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="9.1787%" y="629" width="1.7713%" height="15" fill="rgb(228,22,38)" fg:x="114" fg:w="22"/><text x="9.4287%" y="639.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="9.9034%" y="613" width="1.0467%" height="15" fill="rgb(235,168,5)" fg:x="123" fg:w="13"/><text x="10.1534%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8696%" y="597" width="0.0805%" height="15" fill="rgb(221,155,16)" fg:x="135" fg:w="1"/><text x="11.1196%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8696%" y="581" width="0.0805%" height="15" fill="rgb(215,215,53)" fg:x="135" fg:w="1"/><text x="11.1196%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.8696%" y="565" width="0.0805%" height="15" fill="rgb(223,4,10)" fg:x="135" fg:w="1"/><text x="11.1196%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1111%" y="677" width="0.0805%" height="15" fill="rgb(234,103,6)" fg:x="138" fg:w="1"/><text x="11.3611%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1111%" y="661" width="0.0805%" height="15" fill="rgb(227,97,0)" fg:x="138" fg:w="1"/><text x="11.3611%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1111%" y="645" width="0.0805%" height="15" fill="rgb(234,150,53)" fg:x="138" fg:w="1"/><text x="11.3611%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1111%" y="629" width="0.0805%" height="15" fill="rgb(228,201,54)" fg:x="138" fg:w="1"/><text x="11.3611%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1111%" y="613" width="0.0805%" height="15" fill="rgb(222,22,37)" fg:x="138" fg:w="1"/><text x="11.3611%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1111%" y="597" width="0.0805%" height="15" fill="rgb(237,53,32)" fg:x="138" fg:w="1"/><text x="11.3611%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1111%" y="581" width="0.0805%" height="15" fill="rgb(233,25,53)" fg:x="138" fg:w="1"/><text x="11.3611%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1111%" y="565" width="0.0805%" height="15" fill="rgb(210,40,34)" fg:x="138" fg:w="1"/><text x="11.3611%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.1111%" y="549" width="0.0805%" height="15" fill="rgb(241,220,44)" fg:x="138" fg:w="1"/><text x="11.3611%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.1111%" y="533" width="0.0805%" height="15" fill="rgb(235,28,35)" fg:x="138" fg:w="1"/><text x="11.3611%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.1111%" y="517" width="0.0805%" height="15" fill="rgb(210,56,17)" fg:x="138" fg:w="1"/><text x="11.3611%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.1111%" y="501" width="0.0805%" height="15" fill="rgb(224,130,29)" fg:x="138" fg:w="1"/><text x="11.3611%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1111%" y="485" width="0.0805%" height="15" fill="rgb(235,212,8)" fg:x="138" fg:w="1"/><text x="11.3611%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="11.1916%" y="677" width="0.0805%" height="15" fill="rgb(223,33,50)" fg:x="139" fg:w="1"/><text x="11.4416%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.1916%" y="661" width="0.0805%" height="15" fill="rgb(219,149,13)" fg:x="139" fg:w="1"/><text x="11.4416%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="11.1111%" y="709" width="0.2415%" height="15" fill="rgb(250,156,29)" fg:x="138" fg:w="3"/><text x="11.3611%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="11.1111%" y="693" width="0.2415%" height="15" fill="rgb(216,193,19)" fg:x="138" fg:w="3"/><text x="11.3611%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2721%" y="677" width="0.0805%" height="15" fill="rgb(216,135,14)" fg:x="140" fg:w="1"/><text x="11.5221%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2721%" y="661" width="0.0805%" height="15" fill="rgb(241,47,5)" fg:x="140" fg:w="1"/><text x="11.5221%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2721%" y="645" width="0.0805%" height="15" fill="rgb(233,42,35)" fg:x="140" fg:w="1"/><text x="11.5221%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2721%" y="629" width="0.0805%" height="15" fill="rgb(231,13,6)" fg:x="140" fg:w="1"/><text x="11.5221%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.3527%" y="661" width="0.0805%" height="15" fill="rgb(207,181,40)" fg:x="141" fg:w="1"/><text x="11.6027%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.3527%" y="645" width="0.0805%" height="15" fill="rgb(254,173,49)" fg:x="141" fg:w="1"/><text x="11.6027%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3527%" y="629" width="0.0805%" height="15" fill="rgb(221,1,38)" fg:x="141" fg:w="1"/><text x="11.6027%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.3527%" y="613" width="0.0805%" height="15" fill="rgb(206,124,46)" fg:x="141" fg:w="1"/><text x="11.6027%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3527%" y="597" width="0.0805%" height="15" fill="rgb(249,21,11)" fg:x="141" fg:w="1"/><text x="11.6027%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="11.3527%" y="693" width="0.1610%" height="15" fill="rgb(222,201,40)" fg:x="141" fg:w="2"/><text x="11.6027%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="11.3527%" y="677" width="0.1610%" height="15" fill="rgb(235,61,29)" fg:x="141" fg:w="2"/><text x="11.6027%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="11.4332%" y="661" width="0.0805%" height="15" fill="rgb(219,207,3)" fg:x="142" fg:w="1"/><text x="11.6832%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.4332%" y="645" width="0.0805%" height="15" fill="rgb(222,56,46)" fg:x="142" fg:w="1"/><text x="11.6832%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="11.4332%" y="629" width="0.0805%" height="15" fill="rgb(239,76,54)" fg:x="142" fg:w="1"/><text x="11.6832%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.4332%" y="613" width="0.0805%" height="15" fill="rgb(231,124,27)" fg:x="142" fg:w="1"/><text x="11.6832%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="11.4332%" y="597" width="0.0805%" height="15" fill="rgb(249,195,6)" fg:x="142" fg:w="1"/><text x="11.6832%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="11.4332%" y="581" width="0.0805%" height="15" fill="rgb(237,174,47)" fg:x="142" fg:w="1"/><text x="11.6832%" y="591.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="11.5942%" y="629" width="0.3221%" height="15" fill="rgb(206,201,31)" fg:x="144" fg:w="4"/><text x="11.8442%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="11.0306%" y="725" width="0.9662%" height="15" fill="rgb(231,57,52)" fg:x="137" fg:w="12"/><text x="11.2806%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="11.3527%" y="709" width="0.6441%" height="15" fill="rgb(248,177,22)" fg:x="141" fg:w="8"/><text x="11.6027%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="11.5137%" y="693" width="0.4831%" height="15" fill="rgb(215,211,37)" fg:x="143" fg:w="6"/><text x="11.7637%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="11.5137%" y="677" width="0.4831%" height="15" fill="rgb(241,128,51)" fg:x="143" fg:w="6"/><text x="11.7637%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="11.5137%" y="661" width="0.4831%" height="15" fill="rgb(227,165,31)" fg:x="143" fg:w="6"/><text x="11.7637%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="11.5942%" y="645" width="0.4026%" height="15" fill="rgb(228,167,24)" fg:x="144" fg:w="5"/><text x="11.8442%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.9163%" y="629" width="0.0805%" height="15" fill="rgb(228,143,12)" fg:x="148" fg:w="1"/><text x="12.1663%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="11.9968%" y="661" width="0.0805%" height="15" fill="rgb(249,149,8)" fg:x="149" fg:w="1"/><text x="12.2468%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.9968%" y="677" width="0.1610%" height="15" fill="rgb(243,35,44)" fg:x="149" fg:w="2"/><text x="12.2468%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.0773%" y="661" width="0.0805%" height="15" fill="rgb(246,89,9)" fg:x="150" fg:w="1"/><text x="12.3273%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.0773%" y="645" width="0.0805%" height="15" fill="rgb(233,213,13)" fg:x="150" fg:w="1"/><text x="12.3273%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0773%" y="629" width="0.0805%" height="15" fill="rgb(233,141,41)" fg:x="150" fg:w="1"/><text x="12.3273%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0773%" y="613" width="0.0805%" height="15" fill="rgb(239,167,4)" fg:x="150" fg:w="1"/><text x="12.3273%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0773%" y="597" width="0.0805%" height="15" fill="rgb(209,217,16)" fg:x="150" fg:w="1"/><text x="12.3273%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0773%" y="581" width="0.0805%" height="15" fill="rgb(219,88,35)" fg:x="150" fg:w="1"/><text x="12.3273%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.0773%" y="565" width="0.0805%" height="15" fill="rgb(220,193,23)" fg:x="150" fg:w="1"/><text x="12.3273%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0773%" y="549" width="0.0805%" height="15" fill="rgb(230,90,52)" fg:x="150" fg:w="1"/><text x="12.3273%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.0773%" y="533" width="0.0805%" height="15" fill="rgb(252,106,19)" fg:x="150" fg:w="1"/><text x="12.3273%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0773%" y="517" width="0.0805%" height="15" fill="rgb(206,74,20)" fg:x="150" fg:w="1"/><text x="12.3273%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.1578%" y="565" width="0.0805%" height="15" fill="rgb(230,138,44)" fg:x="151" fg:w="1"/><text x="12.4078%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1578%" y="549" width="0.0805%" height="15" fill="rgb(235,182,43)" fg:x="151" fg:w="1"/><text x="12.4078%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1578%" y="613" width="0.1610%" height="15" fill="rgb(242,16,51)" fg:x="151" fg:w="2"/><text x="12.4078%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1578%" y="597" width="0.1610%" height="15" fill="rgb(248,9,4)" fg:x="151" fg:w="2"/><text x="12.4078%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1578%" y="581" width="0.1610%" height="15" fill="rgb(210,31,22)" fg:x="151" fg:w="2"/><text x="12.4078%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2383%" y="565" width="0.0805%" height="15" fill="rgb(239,54,39)" fg:x="152" fg:w="1"/><text x="12.4883%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.1578%" y="629" width="0.2415%" height="15" fill="rgb(230,99,41)" fg:x="151" fg:w="3"/><text x="12.4078%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3188%" y="613" width="0.0805%" height="15" fill="rgb(253,106,12)" fg:x="153" fg:w="1"/><text x="12.5688%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.3994%" y="629" width="0.0805%" height="15" fill="rgb(213,46,41)" fg:x="154" fg:w="1"/><text x="12.6494%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3994%" y="613" width="0.0805%" height="15" fill="rgb(215,133,35)" fg:x="154" fg:w="1"/><text x="12.6494%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3994%" y="597" width="0.0805%" height="15" fill="rgb(213,28,5)" fg:x="154" fg:w="1"/><text x="12.6494%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="11.9968%" y="709" width="0.5636%" height="15" fill="rgb(215,77,49)" fg:x="149" fg:w="7"/><text x="12.2468%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="11.9968%" y="693" width="0.5636%" height="15" fill="rgb(248,100,22)" fg:x="149" fg:w="7"/><text x="12.2468%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="12.1578%" y="677" width="0.4026%" height="15" fill="rgb(208,67,9)" fg:x="151" fg:w="5"/><text x="12.4078%" y="687.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="12.1578%" y="661" width="0.4026%" height="15" fill="rgb(219,133,21)" fg:x="151" fg:w="5"/><text x="12.4078%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="12.1578%" y="645" width="0.4026%" height="15" fill="rgb(246,46,29)" fg:x="151" fg:w="5"/><text x="12.4078%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4799%" y="629" width="0.0805%" height="15" fill="rgb(246,185,52)" fg:x="155" fg:w="1"/><text x="12.7299%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4799%" y="613" width="0.0805%" height="15" fill="rgb(252,136,11)" fg:x="155" fg:w="1"/><text x="12.7299%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4799%" y="597" width="0.0805%" height="15" fill="rgb(219,138,53)" fg:x="155" fg:w="1"/><text x="12.7299%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4799%" y="581" width="0.0805%" height="15" fill="rgb(211,51,23)" fg:x="155" fg:w="1"/><text x="12.7299%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.4799%" y="565" width="0.0805%" height="15" fill="rgb(247,221,28)" fg:x="155" fg:w="1"/><text x="12.7299%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4799%" y="549" width="0.0805%" height="15" fill="rgb(251,222,45)" fg:x="155" fg:w="1"/><text x="12.7299%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4799%" y="533" width="0.0805%" height="15" fill="rgb(217,162,53)" fg:x="155" fg:w="1"/><text x="12.7299%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4799%" y="517" width="0.0805%" height="15" fill="rgb(229,93,14)" fg:x="155" fg:w="1"/><text x="12.7299%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.4799%" y="501" width="0.0805%" height="15" fill="rgb(209,67,49)" fg:x="155" fg:w="1"/><text x="12.7299%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.4799%" y="485" width="0.0805%" height="15" fill="rgb(213,87,29)" fg:x="155" fg:w="1"/><text x="12.7299%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.5604%" y="709" width="0.1610%" height="15" fill="rgb(205,151,52)" fg:x="156" fg:w="2"/><text x="12.8104%" y="719.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5604%" y="693" width="0.1610%" height="15" fill="rgb(253,215,39)" fg:x="156" fg:w="2"/><text x="12.8104%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.5604%" y="677" width="0.1610%" height="15" fill="rgb(221,220,41)" fg:x="156" fg:w="2"/><text x="12.8104%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.5604%" y="661" width="0.1610%" height="15" fill="rgb(218,133,21)" fg:x="156" fg:w="2"/><text x="12.8104%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5604%" y="645" width="0.1610%" height="15" fill="rgb(221,193,43)" fg:x="156" fg:w="2"/><text x="12.8104%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.5604%" y="629" width="0.1610%" height="15" fill="rgb(240,128,52)" fg:x="156" fg:w="2"/><text x="12.8104%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6409%" y="613" width="0.0805%" height="15" fill="rgb(253,114,12)" fg:x="157" fg:w="1"/><text x="12.8909%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6409%" y="597" width="0.0805%" height="15" fill="rgb(215,223,47)" fg:x="157" fg:w="1"/><text x="12.8909%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="12.7214%" y="645" width="0.0805%" height="15" fill="rgb(248,225,23)" fg:x="158" fg:w="1"/><text x="12.9714%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.7214%" y="661" width="0.1610%" height="15" fill="rgb(250,108,0)" fg:x="158" fg:w="2"/><text x="12.9714%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.8019%" y="645" width="0.0805%" height="15" fill="rgb(228,208,7)" fg:x="159" fg:w="1"/><text x="13.0519%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.8019%" y="629" width="0.0805%" height="15" fill="rgb(244,45,10)" fg:x="159" fg:w="1"/><text x="13.0519%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8019%" y="613" width="0.0805%" height="15" fill="rgb(207,125,25)" fg:x="159" fg:w="1"/><text x="13.0519%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8019%" y="597" width="0.0805%" height="15" fill="rgb(210,195,18)" fg:x="159" fg:w="1"/><text x="13.0519%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8019%" y="581" width="0.0805%" height="15" fill="rgb(249,80,12)" fg:x="159" fg:w="1"/><text x="13.0519%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8019%" y="565" width="0.0805%" height="15" fill="rgb(221,65,9)" fg:x="159" fg:w="1"/><text x="13.0519%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.8019%" y="549" width="0.0805%" height="15" fill="rgb(235,49,36)" fg:x="159" fg:w="1"/><text x="13.0519%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8019%" y="533" width="0.0805%" height="15" fill="rgb(225,32,20)" fg:x="159" fg:w="1"/><text x="13.0519%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8019%" y="517" width="0.0805%" height="15" fill="rgb(215,141,46)" fg:x="159" fg:w="1"/><text x="13.0519%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.8019%" y="501" width="0.0805%" height="15" fill="rgb(250,160,47)" fg:x="159" fg:w="1"/><text x="13.0519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="12.8824%" y="645" width="0.0805%" height="15" fill="rgb(216,222,40)" fg:x="160" fg:w="1"/><text x="13.1324%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.9630%" y="565" width="0.1610%" height="15" fill="rgb(234,217,39)" fg:x="161" fg:w="2"/><text x="13.2130%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0435%" y="549" width="0.0805%" height="15" fill="rgb(207,178,40)" fg:x="162" fg:w="1"/><text x="13.2935%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0435%" y="533" width="0.0805%" height="15" fill="rgb(221,136,13)" fg:x="162" fg:w="1"/><text x="13.2935%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.0435%" y="517" width="0.0805%" height="15" fill="rgb(249,199,10)" fg:x="162" fg:w="1"/><text x="13.2935%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.0435%" y="501" width="0.0805%" height="15" fill="rgb(249,222,13)" fg:x="162" fg:w="1"/><text x="13.2935%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.0435%" y="485" width="0.0805%" height="15" fill="rgb(244,185,38)" fg:x="162" fg:w="1"/><text x="13.2935%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0435%" y="469" width="0.0805%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="1"/><text x="13.2935%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.0435%" y="453" width="0.0805%" height="15" fill="rgb(250,229,37)" fg:x="162" fg:w="1"/><text x="13.2935%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.0435%" y="437" width="0.0805%" height="15" fill="rgb(206,174,23)" fg:x="162" fg:w="1"/><text x="13.2935%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="13.0435%" y="421" width="0.0805%" height="15" fill="rgb(211,33,43)" fg:x="162" fg:w="1"/><text x="13.2935%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="13.0435%" y="405" width="0.0805%" height="15" fill="rgb(245,58,50)" fg:x="162" fg:w="1"/><text x="13.2935%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.9630%" y="613" width="0.2415%" height="15" fill="rgb(244,68,36)" fg:x="161" fg:w="3"/><text x="13.2130%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.9630%" y="597" width="0.2415%" height="15" fill="rgb(232,229,15)" fg:x="161" fg:w="3"/><text x="13.2130%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.9630%" y="581" width="0.2415%" height="15" fill="rgb(254,30,23)" fg:x="161" fg:w="3"/><text x="13.2130%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1240%" y="565" width="0.0805%" height="15" fill="rgb(235,160,14)" fg:x="163" fg:w="1"/><text x="13.3740%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1240%" y="549" width="0.0805%" height="15" fill="rgb(212,155,44)" fg:x="163" fg:w="1"/><text x="13.3740%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.1240%" y="533" width="0.0805%" height="15" fill="rgb(226,2,50)" fg:x="163" fg:w="1"/><text x="13.3740%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.1240%" y="517" width="0.0805%" height="15" fill="rgb(234,177,6)" fg:x="163" fg:w="1"/><text x="13.3740%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.1240%" y="501" width="0.0805%" height="15" fill="rgb(217,24,9)" fg:x="163" fg:w="1"/><text x="13.3740%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.1240%" y="485" width="0.0805%" height="15" fill="rgb(220,13,46)" fg:x="163" fg:w="1"/><text x="13.3740%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.1240%" y="469" width="0.0805%" height="15" fill="rgb(239,221,27)" fg:x="163" fg:w="1"/><text x="13.3740%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.2045%" y="613" width="0.0805%" height="15" fill="rgb(222,198,25)" fg:x="164" fg:w="1"/><text x="13.4545%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.2045%" y="597" width="0.0805%" height="15" fill="rgb(211,99,13)" fg:x="164" fg:w="1"/><text x="13.4545%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="12.7214%" y="693" width="0.6441%" height="15" fill="rgb(232,111,31)" fg:x="158" fg:w="8"/><text x="12.9714%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="12.7214%" y="677" width="0.6441%" height="15" fill="rgb(245,82,37)" fg:x="158" fg:w="8"/><text x="12.9714%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="12.8824%" y="661" width="0.4831%" height="15" fill="rgb(227,149,46)" fg:x="160" fg:w="6"/><text x="13.1324%" y="671.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="12.9630%" y="645" width="0.4026%" height="15" fill="rgb(218,36,50)" fg:x="161" fg:w="5"/><text x="13.2130%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="12.9630%" y="629" width="0.4026%" height="15" fill="rgb(226,80,48)" fg:x="161" fg:w="5"/><text x="13.2130%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2850%" y="613" width="0.0805%" height="15" fill="rgb(238,224,15)" fg:x="165" fg:w="1"/><text x="13.5350%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2850%" y="597" width="0.0805%" height="15" fill="rgb(241,136,10)" fg:x="165" fg:w="1"/><text x="13.5350%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2850%" y="581" width="0.0805%" height="15" fill="rgb(208,32,45)" fg:x="165" fg:w="1"/><text x="13.5350%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2850%" y="565" width="0.0805%" height="15" fill="rgb(207,135,9)" fg:x="165" fg:w="1"/><text x="13.5350%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2850%" y="549" width="0.0805%" height="15" fill="rgb(206,86,44)" fg:x="165" fg:w="1"/><text x="13.5350%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2850%" y="533" width="0.0805%" height="15" fill="rgb(245,177,15)" fg:x="165" fg:w="1"/><text x="13.5350%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2850%" y="517" width="0.0805%" height="15" fill="rgb(206,64,50)" fg:x="165" fg:w="1"/><text x="13.5350%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2850%" y="501" width="0.0805%" height="15" fill="rgb(234,36,40)" fg:x="165" fg:w="1"/><text x="13.5350%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2850%" y="485" width="0.0805%" height="15" fill="rgb(213,64,8)" fg:x="165" fg:w="1"/><text x="13.5350%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2850%" y="469" width="0.0805%" height="15" fill="rgb(210,75,36)" fg:x="165" fg:w="1"/><text x="13.5350%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="13.2850%" y="453" width="0.0805%" height="15" fill="rgb(229,88,21)" fg:x="165" fg:w="1"/><text x="13.5350%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="13.2850%" y="437" width="0.0805%" height="15" fill="rgb(252,204,47)" fg:x="165" fg:w="1"/><text x="13.5350%" y="447.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="13.2850%" y="421" width="0.0805%" height="15" fill="rgb(208,77,27)" fg:x="165" fg:w="1"/><text x="13.5350%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="12.7214%" y="709" width="0.7246%" height="15" fill="rgb(221,76,26)" fg:x="158" fg:w="9"/><text x="12.9714%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.3655%" y="693" width="0.0805%" height="15" fill="rgb(225,139,18)" fg:x="166" fg:w="1"/><text x="13.6155%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3655%" y="677" width="0.0805%" height="15" fill="rgb(230,137,11)" fg:x="166" fg:w="1"/><text x="13.6155%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="13.3655%" y="661" width="0.0805%" height="15" fill="rgb(212,28,1)" fg:x="166" fg:w="1"/><text x="13.6155%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="13.3655%" y="645" width="0.0805%" height="15" fill="rgb(248,164,17)" fg:x="166" fg:w="1"/><text x="13.6155%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.3655%" y="629" width="0.0805%" height="15" fill="rgb(222,171,42)" fg:x="166" fg:w="1"/><text x="13.6155%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.3655%" y="613" width="0.0805%" height="15" fill="rgb(243,84,45)" fg:x="166" fg:w="1"/><text x="13.6155%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.3655%" y="597" width="0.0805%" height="15" fill="rgb(252,49,23)" fg:x="166" fg:w="1"/><text x="13.6155%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.3655%" y="581" width="0.0805%" height="15" fill="rgb(215,19,7)" fg:x="166" fg:w="1"/><text x="13.6155%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.3655%" y="565" width="0.0805%" height="15" fill="rgb(238,81,41)" fg:x="166" fg:w="1"/><text x="13.6155%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.3655%" y="549" width="0.0805%" height="15" fill="rgb(210,199,37)" fg:x="166" fg:w="1"/><text x="13.6155%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.3655%" y="533" width="0.0805%" height="15" fill="rgb(244,192,49)" fg:x="166" fg:w="1"/><text x="13.6155%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.3655%" y="517" width="0.0805%" height="15" fill="rgb(226,211,11)" fg:x="166" fg:w="1"/><text x="13.6155%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.3655%" y="501" width="0.0805%" height="15" fill="rgb(236,162,54)" fg:x="166" fg:w="1"/><text x="13.6155%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.3655%" y="485" width="0.0805%" height="15" fill="rgb(220,229,9)" fg:x="166" fg:w="1"/><text x="13.6155%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="13.4461%" y="693" width="0.0805%" height="15" fill="rgb(250,87,22)" fg:x="167" fg:w="1"/><text x="13.6961%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.4461%" y="677" width="0.0805%" height="15" fill="rgb(239,43,17)" fg:x="167" fg:w="1"/><text x="13.6961%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4461%" y="661" width="0.0805%" height="15" fill="rgb(231,177,25)" fg:x="167" fg:w="1"/><text x="13.6961%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (33 samples, 2.66%)</title><rect x="10.9501%" y="741" width="2.6570%" height="15" fill="rgb(219,179,1)" fg:x="136" fg:w="33"/><text x="11.2001%" y="751.50">pl..</text></g><g><title>plugins_core::tools::set_container (20 samples, 1.61%)</title><rect x="11.9968%" y="725" width="1.6103%" height="15" fill="rgb(238,219,53)" fg:x="149" fg:w="20"/><text x="12.2468%" y="735.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="13.4461%" y="709" width="0.1610%" height="15" fill="rgb(232,167,36)" fg:x="167" fg:w="2"/><text x="13.6961%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.5266%" y="693" width="0.0805%" height="15" fill="rgb(244,19,51)" fg:x="168" fg:w="1"/><text x="13.7766%" y="703.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5266%" y="677" width="0.0805%" height="15" fill="rgb(224,6,22)" fg:x="168" fg:w="1"/><text x="13.7766%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.5266%" y="661" width="0.0805%" height="15" fill="rgb(224,145,5)" fg:x="168" fg:w="1"/><text x="13.7766%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.6071%" y="677" width="0.1610%" height="15" fill="rgb(234,130,49)" fg:x="169" fg:w="2"/><text x="13.8571%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.6071%" y="661" width="0.1610%" height="15" fill="rgb(254,6,2)" fg:x="169" fg:w="2"/><text x="13.8571%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="13.6071%" y="645" width="0.1610%" height="15" fill="rgb(208,96,46)" fg:x="169" fg:w="2"/><text x="13.8571%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="13.6071%" y="629" width="0.1610%" height="15" fill="rgb(239,3,39)" fg:x="169" fg:w="2"/><text x="13.8571%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="13.6071%" y="613" width="0.1610%" height="15" fill="rgb(233,210,1)" fg:x="169" fg:w="2"/><text x="13.8571%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.6071%" y="597" width="0.1610%" height="15" fill="rgb(244,137,37)" fg:x="169" fg:w="2"/><text x="13.8571%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.6071%" y="581" width="0.1610%" height="15" fill="rgb(240,136,2)" fg:x="169" fg:w="2"/><text x="13.8571%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="13.6071%" y="565" width="0.1610%" height="15" fill="rgb(239,18,37)" fg:x="169" fg:w="2"/><text x="13.8571%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="13.6071%" y="549" width="0.1610%" height="15" fill="rgb(218,185,22)" fg:x="169" fg:w="2"/><text x="13.8571%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="13.6071%" y="533" width="0.1610%" height="15" fill="rgb(225,218,4)" fg:x="169" fg:w="2"/><text x="13.8571%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="13.6071%" y="517" width="0.1610%" height="15" fill="rgb(230,182,32)" fg:x="169" fg:w="2"/><text x="13.8571%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.6071%" y="501" width="0.1610%" height="15" fill="rgb(242,56,43)" fg:x="169" fg:w="2"/><text x="13.8571%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="13.6071%" y="709" width="0.2415%" height="15" fill="rgb(233,99,24)" fg:x="169" fg:w="3"/><text x="13.8571%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.6071%" y="693" width="0.2415%" height="15" fill="rgb(234,209,42)" fg:x="169" fg:w="3"/><text x="13.8571%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.7681%" y="677" width="0.0805%" height="15" fill="rgb(227,7,12)" fg:x="171" fg:w="1"/><text x="14.0181%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="661" width="0.0805%" height="15" fill="rgb(245,203,43)" fg:x="171" fg:w="1"/><text x="14.0181%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.7681%" y="645" width="0.0805%" height="15" fill="rgb(238,205,33)" fg:x="171" fg:w="1"/><text x="14.0181%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="629" width="0.0805%" height="15" fill="rgb(231,56,7)" fg:x="171" fg:w="1"/><text x="14.0181%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="613" width="0.0805%" height="15" fill="rgb(244,186,29)" fg:x="171" fg:w="1"/><text x="14.0181%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="597" width="0.0805%" height="15" fill="rgb(234,111,31)" fg:x="171" fg:w="1"/><text x="14.0181%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.7681%" y="581" width="0.0805%" height="15" fill="rgb(241,149,10)" fg:x="171" fg:w="1"/><text x="14.0181%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="565" width="0.0805%" height="15" fill="rgb(249,206,44)" fg:x="171" fg:w="1"/><text x="14.0181%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="549" width="0.0805%" height="15" fill="rgb(251,153,30)" fg:x="171" fg:w="1"/><text x="14.0181%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.7681%" y="533" width="0.0805%" height="15" fill="rgb(239,152,38)" fg:x="171" fg:w="1"/><text x="14.0181%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.7681%" y="517" width="0.0805%" height="15" fill="rgb(249,139,47)" fg:x="171" fg:w="1"/><text x="14.0181%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.7681%" y="501" width="0.0805%" height="15" fill="rgb(244,64,35)" fg:x="171" fg:w="1"/><text x="14.0181%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.7681%" y="485" width="0.0805%" height="15" fill="rgb(216,46,15)" fg:x="171" fg:w="1"/><text x="14.0181%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.7681%" y="469" width="0.0805%" height="15" fill="rgb(250,74,19)" fg:x="171" fg:w="1"/><text x="14.0181%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.7681%" y="453" width="0.0805%" height="15" fill="rgb(249,42,33)" fg:x="171" fg:w="1"/><text x="14.0181%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.7681%" y="437" width="0.0805%" height="15" fill="rgb(242,149,17)" fg:x="171" fg:w="1"/><text x="14.0181%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.7681%" y="421" width="0.0805%" height="15" fill="rgb(244,29,21)" fg:x="171" fg:w="1"/><text x="14.0181%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.7681%" y="405" width="0.0805%" height="15" fill="rgb(220,130,37)" fg:x="171" fg:w="1"/><text x="14.0181%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.7681%" y="389" width="0.0805%" height="15" fill="rgb(211,67,2)" fg:x="171" fg:w="1"/><text x="14.0181%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.7681%" y="373" width="0.0805%" height="15" fill="rgb(235,68,52)" fg:x="171" fg:w="1"/><text x="14.0181%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.7681%" y="357" width="0.0805%" height="15" fill="rgb(246,142,3)" fg:x="171" fg:w="1"/><text x="14.0181%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.7681%" y="341" width="0.0805%" height="15" fill="rgb(241,25,7)" fg:x="171" fg:w="1"/><text x="14.0181%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7681%" y="325" width="0.0805%" height="15" fill="rgb(242,119,39)" fg:x="171" fg:w="1"/><text x="14.0181%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.8486%" y="645" width="0.1610%" height="15" fill="rgb(241,98,45)" fg:x="172" fg:w="2"/><text x="14.0986%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.8486%" y="629" width="0.1610%" height="15" fill="rgb(254,28,30)" fg:x="172" fg:w="2"/><text x="14.0986%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.8486%" y="613" width="0.1610%" height="15" fill="rgb(241,142,54)" fg:x="172" fg:w="2"/><text x="14.0986%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.8486%" y="661" width="0.2415%" height="15" fill="rgb(222,85,15)" fg:x="172" fg:w="3"/><text x="14.0986%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0097%" y="645" width="0.0805%" height="15" fill="rgb(210,85,47)" fg:x="174" fg:w="1"/><text x="14.2597%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0097%" y="629" width="0.0805%" height="15" fill="rgb(224,206,25)" fg:x="174" fg:w="1"/><text x="14.2597%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0097%" y="613" width="0.0805%" height="15" fill="rgb(243,201,19)" fg:x="174" fg:w="1"/><text x="14.2597%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0097%" y="597" width="0.0805%" height="15" fill="rgb(236,59,4)" fg:x="174" fg:w="1"/><text x="14.2597%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0097%" y="581" width="0.0805%" height="15" fill="rgb(254,179,45)" fg:x="174" fg:w="1"/><text x="14.2597%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0097%" y="565" width="0.0805%" height="15" fill="rgb(226,14,10)" fg:x="174" fg:w="1"/><text x="14.2597%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0097%" y="549" width="0.0805%" height="15" fill="rgb(244,27,41)" fg:x="174" fg:w="1"/><text x="14.2597%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.0097%" y="533" width="0.0805%" height="15" fill="rgb(235,35,32)" fg:x="174" fg:w="1"/><text x="14.2597%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.0097%" y="517" width="0.0805%" height="15" fill="rgb(218,68,31)" fg:x="174" fg:w="1"/><text x="14.2597%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.0097%" y="501" width="0.0805%" height="15" fill="rgb(207,120,37)" fg:x="174" fg:w="1"/><text x="14.2597%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.0097%" y="485" width="0.0805%" height="15" fill="rgb(227,98,0)" fg:x="174" fg:w="1"/><text x="14.2597%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0097%" y="469" width="0.0805%" height="15" fill="rgb(207,7,3)" fg:x="174" fg:w="1"/><text x="14.2597%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="13.8486%" y="709" width="0.4026%" height="15" fill="rgb(206,98,19)" fg:x="172" fg:w="5"/><text x="14.0986%" y="719.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.8486%" y="693" width="0.4026%" height="15" fill="rgb(217,5,26)" fg:x="172" fg:w="5"/><text x="14.0986%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.8486%" y="677" width="0.4026%" height="15" fill="rgb(235,190,38)" fg:x="172" fg:w="5"/><text x="14.0986%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0902%" y="661" width="0.1610%" height="15" fill="rgb(247,86,24)" fg:x="175" fg:w="2"/><text x="14.3402%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="645" width="0.1610%" height="15" fill="rgb(205,101,16)" fg:x="175" fg:w="2"/><text x="14.3402%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0902%" y="629" width="0.1610%" height="15" fill="rgb(246,168,33)" fg:x="175" fg:w="2"/><text x="14.3402%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0902%" y="613" width="0.1610%" height="15" fill="rgb(231,114,1)" fg:x="175" fg:w="2"/><text x="14.3402%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.1707%" y="597" width="0.0805%" height="15" fill="rgb(207,184,53)" fg:x="176" fg:w="1"/><text x="14.4207%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1707%" y="581" width="0.0805%" height="15" fill="rgb(224,95,51)" fg:x="176" fg:w="1"/><text x="14.4207%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1707%" y="565" width="0.0805%" height="15" fill="rgb(212,188,45)" fg:x="176" fg:w="1"/><text x="14.4207%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1707%" y="549" width="0.0805%" height="15" fill="rgb(223,154,38)" fg:x="176" fg:w="1"/><text x="14.4207%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1707%" y="533" width="0.0805%" height="15" fill="rgb(251,22,52)" fg:x="176" fg:w="1"/><text x="14.4207%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.2512%" y="693" width="0.0805%" height="15" fill="rgb(229,209,22)" fg:x="177" fg:w="1"/><text x="14.5012%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2512%" y="677" width="0.0805%" height="15" fill="rgb(234,138,34)" fg:x="177" fg:w="1"/><text x="14.5012%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.2512%" y="661" width="0.0805%" height="15" fill="rgb(212,95,11)" fg:x="177" fg:w="1"/><text x="14.5012%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2512%" y="645" width="0.0805%" height="15" fill="rgb(240,179,47)" fg:x="177" fg:w="1"/><text x="14.5012%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2512%" y="629" width="0.0805%" height="15" fill="rgb(240,163,11)" fg:x="177" fg:w="1"/><text x="14.5012%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="14.2512%" y="709" width="0.2415%" height="15" fill="rgb(236,37,12)" fg:x="177" fg:w="3"/><text x="14.5012%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.3317%" y="693" width="0.1610%" height="15" fill="rgb(232,164,16)" fg:x="178" fg:w="2"/><text x="14.5817%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4122%" y="677" width="0.0805%" height="15" fill="rgb(244,205,15)" fg:x="179" fg:w="1"/><text x="14.6622%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4122%" y="661" width="0.0805%" height="15" fill="rgb(223,117,47)" fg:x="179" fg:w="1"/><text x="14.6622%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4122%" y="645" width="0.0805%" height="15" fill="rgb(244,107,35)" fg:x="179" fg:w="1"/><text x="14.6622%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4928%" y="693" width="0.0805%" height="15" fill="rgb(205,140,8)" fg:x="180" fg:w="1"/><text x="14.7428%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="14.5733%" y="661" width="0.0805%" height="15" fill="rgb(228,84,46)" fg:x="181" fg:w="1"/><text x="14.8233%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5733%" y="645" width="0.0805%" height="15" fill="rgb(254,188,9)" fg:x="181" fg:w="1"/><text x="14.8233%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7343%" y="565" width="0.0805%" height="15" fill="rgb(206,112,54)" fg:x="183" fg:w="1"/><text x="14.9843%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7343%" y="549" width="0.0805%" height="15" fill="rgb(216,84,49)" fg:x="183" fg:w="1"/><text x="14.9843%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8148%" y="485" width="0.0805%" height="15" fill="rgb(214,194,35)" fg:x="184" fg:w="1"/><text x="15.0648%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8148%" y="469" width="0.0805%" height="15" fill="rgb(249,28,3)" fg:x="184" fg:w="1"/><text x="15.0648%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.8148%" y="453" width="0.0805%" height="15" fill="rgb(222,56,52)" fg:x="184" fg:w="1"/><text x="15.0648%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.8148%" y="437" width="0.0805%" height="15" fill="rgb(245,217,50)" fg:x="184" fg:w="1"/><text x="15.0648%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.8148%" y="421" width="0.0805%" height="15" fill="rgb(213,201,24)" fg:x="184" fg:w="1"/><text x="15.0648%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.8148%" y="405" width="0.0805%" height="15" fill="rgb(248,116,28)" fg:x="184" fg:w="1"/><text x="15.0648%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8148%" y="389" width="0.0805%" height="15" fill="rgb(219,72,43)" fg:x="184" fg:w="1"/><text x="15.0648%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="14.6538%" y="629" width="0.3221%" height="15" fill="rgb(209,138,14)" fg:x="182" fg:w="4"/><text x="14.9038%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="14.6538%" y="613" width="0.3221%" height="15" fill="rgb(222,18,33)" fg:x="182" fg:w="4"/><text x="14.9038%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="14.6538%" y="597" width="0.3221%" height="15" fill="rgb(213,199,7)" fg:x="182" fg:w="4"/><text x="14.9038%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.7343%" y="581" width="0.2415%" height="15" fill="rgb(250,110,10)" fg:x="183" fg:w="3"/><text x="14.9843%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.8148%" y="565" width="0.1610%" height="15" fill="rgb(248,123,6)" fg:x="184" fg:w="2"/><text x="15.0648%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.8148%" y="549" width="0.1610%" height="15" fill="rgb(206,91,31)" fg:x="184" fg:w="2"/><text x="15.0648%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="14.8148%" y="533" width="0.1610%" height="15" fill="rgb(211,154,13)" fg:x="184" fg:w="2"/><text x="15.0648%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="14.8148%" y="517" width="0.1610%" height="15" fill="rgb(225,148,7)" fg:x="184" fg:w="2"/><text x="15.0648%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="14.8148%" y="501" width="0.1610%" height="15" fill="rgb(220,160,43)" fg:x="184" fg:w="2"/><text x="15.0648%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.8953%" y="485" width="0.0805%" height="15" fill="rgb(213,52,39)" fg:x="185" fg:w="1"/><text x="15.1453%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.8953%" y="469" width="0.0805%" height="15" fill="rgb(243,137,7)" fg:x="185" fg:w="1"/><text x="15.1453%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.9758%" y="629" width="0.0805%" height="15" fill="rgb(230,79,13)" fg:x="186" fg:w="1"/><text x="15.2258%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.9758%" y="613" width="0.0805%" height="15" fill="rgb(247,105,23)" fg:x="186" fg:w="1"/><text x="15.2258%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.0564%" y="597" width="0.0805%" height="15" fill="rgb(223,179,41)" fg:x="187" fg:w="1"/><text x="15.3064%" y="607.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="14.6538%" y="661" width="0.5636%" height="15" fill="rgb(218,9,34)" fg:x="182" fg:w="7"/><text x="14.9038%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="14.6538%" y="645" width="0.5636%" height="15" fill="rgb(222,106,8)" fg:x="182" fg:w="7"/><text x="14.9038%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.0564%" y="629" width="0.1610%" height="15" fill="rgb(211,220,0)" fg:x="187" fg:w="2"/><text x="15.3064%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.0564%" y="613" width="0.1610%" height="15" fill="rgb(229,52,16)" fg:x="187" fg:w="2"/><text x="15.3064%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="597" width="0.0805%" height="15" fill="rgb(212,155,18)" fg:x="188" fg:w="1"/><text x="15.3869%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="581" width="0.0805%" height="15" fill="rgb(242,21,14)" fg:x="188" fg:w="1"/><text x="15.3869%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.1369%" y="565" width="0.0805%" height="15" fill="rgb(222,19,48)" fg:x="188" fg:w="1"/><text x="15.3869%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="549" width="0.0805%" height="15" fill="rgb(232,45,27)" fg:x="188" fg:w="1"/><text x="15.3869%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="533" width="0.0805%" height="15" fill="rgb(249,103,42)" fg:x="188" fg:w="1"/><text x="15.3869%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="517" width="0.0805%" height="15" fill="rgb(246,81,33)" fg:x="188" fg:w="1"/><text x="15.3869%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1369%" y="501" width="0.0805%" height="15" fill="rgb(252,33,42)" fg:x="188" fg:w="1"/><text x="15.3869%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1369%" y="485" width="0.0805%" height="15" fill="rgb(209,212,41)" fg:x="188" fg:w="1"/><text x="15.3869%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.1369%" y="469" width="0.0805%" height="15" fill="rgb(207,154,6)" fg:x="188" fg:w="1"/><text x="15.3869%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.1369%" y="453" width="0.0805%" height="15" fill="rgb(223,64,47)" fg:x="188" fg:w="1"/><text x="15.3869%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (9 samples, 0.72%)</title><rect x="14.5733%" y="693" width="0.7246%" height="15" fill="rgb(211,161,38)" fg:x="181" fg:w="9"/><text x="14.8233%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (9 samples, 0.72%)</title><rect x="14.5733%" y="677" width="0.7246%" height="15" fill="rgb(219,138,40)" fg:x="181" fg:w="9"/><text x="14.8233%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.2174%" y="661" width="0.0805%" height="15" fill="rgb(241,228,46)" fg:x="189" fg:w="1"/><text x="15.4674%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.2174%" y="645" width="0.0805%" height="15" fill="rgb(223,209,38)" fg:x="189" fg:w="1"/><text x="15.4674%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2174%" y="629" width="0.0805%" height="15" fill="rgb(236,164,45)" fg:x="189" fg:w="1"/><text x="15.4674%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2174%" y="613" width="0.0805%" height="15" fill="rgb(231,15,5)" fg:x="189" fg:w="1"/><text x="15.4674%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2174%" y="597" width="0.0805%" height="15" fill="rgb(252,35,15)" fg:x="189" fg:w="1"/><text x="15.4674%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2174%" y="581" width="0.0805%" height="15" fill="rgb(248,181,18)" fg:x="189" fg:w="1"/><text x="15.4674%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.2174%" y="565" width="0.0805%" height="15" fill="rgb(233,39,42)" fg:x="189" fg:w="1"/><text x="15.4674%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2174%" y="549" width="0.0805%" height="15" fill="rgb(238,110,33)" fg:x="189" fg:w="1"/><text x="15.4674%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2174%" y="533" width="0.0805%" height="15" fill="rgb(233,195,10)" fg:x="189" fg:w="1"/><text x="15.4674%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.89%)</title><rect x="14.4928%" y="709" width="0.8857%" height="15" fill="rgb(254,105,3)" fg:x="180" fg:w="11"/><text x="14.7428%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="15.2979%" y="693" width="0.0805%" height="15" fill="rgb(221,225,9)" fg:x="190" fg:w="1"/><text x="15.5479%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2979%" y="677" width="0.0805%" height="15" fill="rgb(224,227,45)" fg:x="190" fg:w="1"/><text x="15.5479%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2979%" y="661" width="0.0805%" height="15" fill="rgb(229,198,43)" fg:x="190" fg:w="1"/><text x="15.5479%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2979%" y="645" width="0.0805%" height="15" fill="rgb(206,209,35)" fg:x="190" fg:w="1"/><text x="15.5479%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2979%" y="629" width="0.0805%" height="15" fill="rgb(245,195,53)" fg:x="190" fg:w="1"/><text x="15.5479%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2979%" y="613" width="0.0805%" height="15" fill="rgb(240,92,26)" fg:x="190" fg:w="1"/><text x="15.5479%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2979%" y="597" width="0.0805%" height="15" fill="rgb(207,40,23)" fg:x="190" fg:w="1"/><text x="15.5479%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2979%" y="581" width="0.0805%" height="15" fill="rgb(223,111,35)" fg:x="190" fg:w="1"/><text x="15.5479%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.2979%" y="565" width="0.0805%" height="15" fill="rgb(229,147,28)" fg:x="190" fg:w="1"/><text x="15.5479%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.2979%" y="549" width="0.0805%" height="15" fill="rgb(211,29,28)" fg:x="190" fg:w="1"/><text x="15.5479%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.2979%" y="533" width="0.0805%" height="15" fill="rgb(228,72,33)" fg:x="190" fg:w="1"/><text x="15.5479%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.2979%" y="517" width="0.0805%" height="15" fill="rgb(205,214,31)" fg:x="190" fg:w="1"/><text x="15.5479%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2979%" y="501" width="0.0805%" height="15" fill="rgb(224,111,15)" fg:x="190" fg:w="1"/><text x="15.5479%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.85%)</title><rect x="13.6071%" y="741" width="1.8519%" height="15" fill="rgb(253,21,26)" fg:x="169" fg:w="23"/><text x="13.8571%" y="751.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.85%)</title><rect x="13.6071%" y="725" width="1.8519%" height="15" fill="rgb(245,139,43)" fg:x="169" fg:w="23"/><text x="13.8571%" y="735.50">&lt;..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="15.3784%" y="709" width="0.0805%" height="15" fill="rgb(252,170,7)" fg:x="191" fg:w="1"/><text x="15.6284%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="15.4589%" y="741" width="0.0805%" height="15" fill="rgb(231,118,14)" fg:x="192" fg:w="1"/><text x="15.7089%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="15.4589%" y="725" width="0.0805%" height="15" fill="rgb(238,83,0)" fg:x="192" fg:w="1"/><text x="15.7089%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.4589%" y="709" width="0.0805%" height="15" fill="rgb(221,39,39)" fg:x="192" fg:w="1"/><text x="15.7089%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.4589%" y="693" width="0.0805%" height="15" fill="rgb(222,119,46)" fg:x="192" fg:w="1"/><text x="15.7089%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.5395%" y="709" width="0.0805%" height="15" fill="rgb(222,165,49)" fg:x="193" fg:w="1"/><text x="15.7895%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="15.5395%" y="693" width="0.0805%" height="15" fill="rgb(219,113,52)" fg:x="193" fg:w="1"/><text x="15.7895%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.5395%" y="677" width="0.0805%" height="15" fill="rgb(214,7,15)" fg:x="193" fg:w="1"/><text x="15.7895%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.5395%" y="661" width="0.0805%" height="15" fill="rgb(235,32,4)" fg:x="193" fg:w="1"/><text x="15.7895%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.5395%" y="645" width="0.0805%" height="15" fill="rgb(238,90,54)" fg:x="193" fg:w="1"/><text x="15.7895%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.6200%" y="693" width="0.0805%" height="15" fill="rgb(213,208,19)" fg:x="194" fg:w="1"/><text x="15.8700%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.6200%" y="677" width="0.0805%" height="15" fill="rgb(233,156,4)" fg:x="194" fg:w="1"/><text x="15.8700%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7005%" y="597" width="0.0805%" height="15" fill="rgb(207,194,5)" fg:x="195" fg:w="1"/><text x="15.9505%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.7005%" y="613" width="0.2415%" height="15" fill="rgb(206,111,30)" fg:x="195" fg:w="3"/><text x="15.9505%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.7810%" y="597" width="0.1610%" height="15" fill="rgb(243,70,54)" fg:x="196" fg:w="2"/><text x="16.0310%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.7810%" y="581" width="0.1610%" height="15" fill="rgb(242,28,8)" fg:x="196" fg:w="2"/><text x="16.0310%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="15.7810%" y="565" width="0.1610%" height="15" fill="rgb(219,106,18)" fg:x="196" fg:w="2"/><text x="16.0310%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="15.7810%" y="549" width="0.1610%" height="15" fill="rgb(244,222,10)" fg:x="196" fg:w="2"/><text x="16.0310%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="15.7810%" y="533" width="0.1610%" height="15" fill="rgb(236,179,52)" fg:x="196" fg:w="2"/><text x="16.0310%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="15.7810%" y="517" width="0.1610%" height="15" fill="rgb(213,23,39)" fg:x="196" fg:w="2"/><text x="16.0310%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="15.7810%" y="501" width="0.1610%" height="15" fill="rgb(238,48,10)" fg:x="196" fg:w="2"/><text x="16.0310%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="15.7810%" y="485" width="0.1610%" height="15" fill="rgb(251,196,23)" fg:x="196" fg:w="2"/><text x="16.0310%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="15.7810%" y="469" width="0.1610%" height="15" fill="rgb(250,152,24)" fg:x="196" fg:w="2"/><text x="16.0310%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="15.7810%" y="453" width="0.1610%" height="15" fill="rgb(209,150,17)" fg:x="196" fg:w="2"/><text x="16.0310%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="15.7810%" y="437" width="0.1610%" height="15" fill="rgb(234,202,34)" fg:x="196" fg:w="2"/><text x="16.0310%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8615%" y="421" width="0.0805%" height="15" fill="rgb(253,148,53)" fg:x="197" fg:w="1"/><text x="16.1115%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="15.5395%" y="725" width="0.4831%" height="15" fill="rgb(218,129,16)" fg:x="193" fg:w="6"/><text x="15.7895%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="15.6200%" y="709" width="0.4026%" height="15" fill="rgb(216,85,19)" fg:x="194" fg:w="5"/><text x="15.8700%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="15.7005%" y="693" width="0.3221%" height="15" fill="rgb(235,228,7)" fg:x="195" fg:w="4"/><text x="15.9505%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.7005%" y="677" width="0.3221%" height="15" fill="rgb(245,175,0)" fg:x="195" fg:w="4"/><text x="15.9505%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.7005%" y="661" width="0.3221%" height="15" fill="rgb(208,168,36)" fg:x="195" fg:w="4"/><text x="15.9505%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.7005%" y="645" width="0.3221%" height="15" fill="rgb(246,171,24)" fg:x="195" fg:w="4"/><text x="15.9505%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="15.7005%" y="629" width="0.3221%" height="15" fill="rgb(215,142,24)" fg:x="195" fg:w="4"/><text x="15.9505%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9420%" y="613" width="0.0805%" height="15" fill="rgb(250,187,7)" fg:x="198" fg:w="1"/><text x="16.1920%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0225%" y="725" width="0.0805%" height="15" fill="rgb(228,66,33)" fg:x="199" fg:w="1"/><text x="16.2725%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0225%" y="709" width="0.0805%" height="15" fill="rgb(234,215,21)" fg:x="199" fg:w="1"/><text x="16.2725%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0225%" y="693" width="0.0805%" height="15" fill="rgb(222,191,20)" fg:x="199" fg:w="1"/><text x="16.2725%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.0225%" y="677" width="0.0805%" height="15" fill="rgb(245,79,54)" fg:x="199" fg:w="1"/><text x="16.2725%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.0225%" y="661" width="0.0805%" height="15" fill="rgb(240,10,37)" fg:x="199" fg:w="1"/><text x="16.2725%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.0225%" y="645" width="0.0805%" height="15" fill="rgb(214,192,32)" fg:x="199" fg:w="1"/><text x="16.2725%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0225%" y="629" width="0.0805%" height="15" fill="rgb(209,36,54)" fg:x="199" fg:w="1"/><text x="16.2725%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0225%" y="613" width="0.0805%" height="15" fill="rgb(220,10,11)" fg:x="199" fg:w="1"/><text x="16.2725%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0225%" y="597" width="0.0805%" height="15" fill="rgb(221,106,17)" fg:x="199" fg:w="1"/><text x="16.2725%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0225%" y="581" width="0.0805%" height="15" fill="rgb(251,142,44)" fg:x="199" fg:w="1"/><text x="16.2725%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0225%" y="565" width="0.0805%" height="15" fill="rgb(238,13,15)" fg:x="199" fg:w="1"/><text x="16.2725%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0225%" y="549" width="0.0805%" height="15" fill="rgb(208,107,27)" fg:x="199" fg:w="1"/><text x="16.2725%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0225%" y="533" width="0.0805%" height="15" fill="rgb(205,136,37)" fg:x="199" fg:w="1"/><text x="16.2725%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1031%" y="693" width="0.0805%" height="15" fill="rgb(250,205,27)" fg:x="200" fg:w="1"/><text x="16.3531%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.1031%" y="677" width="0.0805%" height="15" fill="rgb(210,80,43)" fg:x="200" fg:w="1"/><text x="16.3531%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1836%" y="693" width="0.0805%" height="15" fill="rgb(247,160,36)" fg:x="201" fg:w="1"/><text x="16.4336%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1836%" y="677" width="0.0805%" height="15" fill="rgb(234,13,49)" fg:x="201" fg:w="1"/><text x="16.4336%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.1836%" y="661" width="0.0805%" height="15" fill="rgb(234,122,0)" fg:x="201" fg:w="1"/><text x="16.4336%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.2641%" y="693" width="0.0805%" height="15" fill="rgb(207,146,38)" fg:x="202" fg:w="1"/><text x="16.5141%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2641%" y="677" width="0.0805%" height="15" fill="rgb(207,177,25)" fg:x="202" fg:w="1"/><text x="16.5141%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2641%" y="661" width="0.0805%" height="15" fill="rgb(211,178,42)" fg:x="202" fg:w="1"/><text x="16.5141%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (5 samples, 0.40%)</title><rect x="16.1031%" y="725" width="0.4026%" height="15" fill="rgb(230,69,54)" fg:x="200" fg:w="5"/><text x="16.3531%" y="735.50"></text></g><g><title>engine::users::model::add_username_to_key (5 samples, 0.40%)</title><rect x="16.1031%" y="709" width="0.4026%" height="15" fill="rgb(214,135,41)" fg:x="200" fg:w="5"/><text x="16.3531%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.3446%" y="693" width="0.1610%" height="15" fill="rgb(237,67,25)" fg:x="203" fg:w="2"/><text x="16.5946%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.4251%" y="677" width="0.0805%" height="15" fill="rgb(222,189,50)" fg:x="204" fg:w="1"/><text x="16.6751%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.4251%" y="661" width="0.0805%" height="15" fill="rgb(245,148,34)" fg:x="204" fg:w="1"/><text x="16.6751%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.4251%" y="645" width="0.0805%" height="15" fill="rgb(222,29,6)" fg:x="204" fg:w="1"/><text x="16.6751%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="16.5056%" y="661" width="0.0805%" height="15" fill="rgb(221,189,43)" fg:x="205" fg:w="1"/><text x="16.7556%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.5056%" y="645" width="0.0805%" height="15" fill="rgb(207,36,27)" fg:x="205" fg:w="1"/><text x="16.7556%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.5862%" y="645" width="0.0805%" height="15" fill="rgb(217,90,24)" fg:x="206" fg:w="1"/><text x="16.8362%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5862%" y="629" width="0.0805%" height="15" fill="rgb(224,66,35)" fg:x="206" fg:w="1"/><text x="16.8362%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="16.5056%" y="677" width="0.2415%" height="15" fill="rgb(221,13,50)" fg:x="205" fg:w="3"/><text x="16.7556%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="16.5862%" y="661" width="0.1610%" height="15" fill="rgb(236,68,49)" fg:x="206" fg:w="2"/><text x="16.8362%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6667%" y="645" width="0.0805%" height="15" fill="rgb(229,146,28)" fg:x="207" fg:w="1"/><text x="16.9167%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="16.7472%" y="645" width="0.0805%" height="15" fill="rgb(225,31,38)" fg:x="208" fg:w="1"/><text x="16.9972%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.7472%" y="629" width="0.0805%" height="15" fill="rgb(250,208,3)" fg:x="208" fg:w="1"/><text x="16.9972%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9082%" y="517" width="0.0805%" height="15" fill="rgb(246,54,23)" fg:x="210" fg:w="1"/><text x="17.1582%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.8277%" y="533" width="0.2415%" height="15" fill="rgb(243,76,11)" fg:x="209" fg:w="3"/><text x="17.0777%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9887%" y="517" width="0.0805%" height="15" fill="rgb(245,21,50)" fg:x="211" fg:w="1"/><text x="17.2387%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.8277%" y="581" width="0.3221%" height="15" fill="rgb(228,9,43)" fg:x="209" fg:w="4"/><text x="17.0777%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.8277%" y="565" width="0.3221%" height="15" fill="rgb(208,100,47)" fg:x="209" fg:w="4"/><text x="17.0777%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="16.8277%" y="549" width="0.3221%" height="15" fill="rgb(232,26,8)" fg:x="209" fg:w="4"/><text x="17.0777%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0692%" y="533" width="0.0805%" height="15" fill="rgb(216,166,38)" fg:x="212" fg:w="1"/><text x="17.3192%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.0692%" y="517" width="0.0805%" height="15" fill="rgb(251,202,51)" fg:x="212" fg:w="1"/><text x="17.3192%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.0692%" y="501" width="0.0805%" height="15" fill="rgb(254,216,34)" fg:x="212" fg:w="1"/><text x="17.3192%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.0692%" y="485" width="0.0805%" height="15" fill="rgb(251,32,27)" fg:x="212" fg:w="1"/><text x="17.3192%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.0692%" y="469" width="0.0805%" height="15" fill="rgb(208,127,28)" fg:x="212" fg:w="1"/><text x="17.3192%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.0692%" y="453" width="0.0805%" height="15" fill="rgb(224,137,22)" fg:x="212" fg:w="1"/><text x="17.3192%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.0692%" y="437" width="0.0805%" height="15" fill="rgb(254,70,32)" fg:x="212" fg:w="1"/><text x="17.3192%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.0692%" y="421" width="0.0805%" height="15" fill="rgb(229,75,37)" fg:x="212" fg:w="1"/><text x="17.3192%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.0692%" y="405" width="0.0805%" height="15" fill="rgb(252,64,23)" fg:x="212" fg:w="1"/><text x="17.3192%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.0692%" y="389" width="0.0805%" height="15" fill="rgb(232,162,48)" fg:x="212" fg:w="1"/><text x="17.3192%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.0692%" y="373" width="0.0805%" height="15" fill="rgb(246,160,12)" fg:x="212" fg:w="1"/><text x="17.3192%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0692%" y="357" width="0.0805%" height="15" fill="rgb(247,166,0)" fg:x="212" fg:w="1"/><text x="17.3192%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="16.8277%" y="597" width="0.4026%" height="15" fill="rgb(249,219,21)" fg:x="209" fg:w="5"/><text x="17.0777%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1498%" y="581" width="0.0805%" height="15" fill="rgb(205,209,3)" fg:x="213" fg:w="1"/><text x="17.3998%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1498%" y="565" width="0.0805%" height="15" fill="rgb(243,44,1)" fg:x="213" fg:w="1"/><text x="17.3998%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.1498%" y="549" width="0.0805%" height="15" fill="rgb(206,159,16)" fg:x="213" fg:w="1"/><text x="17.3998%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.1498%" y="533" width="0.0805%" height="15" fill="rgb(244,77,30)" fg:x="213" fg:w="1"/><text x="17.3998%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.1498%" y="517" width="0.0805%" height="15" fill="rgb(218,69,12)" fg:x="213" fg:w="1"/><text x="17.3998%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1498%" y="501" width="0.0805%" height="15" fill="rgb(212,87,7)" fg:x="213" fg:w="1"/><text x="17.3998%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.1498%" y="485" width="0.0805%" height="15" fill="rgb(245,114,25)" fg:x="213" fg:w="1"/><text x="17.3998%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.1498%" y="469" width="0.0805%" height="15" fill="rgb(210,61,42)" fg:x="213" fg:w="1"/><text x="17.3998%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.1498%" y="453" width="0.0805%" height="15" fill="rgb(211,52,33)" fg:x="213" fg:w="1"/><text x="17.3998%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.1498%" y="437" width="0.0805%" height="15" fill="rgb(234,58,33)" fg:x="213" fg:w="1"/><text x="17.3998%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.1498%" y="421" width="0.0805%" height="15" fill="rgb(220,115,36)" fg:x="213" fg:w="1"/><text x="17.3998%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1498%" y="405" width="0.0805%" height="15" fill="rgb(243,153,54)" fg:x="213" fg:w="1"/><text x="17.3998%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="597" width="0.0805%" height="15" fill="rgb(251,47,18)" fg:x="214" fg:w="1"/><text x="17.4803%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="581" width="0.0805%" height="15" fill="rgb(242,102,42)" fg:x="214" fg:w="1"/><text x="17.4803%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="565" width="0.0805%" height="15" fill="rgb(234,31,38)" fg:x="214" fg:w="1"/><text x="17.4803%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="549" width="0.0805%" height="15" fill="rgb(221,117,51)" fg:x="214" fg:w="1"/><text x="17.4803%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="533" width="0.0805%" height="15" fill="rgb(212,20,18)" fg:x="214" fg:w="1"/><text x="17.4803%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.2303%" y="517" width="0.0805%" height="15" fill="rgb(245,133,36)" fg:x="214" fg:w="1"/><text x="17.4803%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2303%" y="501" width="0.0805%" height="15" fill="rgb(212,6,19)" fg:x="214" fg:w="1"/><text x="17.4803%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="16.7472%" y="677" width="0.6441%" height="15" fill="rgb(218,1,36)" fg:x="208" fg:w="8"/><text x="16.9972%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="16.7472%" y="661" width="0.6441%" height="15" fill="rgb(246,84,54)" fg:x="208" fg:w="8"/><text x="16.9972%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="16.8277%" y="645" width="0.5636%" height="15" fill="rgb(242,110,6)" fg:x="209" fg:w="7"/><text x="17.0777%" y="655.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="16.8277%" y="629" width="0.5636%" height="15" fill="rgb(214,47,5)" fg:x="209" fg:w="7"/><text x="17.0777%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="16.8277%" y="613" width="0.5636%" height="15" fill="rgb(218,159,25)" fg:x="209" fg:w="7"/><text x="17.0777%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3108%" y="597" width="0.0805%" height="15" fill="rgb(215,211,28)" fg:x="215" fg:w="1"/><text x="17.5608%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3108%" y="581" width="0.0805%" height="15" fill="rgb(238,59,32)" fg:x="215" fg:w="1"/><text x="17.5608%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3108%" y="565" width="0.0805%" height="15" fill="rgb(226,82,3)" fg:x="215" fg:w="1"/><text x="17.5608%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3108%" y="549" width="0.0805%" height="15" fill="rgb(240,164,32)" fg:x="215" fg:w="1"/><text x="17.5608%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.3108%" y="533" width="0.0805%" height="15" fill="rgb(232,46,7)" fg:x="215" fg:w="1"/><text x="17.5608%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3108%" y="517" width="0.0805%" height="15" fill="rgb(229,129,53)" fg:x="215" fg:w="1"/><text x="17.5608%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3108%" y="501" width="0.0805%" height="15" fill="rgb(234,188,29)" fg:x="215" fg:w="1"/><text x="17.5608%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3108%" y="485" width="0.0805%" height="15" fill="rgb(246,141,4)" fg:x="215" fg:w="1"/><text x="17.5608%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3913%" y="469" width="0.0805%" height="15" fill="rgb(229,23,39)" fg:x="216" fg:w="1"/><text x="17.6413%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="17.3913%" y="645" width="0.1610%" height="15" fill="rgb(206,12,3)" fg:x="216" fg:w="2"/><text x="17.6413%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="17.3913%" y="629" width="0.1610%" height="15" fill="rgb(252,226,20)" fg:x="216" fg:w="2"/><text x="17.6413%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="17.3913%" y="613" width="0.1610%" height="15" fill="rgb(216,123,35)" fg:x="216" fg:w="2"/><text x="17.6413%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="597" width="0.1610%" height="15" fill="rgb(212,68,40)" fg:x="216" fg:w="2"/><text x="17.6413%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="17.3913%" y="581" width="0.1610%" height="15" fill="rgb(254,125,32)" fg:x="216" fg:w="2"/><text x="17.6413%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="565" width="0.1610%" height="15" fill="rgb(253,97,22)" fg:x="216" fg:w="2"/><text x="17.6413%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="549" width="0.1610%" height="15" fill="rgb(241,101,14)" fg:x="216" fg:w="2"/><text x="17.6413%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="533" width="0.1610%" height="15" fill="rgb(238,103,29)" fg:x="216" fg:w="2"/><text x="17.6413%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="17.3913%" y="517" width="0.1610%" height="15" fill="rgb(233,195,47)" fg:x="216" fg:w="2"/><text x="17.6413%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="501" width="0.1610%" height="15" fill="rgb(246,218,30)" fg:x="216" fg:w="2"/><text x="17.6413%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="17.3913%" y="485" width="0.1610%" height="15" fill="rgb(219,145,47)" fg:x="216" fg:w="2"/><text x="17.6413%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.4718%" y="469" width="0.0805%" height="15" fill="rgb(243,12,26)" fg:x="217" fg:w="1"/><text x="17.7218%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.4718%" y="453" width="0.0805%" height="15" fill="rgb(214,87,16)" fg:x="217" fg:w="1"/><text x="17.7218%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.4718%" y="437" width="0.0805%" height="15" fill="rgb(208,99,42)" fg:x="217" fg:w="1"/><text x="17.7218%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.4718%" y="421" width="0.0805%" height="15" fill="rgb(253,99,2)" fg:x="217" fg:w="1"/><text x="17.7218%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.4718%" y="405" width="0.0805%" height="15" fill="rgb(220,168,23)" fg:x="217" fg:w="1"/><text x="17.7218%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.4718%" y="389" width="0.0805%" height="15" fill="rgb(242,38,24)" fg:x="217" fg:w="1"/><text x="17.7218%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.4718%" y="373" width="0.0805%" height="15" fill="rgb(225,182,9)" fg:x="217" fg:w="1"/><text x="17.7218%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4718%" y="357" width="0.0805%" height="15" fill="rgb(243,178,37)" fg:x="217" fg:w="1"/><text x="17.7218%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4718%" y="341" width="0.0805%" height="15" fill="rgb(232,139,19)" fg:x="217" fg:w="1"/><text x="17.7218%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="17.4718%" y="325" width="0.0805%" height="15" fill="rgb(225,201,24)" fg:x="217" fg:w="1"/><text x="17.7218%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="17.4718%" y="309" width="0.0805%" height="15" fill="rgb(221,47,46)" fg:x="217" fg:w="1"/><text x="17.7218%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="17.4718%" y="293" width="0.0805%" height="15" fill="rgb(249,23,13)" fg:x="217" fg:w="1"/><text x="17.7218%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="17.4718%" y="277" width="0.0805%" height="15" fill="rgb(219,9,5)" fg:x="217" fg:w="1"/><text x="17.7218%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.4718%" y="261" width="0.0805%" height="15" fill="rgb(254,171,16)" fg:x="217" fg:w="1"/><text x="17.7218%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.4718%" y="245" width="0.0805%" height="15" fill="rgb(230,171,20)" fg:x="217" fg:w="1"/><text x="17.7218%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.4718%" y="229" width="0.0805%" height="15" fill="rgb(210,71,41)" fg:x="217" fg:w="1"/><text x="17.7218%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="17.4718%" y="213" width="0.0805%" height="15" fill="rgb(206,173,20)" fg:x="217" fg:w="1"/><text x="17.7218%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.4718%" y="197" width="0.0805%" height="15" fill="rgb(233,88,34)" fg:x="217" fg:w="1"/><text x="17.7218%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="17.4718%" y="181" width="0.0805%" height="15" fill="rgb(223,209,46)" fg:x="217" fg:w="1"/><text x="17.7218%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="17.4718%" y="165" width="0.0805%" height="15" fill="rgb(250,43,18)" fg:x="217" fg:w="1"/><text x="17.7218%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="17.4718%" y="149" width="0.0805%" height="15" fill="rgb(208,13,10)" fg:x="217" fg:w="1"/><text x="17.7218%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.4718%" y="133" width="0.0805%" height="15" fill="rgb(212,200,36)" fg:x="217" fg:w="1"/><text x="17.7218%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.5523%" y="645" width="0.0805%" height="15" fill="rgb(225,90,30)" fg:x="218" fg:w="1"/><text x="17.8023%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="17.5523%" y="629" width="0.0805%" height="15" fill="rgb(236,182,39)" fg:x="218" fg:w="1"/><text x="17.8023%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.5523%" y="613" width="0.0805%" height="15" fill="rgb(212,144,35)" fg:x="218" fg:w="1"/><text x="17.8023%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.5523%" y="597" width="0.0805%" height="15" fill="rgb(228,63,44)" fg:x="218" fg:w="1"/><text x="17.8023%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5523%" y="581" width="0.0805%" height="15" fill="rgb(228,109,6)" fg:x="218" fg:w="1"/><text x="17.8023%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5523%" y="565" width="0.0805%" height="15" fill="rgb(238,117,24)" fg:x="218" fg:w="1"/><text x="17.8023%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.5523%" y="549" width="0.0805%" height="15" fill="rgb(242,26,26)" fg:x="218" fg:w="1"/><text x="17.8023%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.5523%" y="533" width="0.0805%" height="15" fill="rgb(221,92,48)" fg:x="218" fg:w="1"/><text x="17.8023%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.5523%" y="517" width="0.0805%" height="15" fill="rgb(209,209,32)" fg:x="218" fg:w="1"/><text x="17.8023%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5523%" y="501" width="0.0805%" height="15" fill="rgb(221,70,22)" fg:x="218" fg:w="1"/><text x="17.8023%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5523%" y="485" width="0.0805%" height="15" fill="rgb(248,145,5)" fg:x="218" fg:w="1"/><text x="17.8023%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.5523%" y="469" width="0.0805%" height="15" fill="rgb(226,116,26)" fg:x="218" fg:w="1"/><text x="17.8023%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.5523%" y="453" width="0.0805%" height="15" fill="rgb(244,5,17)" fg:x="218" fg:w="1"/><text x="17.8023%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.5523%" y="437" width="0.0805%" height="15" fill="rgb(252,159,33)" fg:x="218" fg:w="1"/><text x="17.8023%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.5523%" y="421" width="0.0805%" height="15" fill="rgb(206,71,0)" fg:x="218" fg:w="1"/><text x="17.8023%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5523%" y="405" width="0.0805%" height="15" fill="rgb(233,118,54)" fg:x="218" fg:w="1"/><text x="17.8023%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.6329%" y="645" width="0.0805%" height="15" fill="rgb(234,83,48)" fg:x="219" fg:w="1"/><text x="17.8829%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6329%" y="629" width="0.0805%" height="15" fill="rgb(228,3,54)" fg:x="219" fg:w="1"/><text x="17.8829%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7134%" y="613" width="0.0805%" height="15" fill="rgb(226,155,13)" fg:x="220" fg:w="1"/><text x="17.9634%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7134%" y="597" width="0.0805%" height="15" fill="rgb(241,28,37)" fg:x="220" fg:w="1"/><text x="17.9634%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7134%" y="581" width="0.0805%" height="15" fill="rgb(233,93,10)" fg:x="220" fg:w="1"/><text x="17.9634%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7134%" y="565" width="0.0805%" height="15" fill="rgb(225,113,19)" fg:x="220" fg:w="1"/><text x="17.9634%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7134%" y="549" width="0.0805%" height="15" fill="rgb(241,2,18)" fg:x="220" fg:w="1"/><text x="17.9634%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7134%" y="533" width="0.0805%" height="15" fill="rgb(228,207,21)" fg:x="220" fg:w="1"/><text x="17.9634%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7134%" y="517" width="0.0805%" height="15" fill="rgb(213,211,35)" fg:x="220" fg:w="1"/><text x="17.9634%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7134%" y="501" width="0.0805%" height="15" fill="rgb(209,83,10)" fg:x="220" fg:w="1"/><text x="17.9634%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7134%" y="485" width="0.0805%" height="15" fill="rgb(209,164,1)" fg:x="220" fg:w="1"/><text x="17.9634%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7134%" y="469" width="0.0805%" height="15" fill="rgb(213,184,43)" fg:x="220" fg:w="1"/><text x="17.9634%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7134%" y="453" width="0.0805%" height="15" fill="rgb(231,61,34)" fg:x="220" fg:w="1"/><text x="17.9634%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7134%" y="437" width="0.0805%" height="15" fill="rgb(235,75,3)" fg:x="220" fg:w="1"/><text x="17.9634%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7134%" y="421" width="0.0805%" height="15" fill="rgb(220,106,47)" fg:x="220" fg:w="1"/><text x="17.9634%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7134%" y="405" width="0.0805%" height="15" fill="rgb(210,196,33)" fg:x="220" fg:w="1"/><text x="17.9634%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="17.7134%" y="645" width="0.1610%" height="15" fill="rgb(229,154,42)" fg:x="220" fg:w="2"/><text x="17.9634%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.7134%" y="629" width="0.1610%" height="15" fill="rgb(228,114,26)" fg:x="220" fg:w="2"/><text x="17.9634%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.7939%" y="613" width="0.0805%" height="15" fill="rgb(208,144,1)" fg:x="221" fg:w="1"/><text x="18.0439%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7939%" y="597" width="0.0805%" height="15" fill="rgb(239,112,37)" fg:x="221" fg:w="1"/><text x="18.0439%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.7939%" y="581" width="0.0805%" height="15" fill="rgb(210,96,50)" fg:x="221" fg:w="1"/><text x="18.0439%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7939%" y="565" width="0.0805%" height="15" fill="rgb(222,178,2)" fg:x="221" fg:w="1"/><text x="18.0439%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8744%" y="533" width="0.0805%" height="15" fill="rgb(226,74,18)" fg:x="222" fg:w="1"/><text x="18.1244%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8744%" y="517" width="0.0805%" height="15" fill="rgb(225,67,54)" fg:x="222" fg:w="1"/><text x="18.1244%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="17.3913%" y="661" width="0.6441%" height="15" fill="rgb(251,92,32)" fg:x="216" fg:w="8"/><text x="17.6413%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="17.8744%" y="645" width="0.1610%" height="15" fill="rgb(228,149,22)" fg:x="222" fg:w="2"/><text x="18.1244%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="17.8744%" y="629" width="0.1610%" height="15" fill="rgb(243,54,13)" fg:x="222" fg:w="2"/><text x="18.1244%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="17.8744%" y="613" width="0.1610%" height="15" fill="rgb(243,180,28)" fg:x="222" fg:w="2"/><text x="18.1244%" y="623.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.8744%" y="597" width="0.1610%" height="15" fill="rgb(208,167,24)" fg:x="222" fg:w="2"/><text x="18.1244%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.8744%" y="581" width="0.1610%" height="15" fill="rgb(245,73,45)" fg:x="222" fg:w="2"/><text x="18.1244%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8744%" y="565" width="0.1610%" height="15" fill="rgb(237,203,48)" fg:x="222" fg:w="2"/><text x="18.1244%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8744%" y="549" width="0.1610%" height="15" fill="rgb(211,197,16)" fg:x="222" fg:w="2"/><text x="18.1244%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9549%" y="533" width="0.0805%" height="15" fill="rgb(243,99,51)" fg:x="223" fg:w="1"/><text x="18.2049%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9549%" y="517" width="0.0805%" height="15" fill="rgb(215,123,29)" fg:x="223" fg:w="1"/><text x="18.2049%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9549%" y="501" width="0.0805%" height="15" fill="rgb(239,186,37)" fg:x="223" fg:w="1"/><text x="18.2049%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9549%" y="485" width="0.0805%" height="15" fill="rgb(252,136,39)" fg:x="223" fg:w="1"/><text x="18.2049%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9549%" y="469" width="0.0805%" height="15" fill="rgb(223,213,32)" fg:x="223" fg:w="1"/><text x="18.2049%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9549%" y="453" width="0.0805%" height="15" fill="rgb(233,115,5)" fg:x="223" fg:w="1"/><text x="18.2049%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9549%" y="437" width="0.0805%" height="15" fill="rgb(207,226,44)" fg:x="223" fg:w="1"/><text x="18.2049%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="18.0354%" y="661" width="0.0805%" height="15" fill="rgb(208,126,0)" fg:x="224" fg:w="1"/><text x="18.2854%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.0354%" y="645" width="0.0805%" height="15" fill="rgb(244,66,21)" fg:x="224" fg:w="1"/><text x="18.2854%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0354%" y="629" width="0.0805%" height="15" fill="rgb(222,97,12)" fg:x="224" fg:w="1"/><text x="18.2854%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="18.1159%" y="645" width="0.0805%" height="15" fill="rgb(219,213,19)" fg:x="225" fg:w="1"/><text x="18.3659%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.1159%" y="629" width="0.0805%" height="15" fill="rgb(252,169,30)" fg:x="225" fg:w="1"/><text x="18.3659%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1159%" y="613" width="0.0805%" height="15" fill="rgb(206,32,51)" fg:x="225" fg:w="1"/><text x="18.3659%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1965%" y="565" width="0.0805%" height="15" fill="rgb(250,172,42)" fg:x="226" fg:w="1"/><text x="18.4465%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1965%" y="549" width="0.0805%" height="15" fill="rgb(209,34,43)" fg:x="226" fg:w="1"/><text x="18.4465%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.1965%" y="533" width="0.0805%" height="15" fill="rgb(223,11,35)" fg:x="226" fg:w="1"/><text x="18.4465%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.1965%" y="517" width="0.0805%" height="15" fill="rgb(251,219,26)" fg:x="226" fg:w="1"/><text x="18.4465%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.1965%" y="501" width="0.0805%" height="15" fill="rgb(231,119,3)" fg:x="226" fg:w="1"/><text x="18.4465%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.1965%" y="485" width="0.0805%" height="15" fill="rgb(216,97,11)" fg:x="226" fg:w="1"/><text x="18.4465%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1965%" y="469" width="0.0805%" height="15" fill="rgb(223,59,9)" fg:x="226" fg:w="1"/><text x="18.4465%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.1965%" y="453" width="0.0805%" height="15" fill="rgb(233,93,31)" fg:x="226" fg:w="1"/><text x="18.4465%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.1965%" y="437" width="0.0805%" height="15" fill="rgb(239,81,33)" fg:x="226" fg:w="1"/><text x="18.4465%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.1965%" y="421" width="0.0805%" height="15" fill="rgb(213,120,34)" fg:x="226" fg:w="1"/><text x="18.4465%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.1965%" y="405" width="0.0805%" height="15" fill="rgb(243,49,53)" fg:x="226" fg:w="1"/><text x="18.4465%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.1965%" y="389" width="0.0805%" height="15" fill="rgb(247,216,33)" fg:x="226" fg:w="1"/><text x="18.4465%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1965%" y="373" width="0.0805%" height="15" fill="rgb(226,26,14)" fg:x="226" fg:w="1"/><text x="18.4465%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.1965%" y="613" width="0.2415%" height="15" fill="rgb(215,49,53)" fg:x="226" fg:w="3"/><text x="18.4465%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.1965%" y="597" width="0.2415%" height="15" fill="rgb(245,162,40)" fg:x="226" fg:w="3"/><text x="18.4465%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.1965%" y="581" width="0.2415%" height="15" fill="rgb(229,68,17)" fg:x="226" fg:w="3"/><text x="18.4465%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.2770%" y="565" width="0.1610%" height="15" fill="rgb(213,182,10)" fg:x="227" fg:w="2"/><text x="18.5270%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2770%" y="549" width="0.1610%" height="15" fill="rgb(245,125,30)" fg:x="227" fg:w="2"/><text x="18.5270%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.2770%" y="533" width="0.1610%" height="15" fill="rgb(232,202,2)" fg:x="227" fg:w="2"/><text x="18.5270%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2770%" y="517" width="0.1610%" height="15" fill="rgb(237,140,51)" fg:x="227" fg:w="2"/><text x="18.5270%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.2770%" y="501" width="0.1610%" height="15" fill="rgb(236,157,25)" fg:x="227" fg:w="2"/><text x="18.5270%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2770%" y="485" width="0.1610%" height="15" fill="rgb(219,209,0)" fg:x="227" fg:w="2"/><text x="18.5270%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.2770%" y="469" width="0.1610%" height="15" fill="rgb(240,116,54)" fg:x="227" fg:w="2"/><text x="18.5270%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2770%" y="453" width="0.1610%" height="15" fill="rgb(216,10,36)" fg:x="227" fg:w="2"/><text x="18.5270%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="18.2770%" y="437" width="0.1610%" height="15" fill="rgb(222,72,44)" fg:x="227" fg:w="2"/><text x="18.5270%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3575%" y="421" width="0.0805%" height="15" fill="rgb(232,159,9)" fg:x="228" fg:w="1"/><text x="18.6075%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4380%" y="565" width="0.1610%" height="15" fill="rgb(210,39,32)" fg:x="229" fg:w="2"/><text x="18.6880%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4380%" y="549" width="0.1610%" height="15" fill="rgb(216,194,45)" fg:x="229" fg:w="2"/><text x="18.6880%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4380%" y="533" width="0.1610%" height="15" fill="rgb(218,18,35)" fg:x="229" fg:w="2"/><text x="18.6880%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.4380%" y="517" width="0.1610%" height="15" fill="rgb(207,83,51)" fg:x="229" fg:w="2"/><text x="18.6880%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.4380%" y="501" width="0.1610%" height="15" fill="rgb(225,63,43)" fg:x="229" fg:w="2"/><text x="18.6880%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.4380%" y="485" width="0.1610%" height="15" fill="rgb(207,57,36)" fg:x="229" fg:w="2"/><text x="18.6880%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.4380%" y="469" width="0.1610%" height="15" fill="rgb(216,99,33)" fg:x="229" fg:w="2"/><text x="18.6880%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.4380%" y="453" width="0.1610%" height="15" fill="rgb(225,42,16)" fg:x="229" fg:w="2"/><text x="18.6880%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.4380%" y="437" width="0.1610%" height="15" fill="rgb(220,201,45)" fg:x="229" fg:w="2"/><text x="18.6880%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.4380%" y="421" width="0.1610%" height="15" fill="rgb(225,33,4)" fg:x="229" fg:w="2"/><text x="18.6880%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.4380%" y="405" width="0.1610%" height="15" fill="rgb(224,33,50)" fg:x="229" fg:w="2"/><text x="18.6880%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="18.4380%" y="389" width="0.1610%" height="15" fill="rgb(246,198,51)" fg:x="229" fg:w="2"/><text x="18.6880%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="18.4380%" y="373" width="0.1610%" height="15" fill="rgb(205,22,4)" fg:x="229" fg:w="2"/><text x="18.6880%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="18.4380%" y="357" width="0.1610%" height="15" fill="rgb(206,3,8)" fg:x="229" fg:w="2"/><text x="18.6880%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="18.4380%" y="341" width="0.1610%" height="15" fill="rgb(251,23,15)" fg:x="229" fg:w="2"/><text x="18.6880%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.4380%" y="325" width="0.1610%" height="15" fill="rgb(252,88,28)" fg:x="229" fg:w="2"/><text x="18.6880%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5990%" y="565" width="0.0805%" height="15" fill="rgb(212,127,14)" fg:x="231" fg:w="1"/><text x="18.8490%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5990%" y="549" width="0.0805%" height="15" fill="rgb(247,145,37)" fg:x="231" fg:w="1"/><text x="18.8490%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5990%" y="533" width="0.0805%" height="15" fill="rgb(209,117,53)" fg:x="231" fg:w="1"/><text x="18.8490%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5990%" y="517" width="0.0805%" height="15" fill="rgb(212,90,42)" fg:x="231" fg:w="1"/><text x="18.8490%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="18.1965%" y="645" width="0.5636%" height="15" fill="rgb(218,164,37)" fg:x="226" fg:w="7"/><text x="18.4465%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="18.1965%" y="629" width="0.5636%" height="15" fill="rgb(246,65,34)" fg:x="226" fg:w="7"/><text x="18.4465%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="18.4380%" y="613" width="0.3221%" height="15" fill="rgb(231,100,33)" fg:x="229" fg:w="4"/><text x="18.6880%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="18.4380%" y="597" width="0.3221%" height="15" fill="rgb(228,126,14)" fg:x="229" fg:w="4"/><text x="18.6880%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="18.4380%" y="581" width="0.3221%" height="15" fill="rgb(215,173,21)" fg:x="229" fg:w="4"/><text x="18.6880%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6795%" y="565" width="0.0805%" height="15" fill="rgb(210,6,40)" fg:x="232" fg:w="1"/><text x="18.9295%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6795%" y="549" width="0.0805%" height="15" fill="rgb(212,48,18)" fg:x="232" fg:w="1"/><text x="18.9295%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6795%" y="533" width="0.0805%" height="15" fill="rgb(230,214,11)" fg:x="232" fg:w="1"/><text x="18.9295%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6795%" y="517" width="0.0805%" height="15" fill="rgb(254,105,39)" fg:x="232" fg:w="1"/><text x="18.9295%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.6795%" y="501" width="0.0805%" height="15" fill="rgb(245,158,5)" fg:x="232" fg:w="1"/><text x="18.9295%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6795%" y="485" width="0.0805%" height="15" fill="rgb(249,208,11)" fg:x="232" fg:w="1"/><text x="18.9295%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6795%" y="469" width="0.0805%" height="15" fill="rgb(210,39,28)" fg:x="232" fg:w="1"/><text x="18.9295%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6795%" y="453" width="0.0805%" height="15" fill="rgb(211,56,53)" fg:x="232" fg:w="1"/><text x="18.9295%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6795%" y="437" width="0.0805%" height="15" fill="rgb(226,201,30)" fg:x="232" fg:w="1"/><text x="18.9295%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6795%" y="421" width="0.0805%" height="15" fill="rgb(239,101,34)" fg:x="232" fg:w="1"/><text x="18.9295%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.6795%" y="405" width="0.0805%" height="15" fill="rgb(226,209,5)" fg:x="232" fg:w="1"/><text x="18.9295%" y="415.50"></text></g><g><title>plugins_core::build::Build::leads_to (20 samples, 1.61%)</title><rect x="17.3913%" y="677" width="1.6103%" height="15" fill="rgb(250,105,47)" fg:x="216" fg:w="20"/><text x="17.6413%" y="687.50"></text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.89%)</title><rect x="18.1159%" y="661" width="0.8857%" height="15" fill="rgb(230,72,3)" fg:x="225" fg:w="11"/><text x="18.3659%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.7601%" y="645" width="0.2415%" height="15" fill="rgb(232,218,39)" fg:x="233" fg:w="3"/><text x="19.0101%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (3 samples, 0.24%)</title><rect x="18.7601%" y="629" width="0.2415%" height="15" fill="rgb(248,166,6)" fg:x="233" fg:w="3"/><text x="19.0101%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.8406%" y="613" width="0.1610%" height="15" fill="rgb(247,89,20)" fg:x="234" fg:w="2"/><text x="19.0906%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="18.8406%" y="597" width="0.1610%" height="15" fill="rgb(248,130,54)" fg:x="234" fg:w="2"/><text x="19.0906%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.8406%" y="581" width="0.1610%" height="15" fill="rgb(234,196,4)" fg:x="234" fg:w="2"/><text x="19.0906%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9211%" y="565" width="0.0805%" height="15" fill="rgb(250,143,31)" fg:x="235" fg:w="1"/><text x="19.1711%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.0821%" y="629" width="0.0805%" height="15" fill="rgb(211,110,34)" fg:x="237" fg:w="1"/><text x="19.3321%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="19.0016%" y="677" width="0.3221%" height="15" fill="rgb(215,124,48)" fg:x="236" fg:w="4"/><text x="19.2516%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="19.0016%" y="661" width="0.3221%" height="15" fill="rgb(216,46,13)" fg:x="236" fg:w="4"/><text x="19.2516%" y="671.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="19.0016%" y="645" width="0.3221%" height="15" fill="rgb(205,184,25)" fg:x="236" fg:w="4"/><text x="19.2516%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.1626%" y="629" width="0.1610%" height="15" fill="rgb(228,1,10)" fg:x="238" fg:w="2"/><text x="19.4126%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="19.1626%" y="613" width="0.1610%" height="15" fill="rgb(213,116,27)" fg:x="238" fg:w="2"/><text x="19.4126%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.1626%" y="597" width="0.1610%" height="15" fill="rgb(241,95,50)" fg:x="238" fg:w="2"/><text x="19.4126%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2432%" y="581" width="0.0805%" height="15" fill="rgb(238,48,32)" fg:x="239" fg:w="1"/><text x="19.4932%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.2432%" y="565" width="0.0805%" height="15" fill="rgb(235,113,49)" fg:x="239" fg:w="1"/><text x="19.4932%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.2432%" y="549" width="0.0805%" height="15" fill="rgb(205,127,43)" fg:x="239" fg:w="1"/><text x="19.4932%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2432%" y="533" width="0.0805%" height="15" fill="rgb(250,162,2)" fg:x="239" fg:w="1"/><text x="19.4932%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 2.90%)</title><rect x="16.5056%" y="725" width="2.8986%" height="15" fill="rgb(220,13,41)" fg:x="205" fg:w="36"/><text x="16.7556%" y="735.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.90%)</title><rect x="16.5056%" y="709" width="2.8986%" height="15" fill="rgb(249,221,25)" fg:x="205" fg:w="36"/><text x="16.7556%" y="719.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (36 samples, 2.90%)</title><rect x="16.5056%" y="693" width="2.8986%" height="15" fill="rgb(215,208,19)" fg:x="205" fg:w="36"/><text x="16.7556%" y="703.50">pl..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="19.3237%" y="677" width="0.0805%" height="15" fill="rgb(236,175,2)" fg:x="240" fg:w="1"/><text x="19.5737%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3237%" y="661" width="0.0805%" height="15" fill="rgb(241,52,2)" fg:x="240" fg:w="1"/><text x="19.5737%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3237%" y="645" width="0.0805%" height="15" fill="rgb(248,140,14)" fg:x="240" fg:w="1"/><text x="19.5737%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3237%" y="629" width="0.0805%" height="15" fill="rgb(253,22,42)" fg:x="240" fg:w="1"/><text x="19.5737%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.3237%" y="613" width="0.0805%" height="15" fill="rgb(234,61,47)" fg:x="240" fg:w="1"/><text x="19.5737%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.3237%" y="597" width="0.0805%" height="15" fill="rgb(208,226,15)" fg:x="240" fg:w="1"/><text x="19.5737%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.3237%" y="581" width="0.0805%" height="15" fill="rgb(217,221,4)" fg:x="240" fg:w="1"/><text x="19.5737%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3237%" y="565" width="0.0805%" height="15" fill="rgb(212,174,34)" fg:x="240" fg:w="1"/><text x="19.5737%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3237%" y="549" width="0.0805%" height="15" fill="rgb(253,83,4)" fg:x="240" fg:w="1"/><text x="19.5737%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.3237%" y="533" width="0.0805%" height="15" fill="rgb(250,195,49)" fg:x="240" fg:w="1"/><text x="19.5737%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.3237%" y="517" width="0.0805%" height="15" fill="rgb(241,192,25)" fg:x="240" fg:w="1"/><text x="19.5737%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.3237%" y="501" width="0.0805%" height="15" fill="rgb(208,124,10)" fg:x="240" fg:w="1"/><text x="19.5737%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.3237%" y="485" width="0.0805%" height="15" fill="rgb(222,33,0)" fg:x="240" fg:w="1"/><text x="19.5737%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3237%" y="469" width="0.0805%" height="15" fill="rgb(234,209,28)" fg:x="240" fg:w="1"/><text x="19.5737%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="19.4042%" y="709" width="0.0805%" height="15" fill="rgb(224,11,23)" fg:x="241" fg:w="1"/><text x="19.6542%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4042%" y="693" width="0.0805%" height="15" fill="rgb(232,99,1)" fg:x="241" fg:w="1"/><text x="19.6542%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4042%" y="677" width="0.0805%" height="15" fill="rgb(237,95,45)" fg:x="241" fg:w="1"/><text x="19.6542%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.4042%" y="661" width="0.0805%" height="15" fill="rgb(208,109,11)" fg:x="241" fg:w="1"/><text x="19.6542%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.4847%" y="597" width="0.0805%" height="15" fill="rgb(216,190,48)" fg:x="242" fg:w="1"/><text x="19.7347%" y="607.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="19.4847%" y="693" width="0.1610%" height="15" fill="rgb(251,171,36)" fg:x="242" fg:w="2"/><text x="19.7347%" y="703.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="19.4847%" y="677" width="0.1610%" height="15" fill="rgb(230,62,22)" fg:x="242" fg:w="2"/><text x="19.7347%" y="687.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="19.4847%" y="661" width="0.1610%" height="15" fill="rgb(225,114,35)" fg:x="242" fg:w="2"/><text x="19.7347%" y="671.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="19.4847%" y="645" width="0.1610%" height="15" fill="rgb(215,118,42)" fg:x="242" fg:w="2"/><text x="19.7347%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="19.4847%" y="629" width="0.1610%" height="15" fill="rgb(243,119,21)" fg:x="242" fg:w="2"/><text x="19.7347%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="19.4847%" y="613" width="0.1610%" height="15" fill="rgb(252,177,53)" fg:x="242" fg:w="2"/><text x="19.7347%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="19.5652%" y="597" width="0.0805%" height="15" fill="rgb(237,209,29)" fg:x="243" fg:w="1"/><text x="19.8152%" y="607.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="19.5652%" y="581" width="0.0805%" height="15" fill="rgb(212,65,23)" fg:x="243" fg:w="1"/><text x="19.8152%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="19.5652%" y="565" width="0.0805%" height="15" fill="rgb(230,222,46)" fg:x="243" fg:w="1"/><text x="19.8152%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="19.5652%" y="549" width="0.0805%" height="15" fill="rgb(215,135,32)" fg:x="243" fg:w="1"/><text x="19.8152%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.08%)</title><rect x="19.5652%" y="533" width="0.0805%" height="15" fill="rgb(246,101,22)" fg:x="243" fg:w="1"/><text x="19.8152%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="19.5652%" y="517" width="0.0805%" height="15" fill="rgb(206,107,13)" fg:x="243" fg:w="1"/><text x="19.8152%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.6457%" y="661" width="0.0805%" height="15" fill="rgb(250,100,44)" fg:x="244" fg:w="1"/><text x="19.8957%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.6457%" y="645" width="0.0805%" height="15" fill="rgb(231,147,38)" fg:x="244" fg:w="1"/><text x="19.8957%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.6457%" y="629" width="0.0805%" height="15" fill="rgb(229,8,40)" fg:x="244" fg:w="1"/><text x="19.8957%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.6457%" y="613" width="0.0805%" height="15" fill="rgb(221,135,30)" fg:x="244" fg:w="1"/><text x="19.8957%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="19.7262%" y="661" width="0.2415%" height="15" fill="rgb(249,193,18)" fg:x="245" fg:w="3"/><text x="19.9762%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="19.7262%" y="645" width="0.2415%" height="15" fill="rgb(209,133,39)" fg:x="245" fg:w="3"/><text x="19.9762%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="19.7262%" y="629" width="0.2415%" height="15" fill="rgb(232,100,14)" fg:x="245" fg:w="3"/><text x="19.9762%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="19.8068%" y="613" width="0.1610%" height="15" fill="rgb(224,185,1)" fg:x="246" fg:w="2"/><text x="20.0568%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.8873%" y="597" width="0.0805%" height="15" fill="rgb(223,139,8)" fg:x="247" fg:w="1"/><text x="20.1373%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.8873%" y="581" width="0.0805%" height="15" fill="rgb(232,213,38)" fg:x="247" fg:w="1"/><text x="20.1373%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="20.1288%" y="629" width="0.1610%" height="15" fill="rgb(207,94,22)" fg:x="250" fg:w="2"/><text x="20.3788%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.1288%" y="613" width="0.1610%" height="15" fill="rgb(219,183,54)" fg:x="250" fg:w="2"/><text x="20.3788%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.1288%" y="597" width="0.1610%" height="15" fill="rgb(216,185,54)" fg:x="250" fg:w="2"/><text x="20.3788%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.2899%" y="597" width="0.3221%" height="15" fill="rgb(254,217,39)" fg:x="252" fg:w="4"/><text x="20.5399%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.4509%" y="581" width="0.1610%" height="15" fill="rgb(240,178,23)" fg:x="254" fg:w="2"/><text x="20.7009%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5314%" y="565" width="0.0805%" height="15" fill="rgb(218,11,47)" fg:x="255" fg:w="1"/><text x="20.7814%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.5314%" y="549" width="0.0805%" height="15" fill="rgb(218,51,51)" fg:x="255" fg:w="1"/><text x="20.7814%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="20.2899%" y="613" width="0.4026%" height="15" fill="rgb(238,126,27)" fg:x="252" fg:w="5"/><text x="20.5399%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.6119%" y="597" width="0.0805%" height="15" fill="rgb(249,202,22)" fg:x="256" fg:w="1"/><text x="20.8619%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.6119%" y="581" width="0.0805%" height="15" fill="rgb(254,195,49)" fg:x="256" fg:w="1"/><text x="20.8619%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.6119%" y="565" width="0.0805%" height="15" fill="rgb(208,123,14)" fg:x="256" fg:w="1"/><text x="20.8619%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.6924%" y="597" width="0.0805%" height="15" fill="rgb(224,200,8)" fg:x="257" fg:w="1"/><text x="20.9424%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.7729%" y="597" width="0.0805%" height="15" fill="rgb(217,61,36)" fg:x="258" fg:w="1"/><text x="21.0229%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.7729%" y="581" width="0.0805%" height="15" fill="rgb(206,35,45)" fg:x="258" fg:w="1"/><text x="21.0229%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.7729%" y="565" width="0.0805%" height="15" fill="rgb(217,65,33)" fg:x="258" fg:w="1"/><text x="21.0229%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.8535%" y="597" width="0.0805%" height="15" fill="rgb(222,158,48)" fg:x="259" fg:w="1"/><text x="21.1035%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.8535%" y="581" width="0.0805%" height="15" fill="rgb(254,2,54)" fg:x="259" fg:w="1"/><text x="21.1035%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.8535%" y="565" width="0.0805%" height="15" fill="rgb(250,143,38)" fg:x="259" fg:w="1"/><text x="21.1035%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.8535%" y="549" width="0.0805%" height="15" fill="rgb(248,25,0)" fg:x="259" fg:w="1"/><text x="21.1035%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.0950%" y="581" width="0.0805%" height="15" fill="rgb(206,152,27)" fg:x="262" fg:w="1"/><text x="21.3450%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="21.1755%" y="549" width="0.3221%" height="15" fill="rgb(240,77,30)" fg:x="263" fg:w="4"/><text x="21.4255%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.2560%" y="533" width="0.2415%" height="15" fill="rgb(231,5,3)" fg:x="264" fg:w="3"/><text x="21.5060%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="21.1755%" y="581" width="0.4026%" height="15" fill="rgb(207,226,32)" fg:x="263" fg:w="5"/><text x="21.4255%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="21.1755%" y="565" width="0.4026%" height="15" fill="rgb(222,207,47)" fg:x="263" fg:w="5"/><text x="21.4255%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.4976%" y="549" width="0.0805%" height="15" fill="rgb(229,115,45)" fg:x="267" fg:w="1"/><text x="21.7476%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.4976%" y="533" width="0.0805%" height="15" fill="rgb(224,191,6)" fg:x="267" fg:w="1"/><text x="21.7476%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4976%" y="517" width="0.0805%" height="15" fill="rgb(230,227,24)" fg:x="267" fg:w="1"/><text x="21.7476%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="21.5781%" y="581" width="0.4831%" height="15" fill="rgb(228,80,19)" fg:x="268" fg:w="6"/><text x="21.8281%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="21.5781%" y="565" width="0.4831%" height="15" fill="rgb(247,229,0)" fg:x="268" fg:w="6"/><text x="21.8281%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="21.6586%" y="549" width="0.4026%" height="15" fill="rgb(237,194,15)" fg:x="269" fg:w="5"/><text x="21.9086%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="21.8196%" y="533" width="0.2415%" height="15" fill="rgb(219,203,20)" fg:x="271" fg:w="3"/><text x="22.0696%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.9807%" y="517" width="0.0805%" height="15" fill="rgb(234,128,8)" fg:x="273" fg:w="1"/><text x="22.2307%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.9807%" y="501" width="0.0805%" height="15" fill="rgb(248,202,8)" fg:x="273" fg:w="1"/><text x="22.2307%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.9807%" y="485" width="0.0805%" height="15" fill="rgb(206,104,37)" fg:x="273" fg:w="1"/><text x="22.2307%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="22.1417%" y="565" width="0.4026%" height="15" fill="rgb(223,8,27)" fg:x="275" fg:w="5"/><text x="22.3917%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.3027%" y="549" width="0.2415%" height="15" fill="rgb(216,217,28)" fg:x="277" fg:w="3"/><text x="22.5527%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.4638%" y="533" width="0.0805%" height="15" fill="rgb(249,199,1)" fg:x="279" fg:w="1"/><text x="22.7138%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.5443%" y="501" width="0.1610%" height="15" fill="rgb(240,85,17)" fg:x="280" fg:w="2"/><text x="22.7943%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="22.5443%" y="549" width="0.2415%" height="15" fill="rgb(206,108,45)" fg:x="280" fg:w="3"/><text x="22.7943%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.5443%" y="533" width="0.2415%" height="15" fill="rgb(245,210,41)" fg:x="280" fg:w="3"/><text x="22.7943%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.5443%" y="517" width="0.2415%" height="15" fill="rgb(206,13,37)" fg:x="280" fg:w="3"/><text x="22.7943%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.7053%" y="501" width="0.0805%" height="15" fill="rgb(250,61,18)" fg:x="282" fg:w="1"/><text x="22.9553%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.7858%" y="517" width="0.0805%" height="15" fill="rgb(235,172,48)" fg:x="283" fg:w="1"/><text x="23.0358%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.7858%" y="501" width="0.0805%" height="15" fill="rgb(249,201,17)" fg:x="283" fg:w="1"/><text x="23.0358%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.7858%" y="485" width="0.0805%" height="15" fill="rgb(219,208,6)" fg:x="283" fg:w="1"/><text x="23.0358%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7858%" y="469" width="0.0805%" height="15" fill="rgb(248,31,23)" fg:x="283" fg:w="1"/><text x="23.0358%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.8663%" y="517" width="0.0805%" height="15" fill="rgb(245,15,42)" fg:x="284" fg:w="1"/><text x="23.1163%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="22.7858%" y="533" width="0.2415%" height="15" fill="rgb(222,217,39)" fg:x="283" fg:w="3"/><text x="23.0358%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.9469%" y="517" width="0.0805%" height="15" fill="rgb(210,219,27)" fg:x="285" fg:w="1"/><text x="23.1969%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.9469%" y="501" width="0.0805%" height="15" fill="rgb(252,166,36)" fg:x="285" fg:w="1"/><text x="23.1969%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="22.5443%" y="565" width="0.5636%" height="15" fill="rgb(245,132,34)" fg:x="280" fg:w="7"/><text x="22.7943%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="22.7858%" y="549" width="0.3221%" height="15" fill="rgb(236,54,3)" fg:x="283" fg:w="4"/><text x="23.0358%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.0274%" y="533" width="0.0805%" height="15" fill="rgb(241,173,43)" fg:x="286" fg:w="1"/><text x="23.2774%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.0274%" y="517" width="0.0805%" height="15" fill="rgb(215,190,9)" fg:x="286" fg:w="1"/><text x="23.2774%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.0274%" y="501" width="0.0805%" height="15" fill="rgb(242,101,16)" fg:x="286" fg:w="1"/><text x="23.2774%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.0274%" y="485" width="0.0805%" height="15" fill="rgb(223,190,21)" fg:x="286" fg:w="1"/><text x="23.2774%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.0274%" y="469" width="0.0805%" height="15" fill="rgb(215,228,25)" fg:x="286" fg:w="1"/><text x="23.2774%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.0274%" y="453" width="0.0805%" height="15" fill="rgb(225,36,22)" fg:x="286" fg:w="1"/><text x="23.2774%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="22.0612%" y="581" width="1.1272%" height="15" fill="rgb(251,106,46)" fg:x="274" fg:w="14"/><text x="22.3112%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.1079%" y="565" width="0.0805%" height="15" fill="rgb(208,90,1)" fg:x="287" fg:w="1"/><text x="23.3579%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.1079%" y="549" width="0.0805%" height="15" fill="rgb(243,10,4)" fg:x="287" fg:w="1"/><text x="23.3579%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.1079%" y="533" width="0.0805%" height="15" fill="rgb(212,137,27)" fg:x="287" fg:w="1"/><text x="23.3579%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.42%)</title><rect x="20.9340%" y="597" width="2.4155%" height="15" fill="rgb(231,220,49)" fg:x="260" fg:w="30"/><text x="21.1840%" y="607.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="23.1884%" y="581" width="0.1610%" height="15" fill="rgb(237,96,20)" fg:x="288" fg:w="2"/><text x="23.4384%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="23.1884%" y="565" width="0.1610%" height="15" fill="rgb(239,229,30)" fg:x="288" fg:w="2"/><text x="23.4384%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.54%)</title><rect x="20.2899%" y="629" width="3.5427%" height="15" fill="rgb(219,65,33)" fg:x="252" fg:w="44"/><text x="20.5399%" y="639.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (39 samples, 3.14%)</title><rect x="20.6924%" y="613" width="3.1401%" height="15" fill="rgb(243,134,7)" fg:x="257" fg:w="39"/><text x="20.9424%" y="623.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="23.3494%" y="597" width="0.4831%" height="15" fill="rgb(216,177,54)" fg:x="290" fg:w="6"/><text x="23.5994%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="23.4300%" y="581" width="0.4026%" height="15" fill="rgb(211,160,20)" fg:x="291" fg:w="5"/><text x="23.6800%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="23.6715%" y="565" width="0.1610%" height="15" fill="rgb(239,85,39)" fg:x="294" fg:w="2"/><text x="23.9215%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.6715%" y="549" width="0.1610%" height="15" fill="rgb(232,125,22)" fg:x="294" fg:w="2"/><text x="23.9215%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.6715%" y="533" width="0.1610%" height="15" fill="rgb(244,57,34)" fg:x="294" fg:w="2"/><text x="23.9215%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.6715%" y="517" width="0.1610%" height="15" fill="rgb(214,203,32)" fg:x="294" fg:w="2"/><text x="23.9215%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.9936%" y="597" width="0.0805%" height="15" fill="rgb(207,58,43)" fg:x="298" fg:w="1"/><text x="24.2436%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.0741%" y="597" width="0.0805%" height="15" fill="rgb(215,193,15)" fg:x="299" fg:w="1"/><text x="24.3241%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2351%" y="581" width="0.0805%" height="15" fill="rgb(232,15,44)" fg:x="301" fg:w="1"/><text x="24.4851%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="24.3156%" y="581" width="0.2415%" height="15" fill="rgb(212,3,48)" fg:x="302" fg:w="3"/><text x="24.5656%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="24.5572%" y="549" width="0.1610%" height="15" fill="rgb(218,128,7)" fg:x="305" fg:w="2"/><text x="24.8072%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.6377%" y="533" width="0.0805%" height="15" fill="rgb(226,216,39)" fg:x="306" fg:w="1"/><text x="24.8877%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6377%" y="517" width="0.0805%" height="15" fill="rgb(243,47,51)" fg:x="306" fg:w="1"/><text x="24.8877%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.7182%" y="517" width="0.1610%" height="15" fill="rgb(241,183,40)" fg:x="307" fg:w="2"/><text x="24.9682%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="23.8325%" y="629" width="1.2077%" height="15" fill="rgb(231,217,32)" fg:x="296" fg:w="15"/><text x="24.0825%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="23.8325%" y="613" width="1.2077%" height="15" fill="rgb(229,61,38)" fg:x="296" fg:w="15"/><text x="24.0825%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="24.1546%" y="597" width="0.8857%" height="15" fill="rgb(225,210,5)" fg:x="300" fg:w="11"/><text x="24.4046%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="24.5572%" y="581" width="0.4831%" height="15" fill="rgb(231,79,45)" fg:x="305" fg:w="6"/><text x="24.8072%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="24.5572%" y="565" width="0.4831%" height="15" fill="rgb(224,100,7)" fg:x="305" fg:w="6"/><text x="24.8072%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="24.7182%" y="549" width="0.3221%" height="15" fill="rgb(241,198,18)" fg:x="307" fg:w="4"/><text x="24.9682%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="24.7182%" y="533" width="0.3221%" height="15" fill="rgb(252,97,53)" fg:x="307" fg:w="4"/><text x="24.9682%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.8792%" y="517" width="0.1610%" height="15" fill="rgb(220,88,7)" fg:x="309" fg:w="2"/><text x="25.1292%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="24.8792%" y="501" width="0.1610%" height="15" fill="rgb(213,176,14)" fg:x="309" fg:w="2"/><text x="25.1292%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.9597%" y="485" width="0.0805%" height="15" fill="rgb(246,73,7)" fg:x="310" fg:w="1"/><text x="25.2097%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.2013%" y="581" width="0.2415%" height="15" fill="rgb(245,64,36)" fg:x="313" fg:w="3"/><text x="25.4513%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3623%" y="565" width="0.0805%" height="15" fill="rgb(245,80,10)" fg:x="315" fg:w="1"/><text x="25.6123%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.3623%" y="549" width="0.0805%" height="15" fill="rgb(232,107,50)" fg:x="315" fg:w="1"/><text x="25.6123%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="25.4428%" y="581" width="0.1610%" height="15" fill="rgb(253,3,0)" fg:x="316" fg:w="2"/><text x="25.6928%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.5233%" y="565" width="0.0805%" height="15" fill="rgb(212,99,53)" fg:x="317" fg:w="1"/><text x="25.7733%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.5233%" y="549" width="0.0805%" height="15" fill="rgb(249,111,54)" fg:x="317" fg:w="1"/><text x="25.7733%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.5233%" y="533" width="0.0805%" height="15" fill="rgb(249,55,30)" fg:x="317" fg:w="1"/><text x="25.7733%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6039%" y="581" width="0.0805%" height="15" fill="rgb(237,47,42)" fg:x="318" fg:w="1"/><text x="25.8539%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6039%" y="565" width="0.0805%" height="15" fill="rgb(211,20,18)" fg:x="318" fg:w="1"/><text x="25.8539%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6039%" y="549" width="0.0805%" height="15" fill="rgb(231,203,46)" fg:x="318" fg:w="1"/><text x="25.8539%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6039%" y="533" width="0.0805%" height="15" fill="rgb(237,142,3)" fg:x="318" fg:w="1"/><text x="25.8539%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6039%" y="517" width="0.0805%" height="15" fill="rgb(241,107,1)" fg:x="318" fg:w="1"/><text x="25.8539%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6844%" y="581" width="0.0805%" height="15" fill="rgb(229,83,13)" fg:x="319" fg:w="1"/><text x="25.9344%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6844%" y="565" width="0.0805%" height="15" fill="rgb(241,91,40)" fg:x="319" fg:w="1"/><text x="25.9344%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6844%" y="549" width="0.0805%" height="15" fill="rgb(225,3,45)" fg:x="319" fg:w="1"/><text x="25.9344%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.7649%" y="549" width="0.0805%" height="15" fill="rgb(244,223,14)" fg:x="320" fg:w="1"/><text x="26.0149%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8454%" y="533" width="0.0805%" height="15" fill="rgb(224,124,37)" fg:x="321" fg:w="1"/><text x="26.0954%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8454%" y="517" width="0.0805%" height="15" fill="rgb(251,171,30)" fg:x="321" fg:w="1"/><text x="26.0954%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.8454%" y="501" width="0.0805%" height="15" fill="rgb(236,46,54)" fg:x="321" fg:w="1"/><text x="26.0954%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0870%" y="453" width="0.0805%" height="15" fill="rgb(245,213,5)" fg:x="324" fg:w="1"/><text x="26.3370%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="26.0064%" y="501" width="0.2415%" height="15" fill="rgb(230,144,27)" fg:x="323" fg:w="3"/><text x="26.2564%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.0064%" y="485" width="0.2415%" height="15" fill="rgb(220,86,6)" fg:x="323" fg:w="3"/><text x="26.2564%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="26.0064%" y="469" width="0.2415%" height="15" fill="rgb(240,20,13)" fg:x="323" fg:w="3"/><text x="26.2564%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.1675%" y="453" width="0.0805%" height="15" fill="rgb(217,89,34)" fg:x="325" fg:w="1"/><text x="26.4175%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="25.9259%" y="533" width="0.4026%" height="15" fill="rgb(229,13,5)" fg:x="322" fg:w="5"/><text x="26.1759%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="25.9259%" y="517" width="0.4026%" height="15" fill="rgb(244,67,35)" fg:x="322" fg:w="5"/><text x="26.1759%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2480%" y="501" width="0.0805%" height="15" fill="rgb(221,40,2)" fg:x="326" fg:w="1"/><text x="26.4980%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.4895%" y="517" width="0.0805%" height="15" fill="rgb(237,157,21)" fg:x="329" fg:w="1"/><text x="26.7395%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="26.5700%" y="517" width="0.0805%" height="15" fill="rgb(222,94,11)" fg:x="330" fg:w="1"/><text x="26.8200%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.6506%" y="501" width="0.0805%" height="15" fill="rgb(249,113,6)" fg:x="331" fg:w="1"/><text x="26.9006%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7311%" y="469" width="0.0805%" height="15" fill="rgb(238,137,36)" fg:x="332" fg:w="1"/><text x="26.9811%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7311%" y="453" width="0.0805%" height="15" fill="rgb(210,102,26)" fg:x="332" fg:w="1"/><text x="26.9811%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="26.7311%" y="437" width="0.0805%" height="15" fill="rgb(218,30,30)" fg:x="332" fg:w="1"/><text x="26.9811%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.7311%" y="421" width="0.0805%" height="15" fill="rgb(214,67,26)" fg:x="332" fg:w="1"/><text x="26.9811%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="26.8116%" y="453" width="0.1610%" height="15" fill="rgb(251,9,53)" fg:x="333" fg:w="2"/><text x="27.0616%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8116%" y="437" width="0.1610%" height="15" fill="rgb(228,204,25)" fg:x="333" fg:w="2"/><text x="27.0616%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="26.8116%" y="421" width="0.1610%" height="15" fill="rgb(207,153,8)" fg:x="333" fg:w="2"/><text x="27.0616%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="26.8116%" y="405" width="0.1610%" height="15" fill="rgb(242,9,16)" fg:x="333" fg:w="2"/><text x="27.0616%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="26.8921%" y="389" width="0.0805%" height="15" fill="rgb(217,211,10)" fg:x="334" fg:w="1"/><text x="27.1421%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="26.6506%" y="517" width="0.4831%" height="15" fill="rgb(219,228,52)" fg:x="331" fg:w="6"/><text x="26.9006%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="26.7311%" y="501" width="0.4026%" height="15" fill="rgb(231,92,29)" fg:x="332" fg:w="5"/><text x="26.9811%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="26.7311%" y="485" width="0.4026%" height="15" fill="rgb(232,8,23)" fg:x="332" fg:w="5"/><text x="26.9811%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="26.8116%" y="469" width="0.3221%" height="15" fill="rgb(216,211,34)" fg:x="333" fg:w="4"/><text x="27.0616%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.9726%" y="453" width="0.1610%" height="15" fill="rgb(236,151,0)" fg:x="335" fg:w="2"/><text x="27.2226%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.45%)</title><rect x="25.8454%" y="549" width="1.4493%" height="15" fill="rgb(209,168,3)" fg:x="321" fg:w="18"/><text x="26.0954%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="26.3285%" y="533" width="0.9662%" height="15" fill="rgb(208,129,28)" fg:x="327" fg:w="12"/><text x="26.5785%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.1337%" y="517" width="0.1610%" height="15" fill="rgb(229,78,22)" fg:x="337" fg:w="2"/><text x="27.3837%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="27.2947%" y="549" width="0.0805%" height="15" fill="rgb(228,187,13)" fg:x="339" fg:w="1"/><text x="27.5447%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.77%)</title><rect x="25.7649%" y="565" width="1.7713%" height="15" fill="rgb(240,119,24)" fg:x="320" fg:w="22"/><text x="26.0149%" y="575.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="27.3752%" y="549" width="0.1610%" height="15" fill="rgb(209,194,42)" fg:x="340" fg:w="2"/><text x="27.6252%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4557%" y="533" width="0.0805%" height="15" fill="rgb(247,200,46)" fg:x="341" fg:w="1"/><text x="27.7057%" y="543.50"></text></g><g><title>engine::session::Session::flush (102 samples, 8.21%)</title><rect x="19.4042%" y="725" width="8.2126%" height="15" fill="rgb(218,76,16)" fg:x="241" fg:w="102"/><text x="19.6542%" y="735.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (101 samples, 8.13%)</title><rect x="19.4847%" y="709" width="8.1320%" height="15" fill="rgb(225,21,48)" fg:x="242" fg:w="101"/><text x="19.7347%" y="719.50">engine::ses..</text></g><g><title>engine::session::state::State::close (99 samples, 7.97%)</title><rect x="19.6457%" y="693" width="7.9710%" height="15" fill="rgb(239,223,50)" fg:x="244" fg:w="99"/><text x="19.8957%" y="703.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (99 samples, 7.97%)</title><rect x="19.6457%" y="677" width="7.9710%" height="15" fill="rgb(244,45,21)" fg:x="244" fg:w="99"/><text x="19.8957%" y="687.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (95 samples, 7.65%)</title><rect x="19.9678%" y="661" width="7.6490%" height="15" fill="rgb(232,33,43)" fg:x="248" fg:w="95"/><text x="20.2178%" y="671.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (93 samples, 7.49%)</title><rect x="20.1288%" y="645" width="7.4879%" height="15" fill="rgb(209,8,3)" fg:x="250" fg:w="93"/><text x="20.3788%" y="655.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.58%)</title><rect x="25.0403%" y="629" width="2.5765%" height="15" fill="rgb(214,25,53)" fg:x="311" fg:w="32"/><text x="25.2903%" y="639.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.50%)</title><rect x="25.1208%" y="613" width="2.4960%" height="15" fill="rgb(254,186,54)" fg:x="312" fg:w="31"/><text x="25.3708%" y="623.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.50%)</title><rect x="25.1208%" y="597" width="2.4960%" height="15" fill="rgb(208,174,49)" fg:x="312" fg:w="31"/><text x="25.3708%" y="607.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.85%)</title><rect x="25.7649%" y="581" width="1.8519%" height="15" fill="rgb(233,191,51)" fg:x="320" fg:w="23"/><text x="26.0149%" y="591.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5362%" y="565" width="0.0805%" height="15" fill="rgb(222,134,10)" fg:x="342" fg:w="1"/><text x="27.7862%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="27.6167%" y="693" width="0.0805%" height="15" fill="rgb(230,226,20)" fg:x="343" fg:w="1"/><text x="27.8667%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="27.6167%" y="677" width="0.0805%" height="15" fill="rgb(251,111,25)" fg:x="343" fg:w="1"/><text x="27.8667%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="27.6167%" y="709" width="0.1610%" height="15" fill="rgb(224,40,46)" fg:x="343" fg:w="2"/><text x="27.8667%" y="719.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="27.6973%" y="693" width="0.0805%" height="15" fill="rgb(236,108,47)" fg:x="344" fg:w="1"/><text x="27.9473%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="27.6973%" y="677" width="0.0805%" height="15" fill="rgb(234,93,0)" fg:x="344" fg:w="1"/><text x="27.9473%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.6973%" y="661" width="0.0805%" height="15" fill="rgb(224,213,32)" fg:x="344" fg:w="1"/><text x="27.9473%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6973%" y="645" width="0.0805%" height="15" fill="rgb(251,11,48)" fg:x="344" fg:w="1"/><text x="27.9473%" y="655.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="27.7778%" y="709" width="0.0805%" height="15" fill="rgb(236,173,5)" fg:x="345" fg:w="1"/><text x="28.0278%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7778%" y="693" width="0.0805%" height="15" fill="rgb(230,95,12)" fg:x="345" fg:w="1"/><text x="28.0278%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="27.6167%" y="725" width="0.3221%" height="15" fill="rgb(232,209,1)" fg:x="343" fg:w="4"/><text x="27.8667%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="27.8583%" y="709" width="0.0805%" height="15" fill="rgb(232,6,1)" fg:x="346" fg:w="1"/><text x="28.1083%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.8583%" y="693" width="0.0805%" height="15" fill="rgb(210,224,50)" fg:x="346" fg:w="1"/><text x="28.1083%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.8583%" y="677" width="0.0805%" height="15" fill="rgb(228,127,35)" fg:x="346" fg:w="1"/><text x="28.1083%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.8583%" y="661" width="0.0805%" height="15" fill="rgb(245,102,45)" fg:x="346" fg:w="1"/><text x="28.1083%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.8583%" y="645" width="0.0805%" height="15" fill="rgb(214,1,49)" fg:x="346" fg:w="1"/><text x="28.1083%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="28.0193%" y="677" width="0.0805%" height="15" fill="rgb(226,163,40)" fg:x="348" fg:w="1"/><text x="28.2693%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="28.0193%" y="661" width="0.0805%" height="15" fill="rgb(239,212,28)" fg:x="348" fg:w="1"/><text x="28.2693%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.0193%" y="645" width="0.0805%" height="15" fill="rgb(220,20,13)" fg:x="348" fg:w="1"/><text x="28.2693%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="28.0193%" y="693" width="0.1610%" height="15" fill="rgb(210,164,35)" fg:x="348" fg:w="2"/><text x="28.2693%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="28.0998%" y="677" width="0.0805%" height="15" fill="rgb(248,109,41)" fg:x="349" fg:w="1"/><text x="28.3498%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.0998%" y="661" width="0.0805%" height="15" fill="rgb(238,23,50)" fg:x="349" fg:w="1"/><text x="28.3498%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="645" width="0.0805%" height="15" fill="rgb(211,48,49)" fg:x="349" fg:w="1"/><text x="28.3498%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0998%" y="629" width="0.0805%" height="15" fill="rgb(223,36,21)" fg:x="349" fg:w="1"/><text x="28.3498%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="613" width="0.0805%" height="15" fill="rgb(207,123,46)" fg:x="349" fg:w="1"/><text x="28.3498%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="597" width="0.0805%" height="15" fill="rgb(240,218,32)" fg:x="349" fg:w="1"/><text x="28.3498%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="581" width="0.0805%" height="15" fill="rgb(252,5,43)" fg:x="349" fg:w="1"/><text x="28.3498%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0998%" y="565" width="0.0805%" height="15" fill="rgb(252,84,19)" fg:x="349" fg:w="1"/><text x="28.3498%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="549" width="0.0805%" height="15" fill="rgb(243,152,39)" fg:x="349" fg:w="1"/><text x="28.3498%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="533" width="0.0805%" height="15" fill="rgb(234,160,15)" fg:x="349" fg:w="1"/><text x="28.3498%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="517" width="0.0805%" height="15" fill="rgb(237,34,20)" fg:x="349" fg:w="1"/><text x="28.3498%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0998%" y="501" width="0.0805%" height="15" fill="rgb(229,97,13)" fg:x="349" fg:w="1"/><text x="28.3498%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="485" width="0.0805%" height="15" fill="rgb(234,71,50)" fg:x="349" fg:w="1"/><text x="28.3498%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="469" width="0.0805%" height="15" fill="rgb(253,155,4)" fg:x="349" fg:w="1"/><text x="28.3498%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="453" width="0.0805%" height="15" fill="rgb(222,185,37)" fg:x="349" fg:w="1"/><text x="28.3498%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0998%" y="437" width="0.0805%" height="15" fill="rgb(251,177,13)" fg:x="349" fg:w="1"/><text x="28.3498%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0998%" y="421" width="0.0805%" height="15" fill="rgb(250,179,40)" fg:x="349" fg:w="1"/><text x="28.3498%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0998%" y="405" width="0.0805%" height="15" fill="rgb(242,44,2)" fg:x="349" fg:w="1"/><text x="28.3498%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0998%" y="389" width="0.0805%" height="15" fill="rgb(216,177,13)" fg:x="349" fg:w="1"/><text x="28.3498%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.0998%" y="373" width="0.0805%" height="15" fill="rgb(216,106,43)" fg:x="349" fg:w="1"/><text x="28.3498%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.0998%" y="357" width="0.0805%" height="15" fill="rgb(216,183,2)" fg:x="349" fg:w="1"/><text x="28.3498%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.0998%" y="341" width="0.0805%" height="15" fill="rgb(249,75,3)" fg:x="349" fg:w="1"/><text x="28.3498%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.0998%" y="325" width="0.0805%" height="15" fill="rgb(219,67,39)" fg:x="349" fg:w="1"/><text x="28.3498%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.0998%" y="309" width="0.0805%" height="15" fill="rgb(253,228,2)" fg:x="349" fg:w="1"/><text x="28.3498%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="28.0998%" y="293" width="0.0805%" height="15" fill="rgb(235,138,27)" fg:x="349" fg:w="1"/><text x="28.3498%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.0998%" y="277" width="0.0805%" height="15" fill="rgb(236,97,51)" fg:x="349" fg:w="1"/><text x="28.3498%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="28.0998%" y="261" width="0.0805%" height="15" fill="rgb(240,80,30)" fg:x="349" fg:w="1"/><text x="28.3498%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.0998%" y="245" width="0.0805%" height="15" fill="rgb(230,178,19)" fg:x="349" fg:w="1"/><text x="28.3498%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="28.0998%" y="229" width="0.0805%" height="15" fill="rgb(210,190,27)" fg:x="349" fg:w="1"/><text x="28.3498%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="28.0998%" y="213" width="0.0805%" height="15" fill="rgb(222,107,31)" fg:x="349" fg:w="1"/><text x="28.3498%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="28.0998%" y="197" width="0.0805%" height="15" fill="rgb(216,127,34)" fg:x="349" fg:w="1"/><text x="28.3498%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.0998%" y="181" width="0.0805%" height="15" fill="rgb(234,116,52)" fg:x="349" fg:w="1"/><text x="28.3498%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1804%" y="613" width="0.0805%" height="15" fill="rgb(222,124,15)" fg:x="350" fg:w="1"/><text x="28.4304%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.1804%" y="645" width="0.1610%" height="15" fill="rgb(231,179,28)" fg:x="350" fg:w="2"/><text x="28.4304%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="28.1804%" y="629" width="0.1610%" height="15" fill="rgb(226,93,45)" fg:x="350" fg:w="2"/><text x="28.4304%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.2609%" y="613" width="0.0805%" height="15" fill="rgb(215,8,51)" fg:x="351" fg:w="1"/><text x="28.5109%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.2609%" y="597" width="0.0805%" height="15" fill="rgb(223,106,5)" fg:x="351" fg:w="1"/><text x="28.5109%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="28.1804%" y="693" width="0.2415%" height="15" fill="rgb(250,191,5)" fg:x="350" fg:w="3"/><text x="28.4304%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="28.1804%" y="677" width="0.2415%" height="15" fill="rgb(242,132,44)" fg:x="350" fg:w="3"/><text x="28.4304%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.1804%" y="661" width="0.2415%" height="15" fill="rgb(251,152,29)" fg:x="350" fg:w="3"/><text x="28.4304%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3414%" y="645" width="0.0805%" height="15" fill="rgb(218,179,5)" fg:x="352" fg:w="1"/><text x="28.5914%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3414%" y="629" width="0.0805%" height="15" fill="rgb(227,67,19)" fg:x="352" fg:w="1"/><text x="28.5914%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3414%" y="613" width="0.0805%" height="15" fill="rgb(233,119,31)" fg:x="352" fg:w="1"/><text x="28.5914%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3414%" y="597" width="0.0805%" height="15" fill="rgb(241,120,22)" fg:x="352" fg:w="1"/><text x="28.5914%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.3414%" y="581" width="0.0805%" height="15" fill="rgb(224,102,30)" fg:x="352" fg:w="1"/><text x="28.5914%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3414%" y="565" width="0.0805%" height="15" fill="rgb(210,164,37)" fg:x="352" fg:w="1"/><text x="28.5914%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.3414%" y="549" width="0.0805%" height="15" fill="rgb(226,191,16)" fg:x="352" fg:w="1"/><text x="28.5914%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3414%" y="533" width="0.0805%" height="15" fill="rgb(214,40,45)" fg:x="352" fg:w="1"/><text x="28.5914%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="28.4219%" y="677" width="0.0805%" height="15" fill="rgb(244,29,26)" fg:x="353" fg:w="1"/><text x="28.6719%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="28.4219%" y="693" width="0.1610%" height="15" fill="rgb(216,16,5)" fg:x="353" fg:w="2"/><text x="28.6719%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.5024%" y="677" width="0.0805%" height="15" fill="rgb(249,76,35)" fg:x="354" fg:w="1"/><text x="28.7524%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5024%" y="661" width="0.0805%" height="15" fill="rgb(207,11,44)" fg:x="354" fg:w="1"/><text x="28.7524%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5024%" y="645" width="0.0805%" height="15" fill="rgb(228,190,49)" fg:x="354" fg:w="1"/><text x="28.7524%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5024%" y="629" width="0.0805%" height="15" fill="rgb(214,173,12)" fg:x="354" fg:w="1"/><text x="28.7524%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.5024%" y="613" width="0.0805%" height="15" fill="rgb(218,26,35)" fg:x="354" fg:w="1"/><text x="28.7524%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.5024%" y="597" width="0.0805%" height="15" fill="rgb(220,200,19)" fg:x="354" fg:w="1"/><text x="28.7524%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.5024%" y="581" width="0.0805%" height="15" fill="rgb(239,95,49)" fg:x="354" fg:w="1"/><text x="28.7524%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5024%" y="565" width="0.0805%" height="15" fill="rgb(235,85,53)" fg:x="354" fg:w="1"/><text x="28.7524%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5024%" y="549" width="0.0805%" height="15" fill="rgb(233,133,31)" fg:x="354" fg:w="1"/><text x="28.7524%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.5024%" y="533" width="0.0805%" height="15" fill="rgb(218,25,20)" fg:x="354" fg:w="1"/><text x="28.7524%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.5024%" y="517" width="0.0805%" height="15" fill="rgb(252,210,38)" fg:x="354" fg:w="1"/><text x="28.7524%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.5024%" y="501" width="0.0805%" height="15" fill="rgb(242,134,21)" fg:x="354" fg:w="1"/><text x="28.7524%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.5024%" y="485" width="0.0805%" height="15" fill="rgb(213,28,48)" fg:x="354" fg:w="1"/><text x="28.7524%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.5829%" y="645" width="0.0805%" height="15" fill="rgb(250,196,2)" fg:x="355" fg:w="1"/><text x="28.8329%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.5829%" y="629" width="0.0805%" height="15" fill="rgb(227,5,17)" fg:x="355" fg:w="1"/><text x="28.8329%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5829%" y="613" width="0.0805%" height="15" fill="rgb(221,226,24)" fg:x="355" fg:w="1"/><text x="28.8329%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5829%" y="597" width="0.0805%" height="15" fill="rgb(211,5,48)" fg:x="355" fg:w="1"/><text x="28.8329%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5829%" y="581" width="0.0805%" height="15" fill="rgb(219,150,6)" fg:x="355" fg:w="1"/><text x="28.8329%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.5829%" y="565" width="0.0805%" height="15" fill="rgb(251,46,16)" fg:x="355" fg:w="1"/><text x="28.8329%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.5829%" y="549" width="0.0805%" height="15" fill="rgb(220,204,40)" fg:x="355" fg:w="1"/><text x="28.8329%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.5829%" y="533" width="0.0805%" height="15" fill="rgb(211,85,2)" fg:x="355" fg:w="1"/><text x="28.8329%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5829%" y="517" width="0.0805%" height="15" fill="rgb(229,17,7)" fg:x="355" fg:w="1"/><text x="28.8329%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5829%" y="501" width="0.0805%" height="15" fill="rgb(239,72,28)" fg:x="355" fg:w="1"/><text x="28.8329%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.5829%" y="485" width="0.0805%" height="15" fill="rgb(230,47,54)" fg:x="355" fg:w="1"/><text x="28.8329%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.5829%" y="469" width="0.0805%" height="15" fill="rgb(214,50,8)" fg:x="355" fg:w="1"/><text x="28.8329%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.5829%" y="453" width="0.0805%" height="15" fill="rgb(216,198,43)" fg:x="355" fg:w="1"/><text x="28.8329%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.5829%" y="437" width="0.0805%" height="15" fill="rgb(234,20,35)" fg:x="355" fg:w="1"/><text x="28.8329%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5829%" y="421" width="0.0805%" height="15" fill="rgb(254,45,19)" fg:x="355" fg:w="1"/><text x="28.8329%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="613" width="0.0805%" height="15" fill="rgb(219,14,44)" fg:x="356" fg:w="1"/><text x="28.9134%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="597" width="0.0805%" height="15" fill="rgb(217,220,26)" fg:x="356" fg:w="1"/><text x="28.9134%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="581" width="0.0805%" height="15" fill="rgb(213,158,28)" fg:x="356" fg:w="1"/><text x="28.9134%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="565" width="0.0805%" height="15" fill="rgb(252,51,52)" fg:x="356" fg:w="1"/><text x="28.9134%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="549" width="0.0805%" height="15" fill="rgb(246,89,16)" fg:x="356" fg:w="1"/><text x="28.9134%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.6634%" y="533" width="0.0805%" height="15" fill="rgb(216,158,49)" fg:x="356" fg:w="1"/><text x="28.9134%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6634%" y="517" width="0.0805%" height="15" fill="rgb(236,107,19)" fg:x="356" fg:w="1"/><text x="28.9134%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="27.9388%" y="709" width="0.8857%" height="15" fill="rgb(228,185,30)" fg:x="347" fg:w="11"/><text x="28.1888%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="28.5829%" y="693" width="0.2415%" height="15" fill="rgb(246,134,8)" fg:x="355" fg:w="3"/><text x="28.8329%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="28.5829%" y="677" width="0.2415%" height="15" fill="rgb(214,143,50)" fg:x="355" fg:w="3"/><text x="28.8329%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="28.5829%" y="661" width="0.2415%" height="15" fill="rgb(228,75,8)" fg:x="355" fg:w="3"/><text x="28.8329%" y="671.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="28.6634%" y="645" width="0.1610%" height="15" fill="rgb(207,175,4)" fg:x="356" fg:w="2"/><text x="28.9134%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.6634%" y="629" width="0.1610%" height="15" fill="rgb(205,108,24)" fg:x="356" fg:w="2"/><text x="28.9134%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.7440%" y="613" width="0.0805%" height="15" fill="rgb(244,120,49)" fg:x="357" fg:w="1"/><text x="28.9940%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.7440%" y="597" width="0.0805%" height="15" fill="rgb(223,47,38)" fg:x="357" fg:w="1"/><text x="28.9940%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.8245%" y="645" width="0.0805%" height="15" fill="rgb(229,179,11)" fg:x="358" fg:w="1"/><text x="29.0745%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9050%" y="613" width="0.1610%" height="15" fill="rgb(231,122,1)" fg:x="359" fg:w="2"/><text x="29.1550%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9050%" y="597" width="0.1610%" height="15" fill="rgb(245,119,9)" fg:x="359" fg:w="2"/><text x="29.1550%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9050%" y="581" width="0.1610%" height="15" fill="rgb(241,163,25)" fg:x="359" fg:w="2"/><text x="29.1550%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.9855%" y="565" width="0.0805%" height="15" fill="rgb(217,214,3)" fg:x="360" fg:w="1"/><text x="29.2355%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.9855%" y="549" width="0.0805%" height="15" fill="rgb(240,86,28)" fg:x="360" fg:w="1"/><text x="29.2355%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.9855%" y="533" width="0.0805%" height="15" fill="rgb(215,47,9)" fg:x="360" fg:w="1"/><text x="29.2355%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.9855%" y="517" width="0.0805%" height="15" fill="rgb(252,25,45)" fg:x="360" fg:w="1"/><text x="29.2355%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.9855%" y="501" width="0.0805%" height="15" fill="rgb(251,164,9)" fg:x="360" fg:w="1"/><text x="29.2355%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.9855%" y="485" width="0.0805%" height="15" fill="rgb(233,194,0)" fg:x="360" fg:w="1"/><text x="29.2355%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.9855%" y="469" width="0.0805%" height="15" fill="rgb(249,111,24)" fg:x="360" fg:w="1"/><text x="29.2355%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.9855%" y="453" width="0.0805%" height="15" fill="rgb(250,223,3)" fg:x="360" fg:w="1"/><text x="29.2355%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.9855%" y="437" width="0.0805%" height="15" fill="rgb(236,178,37)" fg:x="360" fg:w="1"/><text x="29.2355%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.9855%" y="421" width="0.0805%" height="15" fill="rgb(241,158,50)" fg:x="360" fg:w="1"/><text x="29.2355%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.9855%" y="405" width="0.0805%" height="15" fill="rgb(213,121,41)" fg:x="360" fg:w="1"/><text x="29.2355%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.9855%" y="389" width="0.0805%" height="15" fill="rgb(240,92,3)" fg:x="360" fg:w="1"/><text x="29.2355%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9855%" y="373" width="0.0805%" height="15" fill="rgb(205,123,3)" fg:x="360" fg:w="1"/><text x="29.2355%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0660%" y="581" width="0.0805%" height="15" fill="rgb(205,97,47)" fg:x="361" fg:w="1"/><text x="29.3160%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.0660%" y="565" width="0.0805%" height="15" fill="rgb(247,152,14)" fg:x="361" fg:w="1"/><text x="29.3160%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="29.0660%" y="613" width="0.2415%" height="15" fill="rgb(248,195,53)" fg:x="361" fg:w="3"/><text x="29.3160%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="29.0660%" y="597" width="0.2415%" height="15" fill="rgb(226,201,16)" fg:x="361" fg:w="3"/><text x="29.3160%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.1465%" y="581" width="0.1610%" height="15" fill="rgb(205,98,0)" fg:x="362" fg:w="2"/><text x="29.3965%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="29.1465%" y="565" width="0.1610%" height="15" fill="rgb(214,191,48)" fg:x="362" fg:w="2"/><text x="29.3965%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.2271%" y="549" width="0.0805%" height="15" fill="rgb(237,112,39)" fg:x="363" fg:w="1"/><text x="29.4771%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.2271%" y="533" width="0.0805%" height="15" fill="rgb(247,203,27)" fg:x="363" fg:w="1"/><text x="29.4771%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="28.8245%" y="661" width="0.5636%" height="15" fill="rgb(235,124,28)" fg:x="358" fg:w="7"/><text x="29.0745%" y="671.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="28.9050%" y="645" width="0.4831%" height="15" fill="rgb(208,207,46)" fg:x="359" fg:w="6"/><text x="29.1550%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="28.9050%" y="629" width="0.4831%" height="15" fill="rgb(234,176,4)" fg:x="359" fg:w="6"/><text x="29.1550%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3076%" y="613" width="0.0805%" height="15" fill="rgb(230,133,28)" fg:x="364" fg:w="1"/><text x="29.5576%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3076%" y="597" width="0.0805%" height="15" fill="rgb(211,137,40)" fg:x="364" fg:w="1"/><text x="29.5576%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3076%" y="581" width="0.0805%" height="15" fill="rgb(254,35,13)" fg:x="364" fg:w="1"/><text x="29.5576%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3076%" y="565" width="0.0805%" height="15" fill="rgb(225,49,51)" fg:x="364" fg:w="1"/><text x="29.5576%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.3076%" y="549" width="0.0805%" height="15" fill="rgb(251,10,15)" fg:x="364" fg:w="1"/><text x="29.5576%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3076%" y="533" width="0.0805%" height="15" fill="rgb(228,207,15)" fg:x="364" fg:w="1"/><text x="29.5576%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3076%" y="517" width="0.0805%" height="15" fill="rgb(241,99,19)" fg:x="364" fg:w="1"/><text x="29.5576%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3076%" y="501" width="0.0805%" height="15" fill="rgb(207,104,49)" fg:x="364" fg:w="1"/><text x="29.5576%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3076%" y="485" width="0.0805%" height="15" fill="rgb(234,99,18)" fg:x="364" fg:w="1"/><text x="29.5576%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.3881%" y="645" width="0.0805%" height="15" fill="rgb(213,191,49)" fg:x="365" fg:w="1"/><text x="29.6381%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3881%" y="629" width="0.0805%" height="15" fill="rgb(210,226,19)" fg:x="365" fg:w="1"/><text x="29.6381%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="29.4686%" y="645" width="0.0805%" height="15" fill="rgb(229,97,18)" fg:x="366" fg:w="1"/><text x="29.7186%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.4686%" y="629" width="0.0805%" height="15" fill="rgb(211,167,15)" fg:x="366" fg:w="1"/><text x="29.7186%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="29.4686%" y="613" width="0.0805%" height="15" fill="rgb(210,169,34)" fg:x="366" fg:w="1"/><text x="29.7186%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5491%" y="549" width="0.0805%" height="15" fill="rgb(241,121,31)" fg:x="367" fg:w="1"/><text x="29.7991%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5491%" y="533" width="0.0805%" height="15" fill="rgb(232,40,11)" fg:x="367" fg:w="1"/><text x="29.7991%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.5491%" y="597" width="0.2415%" height="15" fill="rgb(205,86,26)" fg:x="367" fg:w="3"/><text x="29.7991%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.5491%" y="581" width="0.2415%" height="15" fill="rgb(231,126,28)" fg:x="367" fg:w="3"/><text x="29.7991%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="29.5491%" y="565" width="0.2415%" height="15" fill="rgb(219,221,18)" fg:x="367" fg:w="3"/><text x="29.7991%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="29.6296%" y="549" width="0.1610%" height="15" fill="rgb(211,40,0)" fg:x="368" fg:w="2"/><text x="29.8796%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="29.6296%" y="533" width="0.1610%" height="15" fill="rgb(239,85,43)" fg:x="368" fg:w="2"/><text x="29.8796%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="29.6296%" y="517" width="0.1610%" height="15" fill="rgb(231,55,21)" fg:x="368" fg:w="2"/><text x="29.8796%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="29.6296%" y="501" width="0.1610%" height="15" fill="rgb(225,184,43)" fg:x="368" fg:w="2"/><text x="29.8796%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="29.6296%" y="485" width="0.1610%" height="15" fill="rgb(251,158,41)" fg:x="368" fg:w="2"/><text x="29.8796%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="29.6296%" y="469" width="0.1610%" height="15" fill="rgb(234,159,37)" fg:x="368" fg:w="2"/><text x="29.8796%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="29.6296%" y="453" width="0.1610%" height="15" fill="rgb(216,204,22)" fg:x="368" fg:w="2"/><text x="29.8796%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="29.6296%" y="437" width="0.1610%" height="15" fill="rgb(214,17,3)" fg:x="368" fg:w="2"/><text x="29.8796%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="29.6296%" y="421" width="0.1610%" height="15" fill="rgb(212,111,17)" fg:x="368" fg:w="2"/><text x="29.8796%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="29.6296%" y="405" width="0.1610%" height="15" fill="rgb(221,157,24)" fg:x="368" fg:w="2"/><text x="29.8796%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="29.6296%" y="389" width="0.1610%" height="15" fill="rgb(252,16,13)" fg:x="368" fg:w="2"/><text x="29.8796%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.6296%" y="373" width="0.1610%" height="15" fill="rgb(221,62,2)" fg:x="368" fg:w="2"/><text x="29.8796%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="29.5491%" y="613" width="0.3221%" height="15" fill="rgb(247,87,22)" fg:x="367" fg:w="4"/><text x="29.7991%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7907%" y="597" width="0.0805%" height="15" fill="rgb(215,73,9)" fg:x="370" fg:w="1"/><text x="30.0407%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7907%" y="581" width="0.0805%" height="15" fill="rgb(207,175,33)" fg:x="370" fg:w="1"/><text x="30.0407%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.7907%" y="565" width="0.0805%" height="15" fill="rgb(243,129,54)" fg:x="370" fg:w="1"/><text x="30.0407%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.7907%" y="549" width="0.0805%" height="15" fill="rgb(227,119,45)" fg:x="370" fg:w="1"/><text x="30.0407%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.7907%" y="533" width="0.0805%" height="15" fill="rgb(205,109,36)" fg:x="370" fg:w="1"/><text x="30.0407%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7907%" y="517" width="0.0805%" height="15" fill="rgb(205,6,39)" fg:x="370" fg:w="1"/><text x="30.0407%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7907%" y="501" width="0.0805%" height="15" fill="rgb(221,32,16)" fg:x="370" fg:w="1"/><text x="30.0407%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.7907%" y="485" width="0.0805%" height="15" fill="rgb(228,144,50)" fg:x="370" fg:w="1"/><text x="30.0407%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.7907%" y="469" width="0.0805%" height="15" fill="rgb(229,201,53)" fg:x="370" fg:w="1"/><text x="30.0407%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.7907%" y="453" width="0.0805%" height="15" fill="rgb(249,153,27)" fg:x="370" fg:w="1"/><text x="30.0407%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.7907%" y="437" width="0.0805%" height="15" fill="rgb(227,106,25)" fg:x="370" fg:w="1"/><text x="30.0407%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7907%" y="421" width="0.0805%" height="15" fill="rgb(230,65,29)" fg:x="370" fg:w="1"/><text x="30.0407%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9517%" y="517" width="0.0805%" height="15" fill="rgb(221,57,46)" fg:x="372" fg:w="1"/><text x="30.2017%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.9517%" y="501" width="0.0805%" height="15" fill="rgb(229,161,17)" fg:x="372" fg:w="1"/><text x="30.2017%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (16 samples, 1.29%)</title><rect x="28.8245%" y="693" width="1.2882%" height="15" fill="rgb(222,213,11)" fg:x="358" fg:w="16"/><text x="29.0745%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (16 samples, 1.29%)</title><rect x="28.8245%" y="677" width="1.2882%" height="15" fill="rgb(235,35,13)" fg:x="358" fg:w="16"/><text x="29.0745%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="29.3881%" y="661" width="0.7246%" height="15" fill="rgb(233,158,34)" fg:x="365" fg:w="9"/><text x="29.6381%" y="671.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="29.5491%" y="645" width="0.5636%" height="15" fill="rgb(215,151,48)" fg:x="367" fg:w="7"/><text x="29.7991%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="29.5491%" y="629" width="0.5636%" height="15" fill="rgb(229,84,14)" fg:x="367" fg:w="7"/><text x="29.7991%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.8712%" y="613" width="0.2415%" height="15" fill="rgb(229,68,14)" fg:x="371" fg:w="3"/><text x="30.1212%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.8712%" y="597" width="0.2415%" height="15" fill="rgb(243,106,26)" fg:x="371" fg:w="3"/><text x="30.1212%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.8712%" y="581" width="0.2415%" height="15" fill="rgb(206,45,38)" fg:x="371" fg:w="3"/><text x="30.1212%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.8712%" y="565" width="0.2415%" height="15" fill="rgb(226,6,15)" fg:x="371" fg:w="3"/><text x="30.1212%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="29.8712%" y="549" width="0.2415%" height="15" fill="rgb(232,22,54)" fg:x="371" fg:w="3"/><text x="30.1212%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.8712%" y="533" width="0.2415%" height="15" fill="rgb(229,222,32)" fg:x="371" fg:w="3"/><text x="30.1212%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.0322%" y="517" width="0.0805%" height="15" fill="rgb(228,62,29)" fg:x="373" fg:w="1"/><text x="30.2822%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0322%" y="501" width="0.0805%" height="15" fill="rgb(251,103,34)" fg:x="373" fg:w="1"/><text x="30.2822%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.0322%" y="485" width="0.0805%" height="15" fill="rgb(233,12,30)" fg:x="373" fg:w="1"/><text x="30.2822%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.1127%" y="629" width="0.0805%" height="15" fill="rgb(238,52,0)" fg:x="374" fg:w="1"/><text x="30.3627%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.1127%" y="613" width="0.0805%" height="15" fill="rgb(223,98,5)" fg:x="374" fg:w="1"/><text x="30.3627%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.1127%" y="597" width="0.0805%" height="15" fill="rgb(228,75,37)" fg:x="374" fg:w="1"/><text x="30.3627%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1932%" y="597" width="0.0805%" height="15" fill="rgb(205,115,49)" fg:x="375" fg:w="1"/><text x="30.4432%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1932%" y="581" width="0.0805%" height="15" fill="rgb(250,154,43)" fg:x="375" fg:w="1"/><text x="30.4432%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1932%" y="565" width="0.0805%" height="15" fill="rgb(226,43,29)" fg:x="375" fg:w="1"/><text x="30.4432%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1932%" y="549" width="0.0805%" height="15" fill="rgb(249,228,39)" fg:x="375" fg:w="1"/><text x="30.4432%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1932%" y="533" width="0.0805%" height="15" fill="rgb(216,79,43)" fg:x="375" fg:w="1"/><text x="30.4432%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="30.1127%" y="645" width="0.2415%" height="15" fill="rgb(228,95,12)" fg:x="374" fg:w="3"/><text x="30.3627%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.1932%" y="629" width="0.1610%" height="15" fill="rgb(249,221,15)" fg:x="375" fg:w="2"/><text x="30.4432%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.1932%" y="613" width="0.1610%" height="15" fill="rgb(233,34,13)" fg:x="375" fg:w="2"/><text x="30.4432%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2738%" y="597" width="0.0805%" height="15" fill="rgb(214,103,39)" fg:x="376" fg:w="1"/><text x="30.5238%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2738%" y="581" width="0.0805%" height="15" fill="rgb(251,126,39)" fg:x="376" fg:w="1"/><text x="30.5238%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2738%" y="565" width="0.0805%" height="15" fill="rgb(214,216,36)" fg:x="376" fg:w="1"/><text x="30.5238%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2738%" y="549" width="0.0805%" height="15" fill="rgb(220,221,8)" fg:x="376" fg:w="1"/><text x="30.5238%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.2738%" y="533" width="0.0805%" height="15" fill="rgb(240,216,3)" fg:x="376" fg:w="1"/><text x="30.5238%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2738%" y="517" width="0.0805%" height="15" fill="rgb(232,218,17)" fg:x="376" fg:w="1"/><text x="30.5238%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2738%" y="501" width="0.0805%" height="15" fill="rgb(229,163,45)" fg:x="376" fg:w="1"/><text x="30.5238%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2738%" y="485" width="0.0805%" height="15" fill="rgb(231,110,42)" fg:x="376" fg:w="1"/><text x="30.5238%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="30.4348%" y="533" width="0.2415%" height="15" fill="rgb(208,170,48)" fg:x="378" fg:w="3"/><text x="30.6848%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.5153%" y="517" width="0.1610%" height="15" fill="rgb(239,116,25)" fg:x="379" fg:w="2"/><text x="30.7653%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="30.5153%" y="501" width="0.1610%" height="15" fill="rgb(219,200,50)" fg:x="379" fg:w="2"/><text x="30.7653%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.5153%" y="485" width="0.1610%" height="15" fill="rgb(245,200,0)" fg:x="379" fg:w="2"/><text x="30.7653%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.5153%" y="469" width="0.1610%" height="15" fill="rgb(245,119,33)" fg:x="379" fg:w="2"/><text x="30.7653%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.5153%" y="453" width="0.1610%" height="15" fill="rgb(231,125,12)" fg:x="379" fg:w="2"/><text x="30.7653%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.5153%" y="437" width="0.1610%" height="15" fill="rgb(216,96,41)" fg:x="379" fg:w="2"/><text x="30.7653%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="30.5153%" y="421" width="0.1610%" height="15" fill="rgb(248,43,45)" fg:x="379" fg:w="2"/><text x="30.7653%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="30.5153%" y="405" width="0.1610%" height="15" fill="rgb(217,222,7)" fg:x="379" fg:w="2"/><text x="30.7653%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="30.5153%" y="389" width="0.1610%" height="15" fill="rgb(233,28,6)" fg:x="379" fg:w="2"/><text x="30.7653%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="30.5153%" y="373" width="0.1610%" height="15" fill="rgb(231,218,15)" fg:x="379" fg:w="2"/><text x="30.7653%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.5153%" y="357" width="0.1610%" height="15" fill="rgb(226,171,48)" fg:x="379" fg:w="2"/><text x="30.7653%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="30.4348%" y="549" width="0.3221%" height="15" fill="rgb(235,201,9)" fg:x="378" fg:w="4"/><text x="30.6848%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6763%" y="533" width="0.0805%" height="15" fill="rgb(217,80,15)" fg:x="381" fg:w="1"/><text x="30.9263%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="30.4348%" y="581" width="0.4026%" height="15" fill="rgb(219,152,8)" fg:x="378" fg:w="5"/><text x="30.6848%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="30.4348%" y="565" width="0.4026%" height="15" fill="rgb(243,107,38)" fg:x="378" fg:w="5"/><text x="30.6848%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7568%" y="549" width="0.0805%" height="15" fill="rgb(231,17,5)" fg:x="382" fg:w="1"/><text x="31.0068%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7568%" y="533" width="0.0805%" height="15" fill="rgb(209,25,54)" fg:x="382" fg:w="1"/><text x="31.0068%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7568%" y="517" width="0.0805%" height="15" fill="rgb(219,0,2)" fg:x="382" fg:w="1"/><text x="31.0068%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7568%" y="501" width="0.0805%" height="15" fill="rgb(246,9,5)" fg:x="382" fg:w="1"/><text x="31.0068%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7568%" y="485" width="0.0805%" height="15" fill="rgb(226,159,4)" fg:x="382" fg:w="1"/><text x="31.0068%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7568%" y="469" width="0.0805%" height="15" fill="rgb(219,175,34)" fg:x="382" fg:w="1"/><text x="31.0068%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7568%" y="453" width="0.0805%" height="15" fill="rgb(236,10,46)" fg:x="382" fg:w="1"/><text x="31.0068%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7568%" y="437" width="0.0805%" height="15" fill="rgb(240,211,16)" fg:x="382" fg:w="1"/><text x="31.0068%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7568%" y="421" width="0.0805%" height="15" fill="rgb(205,3,43)" fg:x="382" fg:w="1"/><text x="31.0068%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7568%" y="405" width="0.0805%" height="15" fill="rgb(245,7,22)" fg:x="382" fg:w="1"/><text x="31.0068%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7568%" y="389" width="0.0805%" height="15" fill="rgb(239,132,32)" fg:x="382" fg:w="1"/><text x="31.0068%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7568%" y="373" width="0.0805%" height="15" fill="rgb(228,202,34)" fg:x="382" fg:w="1"/><text x="31.0068%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="30.4348%" y="597" width="0.5636%" height="15" fill="rgb(254,200,22)" fg:x="378" fg:w="7"/><text x="30.6848%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.8374%" y="581" width="0.1610%" height="15" fill="rgb(219,10,39)" fg:x="383" fg:w="2"/><text x="31.0874%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.8374%" y="565" width="0.1610%" height="15" fill="rgb(226,210,39)" fg:x="383" fg:w="2"/><text x="31.0874%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="30.8374%" y="549" width="0.1610%" height="15" fill="rgb(208,219,16)" fg:x="383" fg:w="2"/><text x="31.0874%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.8374%" y="533" width="0.1610%" height="15" fill="rgb(216,158,51)" fg:x="383" fg:w="2"/><text x="31.0874%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.8374%" y="517" width="0.1610%" height="15" fill="rgb(233,14,44)" fg:x="383" fg:w="2"/><text x="31.0874%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.8374%" y="501" width="0.1610%" height="15" fill="rgb(237,97,39)" fg:x="383" fg:w="2"/><text x="31.0874%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.8374%" y="485" width="0.1610%" height="15" fill="rgb(218,198,43)" fg:x="383" fg:w="2"/><text x="31.0874%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="30.8374%" y="469" width="0.1610%" height="15" fill="rgb(231,104,20)" fg:x="383" fg:w="2"/><text x="31.0874%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.9179%" y="453" width="0.0805%" height="15" fill="rgb(254,36,13)" fg:x="384" fg:w="1"/><text x="31.1679%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.9179%" y="437" width="0.0805%" height="15" fill="rgb(248,14,50)" fg:x="384" fg:w="1"/><text x="31.1679%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.9179%" y="421" width="0.0805%" height="15" fill="rgb(217,107,29)" fg:x="384" fg:w="1"/><text x="31.1679%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.9179%" y="405" width="0.0805%" height="15" fill="rgb(251,169,33)" fg:x="384" fg:w="1"/><text x="31.1679%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.9984%" y="597" width="0.0805%" height="15" fill="rgb(217,108,32)" fg:x="385" fg:w="1"/><text x="31.2484%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.05%)</title><rect x="30.1127%" y="677" width="1.0467%" height="15" fill="rgb(219,66,42)" fg:x="374" fg:w="13"/><text x="30.3627%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.05%)</title><rect x="30.1127%" y="661" width="1.0467%" height="15" fill="rgb(206,180,7)" fg:x="374" fg:w="13"/><text x="30.3627%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="30.3543%" y="645" width="0.8052%" height="15" fill="rgb(208,226,31)" fg:x="377" fg:w="10"/><text x="30.6043%" y="655.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="30.4348%" y="629" width="0.7246%" height="15" fill="rgb(218,26,49)" fg:x="378" fg:w="9"/><text x="30.6848%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="30.4348%" y="613" width="0.7246%" height="15" fill="rgb(233,197,48)" fg:x="378" fg:w="9"/><text x="30.6848%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0789%" y="597" width="0.0805%" height="15" fill="rgb(252,181,51)" fg:x="386" fg:w="1"/><text x="31.3289%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="581" width="0.0805%" height="15" fill="rgb(253,90,19)" fg:x="386" fg:w="1"/><text x="31.3289%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0789%" y="565" width="0.0805%" height="15" fill="rgb(215,171,30)" fg:x="386" fg:w="1"/><text x="31.3289%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="549" width="0.0805%" height="15" fill="rgb(214,222,9)" fg:x="386" fg:w="1"/><text x="31.3289%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.0789%" y="533" width="0.0805%" height="15" fill="rgb(223,3,22)" fg:x="386" fg:w="1"/><text x="31.3289%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="517" width="0.0805%" height="15" fill="rgb(225,196,46)" fg:x="386" fg:w="1"/><text x="31.3289%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0789%" y="501" width="0.0805%" height="15" fill="rgb(209,110,37)" fg:x="386" fg:w="1"/><text x="31.3289%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="485" width="0.0805%" height="15" fill="rgb(249,89,12)" fg:x="386" fg:w="1"/><text x="31.3289%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0789%" y="469" width="0.0805%" height="15" fill="rgb(226,27,33)" fg:x="386" fg:w="1"/><text x="31.3289%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0789%" y="453" width="0.0805%" height="15" fill="rgb(213,82,22)" fg:x="386" fg:w="1"/><text x="31.3289%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0789%" y="437" width="0.0805%" height="15" fill="rgb(248,140,0)" fg:x="386" fg:w="1"/><text x="31.3289%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.29%)</title><rect x="30.1127%" y="693" width="1.2882%" height="15" fill="rgb(228,106,3)" fg:x="374" fg:w="16"/><text x="30.3627%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="31.1594%" y="677" width="0.2415%" height="15" fill="rgb(209,23,37)" fg:x="387" fg:w="3"/><text x="31.4094%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.1594%" y="661" width="0.2415%" height="15" fill="rgb(241,93,50)" fg:x="387" fg:w="3"/><text x="31.4094%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="31.3205%" y="645" width="0.0805%" height="15" fill="rgb(253,46,43)" fg:x="389" fg:w="1"/><text x="31.5705%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.3205%" y="629" width="0.0805%" height="15" fill="rgb(226,206,43)" fg:x="389" fg:w="1"/><text x="31.5705%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.3205%" y="613" width="0.0805%" height="15" fill="rgb(217,54,7)" fg:x="389" fg:w="1"/><text x="31.5705%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="31.3205%" y="597" width="0.0805%" height="15" fill="rgb(223,5,52)" fg:x="389" fg:w="1"/><text x="31.5705%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="31.3205%" y="581" width="0.0805%" height="15" fill="rgb(206,52,46)" fg:x="389" fg:w="1"/><text x="31.5705%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.3205%" y="565" width="0.0805%" height="15" fill="rgb(253,136,11)" fg:x="389" fg:w="1"/><text x="31.5705%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.3205%" y="549" width="0.0805%" height="15" fill="rgb(208,106,33)" fg:x="389" fg:w="1"/><text x="31.5705%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.3205%" y="533" width="0.0805%" height="15" fill="rgb(206,54,4)" fg:x="389" fg:w="1"/><text x="31.5705%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.3205%" y="517" width="0.0805%" height="15" fill="rgb(213,3,15)" fg:x="389" fg:w="1"/><text x="31.5705%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.3205%" y="501" width="0.0805%" height="15" fill="rgb(252,211,39)" fg:x="389" fg:w="1"/><text x="31.5705%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.3205%" y="485" width="0.0805%" height="15" fill="rgb(223,6,36)" fg:x="389" fg:w="1"/><text x="31.5705%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3205%" y="469" width="0.0805%" height="15" fill="rgb(252,169,45)" fg:x="389" fg:w="1"/><text x="31.5705%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (45 samples, 3.62%)</title><rect x="27.9388%" y="725" width="3.6232%" height="15" fill="rgb(212,48,26)" fg:x="347" fg:w="45"/><text x="28.1888%" y="735.50">plug..</text></g><g><title>plugins_core::tools::set_container (34 samples, 2.74%)</title><rect x="28.8245%" y="709" width="2.7375%" height="15" fill="rgb(251,102,48)" fg:x="358" fg:w="34"/><text x="29.0745%" y="719.50">pl..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="31.4010%" y="693" width="0.1610%" height="15" fill="rgb(243,208,16)" fg:x="390" fg:w="2"/><text x="31.6510%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.4010%" y="677" width="0.1610%" height="15" fill="rgb(219,96,24)" fg:x="390" fg:w="2"/><text x="31.6510%" y="687.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="31.4010%" y="661" width="0.1610%" height="15" fill="rgb(219,33,29)" fg:x="390" fg:w="2"/><text x="31.6510%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.4010%" y="645" width="0.1610%" height="15" fill="rgb(223,176,5)" fg:x="390" fg:w="2"/><text x="31.6510%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="31.4010%" y="629" width="0.1610%" height="15" fill="rgb(228,140,14)" fg:x="390" fg:w="2"/><text x="31.6510%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.4010%" y="613" width="0.1610%" height="15" fill="rgb(217,179,31)" fg:x="390" fg:w="2"/><text x="31.6510%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4815%" y="597" width="0.0805%" height="15" fill="rgb(230,9,30)" fg:x="391" fg:w="1"/><text x="31.7315%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4815%" y="581" width="0.0805%" height="15" fill="rgb(230,136,20)" fg:x="391" fg:w="1"/><text x="31.7315%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.4815%" y="565" width="0.0805%" height="15" fill="rgb(215,210,22)" fg:x="391" fg:w="1"/><text x="31.7315%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5620%" y="645" width="0.1610%" height="15" fill="rgb(218,43,5)" fg:x="392" fg:w="2"/><text x="31.8120%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5620%" y="629" width="0.1610%" height="15" fill="rgb(216,11,5)" fg:x="392" fg:w="2"/><text x="31.8120%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5620%" y="613" width="0.1610%" height="15" fill="rgb(209,82,29)" fg:x="392" fg:w="2"/><text x="31.8120%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5620%" y="597" width="0.1610%" height="15" fill="rgb(244,115,12)" fg:x="392" fg:w="2"/><text x="31.8120%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.5620%" y="581" width="0.1610%" height="15" fill="rgb(222,82,18)" fg:x="392" fg:w="2"/><text x="31.8120%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.5620%" y="565" width="0.1610%" height="15" fill="rgb(249,227,8)" fg:x="392" fg:w="2"/><text x="31.8120%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="31.5620%" y="549" width="0.1610%" height="15" fill="rgb(253,141,45)" fg:x="392" fg:w="2"/><text x="31.8120%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="31.5620%" y="533" width="0.1610%" height="15" fill="rgb(234,184,4)" fg:x="392" fg:w="2"/><text x="31.8120%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="31.5620%" y="517" width="0.1610%" height="15" fill="rgb(218,194,23)" fg:x="392" fg:w="2"/><text x="31.8120%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.5620%" y="501" width="0.1610%" height="15" fill="rgb(235,66,41)" fg:x="392" fg:w="2"/><text x="31.8120%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.5620%" y="485" width="0.1610%" height="15" fill="rgb(245,217,1)" fg:x="392" fg:w="2"/><text x="31.8120%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="31.5620%" y="469" width="0.1610%" height="15" fill="rgb(229,91,1)" fg:x="392" fg:w="2"/><text x="31.8120%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="31.5620%" y="453" width="0.1610%" height="15" fill="rgb(207,101,30)" fg:x="392" fg:w="2"/><text x="31.8120%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="31.5620%" y="437" width="0.1610%" height="15" fill="rgb(223,82,49)" fg:x="392" fg:w="2"/><text x="31.8120%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="31.5620%" y="421" width="0.1610%" height="15" fill="rgb(218,167,17)" fg:x="392" fg:w="2"/><text x="31.8120%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.5620%" y="405" width="0.1610%" height="15" fill="rgb(208,103,14)" fg:x="392" fg:w="2"/><text x="31.8120%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="645" width="0.0805%" height="15" fill="rgb(238,20,8)" fg:x="394" fg:w="1"/><text x="31.9730%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="629" width="0.0805%" height="15" fill="rgb(218,80,54)" fg:x="394" fg:w="1"/><text x="31.9730%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="613" width="0.0805%" height="15" fill="rgb(240,144,17)" fg:x="394" fg:w="1"/><text x="31.9730%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="597" width="0.0805%" height="15" fill="rgb(245,27,50)" fg:x="394" fg:w="1"/><text x="31.9730%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="581" width="0.0805%" height="15" fill="rgb(251,51,7)" fg:x="394" fg:w="1"/><text x="31.9730%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="565" width="0.0805%" height="15" fill="rgb(245,217,29)" fg:x="394" fg:w="1"/><text x="31.9730%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7230%" y="549" width="0.0805%" height="15" fill="rgb(221,176,29)" fg:x="394" fg:w="1"/><text x="31.9730%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="31.5620%" y="725" width="0.3221%" height="15" fill="rgb(212,180,24)" fg:x="392" fg:w="4"/><text x="31.8120%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="31.5620%" y="709" width="0.3221%" height="15" fill="rgb(254,24,2)" fg:x="392" fg:w="4"/><text x="31.8120%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="31.5620%" y="693" width="0.3221%" height="15" fill="rgb(230,100,2)" fg:x="392" fg:w="4"/><text x="31.8120%" y="703.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="31.5620%" y="677" width="0.3221%" height="15" fill="rgb(219,142,25)" fg:x="392" fg:w="4"/><text x="31.8120%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="31.5620%" y="661" width="0.3221%" height="15" fill="rgb(240,73,43)" fg:x="392" fg:w="4"/><text x="31.8120%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8035%" y="645" width="0.0805%" height="15" fill="rgb(214,114,15)" fg:x="395" fg:w="1"/><text x="32.0535%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8035%" y="629" width="0.0805%" height="15" fill="rgb(207,130,4)" fg:x="395" fg:w="1"/><text x="32.0535%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8035%" y="613" width="0.0805%" height="15" fill="rgb(221,25,40)" fg:x="395" fg:w="1"/><text x="32.0535%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8035%" y="597" width="0.0805%" height="15" fill="rgb(241,184,7)" fg:x="395" fg:w="1"/><text x="32.0535%" y="607.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="31.9646%" y="693" width="0.0805%" height="15" fill="rgb(235,159,4)" fg:x="397" fg:w="1"/><text x="32.2146%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.0451%" y="677" width="0.0805%" height="15" fill="rgb(214,87,48)" fg:x="398" fg:w="1"/><text x="32.2951%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.0451%" y="661" width="0.0805%" height="15" fill="rgb(246,198,24)" fg:x="398" fg:w="1"/><text x="32.2951%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2061%" y="629" width="0.0805%" height="15" fill="rgb(209,66,40)" fg:x="400" fg:w="1"/><text x="32.4561%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2061%" y="613" width="0.0805%" height="15" fill="rgb(233,147,39)" fg:x="400" fg:w="1"/><text x="32.4561%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2061%" y="597" width="0.0805%" height="15" fill="rgb(231,145,52)" fg:x="400" fg:w="1"/><text x="32.4561%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="31.8841%" y="725" width="0.4831%" height="15" fill="rgb(206,20,26)" fg:x="396" fg:w="6"/><text x="32.1341%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.48%)</title><rect x="31.8841%" y="709" width="0.4831%" height="15" fill="rgb(238,220,4)" fg:x="396" fg:w="6"/><text x="32.1341%" y="719.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="32.0451%" y="693" width="0.3221%" height="15" fill="rgb(252,195,42)" fg:x="398" fg:w="4"/><text x="32.2951%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="32.1256%" y="677" width="0.2415%" height="15" fill="rgb(209,10,6)" fg:x="399" fg:w="3"/><text x="32.3756%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="32.2061%" y="661" width="0.1610%" height="15" fill="rgb(229,3,52)" fg:x="400" fg:w="2"/><text x="32.4561%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.2061%" y="645" width="0.1610%" height="15" fill="rgb(253,49,37)" fg:x="400" fg:w="2"/><text x="32.4561%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2866%" y="629" width="0.0805%" height="15" fill="rgb(240,103,49)" fg:x="401" fg:w="1"/><text x="32.5366%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.2866%" y="613" width="0.0805%" height="15" fill="rgb(250,182,30)" fg:x="401" fg:w="1"/><text x="32.5366%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.2866%" y="597" width="0.0805%" height="15" fill="rgb(248,8,30)" fg:x="401" fg:w="1"/><text x="32.5366%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.2866%" y="581" width="0.0805%" height="15" fill="rgb(237,120,30)" fg:x="401" fg:w="1"/><text x="32.5366%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="32.2866%" y="565" width="0.0805%" height="15" fill="rgb(221,146,34)" fg:x="401" fg:w="1"/><text x="32.5366%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2866%" y="549" width="0.0805%" height="15" fill="rgb(242,55,13)" fg:x="401" fg:w="1"/><text x="32.5366%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.2866%" y="533" width="0.0805%" height="15" fill="rgb(242,112,31)" fg:x="401" fg:w="1"/><text x="32.5366%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="32.2866%" y="517" width="0.0805%" height="15" fill="rgb(249,192,27)" fg:x="401" fg:w="1"/><text x="32.5366%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="32.4477%" y="693" width="0.0805%" height="15" fill="rgb(208,204,44)" fg:x="403" fg:w="1"/><text x="32.6977%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4477%" y="677" width="0.0805%" height="15" fill="rgb(208,93,54)" fg:x="403" fg:w="1"/><text x="32.6977%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5282%" y="677" width="0.0805%" height="15" fill="rgb(242,1,31)" fg:x="404" fg:w="1"/><text x="32.7782%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5282%" y="661" width="0.0805%" height="15" fill="rgb(241,83,25)" fg:x="404" fg:w="1"/><text x="32.7782%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6087%" y="661" width="0.0805%" height="15" fill="rgb(205,169,50)" fg:x="405" fg:w="1"/><text x="32.8587%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.6892%" y="645" width="0.0805%" height="15" fill="rgb(239,186,37)" fg:x="406" fg:w="1"/><text x="32.9392%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="32.6087%" y="677" width="0.2415%" height="15" fill="rgb(205,221,10)" fg:x="405" fg:w="3"/><text x="32.8587%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.6892%" y="661" width="0.1610%" height="15" fill="rgb(218,196,15)" fg:x="406" fg:w="2"/><text x="32.9392%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="32.7697%" y="645" width="0.0805%" height="15" fill="rgb(218,196,35)" fg:x="407" fg:w="1"/><text x="33.0197%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.7697%" y="629" width="0.0805%" height="15" fill="rgb(233,63,24)" fg:x="407" fg:w="1"/><text x="33.0197%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.7697%" y="613" width="0.0805%" height="15" fill="rgb(225,8,4)" fg:x="407" fg:w="1"/><text x="33.0197%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.7697%" y="597" width="0.0805%" height="15" fill="rgb(234,105,35)" fg:x="407" fg:w="1"/><text x="33.0197%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="32.7697%" y="581" width="0.0805%" height="15" fill="rgb(236,21,32)" fg:x="407" fg:w="1"/><text x="33.0197%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.48%)</title><rect x="32.5282%" y="693" width="0.4831%" height="15" fill="rgb(228,109,6)" fg:x="404" fg:w="6"/><text x="32.7782%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="32.8502%" y="677" width="0.1610%" height="15" fill="rgb(229,215,31)" fg:x="408" fg:w="2"/><text x="33.1002%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="32.9308%" y="661" width="0.0805%" height="15" fill="rgb(221,52,54)" fg:x="409" fg:w="1"/><text x="33.1808%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.9308%" y="645" width="0.0805%" height="15" fill="rgb(252,129,43)" fg:x="409" fg:w="1"/><text x="33.1808%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.9308%" y="629" width="0.0805%" height="15" fill="rgb(248,183,27)" fg:x="409" fg:w="1"/><text x="33.1808%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.9308%" y="613" width="0.0805%" height="15" fill="rgb(250,0,22)" fg:x="409" fg:w="1"/><text x="33.1808%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.9308%" y="597" width="0.0805%" height="15" fill="rgb(213,166,10)" fg:x="409" fg:w="1"/><text x="33.1808%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="33.0113%" y="645" width="0.0805%" height="15" fill="rgb(207,163,36)" fg:x="410" fg:w="1"/><text x="33.2613%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0113%" y="629" width="0.0805%" height="15" fill="rgb(208,122,22)" fg:x="410" fg:w="1"/><text x="33.2613%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0113%" y="613" width="0.0805%" height="15" fill="rgb(207,104,49)" fg:x="410" fg:w="1"/><text x="33.2613%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0113%" y="597" width="0.0805%" height="15" fill="rgb(248,211,50)" fg:x="410" fg:w="1"/><text x="33.2613%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0113%" y="581" width="0.0805%" height="15" fill="rgb(217,13,45)" fg:x="410" fg:w="1"/><text x="33.2613%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0113%" y="565" width="0.0805%" height="15" fill="rgb(211,216,49)" fg:x="410" fg:w="1"/><text x="33.2613%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.0113%" y="549" width="0.0805%" height="15" fill="rgb(221,58,53)" fg:x="410" fg:w="1"/><text x="33.2613%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0113%" y="533" width="0.0805%" height="15" fill="rgb(220,112,41)" fg:x="410" fg:w="1"/><text x="33.2613%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0113%" y="517" width="0.0805%" height="15" fill="rgb(236,38,28)" fg:x="410" fg:w="1"/><text x="33.2613%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0113%" y="501" width="0.0805%" height="15" fill="rgb(227,195,22)" fg:x="410" fg:w="1"/><text x="33.2613%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.0113%" y="485" width="0.0805%" height="15" fill="rgb(214,55,33)" fg:x="410" fg:w="1"/><text x="33.2613%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0918%" y="613" width="0.0805%" height="15" fill="rgb(248,80,13)" fg:x="411" fg:w="1"/><text x="33.3418%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.0918%" y="597" width="0.0805%" height="15" fill="rgb(238,52,6)" fg:x="411" fg:w="1"/><text x="33.3418%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0918%" y="581" width="0.0805%" height="15" fill="rgb(224,198,47)" fg:x="411" fg:w="1"/><text x="33.3418%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="32.4477%" y="709" width="0.8857%" height="15" fill="rgb(233,171,20)" fg:x="403" fg:w="11"/><text x="32.6977%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="33.0113%" y="693" width="0.3221%" height="15" fill="rgb(241,30,25)" fg:x="410" fg:w="4"/><text x="33.2613%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="33.0113%" y="677" width="0.3221%" height="15" fill="rgb(207,171,38)" fg:x="410" fg:w="4"/><text x="33.2613%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="33.0113%" y="661" width="0.3221%" height="15" fill="rgb(234,70,1)" fg:x="410" fg:w="4"/><text x="33.2613%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="33.0918%" y="645" width="0.2415%" height="15" fill="rgb(232,178,18)" fg:x="411" fg:w="3"/><text x="33.3418%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="33.0918%" y="629" width="0.2415%" height="15" fill="rgb(241,78,40)" fg:x="411" fg:w="3"/><text x="33.3418%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="613" width="0.1610%" height="15" fill="rgb(222,35,25)" fg:x="412" fg:w="2"/><text x="33.4223%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="597" width="0.1610%" height="15" fill="rgb(207,92,16)" fg:x="412" fg:w="2"/><text x="33.4223%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="581" width="0.1610%" height="15" fill="rgb(216,59,51)" fg:x="412" fg:w="2"/><text x="33.4223%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="565" width="0.1610%" height="15" fill="rgb(213,80,28)" fg:x="412" fg:w="2"/><text x="33.4223%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="549" width="0.1610%" height="15" fill="rgb(220,93,7)" fg:x="412" fg:w="2"/><text x="33.4223%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.1723%" y="533" width="0.1610%" height="15" fill="rgb(225,24,44)" fg:x="412" fg:w="2"/><text x="33.4223%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2528%" y="517" width="0.0805%" height="15" fill="rgb(243,74,40)" fg:x="413" fg:w="1"/><text x="33.5028%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.3333%" y="709" width="0.0805%" height="15" fill="rgb(228,39,7)" fg:x="414" fg:w="1"/><text x="33.5833%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.3333%" y="693" width="0.0805%" height="15" fill="rgb(227,79,8)" fg:x="414" fg:w="1"/><text x="33.5833%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3333%" y="677" width="0.0805%" height="15" fill="rgb(236,58,11)" fg:x="414" fg:w="1"/><text x="33.5833%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="33.4944%" y="693" width="0.0805%" height="15" fill="rgb(249,63,35)" fg:x="416" fg:w="1"/><text x="33.7444%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="33.4944%" y="677" width="0.0805%" height="15" fill="rgb(252,114,16)" fg:x="416" fg:w="1"/><text x="33.7444%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.4944%" y="661" width="0.0805%" height="15" fill="rgb(254,151,24)" fg:x="416" fg:w="1"/><text x="33.7444%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="33.4944%" y="645" width="0.0805%" height="15" fill="rgb(253,54,39)" fg:x="416" fg:w="1"/><text x="33.7444%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.4944%" y="629" width="0.0805%" height="15" fill="rgb(243,25,45)" fg:x="416" fg:w="1"/><text x="33.7444%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4944%" y="613" width="0.0805%" height="15" fill="rgb(234,134,9)" fg:x="416" fg:w="1"/><text x="33.7444%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4944%" y="597" width="0.0805%" height="15" fill="rgb(227,166,31)" fg:x="416" fg:w="1"/><text x="33.7444%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4944%" y="581" width="0.0805%" height="15" fill="rgb(245,143,41)" fg:x="416" fg:w="1"/><text x="33.7444%" y="591.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="33.4944%" y="565" width="0.0805%" height="15" fill="rgb(238,181,32)" fg:x="416" fg:w="1"/><text x="33.7444%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.4944%" y="549" width="0.0805%" height="15" fill="rgb(224,113,18)" fg:x="416" fg:w="1"/><text x="33.7444%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.5749%" y="693" width="0.0805%" height="15" fill="rgb(240,229,28)" fg:x="417" fg:w="1"/><text x="33.8249%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.5749%" y="677" width="0.0805%" height="15" fill="rgb(250,185,3)" fg:x="417" fg:w="1"/><text x="33.8249%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.6554%" y="677" width="0.0805%" height="15" fill="rgb(212,59,25)" fg:x="418" fg:w="1"/><text x="33.9054%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.6554%" y="661" width="0.0805%" height="15" fill="rgb(221,87,20)" fg:x="418" fg:w="1"/><text x="33.9054%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="33.6554%" y="645" width="0.0805%" height="15" fill="rgb(213,74,28)" fg:x="418" fg:w="1"/><text x="33.9054%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7359%" y="645" width="0.0805%" height="15" fill="rgb(224,132,34)" fg:x="419" fg:w="1"/><text x="33.9859%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8164%" y="613" width="0.0805%" height="15" fill="rgb(222,101,24)" fg:x="420" fg:w="1"/><text x="34.0664%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.8164%" y="597" width="0.0805%" height="15" fill="rgb(254,142,4)" fg:x="420" fg:w="1"/><text x="34.0664%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="33.6554%" y="693" width="0.3221%" height="15" fill="rgb(230,229,49)" fg:x="418" fg:w="4"/><text x="33.9054%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (3 samples, 0.24%)</title><rect x="33.7359%" y="677" width="0.2415%" height="15" fill="rgb(238,70,47)" fg:x="419" fg:w="3"/><text x="33.9859%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="33.7359%" y="661" width="0.2415%" height="15" fill="rgb(231,160,17)" fg:x="419" fg:w="3"/><text x="33.9859%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8164%" y="645" width="0.1610%" height="15" fill="rgb(218,68,53)" fg:x="420" fg:w="2"/><text x="34.0664%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.8164%" y="629" width="0.1610%" height="15" fill="rgb(236,111,10)" fg:x="420" fg:w="2"/><text x="34.0664%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.8969%" y="613" width="0.0805%" height="15" fill="rgb(224,34,41)" fg:x="421" fg:w="1"/><text x="34.1469%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9775%" y="597" width="0.0805%" height="15" fill="rgb(241,118,19)" fg:x="422" fg:w="1"/><text x="34.2275%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9775%" y="581" width="0.0805%" height="15" fill="rgb(238,129,25)" fg:x="422" fg:w="1"/><text x="34.2275%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9775%" y="565" width="0.0805%" height="15" fill="rgb(238,22,31)" fg:x="422" fg:w="1"/><text x="34.2275%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.9775%" y="549" width="0.0805%" height="15" fill="rgb(222,174,48)" fg:x="422" fg:w="1"/><text x="34.2275%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.1385%" y="501" width="0.0805%" height="15" fill="rgb(206,152,40)" fg:x="424" fg:w="1"/><text x="34.3885%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="33.9775%" y="645" width="0.3221%" height="15" fill="rgb(218,99,54)" fg:x="422" fg:w="4"/><text x="34.2275%" y="655.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="33.9775%" y="629" width="0.3221%" height="15" fill="rgb(220,174,26)" fg:x="422" fg:w="4"/><text x="34.2275%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.9775%" y="613" width="0.3221%" height="15" fill="rgb(245,116,9)" fg:x="422" fg:w="4"/><text x="34.2275%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.0580%" y="597" width="0.2415%" height="15" fill="rgb(209,72,35)" fg:x="423" fg:w="3"/><text x="34.3080%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.0580%" y="581" width="0.2415%" height="15" fill="rgb(226,126,21)" fg:x="423" fg:w="3"/><text x="34.3080%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.0580%" y="565" width="0.2415%" height="15" fill="rgb(227,192,1)" fg:x="423" fg:w="3"/><text x="34.3080%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.0580%" y="549" width="0.2415%" height="15" fill="rgb(237,180,29)" fg:x="423" fg:w="3"/><text x="34.3080%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.1385%" y="533" width="0.1610%" height="15" fill="rgb(230,197,35)" fg:x="424" fg:w="2"/><text x="34.3885%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1385%" y="517" width="0.1610%" height="15" fill="rgb(246,193,31)" fg:x="424" fg:w="2"/><text x="34.3885%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2190%" y="501" width="0.0805%" height="15" fill="rgb(241,36,4)" fg:x="425" fg:w="1"/><text x="34.4690%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.2190%" y="485" width="0.0805%" height="15" fill="rgb(241,130,17)" fg:x="425" fg:w="1"/><text x="34.4690%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.2995%" y="533" width="0.2415%" height="15" fill="rgb(206,137,32)" fg:x="426" fg:w="3"/><text x="34.5495%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.3800%" y="517" width="0.1610%" height="15" fill="rgb(237,228,51)" fg:x="427" fg:w="2"/><text x="34.6300%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (237 samples, 19.08%)</title><rect x="15.5395%" y="741" width="19.0821%" height="15" fill="rgb(243,6,42)" fg:x="193" fg:w="237"/><text x="15.7895%" y="751.50">plugins_core::build::BuildSurr..</text></g><g><title>plugins_core::build::Build::occupying (28 samples, 2.25%)</title><rect x="32.3671%" y="725" width="2.2544%" height="15" fill="rgb(251,74,28)" fg:x="402" fg:w="28"/><text x="32.6171%" y="735.50">p..</text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.21%)</title><rect x="33.4138%" y="709" width="1.2077%" height="15" fill="rgb(218,20,49)" fg:x="415" fg:w="15"/><text x="33.6638%" y="719.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="33.9775%" y="693" width="0.6441%" height="15" fill="rgb(238,28,14)" fg:x="422" fg:w="8"/><text x="34.2275%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="33.9775%" y="677" width="0.6441%" height="15" fill="rgb(229,40,46)" fg:x="422" fg:w="8"/><text x="34.2275%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="33.9775%" y="661" width="0.6441%" height="15" fill="rgb(244,195,20)" fg:x="422" fg:w="8"/><text x="34.2275%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="34.2995%" y="645" width="0.3221%" height="15" fill="rgb(253,56,35)" fg:x="426" fg:w="4"/><text x="34.5495%" y="655.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="34.2995%" y="629" width="0.3221%" height="15" fill="rgb(210,149,44)" fg:x="426" fg:w="4"/><text x="34.5495%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.2995%" y="613" width="0.3221%" height="15" fill="rgb(240,135,12)" fg:x="426" fg:w="4"/><text x="34.5495%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.2995%" y="597" width="0.3221%" height="15" fill="rgb(251,24,50)" fg:x="426" fg:w="4"/><text x="34.5495%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.2995%" y="581" width="0.3221%" height="15" fill="rgb(243,200,47)" fg:x="426" fg:w="4"/><text x="34.5495%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.2995%" y="565" width="0.3221%" height="15" fill="rgb(224,166,26)" fg:x="426" fg:w="4"/><text x="34.5495%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.2995%" y="549" width="0.3221%" height="15" fill="rgb(233,0,47)" fg:x="426" fg:w="4"/><text x="34.5495%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5411%" y="533" width="0.0805%" height="15" fill="rgb(253,80,5)" fg:x="429" fg:w="1"/><text x="34.7911%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5411%" y="517" width="0.0805%" height="15" fill="rgb(214,133,25)" fg:x="429" fg:w="1"/><text x="34.7911%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5411%" y="501" width="0.0805%" height="15" fill="rgb(209,27,14)" fg:x="429" fg:w="1"/><text x="34.7911%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5411%" y="485" width="0.0805%" height="15" fill="rgb(219,102,51)" fg:x="429" fg:w="1"/><text x="34.7911%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5411%" y="469" width="0.0805%" height="15" fill="rgb(237,18,16)" fg:x="429" fg:w="1"/><text x="34.7911%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5411%" y="453" width="0.0805%" height="15" fill="rgb(241,85,17)" fg:x="429" fg:w="1"/><text x="34.7911%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5411%" y="437" width="0.0805%" height="15" fill="rgb(236,90,42)" fg:x="429" fg:w="1"/><text x="34.7911%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5411%" y="421" width="0.0805%" height="15" fill="rgb(249,57,21)" fg:x="429" fg:w="1"/><text x="34.7911%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5411%" y="405" width="0.0805%" height="15" fill="rgb(243,12,36)" fg:x="429" fg:w="1"/><text x="34.7911%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5411%" y="389" width="0.0805%" height="15" fill="rgb(253,128,47)" fg:x="429" fg:w="1"/><text x="34.7911%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5411%" y="373" width="0.0805%" height="15" fill="rgb(207,33,20)" fg:x="429" fg:w="1"/><text x="34.7911%" y="383.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="34.5411%" y="357" width="0.0805%" height="15" fill="rgb(233,215,35)" fg:x="429" fg:w="1"/><text x="34.7911%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="34.6216%" y="741" width="0.0805%" height="15" fill="rgb(249,188,52)" fg:x="430" fg:w="1"/><text x="34.8716%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="34.6216%" y="725" width="0.0805%" height="15" fill="rgb(225,12,32)" fg:x="430" fg:w="1"/><text x="34.8716%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="34.6216%" y="709" width="0.0805%" height="15" fill="rgb(247,98,14)" fg:x="430" fg:w="1"/><text x="34.8716%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="34.6216%" y="693" width="0.0805%" height="15" fill="rgb(247,219,48)" fg:x="430" fg:w="1"/><text x="34.8716%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="34.6216%" y="677" width="0.0805%" height="15" fill="rgb(253,60,48)" fg:x="430" fg:w="1"/><text x="34.8716%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.6216%" y="661" width="0.0805%" height="15" fill="rgb(245,15,52)" fg:x="430" fg:w="1"/><text x="34.8716%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6216%" y="645" width="0.0805%" height="15" fill="rgb(220,133,28)" fg:x="430" fg:w="1"/><text x="34.8716%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6216%" y="629" width="0.0805%" height="15" fill="rgb(217,180,4)" fg:x="430" fg:w="1"/><text x="34.8716%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="34.7021%" y="693" width="0.0805%" height="15" fill="rgb(251,24,1)" fg:x="431" fg:w="1"/><text x="34.9521%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.7021%" y="677" width="0.0805%" height="15" fill="rgb(212,185,49)" fg:x="431" fg:w="1"/><text x="34.9521%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.7021%" y="661" width="0.0805%" height="15" fill="rgb(215,175,22)" fg:x="431" fg:w="1"/><text x="34.9521%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="645" width="0.0805%" height="15" fill="rgb(250,205,14)" fg:x="431" fg:w="1"/><text x="34.9521%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7021%" y="629" width="0.0805%" height="15" fill="rgb(225,211,22)" fg:x="431" fg:w="1"/><text x="34.9521%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="613" width="0.0805%" height="15" fill="rgb(251,179,42)" fg:x="431" fg:w="1"/><text x="34.9521%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="597" width="0.0805%" height="15" fill="rgb(208,216,51)" fg:x="431" fg:w="1"/><text x="34.9521%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="581" width="0.0805%" height="15" fill="rgb(235,36,11)" fg:x="431" fg:w="1"/><text x="34.9521%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7021%" y="565" width="0.0805%" height="15" fill="rgb(213,189,28)" fg:x="431" fg:w="1"/><text x="34.9521%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="549" width="0.0805%" height="15" fill="rgb(227,203,42)" fg:x="431" fg:w="1"/><text x="34.9521%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="533" width="0.0805%" height="15" fill="rgb(244,72,36)" fg:x="431" fg:w="1"/><text x="34.9521%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.7021%" y="517" width="0.0805%" height="15" fill="rgb(213,53,17)" fg:x="431" fg:w="1"/><text x="34.9521%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.7021%" y="501" width="0.0805%" height="15" fill="rgb(207,167,3)" fg:x="431" fg:w="1"/><text x="34.9521%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.7826%" y="693" width="0.0805%" height="15" fill="rgb(216,98,30)" fg:x="432" fg:w="1"/><text x="35.0326%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="34.7826%" y="677" width="0.0805%" height="15" fill="rgb(236,123,15)" fg:x="432" fg:w="1"/><text x="35.0326%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.7826%" y="661" width="0.0805%" height="15" fill="rgb(248,81,50)" fg:x="432" fg:w="1"/><text x="35.0326%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.7826%" y="645" width="0.0805%" height="15" fill="rgb(214,120,4)" fg:x="432" fg:w="1"/><text x="35.0326%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.7826%" y="629" width="0.0805%" height="15" fill="rgb(208,179,34)" fg:x="432" fg:w="1"/><text x="35.0326%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="34.8631%" y="677" width="0.0805%" height="15" fill="rgb(227,140,7)" fg:x="433" fg:w="1"/><text x="35.1131%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.8631%" y="661" width="0.0805%" height="15" fill="rgb(214,22,6)" fg:x="433" fg:w="1"/><text x="35.1131%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9436%" y="629" width="0.0805%" height="15" fill="rgb(207,137,27)" fg:x="434" fg:w="1"/><text x="35.1936%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.9436%" y="613" width="0.0805%" height="15" fill="rgb(210,8,46)" fg:x="434" fg:w="1"/><text x="35.1936%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9436%" y="597" width="0.0805%" height="15" fill="rgb(240,16,54)" fg:x="434" fg:w="1"/><text x="35.1936%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="34.8631%" y="693" width="0.2415%" height="15" fill="rgb(211,209,29)" fg:x="433" fg:w="3"/><text x="35.1131%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="34.9436%" y="677" width="0.1610%" height="15" fill="rgb(226,228,24)" fg:x="434" fg:w="2"/><text x="35.1936%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="34.9436%" y="661" width="0.1610%" height="15" fill="rgb(222,84,9)" fg:x="434" fg:w="2"/><text x="35.1936%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.9436%" y="645" width="0.1610%" height="15" fill="rgb(234,203,30)" fg:x="434" fg:w="2"/><text x="35.1936%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="35.0242%" y="629" width="0.0805%" height="15" fill="rgb(238,109,14)" fg:x="435" fg:w="1"/><text x="35.2742%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.0242%" y="613" width="0.0805%" height="15" fill="rgb(233,206,34)" fg:x="435" fg:w="1"/><text x="35.2742%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="35.1047%" y="613" width="0.2415%" height="15" fill="rgb(220,167,47)" fg:x="436" fg:w="3"/><text x="35.3547%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.1852%" y="597" width="0.1610%" height="15" fill="rgb(238,105,10)" fg:x="437" fg:w="2"/><text x="35.4352%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.1852%" y="581" width="0.1610%" height="15" fill="rgb(213,227,17)" fg:x="437" fg:w="2"/><text x="35.4352%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.1852%" y="565" width="0.1610%" height="15" fill="rgb(217,132,38)" fg:x="437" fg:w="2"/><text x="35.4352%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.2657%" y="549" width="0.0805%" height="15" fill="rgb(242,146,4)" fg:x="438" fg:w="1"/><text x="35.5157%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.2657%" y="533" width="0.0805%" height="15" fill="rgb(212,61,9)" fg:x="438" fg:w="1"/><text x="35.5157%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.2657%" y="517" width="0.0805%" height="15" fill="rgb(247,126,22)" fg:x="438" fg:w="1"/><text x="35.5157%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.2657%" y="501" width="0.0805%" height="15" fill="rgb(220,196,2)" fg:x="438" fg:w="1"/><text x="35.5157%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.2657%" y="485" width="0.0805%" height="15" fill="rgb(208,46,4)" fg:x="438" fg:w="1"/><text x="35.5157%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.2657%" y="469" width="0.0805%" height="15" fill="rgb(252,104,46)" fg:x="438" fg:w="1"/><text x="35.5157%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.2657%" y="453" width="0.0805%" height="15" fill="rgb(237,152,48)" fg:x="438" fg:w="1"/><text x="35.5157%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.2657%" y="437" width="0.0805%" height="15" fill="rgb(221,59,37)" fg:x="438" fg:w="1"/><text x="35.5157%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.2657%" y="421" width="0.0805%" height="15" fill="rgb(209,202,51)" fg:x="438" fg:w="1"/><text x="35.5157%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.2657%" y="405" width="0.0805%" height="15" fill="rgb(228,81,30)" fg:x="438" fg:w="1"/><text x="35.5157%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.2657%" y="389" width="0.0805%" height="15" fill="rgb(227,42,39)" fg:x="438" fg:w="1"/><text x="35.5157%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="35.2657%" y="373" width="0.0805%" height="15" fill="rgb(221,26,2)" fg:x="438" fg:w="1"/><text x="35.5157%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.2657%" y="357" width="0.0805%" height="15" fill="rgb(254,61,31)" fg:x="438" fg:w="1"/><text x="35.5157%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="35.1047%" y="645" width="0.4026%" height="15" fill="rgb(222,173,38)" fg:x="436" fg:w="5"/><text x="35.3547%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="35.1047%" y="629" width="0.4026%" height="15" fill="rgb(218,50,12)" fg:x="436" fg:w="5"/><text x="35.3547%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3462%" y="613" width="0.1610%" height="15" fill="rgb(223,88,40)" fg:x="439" fg:w="2"/><text x="35.5962%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3462%" y="597" width="0.1610%" height="15" fill="rgb(237,54,19)" fg:x="439" fg:w="2"/><text x="35.5962%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3462%" y="581" width="0.1610%" height="15" fill="rgb(251,129,25)" fg:x="439" fg:w="2"/><text x="35.5962%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3462%" y="565" width="0.1610%" height="15" fill="rgb(238,97,19)" fg:x="439" fg:w="2"/><text x="35.5962%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="35.3462%" y="549" width="0.1610%" height="15" fill="rgb(240,169,18)" fg:x="439" fg:w="2"/><text x="35.5962%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4267%" y="533" width="0.0805%" height="15" fill="rgb(230,187,49)" fg:x="440" fg:w="1"/><text x="35.6767%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.5072%" y="629" width="0.0805%" height="15" fill="rgb(209,44,26)" fg:x="441" fg:w="1"/><text x="35.7572%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5072%" y="613" width="0.0805%" height="15" fill="rgb(244,0,6)" fg:x="441" fg:w="1"/><text x="35.7572%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5878%" y="533" width="0.0805%" height="15" fill="rgb(248,18,21)" fg:x="442" fg:w="1"/><text x="35.8378%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="34.7021%" y="709" width="1.0467%" height="15" fill="rgb(245,180,19)" fg:x="431" fg:w="13"/><text x="34.9521%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="35.1047%" y="693" width="0.6441%" height="15" fill="rgb(252,118,36)" fg:x="436" fg:w="8"/><text x="35.3547%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="35.1047%" y="677" width="0.6441%" height="15" fill="rgb(210,224,19)" fg:x="436" fg:w="8"/><text x="35.3547%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.64%)</title><rect x="35.1047%" y="661" width="0.6441%" height="15" fill="rgb(218,30,24)" fg:x="436" fg:w="8"/><text x="35.3547%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="35.5072%" y="645" width="0.2415%" height="15" fill="rgb(219,75,50)" fg:x="441" fg:w="3"/><text x="35.7572%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.5878%" y="629" width="0.1610%" height="15" fill="rgb(234,72,50)" fg:x="442" fg:w="2"/><text x="35.8378%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.5878%" y="613" width="0.1610%" height="15" fill="rgb(219,100,48)" fg:x="442" fg:w="2"/><text x="35.8378%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.5878%" y="597" width="0.1610%" height="15" fill="rgb(253,5,41)" fg:x="442" fg:w="2"/><text x="35.8378%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="35.5878%" y="581" width="0.1610%" height="15" fill="rgb(247,181,11)" fg:x="442" fg:w="2"/><text x="35.8378%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.5878%" y="565" width="0.1610%" height="15" fill="rgb(222,223,25)" fg:x="442" fg:w="2"/><text x="35.8378%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="35.5878%" y="549" width="0.1610%" height="15" fill="rgb(214,198,28)" fg:x="442" fg:w="2"/><text x="35.8378%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6683%" y="533" width="0.0805%" height="15" fill="rgb(230,46,43)" fg:x="443" fg:w="1"/><text x="35.9183%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="35.6683%" y="517" width="0.0805%" height="15" fill="rgb(233,65,53)" fg:x="443" fg:w="1"/><text x="35.9183%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6683%" y="501" width="0.0805%" height="15" fill="rgb(221,121,27)" fg:x="443" fg:w="1"/><text x="35.9183%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.7488%" y="693" width="0.0805%" height="15" fill="rgb(247,70,47)" fg:x="444" fg:w="1"/><text x="35.9988%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.7488%" y="677" width="0.0805%" height="15" fill="rgb(228,85,35)" fg:x="444" fg:w="1"/><text x="35.9988%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.7488%" y="661" width="0.0805%" height="15" fill="rgb(209,50,18)" fg:x="444" fg:w="1"/><text x="35.9988%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.7488%" y="645" width="0.0805%" height="15" fill="rgb(250,19,35)" fg:x="444" fg:w="1"/><text x="35.9988%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.7488%" y="629" width="0.0805%" height="15" fill="rgb(253,107,29)" fg:x="444" fg:w="1"/><text x="35.9988%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7488%" y="613" width="0.0805%" height="15" fill="rgb(252,179,29)" fg:x="444" fg:w="1"/><text x="35.9988%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.7488%" y="597" width="0.0805%" height="15" fill="rgb(238,194,6)" fg:x="444" fg:w="1"/><text x="35.9988%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.7488%" y="581" width="0.0805%" height="15" fill="rgb(238,164,29)" fg:x="444" fg:w="1"/><text x="35.9988%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.7488%" y="565" width="0.0805%" height="15" fill="rgb(224,25,9)" fg:x="444" fg:w="1"/><text x="35.9988%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.7488%" y="549" width="0.0805%" height="15" fill="rgb(244,153,23)" fg:x="444" fg:w="1"/><text x="35.9988%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.7488%" y="533" width="0.0805%" height="15" fill="rgb(212,203,14)" fg:x="444" fg:w="1"/><text x="35.9988%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.7488%" y="517" width="0.0805%" height="15" fill="rgb(220,164,20)" fg:x="444" fg:w="1"/><text x="35.9988%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="35.7488%" y="709" width="0.1610%" height="15" fill="rgb(222,203,48)" fg:x="444" fg:w="2"/><text x="35.9988%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="35.8293%" y="693" width="0.0805%" height="15" fill="rgb(215,159,22)" fg:x="445" fg:w="1"/><text x="36.0793%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8293%" y="677" width="0.0805%" height="15" fill="rgb(216,183,47)" fg:x="445" fg:w="1"/><text x="36.0793%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8293%" y="661" width="0.0805%" height="15" fill="rgb(229,195,25)" fg:x="445" fg:w="1"/><text x="36.0793%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.8293%" y="645" width="0.0805%" height="15" fill="rgb(224,132,51)" fg:x="445" fg:w="1"/><text x="36.0793%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.8293%" y="629" width="0.0805%" height="15" fill="rgb(240,63,7)" fg:x="445" fg:w="1"/><text x="36.0793%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.8293%" y="613" width="0.0805%" height="15" fill="rgb(249,182,41)" fg:x="445" fg:w="1"/><text x="36.0793%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.8293%" y="597" width="0.0805%" height="15" fill="rgb(243,47,26)" fg:x="445" fg:w="1"/><text x="36.0793%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.8293%" y="581" width="0.0805%" height="15" fill="rgb(233,48,2)" fg:x="445" fg:w="1"/><text x="36.0793%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.37%)</title><rect x="34.7021%" y="741" width="1.3688%" height="15" fill="rgb(244,165,34)" fg:x="431" fg:w="17"/><text x="34.9521%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.37%)</title><rect x="34.7021%" y="725" width="1.3688%" height="15" fill="rgb(207,89,7)" fg:x="431" fg:w="17"/><text x="34.9521%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="35.9098%" y="709" width="0.1610%" height="15" fill="rgb(244,117,36)" fg:x="446" fg:w="2"/><text x="36.1598%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="35.9903%" y="693" width="0.0805%" height="15" fill="rgb(226,144,34)" fg:x="447" fg:w="1"/><text x="36.2403%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="35.9903%" y="677" width="0.0805%" height="15" fill="rgb(213,23,19)" fg:x="447" fg:w="1"/><text x="36.2403%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.9903%" y="661" width="0.0805%" height="15" fill="rgb(217,75,12)" fg:x="447" fg:w="1"/><text x="36.2403%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9903%" y="645" width="0.0805%" height="15" fill="rgb(224,159,17)" fg:x="447" fg:w="1"/><text x="36.2403%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="35.9903%" y="629" width="0.0805%" height="15" fill="rgb(217,118,1)" fg:x="447" fg:w="1"/><text x="36.2403%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.9903%" y="613" width="0.0805%" height="15" fill="rgb(232,180,48)" fg:x="447" fg:w="1"/><text x="36.2403%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.9903%" y="597" width="0.0805%" height="15" fill="rgb(230,27,33)" fg:x="447" fg:w="1"/><text x="36.2403%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9903%" y="581" width="0.0805%" height="15" fill="rgb(205,31,21)" fg:x="447" fg:w="1"/><text x="36.2403%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="36.2319%" y="709" width="0.1610%" height="15" fill="rgb(253,59,4)" fg:x="450" fg:w="2"/><text x="36.4819%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="36.2319%" y="693" width="0.1610%" height="15" fill="rgb(224,201,9)" fg:x="450" fg:w="2"/><text x="36.4819%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.3124%" y="677" width="0.0805%" height="15" fill="rgb(229,206,30)" fg:x="451" fg:w="1"/><text x="36.5624%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="661" width="0.0805%" height="15" fill="rgb(212,67,47)" fg:x="451" fg:w="1"/><text x="36.5624%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.3124%" y="645" width="0.0805%" height="15" fill="rgb(211,96,50)" fg:x="451" fg:w="1"/><text x="36.5624%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="629" width="0.0805%" height="15" fill="rgb(252,114,18)" fg:x="451" fg:w="1"/><text x="36.5624%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="613" width="0.0805%" height="15" fill="rgb(223,58,37)" fg:x="451" fg:w="1"/><text x="36.5624%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="597" width="0.0805%" height="15" fill="rgb(237,70,4)" fg:x="451" fg:w="1"/><text x="36.5624%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.3124%" y="581" width="0.0805%" height="15" fill="rgb(244,85,46)" fg:x="451" fg:w="1"/><text x="36.5624%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="565" width="0.0805%" height="15" fill="rgb(223,39,52)" fg:x="451" fg:w="1"/><text x="36.5624%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="549" width="0.0805%" height="15" fill="rgb(218,200,14)" fg:x="451" fg:w="1"/><text x="36.5624%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="533" width="0.0805%" height="15" fill="rgb(208,171,16)" fg:x="451" fg:w="1"/><text x="36.5624%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.3124%" y="517" width="0.0805%" height="15" fill="rgb(234,200,18)" fg:x="451" fg:w="1"/><text x="36.5624%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.3124%" y="501" width="0.0805%" height="15" fill="rgb(228,45,11)" fg:x="451" fg:w="1"/><text x="36.5624%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="36.3929%" y="693" width="0.0805%" height="15" fill="rgb(237,182,11)" fg:x="452" fg:w="1"/><text x="36.6429%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3929%" y="677" width="0.0805%" height="15" fill="rgb(241,175,49)" fg:x="452" fg:w="1"/><text x="36.6429%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4734%" y="645" width="0.0805%" height="15" fill="rgb(247,38,35)" fg:x="453" fg:w="1"/><text x="36.7234%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4734%" y="629" width="0.0805%" height="15" fill="rgb(228,39,49)" fg:x="453" fg:w="1"/><text x="36.7234%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4734%" y="613" width="0.0805%" height="15" fill="rgb(226,101,26)" fg:x="453" fg:w="1"/><text x="36.7234%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4734%" y="597" width="0.0805%" height="15" fill="rgb(206,141,19)" fg:x="453" fg:w="1"/><text x="36.7234%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.3929%" y="709" width="0.2415%" height="15" fill="rgb(211,200,13)" fg:x="452" fg:w="3"/><text x="36.6429%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="36.4734%" y="693" width="0.1610%" height="15" fill="rgb(241,121,6)" fg:x="453" fg:w="2"/><text x="36.7234%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.4734%" y="677" width="0.1610%" height="15" fill="rgb(234,221,29)" fg:x="453" fg:w="2"/><text x="36.7234%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.4734%" y="661" width="0.1610%" height="15" fill="rgb(229,136,5)" fg:x="453" fg:w="2"/><text x="36.7234%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5539%" y="645" width="0.0805%" height="15" fill="rgb(238,36,11)" fg:x="454" fg:w="1"/><text x="36.8039%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.5539%" y="629" width="0.0805%" height="15" fill="rgb(251,55,41)" fg:x="454" fg:w="1"/><text x="36.8039%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5539%" y="613" width="0.0805%" height="15" fill="rgb(242,34,40)" fg:x="454" fg:w="1"/><text x="36.8039%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5539%" y="597" width="0.0805%" height="15" fill="rgb(215,42,17)" fg:x="454" fg:w="1"/><text x="36.8039%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5539%" y="581" width="0.0805%" height="15" fill="rgb(207,44,46)" fg:x="454" fg:w="1"/><text x="36.8039%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5539%" y="565" width="0.0805%" height="15" fill="rgb(211,206,28)" fg:x="454" fg:w="1"/><text x="36.8039%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.5539%" y="549" width="0.0805%" height="15" fill="rgb(237,167,16)" fg:x="454" fg:w="1"/><text x="36.8039%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.5539%" y="533" width="0.0805%" height="15" fill="rgb(233,66,6)" fg:x="454" fg:w="1"/><text x="36.8039%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.5539%" y="517" width="0.0805%" height="15" fill="rgb(246,123,29)" fg:x="454" fg:w="1"/><text x="36.8039%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.5539%" y="501" width="0.0805%" height="15" fill="rgb(209,62,40)" fg:x="454" fg:w="1"/><text x="36.8039%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.5539%" y="485" width="0.0805%" height="15" fill="rgb(218,4,25)" fg:x="454" fg:w="1"/><text x="36.8039%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5539%" y="469" width="0.0805%" height="15" fill="rgb(253,91,49)" fg:x="454" fg:w="1"/><text x="36.8039%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.6345%" y="661" width="0.0805%" height="15" fill="rgb(228,155,29)" fg:x="455" fg:w="1"/><text x="36.8845%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.6345%" y="645" width="0.0805%" height="15" fill="rgb(243,57,37)" fg:x="455" fg:w="1"/><text x="36.8845%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6345%" y="629" width="0.0805%" height="15" fill="rgb(244,167,17)" fg:x="455" fg:w="1"/><text x="36.8845%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="629" width="0.0805%" height="15" fill="rgb(207,181,38)" fg:x="456" fg:w="1"/><text x="36.9650%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="613" width="0.0805%" height="15" fill="rgb(211,8,23)" fg:x="456" fg:w="1"/><text x="36.9650%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="597" width="0.0805%" height="15" fill="rgb(235,11,44)" fg:x="456" fg:w="1"/><text x="36.9650%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="581" width="0.0805%" height="15" fill="rgb(248,18,52)" fg:x="456" fg:w="1"/><text x="36.9650%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="565" width="0.0805%" height="15" fill="rgb(208,4,7)" fg:x="456" fg:w="1"/><text x="36.9650%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="549" width="0.0805%" height="15" fill="rgb(240,17,39)" fg:x="456" fg:w="1"/><text x="36.9650%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="533" width="0.0805%" height="15" fill="rgb(207,170,3)" fg:x="456" fg:w="1"/><text x="36.9650%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="36.7150%" y="517" width="0.0805%" height="15" fill="rgb(236,100,52)" fg:x="456" fg:w="1"/><text x="36.9650%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7955%" y="597" width="0.0805%" height="15" fill="rgb(246,78,51)" fg:x="457" fg:w="1"/><text x="37.0455%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.89%)</title><rect x="36.0709%" y="725" width="0.8857%" height="15" fill="rgb(211,17,15)" fg:x="448" fg:w="11"/><text x="36.3209%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="36.6345%" y="709" width="0.3221%" height="15" fill="rgb(209,59,46)" fg:x="455" fg:w="4"/><text x="36.8845%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="36.6345%" y="693" width="0.3221%" height="15" fill="rgb(210,92,25)" fg:x="455" fg:w="4"/><text x="36.8845%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="36.6345%" y="677" width="0.3221%" height="15" fill="rgb(238,174,52)" fg:x="455" fg:w="4"/><text x="36.8845%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="36.7150%" y="661" width="0.2415%" height="15" fill="rgb(230,73,7)" fg:x="456" fg:w="3"/><text x="36.9650%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.7150%" y="645" width="0.2415%" height="15" fill="rgb(243,124,40)" fg:x="456" fg:w="3"/><text x="36.9650%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="36.7955%" y="629" width="0.1610%" height="15" fill="rgb(244,170,11)" fg:x="457" fg:w="2"/><text x="37.0455%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.7955%" y="613" width="0.1610%" height="15" fill="rgb(207,114,54)" fg:x="457" fg:w="2"/><text x="37.0455%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8760%" y="597" width="0.0805%" height="15" fill="rgb(205,42,20)" fg:x="458" fg:w="1"/><text x="37.1260%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.8760%" y="581" width="0.0805%" height="15" fill="rgb(230,30,28)" fg:x="458" fg:w="1"/><text x="37.1260%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.8760%" y="565" width="0.0805%" height="15" fill="rgb(205,73,54)" fg:x="458" fg:w="1"/><text x="37.1260%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8760%" y="549" width="0.0805%" height="15" fill="rgb(254,227,23)" fg:x="458" fg:w="1"/><text x="37.1260%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.8760%" y="533" width="0.0805%" height="15" fill="rgb(228,202,34)" fg:x="458" fg:w="1"/><text x="37.1260%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8760%" y="517" width="0.0805%" height="15" fill="rgb(222,225,37)" fg:x="458" fg:w="1"/><text x="37.1260%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.9565%" y="693" width="0.0805%" height="15" fill="rgb(221,14,54)" fg:x="459" fg:w="1"/><text x="37.2065%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.9565%" y="677" width="0.0805%" height="15" fill="rgb(254,102,2)" fg:x="459" fg:w="1"/><text x="37.2065%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9565%" y="661" width="0.0805%" height="15" fill="rgb(232,104,17)" fg:x="459" fg:w="1"/><text x="37.2065%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9565%" y="645" width="0.0805%" height="15" fill="rgb(250,220,14)" fg:x="459" fg:w="1"/><text x="37.2065%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9565%" y="629" width="0.0805%" height="15" fill="rgb(241,158,9)" fg:x="459" fg:w="1"/><text x="37.2065%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9565%" y="613" width="0.0805%" height="15" fill="rgb(246,9,43)" fg:x="459" fg:w="1"/><text x="37.2065%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9565%" y="597" width="0.0805%" height="15" fill="rgb(206,73,33)" fg:x="459" fg:w="1"/><text x="37.2065%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0370%" y="661" width="0.0805%" height="15" fill="rgb(222,79,8)" fg:x="460" fg:w="1"/><text x="37.2870%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.0370%" y="645" width="0.0805%" height="15" fill="rgb(234,8,54)" fg:x="460" fg:w="1"/><text x="37.2870%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0370%" y="629" width="0.0805%" height="15" fill="rgb(209,134,38)" fg:x="460" fg:w="1"/><text x="37.2870%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.0370%" y="613" width="0.0805%" height="15" fill="rgb(230,127,29)" fg:x="460" fg:w="1"/><text x="37.2870%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.0370%" y="597" width="0.0805%" height="15" fill="rgb(242,44,41)" fg:x="460" fg:w="1"/><text x="37.2870%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.0370%" y="581" width="0.0805%" height="15" fill="rgb(222,56,43)" fg:x="460" fg:w="1"/><text x="37.2870%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.0370%" y="565" width="0.0805%" height="15" fill="rgb(238,39,47)" fg:x="460" fg:w="1"/><text x="37.2870%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.0370%" y="549" width="0.0805%" height="15" fill="rgb(226,79,43)" fg:x="460" fg:w="1"/><text x="37.2870%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.0370%" y="533" width="0.0805%" height="15" fill="rgb(242,105,53)" fg:x="460" fg:w="1"/><text x="37.2870%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.0370%" y="517" width="0.0805%" height="15" fill="rgb(251,132,46)" fg:x="460" fg:w="1"/><text x="37.2870%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.0370%" y="501" width="0.0805%" height="15" fill="rgb(231,77,14)" fg:x="460" fg:w="1"/><text x="37.2870%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.0370%" y="485" width="0.0805%" height="15" fill="rgb(240,135,9)" fg:x="460" fg:w="1"/><text x="37.2870%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.0370%" y="469" width="0.0805%" height="15" fill="rgb(248,109,14)" fg:x="460" fg:w="1"/><text x="37.2870%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0370%" y="453" width="0.0805%" height="15" fill="rgb(227,146,52)" fg:x="460" fg:w="1"/><text x="37.2870%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1176%" y="661" width="0.0805%" height="15" fill="rgb(232,54,3)" fg:x="461" fg:w="1"/><text x="37.3676%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.1176%" y="645" width="0.0805%" height="15" fill="rgb(229,201,43)" fg:x="461" fg:w="1"/><text x="37.3676%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.1176%" y="629" width="0.0805%" height="15" fill="rgb(252,161,33)" fg:x="461" fg:w="1"/><text x="37.3676%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1176%" y="613" width="0.0805%" height="15" fill="rgb(226,146,40)" fg:x="461" fg:w="1"/><text x="37.3676%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1176%" y="597" width="0.0805%" height="15" fill="rgb(219,47,25)" fg:x="461" fg:w="1"/><text x="37.3676%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="36.9565%" y="725" width="0.3221%" height="15" fill="rgb(250,135,13)" fg:x="459" fg:w="4"/><text x="37.2065%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="36.9565%" y="709" width="0.3221%" height="15" fill="rgb(219,229,18)" fg:x="459" fg:w="4"/><text x="37.2065%" y="719.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="37.0370%" y="693" width="0.2415%" height="15" fill="rgb(217,152,27)" fg:x="460" fg:w="3"/><text x="37.2870%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="37.0370%" y="677" width="0.2415%" height="15" fill="rgb(225,71,47)" fg:x="460" fg:w="3"/><text x="37.2870%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1981%" y="661" width="0.0805%" height="15" fill="rgb(220,139,14)" fg:x="462" fg:w="1"/><text x="37.4481%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="37.2786%" y="709" width="0.2415%" height="15" fill="rgb(247,54,32)" fg:x="463" fg:w="3"/><text x="37.5286%" y="719.50"></text></g><g><title>serde_json::value::to_value (3 samples, 0.24%)</title><rect x="37.2786%" y="693" width="0.2415%" height="15" fill="rgb(252,131,39)" fg:x="463" fg:w="3"/><text x="37.5286%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="37.2786%" y="677" width="0.2415%" height="15" fill="rgb(210,108,39)" fg:x="463" fg:w="3"/><text x="37.5286%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.2786%" y="661" width="0.2415%" height="15" fill="rgb(205,23,29)" fg:x="463" fg:w="3"/><text x="37.5286%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.4396%" y="645" width="0.0805%" height="15" fill="rgb(246,139,46)" fg:x="465" fg:w="1"/><text x="37.6896%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.4396%" y="629" width="0.0805%" height="15" fill="rgb(250,81,26)" fg:x="465" fg:w="1"/><text x="37.6896%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.5201%" y="677" width="0.1610%" height="15" fill="rgb(214,104,7)" fg:x="466" fg:w="2"/><text x="37.7701%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.5201%" y="661" width="0.1610%" height="15" fill="rgb(233,189,8)" fg:x="466" fg:w="2"/><text x="37.7701%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.5201%" y="645" width="0.1610%" height="15" fill="rgb(228,141,17)" fg:x="466" fg:w="2"/><text x="37.7701%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.5201%" y="629" width="0.1610%" height="15" fill="rgb(247,157,1)" fg:x="466" fg:w="2"/><text x="37.7701%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.5201%" y="613" width="0.1610%" height="15" fill="rgb(249,225,5)" fg:x="466" fg:w="2"/><text x="37.7701%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6006%" y="597" width="0.0805%" height="15" fill="rgb(242,55,13)" fg:x="467" fg:w="1"/><text x="37.8506%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (422 samples, 33.98%)</title><rect x="3.8647%" y="757" width="33.9775%" height="15" fill="rgb(230,49,50)" fg:x="48" fg:w="422"/><text x="4.1147%" y="767.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::pre..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (22 samples, 1.77%)</title><rect x="36.0709%" y="741" width="1.7713%" height="15" fill="rgb(241,111,38)" fg:x="448" fg:w="22"/><text x="36.3209%" y="751.50">p..</text></g><g><title>plugins_core::build::Build::new_world (7 samples, 0.56%)</title><rect x="37.2786%" y="725" width="0.5636%" height="15" fill="rgb(252,155,4)" fg:x="463" fg:w="7"/><text x="37.5286%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new (4 samples, 0.32%)</title><rect x="37.5201%" y="709" width="0.3221%" height="15" fill="rgb(212,69,32)" fg:x="466" fg:w="4"/><text x="37.7701%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="37.5201%" y="693" width="0.3221%" height="15" fill="rgb(243,107,47)" fg:x="466" fg:w="4"/><text x="37.7701%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="37.6812%" y="677" width="0.1610%" height="15" fill="rgb(247,130,12)" fg:x="468" fg:w="2"/><text x="37.9312%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.6812%" y="661" width="0.1610%" height="15" fill="rgb(233,74,16)" fg:x="468" fg:w="2"/><text x="37.9312%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.7617%" y="645" width="0.0805%" height="15" fill="rgb(208,58,18)" fg:x="469" fg:w="1"/><text x="38.0117%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7617%" y="629" width="0.0805%" height="15" fill="rgb(242,225,1)" fg:x="469" fg:w="1"/><text x="38.0117%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7617%" y="613" width="0.0805%" height="15" fill="rgb(249,39,40)" fg:x="469" fg:w="1"/><text x="38.0117%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7617%" y="597" width="0.0805%" height="15" fill="rgb(207,72,44)" fg:x="469" fg:w="1"/><text x="38.0117%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7617%" y="581" width="0.0805%" height="15" fill="rgb(215,193,12)" fg:x="469" fg:w="1"/><text x="38.0117%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.7617%" y="565" width="0.0805%" height="15" fill="rgb(248,41,39)" fg:x="469" fg:w="1"/><text x="38.0117%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7617%" y="549" width="0.0805%" height="15" fill="rgb(253,85,4)" fg:x="469" fg:w="1"/><text x="38.0117%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.7617%" y="533" width="0.0805%" height="15" fill="rgb(243,70,31)" fg:x="469" fg:w="1"/><text x="38.0117%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.8422%" y="757" width="0.1610%" height="15" fill="rgb(253,195,26)" fg:x="470" fg:w="2"/><text x="38.0922%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (3 samples, 0.24%)</title><rect x="38.0032%" y="757" width="0.2415%" height="15" fill="rgb(243,42,11)" fg:x="472" fg:w="3"/><text x="38.2532%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (3 samples, 0.24%)</title><rect x="38.0032%" y="741" width="0.2415%" height="15" fill="rgb(239,66,17)" fg:x="472" fg:w="3"/><text x="38.2532%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.0837%" y="725" width="0.1610%" height="15" fill="rgb(217,132,21)" fg:x="473" fg:w="2"/><text x="38.3337%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="38.2448%" y="741" width="0.3221%" height="15" fill="rgb(252,202,21)" fg:x="475" fg:w="4"/><text x="38.4948%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.4863%" y="725" width="0.0805%" height="15" fill="rgb(233,98,36)" fg:x="478" fg:w="1"/><text x="38.7363%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.4863%" y="709" width="0.0805%" height="15" fill="rgb(216,153,54)" fg:x="478" fg:w="1"/><text x="38.7363%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.4863%" y="693" width="0.0805%" height="15" fill="rgb(250,99,7)" fg:x="478" fg:w="1"/><text x="38.7363%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.4863%" y="677" width="0.0805%" height="15" fill="rgb(207,56,50)" fg:x="478" fg:w="1"/><text x="38.7363%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.4863%" y="661" width="0.0805%" height="15" fill="rgb(244,61,34)" fg:x="478" fg:w="1"/><text x="38.7363%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.4863%" y="645" width="0.0805%" height="15" fill="rgb(241,50,38)" fg:x="478" fg:w="1"/><text x="38.7363%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.4863%" y="629" width="0.0805%" height="15" fill="rgb(212,166,30)" fg:x="478" fg:w="1"/><text x="38.7363%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.4863%" y="613" width="0.0805%" height="15" fill="rgb(249,127,32)" fg:x="478" fg:w="1"/><text x="38.7363%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.4863%" y="597" width="0.0805%" height="15" fill="rgb(209,103,0)" fg:x="478" fg:w="1"/><text x="38.7363%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.4863%" y="581" width="0.0805%" height="15" fill="rgb(238,209,51)" fg:x="478" fg:w="1"/><text x="38.7363%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.4863%" y="565" width="0.0805%" height="15" fill="rgb(237,56,23)" fg:x="478" fg:w="1"/><text x="38.7363%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4863%" y="549" width="0.0805%" height="15" fill="rgb(215,153,46)" fg:x="478" fg:w="1"/><text x="38.7363%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.6473%" y="709" width="0.0805%" height="15" fill="rgb(224,49,31)" fg:x="480" fg:w="1"/><text x="38.8973%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6473%" y="693" width="0.0805%" height="15" fill="rgb(250,18,42)" fg:x="480" fg:w="1"/><text x="38.8973%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="38.7279%" y="677" width="0.1610%" height="15" fill="rgb(215,176,39)" fg:x="481" fg:w="2"/><text x="38.9779%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.7279%" y="661" width="0.1610%" height="15" fill="rgb(223,77,29)" fg:x="481" fg:w="2"/><text x="38.9779%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.7279%" y="645" width="0.1610%" height="15" fill="rgb(234,94,52)" fg:x="481" fg:w="2"/><text x="38.9779%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.7279%" y="629" width="0.1610%" height="15" fill="rgb(220,154,50)" fg:x="481" fg:w="2"/><text x="38.9779%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.7279%" y="613" width="0.1610%" height="15" fill="rgb(212,11,10)" fg:x="481" fg:w="2"/><text x="38.9779%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.7279%" y="597" width="0.1610%" height="15" fill="rgb(205,166,19)" fg:x="481" fg:w="2"/><text x="38.9779%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.7279%" y="581" width="0.1610%" height="15" fill="rgb(244,198,16)" fg:x="481" fg:w="2"/><text x="38.9779%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.7279%" y="565" width="0.1610%" height="15" fill="rgb(219,69,12)" fg:x="481" fg:w="2"/><text x="38.9779%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.7279%" y="549" width="0.1610%" height="15" fill="rgb(245,30,7)" fg:x="481" fg:w="2"/><text x="38.9779%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="38.7279%" y="533" width="0.1610%" height="15" fill="rgb(218,221,48)" fg:x="481" fg:w="2"/><text x="38.9779%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.7279%" y="517" width="0.1610%" height="15" fill="rgb(216,66,15)" fg:x="481" fg:w="2"/><text x="38.9779%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.7279%" y="501" width="0.1610%" height="15" fill="rgb(226,122,50)" fg:x="481" fg:w="2"/><text x="38.9779%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="38.7279%" y="693" width="0.3221%" height="15" fill="rgb(239,156,16)" fg:x="481" fg:w="4"/><text x="38.9779%" y="703.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="38.8889%" y="677" width="0.1610%" height="15" fill="rgb(224,27,38)" fg:x="483" fg:w="2"/><text x="39.1389%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="38.9694%" y="661" width="0.0805%" height="15" fill="rgb(224,39,27)" fg:x="484" fg:w="1"/><text x="39.2194%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9694%" y="645" width="0.0805%" height="15" fill="rgb(215,92,29)" fg:x="484" fg:w="1"/><text x="39.2194%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="38.7279%" y="709" width="0.4026%" height="15" fill="rgb(207,159,16)" fg:x="481" fg:w="5"/><text x="38.9779%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0499%" y="693" width="0.0805%" height="15" fill="rgb(238,163,47)" fg:x="485" fg:w="1"/><text x="39.2999%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2110%" y="677" width="0.0805%" height="15" fill="rgb(219,91,49)" fg:x="487" fg:w="1"/><text x="39.4610%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2110%" y="661" width="0.0805%" height="15" fill="rgb(227,167,31)" fg:x="487" fg:w="1"/><text x="39.4610%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2110%" y="645" width="0.0805%" height="15" fill="rgb(234,80,54)" fg:x="487" fg:w="1"/><text x="39.4610%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2110%" y="629" width="0.0805%" height="15" fill="rgb(212,114,2)" fg:x="487" fg:w="1"/><text x="39.4610%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2110%" y="613" width="0.0805%" height="15" fill="rgb(234,50,24)" fg:x="487" fg:w="1"/><text x="39.4610%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2110%" y="597" width="0.0805%" height="15" fill="rgb(221,68,8)" fg:x="487" fg:w="1"/><text x="39.4610%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2110%" y="581" width="0.0805%" height="15" fill="rgb(254,180,31)" fg:x="487" fg:w="1"/><text x="39.4610%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.2110%" y="565" width="0.0805%" height="15" fill="rgb(247,130,50)" fg:x="487" fg:w="1"/><text x="39.4610%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.2110%" y="549" width="0.0805%" height="15" fill="rgb(211,109,4)" fg:x="487" fg:w="1"/><text x="39.4610%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.2110%" y="533" width="0.0805%" height="15" fill="rgb(238,50,21)" fg:x="487" fg:w="1"/><text x="39.4610%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.2110%" y="517" width="0.0805%" height="15" fill="rgb(225,57,45)" fg:x="487" fg:w="1"/><text x="39.4610%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2110%" y="501" width="0.0805%" height="15" fill="rgb(209,196,50)" fg:x="487" fg:w="1"/><text x="39.4610%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="39.3720%" y="645" width="0.3221%" height="15" fill="rgb(242,140,13)" fg:x="489" fg:w="4"/><text x="39.6220%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="39.3720%" y="629" width="0.3221%" height="15" fill="rgb(217,111,7)" fg:x="489" fg:w="4"/><text x="39.6220%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="39.3720%" y="613" width="0.3221%" height="15" fill="rgb(253,193,51)" fg:x="489" fg:w="4"/><text x="39.6220%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="39.4525%" y="597" width="0.2415%" height="15" fill="rgb(252,70,29)" fg:x="490" fg:w="3"/><text x="39.7025%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="39.3720%" y="661" width="0.4831%" height="15" fill="rgb(232,127,12)" fg:x="489" fg:w="6"/><text x="39.6220%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.6940%" y="645" width="0.1610%" height="15" fill="rgb(211,180,21)" fg:x="493" fg:w="2"/><text x="39.9440%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.7746%" y="629" width="0.0805%" height="15" fill="rgb(229,72,13)" fg:x="494" fg:w="1"/><text x="40.0246%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="39.9356%" y="645" width="0.1610%" height="15" fill="rgb(240,211,49)" fg:x="496" fg:w="2"/><text x="40.1856%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.9356%" y="629" width="0.1610%" height="15" fill="rgb(219,149,40)" fg:x="496" fg:w="2"/><text x="40.1856%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.9356%" y="613" width="0.1610%" height="15" fill="rgb(210,127,46)" fg:x="496" fg:w="2"/><text x="40.1856%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.0161%" y="597" width="0.0805%" height="15" fill="rgb(220,106,7)" fg:x="497" fg:w="1"/><text x="40.2661%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.2576%" y="597" width="0.1610%" height="15" fill="rgb(249,31,22)" fg:x="500" fg:w="2"/><text x="40.5076%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.3382%" y="581" width="0.0805%" height="15" fill="rgb(253,1,49)" fg:x="501" fg:w="1"/><text x="40.5882%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.3382%" y="565" width="0.0805%" height="15" fill="rgb(227,144,33)" fg:x="501" fg:w="1"/><text x="40.5882%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.3382%" y="549" width="0.0805%" height="15" fill="rgb(249,163,44)" fg:x="501" fg:w="1"/><text x="40.5882%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.4187%" y="581" width="0.0805%" height="15" fill="rgb(234,15,39)" fg:x="502" fg:w="1"/><text x="40.6687%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.4187%" y="565" width="0.0805%" height="15" fill="rgb(207,66,16)" fg:x="502" fg:w="1"/><text x="40.6687%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.4187%" y="549" width="0.0805%" height="15" fill="rgb(233,112,24)" fg:x="502" fg:w="1"/><text x="40.6687%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="40.2576%" y="629" width="0.3221%" height="15" fill="rgb(230,90,22)" fg:x="500" fg:w="4"/><text x="40.5076%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="40.2576%" y="613" width="0.3221%" height="15" fill="rgb(229,61,13)" fg:x="500" fg:w="4"/><text x="40.5076%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="40.4187%" y="597" width="0.1610%" height="15" fill="rgb(225,57,24)" fg:x="502" fg:w="2"/><text x="40.6687%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.4992%" y="581" width="0.0805%" height="15" fill="rgb(208,169,48)" fg:x="503" fg:w="1"/><text x="40.7492%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.4992%" y="565" width="0.0805%" height="15" fill="rgb(244,218,51)" fg:x="503" fg:w="1"/><text x="40.7492%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.4992%" y="549" width="0.0805%" height="15" fill="rgb(214,148,10)" fg:x="503" fg:w="1"/><text x="40.7492%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="40.5797%" y="629" width="0.3221%" height="15" fill="rgb(225,174,27)" fg:x="504" fg:w="4"/><text x="40.8297%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="40.5797%" y="613" width="0.3221%" height="15" fill="rgb(230,96,26)" fg:x="504" fg:w="4"/><text x="40.8297%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="40.7407%" y="597" width="0.1610%" height="15" fill="rgb(232,10,30)" fg:x="506" fg:w="2"/><text x="40.9907%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.8213%" y="581" width="0.0805%" height="15" fill="rgb(222,8,50)" fg:x="507" fg:w="1"/><text x="41.0713%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.8213%" y="565" width="0.0805%" height="15" fill="rgb(213,81,27)" fg:x="507" fg:w="1"/><text x="41.0713%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.8213%" y="549" width="0.0805%" height="15" fill="rgb(245,50,10)" fg:x="507" fg:w="1"/><text x="41.0713%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="40.9018%" y="613" width="0.0805%" height="15" fill="rgb(216,100,18)" fg:x="508" fg:w="1"/><text x="41.1518%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.9018%" y="597" width="0.0805%" height="15" fill="rgb(236,147,54)" fg:x="508" fg:w="1"/><text x="41.1518%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.9018%" y="581" width="0.0805%" height="15" fill="rgb(205,143,26)" fg:x="508" fg:w="1"/><text x="41.1518%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="41.0628%" y="581" width="0.0805%" height="15" fill="rgb(236,26,9)" fg:x="510" fg:w="1"/><text x="41.3128%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.0628%" y="565" width="0.0805%" height="15" fill="rgb(221,165,53)" fg:x="510" fg:w="1"/><text x="41.3128%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="41.1433%" y="565" width="0.4831%" height="15" fill="rgb(214,110,17)" fg:x="511" fg:w="6"/><text x="41.3933%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="41.2238%" y="549" width="0.4026%" height="15" fill="rgb(237,197,12)" fg:x="512" fg:w="5"/><text x="41.4738%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="41.2238%" y="533" width="0.4026%" height="15" fill="rgb(205,84,17)" fg:x="512" fg:w="5"/><text x="41.4738%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="41.2238%" y="517" width="0.4026%" height="15" fill="rgb(237,18,45)" fg:x="512" fg:w="5"/><text x="41.4738%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="41.2238%" y="501" width="0.4026%" height="15" fill="rgb(221,87,14)" fg:x="512" fg:w="5"/><text x="41.4738%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="41.2238%" y="485" width="0.4026%" height="15" fill="rgb(238,186,15)" fg:x="512" fg:w="5"/><text x="41.4738%" y="495.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="41.2238%" y="469" width="0.4026%" height="15" fill="rgb(208,115,11)" fg:x="512" fg:w="5"/><text x="41.4738%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="41.6264%" y="565" width="0.0805%" height="15" fill="rgb(254,175,0)" fg:x="517" fg:w="1"/><text x="41.8764%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="41.1433%" y="581" width="0.6441%" height="15" fill="rgb(227,24,42)" fg:x="511" fg:w="8"/><text x="41.3933%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.7069%" y="565" width="0.0805%" height="15" fill="rgb(223,211,37)" fg:x="518" fg:w="1"/><text x="41.9569%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.7069%" y="549" width="0.0805%" height="15" fill="rgb(235,49,27)" fg:x="518" fg:w="1"/><text x="41.9569%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.7069%" y="533" width="0.0805%" height="15" fill="rgb(254,97,51)" fg:x="518" fg:w="1"/><text x="41.9569%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="40.9823%" y="613" width="1.0467%" height="15" fill="rgb(249,51,40)" fg:x="509" fg:w="13"/><text x="41.2323%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="40.9823%" y="597" width="1.0467%" height="15" fill="rgb(210,128,45)" fg:x="509" fg:w="13"/><text x="41.2323%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="41.7874%" y="581" width="0.2415%" height="15" fill="rgb(224,137,50)" fg:x="519" fg:w="3"/><text x="42.0374%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.9485%" y="565" width="0.0805%" height="15" fill="rgb(242,15,9)" fg:x="521" fg:w="1"/><text x="42.1985%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="40.0966%" y="645" width="2.1739%" height="15" fill="rgb(233,187,41)" fg:x="498" fg:w="27"/><text x="40.3466%" y="655.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.37%)</title><rect x="40.9018%" y="629" width="1.3688%" height="15" fill="rgb(227,2,29)" fg:x="508" fg:w="17"/><text x="41.1518%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="42.0290%" y="613" width="0.2415%" height="15" fill="rgb(222,70,3)" fg:x="522" fg:w="3"/><text x="42.2790%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="42.1095%" y="597" width="0.1610%" height="15" fill="rgb(213,11,42)" fg:x="523" fg:w="2"/><text x="42.3595%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.1900%" y="581" width="0.0805%" height="15" fill="rgb(225,150,9)" fg:x="524" fg:w="1"/><text x="42.4400%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.98%)</title><rect x="39.8551%" y="661" width="2.9791%" height="15" fill="rgb(230,162,45)" fg:x="495" fg:w="37"/><text x="40.1051%" y="671.50">ser..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="42.2705%" y="645" width="0.5636%" height="15" fill="rgb(222,14,52)" fg:x="525" fg:w="7"/><text x="42.5205%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="42.2705%" y="629" width="0.5636%" height="15" fill="rgb(254,198,14)" fg:x="525" fg:w="7"/><text x="42.5205%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="42.2705%" y="613" width="0.5636%" height="15" fill="rgb(220,217,30)" fg:x="525" fg:w="7"/><text x="42.5205%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="42.5121%" y="597" width="0.3221%" height="15" fill="rgb(215,146,41)" fg:x="528" fg:w="4"/><text x="42.7621%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="42.5926%" y="581" width="0.2415%" height="15" fill="rgb(217,27,36)" fg:x="529" fg:w="3"/><text x="42.8426%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="42.6731%" y="565" width="0.1610%" height="15" fill="rgb(219,218,39)" fg:x="530" fg:w="2"/><text x="42.9231%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.70%)</title><rect x="39.2915%" y="677" width="3.7037%" height="15" fill="rgb(219,4,42)" fg:x="488" fg:w="46"/><text x="39.5415%" y="687.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="42.8341%" y="661" width="0.1610%" height="15" fill="rgb(249,119,36)" fg:x="532" fg:w="2"/><text x="43.0841%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.9147%" y="645" width="0.0805%" height="15" fill="rgb(209,23,33)" fg:x="533" fg:w="1"/><text x="43.1647%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.9147%" y="629" width="0.0805%" height="15" fill="rgb(211,10,0)" fg:x="533" fg:w="1"/><text x="43.1647%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.9147%" y="613" width="0.0805%" height="15" fill="rgb(208,99,37)" fg:x="533" fg:w="1"/><text x="43.1647%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.9147%" y="597" width="0.0805%" height="15" fill="rgb(213,132,31)" fg:x="533" fg:w="1"/><text x="43.1647%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9147%" y="581" width="0.0805%" height="15" fill="rgb(243,129,40)" fg:x="533" fg:w="1"/><text x="43.1647%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.9952%" y="629" width="0.1610%" height="15" fill="rgb(210,66,33)" fg:x="534" fg:w="2"/><text x="43.2452%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.1562%" y="629" width="0.0805%" height="15" fill="rgb(209,189,4)" fg:x="536" fg:w="1"/><text x="43.4062%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2367%" y="613" width="0.0805%" height="15" fill="rgb(214,107,37)" fg:x="537" fg:w="1"/><text x="43.4867%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2367%" y="597" width="0.0805%" height="15" fill="rgb(245,88,54)" fg:x="537" fg:w="1"/><text x="43.4867%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="43.3977%" y="597" width="0.1610%" height="15" fill="rgb(205,146,20)" fg:x="539" fg:w="2"/><text x="43.6477%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="43.3977%" y="581" width="0.1610%" height="15" fill="rgb(220,161,25)" fg:x="539" fg:w="2"/><text x="43.6477%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4783%" y="565" width="0.0805%" height="15" fill="rgb(215,152,15)" fg:x="540" fg:w="1"/><text x="43.7283%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5588%" y="581" width="0.0805%" height="15" fill="rgb(233,192,44)" fg:x="541" fg:w="1"/><text x="43.8088%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6393%" y="565" width="0.0805%" height="15" fill="rgb(240,170,46)" fg:x="542" fg:w="1"/><text x="43.8893%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="42.9952%" y="677" width="0.8052%" height="15" fill="rgb(207,104,33)" fg:x="534" fg:w="10"/><text x="43.2452%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.81%)</title><rect x="42.9952%" y="661" width="0.8052%" height="15" fill="rgb(219,21,39)" fg:x="534" fg:w="10"/><text x="43.2452%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="42.9952%" y="645" width="0.8052%" height="15" fill="rgb(214,133,29)" fg:x="534" fg:w="10"/><text x="43.2452%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="43.2367%" y="629" width="0.5636%" height="15" fill="rgb(226,93,6)" fg:x="537" fg:w="7"/><text x="43.4867%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="43.3172%" y="613" width="0.4831%" height="15" fill="rgb(252,222,34)" fg:x="538" fg:w="6"/><text x="43.5672%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="43.5588%" y="597" width="0.2415%" height="15" fill="rgb(252,92,48)" fg:x="541" fg:w="3"/><text x="43.8088%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="43.6393%" y="581" width="0.1610%" height="15" fill="rgb(245,223,24)" fg:x="542" fg:w="2"/><text x="43.8893%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.7198%" y="565" width="0.0805%" height="15" fill="rgb(205,176,3)" fg:x="543" fg:w="1"/><text x="43.9698%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.8808%" y="597" width="0.0805%" height="15" fill="rgb(235,151,15)" fg:x="545" fg:w="1"/><text x="44.1308%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9614%" y="597" width="0.0805%" height="15" fill="rgb(237,209,11)" fg:x="546" fg:w="1"/><text x="44.2114%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9614%" y="581" width="0.0805%" height="15" fill="rgb(243,227,24)" fg:x="546" fg:w="1"/><text x="44.2114%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1224%" y="581" width="0.0805%" height="15" fill="rgb(239,193,16)" fg:x="548" fg:w="1"/><text x="44.3724%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2029%" y="581" width="0.0805%" height="15" fill="rgb(231,27,9)" fg:x="549" fg:w="1"/><text x="44.4529%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="44.3639%" y="565" width="0.2415%" height="15" fill="rgb(219,169,10)" fg:x="551" fg:w="3"/><text x="44.6139%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.6055%" y="565" width="0.1610%" height="15" fill="rgb(244,229,43)" fg:x="554" fg:w="2"/><text x="44.8555%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.6860%" y="549" width="0.0805%" height="15" fill="rgb(254,38,20)" fg:x="555" fg:w="1"/><text x="44.9360%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.7665%" y="533" width="0.1610%" height="15" fill="rgb(250,47,30)" fg:x="556" fg:w="2"/><text x="45.0165%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="44.7665%" y="565" width="0.2415%" height="15" fill="rgb(224,124,36)" fg:x="556" fg:w="3"/><text x="45.0165%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="44.7665%" y="549" width="0.2415%" height="15" fill="rgb(246,68,51)" fg:x="556" fg:w="3"/><text x="45.0165%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.9275%" y="533" width="0.0805%" height="15" fill="rgb(253,43,49)" fg:x="558" fg:w="1"/><text x="45.1775%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0886%" y="533" width="0.0805%" height="15" fill="rgb(219,54,36)" fg:x="560" fg:w="1"/><text x="45.3386%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="43.8808%" y="645" width="1.3688%" height="15" fill="rgb(227,133,34)" fg:x="545" fg:w="17"/><text x="44.1308%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="43.8808%" y="629" width="1.3688%" height="15" fill="rgb(247,227,15)" fg:x="545" fg:w="17"/><text x="44.1308%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="43.8808%" y="613" width="1.3688%" height="15" fill="rgb(229,96,14)" fg:x="545" fg:w="17"/><text x="44.1308%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="44.0419%" y="597" width="1.2077%" height="15" fill="rgb(220,79,17)" fg:x="547" fg:w="15"/><text x="44.2919%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="44.2834%" y="581" width="0.9662%" height="15" fill="rgb(205,131,53)" fg:x="550" fg:w="12"/><text x="44.5334%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="45.0081%" y="565" width="0.2415%" height="15" fill="rgb(209,50,29)" fg:x="559" fg:w="3"/><text x="45.2581%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="45.0081%" y="549" width="0.2415%" height="15" fill="rgb(245,86,46)" fg:x="559" fg:w="3"/><text x="45.2581%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1691%" y="533" width="0.0805%" height="15" fill="rgb(235,66,46)" fg:x="561" fg:w="1"/><text x="45.4191%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="45.4911%" y="581" width="0.1610%" height="15" fill="rgb(232,148,31)" fg:x="565" fg:w="2"/><text x="45.7411%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="45.5717%" y="565" width="0.0805%" height="15" fill="rgb(217,149,8)" fg:x="566" fg:w="1"/><text x="45.8217%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="45.4911%" y="597" width="0.2415%" height="15" fill="rgb(209,183,11)" fg:x="565" fg:w="3"/><text x="45.7411%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.6522%" y="581" width="0.0805%" height="15" fill="rgb(208,55,20)" fg:x="567" fg:w="1"/><text x="45.9022%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="45.4911%" y="613" width="0.3221%" height="15" fill="rgb(218,39,14)" fg:x="565" fg:w="4"/><text x="45.7411%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.7327%" y="597" width="0.0805%" height="15" fill="rgb(216,169,33)" fg:x="568" fg:w="1"/><text x="45.9827%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="45.2496%" y="629" width="0.6441%" height="15" fill="rgb(233,80,24)" fg:x="562" fg:w="8"/><text x="45.4996%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.8132%" y="613" width="0.0805%" height="15" fill="rgb(213,179,31)" fg:x="569" fg:w="1"/><text x="46.0632%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (26 samples, 2.09%)</title><rect x="43.8808%" y="661" width="2.0934%" height="15" fill="rgb(209,19,5)" fg:x="545" fg:w="26"/><text x="44.1308%" y="671.50">&lt;..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="45.2496%" y="645" width="0.7246%" height="15" fill="rgb(219,18,35)" fg:x="562" fg:w="9"/><text x="45.4996%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="45.8937%" y="629" width="0.0805%" height="15" fill="rgb(209,169,16)" fg:x="570" fg:w="1"/><text x="46.1437%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="45.8937%" y="613" width="0.0805%" height="15" fill="rgb(245,90,51)" fg:x="570" fg:w="1"/><text x="46.1437%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8937%" y="597" width="0.0805%" height="15" fill="rgb(220,99,45)" fg:x="570" fg:w="1"/><text x="46.1437%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="45.9742%" y="661" width="0.1610%" height="15" fill="rgb(249,89,25)" fg:x="571" fg:w="2"/><text x="46.2242%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.0548%" y="645" width="0.0805%" height="15" fill="rgb(239,193,0)" fg:x="572" fg:w="1"/><text x="46.3048%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="46.4573%" y="629" width="0.4831%" height="15" fill="rgb(231,126,1)" fg:x="577" fg:w="6"/><text x="46.7073%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.6184%" y="613" width="0.3221%" height="15" fill="rgb(243,166,3)" fg:x="579" fg:w="4"/><text x="46.8684%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="46.6989%" y="597" width="0.2415%" height="15" fill="rgb(223,22,34)" fg:x="580" fg:w="3"/><text x="46.9489%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="47.0209%" y="613" width="0.0805%" height="15" fill="rgb(251,52,51)" fg:x="584" fg:w="1"/><text x="47.2709%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="46.9404%" y="629" width="0.2415%" height="15" fill="rgb(221,165,28)" fg:x="583" fg:w="3"/><text x="47.1904%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.1014%" y="613" width="0.0805%" height="15" fill="rgb(218,121,47)" fg:x="585" fg:w="1"/><text x="47.3514%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="47.1014%" y="597" width="0.0805%" height="15" fill="rgb(209,120,9)" fg:x="585" fg:w="1"/><text x="47.3514%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2625%" y="597" width="0.0805%" height="15" fill="rgb(236,68,12)" fg:x="587" fg:w="1"/><text x="47.5125%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="47.1820%" y="629" width="0.2415%" height="15" fill="rgb(225,194,26)" fg:x="586" fg:w="3"/><text x="47.4320%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.2625%" y="613" width="0.1610%" height="15" fill="rgb(231,84,39)" fg:x="587" fg:w="2"/><text x="47.5125%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.3430%" y="597" width="0.0805%" height="15" fill="rgb(210,11,45)" fg:x="588" fg:w="1"/><text x="47.5930%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.5845%" y="597" width="0.0805%" height="15" fill="rgb(224,54,52)" fg:x="591" fg:w="1"/><text x="47.8345%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="47.7456%" y="581" width="0.2415%" height="15" fill="rgb(238,102,14)" fg:x="593" fg:w="3"/><text x="47.9956%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.8261%" y="565" width="0.1610%" height="15" fill="rgb(243,160,52)" fg:x="594" fg:w="2"/><text x="48.0761%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.8261%" y="549" width="0.1610%" height="15" fill="rgb(216,114,19)" fg:x="594" fg:w="2"/><text x="48.0761%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="47.9871%" y="565" width="0.0805%" height="15" fill="rgb(244,166,37)" fg:x="596" fg:w="1"/><text x="48.2371%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.9871%" y="549" width="0.0805%" height="15" fill="rgb(246,29,44)" fg:x="596" fg:w="1"/><text x="48.2371%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="47.9871%" y="533" width="0.0805%" height="15" fill="rgb(215,56,53)" fg:x="596" fg:w="1"/><text x="48.2371%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.1481%" y="549" width="0.0805%" height="15" fill="rgb(217,60,2)" fg:x="598" fg:w="1"/><text x="48.3981%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="47.9871%" y="581" width="0.4026%" height="15" fill="rgb(207,26,24)" fg:x="596" fg:w="5"/><text x="48.2371%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="48.0676%" y="565" width="0.3221%" height="15" fill="rgb(252,210,15)" fg:x="597" fg:w="4"/><text x="48.3176%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="48.2287%" y="549" width="0.1610%" height="15" fill="rgb(253,209,26)" fg:x="599" fg:w="2"/><text x="48.4787%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.3092%" y="533" width="0.0805%" height="15" fill="rgb(238,170,14)" fg:x="600" fg:w="1"/><text x="48.5592%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3092%" y="517" width="0.0805%" height="15" fill="rgb(216,178,15)" fg:x="600" fg:w="1"/><text x="48.5592%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.4702%" y="565" width="0.0805%" height="15" fill="rgb(250,197,2)" fg:x="602" fg:w="1"/><text x="48.7202%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.5507%" y="549" width="0.2415%" height="15" fill="rgb(212,70,42)" fg:x="603" fg:w="3"/><text x="48.8007%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.6312%" y="533" width="0.1610%" height="15" fill="rgb(227,213,9)" fg:x="604" fg:w="2"/><text x="48.8812%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.6312%" y="517" width="0.1610%" height="15" fill="rgb(245,99,25)" fg:x="604" fg:w="2"/><text x="48.8812%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.0338%" y="533" width="0.0805%" height="15" fill="rgb(250,82,29)" fg:x="609" fg:w="1"/><text x="49.2838%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.3559%" y="501" width="0.0805%" height="15" fill="rgb(241,226,54)" fg:x="613" fg:w="1"/><text x="49.6059%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5169%" y="453" width="0.0805%" height="15" fill="rgb(221,99,41)" fg:x="615" fg:w="1"/><text x="49.7669%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.4364%" y="485" width="0.2415%" height="15" fill="rgb(213,90,21)" fg:x="614" fg:w="3"/><text x="49.6864%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.5169%" y="469" width="0.1610%" height="15" fill="rgb(205,208,24)" fg:x="615" fg:w="2"/><text x="49.7669%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.5974%" y="453" width="0.0805%" height="15" fill="rgb(246,31,12)" fg:x="616" fg:w="1"/><text x="49.8474%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="49.7585%" y="453" width="0.4026%" height="15" fill="rgb(213,154,6)" fg:x="618" fg:w="5"/><text x="50.0085%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="49.8390%" y="437" width="0.3221%" height="15" fill="rgb(222,163,29)" fg:x="619" fg:w="4"/><text x="50.0890%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="49.8390%" y="421" width="0.3221%" height="15" fill="rgb(227,201,8)" fg:x="619" fg:w="4"/><text x="50.0890%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="49.7585%" y="469" width="0.4831%" height="15" fill="rgb(233,9,32)" fg:x="618" fg:w="6"/><text x="50.0085%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="50.1610%" y="453" width="0.0805%" height="15" fill="rgb(217,54,24)" fg:x="623" fg:w="1"/><text x="50.4110%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.21%)</title><rect x="49.1143%" y="533" width="1.2077%" height="15" fill="rgb(235,192,0)" fg:x="610" fg:w="15"/><text x="49.3643%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="49.1143%" y="517" width="1.2077%" height="15" fill="rgb(235,45,9)" fg:x="610" fg:w="15"/><text x="49.3643%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="49.4364%" y="501" width="0.8857%" height="15" fill="rgb(246,42,40)" fg:x="614" fg:w="11"/><text x="49.6864%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="49.6779%" y="485" width="0.6441%" height="15" fill="rgb(248,111,24)" fg:x="617" fg:w="8"/><text x="49.9279%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="50.2415%" y="469" width="0.0805%" height="15" fill="rgb(249,65,22)" fg:x="624" fg:w="1"/><text x="50.4915%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.2415%" y="453" width="0.0805%" height="15" fill="rgb(238,111,51)" fg:x="624" fg:w="1"/><text x="50.4915%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3221%" y="533" width="0.0805%" height="15" fill="rgb(250,118,22)" fg:x="625" fg:w="1"/><text x="50.5721%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (35 samples, 2.82%)</title><rect x="47.6651%" y="597" width="2.8180%" height="15" fill="rgb(234,84,26)" fg:x="592" fg:w="35"/><text x="47.9151%" y="607.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 2.09%)</title><rect x="48.3897%" y="581" width="2.0934%" height="15" fill="rgb(243,172,12)" fg:x="601" fg:w="26"/><text x="48.6397%" y="591.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.93%)</title><rect x="48.5507%" y="565" width="1.9324%" height="15" fill="rgb(236,150,49)" fg:x="603" fg:w="24"/><text x="48.8007%" y="575.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.69%)</title><rect x="48.7923%" y="549" width="1.6908%" height="15" fill="rgb(225,197,26)" fg:x="606" fg:w="21"/><text x="49.0423%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="50.4026%" y="533" width="0.0805%" height="15" fill="rgb(214,17,42)" fg:x="626" fg:w="1"/><text x="50.6526%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="50.4026%" y="517" width="0.0805%" height="15" fill="rgb(224,165,40)" fg:x="626" fg:w="1"/><text x="50.6526%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (39 samples, 3.14%)</title><rect x="47.5845%" y="613" width="3.1401%" height="15" fill="rgb(246,100,4)" fg:x="591" fg:w="39"/><text x="47.8345%" y="623.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="50.4831%" y="597" width="0.2415%" height="15" fill="rgb(222,103,0)" fg:x="627" fg:w="3"/><text x="50.7331%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6441%" y="581" width="0.0805%" height="15" fill="rgb(227,189,26)" fg:x="629" fg:w="1"/><text x="50.8941%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (60 samples, 4.83%)</title><rect x="46.1353%" y="661" width="4.8309%" height="15" fill="rgb(214,202,17)" fg:x="573" fg:w="60"/><text x="46.3853%" y="671.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (59 samples, 4.75%)</title><rect x="46.2158%" y="645" width="4.7504%" height="15" fill="rgb(229,111,3)" fg:x="574" fg:w="59"/><text x="46.4658%" y="655.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (44 samples, 3.54%)</title><rect x="47.4235%" y="629" width="3.5427%" height="15" fill="rgb(229,172,15)" fg:x="589" fg:w="44"/><text x="47.6735%" y="639.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="50.7246%" y="613" width="0.2415%" height="15" fill="rgb(230,224,35)" fg:x="630" fg:w="3"/><text x="50.9746%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8857%" y="597" width="0.0805%" height="15" fill="rgb(251,141,6)" fg:x="632" fg:w="1"/><text x="51.1357%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="51.2882%" y="485" width="0.2415%" height="15" fill="rgb(225,208,6)" fg:x="637" fg:w="3"/><text x="51.5382%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.3688%" y="469" width="0.1610%" height="15" fill="rgb(246,181,16)" fg:x="638" fg:w="2"/><text x="51.6188%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5298%" y="485" width="0.0805%" height="15" fill="rgb(227,129,36)" fg:x="640" fg:w="1"/><text x="51.7798%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5298%" y="469" width="0.0805%" height="15" fill="rgb(248,117,24)" fg:x="640" fg:w="1"/><text x="51.7798%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="51.2882%" y="517" width="0.4026%" height="15" fill="rgb(214,185,35)" fg:x="637" fg:w="5"/><text x="51.5382%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="51.2882%" y="501" width="0.4026%" height="15" fill="rgb(236,150,34)" fg:x="637" fg:w="5"/><text x="51.5382%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.6103%" y="485" width="0.0805%" height="15" fill="rgb(243,228,27)" fg:x="641" fg:w="1"/><text x="51.8603%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.6908%" y="485" width="0.0805%" height="15" fill="rgb(245,77,44)" fg:x="642" fg:w="1"/><text x="51.9408%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="51.7713%" y="437" width="0.4026%" height="15" fill="rgb(235,214,42)" fg:x="643" fg:w="5"/><text x="52.0213%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="51.9324%" y="421" width="0.2415%" height="15" fill="rgb(221,74,3)" fg:x="645" fg:w="3"/><text x="52.1824%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0934%" y="405" width="0.0805%" height="15" fill="rgb(206,121,29)" fg:x="647" fg:w="1"/><text x="52.3434%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0934%" y="389" width="0.0805%" height="15" fill="rgb(249,131,53)" fg:x="647" fg:w="1"/><text x="52.3434%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0934%" y="373" width="0.0805%" height="15" fill="rgb(236,170,29)" fg:x="647" fg:w="1"/><text x="52.3434%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="51.7713%" y="469" width="0.4831%" height="15" fill="rgb(247,96,15)" fg:x="643" fg:w="6"/><text x="52.0213%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="51.7713%" y="453" width="0.4831%" height="15" fill="rgb(211,210,7)" fg:x="643" fg:w="6"/><text x="52.0213%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1739%" y="437" width="0.0805%" height="15" fill="rgb(240,88,50)" fg:x="648" fg:w="1"/><text x="52.4239%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1739%" y="421" width="0.0805%" height="15" fill="rgb(209,229,26)" fg:x="648" fg:w="1"/><text x="52.4239%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1739%" y="405" width="0.0805%" height="15" fill="rgb(210,68,23)" fg:x="648" fg:w="1"/><text x="52.4239%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.2544%" y="469" width="0.0805%" height="15" fill="rgb(229,180,13)" fg:x="649" fg:w="1"/><text x="52.5044%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2544%" y="453" width="0.0805%" height="15" fill="rgb(236,53,44)" fg:x="649" fg:w="1"/><text x="52.5044%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="51.7713%" y="485" width="0.6441%" height="15" fill="rgb(244,214,29)" fg:x="643" fg:w="8"/><text x="52.0213%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.3349%" y="469" width="0.0805%" height="15" fill="rgb(220,75,29)" fg:x="650" fg:w="1"/><text x="52.5849%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.3349%" y="453" width="0.0805%" height="15" fill="rgb(214,183,37)" fg:x="650" fg:w="1"/><text x="52.5849%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3349%" y="437" width="0.0805%" height="15" fill="rgb(239,117,29)" fg:x="650" fg:w="1"/><text x="52.5849%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="51.6908%" y="501" width="0.8052%" height="15" fill="rgb(237,171,35)" fg:x="642" fg:w="10"/><text x="51.9408%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4155%" y="485" width="0.0805%" height="15" fill="rgb(229,178,53)" fg:x="651" fg:w="1"/><text x="52.6655%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.4960%" y="501" width="0.0805%" height="15" fill="rgb(210,102,19)" fg:x="652" fg:w="1"/><text x="52.7460%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.45%)</title><rect x="51.2882%" y="533" width="1.4493%" height="15" fill="rgb(235,127,22)" fg:x="637" fg:w="18"/><text x="51.5382%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="51.6908%" y="517" width="1.0467%" height="15" fill="rgb(244,31,31)" fg:x="642" fg:w="13"/><text x="51.9408%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.5765%" y="501" width="0.1610%" height="15" fill="rgb(231,43,21)" fg:x="653" fg:w="2"/><text x="52.8265%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.5765%" y="485" width="0.1610%" height="15" fill="rgb(217,131,35)" fg:x="653" fg:w="2"/><text x="52.8265%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.5765%" y="469" width="0.1610%" height="15" fill="rgb(221,149,4)" fg:x="653" fg:w="2"/><text x="52.8265%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.7375%" y="533" width="0.0805%" height="15" fill="rgb(232,170,28)" fg:x="655" fg:w="1"/><text x="52.9875%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.7375%" y="517" width="0.0805%" height="15" fill="rgb(238,56,10)" fg:x="655" fg:w="1"/><text x="52.9875%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.69%)</title><rect x="51.2077%" y="565" width="1.6908%" height="15" fill="rgb(235,196,14)" fg:x="636" fg:w="21"/><text x="51.4577%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.61%)</title><rect x="51.2882%" y="549" width="1.6103%" height="15" fill="rgb(216,45,48)" fg:x="637" fg:w="20"/><text x="51.5382%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.8180%" y="533" width="0.0805%" height="15" fill="rgb(238,213,17)" fg:x="656" fg:w="1"/><text x="53.0680%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.8986%" y="549" width="0.1610%" height="15" fill="rgb(212,13,2)" fg:x="657" fg:w="2"/><text x="53.1486%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="52.8986%" y="565" width="0.4026%" height="15" fill="rgb(240,114,20)" fg:x="657" fg:w="5"/><text x="53.1486%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.0596%" y="549" width="0.2415%" height="15" fill="rgb(228,41,40)" fg:x="659" fg:w="3"/><text x="53.3096%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.25%)</title><rect x="51.1272%" y="597" width="2.2544%" height="15" fill="rgb(244,132,35)" fg:x="635" fg:w="28"/><text x="51.3772%" y="607.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.25%)</title><rect x="51.1272%" y="581" width="2.2544%" height="15" fill="rgb(253,189,4)" fg:x="635" fg:w="28"/><text x="51.3772%" y="591.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="565" width="0.0805%" height="15" fill="rgb(224,37,19)" fg:x="662" fg:w="1"/><text x="53.5511%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.3011%" y="549" width="0.0805%" height="15" fill="rgb(235,223,18)" fg:x="662" fg:w="1"/><text x="53.5511%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.3011%" y="533" width="0.0805%" height="15" fill="rgb(235,163,25)" fg:x="662" fg:w="1"/><text x="53.5511%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.40%)</title><rect x="53.3816%" y="581" width="0.4026%" height="15" fill="rgb(217,145,28)" fg:x="663" fg:w="5"/><text x="53.6316%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="53.3816%" y="597" width="0.4831%" height="15" fill="rgb(223,223,32)" fg:x="663" fg:w="6"/><text x="53.6316%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7842%" y="581" width="0.0805%" height="15" fill="rgb(227,189,39)" fg:x="668" fg:w="1"/><text x="54.0342%" y="591.50"></text></g><g><title>engine::session::state::State::close (192 samples, 15.46%)</title><rect x="38.5668%" y="741" width="15.4589%" height="15" fill="rgb(248,10,22)" fg:x="479" fg:w="192"/><text x="38.8168%" y="751.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (192 samples, 15.46%)</title><rect x="38.5668%" y="725" width="15.4589%" height="15" fill="rgb(248,46,39)" fg:x="479" fg:w="192"/><text x="38.8168%" y="735.50">engine::session::state::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (185 samples, 14.90%)</title><rect x="39.1304%" y="709" width="14.8953%" height="15" fill="rgb(248,113,48)" fg:x="486" fg:w="185"/><text x="39.3804%" y="719.50">engine::session::intern..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (185 samples, 14.90%)</title><rect x="39.1304%" y="693" width="14.8953%" height="15" fill="rgb(245,16,25)" fg:x="486" fg:w="185"/><text x="39.3804%" y="703.50">engine::session::state:..</text></g><g><title>kernel::model::any_entity_changes (127 samples, 10.23%)</title><rect x="43.8003%" y="677" width="10.2254%" height="15" fill="rgb(249,152,16)" fg:x="544" fg:w="127"/><text x="44.0503%" y="687.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (38 samples, 3.06%)</title><rect x="50.9662%" y="661" width="3.0596%" height="15" fill="rgb(250,16,1)" fg:x="633" fg:w="38"/><text x="51.2162%" y="671.50">ser..</text></g><g><title>serde_json::de::from_trait (38 samples, 3.06%)</title><rect x="50.9662%" y="645" width="3.0596%" height="15" fill="rgb(249,138,3)" fg:x="633" fg:w="38"/><text x="51.2162%" y="655.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (37 samples, 2.98%)</title><rect x="51.0467%" y="629" width="2.9791%" height="15" fill="rgb(227,71,41)" fg:x="634" fg:w="37"/><text x="51.2967%" y="639.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (37 samples, 2.98%)</title><rect x="51.0467%" y="613" width="2.9791%" height="15" fill="rgb(209,184,23)" fg:x="634" fg:w="37"/><text x="51.2967%" y="623.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.8647%" y="597" width="0.1610%" height="15" fill="rgb(223,215,31)" fg:x="669" fg:w="2"/><text x="54.1147%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.8647%" y="581" width="0.1610%" height="15" fill="rgb(210,146,28)" fg:x="669" fg:w="2"/><text x="54.1147%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.9452%" y="565" width="0.0805%" height="15" fill="rgb(209,183,41)" fg:x="670" fg:w="1"/><text x="54.1952%" y="575.50"></text></g><g><title>engine::session::Session::close (197 samples, 15.86%)</title><rect x="38.2448%" y="757" width="15.8615%" height="15" fill="rgb(209,224,45)" fg:x="475" fg:w="197"/><text x="38.4948%" y="767.50">engine::session::Session..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="54.0258%" y="741" width="0.0805%" height="15" fill="rgb(224,209,51)" fg:x="671" fg:w="1"/><text x="54.2758%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="54.1868%" y="597" width="0.0805%" height="15" fill="rgb(223,17,39)" fg:x="673" fg:w="1"/><text x="54.4368%" y="607.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="54.2673%" y="565" width="0.0805%" height="15" fill="rgb(234,204,37)" fg:x="674" fg:w="1"/><text x="54.5173%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="54.2673%" y="549" width="0.0805%" height="15" fill="rgb(236,120,5)" fg:x="674" fg:w="1"/><text x="54.5173%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="54.2673%" y="533" width="0.0805%" height="15" fill="rgb(248,97,27)" fg:x="674" fg:w="1"/><text x="54.5173%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="54.2673%" y="517" width="0.0805%" height="15" fill="rgb(240,66,17)" fg:x="674" fg:w="1"/><text x="54.5173%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="54.2673%" y="501" width="0.0805%" height="15" fill="rgb(210,79,3)" fg:x="674" fg:w="1"/><text x="54.5173%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.2673%" y="485" width="0.0805%" height="15" fill="rgb(214,176,27)" fg:x="674" fg:w="1"/><text x="54.5173%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="54.1868%" y="629" width="0.3221%" height="15" fill="rgb(235,185,3)" fg:x="673" fg:w="4"/><text x="54.4368%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="54.1868%" y="613" width="0.3221%" height="15" fill="rgb(227,24,12)" fg:x="673" fg:w="4"/><text x="54.4368%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="54.2673%" y="597" width="0.2415%" height="15" fill="rgb(252,169,48)" fg:x="674" fg:w="3"/><text x="54.5173%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="54.2673%" y="581" width="0.2415%" height="15" fill="rgb(212,65,1)" fg:x="674" fg:w="3"/><text x="54.5173%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="565" width="0.1610%" height="15" fill="rgb(242,39,24)" fg:x="675" fg:w="2"/><text x="54.5978%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="54.3478%" y="549" width="0.1610%" height="15" fill="rgb(249,32,23)" fg:x="675" fg:w="2"/><text x="54.5978%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="533" width="0.1610%" height="15" fill="rgb(251,195,23)" fg:x="675" fg:w="2"/><text x="54.5978%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="517" width="0.1610%" height="15" fill="rgb(236,174,8)" fg:x="675" fg:w="2"/><text x="54.5978%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="501" width="0.1610%" height="15" fill="rgb(220,197,8)" fg:x="675" fg:w="2"/><text x="54.5978%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="54.3478%" y="485" width="0.1610%" height="15" fill="rgb(240,108,37)" fg:x="675" fg:w="2"/><text x="54.5978%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="469" width="0.1610%" height="15" fill="rgb(232,176,24)" fg:x="675" fg:w="2"/><text x="54.5978%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="453" width="0.1610%" height="15" fill="rgb(243,35,29)" fg:x="675" fg:w="2"/><text x="54.5978%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="54.3478%" y="437" width="0.1610%" height="15" fill="rgb(210,37,18)" fg:x="675" fg:w="2"/><text x="54.5978%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="54.3478%" y="421" width="0.1610%" height="15" fill="rgb(224,184,40)" fg:x="675" fg:w="2"/><text x="54.5978%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5089%" y="629" width="0.0805%" height="15" fill="rgb(236,39,29)" fg:x="677" fg:w="1"/><text x="54.7589%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.7504%" y="469" width="0.0805%" height="15" fill="rgb(232,48,39)" fg:x="680" fg:w="1"/><text x="55.0004%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.7504%" y="453" width="0.0805%" height="15" fill="rgb(236,34,42)" fg:x="680" fg:w="1"/><text x="55.0004%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.7504%" y="437" width="0.0805%" height="15" fill="rgb(243,106,37)" fg:x="680" fg:w="1"/><text x="55.0004%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="54.7504%" y="517" width="0.1610%" height="15" fill="rgb(218,96,6)" fg:x="680" fg:w="2"/><text x="55.0004%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="54.7504%" y="501" width="0.1610%" height="15" fill="rgb(235,130,12)" fg:x="680" fg:w="2"/><text x="55.0004%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.7504%" y="485" width="0.1610%" height="15" fill="rgb(231,95,0)" fg:x="680" fg:w="2"/><text x="55.0004%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.8309%" y="469" width="0.0805%" height="15" fill="rgb(228,12,23)" fg:x="681" fg:w="1"/><text x="55.0809%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.8309%" y="453" width="0.0805%" height="15" fill="rgb(216,12,1)" fg:x="681" fg:w="1"/><text x="55.0809%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.8309%" y="437" width="0.0805%" height="15" fill="rgb(219,59,3)" fg:x="681" fg:w="1"/><text x="55.0809%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.8309%" y="421" width="0.0805%" height="15" fill="rgb(215,208,46)" fg:x="681" fg:w="1"/><text x="55.0809%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.8309%" y="405" width="0.0805%" height="15" fill="rgb(254,224,29)" fg:x="681" fg:w="1"/><text x="55.0809%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.8309%" y="389" width="0.0805%" height="15" fill="rgb(232,14,29)" fg:x="681" fg:w="1"/><text x="55.0809%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="54.7504%" y="549" width="0.3221%" height="15" fill="rgb(208,45,52)" fg:x="680" fg:w="4"/><text x="55.0004%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="54.7504%" y="533" width="0.3221%" height="15" fill="rgb(234,191,28)" fg:x="680" fg:w="4"/><text x="55.0004%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="54.9114%" y="517" width="0.1610%" height="15" fill="rgb(244,67,43)" fg:x="682" fg:w="2"/><text x="55.1614%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9919%" y="501" width="0.0805%" height="15" fill="rgb(236,189,24)" fg:x="683" fg:w="1"/><text x="55.2419%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9919%" y="485" width="0.0805%" height="15" fill="rgb(239,214,33)" fg:x="683" fg:w="1"/><text x="55.2419%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9919%" y="469" width="0.0805%" height="15" fill="rgb(226,176,41)" fg:x="683" fg:w="1"/><text x="55.2419%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9919%" y="453" width="0.0805%" height="15" fill="rgb(248,47,8)" fg:x="683" fg:w="1"/><text x="55.2419%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9919%" y="437" width="0.0805%" height="15" fill="rgb(218,81,44)" fg:x="683" fg:w="1"/><text x="55.2419%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9919%" y="421" width="0.0805%" height="15" fill="rgb(213,98,6)" fg:x="683" fg:w="1"/><text x="55.2419%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9919%" y="405" width="0.0805%" height="15" fill="rgb(222,85,22)" fg:x="683" fg:w="1"/><text x="55.2419%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9919%" y="389" width="0.0805%" height="15" fill="rgb(239,46,39)" fg:x="683" fg:w="1"/><text x="55.2419%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9919%" y="373" width="0.0805%" height="15" fill="rgb(237,12,29)" fg:x="683" fg:w="1"/><text x="55.2419%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9919%" y="357" width="0.0805%" height="15" fill="rgb(214,77,8)" fg:x="683" fg:w="1"/><text x="55.2419%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9919%" y="341" width="0.0805%" height="15" fill="rgb(217,168,37)" fg:x="683" fg:w="1"/><text x="55.2419%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0725%" y="389" width="0.0805%" height="15" fill="rgb(221,217,23)" fg:x="684" fg:w="1"/><text x="55.3225%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0725%" y="373" width="0.0805%" height="15" fill="rgb(243,229,36)" fg:x="684" fg:w="1"/><text x="55.3225%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0725%" y="357" width="0.0805%" height="15" fill="rgb(251,163,40)" fg:x="684" fg:w="1"/><text x="55.3225%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.3140%" y="309" width="0.0805%" height="15" fill="rgb(237,222,12)" fg:x="687" fg:w="1"/><text x="55.5640%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="55.0725%" y="405" width="0.4026%" height="15" fill="rgb(248,132,6)" fg:x="684" fg:w="5"/><text x="55.3225%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="55.1530%" y="389" width="0.3221%" height="15" fill="rgb(227,167,50)" fg:x="685" fg:w="4"/><text x="55.4030%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="55.1530%" y="373" width="0.3221%" height="15" fill="rgb(242,84,37)" fg:x="685" fg:w="4"/><text x="55.4030%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.2335%" y="357" width="0.2415%" height="15" fill="rgb(212,4,50)" fg:x="686" fg:w="3"/><text x="55.4835%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.2335%" y="341" width="0.2415%" height="15" fill="rgb(230,228,32)" fg:x="686" fg:w="3"/><text x="55.4835%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.3140%" y="325" width="0.1610%" height="15" fill="rgb(248,217,23)" fg:x="687" fg:w="2"/><text x="55.5640%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3945%" y="309" width="0.0805%" height="15" fill="rgb(238,197,32)" fg:x="688" fg:w="1"/><text x="55.6445%" y="319.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="55.0725%" y="533" width="0.5636%" height="15" fill="rgb(236,106,1)" fg:x="684" fg:w="7"/><text x="55.3225%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="55.0725%" y="517" width="0.5636%" height="15" fill="rgb(219,228,13)" fg:x="684" fg:w="7"/><text x="55.3225%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="55.0725%" y="501" width="0.5636%" height="15" fill="rgb(238,30,35)" fg:x="684" fg:w="7"/><text x="55.3225%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="55.0725%" y="485" width="0.5636%" height="15" fill="rgb(236,70,23)" fg:x="684" fg:w="7"/><text x="55.3225%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="55.0725%" y="469" width="0.5636%" height="15" fill="rgb(249,104,48)" fg:x="684" fg:w="7"/><text x="55.3225%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="55.0725%" y="453" width="0.5636%" height="15" fill="rgb(254,117,50)" fg:x="684" fg:w="7"/><text x="55.3225%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="55.0725%" y="437" width="0.5636%" height="15" fill="rgb(223,152,4)" fg:x="684" fg:w="7"/><text x="55.3225%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="55.0725%" y="421" width="0.5636%" height="15" fill="rgb(245,6,2)" fg:x="684" fg:w="7"/><text x="55.3225%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.4750%" y="405" width="0.1610%" height="15" fill="rgb(249,150,24)" fg:x="689" fg:w="2"/><text x="55.7250%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.4750%" y="389" width="0.1610%" height="15" fill="rgb(228,185,42)" fg:x="689" fg:w="2"/><text x="55.7250%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.5556%" y="373" width="0.0805%" height="15" fill="rgb(226,39,33)" fg:x="690" fg:w="1"/><text x="55.8056%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.5556%" y="357" width="0.0805%" height="15" fill="rgb(221,166,19)" fg:x="690" fg:w="1"/><text x="55.8056%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6361%" y="501" width="0.0805%" height="15" fill="rgb(209,109,2)" fg:x="691" fg:w="1"/><text x="55.8861%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7166%" y="469" width="0.0805%" height="15" fill="rgb(252,216,26)" fg:x="692" fg:w="1"/><text x="55.9666%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7166%" y="453" width="0.0805%" height="15" fill="rgb(227,173,36)" fg:x="692" fg:w="1"/><text x="55.9666%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7971%" y="405" width="0.0805%" height="15" fill="rgb(209,90,7)" fg:x="693" fg:w="1"/><text x="56.0471%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.7971%" y="453" width="0.1610%" height="15" fill="rgb(250,194,11)" fg:x="693" fg:w="2"/><text x="56.0471%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="55.7971%" y="437" width="0.1610%" height="15" fill="rgb(220,72,50)" fg:x="693" fg:w="2"/><text x="56.0471%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.7971%" y="421" width="0.1610%" height="15" fill="rgb(222,106,48)" fg:x="693" fg:w="2"/><text x="56.0471%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="405" width="0.0805%" height="15" fill="rgb(216,220,45)" fg:x="694" fg:w="1"/><text x="56.1276%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="389" width="0.0805%" height="15" fill="rgb(234,112,18)" fg:x="694" fg:w="1"/><text x="56.1276%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="373" width="0.0805%" height="15" fill="rgb(206,179,9)" fg:x="694" fg:w="1"/><text x="56.1276%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.8776%" y="357" width="0.0805%" height="15" fill="rgb(215,115,40)" fg:x="694" fg:w="1"/><text x="56.1276%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="55.7166%" y="501" width="0.3221%" height="15" fill="rgb(222,69,34)" fg:x="692" fg:w="4"/><text x="55.9666%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.7166%" y="485" width="0.3221%" height="15" fill="rgb(209,161,10)" fg:x="692" fg:w="4"/><text x="55.9666%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.7971%" y="469" width="0.2415%" height="15" fill="rgb(217,6,38)" fg:x="693" fg:w="3"/><text x="56.0471%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9581%" y="453" width="0.0805%" height="15" fill="rgb(229,229,48)" fg:x="695" fg:w="1"/><text x="56.2081%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9581%" y="437" width="0.0805%" height="15" fill="rgb(225,21,28)" fg:x="695" fg:w="1"/><text x="56.2081%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.9581%" y="421" width="0.0805%" height="15" fill="rgb(206,33,13)" fg:x="695" fg:w="1"/><text x="56.2081%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9581%" y="405" width="0.0805%" height="15" fill="rgb(242,178,17)" fg:x="695" fg:w="1"/><text x="56.2081%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9581%" y="389" width="0.0805%" height="15" fill="rgb(220,162,5)" fg:x="695" fg:w="1"/><text x="56.2081%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.9581%" y="373" width="0.0805%" height="15" fill="rgb(210,33,43)" fg:x="695" fg:w="1"/><text x="56.2081%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9581%" y="357" width="0.0805%" height="15" fill="rgb(216,116,54)" fg:x="695" fg:w="1"/><text x="56.2081%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9581%" y="341" width="0.0805%" height="15" fill="rgb(249,92,24)" fg:x="695" fg:w="1"/><text x="56.2081%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.9581%" y="325" width="0.0805%" height="15" fill="rgb(231,189,14)" fg:x="695" fg:w="1"/><text x="56.2081%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9581%" y="309" width="0.0805%" height="15" fill="rgb(230,8,41)" fg:x="695" fg:w="1"/><text x="56.2081%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9581%" y="293" width="0.0805%" height="15" fill="rgb(249,7,27)" fg:x="695" fg:w="1"/><text x="56.2081%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.9581%" y="277" width="0.0805%" height="15" fill="rgb(232,86,5)" fg:x="695" fg:w="1"/><text x="56.2081%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9581%" y="261" width="0.0805%" height="15" fill="rgb(224,175,18)" fg:x="695" fg:w="1"/><text x="56.2081%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9581%" y="245" width="0.0805%" height="15" fill="rgb(220,129,12)" fg:x="695" fg:w="1"/><text x="56.2081%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="55.9581%" y="229" width="0.0805%" height="15" fill="rgb(210,19,36)" fg:x="695" fg:w="1"/><text x="56.2081%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.05%)</title><rect x="55.0725%" y="549" width="1.0467%" height="15" fill="rgb(219,96,14)" fg:x="684" fg:w="13"/><text x="55.3225%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="55.6361%" y="533" width="0.4831%" height="15" fill="rgb(249,106,1)" fg:x="691" fg:w="6"/><text x="55.8861%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.6361%" y="517" width="0.4831%" height="15" fill="rgb(249,155,20)" fg:x="691" fg:w="6"/><text x="55.8861%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.0386%" y="501" width="0.0805%" height="15" fill="rgb(244,168,9)" fg:x="696" fg:w="1"/><text x="56.2886%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0386%" y="485" width="0.0805%" height="15" fill="rgb(216,23,50)" fg:x="696" fg:w="1"/><text x="56.2886%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0386%" y="469" width="0.0805%" height="15" fill="rgb(224,219,20)" fg:x="696" fg:w="1"/><text x="56.2886%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="56.1192%" y="549" width="0.0805%" height="15" fill="rgb(222,156,15)" fg:x="697" fg:w="1"/><text x="56.3692%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="56.1192%" y="533" width="0.0805%" height="15" fill="rgb(231,97,17)" fg:x="697" fg:w="1"/><text x="56.3692%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="56.1192%" y="517" width="0.0805%" height="15" fill="rgb(218,70,48)" fg:x="697" fg:w="1"/><text x="56.3692%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1192%" y="501" width="0.0805%" height="15" fill="rgb(212,196,52)" fg:x="697" fg:w="1"/><text x="56.3692%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1192%" y="485" width="0.0805%" height="15" fill="rgb(243,203,18)" fg:x="697" fg:w="1"/><text x="56.3692%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1192%" y="469" width="0.0805%" height="15" fill="rgb(252,125,41)" fg:x="697" fg:w="1"/><text x="56.3692%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1192%" y="453" width="0.0805%" height="15" fill="rgb(223,180,33)" fg:x="697" fg:w="1"/><text x="56.3692%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.1192%" y="437" width="0.0805%" height="15" fill="rgb(254,159,46)" fg:x="697" fg:w="1"/><text x="56.3692%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1192%" y="421" width="0.0805%" height="15" fill="rgb(254,38,10)" fg:x="697" fg:w="1"/><text x="56.3692%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1192%" y="405" width="0.0805%" height="15" fill="rgb(208,217,32)" fg:x="697" fg:w="1"/><text x="56.3692%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1192%" y="389" width="0.0805%" height="15" fill="rgb(221,120,13)" fg:x="697" fg:w="1"/><text x="56.3692%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.1997%" y="517" width="0.0805%" height="15" fill="rgb(246,54,52)" fg:x="698" fg:w="1"/><text x="56.4497%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.61%)</title><rect x="54.7504%" y="581" width="1.6103%" height="15" fill="rgb(242,34,25)" fg:x="680" fg:w="20"/><text x="55.0004%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="54.7504%" y="565" width="1.6103%" height="15" fill="rgb(247,209,9)" fg:x="680" fg:w="20"/><text x="55.0004%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="56.1997%" y="549" width="0.1610%" height="15" fill="rgb(228,71,26)" fg:x="698" fg:w="2"/><text x="56.4497%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.1997%" y="533" width="0.1610%" height="15" fill="rgb(222,145,49)" fg:x="698" fg:w="2"/><text x="56.4497%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2802%" y="517" width="0.0805%" height="15" fill="rgb(218,121,17)" fg:x="699" fg:w="1"/><text x="56.5302%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.77%)</title><rect x="54.7504%" y="597" width="1.7713%" height="15" fill="rgb(244,50,7)" fg:x="680" fg:w="22"/><text x="55.0004%" y="607.50">&lt;..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (2 samples, 0.16%)</title><rect x="56.3607%" y="581" width="0.1610%" height="15" fill="rgb(246,229,37)" fg:x="700" fg:w="2"/><text x="56.6107%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3607%" y="565" width="0.1610%" height="15" fill="rgb(225,18,5)" fg:x="700" fg:w="2"/><text x="56.6107%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.3607%" y="549" width="0.1610%" height="15" fill="rgb(213,204,8)" fg:x="700" fg:w="2"/><text x="56.6107%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.3607%" y="533" width="0.1610%" height="15" fill="rgb(238,103,6)" fg:x="700" fg:w="2"/><text x="56.6107%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.3607%" y="517" width="0.1610%" height="15" fill="rgb(222,25,35)" fg:x="700" fg:w="2"/><text x="56.6107%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.3607%" y="501" width="0.1610%" height="15" fill="rgb(213,203,35)" fg:x="700" fg:w="2"/><text x="56.6107%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.3607%" y="485" width="0.1610%" height="15" fill="rgb(221,79,53)" fg:x="700" fg:w="2"/><text x="56.6107%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.3607%" y="469" width="0.1610%" height="15" fill="rgb(243,200,35)" fg:x="700" fg:w="2"/><text x="56.6107%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.3607%" y="453" width="0.1610%" height="15" fill="rgb(248,60,25)" fg:x="700" fg:w="2"/><text x="56.6107%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.3607%" y="437" width="0.1610%" height="15" fill="rgb(227,53,46)" fg:x="700" fg:w="2"/><text x="56.6107%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.3607%" y="421" width="0.1610%" height="15" fill="rgb(216,120,32)" fg:x="700" fg:w="2"/><text x="56.6107%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.3607%" y="405" width="0.1610%" height="15" fill="rgb(220,134,1)" fg:x="700" fg:w="2"/><text x="56.6107%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.3607%" y="389" width="0.1610%" height="15" fill="rgb(237,168,5)" fg:x="700" fg:w="2"/><text x="56.6107%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5217%" y="597" width="0.0805%" height="15" fill="rgb(231,100,33)" fg:x="702" fg:w="1"/><text x="56.7717%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5217%" y="581" width="0.0805%" height="15" fill="rgb(236,177,47)" fg:x="702" fg:w="1"/><text x="56.7717%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5217%" y="565" width="0.0805%" height="15" fill="rgb(235,7,49)" fg:x="702" fg:w="1"/><text x="56.7717%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6023%" y="597" width="0.0805%" height="15" fill="rgb(232,119,22)" fg:x="703" fg:w="1"/><text x="56.8523%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.8438%" y="533" width="0.0805%" height="15" fill="rgb(254,73,53)" fg:x="706" fg:w="1"/><text x="57.0938%" y="543.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (35 samples, 2.82%)</title><rect x="54.1868%" y="661" width="2.8180%" height="15" fill="rgb(251,35,20)" fg:x="673" fg:w="35"/><text x="54.4368%" y="671.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (35 samples, 2.82%)</title><rect x="54.1868%" y="645" width="2.8180%" height="15" fill="rgb(241,119,20)" fg:x="673" fg:w="35"/><text x="54.4368%" y="655.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (30 samples, 2.42%)</title><rect x="54.5894%" y="629" width="2.4155%" height="15" fill="rgb(207,102,14)" fg:x="678" fg:w="30"/><text x="54.8394%" y="639.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (30 samples, 2.42%)</title><rect x="54.5894%" y="613" width="2.4155%" height="15" fill="rgb(248,201,50)" fg:x="678" fg:w="30"/><text x="54.8394%" y="623.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="56.6828%" y="597" width="0.3221%" height="15" fill="rgb(222,185,44)" fg:x="704" fg:w="4"/><text x="56.9328%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="56.6828%" y="581" width="0.3221%" height="15" fill="rgb(218,107,18)" fg:x="704" fg:w="4"/><text x="56.9328%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.7633%" y="565" width="0.2415%" height="15" fill="rgb(237,177,39)" fg:x="705" fg:w="3"/><text x="57.0133%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.7633%" y="549" width="0.2415%" height="15" fill="rgb(246,69,6)" fg:x="705" fg:w="3"/><text x="57.0133%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="56.9243%" y="533" width="0.0805%" height="15" fill="rgb(234,208,37)" fg:x="707" fg:w="1"/><text x="57.1743%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="57.0853%" y="517" width="0.1610%" height="15" fill="rgb(225,4,6)" fg:x="709" fg:w="2"/><text x="57.3353%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="57.0853%" y="501" width="0.1610%" height="15" fill="rgb(233,45,0)" fg:x="709" fg:w="2"/><text x="57.3353%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.0853%" y="485" width="0.1610%" height="15" fill="rgb(226,136,5)" fg:x="709" fg:w="2"/><text x="57.3353%" y="495.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="57.2464%" y="517" width="0.0805%" height="15" fill="rgb(211,91,47)" fg:x="711" fg:w="1"/><text x="57.4964%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2464%" y="501" width="0.0805%" height="15" fill="rgb(242,88,51)" fg:x="711" fg:w="1"/><text x="57.4964%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2464%" y="485" width="0.0805%" height="15" fill="rgb(230,91,28)" fg:x="711" fg:w="1"/><text x="57.4964%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2464%" y="469" width="0.0805%" height="15" fill="rgb(254,186,29)" fg:x="711" fg:w="1"/><text x="57.4964%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2464%" y="453" width="0.0805%" height="15" fill="rgb(238,6,4)" fg:x="711" fg:w="1"/><text x="57.4964%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2464%" y="437" width="0.0805%" height="15" fill="rgb(221,151,16)" fg:x="711" fg:w="1"/><text x="57.4964%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2464%" y="421" width="0.0805%" height="15" fill="rgb(251,143,52)" fg:x="711" fg:w="1"/><text x="57.4964%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2464%" y="405" width="0.0805%" height="15" fill="rgb(206,90,15)" fg:x="711" fg:w="1"/><text x="57.4964%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2464%" y="389" width="0.0805%" height="15" fill="rgb(218,35,8)" fg:x="711" fg:w="1"/><text x="57.4964%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.2464%" y="373" width="0.0805%" height="15" fill="rgb(239,215,6)" fg:x="711" fg:w="1"/><text x="57.4964%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.2464%" y="357" width="0.0805%" height="15" fill="rgb(245,116,39)" fg:x="711" fg:w="1"/><text x="57.4964%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.2464%" y="341" width="0.0805%" height="15" fill="rgb(242,65,28)" fg:x="711" fg:w="1"/><text x="57.4964%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.2464%" y="325" width="0.0805%" height="15" fill="rgb(252,132,53)" fg:x="711" fg:w="1"/><text x="57.4964%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2464%" y="309" width="0.0805%" height="15" fill="rgb(224,159,50)" fg:x="711" fg:w="1"/><text x="57.4964%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="57.4879%" y="485" width="0.0805%" height="15" fill="rgb(224,93,4)" fg:x="714" fg:w="1"/><text x="57.7379%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="57.4879%" y="469" width="0.0805%" height="15" fill="rgb(208,81,34)" fg:x="714" fg:w="1"/><text x="57.7379%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.4879%" y="453" width="0.0805%" height="15" fill="rgb(233,92,54)" fg:x="714" fg:w="1"/><text x="57.7379%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.4879%" y="437" width="0.0805%" height="15" fill="rgb(237,21,14)" fg:x="714" fg:w="1"/><text x="57.7379%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.4879%" y="421" width="0.0805%" height="15" fill="rgb(249,128,51)" fg:x="714" fg:w="1"/><text x="57.7379%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.5684%" y="469" width="0.0805%" height="15" fill="rgb(223,129,24)" fg:x="715" fg:w="1"/><text x="57.8184%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.7295%" y="405" width="0.2415%" height="15" fill="rgb(231,168,25)" fg:x="717" fg:w="3"/><text x="57.9795%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.7295%" y="389" width="0.2415%" height="15" fill="rgb(224,39,20)" fg:x="717" fg:w="3"/><text x="57.9795%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.6490%" y="437" width="0.4026%" height="15" fill="rgb(225,152,53)" fg:x="716" fg:w="5"/><text x="57.8990%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.7295%" y="421" width="0.3221%" height="15" fill="rgb(252,17,24)" fg:x="717" fg:w="4"/><text x="57.9795%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9710%" y="405" width="0.0805%" height="15" fill="rgb(250,114,30)" fg:x="720" fg:w="1"/><text x="58.2210%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9710%" y="389" width="0.0805%" height="15" fill="rgb(229,5,4)" fg:x="720" fg:w="1"/><text x="58.2210%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9710%" y="373" width="0.0805%" height="15" fill="rgb(225,176,49)" fg:x="720" fg:w="1"/><text x="58.2210%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9710%" y="357" width="0.0805%" height="15" fill="rgb(224,221,49)" fg:x="720" fg:w="1"/><text x="58.2210%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9710%" y="341" width="0.0805%" height="15" fill="rgb(253,169,27)" fg:x="720" fg:w="1"/><text x="58.2210%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9710%" y="325" width="0.0805%" height="15" fill="rgb(211,206,16)" fg:x="720" fg:w="1"/><text x="58.2210%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9710%" y="309" width="0.0805%" height="15" fill="rgb(244,87,35)" fg:x="720" fg:w="1"/><text x="58.2210%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.0515%" y="437" width="0.0805%" height="15" fill="rgb(246,28,10)" fg:x="721" fg:w="1"/><text x="58.3015%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1320%" y="389" width="0.0805%" height="15" fill="rgb(229,12,44)" fg:x="722" fg:w="1"/><text x="58.3820%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1320%" y="373" width="0.0805%" height="15" fill="rgb(210,145,37)" fg:x="722" fg:w="1"/><text x="58.3820%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.1320%" y="437" width="0.1610%" height="15" fill="rgb(227,112,52)" fg:x="722" fg:w="2"/><text x="58.3820%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="58.1320%" y="421" width="0.1610%" height="15" fill="rgb(238,155,34)" fg:x="722" fg:w="2"/><text x="58.3820%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.1320%" y="405" width="0.1610%" height="15" fill="rgb(239,226,36)" fg:x="722" fg:w="2"/><text x="58.3820%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.2126%" y="389" width="0.0805%" height="15" fill="rgb(230,16,23)" fg:x="723" fg:w="1"/><text x="58.4626%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.2126%" y="373" width="0.0805%" height="15" fill="rgb(236,171,36)" fg:x="723" fg:w="1"/><text x="58.4626%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.2126%" y="357" width="0.0805%" height="15" fill="rgb(221,22,14)" fg:x="723" fg:w="1"/><text x="58.4626%" y="367.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="58.2931%" y="437" width="0.0805%" height="15" fill="rgb(242,43,11)" fg:x="724" fg:w="1"/><text x="58.5431%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.3736%" y="341" width="0.0805%" height="15" fill="rgb(232,69,23)" fg:x="725" fg:w="1"/><text x="58.6236%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4541%" y="341" width="0.0805%" height="15" fill="rgb(216,180,54)" fg:x="726" fg:w="1"/><text x="58.7041%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.5346%" y="341" width="0.1610%" height="15" fill="rgb(216,5,24)" fg:x="727" fg:w="2"/><text x="58.7846%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8567%" y="309" width="0.0805%" height="15" fill="rgb(225,89,9)" fg:x="731" fg:w="1"/><text x="59.1067%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="58.9372%" y="309" width="0.2415%" height="15" fill="rgb(243,75,33)" fg:x="732" fg:w="3"/><text x="59.1872%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (22 samples, 1.77%)</title><rect x="57.5684%" y="485" width="1.7713%" height="15" fill="rgb(247,141,45)" fg:x="715" fg:w="22"/><text x="57.8184%" y="495.50">&lt;..</text></g><g><title>kernel::model::props::load_props (21 samples, 1.69%)</title><rect x="57.6490%" y="469" width="1.6908%" height="15" fill="rgb(232,177,36)" fg:x="716" fg:w="21"/><text x="57.8990%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (21 samples, 1.69%)</title><rect x="57.6490%" y="453" width="1.6908%" height="15" fill="rgb(219,125,36)" fg:x="716" fg:w="21"/><text x="57.8990%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="58.3736%" y="437" width="0.9662%" height="15" fill="rgb(227,94,9)" fg:x="725" fg:w="12"/><text x="58.6236%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="58.3736%" y="421" width="0.9662%" height="15" fill="rgb(240,34,52)" fg:x="725" fg:w="12"/><text x="58.6236%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.97%)</title><rect x="58.3736%" y="405" width="0.9662%" height="15" fill="rgb(216,45,12)" fg:x="725" fg:w="12"/><text x="58.6236%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="58.3736%" y="389" width="0.9662%" height="15" fill="rgb(246,21,19)" fg:x="725" fg:w="12"/><text x="58.6236%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="58.3736%" y="373" width="0.9662%" height="15" fill="rgb(213,98,42)" fg:x="725" fg:w="12"/><text x="58.6236%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="58.3736%" y="357" width="0.9662%" height="15" fill="rgb(250,136,47)" fg:x="725" fg:w="12"/><text x="58.6236%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="58.6957%" y="341" width="0.6441%" height="15" fill="rgb(251,124,27)" fg:x="729" fg:w="8"/><text x="58.9457%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="58.6957%" y="325" width="0.6441%" height="15" fill="rgb(229,180,14)" fg:x="729" fg:w="8"/><text x="58.9457%" y="335.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (2 samples, 0.16%)</title><rect x="59.1787%" y="309" width="0.1610%" height="15" fill="rgb(245,216,25)" fg:x="735" fg:w="2"/><text x="59.4287%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.3398%" y="469" width="0.0805%" height="15" fill="rgb(251,43,5)" fg:x="737" fg:w="1"/><text x="59.5898%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9034%" y="373" width="0.1610%" height="15" fill="rgb(250,128,24)" fg:x="744" fg:w="2"/><text x="60.1534%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9839%" y="357" width="0.0805%" height="15" fill="rgb(217,117,27)" fg:x="745" fg:w="1"/><text x="60.2339%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0644%" y="373" width="0.0805%" height="15" fill="rgb(245,147,4)" fg:x="746" fg:w="1"/><text x="60.3144%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0644%" y="357" width="0.0805%" height="15" fill="rgb(242,201,35)" fg:x="746" fg:w="1"/><text x="60.3144%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0644%" y="341" width="0.0805%" height="15" fill="rgb(218,181,1)" fg:x="746" fg:w="1"/><text x="60.3144%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0644%" y="325" width="0.0805%" height="15" fill="rgb(222,6,29)" fg:x="746" fg:w="1"/><text x="60.3144%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0644%" y="309" width="0.0805%" height="15" fill="rgb(208,186,3)" fg:x="746" fg:w="1"/><text x="60.3144%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.9034%" y="389" width="0.3221%" height="15" fill="rgb(216,36,26)" fg:x="744" fg:w="4"/><text x="60.1534%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1449%" y="373" width="0.0805%" height="15" fill="rgb(248,201,23)" fg:x="747" fg:w="1"/><text x="60.3949%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="59.8229%" y="405" width="0.4831%" height="15" fill="rgb(251,170,31)" fg:x="743" fg:w="6"/><text x="60.0729%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2254%" y="389" width="0.0805%" height="15" fill="rgb(207,110,25)" fg:x="748" fg:w="1"/><text x="60.4754%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.89%)</title><rect x="59.5008%" y="437" width="0.8857%" height="15" fill="rgb(250,54,15)" fg:x="739" fg:w="11"/><text x="59.7508%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="59.5813%" y="421" width="0.8052%" height="15" fill="rgb(227,68,33)" fg:x="740" fg:w="10"/><text x="59.8313%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3060%" y="405" width="0.0805%" height="15" fill="rgb(238,34,41)" fg:x="749" fg:w="1"/><text x="60.5560%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4670%" y="357" width="0.0805%" height="15" fill="rgb(220,11,15)" fg:x="751" fg:w="1"/><text x="60.7170%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.5475%" y="357" width="0.0805%" height="15" fill="rgb(246,111,35)" fg:x="752" fg:w="1"/><text x="60.7975%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="60.3865%" y="437" width="0.3221%" height="15" fill="rgb(209,88,53)" fg:x="750" fg:w="4"/><text x="60.6365%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="60.3865%" y="421" width="0.3221%" height="15" fill="rgb(231,185,47)" fg:x="750" fg:w="4"/><text x="60.6365%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="60.3865%" y="405" width="0.3221%" height="15" fill="rgb(233,154,1)" fg:x="750" fg:w="4"/><text x="60.6365%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="60.4670%" y="389" width="0.2415%" height="15" fill="rgb(225,15,46)" fg:x="751" fg:w="3"/><text x="60.7170%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="60.4670%" y="373" width="0.2415%" height="15" fill="rgb(211,135,41)" fg:x="751" fg:w="3"/><text x="60.7170%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.6280%" y="357" width="0.0805%" height="15" fill="rgb(208,54,0)" fg:x="753" fg:w="1"/><text x="60.8780%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.6280%" y="341" width="0.0805%" height="15" fill="rgb(244,136,14)" fg:x="753" fg:w="1"/><text x="60.8780%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8696%" y="341" width="0.0805%" height="15" fill="rgb(241,56,14)" fg:x="756" fg:w="1"/><text x="61.1196%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9501%" y="341" width="0.0805%" height="15" fill="rgb(205,80,24)" fg:x="757" fg:w="1"/><text x="61.2001%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (47 samples, 3.78%)</title><rect x="57.4074%" y="501" width="3.7842%" height="15" fill="rgb(220,57,4)" fg:x="713" fg:w="47"/><text x="57.6574%" y="511.50">&lt;&amp;ke..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (23 samples, 1.85%)</title><rect x="59.3398%" y="485" width="1.8519%" height="15" fill="rgb(226,193,50)" fg:x="737" fg:w="23"/><text x="59.5898%" y="495.50">&lt;..</text></g><g><title>kernel::model::props::load_props (22 samples, 1.77%)</title><rect x="59.4203%" y="469" width="1.7713%" height="15" fill="rgb(231,168,22)" fg:x="738" fg:w="22"/><text x="59.6703%" y="479.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.77%)</title><rect x="59.4203%" y="453" width="1.7713%" height="15" fill="rgb(254,215,14)" fg:x="738" fg:w="22"/><text x="59.6703%" y="463.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="60.7085%" y="437" width="0.4831%" height="15" fill="rgb(211,115,16)" fg:x="754" fg:w="6"/><text x="60.9585%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="60.7085%" y="421" width="0.4831%" height="15" fill="rgb(236,210,16)" fg:x="754" fg:w="6"/><text x="60.9585%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="60.7890%" y="405" width="0.4026%" height="15" fill="rgb(221,94,12)" fg:x="755" fg:w="5"/><text x="61.0390%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="60.7890%" y="389" width="0.4026%" height="15" fill="rgb(235,218,49)" fg:x="755" fg:w="5"/><text x="61.0390%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="60.8696%" y="373" width="0.3221%" height="15" fill="rgb(217,114,14)" fg:x="756" fg:w="4"/><text x="61.1196%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.8696%" y="357" width="0.3221%" height="15" fill="rgb(216,145,22)" fg:x="756" fg:w="4"/><text x="61.1196%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.0306%" y="341" width="0.1610%" height="15" fill="rgb(217,112,39)" fg:x="758" fg:w="2"/><text x="61.2806%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.0306%" y="325" width="0.1610%" height="15" fill="rgb(225,85,32)" fg:x="758" fg:w="2"/><text x="61.2806%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1111%" y="309" width="0.0805%" height="15" fill="rgb(245,209,47)" fg:x="759" fg:w="1"/><text x="61.3611%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.1916%" y="501" width="0.0805%" height="15" fill="rgb(218,220,15)" fg:x="760" fg:w="1"/><text x="61.4416%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="61.2721%" y="469" width="0.0805%" height="15" fill="rgb(222,202,31)" fg:x="761" fg:w="1"/><text x="61.5221%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="61.2721%" y="501" width="0.3221%" height="15" fill="rgb(243,203,4)" fg:x="761" fg:w="4"/><text x="61.5221%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="61.2721%" y="485" width="0.3221%" height="15" fill="rgb(237,92,17)" fg:x="761" fg:w="4"/><text x="61.5221%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="61.3527%" y="469" width="0.2415%" height="15" fill="rgb(231,119,7)" fg:x="762" fg:w="3"/><text x="61.6027%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="61.4332%" y="453" width="0.1610%" height="15" fill="rgb(237,82,41)" fg:x="763" fg:w="2"/><text x="61.6832%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="437" width="0.1610%" height="15" fill="rgb(226,81,48)" fg:x="763" fg:w="2"/><text x="61.6832%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="61.4332%" y="421" width="0.1610%" height="15" fill="rgb(234,70,51)" fg:x="763" fg:w="2"/><text x="61.6832%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="405" width="0.1610%" height="15" fill="rgb(251,86,4)" fg:x="763" fg:w="2"/><text x="61.6832%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="389" width="0.1610%" height="15" fill="rgb(244,144,28)" fg:x="763" fg:w="2"/><text x="61.6832%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="373" width="0.1610%" height="15" fill="rgb(232,161,39)" fg:x="763" fg:w="2"/><text x="61.6832%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="61.4332%" y="357" width="0.1610%" height="15" fill="rgb(247,34,51)" fg:x="763" fg:w="2"/><text x="61.6832%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="341" width="0.1610%" height="15" fill="rgb(225,132,2)" fg:x="763" fg:w="2"/><text x="61.6832%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="325" width="0.1610%" height="15" fill="rgb(209,159,44)" fg:x="763" fg:w="2"/><text x="61.6832%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="309" width="0.1610%" height="15" fill="rgb(251,214,1)" fg:x="763" fg:w="2"/><text x="61.6832%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="61.4332%" y="293" width="0.1610%" height="15" fill="rgb(247,84,47)" fg:x="763" fg:w="2"/><text x="61.6832%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="61.4332%" y="277" width="0.1610%" height="15" fill="rgb(240,111,43)" fg:x="763" fg:w="2"/><text x="61.6832%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.4332%" y="261" width="0.1610%" height="15" fill="rgb(215,214,35)" fg:x="763" fg:w="2"/><text x="61.6832%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="61.4332%" y="245" width="0.1610%" height="15" fill="rgb(248,207,23)" fg:x="763" fg:w="2"/><text x="61.6832%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="61.4332%" y="229" width="0.1610%" height="15" fill="rgb(214,186,4)" fg:x="763" fg:w="2"/><text x="61.6832%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="61.4332%" y="213" width="0.1610%" height="15" fill="rgb(220,133,22)" fg:x="763" fg:w="2"/><text x="61.6832%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="61.4332%" y="197" width="0.1610%" height="15" fill="rgb(239,134,19)" fg:x="763" fg:w="2"/><text x="61.6832%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="61.4332%" y="181" width="0.1610%" height="15" fill="rgb(250,140,9)" fg:x="763" fg:w="2"/><text x="61.6832%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.4332%" y="165" width="0.1610%" height="15" fill="rgb(225,59,14)" fg:x="763" fg:w="2"/><text x="61.6832%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="61.4332%" y="149" width="0.1610%" height="15" fill="rgb(214,152,51)" fg:x="763" fg:w="2"/><text x="61.6832%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="61.4332%" y="133" width="0.1610%" height="15" fill="rgb(251,227,43)" fg:x="763" fg:w="2"/><text x="61.6832%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="61.4332%" y="117" width="0.1610%" height="15" fill="rgb(241,96,17)" fg:x="763" fg:w="2"/><text x="61.6832%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="61.4332%" y="101" width="0.1610%" height="15" fill="rgb(234,198,43)" fg:x="763" fg:w="2"/><text x="61.6832%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="61.4332%" y="85" width="0.1610%" height="15" fill="rgb(220,108,29)" fg:x="763" fg:w="2"/><text x="61.6832%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="61.4332%" y="69" width="0.1610%" height="15" fill="rgb(226,163,33)" fg:x="763" fg:w="2"/><text x="61.6832%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="61.4332%" y="53" width="0.1610%" height="15" fill="rgb(205,194,45)" fg:x="763" fg:w="2"/><text x="61.6832%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="61.4332%" y="37" width="0.1610%" height="15" fill="rgb(206,143,44)" fg:x="763" fg:w="2"/><text x="61.6832%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5942%" y="501" width="0.0805%" height="15" fill="rgb(236,136,36)" fg:x="765" fg:w="1"/><text x="61.8442%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="61.6747%" y="501" width="0.1610%" height="15" fill="rgb(249,172,42)" fg:x="766" fg:w="2"/><text x="61.9247%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="61.6747%" y="485" width="0.1610%" height="15" fill="rgb(216,139,23)" fg:x="766" fg:w="2"/><text x="61.9247%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.6747%" y="469" width="0.1610%" height="15" fill="rgb(207,166,20)" fg:x="766" fg:w="2"/><text x="61.9247%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="61.9163%" y="485" width="0.0805%" height="15" fill="rgb(210,209,22)" fg:x="769" fg:w="1"/><text x="62.1663%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.2383%" y="437" width="0.0805%" height="15" fill="rgb(232,118,20)" fg:x="773" fg:w="1"/><text x="62.4883%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="62.1578%" y="469" width="0.3221%" height="15" fill="rgb(238,113,42)" fg:x="772" fg:w="4"/><text x="62.4078%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.2383%" y="453" width="0.2415%" height="15" fill="rgb(231,42,5)" fg:x="773" fg:w="3"/><text x="62.4883%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.3188%" y="437" width="0.1610%" height="15" fill="rgb(243,166,24)" fg:x="774" fg:w="2"/><text x="62.5688%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3188%" y="421" width="0.1610%" height="15" fill="rgb(237,226,12)" fg:x="774" fg:w="2"/><text x="62.5688%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.3188%" y="405" width="0.1610%" height="15" fill="rgb(229,133,24)" fg:x="774" fg:w="2"/><text x="62.5688%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.3188%" y="389" width="0.1610%" height="15" fill="rgb(238,33,43)" fg:x="774" fg:w="2"/><text x="62.5688%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.3188%" y="373" width="0.1610%" height="15" fill="rgb(227,59,38)" fg:x="774" fg:w="2"/><text x="62.5688%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.3188%" y="357" width="0.1610%" height="15" fill="rgb(230,97,0)" fg:x="774" fg:w="2"/><text x="62.5688%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.3188%" y="341" width="0.1610%" height="15" fill="rgb(250,173,50)" fg:x="774" fg:w="2"/><text x="62.5688%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.3188%" y="325" width="0.1610%" height="15" fill="rgb(240,15,50)" fg:x="774" fg:w="2"/><text x="62.5688%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.3188%" y="309" width="0.1610%" height="15" fill="rgb(221,93,22)" fg:x="774" fg:w="2"/><text x="62.5688%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.3188%" y="293" width="0.1610%" height="15" fill="rgb(245,180,53)" fg:x="774" fg:w="2"/><text x="62.5688%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.3188%" y="277" width="0.1610%" height="15" fill="rgb(231,88,51)" fg:x="774" fg:w="2"/><text x="62.5688%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.3188%" y="261" width="0.1610%" height="15" fill="rgb(240,58,21)" fg:x="774" fg:w="2"/><text x="62.5688%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.3188%" y="245" width="0.1610%" height="15" fill="rgb(237,21,10)" fg:x="774" fg:w="2"/><text x="62.5688%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="62.3188%" y="229" width="0.1610%" height="15" fill="rgb(218,43,11)" fg:x="774" fg:w="2"/><text x="62.5688%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5604%" y="357" width="0.0805%" height="15" fill="rgb(218,221,29)" fg:x="777" fg:w="1"/><text x="62.8104%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.6409%" y="229" width="0.1610%" height="15" fill="rgb(214,118,42)" fg:x="778" fg:w="2"/><text x="62.8909%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7214%" y="213" width="0.0805%" height="15" fill="rgb(251,200,26)" fg:x="779" fg:w="1"/><text x="62.9714%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7214%" y="197" width="0.0805%" height="15" fill="rgb(237,101,39)" fg:x="779" fg:w="1"/><text x="62.9714%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.6409%" y="277" width="0.2415%" height="15" fill="rgb(251,117,11)" fg:x="778" fg:w="3"/><text x="62.8909%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.6409%" y="261" width="0.2415%" height="15" fill="rgb(216,223,23)" fg:x="778" fg:w="3"/><text x="62.8909%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="62.6409%" y="245" width="0.2415%" height="15" fill="rgb(251,54,12)" fg:x="778" fg:w="3"/><text x="62.8909%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8019%" y="229" width="0.0805%" height="15" fill="rgb(254,176,54)" fg:x="780" fg:w="1"/><text x="63.0519%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9630%" y="149" width="0.0805%" height="15" fill="rgb(210,32,8)" fg:x="782" fg:w="1"/><text x="63.2130%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="62.6409%" y="325" width="0.5636%" height="15" fill="rgb(235,52,38)" fg:x="778" fg:w="7"/><text x="62.8909%" y="335.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="62.6409%" y="309" width="0.5636%" height="15" fill="rgb(231,4,44)" fg:x="778" fg:w="7"/><text x="62.8909%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="62.6409%" y="293" width="0.5636%" height="15" fill="rgb(249,2,32)" fg:x="778" fg:w="7"/><text x="62.8909%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.8824%" y="277" width="0.3221%" height="15" fill="rgb(224,65,26)" fg:x="781" fg:w="4"/><text x="63.1324%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.8824%" y="261" width="0.3221%" height="15" fill="rgb(250,73,40)" fg:x="781" fg:w="4"/><text x="63.1324%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.8824%" y="245" width="0.3221%" height="15" fill="rgb(253,177,16)" fg:x="781" fg:w="4"/><text x="63.1324%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.8824%" y="229" width="0.3221%" height="15" fill="rgb(217,32,34)" fg:x="781" fg:w="4"/><text x="63.1324%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="62.8824%" y="213" width="0.3221%" height="15" fill="rgb(212,7,10)" fg:x="781" fg:w="4"/><text x="63.1324%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.8824%" y="197" width="0.3221%" height="15" fill="rgb(245,89,8)" fg:x="781" fg:w="4"/><text x="63.1324%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.8824%" y="181" width="0.3221%" height="15" fill="rgb(237,16,53)" fg:x="781" fg:w="4"/><text x="63.1324%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.8824%" y="165" width="0.3221%" height="15" fill="rgb(250,204,30)" fg:x="781" fg:w="4"/><text x="63.1324%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.0435%" y="149" width="0.1610%" height="15" fill="rgb(208,77,27)" fg:x="783" fg:w="2"/><text x="63.2935%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1240%" y="133" width="0.0805%" height="15" fill="rgb(250,204,28)" fg:x="784" fg:w="1"/><text x="63.3740%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.1240%" y="117" width="0.0805%" height="15" fill="rgb(244,63,21)" fg:x="784" fg:w="1"/><text x="63.3740%" y="127.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.64%)</title><rect x="62.6409%" y="357" width="0.6441%" height="15" fill="rgb(236,85,44)" fg:x="778" fg:w="8"/><text x="62.8909%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="62.6409%" y="341" width="0.6441%" height="15" fill="rgb(215,98,4)" fg:x="778" fg:w="8"/><text x="62.8909%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="63.2045%" y="325" width="0.0805%" height="15" fill="rgb(235,38,11)" fg:x="785" fg:w="1"/><text x="63.4545%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2045%" y="309" width="0.0805%" height="15" fill="rgb(254,186,25)" fg:x="785" fg:w="1"/><text x="63.4545%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2045%" y="293" width="0.0805%" height="15" fill="rgb(225,55,31)" fg:x="785" fg:w="1"/><text x="63.4545%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2045%" y="277" width="0.0805%" height="15" fill="rgb(211,15,21)" fg:x="785" fg:w="1"/><text x="63.4545%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2045%" y="261" width="0.0805%" height="15" fill="rgb(215,187,41)" fg:x="785" fg:w="1"/><text x="63.4545%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2045%" y="245" width="0.0805%" height="15" fill="rgb(248,69,32)" fg:x="785" fg:w="1"/><text x="63.4545%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2045%" y="229" width="0.0805%" height="15" fill="rgb(252,102,52)" fg:x="785" fg:w="1"/><text x="63.4545%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2045%" y="213" width="0.0805%" height="15" fill="rgb(253,140,32)" fg:x="785" fg:w="1"/><text x="63.4545%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2045%" y="197" width="0.0805%" height="15" fill="rgb(216,56,42)" fg:x="785" fg:w="1"/><text x="63.4545%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2045%" y="181" width="0.0805%" height="15" fill="rgb(216,184,14)" fg:x="785" fg:w="1"/><text x="63.4545%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2045%" y="165" width="0.0805%" height="15" fill="rgb(237,187,27)" fg:x="785" fg:w="1"/><text x="63.4545%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2045%" y="149" width="0.0805%" height="15" fill="rgb(219,65,3)" fg:x="785" fg:w="1"/><text x="63.4545%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="63.3655%" y="245" width="0.1610%" height="15" fill="rgb(245,83,25)" fg:x="787" fg:w="2"/><text x="63.6155%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="63.3655%" y="261" width="0.2415%" height="15" fill="rgb(214,205,45)" fg:x="787" fg:w="3"/><text x="63.6155%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5266%" y="245" width="0.0805%" height="15" fill="rgb(241,20,18)" fg:x="789" fg:w="1"/><text x="63.7766%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="63.6071%" y="229" width="0.1610%" height="15" fill="rgb(232,163,23)" fg:x="790" fg:w="2"/><text x="63.8571%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="63.6071%" y="213" width="0.1610%" height="15" fill="rgb(214,5,46)" fg:x="790" fg:w="2"/><text x="63.8571%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7681%" y="197" width="0.0805%" height="15" fill="rgb(229,78,17)" fg:x="792" fg:w="1"/><text x="64.0181%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.9291%" y="133" width="0.0805%" height="15" fill="rgb(248,89,10)" fg:x="794" fg:w="1"/><text x="64.1791%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9291%" y="117" width="0.0805%" height="15" fill="rgb(248,54,15)" fg:x="794" fg:w="1"/><text x="64.1791%" y="127.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="63.2850%" y="341" width="0.8857%" height="15" fill="rgb(223,116,6)" fg:x="786" fg:w="11"/><text x="63.5350%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.89%)</title><rect x="63.2850%" y="325" width="0.8857%" height="15" fill="rgb(205,125,38)" fg:x="786" fg:w="11"/><text x="63.5350%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="63.3655%" y="309" width="0.8052%" height="15" fill="rgb(251,78,38)" fg:x="787" fg:w="10"/><text x="63.6155%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="63.3655%" y="293" width="0.8052%" height="15" fill="rgb(253,78,28)" fg:x="787" fg:w="10"/><text x="63.6155%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="63.3655%" y="277" width="0.8052%" height="15" fill="rgb(209,120,3)" fg:x="787" fg:w="10"/><text x="63.6155%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="63.6071%" y="261" width="0.5636%" height="15" fill="rgb(238,229,9)" fg:x="790" fg:w="7"/><text x="63.8571%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="63.6071%" y="245" width="0.5636%" height="15" fill="rgb(253,159,18)" fg:x="790" fg:w="7"/><text x="63.8571%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="63.7681%" y="229" width="0.4026%" height="15" fill="rgb(244,42,34)" fg:x="792" fg:w="5"/><text x="64.0181%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.7681%" y="213" width="0.4026%" height="15" fill="rgb(224,8,7)" fg:x="792" fg:w="5"/><text x="64.0181%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="63.8486%" y="197" width="0.3221%" height="15" fill="rgb(210,201,45)" fg:x="793" fg:w="4"/><text x="64.0986%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.9291%" y="181" width="0.2415%" height="15" fill="rgb(252,185,21)" fg:x="794" fg:w="3"/><text x="64.1791%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="63.9291%" y="165" width="0.2415%" height="15" fill="rgb(223,131,1)" fg:x="794" fg:w="3"/><text x="64.1791%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.9291%" y="149" width="0.2415%" height="15" fill="rgb(245,141,16)" fg:x="794" fg:w="3"/><text x="64.1791%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.0097%" y="133" width="0.1610%" height="15" fill="rgb(229,55,45)" fg:x="795" fg:w="2"/><text x="64.2597%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.0097%" y="117" width="0.1610%" height="15" fill="rgb(208,92,15)" fg:x="795" fg:w="2"/><text x="64.2597%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.1707%" y="261" width="0.1610%" height="15" fill="rgb(234,185,47)" fg:x="797" fg:w="2"/><text x="64.4207%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.1707%" y="245" width="0.1610%" height="15" fill="rgb(253,104,50)" fg:x="797" fg:w="2"/><text x="64.4207%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.2512%" y="229" width="0.0805%" height="15" fill="rgb(205,70,7)" fg:x="798" fg:w="1"/><text x="64.5012%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.2512%" y="213" width="0.0805%" height="15" fill="rgb(240,178,43)" fg:x="798" fg:w="1"/><text x="64.5012%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.2512%" y="197" width="0.0805%" height="15" fill="rgb(214,112,2)" fg:x="798" fg:w="1"/><text x="64.5012%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2512%" y="181" width="0.0805%" height="15" fill="rgb(206,46,17)" fg:x="798" fg:w="1"/><text x="64.5012%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6538%" y="85" width="0.0805%" height="15" fill="rgb(225,220,16)" fg:x="803" fg:w="1"/><text x="64.9038%" y="95.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6538%" y="69" width="0.0805%" height="15" fill="rgb(238,65,40)" fg:x="803" fg:w="1"/><text x="64.9038%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6538%" y="53" width="0.0805%" height="15" fill="rgb(230,151,21)" fg:x="803" fg:w="1"/><text x="64.9038%" y="63.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="64.1707%" y="309" width="0.6441%" height="15" fill="rgb(218,58,49)" fg:x="797" fg:w="8"/><text x="64.4207%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.1707%" y="293" width="0.6441%" height="15" fill="rgb(219,179,14)" fg:x="797" fg:w="8"/><text x="64.4207%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="64.1707%" y="277" width="0.6441%" height="15" fill="rgb(223,72,1)" fg:x="797" fg:w="8"/><text x="64.4207%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="64.3317%" y="261" width="0.4831%" height="15" fill="rgb(238,126,10)" fg:x="799" fg:w="6"/><text x="64.5817%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="64.4122%" y="245" width="0.4026%" height="15" fill="rgb(224,206,38)" fg:x="800" fg:w="5"/><text x="64.6622%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="64.4122%" y="229" width="0.4026%" height="15" fill="rgb(212,201,54)" fg:x="800" fg:w="5"/><text x="64.6622%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="64.4122%" y="213" width="0.4026%" height="15" fill="rgb(218,154,48)" fg:x="800" fg:w="5"/><text x="64.6622%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="64.4122%" y="197" width="0.4026%" height="15" fill="rgb(232,93,24)" fg:x="800" fg:w="5"/><text x="64.6622%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.5733%" y="181" width="0.2415%" height="15" fill="rgb(245,30,21)" fg:x="802" fg:w="3"/><text x="64.8233%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.5733%" y="165" width="0.2415%" height="15" fill="rgb(242,148,29)" fg:x="802" fg:w="3"/><text x="64.8233%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.5733%" y="149" width="0.2415%" height="15" fill="rgb(244,153,54)" fg:x="802" fg:w="3"/><text x="64.8233%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="64.5733%" y="133" width="0.2415%" height="15" fill="rgb(252,87,22)" fg:x="802" fg:w="3"/><text x="64.8233%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.5733%" y="117" width="0.2415%" height="15" fill="rgb(210,51,29)" fg:x="802" fg:w="3"/><text x="64.8233%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.5733%" y="101" width="0.2415%" height="15" fill="rgb(242,136,47)" fg:x="802" fg:w="3"/><text x="64.8233%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.7343%" y="85" width="0.0805%" height="15" fill="rgb(238,68,4)" fg:x="804" fg:w="1"/><text x="64.9843%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7343%" y="69" width="0.0805%" height="15" fill="rgb(242,161,30)" fg:x="804" fg:w="1"/><text x="64.9843%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7343%" y="53" width="0.0805%" height="15" fill="rgb(218,58,44)" fg:x="804" fg:w="1"/><text x="64.9843%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7343%" y="37" width="0.0805%" height="15" fill="rgb(252,125,32)" fg:x="804" fg:w="1"/><text x="64.9843%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (20 samples, 1.61%)</title><rect x="63.2850%" y="357" width="1.6103%" height="15" fill="rgb(219,178,0)" fg:x="786" fg:w="20"/><text x="63.5350%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="64.1707%" y="341" width="0.7246%" height="15" fill="rgb(213,152,7)" fg:x="797" fg:w="9"/><text x="64.4207%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.1707%" y="325" width="0.7246%" height="15" fill="rgb(249,109,34)" fg:x="797" fg:w="9"/><text x="64.4207%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.8148%" y="309" width="0.0805%" height="15" fill="rgb(232,96,21)" fg:x="805" fg:w="1"/><text x="65.0648%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8148%" y="293" width="0.0805%" height="15" fill="rgb(228,27,39)" fg:x="805" fg:w="1"/><text x="65.0648%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.9758%" y="261" width="0.1610%" height="15" fill="rgb(211,182,52)" fg:x="807" fg:w="2"/><text x="65.2258%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0564%" y="245" width="0.0805%" height="15" fill="rgb(234,178,38)" fg:x="808" fg:w="1"/><text x="65.3064%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0564%" y="229" width="0.0805%" height="15" fill="rgb(221,111,3)" fg:x="808" fg:w="1"/><text x="65.3064%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0564%" y="213" width="0.0805%" height="15" fill="rgb(228,175,21)" fg:x="808" fg:w="1"/><text x="65.3064%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.0564%" y="197" width="0.0805%" height="15" fill="rgb(228,174,43)" fg:x="808" fg:w="1"/><text x="65.3064%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.0564%" y="181" width="0.0805%" height="15" fill="rgb(211,191,0)" fg:x="808" fg:w="1"/><text x="65.3064%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.0564%" y="165" width="0.0805%" height="15" fill="rgb(253,117,3)" fg:x="808" fg:w="1"/><text x="65.3064%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0564%" y="149" width="0.0805%" height="15" fill="rgb(241,127,19)" fg:x="808" fg:w="1"/><text x="65.3064%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.0564%" y="133" width="0.0805%" height="15" fill="rgb(218,103,12)" fg:x="808" fg:w="1"/><text x="65.3064%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.0564%" y="117" width="0.0805%" height="15" fill="rgb(236,214,43)" fg:x="808" fg:w="1"/><text x="65.3064%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.0564%" y="101" width="0.0805%" height="15" fill="rgb(244,144,19)" fg:x="808" fg:w="1"/><text x="65.3064%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.0564%" y="85" width="0.0805%" height="15" fill="rgb(246,188,10)" fg:x="808" fg:w="1"/><text x="65.3064%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.0564%" y="69" width="0.0805%" height="15" fill="rgb(212,193,33)" fg:x="808" fg:w="1"/><text x="65.3064%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0564%" y="53" width="0.0805%" height="15" fill="rgb(241,51,29)" fg:x="808" fg:w="1"/><text x="65.3064%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.8953%" y="309" width="0.3221%" height="15" fill="rgb(211,58,19)" fg:x="806" fg:w="4"/><text x="65.1453%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.9758%" y="293" width="0.2415%" height="15" fill="rgb(229,111,26)" fg:x="807" fg:w="3"/><text x="65.2258%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.9758%" y="277" width="0.2415%" height="15" fill="rgb(213,115,40)" fg:x="807" fg:w="3"/><text x="65.2258%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1369%" y="261" width="0.0805%" height="15" fill="rgb(209,56,44)" fg:x="809" fg:w="1"/><text x="65.3869%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="64.8953%" y="357" width="0.4026%" height="15" fill="rgb(230,108,32)" fg:x="806" fg:w="5"/><text x="65.1453%" y="367.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="64.8953%" y="341" width="0.4026%" height="15" fill="rgb(216,165,31)" fg:x="806" fg:w="5"/><text x="65.1453%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.8953%" y="325" width="0.4026%" height="15" fill="rgb(218,122,21)" fg:x="806" fg:w="5"/><text x="65.1453%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2174%" y="309" width="0.0805%" height="15" fill="rgb(223,224,47)" fg:x="810" fg:w="1"/><text x="65.4674%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2174%" y="293" width="0.0805%" height="15" fill="rgb(238,102,44)" fg:x="810" fg:w="1"/><text x="65.4674%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2174%" y="277" width="0.0805%" height="15" fill="rgb(236,46,40)" fg:x="810" fg:w="1"/><text x="65.4674%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2174%" y="261" width="0.0805%" height="15" fill="rgb(247,202,50)" fg:x="810" fg:w="1"/><text x="65.4674%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.2174%" y="245" width="0.0805%" height="15" fill="rgb(209,99,20)" fg:x="810" fg:w="1"/><text x="65.4674%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2174%" y="229" width="0.0805%" height="15" fill="rgb(252,27,34)" fg:x="810" fg:w="1"/><text x="65.4674%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2174%" y="213" width="0.0805%" height="15" fill="rgb(215,206,23)" fg:x="810" fg:w="1"/><text x="65.4674%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2174%" y="197" width="0.0805%" height="15" fill="rgb(212,135,36)" fg:x="810" fg:w="1"/><text x="65.4674%" y="207.50"></text></g><g><title>core::iter::adapters::try_process (46 samples, 3.70%)</title><rect x="62.4799%" y="453" width="3.7037%" height="15" fill="rgb(240,189,1)" fg:x="776" fg:w="46"/><text x="62.7299%" y="463.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 3.70%)</title><rect x="62.4799%" y="437" width="3.7037%" height="15" fill="rgb(242,56,20)" fg:x="776" fg:w="46"/><text x="62.7299%" y="447.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 3.70%)</title><rect x="62.4799%" y="421" width="3.7037%" height="15" fill="rgb(247,132,33)" fg:x="776" fg:w="46"/><text x="62.7299%" y="431.50">&lt;cor..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (46 samples, 3.70%)</title><rect x="62.4799%" y="405" width="3.7037%" height="15" fill="rgb(208,149,11)" fg:x="776" fg:w="46"/><text x="62.7299%" y="415.50">&lt;eng..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (46 samples, 3.70%)</title><rect x="62.4799%" y="389" width="3.7037%" height="15" fill="rgb(211,33,11)" fg:x="776" fg:w="46"/><text x="62.7299%" y="399.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (45 samples, 3.62%)</title><rect x="62.5604%" y="373" width="3.6232%" height="15" fill="rgb(221,29,38)" fg:x="777" fg:w="45"/><text x="62.8104%" y="383.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (11 samples, 0.89%)</title><rect x="65.2979%" y="357" width="0.8857%" height="15" fill="rgb(206,182,49)" fg:x="811" fg:w="11"/><text x="65.5479%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.89%)</title><rect x="65.2979%" y="341" width="0.8857%" height="15" fill="rgb(216,140,1)" fg:x="811" fg:w="11"/><text x="65.5479%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.89%)</title><rect x="65.2979%" y="325" width="0.8857%" height="15" fill="rgb(232,57,40)" fg:x="811" fg:w="11"/><text x="65.5479%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.89%)</title><rect x="65.2979%" y="309" width="0.8857%" height="15" fill="rgb(224,186,18)" fg:x="811" fg:w="11"/><text x="65.5479%" y="319.50"></text></g><g><title>__libc_malloc (11 samples, 0.89%)</title><rect x="65.2979%" y="293" width="0.8857%" height="15" fill="rgb(215,121,11)" fg:x="811" fg:w="11"/><text x="65.5479%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (47 samples, 3.78%)</title><rect x="62.4799%" y="469" width="3.7842%" height="15" fill="rgb(245,147,10)" fg:x="776" fg:w="47"/><text x="62.7299%" y="479.50">&lt;plu..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="66.1836%" y="453" width="0.0805%" height="15" fill="rgb(238,153,13)" fg:x="822" fg:w="1"/><text x="66.4336%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.1836%" y="437" width="0.0805%" height="15" fill="rgb(233,108,0)" fg:x="822" fg:w="1"/><text x="66.4336%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.2641%" y="405" width="0.0805%" height="15" fill="rgb(212,157,17)" fg:x="823" fg:w="1"/><text x="66.5141%" y="415.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.2641%" y="389" width="0.0805%" height="15" fill="rgb(225,213,38)" fg:x="823" fg:w="1"/><text x="66.5141%" y="399.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="66.2641%" y="469" width="0.2415%" height="15" fill="rgb(248,16,11)" fg:x="823" fg:w="3"/><text x="66.5141%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="66.2641%" y="453" width="0.2415%" height="15" fill="rgb(241,33,4)" fg:x="823" fg:w="3"/><text x="66.5141%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="66.2641%" y="437" width="0.2415%" height="15" fill="rgb(222,26,43)" fg:x="823" fg:w="3"/><text x="66.5141%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="66.2641%" y="421" width="0.2415%" height="15" fill="rgb(243,29,36)" fg:x="823" fg:w="3"/><text x="66.5141%" y="431.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (2 samples, 0.16%)</title><rect x="66.3446%" y="405" width="0.1610%" height="15" fill="rgb(241,9,27)" fg:x="824" fg:w="2"/><text x="66.5946%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.3446%" y="389" width="0.1610%" height="15" fill="rgb(205,117,26)" fg:x="824" fg:w="2"/><text x="66.5946%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.3446%" y="373" width="0.1610%" height="15" fill="rgb(209,80,39)" fg:x="824" fg:w="2"/><text x="66.5946%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="66.3446%" y="357" width="0.1610%" height="15" fill="rgb(239,155,6)" fg:x="824" fg:w="2"/><text x="66.5946%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="66.3446%" y="341" width="0.1610%" height="15" fill="rgb(212,104,12)" fg:x="824" fg:w="2"/><text x="66.5946%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="66.3446%" y="325" width="0.1610%" height="15" fill="rgb(234,204,3)" fg:x="824" fg:w="2"/><text x="66.5946%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.3446%" y="309" width="0.1610%" height="15" fill="rgb(251,218,7)" fg:x="824" fg:w="2"/><text x="66.5946%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="66.3446%" y="293" width="0.1610%" height="15" fill="rgb(221,81,32)" fg:x="824" fg:w="2"/><text x="66.5946%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="66.3446%" y="277" width="0.1610%" height="15" fill="rgb(214,152,26)" fg:x="824" fg:w="2"/><text x="66.5946%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="66.3446%" y="261" width="0.1610%" height="15" fill="rgb(223,22,3)" fg:x="824" fg:w="2"/><text x="66.5946%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="66.3446%" y="245" width="0.1610%" height="15" fill="rgb(207,174,7)" fg:x="824" fg:w="2"/><text x="66.5946%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="66.3446%" y="229" width="0.1610%" height="15" fill="rgb(224,19,52)" fg:x="824" fg:w="2"/><text x="66.5946%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="66.3446%" y="213" width="0.1610%" height="15" fill="rgb(228,24,14)" fg:x="824" fg:w="2"/><text x="66.5946%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5862%" y="437" width="0.0805%" height="15" fill="rgb(230,153,43)" fg:x="827" fg:w="1"/><text x="66.8362%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.24%)</title><rect x="66.5056%" y="469" width="0.2415%" height="15" fill="rgb(231,106,12)" fg:x="826" fg:w="3"/><text x="66.7556%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.5056%" y="453" width="0.2415%" height="15" fill="rgb(215,92,2)" fg:x="826" fg:w="3"/><text x="66.7556%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.6667%" y="437" width="0.0805%" height="15" fill="rgb(249,143,25)" fg:x="828" fg:w="1"/><text x="66.9167%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0805%" height="15" fill="rgb(252,7,35)" fg:x="828" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 0.08%)</title><rect x="66.6667%" y="405" width="0.0805%" height="15" fill="rgb(216,69,40)" fg:x="828" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7472%" y="437" width="0.0805%" height="15" fill="rgb(240,36,33)" fg:x="829" fg:w="1"/><text x="66.9972%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="66.8277%" y="405" width="0.0805%" height="15" fill="rgb(231,128,14)" fg:x="830" fg:w="1"/><text x="67.0777%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.8277%" y="389" width="0.0805%" height="15" fill="rgb(245,143,14)" fg:x="830" fg:w="1"/><text x="67.0777%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.8277%" y="373" width="0.0805%" height="15" fill="rgb(222,130,28)" fg:x="830" fg:w="1"/><text x="67.0777%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="66.8277%" y="357" width="0.0805%" height="15" fill="rgb(212,10,48)" fg:x="830" fg:w="1"/><text x="67.0777%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="66.8277%" y="437" width="0.1610%" height="15" fill="rgb(254,118,45)" fg:x="830" fg:w="2"/><text x="67.0777%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="66.8277%" y="421" width="0.1610%" height="15" fill="rgb(228,6,45)" fg:x="830" fg:w="2"/><text x="67.0777%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9082%" y="405" width="0.0805%" height="15" fill="rgb(241,18,35)" fg:x="831" fg:w="1"/><text x="67.1582%" y="415.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (124 samples, 9.98%)</title><rect x="57.0853%" y="533" width="9.9839%" height="15" fill="rgb(227,214,53)" fg:x="709" fg:w="124"/><text x="57.3353%" y="543.50">&lt;plugins_core:..</text></g><g><title>plugins_core::looking::model::new_area_observation (121 samples, 9.74%)</title><rect x="57.3269%" y="517" width="9.7424%" height="15" fill="rgb(224,107,51)" fg:x="712" fg:w="121"/><text x="57.5769%" y="527.50">plugins_core::..</text></g><g><title>kernel::model::entry::Entry::scope (65 samples, 5.23%)</title><rect x="61.8357%" y="501" width="5.2335%" height="15" fill="rgb(248,60,28)" fg:x="768" fg:w="65"/><text x="62.0857%" y="511.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (63 samples, 5.07%)</title><rect x="61.9968%" y="485" width="5.0725%" height="15" fill="rgb(249,101,23)" fg:x="770" fg:w="63"/><text x="62.2468%" y="495.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="66.7472%" y="469" width="0.3221%" height="15" fill="rgb(228,51,19)" fg:x="829" fg:w="4"/><text x="66.9972%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="66.7472%" y="453" width="0.3221%" height="15" fill="rgb(213,20,6)" fg:x="829" fg:w="4"/><text x="66.9972%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.9887%" y="437" width="0.0805%" height="15" fill="rgb(212,124,10)" fg:x="832" fg:w="1"/><text x="67.2387%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.9887%" y="421" width="0.0805%" height="15" fill="rgb(248,3,40)" fg:x="832" fg:w="1"/><text x="67.2387%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="66.9887%" y="405" width="0.0805%" height="15" fill="rgb(223,178,23)" fg:x="832" fg:w="1"/><text x="67.2387%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.9887%" y="389" width="0.0805%" height="15" fill="rgb(240,132,45)" fg:x="832" fg:w="1"/><text x="67.2387%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="66.9887%" y="373" width="0.0805%" height="15" fill="rgb(245,164,36)" fg:x="832" fg:w="1"/><text x="67.2387%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0692%" y="517" width="0.0805%" height="15" fill="rgb(231,188,53)" fg:x="833" fg:w="1"/><text x="67.3192%" y="527.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (127 samples, 10.23%)</title><rect x="57.0048%" y="549" width="10.2254%" height="15" fill="rgb(237,198,39)" fg:x="708" fg:w="127"/><text x="57.2548%" y="559.50">&lt;engine::sessio..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="67.0692%" y="533" width="0.1610%" height="15" fill="rgb(223,120,35)" fg:x="833" fg:w="2"/><text x="67.3192%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="67.1498%" y="517" width="0.0805%" height="15" fill="rgb(253,107,49)" fg:x="834" fg:w="1"/><text x="67.3998%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1498%" y="501" width="0.0805%" height="15" fill="rgb(216,44,31)" fg:x="834" fg:w="1"/><text x="67.3998%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (164 samples, 13.20%)</title><rect x="54.1063%" y="725" width="13.2045%" height="15" fill="rgb(253,87,21)" fg:x="672" fg:w="164"/><text x="54.3563%" y="735.50">&lt;engine::session::Se..</text></g><g><title>kernel::plugins::mw::apply_middleware (164 samples, 13.20%)</title><rect x="54.1063%" y="709" width="13.2045%" height="15" fill="rgb(226,18,2)" fg:x="672" fg:w="164"/><text x="54.3563%" y="719.50">kernel::plugins::mw:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (164 samples, 13.20%)</title><rect x="54.1063%" y="693" width="13.2045%" height="15" fill="rgb(216,8,46)" fg:x="672" fg:w="164"/><text x="54.3563%" y="703.50">kernel::plugins::mw:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (163 samples, 13.12%)</title><rect x="54.1868%" y="677" width="13.1240%" height="15" fill="rgb(226,140,39)" fg:x="673" fg:w="163"/><text x="54.4368%" y="687.50">&lt;engine::session::Ex..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (128 samples, 10.31%)</title><rect x="57.0048%" y="661" width="10.3060%" height="15" fill="rgb(221,194,54)" fg:x="708" fg:w="128"/><text x="57.2548%" y="671.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (128 samples, 10.31%)</title><rect x="57.0048%" y="645" width="10.3060%" height="15" fill="rgb(213,92,11)" fg:x="708" fg:w="128"/><text x="57.2548%" y="655.50">&lt;plugins_dynlib..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (128 samples, 10.31%)</title><rect x="57.0048%" y="629" width="10.3060%" height="15" fill="rgb(229,162,46)" fg:x="708" fg:w="128"/><text x="57.2548%" y="639.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (128 samples, 10.31%)</title><rect x="57.0048%" y="613" width="10.3060%" height="15" fill="rgb(214,111,36)" fg:x="708" fg:w="128"/><text x="57.2548%" y="623.50">core::ops::func..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (128 samples, 10.31%)</title><rect x="57.0048%" y="597" width="10.3060%" height="15" fill="rgb(207,6,21)" fg:x="708" fg:w="128"/><text x="57.2548%" y="607.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (128 samples, 10.31%)</title><rect x="57.0048%" y="581" width="10.3060%" height="15" fill="rgb(213,127,38)" fg:x="708" fg:w="128"/><text x="57.2548%" y="591.50">core::ops::func..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (128 samples, 10.31%)</title><rect x="57.0048%" y="565" width="10.3060%" height="15" fill="rgb(238,118,32)" fg:x="708" fg:w="128"/><text x="57.2548%" y="575.50">&lt;alloc::boxed::..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2303%" y="549" width="0.0805%" height="15" fill="rgb(240,139,39)" fg:x="835" fg:w="1"/><text x="67.4803%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="67.3108%" y="693" width="0.0805%" height="15" fill="rgb(235,10,37)" fg:x="836" fg:w="1"/><text x="67.5608%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.5523%" y="645" width="0.1610%" height="15" fill="rgb(249,171,38)" fg:x="839" fg:w="2"/><text x="67.8023%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.5523%" y="629" width="0.1610%" height="15" fill="rgb(242,144,32)" fg:x="839" fg:w="2"/><text x="67.8023%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.5523%" y="613" width="0.1610%" height="15" fill="rgb(217,117,21)" fg:x="839" fg:w="2"/><text x="67.8023%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.5523%" y="597" width="0.1610%" height="15" fill="rgb(249,87,1)" fg:x="839" fg:w="2"/><text x="67.8023%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.5523%" y="581" width="0.1610%" height="15" fill="rgb(248,196,48)" fg:x="839" fg:w="2"/><text x="67.8023%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.5523%" y="565" width="0.1610%" height="15" fill="rgb(251,206,33)" fg:x="839" fg:w="2"/><text x="67.8023%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="67.5523%" y="549" width="0.1610%" height="15" fill="rgb(232,141,28)" fg:x="839" fg:w="2"/><text x="67.8023%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="67.5523%" y="533" width="0.1610%" height="15" fill="rgb(209,167,14)" fg:x="839" fg:w="2"/><text x="67.8023%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="67.5523%" y="517" width="0.1610%" height="15" fill="rgb(225,11,50)" fg:x="839" fg:w="2"/><text x="67.8023%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="67.5523%" y="501" width="0.1610%" height="15" fill="rgb(209,50,20)" fg:x="839" fg:w="2"/><text x="67.8023%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="67.5523%" y="485" width="0.1610%" height="15" fill="rgb(212,17,46)" fg:x="839" fg:w="2"/><text x="67.8023%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.5523%" y="469" width="0.1610%" height="15" fill="rgb(216,101,39)" fg:x="839" fg:w="2"/><text x="67.8023%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.7939%" y="597" width="0.0805%" height="15" fill="rgb(212,228,48)" fg:x="842" fg:w="1"/><text x="68.0439%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.7939%" y="581" width="0.0805%" height="15" fill="rgb(250,6,50)" fg:x="842" fg:w="1"/><text x="68.0439%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.7939%" y="565" width="0.0805%" height="15" fill="rgb(250,160,48)" fg:x="842" fg:w="1"/><text x="68.0439%" y="575.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="67.8744%" y="597" width="0.0805%" height="15" fill="rgb(244,216,33)" fg:x="843" fg:w="1"/><text x="68.1244%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0354%" y="501" width="0.0805%" height="15" fill="rgb(207,157,5)" fg:x="845" fg:w="1"/><text x="68.2854%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="67.7134%" y="645" width="0.4831%" height="15" fill="rgb(228,199,8)" fg:x="841" fg:w="6"/><text x="67.9634%" y="655.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="67.7939%" y="629" width="0.4026%" height="15" fill="rgb(227,80,20)" fg:x="842" fg:w="5"/><text x="68.0439%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="67.7939%" y="613" width="0.4026%" height="15" fill="rgb(222,9,33)" fg:x="842" fg:w="5"/><text x="68.0439%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="67.9549%" y="597" width="0.2415%" height="15" fill="rgb(239,44,28)" fg:x="844" fg:w="3"/><text x="68.2049%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.9549%" y="581" width="0.2415%" height="15" fill="rgb(249,187,43)" fg:x="844" fg:w="3"/><text x="68.2049%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.0354%" y="565" width="0.1610%" height="15" fill="rgb(216,141,28)" fg:x="845" fg:w="2"/><text x="68.2854%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.0354%" y="549" width="0.1610%" height="15" fill="rgb(230,154,53)" fg:x="845" fg:w="2"/><text x="68.2854%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.0354%" y="533" width="0.1610%" height="15" fill="rgb(227,82,4)" fg:x="845" fg:w="2"/><text x="68.2854%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.0354%" y="517" width="0.1610%" height="15" fill="rgb(220,107,16)" fg:x="845" fg:w="2"/><text x="68.2854%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1159%" y="501" width="0.0805%" height="15" fill="rgb(207,187,2)" fg:x="846" fg:w="1"/><text x="68.3659%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1159%" y="485" width="0.0805%" height="15" fill="rgb(210,162,52)" fg:x="846" fg:w="1"/><text x="68.3659%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1159%" y="469" width="0.0805%" height="15" fill="rgb(217,216,49)" fg:x="846" fg:w="1"/><text x="68.3659%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1159%" y="453" width="0.0805%" height="15" fill="rgb(218,146,49)" fg:x="846" fg:w="1"/><text x="68.3659%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1965%" y="597" width="0.0805%" height="15" fill="rgb(216,55,40)" fg:x="847" fg:w="1"/><text x="68.4465%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1965%" y="581" width="0.0805%" height="15" fill="rgb(208,196,21)" fg:x="847" fg:w="1"/><text x="68.4465%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1965%" y="565" width="0.0805%" height="15" fill="rgb(242,117,42)" fg:x="847" fg:w="1"/><text x="68.4465%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.1965%" y="549" width="0.0805%" height="15" fill="rgb(210,11,23)" fg:x="847" fg:w="1"/><text x="68.4465%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1965%" y="533" width="0.0805%" height="15" fill="rgb(217,110,2)" fg:x="847" fg:w="1"/><text x="68.4465%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1965%" y="517" width="0.0805%" height="15" fill="rgb(229,77,54)" fg:x="847" fg:w="1"/><text x="68.4465%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.1965%" y="501" width="0.0805%" height="15" fill="rgb(218,53,16)" fg:x="847" fg:w="1"/><text x="68.4465%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.1965%" y="485" width="0.0805%" height="15" fill="rgb(215,38,13)" fg:x="847" fg:w="1"/><text x="68.4465%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.1965%" y="469" width="0.0805%" height="15" fill="rgb(235,42,18)" fg:x="847" fg:w="1"/><text x="68.4465%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1965%" y="453" width="0.0805%" height="15" fill="rgb(219,66,54)" fg:x="847" fg:w="1"/><text x="68.4465%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1965%" y="437" width="0.0805%" height="15" fill="rgb(222,205,4)" fg:x="847" fg:w="1"/><text x="68.4465%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.1965%" y="421" width="0.0805%" height="15" fill="rgb(227,213,46)" fg:x="847" fg:w="1"/><text x="68.4465%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.1965%" y="405" width="0.0805%" height="15" fill="rgb(250,145,42)" fg:x="847" fg:w="1"/><text x="68.4465%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.1965%" y="389" width="0.0805%" height="15" fill="rgb(219,15,2)" fg:x="847" fg:w="1"/><text x="68.4465%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.1965%" y="373" width="0.0805%" height="15" fill="rgb(231,181,52)" fg:x="847" fg:w="1"/><text x="68.4465%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1965%" y="357" width="0.0805%" height="15" fill="rgb(235,1,42)" fg:x="847" fg:w="1"/><text x="68.4465%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (13 samples, 1.05%)</title><rect x="67.3913%" y="677" width="1.0467%" height="15" fill="rgb(249,88,27)" fg:x="837" fg:w="13"/><text x="67.6413%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="67.4718%" y="661" width="0.9662%" height="15" fill="rgb(235,145,16)" fg:x="838" fg:w="12"/><text x="67.7218%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.1965%" y="645" width="0.2415%" height="15" fill="rgb(237,114,19)" fg:x="847" fg:w="3"/><text x="68.4465%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="68.1965%" y="629" width="0.2415%" height="15" fill="rgb(238,51,50)" fg:x="847" fg:w="3"/><text x="68.4465%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.1965%" y="613" width="0.2415%" height="15" fill="rgb(205,194,25)" fg:x="847" fg:w="3"/><text x="68.4465%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.2770%" y="597" width="0.1610%" height="15" fill="rgb(215,203,17)" fg:x="848" fg:w="2"/><text x="68.5270%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3575%" y="581" width="0.0805%" height="15" fill="rgb(233,112,49)" fg:x="849" fg:w="1"/><text x="68.6075%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.3575%" y="565" width="0.0805%" height="15" fill="rgb(241,130,26)" fg:x="849" fg:w="1"/><text x="68.6075%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3575%" y="549" width="0.0805%" height="15" fill="rgb(252,223,19)" fg:x="849" fg:w="1"/><text x="68.6075%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.3575%" y="533" width="0.0805%" height="15" fill="rgb(211,95,25)" fg:x="849" fg:w="1"/><text x="68.6075%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3575%" y="517" width="0.0805%" height="15" fill="rgb(251,182,27)" fg:x="849" fg:w="1"/><text x="68.6075%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.3575%" y="501" width="0.0805%" height="15" fill="rgb(238,24,4)" fg:x="849" fg:w="1"/><text x="68.6075%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3575%" y="485" width="0.0805%" height="15" fill="rgb(224,220,25)" fg:x="849" fg:w="1"/><text x="68.6075%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.3575%" y="469" width="0.0805%" height="15" fill="rgb(239,133,26)" fg:x="849" fg:w="1"/><text x="68.6075%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.3575%" y="453" width="0.0805%" height="15" fill="rgb(211,94,48)" fg:x="849" fg:w="1"/><text x="68.6075%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.3575%" y="437" width="0.0805%" height="15" fill="rgb(239,87,6)" fg:x="849" fg:w="1"/><text x="68.6075%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3575%" y="421" width="0.0805%" height="15" fill="rgb(227,62,0)" fg:x="849" fg:w="1"/><text x="68.6075%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.4380%" y="613" width="0.0805%" height="15" fill="rgb(211,226,4)" fg:x="850" fg:w="1"/><text x="68.6880%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.4380%" y="597" width="0.0805%" height="15" fill="rgb(253,38,52)" fg:x="850" fg:w="1"/><text x="68.6880%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.5185%" y="613" width="0.0805%" height="15" fill="rgb(229,126,40)" fg:x="851" fg:w="1"/><text x="68.7685%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.6795%" y="581" width="0.0805%" height="15" fill="rgb(229,165,44)" fg:x="853" fg:w="1"/><text x="68.9295%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6795%" y="565" width="0.0805%" height="15" fill="rgb(247,95,47)" fg:x="853" fg:w="1"/><text x="68.9295%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.8406%" y="549" width="0.0805%" height="15" fill="rgb(216,140,30)" fg:x="855" fg:w="1"/><text x="69.0906%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9211%" y="533" width="0.0805%" height="15" fill="rgb(246,214,8)" fg:x="856" fg:w="1"/><text x="69.1711%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9211%" y="517" width="0.0805%" height="15" fill="rgb(227,224,15)" fg:x="856" fg:w="1"/><text x="69.1711%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9211%" y="501" width="0.0805%" height="15" fill="rgb(233,175,4)" fg:x="856" fg:w="1"/><text x="69.1711%" y="511.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="68.4380%" y="661" width="0.6441%" height="15" fill="rgb(221,66,45)" fg:x="850" fg:w="8"/><text x="68.6880%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="68.4380%" y="645" width="0.6441%" height="15" fill="rgb(221,178,18)" fg:x="850" fg:w="8"/><text x="68.6880%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="68.4380%" y="629" width="0.6441%" height="15" fill="rgb(213,81,29)" fg:x="850" fg:w="8"/><text x="68.6880%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="68.5990%" y="613" width="0.4831%" height="15" fill="rgb(220,89,49)" fg:x="852" fg:w="6"/><text x="68.8490%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.5990%" y="597" width="0.4831%" height="15" fill="rgb(227,60,33)" fg:x="852" fg:w="6"/><text x="68.8490%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.7601%" y="581" width="0.3221%" height="15" fill="rgb(205,113,12)" fg:x="854" fg:w="4"/><text x="69.0101%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.7601%" y="565" width="0.3221%" height="15" fill="rgb(211,32,1)" fg:x="854" fg:w="4"/><text x="69.0101%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.9211%" y="549" width="0.1610%" height="15" fill="rgb(246,2,12)" fg:x="856" fg:w="2"/><text x="69.1711%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.0016%" y="533" width="0.0805%" height="15" fill="rgb(243,37,27)" fg:x="857" fg:w="1"/><text x="69.2516%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.0016%" y="517" width="0.0805%" height="15" fill="rgb(248,211,31)" fg:x="857" fg:w="1"/><text x="69.2516%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0016%" y="501" width="0.0805%" height="15" fill="rgb(242,146,47)" fg:x="857" fg:w="1"/><text x="69.2516%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.0821%" y="629" width="0.0805%" height="15" fill="rgb(206,70,20)" fg:x="858" fg:w="1"/><text x="69.3321%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.1626%" y="629" width="0.0805%" height="15" fill="rgb(215,10,51)" fg:x="859" fg:w="1"/><text x="69.4126%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="69.2432%" y="549" width="0.1610%" height="15" fill="rgb(243,178,53)" fg:x="860" fg:w="2"/><text x="69.4932%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.2432%" y="533" width="0.1610%" height="15" fill="rgb(233,221,20)" fg:x="860" fg:w="2"/><text x="69.4932%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.3237%" y="517" width="0.0805%" height="15" fill="rgb(218,95,35)" fg:x="861" fg:w="1"/><text x="69.5737%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.3237%" y="501" width="0.0805%" height="15" fill="rgb(229,13,5)" fg:x="861" fg:w="1"/><text x="69.5737%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.3237%" y="485" width="0.0805%" height="15" fill="rgb(252,164,30)" fg:x="861" fg:w="1"/><text x="69.5737%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.3237%" y="469" width="0.0805%" height="15" fill="rgb(232,68,36)" fg:x="861" fg:w="1"/><text x="69.5737%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3237%" y="453" width="0.0805%" height="15" fill="rgb(219,59,54)" fg:x="861" fg:w="1"/><text x="69.5737%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="69.4042%" y="549" width="0.0805%" height="15" fill="rgb(250,92,33)" fg:x="862" fg:w="1"/><text x="69.6542%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4042%" y="533" width="0.0805%" height="15" fill="rgb(229,162,54)" fg:x="862" fg:w="1"/><text x="69.6542%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="69.2432%" y="581" width="0.3221%" height="15" fill="rgb(244,114,52)" fg:x="860" fg:w="4"/><text x="69.4932%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="69.2432%" y="565" width="0.3221%" height="15" fill="rgb(212,211,43)" fg:x="860" fg:w="4"/><text x="69.4932%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.4847%" y="549" width="0.0805%" height="15" fill="rgb(226,147,8)" fg:x="863" fg:w="1"/><text x="69.7347%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5652%" y="549" width="0.0805%" height="15" fill="rgb(226,23,13)" fg:x="864" fg:w="1"/><text x="69.8152%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.5652%" y="581" width="0.1610%" height="15" fill="rgb(240,63,4)" fg:x="864" fg:w="2"/><text x="69.8152%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="69.5652%" y="565" width="0.1610%" height="15" fill="rgb(221,1,32)" fg:x="864" fg:w="2"/><text x="69.8152%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6457%" y="549" width="0.0805%" height="15" fill="rgb(242,117,10)" fg:x="865" fg:w="1"/><text x="69.8957%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6457%" y="533" width="0.0805%" height="15" fill="rgb(249,172,44)" fg:x="865" fg:w="1"/><text x="69.8957%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6457%" y="517" width="0.0805%" height="15" fill="rgb(244,46,45)" fg:x="865" fg:w="1"/><text x="69.8957%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6457%" y="501" width="0.0805%" height="15" fill="rgb(206,43,17)" fg:x="865" fg:w="1"/><text x="69.8957%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.6457%" y="485" width="0.0805%" height="15" fill="rgb(239,218,39)" fg:x="865" fg:w="1"/><text x="69.8957%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.7262%" y="517" width="0.0805%" height="15" fill="rgb(208,169,54)" fg:x="866" fg:w="1"/><text x="69.9762%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="69.8068%" y="501" width="0.2415%" height="15" fill="rgb(247,25,42)" fg:x="867" fg:w="3"/><text x="70.0568%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="69.8873%" y="485" width="0.1610%" height="15" fill="rgb(226,23,31)" fg:x="868" fg:w="2"/><text x="70.1373%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9678%" y="469" width="0.0805%" height="15" fill="rgb(247,16,28)" fg:x="869" fg:w="1"/><text x="70.2178%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="70.0483%" y="485" width="0.0805%" height="15" fill="rgb(231,147,38)" fg:x="870" fg:w="1"/><text x="70.2983%" y="495.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="70.0483%" y="469" width="0.0805%" height="15" fill="rgb(253,81,48)" fg:x="870" fg:w="1"/><text x="70.2983%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="69.2432%" y="629" width="0.9662%" height="15" fill="rgb(249,222,43)" fg:x="860" fg:w="12"/><text x="69.4932%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="69.2432%" y="613" width="0.9662%" height="15" fill="rgb(221,3,27)" fg:x="860" fg:w="12"/><text x="69.4932%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.97%)</title><rect x="69.2432%" y="597" width="0.9662%" height="15" fill="rgb(228,180,5)" fg:x="860" fg:w="12"/><text x="69.4932%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.7262%" y="581" width="0.4831%" height="15" fill="rgb(227,131,42)" fg:x="866" fg:w="6"/><text x="69.9762%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="69.7262%" y="565" width="0.4831%" height="15" fill="rgb(212,3,39)" fg:x="866" fg:w="6"/><text x="69.9762%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.48%)</title><rect x="69.7262%" y="549" width="0.4831%" height="15" fill="rgb(226,45,5)" fg:x="866" fg:w="6"/><text x="69.9762%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="69.7262%" y="533" width="0.4831%" height="15" fill="rgb(215,167,45)" fg:x="866" fg:w="6"/><text x="69.9762%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="69.8068%" y="517" width="0.4026%" height="15" fill="rgb(250,218,53)" fg:x="867" fg:w="5"/><text x="70.0568%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="70.0483%" y="501" width="0.1610%" height="15" fill="rgb(207,140,0)" fg:x="870" fg:w="2"/><text x="70.2983%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1288%" y="485" width="0.0805%" height="15" fill="rgb(238,133,51)" fg:x="871" fg:w="1"/><text x="70.3788%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1288%" y="469" width="0.0805%" height="15" fill="rgb(218,203,53)" fg:x="871" fg:w="1"/><text x="70.3788%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="70.1288%" y="453" width="0.0805%" height="15" fill="rgb(226,184,25)" fg:x="871" fg:w="1"/><text x="70.3788%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1288%" y="437" width="0.0805%" height="15" fill="rgb(231,121,21)" fg:x="871" fg:w="1"/><text x="70.3788%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.2093%" y="629" width="0.0805%" height="15" fill="rgb(251,14,34)" fg:x="872" fg:w="1"/><text x="70.4593%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.2899%" y="629" width="0.2415%" height="15" fill="rgb(249,193,11)" fg:x="873" fg:w="3"/><text x="70.5399%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.2899%" y="613" width="0.2415%" height="15" fill="rgb(220,172,37)" fg:x="873" fg:w="3"/><text x="70.5399%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="70.3704%" y="597" width="0.1610%" height="15" fill="rgb(231,229,43)" fg:x="874" fg:w="2"/><text x="70.6204%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.4509%" y="581" width="0.0805%" height="15" fill="rgb(250,161,5)" fg:x="875" fg:w="1"/><text x="70.7009%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (27 samples, 2.17%)</title><rect x="68.4380%" y="677" width="2.1739%" height="15" fill="rgb(218,225,18)" fg:x="850" fg:w="27"/><text x="68.6880%" y="687.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.53%)</title><rect x="69.0821%" y="661" width="1.5298%" height="15" fill="rgb(245,45,42)" fg:x="858" fg:w="19"/><text x="69.3321%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.53%)</title><rect x="69.0821%" y="645" width="1.5298%" height="15" fill="rgb(211,115,1)" fg:x="858" fg:w="19"/><text x="69.3321%" y="655.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="70.5314%" y="629" width="0.0805%" height="15" fill="rgb(248,133,52)" fg:x="876" fg:w="1"/><text x="70.7814%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6924%" y="613" width="0.1610%" height="15" fill="rgb(238,100,21)" fg:x="878" fg:w="2"/><text x="70.9424%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6924%" y="597" width="0.1610%" height="15" fill="rgb(247,144,11)" fg:x="878" fg:w="2"/><text x="70.9424%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7729%" y="581" width="0.0805%" height="15" fill="rgb(206,164,16)" fg:x="879" fg:w="1"/><text x="71.0229%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7729%" y="565" width="0.0805%" height="15" fill="rgb(222,34,3)" fg:x="879" fg:w="1"/><text x="71.0229%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7729%" y="549" width="0.0805%" height="15" fill="rgb(248,82,4)" fg:x="879" fg:w="1"/><text x="71.0229%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7729%" y="533" width="0.0805%" height="15" fill="rgb(228,81,46)" fg:x="879" fg:w="1"/><text x="71.0229%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7729%" y="517" width="0.0805%" height="15" fill="rgb(227,67,47)" fg:x="879" fg:w="1"/><text x="71.0229%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7729%" y="501" width="0.0805%" height="15" fill="rgb(215,93,53)" fg:x="879" fg:w="1"/><text x="71.0229%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7729%" y="485" width="0.0805%" height="15" fill="rgb(248,194,39)" fg:x="879" fg:w="1"/><text x="71.0229%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7729%" y="469" width="0.0805%" height="15" fill="rgb(215,5,19)" fg:x="879" fg:w="1"/><text x="71.0229%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7729%" y="453" width="0.0805%" height="15" fill="rgb(226,215,51)" fg:x="879" fg:w="1"/><text x="71.0229%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7729%" y="437" width="0.0805%" height="15" fill="rgb(225,56,26)" fg:x="879" fg:w="1"/><text x="71.0229%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7729%" y="421" width="0.0805%" height="15" fill="rgb(222,75,29)" fg:x="879" fg:w="1"/><text x="71.0229%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7729%" y="405" width="0.0805%" height="15" fill="rgb(236,139,6)" fg:x="879" fg:w="1"/><text x="71.0229%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7729%" y="389" width="0.0805%" height="15" fill="rgb(223,137,36)" fg:x="879" fg:w="1"/><text x="71.0229%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.6924%" y="629" width="0.2415%" height="15" fill="rgb(226,99,2)" fg:x="878" fg:w="3"/><text x="70.9424%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8535%" y="613" width="0.0805%" height="15" fill="rgb(206,133,23)" fg:x="880" fg:w="1"/><text x="71.1035%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8535%" y="597" width="0.0805%" height="15" fill="rgb(243,173,15)" fg:x="880" fg:w="1"/><text x="71.1035%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.8535%" y="581" width="0.0805%" height="15" fill="rgb(228,69,28)" fg:x="880" fg:w="1"/><text x="71.1035%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.8535%" y="565" width="0.0805%" height="15" fill="rgb(212,51,22)" fg:x="880" fg:w="1"/><text x="71.1035%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.8535%" y="549" width="0.0805%" height="15" fill="rgb(227,113,0)" fg:x="880" fg:w="1"/><text x="71.1035%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.8535%" y="533" width="0.0805%" height="15" fill="rgb(252,84,27)" fg:x="880" fg:w="1"/><text x="71.1035%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.8535%" y="517" width="0.0805%" height="15" fill="rgb(223,145,39)" fg:x="880" fg:w="1"/><text x="71.1035%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9340%" y="533" width="0.0805%" height="15" fill="rgb(239,219,30)" fg:x="881" fg:w="1"/><text x="71.1840%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="70.6119%" y="677" width="0.4831%" height="15" fill="rgb(224,196,39)" fg:x="877" fg:w="6"/><text x="70.8619%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="70.6119%" y="661" width="0.4831%" height="15" fill="rgb(205,35,43)" fg:x="877" fg:w="6"/><text x="70.8619%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="70.6119%" y="645" width="0.4831%" height="15" fill="rgb(228,201,21)" fg:x="877" fg:w="6"/><text x="70.8619%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.9340%" y="629" width="0.1610%" height="15" fill="rgb(237,118,16)" fg:x="881" fg:w="2"/><text x="71.1840%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9340%" y="613" width="0.1610%" height="15" fill="rgb(241,17,19)" fg:x="881" fg:w="2"/><text x="71.1840%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.9340%" y="597" width="0.1610%" height="15" fill="rgb(214,10,25)" fg:x="881" fg:w="2"/><text x="71.1840%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9340%" y="581" width="0.1610%" height="15" fill="rgb(238,37,29)" fg:x="881" fg:w="2"/><text x="71.1840%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.9340%" y="565" width="0.1610%" height="15" fill="rgb(253,83,25)" fg:x="881" fg:w="2"/><text x="71.1840%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9340%" y="549" width="0.1610%" height="15" fill="rgb(234,192,12)" fg:x="881" fg:w="2"/><text x="71.1840%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0145%" y="533" width="0.0805%" height="15" fill="rgb(241,216,45)" fg:x="882" fg:w="1"/><text x="71.2645%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0145%" y="517" width="0.0805%" height="15" fill="rgb(242,22,33)" fg:x="882" fg:w="1"/><text x="71.2645%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (48 samples, 3.86%)</title><rect x="67.3108%" y="709" width="3.8647%" height="15" fill="rgb(231,105,49)" fg:x="836" fg:w="48"/><text x="67.5608%" y="719.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (47 samples, 3.78%)</title><rect x="67.3913%" y="693" width="3.7842%" height="15" fill="rgb(218,204,15)" fg:x="837" fg:w="47"/><text x="67.6413%" y="703.50">engi..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="71.0950%" y="677" width="0.0805%" height="15" fill="rgb(235,138,41)" fg:x="883" fg:w="1"/><text x="71.3450%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.2560%" y="501" width="0.0805%" height="15" fill="rgb(246,0,9)" fg:x="885" fg:w="1"/><text x="71.5060%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="71.3366%" y="373" width="0.0805%" height="15" fill="rgb(210,74,4)" fg:x="886" fg:w="1"/><text x="71.5866%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="71.3366%" y="357" width="0.0805%" height="15" fill="rgb(250,60,41)" fg:x="886" fg:w="1"/><text x="71.5866%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (52 samples, 4.19%)</title><rect x="67.3108%" y="725" width="4.1868%" height="15" fill="rgb(220,115,12)" fg:x="836" fg:w="52"/><text x="67.5608%" y="735.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="71.1755%" y="709" width="0.3221%" height="15" fill="rgb(237,100,13)" fg:x="884" fg:w="4"/><text x="71.4255%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="71.1755%" y="693" width="0.3221%" height="15" fill="rgb(213,55,26)" fg:x="884" fg:w="4"/><text x="71.4255%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="677" width="0.3221%" height="15" fill="rgb(216,17,4)" fg:x="884" fg:w="4"/><text x="71.4255%" y="687.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="71.1755%" y="661" width="0.3221%" height="15" fill="rgb(220,153,47)" fg:x="884" fg:w="4"/><text x="71.4255%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="645" width="0.3221%" height="15" fill="rgb(215,131,9)" fg:x="884" fg:w="4"/><text x="71.4255%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="629" width="0.3221%" height="15" fill="rgb(233,46,42)" fg:x="884" fg:w="4"/><text x="71.4255%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="613" width="0.3221%" height="15" fill="rgb(226,86,7)" fg:x="884" fg:w="4"/><text x="71.4255%" y="623.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="71.1755%" y="597" width="0.3221%" height="15" fill="rgb(239,226,21)" fg:x="884" fg:w="4"/><text x="71.4255%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="581" width="0.3221%" height="15" fill="rgb(244,137,22)" fg:x="884" fg:w="4"/><text x="71.4255%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="565" width="0.3221%" height="15" fill="rgb(211,139,35)" fg:x="884" fg:w="4"/><text x="71.4255%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="549" width="0.3221%" height="15" fill="rgb(214,62,50)" fg:x="884" fg:w="4"/><text x="71.4255%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="71.1755%" y="533" width="0.3221%" height="15" fill="rgb(212,113,44)" fg:x="884" fg:w="4"/><text x="71.4255%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="71.1755%" y="517" width="0.3221%" height="15" fill="rgb(226,150,43)" fg:x="884" fg:w="4"/><text x="71.4255%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.3366%" y="501" width="0.1610%" height="15" fill="rgb(250,71,37)" fg:x="886" fg:w="2"/><text x="71.5866%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.3366%" y="485" width="0.1610%" height="15" fill="rgb(219,76,19)" fg:x="886" fg:w="2"/><text x="71.5866%" y="495.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="71.3366%" y="469" width="0.1610%" height="15" fill="rgb(250,39,11)" fg:x="886" fg:w="2"/><text x="71.5866%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="71.3366%" y="453" width="0.1610%" height="15" fill="rgb(230,64,31)" fg:x="886" fg:w="2"/><text x="71.5866%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="71.3366%" y="437" width="0.1610%" height="15" fill="rgb(208,222,23)" fg:x="886" fg:w="2"/><text x="71.5866%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="71.3366%" y="421" width="0.1610%" height="15" fill="rgb(227,125,18)" fg:x="886" fg:w="2"/><text x="71.5866%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="71.3366%" y="405" width="0.1610%" height="15" fill="rgb(234,210,9)" fg:x="886" fg:w="2"/><text x="71.5866%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="71.3366%" y="389" width="0.1610%" height="15" fill="rgb(217,127,24)" fg:x="886" fg:w="2"/><text x="71.5866%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.4171%" y="373" width="0.0805%" height="15" fill="rgb(239,141,48)" fg:x="887" fg:w="1"/><text x="71.6671%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="71.4171%" y="357" width="0.0805%" height="15" fill="rgb(227,109,8)" fg:x="887" fg:w="1"/><text x="71.6671%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.4171%" y="341" width="0.0805%" height="15" fill="rgb(235,184,23)" fg:x="887" fg:w="1"/><text x="71.6671%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="71.4171%" y="325" width="0.0805%" height="15" fill="rgb(227,226,48)" fg:x="887" fg:w="1"/><text x="71.6671%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="71.4171%" y="309" width="0.0805%" height="15" fill="rgb(206,150,11)" fg:x="887" fg:w="1"/><text x="71.6671%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="71.4171%" y="293" width="0.0805%" height="15" fill="rgb(254,2,33)" fg:x="887" fg:w="1"/><text x="71.6671%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.4171%" y="277" width="0.0805%" height="15" fill="rgb(243,160,20)" fg:x="887" fg:w="1"/><text x="71.6671%" y="287.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (220 samples, 17.71%)</title><rect x="54.1063%" y="757" width="17.7134%" height="15" fill="rgb(218,208,30)" fg:x="672" fg:w="220"/><text x="54.3563%" y="767.50">engine::session::Session::ev..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (220 samples, 17.71%)</title><rect x="54.1063%" y="741" width="17.7134%" height="15" fill="rgb(224,120,49)" fg:x="672" fg:w="220"/><text x="54.3563%" y="751.50">engine::session::Session::ev..</text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (4 samples, 0.32%)</title><rect x="71.4976%" y="725" width="0.3221%" height="15" fill="rgb(246,12,2)" fg:x="888" fg:w="4"/><text x="71.7476%" y="735.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="71.5781%" y="709" width="0.2415%" height="15" fill="rgb(236,117,3)" fg:x="889" fg:w="3"/><text x="71.8281%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="71.5781%" y="693" width="0.2415%" height="15" fill="rgb(216,128,52)" fg:x="889" fg:w="3"/><text x="71.8281%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.5781%" y="677" width="0.2415%" height="15" fill="rgb(246,145,19)" fg:x="889" fg:w="3"/><text x="71.8281%" y="687.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.6586%" y="661" width="0.1610%" height="15" fill="rgb(222,11,46)" fg:x="890" fg:w="2"/><text x="71.9086%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6586%" y="645" width="0.1610%" height="15" fill="rgb(245,82,36)" fg:x="890" fg:w="2"/><text x="71.9086%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.6586%" y="629" width="0.1610%" height="15" fill="rgb(250,73,51)" fg:x="890" fg:w="2"/><text x="71.9086%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6586%" y="613" width="0.1610%" height="15" fill="rgb(221,189,23)" fg:x="890" fg:w="2"/><text x="71.9086%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.6586%" y="597" width="0.1610%" height="15" fill="rgb(210,33,7)" fg:x="890" fg:w="2"/><text x="71.9086%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.6586%" y="581" width="0.1610%" height="15" fill="rgb(210,107,22)" fg:x="890" fg:w="2"/><text x="71.9086%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (893 samples, 71.90%)</title><rect x="0.0000%" y="805" width="71.9002%" height="15" fill="rgb(222,116,37)" fg:x="0" fg:w="893"/><text x="0.2500%" y="815.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (893 samples, 71.90%)</title><rect x="0.0000%" y="789" width="71.9002%" height="15" fill="rgb(254,17,48)" fg:x="0" fg:w="893"/><text x="0.2500%" y="799.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (893 samples, 71.90%)</title><rect x="0.0000%" y="773" width="71.9002%" height="15" fill="rgb(224,36,32)" fg:x="0" fg:w="893"/><text x="0.2500%" y="783.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="71.8196%" y="757" width="0.0805%" height="15" fill="rgb(232,90,46)" fg:x="892" fg:w="1"/><text x="72.0696%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1417%" y="709" width="0.0805%" height="15" fill="rgb(241,66,40)" fg:x="896" fg:w="1"/><text x="72.3917%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3833%" y="645" width="0.0805%" height="15" fill="rgb(249,184,29)" fg:x="899" fg:w="1"/><text x="72.6333%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4638%" y="629" width="0.0805%" height="15" fill="rgb(231,181,1)" fg:x="900" fg:w="1"/><text x="72.7138%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="71.9807%" y="757" width="0.6441%" height="15" fill="rgb(224,94,2)" fg:x="894" fg:w="8"/><text x="72.2307%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (6 samples, 0.48%)</title><rect x="72.1417%" y="741" width="0.4831%" height="15" fill="rgb(229,170,15)" fg:x="896" fg:w="6"/><text x="72.3917%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="72.1417%" y="725" width="0.4831%" height="15" fill="rgb(240,127,35)" fg:x="896" fg:w="6"/><text x="72.3917%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="72.2222%" y="709" width="0.4026%" height="15" fill="rgb(248,196,34)" fg:x="897" fg:w="5"/><text x="72.4722%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="72.2222%" y="693" width="0.4026%" height="15" fill="rgb(236,137,7)" fg:x="897" fg:w="5"/><text x="72.4722%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="72.3027%" y="677" width="0.3221%" height="15" fill="rgb(235,127,16)" fg:x="898" fg:w="4"/><text x="72.5527%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="72.3027%" y="661" width="0.3221%" height="15" fill="rgb(250,192,54)" fg:x="898" fg:w="4"/><text x="72.5527%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.4638%" y="645" width="0.1610%" height="15" fill="rgb(218,98,20)" fg:x="900" fg:w="2"/><text x="72.7138%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5443%" y="629" width="0.0805%" height="15" fill="rgb(230,176,47)" fg:x="901" fg:w="1"/><text x="72.7943%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5443%" y="613" width="0.0805%" height="15" fill="rgb(244,2,33)" fg:x="901" fg:w="1"/><text x="72.7943%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.5443%" y="597" width="0.0805%" height="15" fill="rgb(231,100,17)" fg:x="901" fg:w="1"/><text x="72.7943%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5443%" y="581" width="0.0805%" height="15" fill="rgb(245,23,12)" fg:x="901" fg:w="1"/><text x="72.7943%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.7053%" y="661" width="0.0805%" height="15" fill="rgb(249,55,22)" fg:x="903" fg:w="1"/><text x="72.9553%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.7053%" y="645" width="0.0805%" height="15" fill="rgb(207,134,9)" fg:x="903" fg:w="1"/><text x="72.9553%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.7053%" y="629" width="0.0805%" height="15" fill="rgb(218,134,0)" fg:x="903" fg:w="1"/><text x="72.9553%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.7053%" y="613" width="0.0805%" height="15" fill="rgb(213,212,33)" fg:x="903" fg:w="1"/><text x="72.9553%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7053%" y="597" width="0.0805%" height="15" fill="rgb(252,106,18)" fg:x="903" fg:w="1"/><text x="72.9553%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7053%" y="581" width="0.0805%" height="15" fill="rgb(208,126,42)" fg:x="903" fg:w="1"/><text x="72.9553%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.7053%" y="565" width="0.0805%" height="15" fill="rgb(246,175,29)" fg:x="903" fg:w="1"/><text x="72.9553%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.7053%" y="549" width="0.0805%" height="15" fill="rgb(215,13,50)" fg:x="903" fg:w="1"/><text x="72.9553%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.7053%" y="533" width="0.0805%" height="15" fill="rgb(216,172,15)" fg:x="903" fg:w="1"/><text x="72.9553%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.7053%" y="517" width="0.0805%" height="15" fill="rgb(212,103,13)" fg:x="903" fg:w="1"/><text x="72.9553%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.7053%" y="501" width="0.0805%" height="15" fill="rgb(231,171,36)" fg:x="903" fg:w="1"/><text x="72.9553%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.7053%" y="485" width="0.0805%" height="15" fill="rgb(250,123,20)" fg:x="903" fg:w="1"/><text x="72.9553%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.7053%" y="469" width="0.0805%" height="15" fill="rgb(212,53,50)" fg:x="903" fg:w="1"/><text x="72.9553%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.7053%" y="453" width="0.0805%" height="15" fill="rgb(243,54,12)" fg:x="903" fg:w="1"/><text x="72.9553%" y="463.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="72.7053%" y="437" width="0.0805%" height="15" fill="rgb(234,101,34)" fg:x="903" fg:w="1"/><text x="72.9553%" y="447.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="72.7053%" y="421" width="0.0805%" height="15" fill="rgb(254,67,22)" fg:x="903" fg:w="1"/><text x="72.9553%" y="431.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="72.7053%" y="405" width="0.0805%" height="15" fill="rgb(250,35,47)" fg:x="903" fg:w="1"/><text x="72.9553%" y="415.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="72.7858%" y="645" width="0.1610%" height="15" fill="rgb(226,126,38)" fg:x="904" fg:w="2"/><text x="73.0358%" y="655.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="72.7858%" y="629" width="0.1610%" height="15" fill="rgb(216,138,53)" fg:x="904" fg:w="2"/><text x="73.0358%" y="639.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="72.8663%" y="613" width="0.0805%" height="15" fill="rgb(246,199,43)" fg:x="905" fg:w="1"/><text x="73.1163%" y="623.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="72.9469%" y="645" width="0.3221%" height="15" fill="rgb(232,125,11)" fg:x="906" fg:w="4"/><text x="73.1969%" y="655.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="72.9469%" y="629" width="0.3221%" height="15" fill="rgb(218,219,45)" fg:x="906" fg:w="4"/><text x="73.1969%" y="639.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="72.9469%" y="613" width="0.3221%" height="15" fill="rgb(216,102,54)" fg:x="906" fg:w="4"/><text x="73.1969%" y="623.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="72.9469%" y="597" width="0.3221%" height="15" fill="rgb(250,228,7)" fg:x="906" fg:w="4"/><text x="73.1969%" y="607.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="72.9469%" y="581" width="0.3221%" height="15" fill="rgb(226,125,25)" fg:x="906" fg:w="4"/><text x="73.1969%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.64%)</title><rect x="72.7053%" y="677" width="0.6441%" height="15" fill="rgb(224,165,27)" fg:x="903" fg:w="8"/><text x="72.9553%" y="687.50"></text></g><g><title>libloading::safe::Library::new (7 samples, 0.56%)</title><rect x="72.7858%" y="661" width="0.5636%" height="15" fill="rgb(233,86,3)" fg:x="904" fg:w="7"/><text x="73.0358%" y="671.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="73.2689%" y="645" width="0.0805%" height="15" fill="rgb(228,116,20)" fg:x="910" fg:w="1"/><text x="73.5189%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.89%)</title><rect x="72.6248%" y="693" width="0.8857%" height="15" fill="rgb(209,192,17)" fg:x="902" fg:w="11"/><text x="72.8748%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="73.3494%" y="677" width="0.1610%" height="15" fill="rgb(224,88,34)" fg:x="911" fg:w="2"/><text x="73.5994%" y="687.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="73.3494%" y="661" width="0.1610%" height="15" fill="rgb(233,38,6)" fg:x="911" fg:w="2"/><text x="73.5994%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.5105%" y="661" width="0.1610%" height="15" fill="rgb(212,59,30)" fg:x="913" fg:w="2"/><text x="73.7605%" y="671.50"></text></g><g><title>engine::session::Session::initialize (15 samples, 1.21%)</title><rect x="72.6248%" y="709" width="1.2077%" height="15" fill="rgb(213,80,3)" fg:x="902" fg:w="15"/><text x="72.8748%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="73.5105%" y="693" width="0.3221%" height="15" fill="rgb(251,178,7)" fg:x="913" fg:w="4"/><text x="73.7605%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="73.5105%" y="677" width="0.3221%" height="15" fill="rgb(213,154,26)" fg:x="913" fg:w="4"/><text x="73.7605%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="73.6715%" y="661" width="0.1610%" height="15" fill="rgb(238,165,49)" fg:x="915" fg:w="2"/><text x="73.9215%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="73.6715%" y="645" width="0.1610%" height="15" fill="rgb(248,91,46)" fg:x="915" fg:w="2"/><text x="73.9215%" y="655.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="73.6715%" y="629" width="0.1610%" height="15" fill="rgb(244,21,52)" fg:x="915" fg:w="2"/><text x="73.9215%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="73.8325%" y="677" width="0.0805%" height="15" fill="rgb(247,122,20)" fg:x="917" fg:w="1"/><text x="74.0825%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.37%)</title><rect x="72.6248%" y="757" width="1.3688%" height="15" fill="rgb(218,27,9)" fg:x="902" fg:w="17"/><text x="72.8748%" y="767.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (17 samples, 1.37%)</title><rect x="72.6248%" y="741" width="1.3688%" height="15" fill="rgb(246,7,6)" fg:x="902" fg:w="17"/><text x="72.8748%" y="751.50"></text></g><g><title>engine::session::Session::new (17 samples, 1.37%)</title><rect x="72.6248%" y="725" width="1.3688%" height="15" fill="rgb(227,135,54)" fg:x="902" fg:w="17"/><text x="72.8748%" y="735.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="73.8325%" y="709" width="0.1610%" height="15" fill="rgb(247,14,11)" fg:x="917" fg:w="2"/><text x="74.0825%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="73.8325%" y="693" width="0.1610%" height="15" fill="rgb(206,149,34)" fg:x="917" fg:w="2"/><text x="74.0825%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.9130%" y="677" width="0.0805%" height="15" fill="rgb(227,228,4)" fg:x="918" fg:w="1"/><text x="74.1630%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9130%" y="661" width="0.0805%" height="15" fill="rgb(238,218,28)" fg:x="918" fg:w="1"/><text x="74.1630%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.9130%" y="645" width="0.0805%" height="15" fill="rgb(252,86,40)" fg:x="918" fg:w="1"/><text x="74.1630%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.9936%" y="741" width="0.0805%" height="15" fill="rgb(251,225,11)" fg:x="919" fg:w="1"/><text x="74.2436%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9936%" y="725" width="0.0805%" height="15" fill="rgb(206,46,49)" fg:x="919" fg:w="1"/><text x="74.2436%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="74.0741%" y="725" width="0.0805%" height="15" fill="rgb(245,128,24)" fg:x="920" fg:w="1"/><text x="74.3241%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0741%" y="709" width="0.0805%" height="15" fill="rgb(219,177,34)" fg:x="920" fg:w="1"/><text x="74.3241%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.3156%" y="645" width="0.0805%" height="15" fill="rgb(218,60,48)" fg:x="923" fg:w="1"/><text x="74.5656%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.3961%" y="629" width="0.0805%" height="15" fill="rgb(221,11,5)" fg:x="924" fg:w="1"/><text x="74.6461%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.3961%" y="613" width="0.0805%" height="15" fill="rgb(220,148,13)" fg:x="924" fg:w="1"/><text x="74.6461%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.3961%" y="597" width="0.0805%" height="15" fill="rgb(210,16,3)" fg:x="924" fg:w="1"/><text x="74.6461%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3961%" y="581" width="0.0805%" height="15" fill="rgb(236,80,2)" fg:x="924" fg:w="1"/><text x="74.6461%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="74.3961%" y="645" width="0.1610%" height="15" fill="rgb(239,129,19)" fg:x="924" fg:w="2"/><text x="74.6461%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.4767%" y="629" width="0.0805%" height="15" fill="rgb(220,106,35)" fg:x="925" fg:w="1"/><text x="74.7267%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.6377%" y="613" width="0.0805%" height="15" fill="rgb(252,139,45)" fg:x="927" fg:w="1"/><text x="74.8877%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6377%" y="597" width="0.0805%" height="15" fill="rgb(229,8,36)" fg:x="927" fg:w="1"/><text x="74.8877%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.6377%" y="581" width="0.0805%" height="15" fill="rgb(230,126,33)" fg:x="927" fg:w="1"/><text x="74.8877%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.6377%" y="565" width="0.0805%" height="15" fill="rgb(239,140,21)" fg:x="927" fg:w="1"/><text x="74.8877%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.6377%" y="549" width="0.0805%" height="15" fill="rgb(254,104,9)" fg:x="927" fg:w="1"/><text x="74.8877%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.6377%" y="533" width="0.0805%" height="15" fill="rgb(239,52,14)" fg:x="927" fg:w="1"/><text x="74.8877%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="74.7182%" y="613" width="0.3221%" height="15" fill="rgb(208,227,44)" fg:x="928" fg:w="4"/><text x="74.9682%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.7987%" y="597" width="0.2415%" height="15" fill="rgb(246,18,19)" fg:x="929" fg:w="3"/><text x="75.0487%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="74.7987%" y="581" width="0.2415%" height="15" fill="rgb(235,228,25)" fg:x="929" fg:w="3"/><text x="75.0487%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="74.8792%" y="565" width="0.1610%" height="15" fill="rgb(240,156,20)" fg:x="930" fg:w="2"/><text x="75.1292%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.9597%" y="549" width="0.0805%" height="15" fill="rgb(224,8,20)" fg:x="931" fg:w="1"/><text x="75.2097%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.9597%" y="533" width="0.0805%" height="15" fill="rgb(214,12,52)" fg:x="931" fg:w="1"/><text x="75.2097%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.9597%" y="517" width="0.0805%" height="15" fill="rgb(211,220,47)" fg:x="931" fg:w="1"/><text x="75.2097%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.1208%" y="597" width="0.1610%" height="15" fill="rgb(250,173,5)" fg:x="933" fg:w="2"/><text x="75.3708%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.1208%" y="581" width="0.1610%" height="15" fill="rgb(250,125,52)" fg:x="933" fg:w="2"/><text x="75.3708%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2013%" y="565" width="0.0805%" height="15" fill="rgb(209,133,18)" fg:x="934" fg:w="1"/><text x="75.4513%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.2818%" y="581" width="0.0805%" height="15" fill="rgb(216,173,22)" fg:x="935" fg:w="1"/><text x="75.5318%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2818%" y="565" width="0.0805%" height="15" fill="rgb(205,3,22)" fg:x="935" fg:w="1"/><text x="75.5318%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="74.5572%" y="629" width="0.9662%" height="15" fill="rgb(248,22,20)" fg:x="926" fg:w="12"/><text x="74.8072%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="75.0403%" y="613" width="0.4831%" height="15" fill="rgb(233,6,29)" fg:x="932" fg:w="6"/><text x="75.2903%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.2818%" y="597" width="0.2415%" height="15" fill="rgb(240,22,54)" fg:x="935" fg:w="3"/><text x="75.5318%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3623%" y="581" width="0.1610%" height="15" fill="rgb(231,133,32)" fg:x="936" fg:w="2"/><text x="75.6123%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3623%" y="565" width="0.1610%" height="15" fill="rgb(248,193,4)" fg:x="936" fg:w="2"/><text x="75.6123%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.3623%" y="549" width="0.1610%" height="15" fill="rgb(211,178,46)" fg:x="936" fg:w="2"/><text x="75.6123%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.3623%" y="533" width="0.1610%" height="15" fill="rgb(224,5,42)" fg:x="936" fg:w="2"/><text x="75.6123%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.3623%" y="517" width="0.1610%" height="15" fill="rgb(239,176,25)" fg:x="936" fg:w="2"/><text x="75.6123%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="75.3623%" y="501" width="0.1610%" height="15" fill="rgb(245,187,50)" fg:x="936" fg:w="2"/><text x="75.6123%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="75.3623%" y="485" width="0.1610%" height="15" fill="rgb(248,24,15)" fg:x="936" fg:w="2"/><text x="75.6123%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="75.3623%" y="469" width="0.1610%" height="15" fill="rgb(205,166,13)" fg:x="936" fg:w="2"/><text x="75.6123%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="75.3623%" y="453" width="0.1610%" height="15" fill="rgb(208,114,23)" fg:x="936" fg:w="2"/><text x="75.6123%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.37%)</title><rect x="74.2351%" y="661" width="1.3688%" height="15" fill="rgb(239,127,18)" fg:x="922" fg:w="17"/><text x="74.4851%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="74.5572%" y="645" width="1.0467%" height="15" fill="rgb(219,154,28)" fg:x="926" fg:w="13"/><text x="74.8072%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5233%" y="629" width="0.0805%" height="15" fill="rgb(225,157,23)" fg:x="938" fg:w="1"/><text x="75.7733%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.5233%" y="613" width="0.0805%" height="15" fill="rgb(219,8,6)" fg:x="938" fg:w="1"/><text x="75.7733%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5233%" y="597" width="0.0805%" height="15" fill="rgb(212,47,6)" fg:x="938" fg:w="1"/><text x="75.7733%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5233%" y="581" width="0.0805%" height="15" fill="rgb(224,190,4)" fg:x="938" fg:w="1"/><text x="75.7733%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6039%" y="613" width="0.0805%" height="15" fill="rgb(239,183,29)" fg:x="939" fg:w="1"/><text x="75.8539%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.6844%" y="581" width="0.0805%" height="15" fill="rgb(213,57,7)" fg:x="940" fg:w="1"/><text x="75.9344%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6844%" y="565" width="0.0805%" height="15" fill="rgb(216,148,1)" fg:x="940" fg:w="1"/><text x="75.9344%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9259%" y="533" width="0.0805%" height="15" fill="rgb(236,182,29)" fg:x="943" fg:w="1"/><text x="76.1759%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9259%" y="517" width="0.0805%" height="15" fill="rgb(244,120,48)" fg:x="943" fg:w="1"/><text x="76.1759%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="75.6039%" y="661" width="0.4831%" height="15" fill="rgb(206,71,34)" fg:x="939" fg:w="6"/><text x="75.8539%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="75.6039%" y="645" width="0.4831%" height="15" fill="rgb(242,32,6)" fg:x="939" fg:w="6"/><text x="75.8539%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="75.6039%" y="629" width="0.4831%" height="15" fill="rgb(241,35,3)" fg:x="939" fg:w="6"/><text x="75.8539%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="75.6844%" y="613" width="0.4026%" height="15" fill="rgb(222,62,19)" fg:x="940" fg:w="5"/><text x="75.9344%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="75.6844%" y="597" width="0.4026%" height="15" fill="rgb(223,110,41)" fg:x="940" fg:w="5"/><text x="75.9344%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.7649%" y="581" width="0.3221%" height="15" fill="rgb(208,224,4)" fg:x="941" fg:w="4"/><text x="76.0149%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.7649%" y="565" width="0.3221%" height="15" fill="rgb(241,137,19)" fg:x="941" fg:w="4"/><text x="76.0149%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.8454%" y="549" width="0.2415%" height="15" fill="rgb(244,24,17)" fg:x="942" fg:w="3"/><text x="76.0954%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.0064%" y="533" width="0.0805%" height="15" fill="rgb(245,178,49)" fg:x="944" fg:w="1"/><text x="76.2564%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="76.0064%" y="517" width="0.0805%" height="15" fill="rgb(219,160,38)" fg:x="944" fg:w="1"/><text x="76.2564%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0870%" y="613" width="0.0805%" height="15" fill="rgb(228,137,14)" fg:x="945" fg:w="1"/><text x="76.3370%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1675%" y="613" width="0.0805%" height="15" fill="rgb(237,134,11)" fg:x="946" fg:w="1"/><text x="76.4175%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1675%" y="597" width="0.0805%" height="15" fill="rgb(211,126,44)" fg:x="946" fg:w="1"/><text x="76.4175%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.1675%" y="581" width="0.0805%" height="15" fill="rgb(226,171,33)" fg:x="946" fg:w="1"/><text x="76.4175%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2480%" y="613" width="0.0805%" height="15" fill="rgb(253,99,13)" fg:x="947" fg:w="1"/><text x="76.4980%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2480%" y="597" width="0.0805%" height="15" fill="rgb(244,48,7)" fg:x="947" fg:w="1"/><text x="76.4980%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2480%" y="581" width="0.0805%" height="15" fill="rgb(244,217,54)" fg:x="947" fg:w="1"/><text x="76.4980%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3285%" y="613" width="0.0805%" height="15" fill="rgb(224,15,18)" fg:x="948" fg:w="1"/><text x="76.5785%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3285%" y="597" width="0.0805%" height="15" fill="rgb(244,99,12)" fg:x="948" fg:w="1"/><text x="76.5785%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.4090%" y="565" width="0.0805%" height="15" fill="rgb(233,226,8)" fg:x="949" fg:w="1"/><text x="76.6590%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4090%" y="549" width="0.0805%" height="15" fill="rgb(229,211,3)" fg:x="949" fg:w="1"/><text x="76.6590%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4090%" y="533" width="0.0805%" height="15" fill="rgb(216,140,21)" fg:x="949" fg:w="1"/><text x="76.6590%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6506%" y="501" width="0.0805%" height="15" fill="rgb(234,122,30)" fg:x="952" fg:w="1"/><text x="76.9006%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="76.7311%" y="485" width="0.1610%" height="15" fill="rgb(236,25,46)" fg:x="953" fg:w="2"/><text x="76.9811%" y="495.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.90%)</title><rect x="74.0741%" y="741" width="2.8986%" height="15" fill="rgb(217,52,54)" fg:x="920" fg:w="36"/><text x="74.3241%" y="751.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.82%)</title><rect x="74.1546%" y="725" width="2.8180%" height="15" fill="rgb(222,29,26)" fg:x="921" fg:w="35"/><text x="74.4046%" y="735.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.82%)</title><rect x="74.1546%" y="709" width="2.8180%" height="15" fill="rgb(216,177,29)" fg:x="921" fg:w="35"/><text x="74.4046%" y="719.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.82%)</title><rect x="74.1546%" y="693" width="2.8180%" height="15" fill="rgb(247,136,51)" fg:x="921" fg:w="35"/><text x="74.4046%" y="703.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (34 samples, 2.74%)</title><rect x="74.2351%" y="677" width="2.7375%" height="15" fill="rgb(231,47,47)" fg:x="922" fg:w="34"/><text x="74.4851%" y="687.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.89%)</title><rect x="76.0870%" y="661" width="0.8857%" height="15" fill="rgb(211,192,36)" fg:x="945" fg:w="11"/><text x="76.3370%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.89%)</title><rect x="76.0870%" y="645" width="0.8857%" height="15" fill="rgb(229,156,32)" fg:x="945" fg:w="11"/><text x="76.3370%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.89%)</title><rect x="76.0870%" y="629" width="0.8857%" height="15" fill="rgb(248,213,20)" fg:x="945" fg:w="11"/><text x="76.3370%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="76.4090%" y="613" width="0.5636%" height="15" fill="rgb(217,64,7)" fg:x="949" fg:w="7"/><text x="76.6590%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="76.4090%" y="597" width="0.5636%" height="15" fill="rgb(232,142,8)" fg:x="949" fg:w="7"/><text x="76.6590%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="76.4090%" y="581" width="0.5636%" height="15" fill="rgb(224,92,44)" fg:x="949" fg:w="7"/><text x="76.6590%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="76.4895%" y="565" width="0.4831%" height="15" fill="rgb(214,169,17)" fg:x="950" fg:w="6"/><text x="76.7395%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="76.5700%" y="549" width="0.4026%" height="15" fill="rgb(210,59,37)" fg:x="951" fg:w="5"/><text x="76.8200%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="76.5700%" y="533" width="0.4026%" height="15" fill="rgb(214,116,48)" fg:x="951" fg:w="5"/><text x="76.8200%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.6506%" y="517" width="0.3221%" height="15" fill="rgb(244,191,6)" fg:x="952" fg:w="4"/><text x="76.9006%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="76.7311%" y="501" width="0.2415%" height="15" fill="rgb(241,50,52)" fg:x="953" fg:w="3"/><text x="76.9811%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.8921%" y="485" width="0.0805%" height="15" fill="rgb(236,75,39)" fg:x="955" fg:w="1"/><text x="77.1421%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.8921%" y="469" width="0.0805%" height="15" fill="rgb(236,99,0)" fg:x="955" fg:w="1"/><text x="77.1421%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.8921%" y="453" width="0.0805%" height="15" fill="rgb(207,202,15)" fg:x="955" fg:w="1"/><text x="77.1421%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.9726%" y="693" width="0.0805%" height="15" fill="rgb(233,207,14)" fg:x="956" fg:w="1"/><text x="77.2226%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="76.9726%" y="677" width="0.0805%" height="15" fill="rgb(226,27,51)" fg:x="956" fg:w="1"/><text x="77.2226%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="76.9726%" y="725" width="0.3221%" height="15" fill="rgb(206,104,42)" fg:x="956" fg:w="4"/><text x="77.2226%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="76.9726%" y="709" width="0.3221%" height="15" fill="rgb(212,225,4)" fg:x="956" fg:w="4"/><text x="77.2226%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="77.0531%" y="693" width="0.2415%" height="15" fill="rgb(233,96,42)" fg:x="957" fg:w="3"/><text x="77.3031%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.0531%" y="677" width="0.2415%" height="15" fill="rgb(229,21,32)" fg:x="957" fg:w="3"/><text x="77.3031%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.0531%" y="661" width="0.2415%" height="15" fill="rgb(226,216,24)" fg:x="957" fg:w="3"/><text x="77.3031%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="77.0531%" y="645" width="0.2415%" height="15" fill="rgb(221,163,17)" fg:x="957" fg:w="3"/><text x="77.3031%" y="655.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="77.0531%" y="629" width="0.2415%" height="15" fill="rgb(216,216,42)" fg:x="957" fg:w="3"/><text x="77.3031%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.2947%" y="709" width="0.0805%" height="15" fill="rgb(240,118,7)" fg:x="960" fg:w="1"/><text x="77.5447%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.2947%" y="693" width="0.0805%" height="15" fill="rgb(221,67,37)" fg:x="960" fg:w="1"/><text x="77.5447%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.2947%" y="677" width="0.0805%" height="15" fill="rgb(241,32,44)" fg:x="960" fg:w="1"/><text x="77.5447%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.2947%" y="661" width="0.0805%" height="15" fill="rgb(235,204,43)" fg:x="960" fg:w="1"/><text x="77.5447%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2947%" y="645" width="0.0805%" height="15" fill="rgb(213,116,10)" fg:x="960" fg:w="1"/><text x="77.5447%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2947%" y="629" width="0.0805%" height="15" fill="rgb(239,15,48)" fg:x="960" fg:w="1"/><text x="77.5447%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2947%" y="613" width="0.0805%" height="15" fill="rgb(207,123,36)" fg:x="960" fg:w="1"/><text x="77.5447%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2947%" y="597" width="0.0805%" height="15" fill="rgb(209,103,30)" fg:x="960" fg:w="1"/><text x="77.5447%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2947%" y="581" width="0.0805%" height="15" fill="rgb(238,100,19)" fg:x="960" fg:w="1"/><text x="77.5447%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.2947%" y="565" width="0.0805%" height="15" fill="rgb(244,30,14)" fg:x="960" fg:w="1"/><text x="77.5447%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="77.3752%" y="709" width="0.0805%" height="15" fill="rgb(249,174,6)" fg:x="961" fg:w="1"/><text x="77.6252%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3752%" y="693" width="0.0805%" height="15" fill="rgb(235,213,41)" fg:x="961" fg:w="1"/><text x="77.6252%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3752%" y="677" width="0.0805%" height="15" fill="rgb(213,118,6)" fg:x="961" fg:w="1"/><text x="77.6252%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3752%" y="661" width="0.0805%" height="15" fill="rgb(235,44,51)" fg:x="961" fg:w="1"/><text x="77.6252%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3752%" y="645" width="0.0805%" height="15" fill="rgb(217,9,53)" fg:x="961" fg:w="1"/><text x="77.6252%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3752%" y="629" width="0.0805%" height="15" fill="rgb(237,172,34)" fg:x="961" fg:w="1"/><text x="77.6252%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3752%" y="613" width="0.0805%" height="15" fill="rgb(206,206,11)" fg:x="961" fg:w="1"/><text x="77.6252%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3752%" y="597" width="0.0805%" height="15" fill="rgb(214,149,29)" fg:x="961" fg:w="1"/><text x="77.6252%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.3752%" y="581" width="0.0805%" height="15" fill="rgb(208,123,3)" fg:x="961" fg:w="1"/><text x="77.6252%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.3752%" y="565" width="0.0805%" height="15" fill="rgb(229,126,4)" fg:x="961" fg:w="1"/><text x="77.6252%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.3752%" y="549" width="0.0805%" height="15" fill="rgb(222,92,36)" fg:x="961" fg:w="1"/><text x="77.6252%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.3752%" y="533" width="0.0805%" height="15" fill="rgb(216,39,41)" fg:x="961" fg:w="1"/><text x="77.6252%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.3752%" y="517" width="0.0805%" height="15" fill="rgb(253,127,28)" fg:x="961" fg:w="1"/><text x="77.6252%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3752%" y="501" width="0.0805%" height="15" fill="rgb(249,152,51)" fg:x="961" fg:w="1"/><text x="77.6252%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.4557%" y="549" width="0.0805%" height="15" fill="rgb(209,123,42)" fg:x="962" fg:w="1"/><text x="77.7057%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4557%" y="533" width="0.0805%" height="15" fill="rgb(241,118,22)" fg:x="962" fg:w="1"/><text x="77.7057%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.4557%" y="613" width="0.2415%" height="15" fill="rgb(208,25,7)" fg:x="962" fg:w="3"/><text x="77.7057%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.4557%" y="597" width="0.2415%" height="15" fill="rgb(243,144,39)" fg:x="962" fg:w="3"/><text x="77.7057%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.4557%" y="581" width="0.2415%" height="15" fill="rgb(250,50,5)" fg:x="962" fg:w="3"/><text x="77.7057%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="77.4557%" y="565" width="0.2415%" height="15" fill="rgb(207,67,11)" fg:x="962" fg:w="3"/><text x="77.7057%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.5362%" y="549" width="0.1610%" height="15" fill="rgb(245,204,40)" fg:x="963" fg:w="2"/><text x="77.7862%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.4557%" y="693" width="0.3221%" height="15" fill="rgb(238,228,24)" fg:x="962" fg:w="4"/><text x="77.7057%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.4557%" y="677" width="0.3221%" height="15" fill="rgb(217,116,22)" fg:x="962" fg:w="4"/><text x="77.7057%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="77.4557%" y="661" width="0.3221%" height="15" fill="rgb(234,98,12)" fg:x="962" fg:w="4"/><text x="77.7057%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="77.4557%" y="645" width="0.3221%" height="15" fill="rgb(242,170,50)" fg:x="962" fg:w="4"/><text x="77.7057%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="77.4557%" y="629" width="0.3221%" height="15" fill="rgb(235,7,5)" fg:x="962" fg:w="4"/><text x="77.7057%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6973%" y="613" width="0.0805%" height="15" fill="rgb(241,114,28)" fg:x="965" fg:w="1"/><text x="77.9473%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6973%" y="597" width="0.0805%" height="15" fill="rgb(246,112,42)" fg:x="965" fg:w="1"/><text x="77.9473%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.6973%" y="581" width="0.0805%" height="15" fill="rgb(248,228,14)" fg:x="965" fg:w="1"/><text x="77.9473%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6973%" y="565" width="0.0805%" height="15" fill="rgb(208,133,18)" fg:x="965" fg:w="1"/><text x="77.9473%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.6973%" y="549" width="0.0805%" height="15" fill="rgb(207,35,49)" fg:x="965" fg:w="1"/><text x="77.9473%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.6973%" y="533" width="0.0805%" height="15" fill="rgb(205,68,36)" fg:x="965" fg:w="1"/><text x="77.9473%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.6973%" y="517" width="0.0805%" height="15" fill="rgb(245,62,40)" fg:x="965" fg:w="1"/><text x="77.9473%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6973%" y="501" width="0.0805%" height="15" fill="rgb(228,27,24)" fg:x="965" fg:w="1"/><text x="77.9473%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="77.4557%" y="709" width="0.4831%" height="15" fill="rgb(253,19,12)" fg:x="962" fg:w="6"/><text x="77.7057%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="77.7778%" y="693" width="0.1610%" height="15" fill="rgb(232,28,20)" fg:x="966" fg:w="2"/><text x="78.0278%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.8583%" y="677" width="0.0805%" height="15" fill="rgb(218,35,51)" fg:x="967" fg:w="1"/><text x="78.1083%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (13 samples, 1.05%)</title><rect x="76.9726%" y="741" width="1.0467%" height="15" fill="rgb(212,90,40)" fg:x="956" fg:w="13"/><text x="77.2226%" y="751.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="77.2947%" y="725" width="0.7246%" height="15" fill="rgb(220,172,12)" fg:x="960" fg:w="9"/><text x="77.5447%" y="735.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="77.9388%" y="709" width="0.0805%" height="15" fill="rgb(226,159,20)" fg:x="968" fg:w="1"/><text x="78.1888%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.9388%" y="693" width="0.0805%" height="15" fill="rgb(234,205,16)" fg:x="968" fg:w="1"/><text x="78.1888%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9388%" y="677" width="0.0805%" height="15" fill="rgb(207,9,39)" fg:x="968" fg:w="1"/><text x="78.1888%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.9388%" y="661" width="0.0805%" height="15" fill="rgb(249,143,15)" fg:x="968" fg:w="1"/><text x="78.1888%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0998%" y="661" width="0.1610%" height="15" fill="rgb(253,133,29)" fg:x="970" fg:w="2"/><text x="78.3498%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0998%" y="645" width="0.1610%" height="15" fill="rgb(221,187,0)" fg:x="970" fg:w="2"/><text x="78.3498%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0998%" y="629" width="0.1610%" height="15" fill="rgb(205,204,26)" fg:x="970" fg:w="2"/><text x="78.3498%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.0998%" y="613" width="0.1610%" height="15" fill="rgb(224,68,54)" fg:x="970" fg:w="2"/><text x="78.3498%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1804%" y="597" width="0.0805%" height="15" fill="rgb(209,67,4)" fg:x="971" fg:w="1"/><text x="78.4304%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2609%" y="661" width="0.0805%" height="15" fill="rgb(228,229,18)" fg:x="972" fg:w="1"/><text x="78.5109%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="78.0998%" y="709" width="0.3221%" height="15" fill="rgb(231,89,13)" fg:x="970" fg:w="4"/><text x="78.3498%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="78.0998%" y="693" width="0.3221%" height="15" fill="rgb(210,182,18)" fg:x="970" fg:w="4"/><text x="78.3498%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="78.0998%" y="677" width="0.3221%" height="15" fill="rgb(240,105,2)" fg:x="970" fg:w="4"/><text x="78.3498%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3414%" y="661" width="0.0805%" height="15" fill="rgb(207,170,50)" fg:x="973" fg:w="1"/><text x="78.5914%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3414%" y="645" width="0.0805%" height="15" fill="rgb(232,133,24)" fg:x="973" fg:w="1"/><text x="78.5914%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3414%" y="629" width="0.0805%" height="15" fill="rgb(235,166,27)" fg:x="973" fg:w="1"/><text x="78.5914%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3414%" y="613" width="0.0805%" height="15" fill="rgb(209,19,13)" fg:x="973" fg:w="1"/><text x="78.5914%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.3414%" y="597" width="0.0805%" height="15" fill="rgb(226,79,39)" fg:x="973" fg:w="1"/><text x="78.5914%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3414%" y="581" width="0.0805%" height="15" fill="rgb(222,163,10)" fg:x="973" fg:w="1"/><text x="78.5914%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3414%" y="565" width="0.0805%" height="15" fill="rgb(214,44,19)" fg:x="973" fg:w="1"/><text x="78.5914%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3414%" y="549" width="0.0805%" height="15" fill="rgb(210,217,13)" fg:x="973" fg:w="1"/><text x="78.5914%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3414%" y="533" width="0.0805%" height="15" fill="rgb(237,61,54)" fg:x="973" fg:w="1"/><text x="78.5914%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3414%" y="517" width="0.0805%" height="15" fill="rgb(226,184,24)" fg:x="973" fg:w="1"/><text x="78.5914%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3414%" y="501" width="0.0805%" height="15" fill="rgb(223,226,4)" fg:x="973" fg:w="1"/><text x="78.5914%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3414%" y="485" width="0.0805%" height="15" fill="rgb(210,26,41)" fg:x="973" fg:w="1"/><text x="78.5914%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.4219%" y="661" width="0.0805%" height="15" fill="rgb(220,221,6)" fg:x="974" fg:w="1"/><text x="78.6719%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4219%" y="645" width="0.0805%" height="15" fill="rgb(225,89,49)" fg:x="974" fg:w="1"/><text x="78.6719%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4219%" y="629" width="0.0805%" height="15" fill="rgb(218,70,45)" fg:x="974" fg:w="1"/><text x="78.6719%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4219%" y="613" width="0.0805%" height="15" fill="rgb(238,166,21)" fg:x="974" fg:w="1"/><text x="78.6719%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4219%" y="597" width="0.0805%" height="15" fill="rgb(224,141,44)" fg:x="974" fg:w="1"/><text x="78.6719%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4219%" y="581" width="0.0805%" height="15" fill="rgb(230,12,49)" fg:x="974" fg:w="1"/><text x="78.6719%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4219%" y="565" width="0.0805%" height="15" fill="rgb(212,174,12)" fg:x="974" fg:w="1"/><text x="78.6719%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4219%" y="549" width="0.0805%" height="15" fill="rgb(246,67,9)" fg:x="974" fg:w="1"/><text x="78.6719%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.4219%" y="533" width="0.0805%" height="15" fill="rgb(239,35,23)" fg:x="974" fg:w="1"/><text x="78.6719%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.4219%" y="517" width="0.0805%" height="15" fill="rgb(211,167,0)" fg:x="974" fg:w="1"/><text x="78.6719%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.4219%" y="501" width="0.0805%" height="15" fill="rgb(225,119,45)" fg:x="974" fg:w="1"/><text x="78.6719%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.4219%" y="485" width="0.0805%" height="15" fill="rgb(210,162,6)" fg:x="974" fg:w="1"/><text x="78.6719%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.4219%" y="469" width="0.0805%" height="15" fill="rgb(208,118,35)" fg:x="974" fg:w="1"/><text x="78.6719%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.4219%" y="677" width="0.1610%" height="15" fill="rgb(239,4,53)" fg:x="974" fg:w="2"/><text x="78.6719%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.5024%" y="661" width="0.0805%" height="15" fill="rgb(213,130,21)" fg:x="975" fg:w="1"/><text x="78.7524%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.5024%" y="645" width="0.0805%" height="15" fill="rgb(235,148,0)" fg:x="975" fg:w="1"/><text x="78.7524%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.5024%" y="629" width="0.0805%" height="15" fill="rgb(244,224,18)" fg:x="975" fg:w="1"/><text x="78.7524%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="78.0193%" y="741" width="0.6441%" height="15" fill="rgb(211,214,4)" fg:x="969" fg:w="8"/><text x="78.2693%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="78.0193%" y="725" width="0.6441%" height="15" fill="rgb(206,119,25)" fg:x="969" fg:w="8"/><text x="78.2693%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.4219%" y="709" width="0.2415%" height="15" fill="rgb(243,93,47)" fg:x="974" fg:w="3"/><text x="78.6719%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="78.4219%" y="693" width="0.2415%" height="15" fill="rgb(224,194,6)" fg:x="974" fg:w="3"/><text x="78.6719%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5829%" y="677" width="0.0805%" height="15" fill="rgb(243,229,6)" fg:x="976" fg:w="1"/><text x="78.8329%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.6634%" y="725" width="0.0805%" height="15" fill="rgb(207,23,50)" fg:x="977" fg:w="1"/><text x="78.9134%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.6634%" y="709" width="0.0805%" height="15" fill="rgb(253,192,32)" fg:x="977" fg:w="1"/><text x="78.9134%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.6634%" y="693" width="0.0805%" height="15" fill="rgb(213,21,6)" fg:x="977" fg:w="1"/><text x="78.9134%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.6634%" y="677" width="0.0805%" height="15" fill="rgb(243,151,13)" fg:x="977" fg:w="1"/><text x="78.9134%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6634%" y="661" width="0.0805%" height="15" fill="rgb(233,165,41)" fg:x="977" fg:w="1"/><text x="78.9134%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6634%" y="645" width="0.0805%" height="15" fill="rgb(246,176,45)" fg:x="977" fg:w="1"/><text x="78.9134%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6634%" y="629" width="0.0805%" height="15" fill="rgb(217,170,52)" fg:x="977" fg:w="1"/><text x="78.9134%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6634%" y="613" width="0.0805%" height="15" fill="rgb(214,203,54)" fg:x="977" fg:w="1"/><text x="78.9134%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.6634%" y="597" width="0.0805%" height="15" fill="rgb(248,215,49)" fg:x="977" fg:w="1"/><text x="78.9134%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6634%" y="581" width="0.0805%" height="15" fill="rgb(208,46,10)" fg:x="977" fg:w="1"/><text x="78.9134%" y="591.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="78.7440%" y="661" width="0.0805%" height="15" fill="rgb(254,5,31)" fg:x="978" fg:w="1"/><text x="78.9940%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8245%" y="597" width="0.0805%" height="15" fill="rgb(222,104,33)" fg:x="979" fg:w="1"/><text x="79.0745%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="78.8245%" y="581" width="0.0805%" height="15" fill="rgb(248,49,16)" fg:x="979" fg:w="1"/><text x="79.0745%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="78.8245%" y="565" width="0.0805%" height="15" fill="rgb(232,198,41)" fg:x="979" fg:w="1"/><text x="79.0745%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="78.7440%" y="677" width="0.2415%" height="15" fill="rgb(214,125,3)" fg:x="978" fg:w="3"/><text x="78.9940%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="78.8245%" y="661" width="0.1610%" height="15" fill="rgb(229,220,28)" fg:x="979" fg:w="2"/><text x="79.0745%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.8245%" y="645" width="0.1610%" height="15" fill="rgb(222,64,37)" fg:x="979" fg:w="2"/><text x="79.0745%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.8245%" y="629" width="0.1610%" height="15" fill="rgb(249,184,13)" fg:x="979" fg:w="2"/><text x="79.0745%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.8245%" y="613" width="0.1610%" height="15" fill="rgb(252,176,6)" fg:x="979" fg:w="2"/><text x="79.0745%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9050%" y="597" width="0.0805%" height="15" fill="rgb(228,153,7)" fg:x="980" fg:w="1"/><text x="79.1550%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9050%" y="581" width="0.0805%" height="15" fill="rgb(242,193,5)" fg:x="980" fg:w="1"/><text x="79.1550%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9050%" y="565" width="0.0805%" height="15" fill="rgb(232,140,9)" fg:x="980" fg:w="1"/><text x="79.1550%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9050%" y="549" width="0.0805%" height="15" fill="rgb(213,222,16)" fg:x="980" fg:w="1"/><text x="79.1550%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="78.9855%" y="677" width="0.0805%" height="15" fill="rgb(222,75,50)" fg:x="981" fg:w="1"/><text x="79.2355%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.9855%" y="661" width="0.0805%" height="15" fill="rgb(205,180,2)" fg:x="981" fg:w="1"/><text x="79.2355%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.9855%" y="645" width="0.0805%" height="15" fill="rgb(216,34,7)" fg:x="981" fg:w="1"/><text x="79.2355%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.9855%" y="629" width="0.0805%" height="15" fill="rgb(253,16,32)" fg:x="981" fg:w="1"/><text x="79.2355%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.9855%" y="613" width="0.0805%" height="15" fill="rgb(208,97,28)" fg:x="981" fg:w="1"/><text x="79.2355%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="79.0660%" y="645" width="0.0805%" height="15" fill="rgb(225,92,11)" fg:x="982" fg:w="1"/><text x="79.3160%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.0660%" y="629" width="0.0805%" height="15" fill="rgb(243,38,12)" fg:x="982" fg:w="1"/><text x="79.3160%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.0660%" y="613" width="0.0805%" height="15" fill="rgb(208,139,16)" fg:x="982" fg:w="1"/><text x="79.3160%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="597" width="0.0805%" height="15" fill="rgb(227,24,9)" fg:x="982" fg:w="1"/><text x="79.3160%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0660%" y="581" width="0.0805%" height="15" fill="rgb(206,62,11)" fg:x="982" fg:w="1"/><text x="79.3160%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="565" width="0.0805%" height="15" fill="rgb(228,134,27)" fg:x="982" fg:w="1"/><text x="79.3160%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="549" width="0.0805%" height="15" fill="rgb(205,55,33)" fg:x="982" fg:w="1"/><text x="79.3160%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="533" width="0.0805%" height="15" fill="rgb(243,75,43)" fg:x="982" fg:w="1"/><text x="79.3160%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0660%" y="517" width="0.0805%" height="15" fill="rgb(223,27,42)" fg:x="982" fg:w="1"/><text x="79.3160%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="501" width="0.0805%" height="15" fill="rgb(232,189,33)" fg:x="982" fg:w="1"/><text x="79.3160%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="485" width="0.0805%" height="15" fill="rgb(210,9,39)" fg:x="982" fg:w="1"/><text x="79.3160%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="469" width="0.0805%" height="15" fill="rgb(242,85,26)" fg:x="982" fg:w="1"/><text x="79.3160%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0660%" y="453" width="0.0805%" height="15" fill="rgb(248,44,4)" fg:x="982" fg:w="1"/><text x="79.3160%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="437" width="0.0805%" height="15" fill="rgb(250,96,46)" fg:x="982" fg:w="1"/><text x="79.3160%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="421" width="0.0805%" height="15" fill="rgb(229,116,26)" fg:x="982" fg:w="1"/><text x="79.3160%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="405" width="0.0805%" height="15" fill="rgb(246,94,34)" fg:x="982" fg:w="1"/><text x="79.3160%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.0660%" y="389" width="0.0805%" height="15" fill="rgb(251,73,21)" fg:x="982" fg:w="1"/><text x="79.3160%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.0660%" y="373" width="0.0805%" height="15" fill="rgb(254,121,25)" fg:x="982" fg:w="1"/><text x="79.3160%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0660%" y="357" width="0.0805%" height="15" fill="rgb(215,161,49)" fg:x="982" fg:w="1"/><text x="79.3160%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.0660%" y="341" width="0.0805%" height="15" fill="rgb(221,43,13)" fg:x="982" fg:w="1"/><text x="79.3160%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.0660%" y="325" width="0.0805%" height="15" fill="rgb(249,5,37)" fg:x="982" fg:w="1"/><text x="79.3160%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.0660%" y="309" width="0.0805%" height="15" fill="rgb(226,25,44)" fg:x="982" fg:w="1"/><text x="79.3160%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.0660%" y="293" width="0.0805%" height="15" fill="rgb(238,189,16)" fg:x="982" fg:w="1"/><text x="79.3160%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.0660%" y="277" width="0.0805%" height="15" fill="rgb(251,186,8)" fg:x="982" fg:w="1"/><text x="79.3160%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.0660%" y="261" width="0.0805%" height="15" fill="rgb(254,34,31)" fg:x="982" fg:w="1"/><text x="79.3160%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.0660%" y="245" width="0.0805%" height="15" fill="rgb(225,215,27)" fg:x="982" fg:w="1"/><text x="79.3160%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.0660%" y="229" width="0.0805%" height="15" fill="rgb(221,192,48)" fg:x="982" fg:w="1"/><text x="79.3160%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="79.0660%" y="213" width="0.0805%" height="15" fill="rgb(219,137,20)" fg:x="982" fg:w="1"/><text x="79.3160%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.0660%" y="197" width="0.0805%" height="15" fill="rgb(219,84,11)" fg:x="982" fg:w="1"/><text x="79.3160%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="79.0660%" y="181" width="0.0805%" height="15" fill="rgb(224,10,23)" fg:x="982" fg:w="1"/><text x="79.3160%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="79.0660%" y="165" width="0.0805%" height="15" fill="rgb(248,22,39)" fg:x="982" fg:w="1"/><text x="79.3160%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="79.0660%" y="149" width="0.0805%" height="15" fill="rgb(212,154,20)" fg:x="982" fg:w="1"/><text x="79.3160%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.0660%" y="133" width="0.0805%" height="15" fill="rgb(236,199,50)" fg:x="982" fg:w="1"/><text x="79.3160%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.1465%" y="645" width="0.0805%" height="15" fill="rgb(211,9,17)" fg:x="983" fg:w="1"/><text x="79.3965%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.1465%" y="629" width="0.0805%" height="15" fill="rgb(243,216,36)" fg:x="983" fg:w="1"/><text x="79.3965%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1465%" y="613" width="0.0805%" height="15" fill="rgb(250,2,10)" fg:x="983" fg:w="1"/><text x="79.3965%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1465%" y="597" width="0.0805%" height="15" fill="rgb(226,50,48)" fg:x="983" fg:w="1"/><text x="79.3965%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1465%" y="581" width="0.0805%" height="15" fill="rgb(243,81,16)" fg:x="983" fg:w="1"/><text x="79.3965%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1465%" y="565" width="0.0805%" height="15" fill="rgb(250,14,2)" fg:x="983" fg:w="1"/><text x="79.3965%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1465%" y="549" width="0.0805%" height="15" fill="rgb(233,135,29)" fg:x="983" fg:w="1"/><text x="79.3965%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.1465%" y="533" width="0.0805%" height="15" fill="rgb(224,64,43)" fg:x="983" fg:w="1"/><text x="79.3965%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1465%" y="517" width="0.0805%" height="15" fill="rgb(238,84,13)" fg:x="983" fg:w="1"/><text x="79.3965%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="79.1465%" y="501" width="0.0805%" height="15" fill="rgb(253,48,26)" fg:x="983" fg:w="1"/><text x="79.3965%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="79.2271%" y="645" width="0.0805%" height="15" fill="rgb(205,223,31)" fg:x="984" fg:w="1"/><text x="79.4771%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.2271%" y="629" width="0.0805%" height="15" fill="rgb(221,41,32)" fg:x="984" fg:w="1"/><text x="79.4771%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.2271%" y="613" width="0.0805%" height="15" fill="rgb(213,158,31)" fg:x="984" fg:w="1"/><text x="79.4771%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="79.2271%" y="597" width="0.0805%" height="15" fill="rgb(245,126,43)" fg:x="984" fg:w="1"/><text x="79.4771%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.2271%" y="581" width="0.0805%" height="15" fill="rgb(227,7,22)" fg:x="984" fg:w="1"/><text x="79.4771%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2271%" y="565" width="0.0805%" height="15" fill="rgb(252,90,44)" fg:x="984" fg:w="1"/><text x="79.4771%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="79.0660%" y="661" width="0.3221%" height="15" fill="rgb(253,91,0)" fg:x="982" fg:w="4"/><text x="79.3160%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.3076%" y="645" width="0.0805%" height="15" fill="rgb(252,175,49)" fg:x="985" fg:w="1"/><text x="79.5576%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="79.3076%" y="629" width="0.0805%" height="15" fill="rgb(246,150,1)" fg:x="985" fg:w="1"/><text x="79.5576%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="79.3076%" y="613" width="0.0805%" height="15" fill="rgb(241,192,25)" fg:x="985" fg:w="1"/><text x="79.5576%" y="623.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.3076%" y="597" width="0.0805%" height="15" fill="rgb(239,187,11)" fg:x="985" fg:w="1"/><text x="79.5576%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.3076%" y="581" width="0.0805%" height="15" fill="rgb(218,202,51)" fg:x="985" fg:w="1"/><text x="79.5576%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3076%" y="565" width="0.0805%" height="15" fill="rgb(225,176,8)" fg:x="985" fg:w="1"/><text x="79.5576%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3076%" y="549" width="0.0805%" height="15" fill="rgb(219,122,41)" fg:x="985" fg:w="1"/><text x="79.5576%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3076%" y="533" width="0.0805%" height="15" fill="rgb(248,140,20)" fg:x="985" fg:w="1"/><text x="79.5576%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3076%" y="517" width="0.0805%" height="15" fill="rgb(245,41,37)" fg:x="985" fg:w="1"/><text x="79.5576%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.3076%" y="501" width="0.0805%" height="15" fill="rgb(235,82,39)" fg:x="985" fg:w="1"/><text x="79.5576%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3076%" y="485" width="0.0805%" height="15" fill="rgb(230,108,42)" fg:x="985" fg:w="1"/><text x="79.5576%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3076%" y="469" width="0.0805%" height="15" fill="rgb(215,150,50)" fg:x="985" fg:w="1"/><text x="79.5576%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.3881%" y="613" width="0.0805%" height="15" fill="rgb(233,212,5)" fg:x="986" fg:w="1"/><text x="79.6381%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.3881%" y="597" width="0.0805%" height="15" fill="rgb(245,80,22)" fg:x="986" fg:w="1"/><text x="79.6381%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.3881%" y="581" width="0.0805%" height="15" fill="rgb(238,129,16)" fg:x="986" fg:w="1"/><text x="79.6381%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3881%" y="565" width="0.0805%" height="15" fill="rgb(240,19,0)" fg:x="986" fg:w="1"/><text x="79.6381%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3881%" y="549" width="0.0805%" height="15" fill="rgb(232,42,35)" fg:x="986" fg:w="1"/><text x="79.6381%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3881%" y="533" width="0.0805%" height="15" fill="rgb(223,130,24)" fg:x="986" fg:w="1"/><text x="79.6381%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3881%" y="517" width="0.0805%" height="15" fill="rgb(237,16,22)" fg:x="986" fg:w="1"/><text x="79.6381%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.3881%" y="501" width="0.0805%" height="15" fill="rgb(248,192,20)" fg:x="986" fg:w="1"/><text x="79.6381%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="79.3881%" y="645" width="0.1610%" height="15" fill="rgb(233,167,2)" fg:x="986" fg:w="2"/><text x="79.6381%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="79.3881%" y="629" width="0.1610%" height="15" fill="rgb(252,71,44)" fg:x="986" fg:w="2"/><text x="79.6381%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.4686%" y="613" width="0.0805%" height="15" fill="rgb(238,37,47)" fg:x="987" fg:w="1"/><text x="79.7186%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.4686%" y="597" width="0.0805%" height="15" fill="rgb(214,202,54)" fg:x="987" fg:w="1"/><text x="79.7186%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.4686%" y="581" width="0.0805%" height="15" fill="rgb(254,165,40)" fg:x="987" fg:w="1"/><text x="79.7186%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4686%" y="565" width="0.0805%" height="15" fill="rgb(246,173,38)" fg:x="987" fg:w="1"/><text x="79.7186%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.4686%" y="549" width="0.0805%" height="15" fill="rgb(215,3,27)" fg:x="987" fg:w="1"/><text x="79.7186%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="79.4686%" y="533" width="0.0805%" height="15" fill="rgb(239,169,51)" fg:x="987" fg:w="1"/><text x="79.7186%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.4686%" y="517" width="0.0805%" height="15" fill="rgb(212,5,25)" fg:x="987" fg:w="1"/><text x="79.7186%" y="527.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="79.0660%" y="677" width="0.5636%" height="15" fill="rgb(243,45,17)" fg:x="982" fg:w="7"/><text x="79.3160%" y="687.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="79.3881%" y="661" width="0.2415%" height="15" fill="rgb(242,97,9)" fg:x="986" fg:w="3"/><text x="79.6381%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.5491%" y="645" width="0.0805%" height="15" fill="rgb(228,71,31)" fg:x="988" fg:w="1"/><text x="79.7991%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5491%" y="629" width="0.0805%" height="15" fill="rgb(252,184,16)" fg:x="988" fg:w="1"/><text x="79.7991%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5491%" y="613" width="0.0805%" height="15" fill="rgb(236,169,46)" fg:x="988" fg:w="1"/><text x="79.7991%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5491%" y="597" width="0.0805%" height="15" fill="rgb(207,17,47)" fg:x="988" fg:w="1"/><text x="79.7991%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5491%" y="581" width="0.0805%" height="15" fill="rgb(206,201,28)" fg:x="988" fg:w="1"/><text x="79.7991%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5491%" y="565" width="0.0805%" height="15" fill="rgb(224,184,23)" fg:x="988" fg:w="1"/><text x="79.7991%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="78.7440%" y="725" width="0.9662%" height="15" fill="rgb(208,139,48)" fg:x="978" fg:w="12"/><text x="78.9940%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="78.7440%" y="709" width="0.9662%" height="15" fill="rgb(208,130,10)" fg:x="978" fg:w="12"/><text x="78.9940%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.97%)</title><rect x="78.7440%" y="693" width="0.9662%" height="15" fill="rgb(211,213,45)" fg:x="978" fg:w="12"/><text x="78.9940%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="79.6296%" y="677" width="0.0805%" height="15" fill="rgb(235,100,30)" fg:x="989" fg:w="1"/><text x="79.8796%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="79.6296%" y="661" width="0.0805%" height="15" fill="rgb(206,144,31)" fg:x="989" fg:w="1"/><text x="79.8796%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="79.6296%" y="645" width="0.0805%" height="15" fill="rgb(224,200,26)" fg:x="989" fg:w="1"/><text x="79.8796%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="79.6296%" y="629" width="0.0805%" height="15" fill="rgb(247,104,53)" fg:x="989" fg:w="1"/><text x="79.8796%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6296%" y="613" width="0.0805%" height="15" fill="rgb(220,14,17)" fg:x="989" fg:w="1"/><text x="79.8796%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.6296%" y="597" width="0.0805%" height="15" fill="rgb(230,140,40)" fg:x="989" fg:w="1"/><text x="79.8796%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6296%" y="581" width="0.0805%" height="15" fill="rgb(229,2,41)" fg:x="989" fg:w="1"/><text x="79.8796%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.6296%" y="565" width="0.0805%" height="15" fill="rgb(232,89,16)" fg:x="989" fg:w="1"/><text x="79.8796%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.6296%" y="549" width="0.0805%" height="15" fill="rgb(247,59,52)" fg:x="989" fg:w="1"/><text x="79.8796%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6296%" y="533" width="0.0805%" height="15" fill="rgb(226,110,21)" fg:x="989" fg:w="1"/><text x="79.8796%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.6296%" y="517" width="0.0805%" height="15" fill="rgb(224,176,43)" fg:x="989" fg:w="1"/><text x="79.8796%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6296%" y="501" width="0.0805%" height="15" fill="rgb(221,73,6)" fg:x="989" fg:w="1"/><text x="79.8796%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="79.7101%" y="725" width="0.0805%" height="15" fill="rgb(232,78,19)" fg:x="990" fg:w="1"/><text x="79.9601%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.7101%" y="709" width="0.0805%" height="15" fill="rgb(233,112,48)" fg:x="990" fg:w="1"/><text x="79.9601%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.7101%" y="693" width="0.0805%" height="15" fill="rgb(243,131,47)" fg:x="990" fg:w="1"/><text x="79.9601%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7101%" y="677" width="0.0805%" height="15" fill="rgb(226,51,1)" fg:x="990" fg:w="1"/><text x="79.9601%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.1932%" y="549" width="0.0805%" height="15" fill="rgb(247,58,7)" fg:x="996" fg:w="1"/><text x="80.4432%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="79.9517%" y="613" width="0.4026%" height="15" fill="rgb(209,7,32)" fg:x="993" fg:w="5"/><text x="80.2017%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="80.0322%" y="597" width="0.3221%" height="15" fill="rgb(209,39,41)" fg:x="994" fg:w="4"/><text x="80.2822%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="80.0322%" y="581" width="0.3221%" height="15" fill="rgb(226,182,46)" fg:x="994" fg:w="4"/><text x="80.2822%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.1127%" y="565" width="0.2415%" height="15" fill="rgb(230,219,10)" fg:x="995" fg:w="3"/><text x="80.3627%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.2738%" y="549" width="0.0805%" height="15" fill="rgb(227,175,30)" fg:x="997" fg:w="1"/><text x="80.5238%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.3543%" y="597" width="0.0805%" height="15" fill="rgb(217,2,50)" fg:x="998" fg:w="1"/><text x="80.6043%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="80.4348%" y="597" width="0.2415%" height="15" fill="rgb(229,160,0)" fg:x="999" fg:w="3"/><text x="80.6848%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.4348%" y="581" width="0.2415%" height="15" fill="rgb(207,78,37)" fg:x="999" fg:w="3"/><text x="80.6848%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="80.4348%" y="565" width="0.2415%" height="15" fill="rgb(225,57,0)" fg:x="999" fg:w="3"/><text x="80.6848%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.5153%" y="549" width="0.1610%" height="15" fill="rgb(232,154,2)" fg:x="1000" fg:w="2"/><text x="80.7653%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.5958%" y="533" width="0.0805%" height="15" fill="rgb(241,212,25)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.5958%" y="517" width="0.0805%" height="15" fill="rgb(226,69,20)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.5958%" y="501" width="0.0805%" height="15" fill="rgb(247,184,54)" fg:x="1001" fg:w="1"/><text x="80.8458%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.6763%" y="549" width="0.0805%" height="15" fill="rgb(210,145,0)" fg:x="1002" fg:w="1"/><text x="80.9263%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7568%" y="549" width="0.0805%" height="15" fill="rgb(253,82,12)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7568%" y="533" width="0.0805%" height="15" fill="rgb(245,42,11)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7568%" y="517" width="0.0805%" height="15" fill="rgb(219,147,32)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7568%" y="501" width="0.0805%" height="15" fill="rgb(246,12,7)" fg:x="1003" fg:w="1"/><text x="81.0068%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8374%" y="549" width="0.0805%" height="15" fill="rgb(243,50,9)" fg:x="1004" fg:w="1"/><text x="81.0874%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8374%" y="533" width="0.0805%" height="15" fill="rgb(219,149,6)" fg:x="1004" fg:w="1"/><text x="81.0874%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="80.6763%" y="581" width="0.3221%" height="15" fill="rgb(241,51,42)" fg:x="1002" fg:w="4"/><text x="80.9263%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.6763%" y="565" width="0.3221%" height="15" fill="rgb(226,128,27)" fg:x="1002" fg:w="4"/><text x="80.9263%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9179%" y="549" width="0.0805%" height="15" fill="rgb(244,144,4)" fg:x="1005" fg:w="1"/><text x="81.1679%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9179%" y="533" width="0.0805%" height="15" fill="rgb(221,4,13)" fg:x="1005" fg:w="1"/><text x="81.1679%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9984%" y="581" width="0.0805%" height="15" fill="rgb(208,170,28)" fg:x="1006" fg:w="1"/><text x="81.2484%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.1594%" y="565" width="0.0805%" height="15" fill="rgb(226,131,13)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1594%" y="549" width="0.0805%" height="15" fill="rgb(215,72,41)" fg:x="1008" fg:w="1"/><text x="81.4094%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="80.6763%" y="597" width="0.7246%" height="15" fill="rgb(243,108,20)" fg:x="1002" fg:w="9"/><text x="80.9263%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="81.0789%" y="581" width="0.3221%" height="15" fill="rgb(230,189,17)" fg:x="1007" fg:w="4"/><text x="81.3289%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.2399%" y="565" width="0.1610%" height="15" fill="rgb(220,50,17)" fg:x="1009" fg:w="2"/><text x="81.4899%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3205%" y="549" width="0.0805%" height="15" fill="rgb(248,152,48)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3205%" y="533" width="0.0805%" height="15" fill="rgb(244,91,11)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.3205%" y="517" width="0.0805%" height="15" fill="rgb(220,157,5)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3205%" y="501" width="0.0805%" height="15" fill="rgb(253,137,8)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3205%" y="485" width="0.0805%" height="15" fill="rgb(217,137,51)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.3205%" y="469" width="0.0805%" height="15" fill="rgb(218,209,53)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.3205%" y="453" width="0.0805%" height="15" fill="rgb(249,137,25)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.3205%" y="437" width="0.0805%" height="15" fill="rgb(239,155,26)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.3205%" y="421" width="0.0805%" height="15" fill="rgb(227,85,46)" fg:x="1010" fg:w="1"/><text x="81.5705%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="80.3543%" y="613" width="1.2882%" height="15" fill="rgb(251,107,43)" fg:x="998" fg:w="16"/><text x="80.6043%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="81.4010%" y="597" width="0.2415%" height="15" fill="rgb(234,170,33)" fg:x="1011" fg:w="3"/><text x="81.6510%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="81.4010%" y="581" width="0.2415%" height="15" fill="rgb(206,29,35)" fg:x="1011" fg:w="3"/><text x="81.6510%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="81.4010%" y="565" width="0.2415%" height="15" fill="rgb(227,138,25)" fg:x="1011" fg:w="3"/><text x="81.6510%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="81.4815%" y="549" width="0.1610%" height="15" fill="rgb(249,131,35)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="81.4815%" y="533" width="0.1610%" height="15" fill="rgb(239,6,40)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="81.4815%" y="517" width="0.1610%" height="15" fill="rgb(246,136,47)" fg:x="1012" fg:w="2"/><text x="81.7315%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.77%)</title><rect x="79.9517%" y="629" width="1.7713%" height="15" fill="rgb(253,58,26)" fg:x="993" fg:w="22"/><text x="80.2017%" y="639.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6425%" y="613" width="0.0805%" height="15" fill="rgb(237,141,10)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6425%" y="597" width="0.0805%" height="15" fill="rgb(234,156,12)" fg:x="1014" fg:w="1"/><text x="81.8925%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.7230%" y="629" width="0.2415%" height="15" fill="rgb(243,224,36)" fg:x="1015" fg:w="3"/><text x="81.9730%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="81.7230%" y="613" width="0.2415%" height="15" fill="rgb(205,229,51)" fg:x="1015" fg:w="3"/><text x="81.9730%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.7230%" y="597" width="0.2415%" height="15" fill="rgb(223,189,4)" fg:x="1015" fg:w="3"/><text x="81.9730%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.7230%" y="581" width="0.2415%" height="15" fill="rgb(249,167,54)" fg:x="1015" fg:w="3"/><text x="81.9730%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.7230%" y="565" width="0.2415%" height="15" fill="rgb(218,34,28)" fg:x="1015" fg:w="3"/><text x="81.9730%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.8035%" y="549" width="0.1610%" height="15" fill="rgb(232,109,42)" fg:x="1016" fg:w="2"/><text x="82.0535%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.8035%" y="533" width="0.1610%" height="15" fill="rgb(248,214,46)" fg:x="1016" fg:w="2"/><text x="82.0535%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.8841%" y="517" width="0.0805%" height="15" fill="rgb(244,216,40)" fg:x="1017" fg:w="1"/><text x="82.1341%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="81.9646%" y="613" width="0.1610%" height="15" fill="rgb(231,226,31)" fg:x="1018" fg:w="2"/><text x="82.2146%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="81.9646%" y="597" width="0.1610%" height="15" fill="rgb(238,38,43)" fg:x="1018" fg:w="2"/><text x="82.2146%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.1256%" y="613" width="0.0805%" height="15" fill="rgb(208,88,43)" fg:x="1020" fg:w="1"/><text x="82.3756%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1256%" y="597" width="0.0805%" height="15" fill="rgb(205,136,37)" fg:x="1020" fg:w="1"/><text x="82.3756%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2866%" y="581" width="0.0805%" height="15" fill="rgb(237,34,14)" fg:x="1022" fg:w="1"/><text x="82.5366%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2866%" y="565" width="0.0805%" height="15" fill="rgb(236,193,44)" fg:x="1022" fg:w="1"/><text x="82.5366%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3671%" y="533" width="0.0805%" height="15" fill="rgb(231,48,10)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3671%" y="517" width="0.0805%" height="15" fill="rgb(213,141,34)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3671%" y="501" width="0.0805%" height="15" fill="rgb(249,130,34)" fg:x="1023" fg:w="1"/><text x="82.6171%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4477%" y="501" width="0.0805%" height="15" fill="rgb(219,42,41)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4477%" y="485" width="0.0805%" height="15" fill="rgb(224,100,54)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4477%" y="469" width="0.0805%" height="15" fill="rgb(229,200,27)" fg:x="1024" fg:w="1"/><text x="82.6977%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.6087%" y="421" width="0.0805%" height="15" fill="rgb(217,118,10)" fg:x="1026" fg:w="1"/><text x="82.8587%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.6892%" y="405" width="0.1610%" height="15" fill="rgb(206,22,3)" fg:x="1027" fg:w="2"/><text x="82.9392%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.6892%" y="389" width="0.1610%" height="15" fill="rgb(232,163,46)" fg:x="1027" fg:w="2"/><text x="82.9392%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7697%" y="373" width="0.0805%" height="15" fill="rgb(206,95,13)" fg:x="1028" fg:w="1"/><text x="83.0197%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="82.5282%" y="485" width="0.4026%" height="15" fill="rgb(253,154,18)" fg:x="1025" fg:w="5"/><text x="82.7782%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="82.5282%" y="469" width="0.4026%" height="15" fill="rgb(219,32,23)" fg:x="1025" fg:w="5"/><text x="82.7782%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.6087%" y="453" width="0.3221%" height="15" fill="rgb(230,191,45)" fg:x="1026" fg:w="4"/><text x="82.8587%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="82.6087%" y="437" width="0.3221%" height="15" fill="rgb(229,64,36)" fg:x="1026" fg:w="4"/><text x="82.8587%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.6892%" y="421" width="0.2415%" height="15" fill="rgb(205,129,25)" fg:x="1027" fg:w="3"/><text x="82.9392%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8502%" y="405" width="0.0805%" height="15" fill="rgb(254,112,7)" fg:x="1029" fg:w="1"/><text x="83.1002%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="82.4477%" y="517" width="0.5636%" height="15" fill="rgb(226,53,48)" fg:x="1024" fg:w="7"/><text x="82.6977%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="82.5282%" y="501" width="0.4831%" height="15" fill="rgb(214,153,38)" fg:x="1025" fg:w="6"/><text x="82.7782%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9308%" y="485" width="0.0805%" height="15" fill="rgb(243,101,7)" fg:x="1030" fg:w="1"/><text x="83.1808%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="82.3671%" y="549" width="0.7246%" height="15" fill="rgb(240,140,22)" fg:x="1023" fg:w="9"/><text x="82.6171%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="82.4477%" y="533" width="0.6441%" height="15" fill="rgb(235,114,2)" fg:x="1024" fg:w="8"/><text x="82.6977%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0113%" y="517" width="0.0805%" height="15" fill="rgb(242,59,12)" fg:x="1031" fg:w="1"/><text x="83.2613%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.81%)</title><rect x="82.3671%" y="565" width="0.8052%" height="15" fill="rgb(252,134,9)" fg:x="1023" fg:w="10"/><text x="82.6171%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.0918%" y="549" width="0.0805%" height="15" fill="rgb(236,4,44)" fg:x="1032" fg:w="1"/><text x="83.3418%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0918%" y="533" width="0.0805%" height="15" fill="rgb(254,172,41)" fg:x="1032" fg:w="1"/><text x="83.3418%" y="543.50"></text></g><g><title>engine::session::Session::flush (43 samples, 3.46%)</title><rect x="79.7907%" y="725" width="3.4622%" height="15" fill="rgb(244,63,20)" fg:x="991" fg:w="43"/><text x="80.0407%" y="735.50">eng..</text></g><g><title>engine::session::Session::save_changes (43 samples, 3.46%)</title><rect x="79.7907%" y="709" width="3.4622%" height="15" fill="rgb(250,73,31)" fg:x="991" fg:w="43"/><text x="80.0407%" y="719.50">eng..</text></g><g><title>engine::session::state::State::close (43 samples, 3.46%)</title><rect x="79.7907%" y="693" width="3.4622%" height="15" fill="rgb(241,38,36)" fg:x="991" fg:w="43"/><text x="80.0407%" y="703.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (42 samples, 3.38%)</title><rect x="79.8712%" y="677" width="3.3816%" height="15" fill="rgb(245,211,2)" fg:x="992" fg:w="42"/><text x="80.1212%" y="687.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (42 samples, 3.38%)</title><rect x="79.8712%" y="661" width="3.3816%" height="15" fill="rgb(206,120,28)" fg:x="992" fg:w="42"/><text x="80.1212%" y="671.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (42 samples, 3.38%)</title><rect x="79.8712%" y="645" width="3.3816%" height="15" fill="rgb(211,59,34)" fg:x="992" fg:w="42"/><text x="80.1212%" y="655.50">eng..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.29%)</title><rect x="81.9646%" y="629" width="1.2882%" height="15" fill="rgb(233,168,5)" fg:x="1018" fg:w="16"/><text x="82.2146%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="82.2061%" y="613" width="1.0467%" height="15" fill="rgb(234,33,13)" fg:x="1021" fg:w="13"/><text x="82.4561%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="82.2061%" y="597" width="1.0467%" height="15" fill="rgb(231,150,26)" fg:x="1021" fg:w="13"/><text x="82.4561%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.89%)</title><rect x="82.3671%" y="581" width="0.8857%" height="15" fill="rgb(217,191,4)" fg:x="1023" fg:w="11"/><text x="82.6171%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1723%" y="565" width="0.0805%" height="15" fill="rgb(246,198,38)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1723%" y="549" width="0.0805%" height="15" fill="rgb(245,64,37)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.1723%" y="533" width="0.0805%" height="15" fill="rgb(250,30,36)" fg:x="1033" fg:w="1"/><text x="83.4223%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="83.2528%" y="709" width="0.0805%" height="15" fill="rgb(217,86,53)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="719.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.2528%" y="693" width="0.0805%" height="15" fill="rgb(228,157,16)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2528%" y="677" width="0.0805%" height="15" fill="rgb(217,59,31)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2528%" y="661" width="0.0805%" height="15" fill="rgb(237,138,41)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2528%" y="645" width="0.0805%" height="15" fill="rgb(227,91,49)" fg:x="1034" fg:w="1"/><text x="83.5028%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.3333%" y="693" width="0.0805%" height="15" fill="rgb(247,21,44)" fg:x="1035" fg:w="1"/><text x="83.5833%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.3333%" y="677" width="0.0805%" height="15" fill="rgb(219,210,51)" fg:x="1035" fg:w="1"/><text x="83.5833%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3333%" y="661" width="0.0805%" height="15" fill="rgb(209,140,6)" fg:x="1035" fg:w="1"/><text x="83.5833%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3333%" y="645" width="0.0805%" height="15" fill="rgb(221,188,24)" fg:x="1035" fg:w="1"/><text x="83.5833%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3333%" y="629" width="0.0805%" height="15" fill="rgb(232,154,20)" fg:x="1035" fg:w="1"/><text x="83.5833%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4138%" y="613" width="0.0805%" height="15" fill="rgb(244,137,50)" fg:x="1036" fg:w="1"/><text x="83.6638%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="83.2528%" y="725" width="0.3221%" height="15" fill="rgb(225,185,43)" fg:x="1034" fg:w="4"/><text x="83.5028%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="83.3333%" y="709" width="0.2415%" height="15" fill="rgb(213,205,38)" fg:x="1035" fg:w="3"/><text x="83.5833%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.4138%" y="693" width="0.1610%" height="15" fill="rgb(236,73,12)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.4138%" y="677" width="0.1610%" height="15" fill="rgb(235,219,13)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.4138%" y="661" width="0.1610%" height="15" fill="rgb(218,59,36)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.4138%" y="645" width="0.1610%" height="15" fill="rgb(205,110,39)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.4138%" y="629" width="0.1610%" height="15" fill="rgb(218,206,42)" fg:x="1036" fg:w="2"/><text x="83.6638%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4944%" y="613" width="0.0805%" height="15" fill="rgb(248,125,24)" fg:x="1037" fg:w="1"/><text x="83.7444%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4944%" y="597" width="0.0805%" height="15" fill="rgb(242,28,27)" fg:x="1037" fg:w="1"/><text x="83.7444%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.4944%" y="581" width="0.0805%" height="15" fill="rgb(216,228,15)" fg:x="1037" fg:w="1"/><text x="83.7444%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.4944%" y="565" width="0.0805%" height="15" fill="rgb(235,116,46)" fg:x="1037" fg:w="1"/><text x="83.7444%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.5749%" y="693" width="0.0805%" height="15" fill="rgb(224,18,32)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5749%" y="677" width="0.0805%" height="15" fill="rgb(252,5,12)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5749%" y="661" width="0.0805%" height="15" fill="rgb(251,36,5)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5749%" y="645" width="0.0805%" height="15" fill="rgb(217,53,14)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5749%" y="629" width="0.0805%" height="15" fill="rgb(215,86,45)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5749%" y="613" width="0.0805%" height="15" fill="rgb(242,169,11)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5749%" y="597" width="0.0805%" height="15" fill="rgb(211,213,45)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5749%" y="581" width="0.0805%" height="15" fill="rgb(205,88,11)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5749%" y="565" width="0.0805%" height="15" fill="rgb(252,69,26)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5749%" y="549" width="0.0805%" height="15" fill="rgb(246,123,37)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5749%" y="533" width="0.0805%" height="15" fill="rgb(212,205,5)" fg:x="1038" fg:w="1"/><text x="83.8249%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="83.6554%" y="677" width="0.0805%" height="15" fill="rgb(253,148,0)" fg:x="1039" fg:w="1"/><text x="83.9054%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="83.6554%" y="661" width="0.0805%" height="15" fill="rgb(239,22,4)" fg:x="1039" fg:w="1"/><text x="83.9054%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6554%" y="645" width="0.0805%" height="15" fill="rgb(226,26,53)" fg:x="1039" fg:w="1"/><text x="83.9054%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="83.5749%" y="709" width="0.2415%" height="15" fill="rgb(225,229,45)" fg:x="1038" fg:w="3"/><text x="83.8249%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="83.6554%" y="693" width="0.1610%" height="15" fill="rgb(220,60,37)" fg:x="1039" fg:w="2"/><text x="83.9054%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.7359%" y="677" width="0.0805%" height="15" fill="rgb(217,180,35)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7359%" y="661" width="0.0805%" height="15" fill="rgb(229,7,53)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7359%" y="645" width="0.0805%" height="15" fill="rgb(254,137,3)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7359%" y="629" width="0.0805%" height="15" fill="rgb(215,140,41)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.7359%" y="613" width="0.0805%" height="15" fill="rgb(250,80,15)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.7359%" y="597" width="0.0805%" height="15" fill="rgb(252,191,6)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.7359%" y="581" width="0.0805%" height="15" fill="rgb(246,217,18)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7359%" y="565" width="0.0805%" height="15" fill="rgb(223,93,7)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7359%" y="549" width="0.0805%" height="15" fill="rgb(225,55,52)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.7359%" y="533" width="0.0805%" height="15" fill="rgb(240,31,24)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.7359%" y="517" width="0.0805%" height="15" fill="rgb(205,56,52)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.7359%" y="501" width="0.0805%" height="15" fill="rgb(246,146,12)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.7359%" y="485" width="0.0805%" height="15" fill="rgb(239,84,36)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7359%" y="469" width="0.0805%" height="15" fill="rgb(207,41,40)" fg:x="1040" fg:w="1"/><text x="83.9859%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8164%" y="661" width="0.0805%" height="15" fill="rgb(241,179,25)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8164%" y="645" width="0.0805%" height="15" fill="rgb(210,0,34)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8164%" y="629" width="0.0805%" height="15" fill="rgb(225,217,29)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="613" width="0.0805%" height="15" fill="rgb(216,191,38)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="597" width="0.0805%" height="15" fill="rgb(232,140,52)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="581" width="0.0805%" height="15" fill="rgb(223,158,51)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="565" width="0.0805%" height="15" fill="rgb(235,29,51)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8164%" y="549" width="0.0805%" height="15" fill="rgb(215,181,18)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8164%" y="533" width="0.0805%" height="15" fill="rgb(227,125,34)" fg:x="1041" fg:w="1"/><text x="84.0664%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="83.8164%" y="693" width="0.1610%" height="15" fill="rgb(230,197,49)" fg:x="1041" fg:w="2"/><text x="84.0664%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="83.8164%" y="677" width="0.1610%" height="15" fill="rgb(239,141,16)" fg:x="1041" fg:w="2"/><text x="84.0664%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.8969%" y="661" width="0.0805%" height="15" fill="rgb(225,105,43)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8969%" y="645" width="0.0805%" height="15" fill="rgb(214,131,14)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8969%" y="629" width="0.0805%" height="15" fill="rgb(229,177,11)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8969%" y="613" width="0.0805%" height="15" fill="rgb(231,180,14)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8969%" y="597" width="0.0805%" height="15" fill="rgb(232,88,2)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8969%" y="581" width="0.0805%" height="15" fill="rgb(205,220,8)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8969%" y="565" width="0.0805%" height="15" fill="rgb(225,23,53)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8969%" y="549" width="0.0805%" height="15" fill="rgb(213,62,29)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8969%" y="533" width="0.0805%" height="15" fill="rgb(227,75,7)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8969%" y="517" width="0.0805%" height="15" fill="rgb(207,105,14)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8969%" y="501" width="0.0805%" height="15" fill="rgb(245,62,29)" fg:x="1042" fg:w="1"/><text x="84.1469%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.9775%" y="693" width="0.0805%" height="15" fill="rgb(236,202,4)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9775%" y="677" width="0.0805%" height="15" fill="rgb(250,67,1)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9775%" y="661" width="0.0805%" height="15" fill="rgb(253,115,44)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.9775%" y="645" width="0.0805%" height="15" fill="rgb(251,139,18)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="83.9775%" y="629" width="0.0805%" height="15" fill="rgb(218,22,32)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.9775%" y="613" width="0.0805%" height="15" fill="rgb(243,53,5)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9775%" y="597" width="0.0805%" height="15" fill="rgb(227,56,16)" fg:x="1043" fg:w="1"/><text x="84.2275%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.0580%" y="629" width="0.0805%" height="15" fill="rgb(245,53,0)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.0580%" y="613" width="0.0805%" height="15" fill="rgb(216,170,35)" fg:x="1044" fg:w="1"/><text x="84.3080%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1385%" y="597" width="0.0805%" height="15" fill="rgb(211,200,8)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1385%" y="581" width="0.0805%" height="15" fill="rgb(228,204,44)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1385%" y="565" width="0.0805%" height="15" fill="rgb(214,121,17)" fg:x="1045" fg:w="1"/><text x="84.3885%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2190%" y="597" width="0.0805%" height="15" fill="rgb(233,64,38)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.2190%" y="581" width="0.0805%" height="15" fill="rgb(253,54,19)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.2190%" y="565" width="0.0805%" height="15" fill="rgb(253,94,18)" fg:x="1046" fg:w="1"/><text x="84.4690%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="84.0580%" y="645" width="0.3221%" height="15" fill="rgb(227,57,52)" fg:x="1044" fg:w="4"/><text x="84.3080%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.1385%" y="629" width="0.2415%" height="15" fill="rgb(230,228,50)" fg:x="1045" fg:w="3"/><text x="84.3885%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.1385%" y="613" width="0.2415%" height="15" fill="rgb(217,205,27)" fg:x="1045" fg:w="3"/><text x="84.3885%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="597" width="0.0805%" height="15" fill="rgb(252,71,50)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="581" width="0.0805%" height="15" fill="rgb(209,86,4)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2995%" y="565" width="0.0805%" height="15" fill="rgb(229,94,0)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="549" width="0.0805%" height="15" fill="rgb(252,223,21)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.2995%" y="533" width="0.0805%" height="15" fill="rgb(230,210,4)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2995%" y="517" width="0.0805%" height="15" fill="rgb(240,149,38)" fg:x="1047" fg:w="1"/><text x="84.5495%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3800%" y="629" width="0.0805%" height="15" fill="rgb(254,105,20)" fg:x="1048" fg:w="1"/><text x="84.6300%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4605%" y="597" width="0.0805%" height="15" fill="rgb(253,87,46)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4605%" y="581" width="0.0805%" height="15" fill="rgb(253,116,33)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4605%" y="565" width="0.0805%" height="15" fill="rgb(229,198,5)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4605%" y="549" width="0.0805%" height="15" fill="rgb(242,38,37)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4605%" y="533" width="0.0805%" height="15" fill="rgb(242,69,53)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4605%" y="517" width="0.0805%" height="15" fill="rgb(249,80,16)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4605%" y="501" width="0.0805%" height="15" fill="rgb(206,128,11)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4605%" y="485" width="0.0805%" height="15" fill="rgb(212,35,20)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4605%" y="469" width="0.0805%" height="15" fill="rgb(236,79,13)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4605%" y="453" width="0.0805%" height="15" fill="rgb(233,123,3)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.4605%" y="437" width="0.0805%" height="15" fill="rgb(214,93,52)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.4605%" y="421" width="0.0805%" height="15" fill="rgb(251,37,40)" fg:x="1049" fg:w="1"/><text x="84.7105%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="597" width="0.0805%" height="15" fill="rgb(227,80,54)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="581" width="0.0805%" height="15" fill="rgb(254,48,11)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="565" width="0.0805%" height="15" fill="rgb(235,193,26)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="549" width="0.0805%" height="15" fill="rgb(229,99,21)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5411%" y="533" width="0.0805%" height="15" fill="rgb(211,140,41)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.5411%" y="517" width="0.0805%" height="15" fill="rgb(240,227,30)" fg:x="1050" fg:w="1"/><text x="84.7911%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.13%)</title><rect x="83.5749%" y="725" width="1.1272%" height="15" fill="rgb(215,224,45)" fg:x="1038" fg:w="14"/><text x="83.8249%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.89%)</title><rect x="83.8164%" y="709" width="0.8857%" height="15" fill="rgb(206,123,31)" fg:x="1041" fg:w="11"/><text x="84.0664%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="84.0580%" y="693" width="0.6441%" height="15" fill="rgb(210,138,16)" fg:x="1044" fg:w="8"/><text x="84.3080%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="84.0580%" y="677" width="0.6441%" height="15" fill="rgb(228,57,28)" fg:x="1044" fg:w="8"/><text x="84.3080%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="84.0580%" y="661" width="0.6441%" height="15" fill="rgb(242,170,10)" fg:x="1044" fg:w="8"/><text x="84.3080%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="84.3800%" y="645" width="0.3221%" height="15" fill="rgb(228,214,39)" fg:x="1048" fg:w="4"/><text x="84.6300%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.4605%" y="629" width="0.2415%" height="15" fill="rgb(218,179,33)" fg:x="1049" fg:w="3"/><text x="84.7105%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.4605%" y="613" width="0.2415%" height="15" fill="rgb(235,193,39)" fg:x="1049" fg:w="3"/><text x="84.7105%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="597" width="0.0805%" height="15" fill="rgb(219,221,36)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="581" width="0.0805%" height="15" fill="rgb(248,218,19)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="565" width="0.0805%" height="15" fill="rgb(205,50,9)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="549" width="0.0805%" height="15" fill="rgb(238,81,28)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.6216%" y="533" width="0.0805%" height="15" fill="rgb(235,110,19)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="517" width="0.0805%" height="15" fill="rgb(214,7,14)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6216%" y="501" width="0.0805%" height="15" fill="rgb(211,77,3)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6216%" y="485" width="0.0805%" height="15" fill="rgb(229,5,9)" fg:x="1051" fg:w="1"/><text x="84.8716%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="84.7021%" y="725" width="0.0805%" height="15" fill="rgb(225,90,11)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="84.7021%" y="709" width="0.0805%" height="15" fill="rgb(242,56,8)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.7021%" y="693" width="0.0805%" height="15" fill="rgb(249,212,39)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.7021%" y="677" width="0.0805%" height="15" fill="rgb(236,90,9)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.7021%" y="661" width="0.0805%" height="15" fill="rgb(206,88,35)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7021%" y="645" width="0.0805%" height="15" fill="rgb(205,126,30)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7021%" y="629" width="0.0805%" height="15" fill="rgb(230,176,12)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7021%" y="613" width="0.0805%" height="15" fill="rgb(243,19,9)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7021%" y="597" width="0.0805%" height="15" fill="rgb(245,171,17)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7021%" y="581" width="0.0805%" height="15" fill="rgb(227,52,21)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7021%" y="565" width="0.0805%" height="15" fill="rgb(238,69,14)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7021%" y="549" width="0.0805%" height="15" fill="rgb(241,156,39)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7021%" y="533" width="0.0805%" height="15" fill="rgb(212,227,28)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7021%" y="517" width="0.0805%" height="15" fill="rgb(209,118,27)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7021%" y="501" width="0.0805%" height="15" fill="rgb(226,102,5)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7021%" y="485" width="0.0805%" height="15" fill="rgb(223,34,3)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7021%" y="469" width="0.0805%" height="15" fill="rgb(221,81,38)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.7021%" y="453" width="0.0805%" height="15" fill="rgb(236,219,28)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.7021%" y="437" width="0.0805%" height="15" fill="rgb(213,200,14)" fg:x="1052" fg:w="1"/><text x="84.9521%" y="447.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="84.7826%" y="693" width="0.0805%" height="15" fill="rgb(240,33,19)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7826%" y="677" width="0.0805%" height="15" fill="rgb(233,113,27)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.7826%" y="661" width="0.0805%" height="15" fill="rgb(220,221,18)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="84.7826%" y="645" width="0.0805%" height="15" fill="rgb(238,92,8)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.7826%" y="629" width="0.0805%" height="15" fill="rgb(222,164,16)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.7826%" y="613" width="0.0805%" height="15" fill="rgb(241,119,3)" fg:x="1053" fg:w="1"/><text x="85.0326%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8631%" y="629" width="0.0805%" height="15" fill="rgb(241,44,8)" fg:x="1054" fg:w="1"/><text x="85.1131%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8631%" y="613" width="0.0805%" height="15" fill="rgb(230,36,40)" fg:x="1054" fg:w="1"/><text x="85.1131%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.9436%" y="565" width="0.0805%" height="15" fill="rgb(243,16,36)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9436%" y="549" width="0.0805%" height="15" fill="rgb(231,4,26)" fg:x="1055" fg:w="1"/><text x="85.1936%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="84.7826%" y="725" width="0.3221%" height="15" fill="rgb(240,9,31)" fg:x="1053" fg:w="4"/><text x="85.0326%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="84.7826%" y="709" width="0.3221%" height="15" fill="rgb(207,173,15)" fg:x="1053" fg:w="4"/><text x="85.0326%" y="719.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="84.8631%" y="693" width="0.2415%" height="15" fill="rgb(224,192,53)" fg:x="1054" fg:w="3"/><text x="85.1131%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="84.8631%" y="677" width="0.2415%" height="15" fill="rgb(223,67,28)" fg:x="1054" fg:w="3"/><text x="85.1131%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="84.8631%" y="661" width="0.2415%" height="15" fill="rgb(211,20,47)" fg:x="1054" fg:w="3"/><text x="85.1131%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="84.8631%" y="645" width="0.2415%" height="15" fill="rgb(240,228,2)" fg:x="1054" fg:w="3"/><text x="85.1131%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9436%" y="629" width="0.1610%" height="15" fill="rgb(248,151,12)" fg:x="1055" fg:w="2"/><text x="85.1936%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.9436%" y="613" width="0.1610%" height="15" fill="rgb(244,8,39)" fg:x="1055" fg:w="2"/><text x="85.1936%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.9436%" y="597" width="0.1610%" height="15" fill="rgb(222,26,8)" fg:x="1055" fg:w="2"/><text x="85.1936%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9436%" y="581" width="0.1610%" height="15" fill="rgb(213,106,44)" fg:x="1055" fg:w="2"/><text x="85.1936%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0242%" y="565" width="0.0805%" height="15" fill="rgb(214,129,20)" fg:x="1056" fg:w="1"/><text x="85.2742%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1047%" y="549" width="0.0805%" height="15" fill="rgb(212,32,13)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1047%" y="533" width="0.0805%" height="15" fill="rgb(208,168,33)" fg:x="1057" fg:w="1"/><text x="85.3547%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.1047%" y="693" width="0.1610%" height="15" fill="rgb(231,207,8)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.1047%" y="677" width="0.1610%" height="15" fill="rgb(235,219,23)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.1047%" y="661" width="0.1610%" height="15" fill="rgb(226,216,26)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1047%" y="645" width="0.1610%" height="15" fill="rgb(239,137,16)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1047%" y="629" width="0.1610%" height="15" fill="rgb(207,12,36)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.1047%" y="613" width="0.1610%" height="15" fill="rgb(210,214,24)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1047%" y="597" width="0.1610%" height="15" fill="rgb(206,56,30)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.1047%" y="581" width="0.1610%" height="15" fill="rgb(228,143,26)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.1047%" y="565" width="0.1610%" height="15" fill="rgb(216,218,46)" fg:x="1057" fg:w="2"/><text x="85.3547%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="85.1852%" y="549" width="0.0805%" height="15" fill="rgb(206,6,19)" fg:x="1058" fg:w="1"/><text x="85.4352%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.2657%" y="693" width="0.0805%" height="15" fill="rgb(239,177,51)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.2657%" y="677" width="0.0805%" height="15" fill="rgb(216,55,25)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.2657%" y="661" width="0.0805%" height="15" fill="rgb(231,163,29)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2657%" y="645" width="0.0805%" height="15" fill="rgb(232,149,50)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.2657%" y="629" width="0.0805%" height="15" fill="rgb(223,142,48)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.2657%" y="613" width="0.0805%" height="15" fill="rgb(245,83,23)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.2657%" y="597" width="0.0805%" height="15" fill="rgb(224,63,2)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.2657%" y="581" width="0.0805%" height="15" fill="rgb(218,65,53)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2657%" y="565" width="0.0805%" height="15" fill="rgb(221,84,29)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.2657%" y="549" width="0.0805%" height="15" fill="rgb(234,0,32)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.2657%" y="533" width="0.0805%" height="15" fill="rgb(206,20,16)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.2657%" y="517" width="0.0805%" height="15" fill="rgb(244,172,18)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.2657%" y="501" width="0.0805%" height="15" fill="rgb(254,133,1)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.2657%" y="485" width="0.0805%" height="15" fill="rgb(222,206,41)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2657%" y="469" width="0.0805%" height="15" fill="rgb(212,3,42)" fg:x="1059" fg:w="1"/><text x="85.5157%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.3462%" y="645" width="0.0805%" height="15" fill="rgb(241,11,4)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.3462%" y="629" width="0.0805%" height="15" fill="rgb(205,19,26)" fg:x="1060" fg:w="1"/><text x="85.5962%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="613" width="0.0805%" height="15" fill="rgb(210,179,32)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="597" width="0.0805%" height="15" fill="rgb(227,116,49)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="581" width="0.0805%" height="15" fill="rgb(211,146,6)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="565" width="0.0805%" height="15" fill="rgb(219,44,39)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4267%" y="549" width="0.0805%" height="15" fill="rgb(234,128,11)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4267%" y="533" width="0.0805%" height="15" fill="rgb(220,183,53)" fg:x="1061" fg:w="1"/><text x="85.6767%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5072%" y="565" width="0.0805%" height="15" fill="rgb(213,219,32)" fg:x="1062" fg:w="1"/><text x="85.7572%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="85.1047%" y="709" width="0.5636%" height="15" fill="rgb(232,156,16)" fg:x="1057" fg:w="7"/><text x="85.3547%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="85.3462%" y="693" width="0.3221%" height="15" fill="rgb(246,135,34)" fg:x="1060" fg:w="4"/><text x="85.5962%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="85.3462%" y="677" width="0.3221%" height="15" fill="rgb(241,99,0)" fg:x="1060" fg:w="4"/><text x="85.5962%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="85.3462%" y="661" width="0.3221%" height="15" fill="rgb(222,103,45)" fg:x="1060" fg:w="4"/><text x="85.5962%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="85.4267%" y="645" width="0.2415%" height="15" fill="rgb(212,57,4)" fg:x="1061" fg:w="3"/><text x="85.6767%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="85.4267%" y="629" width="0.2415%" height="15" fill="rgb(215,68,47)" fg:x="1061" fg:w="3"/><text x="85.6767%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.5072%" y="613" width="0.1610%" height="15" fill="rgb(230,84,2)" fg:x="1062" fg:w="2"/><text x="85.7572%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.5072%" y="597" width="0.1610%" height="15" fill="rgb(220,102,14)" fg:x="1062" fg:w="2"/><text x="85.7572%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.5072%" y="581" width="0.1610%" height="15" fill="rgb(240,10,32)" fg:x="1062" fg:w="2"/><text x="85.7572%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5878%" y="565" width="0.0805%" height="15" fill="rgb(215,47,27)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5878%" y="549" width="0.0805%" height="15" fill="rgb(233,188,43)" fg:x="1063" fg:w="1"/><text x="85.8378%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.7488%" y="517" width="0.0805%" height="15" fill="rgb(253,190,1)" fg:x="1065" fg:w="1"/><text x="85.9988%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.7488%" y="693" width="0.1610%" height="15" fill="rgb(206,114,52)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.7488%" y="677" width="0.1610%" height="15" fill="rgb(233,120,37)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.7488%" y="661" width="0.1610%" height="15" fill="rgb(214,52,39)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.7488%" y="645" width="0.1610%" height="15" fill="rgb(223,80,29)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.7488%" y="629" width="0.1610%" height="15" fill="rgb(230,101,40)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.7488%" y="613" width="0.1610%" height="15" fill="rgb(219,211,8)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.7488%" y="597" width="0.1610%" height="15" fill="rgb(252,126,28)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.7488%" y="581" width="0.1610%" height="15" fill="rgb(215,56,38)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.7488%" y="565" width="0.1610%" height="15" fill="rgb(249,55,44)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.7488%" y="549" width="0.1610%" height="15" fill="rgb(220,221,32)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.7488%" y="533" width="0.1610%" height="15" fill="rgb(212,216,41)" fg:x="1065" fg:w="2"/><text x="85.9988%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8293%" y="517" width="0.0805%" height="15" fill="rgb(228,213,43)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8293%" y="501" width="0.0805%" height="15" fill="rgb(211,31,26)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8293%" y="485" width="0.0805%" height="15" fill="rgb(229,202,19)" fg:x="1066" fg:w="1"/><text x="86.0793%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.9098%" y="693" width="0.0805%" height="15" fill="rgb(229,105,46)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9098%" y="677" width="0.0805%" height="15" fill="rgb(235,108,1)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9098%" y="661" width="0.0805%" height="15" fill="rgb(245,111,35)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.9098%" y="645" width="0.0805%" height="15" fill="rgb(219,185,31)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9098%" y="629" width="0.0805%" height="15" fill="rgb(214,4,43)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9098%" y="613" width="0.0805%" height="15" fill="rgb(235,227,40)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9098%" y="597" width="0.0805%" height="15" fill="rgb(230,88,30)" fg:x="1067" fg:w="1"/><text x="86.1598%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.0709%" y="645" width="0.0805%" height="15" fill="rgb(216,217,1)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0709%" y="629" width="0.0805%" height="15" fill="rgb(248,139,50)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0709%" y="613" width="0.0805%" height="15" fill="rgb(233,1,21)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0709%" y="597" width="0.0805%" height="15" fill="rgb(215,183,12)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0709%" y="581" width="0.0805%" height="15" fill="rgb(229,104,42)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0709%" y="565" width="0.0805%" height="15" fill="rgb(243,34,48)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0709%" y="549" width="0.0805%" height="15" fill="rgb(239,11,44)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0709%" y="533" width="0.0805%" height="15" fill="rgb(231,98,35)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0709%" y="517" width="0.0805%" height="15" fill="rgb(233,28,25)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0709%" y="501" width="0.0805%" height="15" fill="rgb(234,123,11)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0709%" y="485" width="0.0805%" height="15" fill="rgb(220,69,3)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0709%" y="469" width="0.0805%" height="15" fill="rgb(214,64,36)" fg:x="1069" fg:w="1"/><text x="86.3209%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.1514%" y="629" width="0.0805%" height="15" fill="rgb(211,138,32)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1514%" y="613" width="0.0805%" height="15" fill="rgb(213,118,47)" fg:x="1070" fg:w="1"/><text x="86.4014%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (95 samples, 7.65%)</title><rect x="78.6634%" y="741" width="7.6490%" height="15" fill="rgb(243,124,49)" fg:x="977" fg:w="95"/><text x="78.9134%" y="751.50">plugins_co..</text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.21%)</title><rect x="85.1047%" y="725" width="1.2077%" height="15" fill="rgb(221,30,28)" fg:x="1057" fg:w="15"/><text x="85.3547%" y="735.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="85.6683%" y="709" width="0.6441%" height="15" fill="rgb(246,37,13)" fg:x="1064" fg:w="8"/><text x="85.9183%" y="719.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="85.9903%" y="693" width="0.3221%" height="15" fill="rgb(249,66,14)" fg:x="1068" fg:w="4"/><text x="86.2403%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="85.9903%" y="677" width="0.3221%" height="15" fill="rgb(213,166,5)" fg:x="1068" fg:w="4"/><text x="86.2403%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="85.9903%" y="661" width="0.3221%" height="15" fill="rgb(221,66,24)" fg:x="1068" fg:w="4"/><text x="86.2403%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.1514%" y="645" width="0.1610%" height="15" fill="rgb(210,132,17)" fg:x="1070" fg:w="2"/><text x="86.4014%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.2319%" y="629" width="0.0805%" height="15" fill="rgb(243,202,5)" fg:x="1071" fg:w="1"/><text x="86.4819%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.2319%" y="613" width="0.0805%" height="15" fill="rgb(233,70,48)" fg:x="1071" fg:w="1"/><text x="86.4819%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.3124%" y="693" width="0.0805%" height="15" fill="rgb(238,41,26)" fg:x="1072" fg:w="1"/><text x="86.5624%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3124%" y="677" width="0.0805%" height="15" fill="rgb(241,19,31)" fg:x="1072" fg:w="1"/><text x="86.5624%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3124%" y="661" width="0.0805%" height="15" fill="rgb(214,76,10)" fg:x="1072" fg:w="1"/><text x="86.5624%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="86.3124%" y="741" width="0.1610%" height="15" fill="rgb(254,202,22)" fg:x="1072" fg:w="2"/><text x="86.5624%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="86.3124%" y="725" width="0.1610%" height="15" fill="rgb(214,72,24)" fg:x="1072" fg:w="2"/><text x="86.5624%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.3124%" y="709" width="0.1610%" height="15" fill="rgb(221,92,46)" fg:x="1072" fg:w="2"/><text x="86.5624%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.3929%" y="693" width="0.0805%" height="15" fill="rgb(246,13,50)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3929%" y="677" width="0.0805%" height="15" fill="rgb(240,165,38)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3929%" y="661" width="0.0805%" height="15" fill="rgb(241,24,51)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3929%" y="645" width="0.0805%" height="15" fill="rgb(227,51,44)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3929%" y="629" width="0.0805%" height="15" fill="rgb(231,121,3)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3929%" y="613" width="0.0805%" height="15" fill="rgb(245,3,41)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3929%" y="597" width="0.0805%" height="15" fill="rgb(214,13,26)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="86.3929%" y="581" width="0.0805%" height="15" fill="rgb(252,75,11)" fg:x="1073" fg:w="1"/><text x="86.6429%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="86.4734%" y="741" width="0.0805%" height="15" fill="rgb(218,226,17)" fg:x="1074" fg:w="1"/><text x="86.7234%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4734%" y="725" width="0.0805%" height="15" fill="rgb(248,89,38)" fg:x="1074" fg:w="1"/><text x="86.7234%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.5539%" y="693" width="0.0805%" height="15" fill="rgb(237,73,46)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.5539%" y="677" width="0.0805%" height="15" fill="rgb(242,78,33)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.5539%" y="661" width="0.0805%" height="15" fill="rgb(235,60,3)" fg:x="1075" fg:w="1"/><text x="86.8039%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.5539%" y="709" width="0.1610%" height="15" fill="rgb(216,172,19)" fg:x="1075" fg:w="2"/><text x="86.8039%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.6345%" y="693" width="0.0805%" height="15" fill="rgb(227,6,42)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.6345%" y="677" width="0.0805%" height="15" fill="rgb(223,207,42)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6345%" y="661" width="0.0805%" height="15" fill="rgb(246,138,30)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6345%" y="645" width="0.0805%" height="15" fill="rgb(251,199,47)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6345%" y="629" width="0.0805%" height="15" fill="rgb(228,218,44)" fg:x="1076" fg:w="1"/><text x="86.8845%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7150%" y="629" width="0.0805%" height="15" fill="rgb(220,68,6)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7150%" y="613" width="0.0805%" height="15" fill="rgb(240,60,26)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7150%" y="597" width="0.0805%" height="15" fill="rgb(211,200,19)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7150%" y="581" width="0.0805%" height="15" fill="rgb(242,145,30)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7150%" y="565" width="0.0805%" height="15" fill="rgb(225,64,13)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7150%" y="549" width="0.0805%" height="15" fill="rgb(218,103,35)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7150%" y="533" width="0.0805%" height="15" fill="rgb(216,93,46)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7150%" y="517" width="0.0805%" height="15" fill="rgb(225,159,27)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.7150%" y="501" width="0.0805%" height="15" fill="rgb(225,204,11)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.7150%" y="485" width="0.0805%" height="15" fill="rgb(205,56,4)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.7150%" y="469" width="0.0805%" height="15" fill="rgb(206,6,35)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.7150%" y="453" width="0.0805%" height="15" fill="rgb(247,73,52)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7150%" y="437" width="0.0805%" height="15" fill="rgb(246,97,4)" fg:x="1077" fg:w="1"/><text x="86.9650%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.7150%" y="677" width="0.1610%" height="15" fill="rgb(212,37,15)" fg:x="1077" fg:w="2"/><text x="86.9650%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.7150%" y="661" width="0.1610%" height="15" fill="rgb(208,130,40)" fg:x="1077" fg:w="2"/><text x="86.9650%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.7150%" y="645" width="0.1610%" height="15" fill="rgb(236,55,29)" fg:x="1077" fg:w="2"/><text x="86.9650%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7955%" y="629" width="0.0805%" height="15" fill="rgb(209,156,45)" fg:x="1078" fg:w="1"/><text x="87.0455%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="86.5539%" y="741" width="0.4026%" height="15" fill="rgb(249,107,4)" fg:x="1075" fg:w="5"/><text x="86.8039%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="86.5539%" y="725" width="0.4026%" height="15" fill="rgb(227,7,13)" fg:x="1075" fg:w="5"/><text x="86.8039%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="86.7150%" y="709" width="0.2415%" height="15" fill="rgb(250,129,14)" fg:x="1077" fg:w="3"/><text x="86.9650%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="86.7150%" y="693" width="0.2415%" height="15" fill="rgb(229,92,13)" fg:x="1077" fg:w="3"/><text x="86.9650%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.8760%" y="677" width="0.0805%" height="15" fill="rgb(245,98,39)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.8760%" y="661" width="0.0805%" height="15" fill="rgb(234,135,48)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.8760%" y="645" width="0.0805%" height="15" fill="rgb(230,98,28)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8760%" y="629" width="0.0805%" height="15" fill="rgb(223,121,0)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8760%" y="613" width="0.0805%" height="15" fill="rgb(234,173,33)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8760%" y="597" width="0.0805%" height="15" fill="rgb(245,47,8)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8760%" y="581" width="0.0805%" height="15" fill="rgb(205,17,20)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.8760%" y="565" width="0.0805%" height="15" fill="rgb(232,151,16)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8760%" y="549" width="0.0805%" height="15" fill="rgb(208,30,32)" fg:x="1079" fg:w="1"/><text x="87.1260%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.9565%" y="709" width="0.0805%" height="15" fill="rgb(254,26,3)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.9565%" y="693" width="0.0805%" height="15" fill="rgb(240,177,30)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.9565%" y="677" width="0.0805%" height="15" fill="rgb(248,76,44)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="661" width="0.0805%" height="15" fill="rgb(241,186,54)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.9565%" y="645" width="0.0805%" height="15" fill="rgb(249,171,29)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="629" width="0.0805%" height="15" fill="rgb(237,151,44)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="613" width="0.0805%" height="15" fill="rgb(228,174,30)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="597" width="0.0805%" height="15" fill="rgb(252,14,37)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.9565%" y="581" width="0.0805%" height="15" fill="rgb(207,111,40)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="565" width="0.0805%" height="15" fill="rgb(248,171,54)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="549" width="0.0805%" height="15" fill="rgb(211,127,2)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="533" width="0.0805%" height="15" fill="rgb(236,87,47)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.9565%" y="517" width="0.0805%" height="15" fill="rgb(223,190,45)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.9565%" y="501" width="0.0805%" height="15" fill="rgb(215,5,16)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="86.9565%" y="485" width="0.0805%" height="15" fill="rgb(252,82,33)" fg:x="1080" fg:w="1"/><text x="87.2065%" y="495.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (163 samples, 13.12%)</title><rect x="73.9936%" y="757" width="13.1240%" height="15" fill="rgb(247,213,44)" fg:x="919" fg:w="163"/><text x="74.2436%" y="767.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (2 samples, 0.16%)</title><rect x="86.9565%" y="741" width="0.1610%" height="15" fill="rgb(205,196,44)" fg:x="1080" fg:w="2"/><text x="87.2065%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.9565%" y="725" width="0.1610%" height="15" fill="rgb(237,96,54)" fg:x="1080" fg:w="2"/><text x="87.2065%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.0370%" y="709" width="0.0805%" height="15" fill="rgb(230,113,34)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="87.0370%" y="693" width="0.0805%" height="15" fill="rgb(221,224,12)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="87.0370%" y="677" width="0.0805%" height="15" fill="rgb(219,112,44)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.0370%" y="661" width="0.0805%" height="15" fill="rgb(210,31,13)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0370%" y="645" width="0.0805%" height="15" fill="rgb(230,25,16)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0370%" y="629" width="0.0805%" height="15" fill="rgb(246,108,53)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0370%" y="613" width="0.0805%" height="15" fill="rgb(241,172,50)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0370%" y="597" width="0.0805%" height="15" fill="rgb(235,141,10)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0370%" y="581" width="0.0805%" height="15" fill="rgb(220,174,43)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.0370%" y="565" width="0.0805%" height="15" fill="rgb(215,181,40)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0370%" y="549" width="0.0805%" height="15" fill="rgb(230,97,2)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.0370%" y="533" width="0.0805%" height="15" fill="rgb(211,25,27)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0370%" y="517" width="0.0805%" height="15" fill="rgb(230,87,26)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0370%" y="501" width="0.0805%" height="15" fill="rgb(227,160,17)" fg:x="1081" fg:w="1"/><text x="87.2870%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="87.1176%" y="757" width="0.0805%" height="15" fill="rgb(244,85,34)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="87.1176%" y="741" width="0.0805%" height="15" fill="rgb(207,70,0)" fg:x="1082" fg:w="1"/><text x="87.3676%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="87.1981%" y="741" width="0.0805%" height="15" fill="rgb(223,129,7)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1981%" y="725" width="0.0805%" height="15" fill="rgb(246,105,7)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.1981%" y="709" width="0.0805%" height="15" fill="rgb(215,154,42)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.1981%" y="693" width="0.0805%" height="15" fill="rgb(220,215,30)" fg:x="1083" fg:w="1"/><text x="87.4481%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.2786%" y="709" width="0.0805%" height="15" fill="rgb(228,81,51)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="87.2786%" y="693" width="0.0805%" height="15" fill="rgb(247,71,54)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2786%" y="677" width="0.0805%" height="15" fill="rgb(234,176,34)" fg:x="1084" fg:w="1"/><text x="87.5286%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.4396%" y="661" width="0.0805%" height="15" fill="rgb(241,103,54)" fg:x="1086" fg:w="1"/><text x="87.6896%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.4396%" y="645" width="0.0805%" height="15" fill="rgb(228,22,34)" fg:x="1086" fg:w="1"/><text x="87.6896%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.5201%" y="645" width="0.1610%" height="15" fill="rgb(241,179,48)" fg:x="1087" fg:w="2"/><text x="87.7701%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6006%" y="629" width="0.0805%" height="15" fill="rgb(235,167,37)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.6006%" y="613" width="0.0805%" height="15" fill="rgb(213,109,30)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.6006%" y="597" width="0.0805%" height="15" fill="rgb(222,172,16)" fg:x="1088" fg:w="1"/><text x="87.8506%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7617%" y="597" width="0.0805%" height="15" fill="rgb(233,192,5)" fg:x="1090" fg:w="1"/><text x="88.0117%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.7617%" y="581" width="0.0805%" height="15" fill="rgb(247,189,41)" fg:x="1090" fg:w="1"/><text x="88.0117%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.7617%" y="565" width="0.0805%" height="15" fill="rgb(218,134,47)" fg:x="1090" fg:w="1"/><text x="88.0117%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.7617%" y="549" width="0.0805%" height="15" fill="rgb(216,29,3)" fg:x="1090" fg:w="1"/><text x="88.0117%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.7617%" y="629" width="0.1610%" height="15" fill="rgb(246,140,12)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.7617%" y="613" width="0.1610%" height="15" fill="rgb(230,136,11)" fg:x="1090" fg:w="2"/><text x="88.0117%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.8422%" y="597" width="0.0805%" height="15" fill="rgb(247,22,47)" fg:x="1091" fg:w="1"/><text x="88.0922%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.8422%" y="581" width="0.0805%" height="15" fill="rgb(218,84,22)" fg:x="1091" fg:w="1"/><text x="88.0922%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9227%" y="629" width="0.0805%" height="15" fill="rgb(216,87,39)" fg:x="1092" fg:w="1"/><text x="88.1727%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9227%" y="613" width="0.0805%" height="15" fill="rgb(221,178,8)" fg:x="1092" fg:w="1"/><text x="88.1727%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9227%" y="597" width="0.0805%" height="15" fill="rgb(230,42,11)" fg:x="1092" fg:w="1"/><text x="88.1727%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9227%" y="581" width="0.0805%" height="15" fill="rgb(237,229,4)" fg:x="1092" fg:w="1"/><text x="88.1727%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0032%" y="613" width="0.0805%" height="15" fill="rgb(222,31,33)" fg:x="1093" fg:w="1"/><text x="88.2532%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0032%" y="597" width="0.0805%" height="15" fill="rgb(210,17,39)" fg:x="1093" fg:w="1"/><text x="88.2532%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="88.0837%" y="581" width="0.2415%" height="15" fill="rgb(244,93,20)" fg:x="1094" fg:w="3"/><text x="88.3337%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.2448%" y="565" width="0.0805%" height="15" fill="rgb(210,40,47)" fg:x="1096" fg:w="1"/><text x="88.4948%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="88.3253%" y="565" width="0.3221%" height="15" fill="rgb(239,211,47)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="88.3253%" y="549" width="0.3221%" height="15" fill="rgb(251,223,49)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="88.3253%" y="533" width="0.3221%" height="15" fill="rgb(221,149,5)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="88.3253%" y="517" width="0.3221%" height="15" fill="rgb(219,224,51)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="88.3253%" y="501" width="0.3221%" height="15" fill="rgb(223,7,8)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="88.3253%" y="485" width="0.3221%" height="15" fill="rgb(241,217,22)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="495.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="88.3253%" y="469" width="0.3221%" height="15" fill="rgb(248,209,0)" fg:x="1097" fg:w="4"/><text x="88.5753%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="88.0032%" y="629" width="0.7246%" height="15" fill="rgb(217,205,4)" fg:x="1093" fg:w="9"/><text x="88.2532%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="88.0837%" y="613" width="0.6441%" height="15" fill="rgb(228,124,39)" fg:x="1094" fg:w="8"/><text x="88.3337%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="88.0837%" y="597" width="0.6441%" height="15" fill="rgb(250,116,42)" fg:x="1094" fg:w="8"/><text x="88.3337%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="88.3253%" y="581" width="0.4026%" height="15" fill="rgb(223,202,9)" fg:x="1097" fg:w="5"/><text x="88.5753%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.6473%" y="565" width="0.0805%" height="15" fill="rgb(242,222,40)" fg:x="1101" fg:w="1"/><text x="88.8973%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.6473%" y="549" width="0.0805%" height="15" fill="rgb(229,99,46)" fg:x="1101" fg:w="1"/><text x="88.8973%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6473%" y="533" width="0.0805%" height="15" fill="rgb(225,56,46)" fg:x="1101" fg:w="1"/><text x="88.8973%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="87.6812%" y="645" width="1.2077%" height="15" fill="rgb(227,94,5)" fg:x="1089" fg:w="15"/><text x="87.9312%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.7279%" y="629" width="0.1610%" height="15" fill="rgb(205,112,38)" fg:x="1102" fg:w="2"/><text x="88.9779%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.8084%" y="613" width="0.0805%" height="15" fill="rgb(231,133,46)" fg:x="1103" fg:w="1"/><text x="89.0584%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="88.8084%" y="597" width="0.0805%" height="15" fill="rgb(217,16,9)" fg:x="1103" fg:w="1"/><text x="89.0584%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.53%)</title><rect x="87.4396%" y="677" width="1.5298%" height="15" fill="rgb(249,173,9)" fg:x="1086" fg:w="19"/><text x="87.6896%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="87.5201%" y="661" width="1.4493%" height="15" fill="rgb(205,163,53)" fg:x="1087" fg:w="18"/><text x="87.7701%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8889%" y="645" width="0.0805%" height="15" fill="rgb(217,54,41)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.8889%" y="629" width="0.0805%" height="15" fill="rgb(228,216,12)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.8889%" y="613" width="0.0805%" height="15" fill="rgb(244,228,15)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.8889%" y="597" width="0.0805%" height="15" fill="rgb(221,176,53)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.8889%" y="581" width="0.0805%" height="15" fill="rgb(205,94,34)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.8889%" y="565" width="0.0805%" height="15" fill="rgb(213,110,48)" fg:x="1104" fg:w="1"/><text x="89.1389%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.9694%" y="645" width="0.0805%" height="15" fill="rgb(236,142,28)" fg:x="1105" fg:w="1"/><text x="89.2194%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0499%" y="629" width="0.0805%" height="15" fill="rgb(225,135,29)" fg:x="1106" fg:w="1"/><text x="89.2999%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0499%" y="613" width="0.0805%" height="15" fill="rgb(252,45,31)" fg:x="1106" fg:w="1"/><text x="89.2999%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="89.2110%" y="613" width="0.2415%" height="15" fill="rgb(211,187,50)" fg:x="1108" fg:w="3"/><text x="89.4610%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3720%" y="597" width="0.0805%" height="15" fill="rgb(229,109,7)" fg:x="1110" fg:w="1"/><text x="89.6220%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="88.9694%" y="677" width="0.5636%" height="15" fill="rgb(251,131,51)" fg:x="1105" fg:w="7"/><text x="89.2194%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="88.9694%" y="661" width="0.5636%" height="15" fill="rgb(251,180,35)" fg:x="1105" fg:w="7"/><text x="89.2194%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="89.0499%" y="645" width="0.4831%" height="15" fill="rgb(211,46,32)" fg:x="1106" fg:w="6"/><text x="89.2999%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="89.1304%" y="629" width="0.4026%" height="15" fill="rgb(248,123,17)" fg:x="1107" fg:w="5"/><text x="89.3804%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4525%" y="613" width="0.0805%" height="15" fill="rgb(227,141,18)" fg:x="1111" fg:w="1"/><text x="89.7025%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4525%" y="597" width="0.0805%" height="15" fill="rgb(216,102,9)" fg:x="1111" fg:w="1"/><text x="89.7025%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4525%" y="581" width="0.0805%" height="15" fill="rgb(253,47,13)" fg:x="1111" fg:w="1"/><text x="89.7025%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4525%" y="565" width="0.0805%" height="15" fill="rgb(226,93,23)" fg:x="1111" fg:w="1"/><text x="89.7025%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5330%" y="597" width="0.0805%" height="15" fill="rgb(247,104,17)" fg:x="1112" fg:w="1"/><text x="89.7830%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6940%" y="565" width="0.0805%" height="15" fill="rgb(233,203,26)" fg:x="1114" fg:w="1"/><text x="89.9440%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.5330%" y="645" width="0.3221%" height="15" fill="rgb(244,98,49)" fg:x="1112" fg:w="4"/><text x="89.7830%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="89.5330%" y="629" width="0.3221%" height="15" fill="rgb(235,134,22)" fg:x="1112" fg:w="4"/><text x="89.7830%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.5330%" y="613" width="0.3221%" height="15" fill="rgb(221,70,32)" fg:x="1112" fg:w="4"/><text x="89.7830%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.6135%" y="597" width="0.2415%" height="15" fill="rgb(238,15,50)" fg:x="1113" fg:w="3"/><text x="89.8635%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.6135%" y="581" width="0.2415%" height="15" fill="rgb(215,221,48)" fg:x="1113" fg:w="3"/><text x="89.8635%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7746%" y="565" width="0.0805%" height="15" fill="rgb(236,73,3)" fg:x="1115" fg:w="1"/><text x="90.0246%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7746%" y="549" width="0.0805%" height="15" fill="rgb(250,107,11)" fg:x="1115" fg:w="1"/><text x="90.0246%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7746%" y="533" width="0.0805%" height="15" fill="rgb(242,39,14)" fg:x="1115" fg:w="1"/><text x="90.0246%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (5 samples, 0.40%)</title><rect x="89.5330%" y="661" width="0.4026%" height="15" fill="rgb(248,164,37)" fg:x="1112" fg:w="5"/><text x="89.7830%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.8551%" y="645" width="0.0805%" height="15" fill="rgb(217,60,12)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.8551%" y="629" width="0.0805%" height="15" fill="rgb(240,125,29)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.8551%" y="613" width="0.0805%" height="15" fill="rgb(208,207,28)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.8551%" y="597" width="0.0805%" height="15" fill="rgb(209,159,27)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.8551%" y="581" width="0.0805%" height="15" fill="rgb(251,176,53)" fg:x="1116" fg:w="1"/><text x="90.1051%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.0966%" y="629" width="0.1610%" height="15" fill="rgb(211,85,7)" fg:x="1119" fg:w="2"/><text x="90.3466%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2576%" y="629" width="0.0805%" height="15" fill="rgb(216,64,54)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2576%" y="613" width="0.0805%" height="15" fill="rgb(217,54,24)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2576%" y="597" width="0.0805%" height="15" fill="rgb(208,206,53)" fg:x="1121" fg:w="1"/><text x="90.5076%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="90.3382%" y="629" width="0.3221%" height="15" fill="rgb(251,74,39)" fg:x="1122" fg:w="4"/><text x="90.5882%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="90.3382%" y="613" width="0.3221%" height="15" fill="rgb(226,47,5)" fg:x="1122" fg:w="4"/><text x="90.5882%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="90.3382%" y="597" width="0.3221%" height="15" fill="rgb(234,111,33)" fg:x="1122" fg:w="4"/><text x="90.5882%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.4187%" y="581" width="0.2415%" height="15" fill="rgb(251,14,10)" fg:x="1123" fg:w="3"/><text x="90.6687%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="90.4992%" y="565" width="0.1610%" height="15" fill="rgb(232,43,0)" fg:x="1124" fg:w="2"/><text x="90.7492%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="90.9018%" y="597" width="0.0805%" height="15" fill="rgb(222,68,43)" fg:x="1129" fg:w="1"/><text x="91.1518%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.9823%" y="581" width="0.1610%" height="15" fill="rgb(217,24,23)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.9823%" y="565" width="0.1610%" height="15" fill="rgb(229,209,14)" fg:x="1130" fg:w="2"/><text x="91.2323%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.0628%" y="549" width="0.0805%" height="15" fill="rgb(250,149,48)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0628%" y="533" width="0.0805%" height="15" fill="rgb(210,120,37)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0628%" y="517" width="0.0805%" height="15" fill="rgb(210,21,8)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0628%" y="501" width="0.0805%" height="15" fill="rgb(243,145,7)" fg:x="1131" fg:w="1"/><text x="91.3128%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3043%" y="549" width="0.0805%" height="15" fill="rgb(238,178,32)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3043%" y="533" width="0.0805%" height="15" fill="rgb(222,4,10)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3043%" y="517" width="0.0805%" height="15" fill="rgb(239,7,37)" fg:x="1134" fg:w="1"/><text x="91.5543%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.3849%" y="453" width="0.2415%" height="15" fill="rgb(215,31,37)" fg:x="1135" fg:w="3"/><text x="91.6349%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.3849%" y="437" width="0.2415%" height="15" fill="rgb(224,83,33)" fg:x="1135" fg:w="3"/><text x="91.6349%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="91.3849%" y="421" width="0.2415%" height="15" fill="rgb(239,55,3)" fg:x="1135" fg:w="3"/><text x="91.6349%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="91.3849%" y="469" width="0.3221%" height="15" fill="rgb(247,92,11)" fg:x="1135" fg:w="4"/><text x="91.6349%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.6264%" y="453" width="0.0805%" height="15" fill="rgb(239,200,7)" fg:x="1138" fg:w="1"/><text x="91.8764%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="91.3849%" y="533" width="0.4026%" height="15" fill="rgb(227,115,8)" fg:x="1135" fg:w="5"/><text x="91.6349%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="91.3849%" y="517" width="0.4026%" height="15" fill="rgb(215,189,27)" fg:x="1135" fg:w="5"/><text x="91.6349%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="91.3849%" y="501" width="0.4026%" height="15" fill="rgb(251,216,39)" fg:x="1135" fg:w="5"/><text x="91.6349%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="91.3849%" y="485" width="0.4026%" height="15" fill="rgb(207,29,47)" fg:x="1135" fg:w="5"/><text x="91.6349%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7069%" y="469" width="0.0805%" height="15" fill="rgb(210,71,34)" fg:x="1139" fg:w="1"/><text x="91.9569%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.13%)</title><rect x="90.7407%" y="613" width="1.1272%" height="15" fill="rgb(253,217,51)" fg:x="1127" fg:w="14"/><text x="90.9907%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="90.9823%" y="597" width="0.8857%" height="15" fill="rgb(222,117,46)" fg:x="1130" fg:w="11"/><text x="91.2323%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="91.1433%" y="581" width="0.7246%" height="15" fill="rgb(226,132,6)" fg:x="1132" fg:w="9"/><text x="91.3933%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="91.2238%" y="565" width="0.6441%" height="15" fill="rgb(254,145,51)" fg:x="1133" fg:w="8"/><text x="91.4738%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="91.3849%" y="549" width="0.4831%" height="15" fill="rgb(231,199,27)" fg:x="1135" fg:w="6"/><text x="91.6349%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7874%" y="533" width="0.0805%" height="15" fill="rgb(245,158,14)" fg:x="1140" fg:w="1"/><text x="92.0374%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.01%)</title><rect x="89.9356%" y="661" width="2.0129%" height="15" fill="rgb(240,113,14)" fg:x="1117" fg:w="25"/><text x="90.1856%" y="671.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.01%)</title><rect x="89.9356%" y="645" width="2.0129%" height="15" fill="rgb(210,20,13)" fg:x="1117" fg:w="25"/><text x="90.1856%" y="655.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.29%)</title><rect x="90.6602%" y="629" width="1.2882%" height="15" fill="rgb(241,144,13)" fg:x="1126" fg:w="16"/><text x="90.9102%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8680%" y="613" width="0.0805%" height="15" fill="rgb(235,43,34)" fg:x="1141" fg:w="1"/><text x="92.1180%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.0290%" y="405" width="0.0805%" height="15" fill="rgb(208,36,20)" fg:x="1143" fg:w="1"/><text x="92.2790%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.0290%" y="389" width="0.0805%" height="15" fill="rgb(239,204,10)" fg:x="1143" fg:w="1"/><text x="92.2790%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.0290%" y="437" width="0.1610%" height="15" fill="rgb(217,84,43)" fg:x="1143" fg:w="2"/><text x="92.2790%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.0290%" y="421" width="0.1610%" height="15" fill="rgb(241,170,50)" fg:x="1143" fg:w="2"/><text x="92.2790%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1095%" y="405" width="0.0805%" height="15" fill="rgb(226,205,29)" fg:x="1144" fg:w="1"/><text x="92.3595%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1095%" y="389" width="0.0805%" height="15" fill="rgb(233,113,1)" fg:x="1144" fg:w="1"/><text x="92.3595%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1900%" y="437" width="0.0805%" height="15" fill="rgb(253,98,13)" fg:x="1145" fg:w="1"/><text x="92.4400%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.9485%" y="469" width="0.4026%" height="15" fill="rgb(211,115,12)" fg:x="1142" fg:w="5"/><text x="92.1985%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.9485%" y="453" width="0.4026%" height="15" fill="rgb(208,12,16)" fg:x="1142" fg:w="5"/><text x="92.1985%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2705%" y="437" width="0.0805%" height="15" fill="rgb(237,193,54)" fg:x="1146" fg:w="1"/><text x="92.5205%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.3510%" y="469" width="0.0805%" height="15" fill="rgb(243,22,42)" fg:x="1147" fg:w="1"/><text x="92.6010%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="91.9485%" y="501" width="0.5636%" height="15" fill="rgb(233,151,36)" fg:x="1142" fg:w="7"/><text x="92.1985%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="91.9485%" y="485" width="0.5636%" height="15" fill="rgb(237,57,45)" fg:x="1142" fg:w="7"/><text x="92.1985%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.4316%" y="469" width="0.0805%" height="15" fill="rgb(221,88,17)" fg:x="1148" fg:w="1"/><text x="92.6816%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.4316%" y="453" width="0.0805%" height="15" fill="rgb(230,79,15)" fg:x="1148" fg:w="1"/><text x="92.6816%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4316%" y="437" width="0.0805%" height="15" fill="rgb(213,57,13)" fg:x="1148" fg:w="1"/><text x="92.6816%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="91.9485%" y="565" width="0.6441%" height="15" fill="rgb(222,116,39)" fg:x="1142" fg:w="8"/><text x="92.1985%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="91.9485%" y="549" width="0.6441%" height="15" fill="rgb(245,107,2)" fg:x="1142" fg:w="8"/><text x="92.1985%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="91.9485%" y="533" width="0.6441%" height="15" fill="rgb(238,1,10)" fg:x="1142" fg:w="8"/><text x="92.1985%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="91.9485%" y="517" width="0.6441%" height="15" fill="rgb(249,4,48)" fg:x="1142" fg:w="8"/><text x="92.1985%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5121%" y="501" width="0.0805%" height="15" fill="rgb(223,151,18)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5121%" y="485" width="0.0805%" height="15" fill="rgb(227,65,43)" fg:x="1149" fg:w="1"/><text x="92.7621%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="92.5926%" y="565" width="0.2415%" height="15" fill="rgb(218,40,45)" fg:x="1150" fg:w="3"/><text x="92.8426%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="92.6731%" y="549" width="0.1610%" height="15" fill="rgb(252,121,31)" fg:x="1151" fg:w="2"/><text x="92.9231%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="91.9485%" y="597" width="1.0467%" height="15" fill="rgb(219,158,43)" fg:x="1142" fg:w="13"/><text x="92.1985%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="91.9485%" y="581" width="1.0467%" height="15" fill="rgb(231,162,42)" fg:x="1142" fg:w="13"/><text x="92.1985%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.8341%" y="565" width="0.1610%" height="15" fill="rgb(217,179,25)" fg:x="1153" fg:w="2"/><text x="93.0841%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9147%" y="549" width="0.0805%" height="15" fill="rgb(206,212,31)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9147%" y="533" width="0.0805%" height="15" fill="rgb(235,144,12)" fg:x="1154" fg:w="1"/><text x="93.1647%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9952%" y="597" width="0.0805%" height="15" fill="rgb(213,51,10)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.9952%" y="581" width="0.0805%" height="15" fill="rgb(231,145,14)" fg:x="1155" fg:w="1"/><text x="93.2452%" y="591.50"></text></g><g><title>engine::session::state::State::close (73 samples, 5.88%)</title><rect x="87.2786%" y="741" width="5.8776%" height="15" fill="rgb(235,15,28)" fg:x="1084" fg:w="73"/><text x="87.5286%" y="751.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (73 samples, 5.88%)</title><rect x="87.2786%" y="725" width="5.8776%" height="15" fill="rgb(237,206,10)" fg:x="1084" fg:w="73"/><text x="87.5286%" y="735.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (72 samples, 5.80%)</title><rect x="87.3591%" y="709" width="5.7971%" height="15" fill="rgb(236,227,27)" fg:x="1085" fg:w="72"/><text x="87.6091%" y="719.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (72 samples, 5.80%)</title><rect x="87.3591%" y="693" width="5.7971%" height="15" fill="rgb(246,83,35)" fg:x="1085" fg:w="72"/><text x="87.6091%" y="703.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (45 samples, 3.62%)</title><rect x="89.5330%" y="677" width="3.6232%" height="15" fill="rgb(220,136,24)" fg:x="1112" fg:w="45"/><text x="89.7830%" y="687.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (15 samples, 1.21%)</title><rect x="91.9485%" y="661" width="1.2077%" height="15" fill="rgb(217,3,25)" fg:x="1142" fg:w="15"/><text x="92.1985%" y="671.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.21%)</title><rect x="91.9485%" y="645" width="1.2077%" height="15" fill="rgb(239,24,14)" fg:x="1142" fg:w="15"/><text x="92.1985%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="91.9485%" y="629" width="1.2077%" height="15" fill="rgb(244,16,53)" fg:x="1142" fg:w="15"/><text x="92.1985%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.21%)</title><rect x="91.9485%" y="613" width="1.2077%" height="15" fill="rgb(208,175,44)" fg:x="1142" fg:w="15"/><text x="92.1985%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0757%" y="597" width="0.0805%" height="15" fill="rgb(252,18,48)" fg:x="1156" fg:w="1"/><text x="93.3257%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0757%" y="581" width="0.0805%" height="15" fill="rgb(234,199,32)" fg:x="1156" fg:w="1"/><text x="93.3257%" y="591.50"></text></g><g><title>engine::session::Session::close (75 samples, 6.04%)</title><rect x="87.1981%" y="757" width="6.0386%" height="15" fill="rgb(225,77,54)" fg:x="1083" fg:w="75"/><text x="87.4481%" y="767.50">engine::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="93.1562%" y="741" width="0.0805%" height="15" fill="rgb(225,42,25)" fg:x="1157" fg:w="1"/><text x="93.4062%" y="751.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="93.1562%" y="725" width="0.0805%" height="15" fill="rgb(242,227,46)" fg:x="1157" fg:w="1"/><text x="93.4062%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="93.1562%" y="709" width="0.0805%" height="15" fill="rgb(246,197,35)" fg:x="1157" fg:w="1"/><text x="93.4062%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="93.1562%" y="693" width="0.0805%" height="15" fill="rgb(215,159,26)" fg:x="1157" fg:w="1"/><text x="93.4062%" y="703.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="93.1562%" y="677" width="0.0805%" height="15" fill="rgb(212,194,50)" fg:x="1157" fg:w="1"/><text x="93.4062%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.3172%" y="549" width="0.0805%" height="15" fill="rgb(246,132,1)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="93.3172%" y="533" width="0.0805%" height="15" fill="rgb(217,71,7)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.3172%" y="517" width="0.0805%" height="15" fill="rgb(252,59,32)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.3172%" y="501" width="0.0805%" height="15" fill="rgb(253,204,25)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.3172%" y="485" width="0.0805%" height="15" fill="rgb(232,21,16)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3172%" y="469" width="0.0805%" height="15" fill="rgb(248,90,29)" fg:x="1159" fg:w="1"/><text x="93.5672%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.3977%" y="453" width="0.0805%" height="15" fill="rgb(249,223,7)" fg:x="1160" fg:w="1"/><text x="93.6477%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3977%" y="437" width="0.0805%" height="15" fill="rgb(231,119,42)" fg:x="1160" fg:w="1"/><text x="93.6477%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4783%" y="373" width="0.0805%" height="15" fill="rgb(215,41,35)" fg:x="1161" fg:w="1"/><text x="93.7283%" y="383.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="93.3977%" y="533" width="0.2415%" height="15" fill="rgb(220,44,45)" fg:x="1160" fg:w="3"/><text x="93.6477%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.3977%" y="517" width="0.2415%" height="15" fill="rgb(253,197,36)" fg:x="1160" fg:w="3"/><text x="93.6477%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.3977%" y="501" width="0.2415%" height="15" fill="rgb(245,225,54)" fg:x="1160" fg:w="3"/><text x="93.6477%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.3977%" y="485" width="0.2415%" height="15" fill="rgb(239,94,37)" fg:x="1160" fg:w="3"/><text x="93.6477%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.3977%" y="469" width="0.2415%" height="15" fill="rgb(242,217,10)" fg:x="1160" fg:w="3"/><text x="93.6477%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.4783%" y="453" width="0.1610%" height="15" fill="rgb(250,193,7)" fg:x="1161" fg:w="2"/><text x="93.7283%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4783%" y="437" width="0.1610%" height="15" fill="rgb(230,104,19)" fg:x="1161" fg:w="2"/><text x="93.7283%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.4783%" y="421" width="0.1610%" height="15" fill="rgb(230,181,4)" fg:x="1161" fg:w="2"/><text x="93.7283%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.4783%" y="405" width="0.1610%" height="15" fill="rgb(216,219,49)" fg:x="1161" fg:w="2"/><text x="93.7283%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4783%" y="389" width="0.1610%" height="15" fill="rgb(254,144,0)" fg:x="1161" fg:w="2"/><text x="93.7283%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.5588%" y="373" width="0.0805%" height="15" fill="rgb(205,209,38)" fg:x="1162" fg:w="1"/><text x="93.8088%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.5588%" y="357" width="0.0805%" height="15" fill="rgb(240,21,42)" fg:x="1162" fg:w="1"/><text x="93.8088%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.7198%" y="453" width="0.0805%" height="15" fill="rgb(241,132,3)" fg:x="1164" fg:w="1"/><text x="93.9698%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.7198%" y="437" width="0.0805%" height="15" fill="rgb(225,14,2)" fg:x="1164" fg:w="1"/><text x="93.9698%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.7198%" y="421" width="0.0805%" height="15" fill="rgb(210,141,35)" fg:x="1164" fg:w="1"/><text x="93.9698%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.6393%" y="501" width="0.2415%" height="15" fill="rgb(251,14,44)" fg:x="1163" fg:w="3"/><text x="93.8893%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.6393%" y="485" width="0.2415%" height="15" fill="rgb(247,48,18)" fg:x="1163" fg:w="3"/><text x="93.8893%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.7198%" y="469" width="0.1610%" height="15" fill="rgb(225,0,40)" fg:x="1164" fg:w="2"/><text x="93.9698%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8003%" y="453" width="0.0805%" height="15" fill="rgb(221,31,33)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.8003%" y="437" width="0.0805%" height="15" fill="rgb(237,42,40)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.8003%" y="421" width="0.0805%" height="15" fill="rgb(233,51,29)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8003%" y="405" width="0.0805%" height="15" fill="rgb(226,58,20)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.8003%" y="389" width="0.0805%" height="15" fill="rgb(208,98,7)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.8003%" y="373" width="0.0805%" height="15" fill="rgb(228,143,44)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8003%" y="357" width="0.0805%" height="15" fill="rgb(246,55,38)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.8003%" y="341" width="0.0805%" height="15" fill="rgb(247,87,16)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.8003%" y="325" width="0.0805%" height="15" fill="rgb(234,129,42)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8003%" y="309" width="0.0805%" height="15" fill="rgb(220,82,16)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.8003%" y="293" width="0.0805%" height="15" fill="rgb(211,88,4)" fg:x="1165" fg:w="1"/><text x="94.0503%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="93.3172%" y="597" width="0.6441%" height="15" fill="rgb(248,151,21)" fg:x="1159" fg:w="8"/><text x="93.5672%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="93.3172%" y="581" width="0.6441%" height="15" fill="rgb(238,163,6)" fg:x="1159" fg:w="8"/><text x="93.5672%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="93.3172%" y="565" width="0.6441%" height="15" fill="rgb(209,183,11)" fg:x="1159" fg:w="8"/><text x="93.5672%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="93.3977%" y="549" width="0.5636%" height="15" fill="rgb(219,37,20)" fg:x="1160" fg:w="7"/><text x="93.6477%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="93.6393%" y="533" width="0.3221%" height="15" fill="rgb(210,158,4)" fg:x="1163" fg:w="4"/><text x="93.8893%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.6393%" y="517" width="0.3221%" height="15" fill="rgb(221,167,53)" fg:x="1163" fg:w="4"/><text x="93.8893%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8808%" y="501" width="0.0805%" height="15" fill="rgb(237,151,45)" fg:x="1166" fg:w="1"/><text x="94.1308%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.0419%" y="533" width="0.0805%" height="15" fill="rgb(231,39,3)" fg:x="1168" fg:w="1"/><text x="94.2919%" y="543.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.89%)</title><rect x="93.3172%" y="661" width="0.8857%" height="15" fill="rgb(212,167,28)" fg:x="1159" fg:w="11"/><text x="93.5672%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.89%)</title><rect x="93.3172%" y="645" width="0.8857%" height="15" fill="rgb(232,178,8)" fg:x="1159" fg:w="11"/><text x="93.5672%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.89%)</title><rect x="93.3172%" y="629" width="0.8857%" height="15" fill="rgb(225,151,20)" fg:x="1159" fg:w="11"/><text x="93.5672%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.89%)</title><rect x="93.3172%" y="613" width="0.8857%" height="15" fill="rgb(238,3,37)" fg:x="1159" fg:w="11"/><text x="93.5672%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.9614%" y="597" width="0.2415%" height="15" fill="rgb(251,147,42)" fg:x="1167" fg:w="3"/><text x="94.2114%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.9614%" y="581" width="0.2415%" height="15" fill="rgb(208,173,10)" fg:x="1167" fg:w="3"/><text x="94.2114%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.9614%" y="565" width="0.2415%" height="15" fill="rgb(246,225,4)" fg:x="1167" fg:w="3"/><text x="94.2114%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.9614%" y="549" width="0.2415%" height="15" fill="rgb(248,102,6)" fg:x="1167" fg:w="3"/><text x="94.2114%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.1224%" y="533" width="0.0805%" height="15" fill="rgb(232,6,21)" fg:x="1169" fg:w="1"/><text x="94.3724%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.2029%" y="485" width="0.0805%" height="15" fill="rgb(221,179,22)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.2029%" y="469" width="0.0805%" height="15" fill="rgb(252,50,20)" fg:x="1170" fg:w="1"/><text x="94.4529%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.2834%" y="469" width="0.0805%" height="15" fill="rgb(222,56,38)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.2834%" y="453" width="0.0805%" height="15" fill="rgb(206,193,29)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.2834%" y="437" width="0.0805%" height="15" fill="rgb(239,192,45)" fg:x="1171" fg:w="1"/><text x="94.5334%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3639%" y="437" width="0.0805%" height="15" fill="rgb(254,18,36)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.3639%" y="421" width="0.0805%" height="15" fill="rgb(221,127,11)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3639%" y="405" width="0.0805%" height="15" fill="rgb(234,146,35)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3639%" y="389" width="0.0805%" height="15" fill="rgb(254,201,37)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.3639%" y="373" width="0.0805%" height="15" fill="rgb(211,202,23)" fg:x="1172" fg:w="1"/><text x="94.6139%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4444%" y="373" width="0.0805%" height="15" fill="rgb(237,91,2)" fg:x="1173" fg:w="1"/><text x="94.6944%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5250%" y="309" width="0.0805%" height="15" fill="rgb(226,228,36)" fg:x="1174" fg:w="1"/><text x="94.7750%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.6055%" y="309" width="0.0805%" height="15" fill="rgb(213,63,50)" fg:x="1175" fg:w="1"/><text x="94.8555%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="94.2834%" y="485" width="0.5636%" height="15" fill="rgb(235,194,19)" fg:x="1171" fg:w="7"/><text x="94.5334%" y="495.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="94.3639%" y="469" width="0.4831%" height="15" fill="rgb(207,204,18)" fg:x="1172" fg:w="6"/><text x="94.6139%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="94.3639%" y="453" width="0.4831%" height="15" fill="rgb(248,8,7)" fg:x="1172" fg:w="6"/><text x="94.6139%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="94.4444%" y="437" width="0.4026%" height="15" fill="rgb(223,145,47)" fg:x="1173" fg:w="5"/><text x="94.6944%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.4444%" y="421" width="0.4026%" height="15" fill="rgb(228,84,11)" fg:x="1173" fg:w="5"/><text x="94.6944%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="94.4444%" y="405" width="0.4026%" height="15" fill="rgb(218,76,45)" fg:x="1173" fg:w="5"/><text x="94.6944%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.4444%" y="389" width="0.4026%" height="15" fill="rgb(223,80,15)" fg:x="1173" fg:w="5"/><text x="94.6944%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="94.5250%" y="373" width="0.3221%" height="15" fill="rgb(219,218,33)" fg:x="1174" fg:w="4"/><text x="94.7750%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.5250%" y="357" width="0.3221%" height="15" fill="rgb(208,51,11)" fg:x="1174" fg:w="4"/><text x="94.7750%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.5250%" y="341" width="0.3221%" height="15" fill="rgb(229,165,39)" fg:x="1174" fg:w="4"/><text x="94.7750%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.5250%" y="325" width="0.3221%" height="15" fill="rgb(241,100,24)" fg:x="1174" fg:w="4"/><text x="94.7750%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.6860%" y="309" width="0.1610%" height="15" fill="rgb(228,14,23)" fg:x="1176" fg:w="2"/><text x="94.9360%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.6860%" y="293" width="0.1610%" height="15" fill="rgb(247,116,52)" fg:x="1176" fg:w="2"/><text x="94.9360%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="94.6860%" y="277" width="0.1610%" height="15" fill="rgb(216,149,33)" fg:x="1176" fg:w="2"/><text x="94.9360%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.6860%" y="261" width="0.1610%" height="15" fill="rgb(238,142,29)" fg:x="1176" fg:w="2"/><text x="94.9360%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.7665%" y="245" width="0.0805%" height="15" fill="rgb(224,83,40)" fg:x="1177" fg:w="1"/><text x="95.0165%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.8470%" y="469" width="0.0805%" height="15" fill="rgb(234,165,11)" fg:x="1178" fg:w="1"/><text x="95.0970%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.8470%" y="453" width="0.0805%" height="15" fill="rgb(215,96,23)" fg:x="1178" fg:w="1"/><text x="95.0970%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0081%" y="373" width="0.0805%" height="15" fill="rgb(233,179,26)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0081%" y="357" width="0.0805%" height="15" fill="rgb(225,129,33)" fg:x="1180" fg:w="1"/><text x="95.2581%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0081%" y="437" width="0.1610%" height="15" fill="rgb(237,49,13)" fg:x="1180" fg:w="2"/><text x="95.2581%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0081%" y="421" width="0.1610%" height="15" fill="rgb(211,3,31)" fg:x="1180" fg:w="2"/><text x="95.2581%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0081%" y="405" width="0.1610%" height="15" fill="rgb(216,152,19)" fg:x="1180" fg:w="2"/><text x="95.2581%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.0081%" y="389" width="0.1610%" height="15" fill="rgb(251,121,35)" fg:x="1180" fg:w="2"/><text x="95.2581%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0886%" y="373" width="0.0805%" height="15" fill="rgb(210,217,47)" fg:x="1181" fg:w="1"/><text x="95.3386%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.1691%" y="437" width="0.0805%" height="15" fill="rgb(244,116,22)" fg:x="1182" fg:w="1"/><text x="95.4191%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.1691%" y="421" width="0.0805%" height="15" fill="rgb(228,17,21)" fg:x="1182" fg:w="1"/><text x="95.4191%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.2496%" y="373" width="0.0805%" height="15" fill="rgb(240,149,34)" fg:x="1183" fg:w="1"/><text x="95.4996%" y="383.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (18 samples, 1.45%)</title><rect x="94.2029%" y="501" width="1.4493%" height="15" fill="rgb(208,125,47)" fg:x="1170" fg:w="18"/><text x="94.4529%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="94.8470%" y="485" width="0.8052%" height="15" fill="rgb(249,186,39)" fg:x="1178" fg:w="10"/><text x="95.0970%" y="495.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="94.9275%" y="469" width="0.7246%" height="15" fill="rgb(240,220,33)" fg:x="1179" fg:w="9"/><text x="95.1775%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="94.9275%" y="453" width="0.7246%" height="15" fill="rgb(243,110,23)" fg:x="1179" fg:w="9"/><text x="95.1775%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="95.2496%" y="437" width="0.4026%" height="15" fill="rgb(219,163,46)" fg:x="1183" fg:w="5"/><text x="95.4996%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.2496%" y="421" width="0.4026%" height="15" fill="rgb(216,126,30)" fg:x="1183" fg:w="5"/><text x="95.4996%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="95.2496%" y="405" width="0.4026%" height="15" fill="rgb(208,139,11)" fg:x="1183" fg:w="5"/><text x="95.4996%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="95.2496%" y="389" width="0.4026%" height="15" fill="rgb(213,118,36)" fg:x="1183" fg:w="5"/><text x="95.4996%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="95.3301%" y="373" width="0.3221%" height="15" fill="rgb(226,43,17)" fg:x="1184" fg:w="4"/><text x="95.5801%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.3301%" y="357" width="0.3221%" height="15" fill="rgb(254,217,4)" fg:x="1184" fg:w="4"/><text x="95.5801%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.4106%" y="341" width="0.2415%" height="15" fill="rgb(210,134,47)" fg:x="1185" fg:w="3"/><text x="95.6606%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.4106%" y="325" width="0.2415%" height="15" fill="rgb(237,24,49)" fg:x="1185" fg:w="3"/><text x="95.6606%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.5717%" y="309" width="0.0805%" height="15" fill="rgb(251,39,46)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.5717%" y="293" width="0.0805%" height="15" fill="rgb(251,220,3)" fg:x="1187" fg:w="1"/><text x="95.8217%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6522%" y="469" width="0.0805%" height="15" fill="rgb(228,105,12)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6522%" y="453" width="0.0805%" height="15" fill="rgb(215,196,1)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6522%" y="437" width="0.0805%" height="15" fill="rgb(214,33,39)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6522%" y="421" width="0.0805%" height="15" fill="rgb(220,19,52)" fg:x="1188" fg:w="1"/><text x="95.9022%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.8132%" y="325" width="0.0805%" height="15" fill="rgb(221,78,38)" fg:x="1190" fg:w="1"/><text x="96.0632%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="95.8132%" y="309" width="0.0805%" height="15" fill="rgb(253,30,16)" fg:x="1190" fg:w="1"/><text x="96.0632%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8132%" y="293" width="0.0805%" height="15" fill="rgb(242,65,0)" fg:x="1190" fg:w="1"/><text x="96.0632%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="95.8132%" y="357" width="0.1610%" height="15" fill="rgb(235,201,12)" fg:x="1190" fg:w="2"/><text x="96.0632%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="95.8132%" y="341" width="0.1610%" height="15" fill="rgb(233,161,9)" fg:x="1190" fg:w="2"/><text x="96.0632%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.8937%" y="325" width="0.0805%" height="15" fill="rgb(241,207,41)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.8937%" y="309" width="0.0805%" height="15" fill="rgb(212,69,46)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.8937%" y="293" width="0.0805%" height="15" fill="rgb(239,69,45)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8937%" y="277" width="0.0805%" height="15" fill="rgb(242,117,48)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8937%" y="261" width="0.0805%" height="15" fill="rgb(228,41,36)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8937%" y="245" width="0.0805%" height="15" fill="rgb(212,3,32)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8937%" y="229" width="0.0805%" height="15" fill="rgb(233,41,49)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8937%" y="213" width="0.0805%" height="15" fill="rgb(252,170,49)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8937%" y="197" width="0.0805%" height="15" fill="rgb(229,53,26)" fg:x="1191" fg:w="1"/><text x="96.1437%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9742%" y="293" width="0.0805%" height="15" fill="rgb(217,157,12)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.9742%" y="277" width="0.0805%" height="15" fill="rgb(227,17,9)" fg:x="1192" fg:w="1"/><text x="96.2242%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.1353%" y="261" width="0.0805%" height="15" fill="rgb(218,84,12)" fg:x="1194" fg:w="1"/><text x="96.3853%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.2158%" y="261" width="0.0805%" height="15" fill="rgb(212,79,24)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.2158%" y="245" width="0.0805%" height="15" fill="rgb(217,222,37)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="96.2158%" y="229" width="0.0805%" height="15" fill="rgb(246,208,8)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="96.2158%" y="213" width="0.0805%" height="15" fill="rgb(244,133,10)" fg:x="1195" fg:w="1"/><text x="96.4658%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.4573%" y="133" width="0.1610%" height="15" fill="rgb(209,219,41)" fg:x="1198" fg:w="2"/><text x="96.7073%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.5378%" y="117" width="0.0805%" height="15" fill="rgb(253,175,45)" fg:x="1199" fg:w="1"/><text x="96.7878%" y="127.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="95.9742%" y="341" width="0.7246%" height="15" fill="rgb(235,100,37)" fg:x="1192" fg:w="9"/><text x="96.2242%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="95.9742%" y="325" width="0.7246%" height="15" fill="rgb(225,87,19)" fg:x="1192" fg:w="9"/><text x="96.2242%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="95.9742%" y="309" width="0.7246%" height="15" fill="rgb(217,152,17)" fg:x="1192" fg:w="9"/><text x="96.2242%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="96.0548%" y="293" width="0.6441%" height="15" fill="rgb(235,72,13)" fg:x="1193" fg:w="8"/><text x="96.3048%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="96.0548%" y="277" width="0.6441%" height="15" fill="rgb(233,140,18)" fg:x="1193" fg:w="8"/><text x="96.3048%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.2963%" y="261" width="0.4026%" height="15" fill="rgb(207,212,28)" fg:x="1196" fg:w="5"/><text x="96.5463%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.2963%" y="245" width="0.4026%" height="15" fill="rgb(220,130,25)" fg:x="1196" fg:w="5"/><text x="96.5463%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.2963%" y="229" width="0.4026%" height="15" fill="rgb(205,55,34)" fg:x="1196" fg:w="5"/><text x="96.5463%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.2963%" y="213" width="0.4026%" height="15" fill="rgb(237,54,35)" fg:x="1196" fg:w="5"/><text x="96.5463%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.3768%" y="197" width="0.3221%" height="15" fill="rgb(208,67,23)" fg:x="1197" fg:w="4"/><text x="96.6268%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.4573%" y="181" width="0.2415%" height="15" fill="rgb(206,207,50)" fg:x="1198" fg:w="3"/><text x="96.7073%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.4573%" y="165" width="0.2415%" height="15" fill="rgb(213,211,42)" fg:x="1198" fg:w="3"/><text x="96.7073%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.4573%" y="149" width="0.2415%" height="15" fill="rgb(252,197,50)" fg:x="1198" fg:w="3"/><text x="96.7073%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.6184%" y="133" width="0.0805%" height="15" fill="rgb(251,211,41)" fg:x="1200" fg:w="1"/><text x="96.8684%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7794%" y="261" width="0.0805%" height="15" fill="rgb(229,211,5)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7794%" y="245" width="0.0805%" height="15" fill="rgb(239,36,31)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7794%" y="229" width="0.0805%" height="15" fill="rgb(248,67,31)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7794%" y="213" width="0.0805%" height="15" fill="rgb(249,55,44)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7794%" y="197" width="0.0805%" height="15" fill="rgb(216,82,12)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7794%" y="181" width="0.0805%" height="15" fill="rgb(242,174,1)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7794%" y="165" width="0.0805%" height="15" fill="rgb(208,120,29)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7794%" y="149" width="0.0805%" height="15" fill="rgb(221,105,43)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.7794%" y="133" width="0.0805%" height="15" fill="rgb(234,124,22)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.7794%" y="117" width="0.0805%" height="15" fill="rgb(212,23,30)" fg:x="1202" fg:w="1"/><text x="97.0294%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8599%" y="261" width="0.0805%" height="15" fill="rgb(219,122,53)" fg:x="1203" fg:w="1"/><text x="97.1099%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.8599%" y="245" width="0.0805%" height="15" fill="rgb(248,84,24)" fg:x="1203" fg:w="1"/><text x="97.1099%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8599%" y="229" width="0.0805%" height="15" fill="rgb(245,115,18)" fg:x="1203" fg:w="1"/><text x="97.1099%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.8599%" y="213" width="0.0805%" height="15" fill="rgb(227,176,51)" fg:x="1203" fg:w="1"/><text x="97.1099%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8599%" y="197" width="0.0805%" height="15" fill="rgb(229,63,42)" fg:x="1203" fg:w="1"/><text x="97.1099%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.13%)</title><rect x="95.9742%" y="357" width="1.1272%" height="15" fill="rgb(247,202,24)" fg:x="1192" fg:w="14"/><text x="96.2242%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.6989%" y="341" width="0.4026%" height="15" fill="rgb(244,173,20)" fg:x="1201" fg:w="5"/><text x="96.9489%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.6989%" y="325" width="0.4026%" height="15" fill="rgb(242,81,47)" fg:x="1201" fg:w="5"/><text x="96.9489%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="96.7794%" y="309" width="0.3221%" height="15" fill="rgb(231,185,54)" fg:x="1202" fg:w="4"/><text x="97.0294%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.7794%" y="293" width="0.3221%" height="15" fill="rgb(243,55,32)" fg:x="1202" fg:w="4"/><text x="97.0294%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.7794%" y="277" width="0.3221%" height="15" fill="rgb(208,167,19)" fg:x="1202" fg:w="4"/><text x="97.0294%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9404%" y="261" width="0.1610%" height="15" fill="rgb(231,72,35)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9404%" y="245" width="0.1610%" height="15" fill="rgb(250,173,51)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="96.9404%" y="229" width="0.1610%" height="15" fill="rgb(209,5,22)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9404%" y="213" width="0.1610%" height="15" fill="rgb(250,174,19)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9404%" y="197" width="0.1610%" height="15" fill="rgb(217,3,49)" fg:x="1204" fg:w="2"/><text x="97.1904%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.0209%" y="181" width="0.0805%" height="15" fill="rgb(218,225,5)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0209%" y="165" width="0.0805%" height="15" fill="rgb(236,89,11)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0209%" y="149" width="0.0805%" height="15" fill="rgb(206,33,28)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.0209%" y="133" width="0.0805%" height="15" fill="rgb(241,56,42)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0209%" y="117" width="0.0805%" height="15" fill="rgb(222,44,11)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0209%" y="101" width="0.0805%" height="15" fill="rgb(234,111,20)" fg:x="1205" fg:w="1"/><text x="97.2709%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1014%" y="309" width="0.0805%" height="15" fill="rgb(237,77,6)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1014%" y="293" width="0.0805%" height="15" fill="rgb(235,111,23)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1014%" y="277" width="0.0805%" height="15" fill="rgb(251,135,29)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1014%" y="261" width="0.0805%" height="15" fill="rgb(217,57,1)" fg:x="1206" fg:w="1"/><text x="97.3514%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="97.1014%" y="357" width="0.2415%" height="15" fill="rgb(249,119,31)" fg:x="1206" fg:w="3"/><text x="97.3514%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.1014%" y="341" width="0.2415%" height="15" fill="rgb(233,164,33)" fg:x="1206" fg:w="3"/><text x="97.3514%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.1014%" y="325" width="0.2415%" height="15" fill="rgb(250,217,43)" fg:x="1206" fg:w="3"/><text x="97.3514%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1820%" y="309" width="0.1610%" height="15" fill="rgb(232,154,50)" fg:x="1207" fg:w="2"/><text x="97.4320%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1820%" y="293" width="0.1610%" height="15" fill="rgb(227,190,8)" fg:x="1207" fg:w="2"/><text x="97.4320%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1820%" y="277" width="0.1610%" height="15" fill="rgb(209,217,32)" fg:x="1207" fg:w="2"/><text x="97.4320%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1820%" y="261" width="0.1610%" height="15" fill="rgb(243,203,50)" fg:x="1207" fg:w="2"/><text x="97.4320%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.2625%" y="245" width="0.0805%" height="15" fill="rgb(232,152,27)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2625%" y="229" width="0.0805%" height="15" fill="rgb(240,34,29)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2625%" y="213" width="0.0805%" height="15" fill="rgb(215,185,52)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2625%" y="197" width="0.0805%" height="15" fill="rgb(240,89,49)" fg:x="1208" fg:w="1"/><text x="97.5125%" y="207.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="97.3430%" y="357" width="0.2415%" height="15" fill="rgb(225,12,52)" fg:x="1209" fg:w="3"/><text x="97.5930%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.3430%" y="341" width="0.2415%" height="15" fill="rgb(239,128,45)" fg:x="1209" fg:w="3"/><text x="97.5930%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.3430%" y="325" width="0.2415%" height="15" fill="rgb(211,78,47)" fg:x="1209" fg:w="3"/><text x="97.5930%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="97.3430%" y="309" width="0.2415%" height="15" fill="rgb(232,31,21)" fg:x="1209" fg:w="3"/><text x="97.5930%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="97.3430%" y="293" width="0.2415%" height="15" fill="rgb(222,168,14)" fg:x="1209" fg:w="3"/><text x="97.5930%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (24 samples, 1.93%)</title><rect x="95.7327%" y="469" width="1.9324%" height="15" fill="rgb(209,128,24)" fg:x="1189" fg:w="24"/><text x="95.9827%" y="479.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (24 samples, 1.93%)</title><rect x="95.7327%" y="453" width="1.9324%" height="15" fill="rgb(249,35,13)" fg:x="1189" fg:w="24"/><text x="95.9827%" y="463.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="95.7327%" y="437" width="1.9324%" height="15" fill="rgb(218,7,2)" fg:x="1189" fg:w="24"/><text x="95.9827%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 1.93%)</title><rect x="95.7327%" y="421" width="1.9324%" height="15" fill="rgb(238,107,27)" fg:x="1189" fg:w="24"/><text x="95.9827%" y="431.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (23 samples, 1.85%)</title><rect x="95.8132%" y="405" width="1.8519%" height="15" fill="rgb(217,88,38)" fg:x="1190" fg:w="23"/><text x="96.0632%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (23 samples, 1.85%)</title><rect x="95.8132%" y="389" width="1.8519%" height="15" fill="rgb(230,207,0)" fg:x="1190" fg:w="23"/><text x="96.0632%" y="399.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (23 samples, 1.85%)</title><rect x="95.8132%" y="373" width="1.8519%" height="15" fill="rgb(249,64,54)" fg:x="1190" fg:w="23"/><text x="96.0632%" y="383.50">e..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="97.5845%" y="357" width="0.0805%" height="15" fill="rgb(231,7,11)" fg:x="1212" fg:w="1"/><text x="97.8345%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6651%" y="469" width="0.0805%" height="15" fill="rgb(205,149,21)" fg:x="1213" fg:w="1"/><text x="97.9151%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7456%" y="437" width="0.0805%" height="15" fill="rgb(215,126,34)" fg:x="1214" fg:w="1"/><text x="97.9956%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7456%" y="469" width="0.2415%" height="15" fill="rgb(241,132,45)" fg:x="1214" fg:w="3"/><text x="97.9956%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.7456%" y="453" width="0.2415%" height="15" fill="rgb(252,69,32)" fg:x="1214" fg:w="3"/><text x="97.9956%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="97.8261%" y="437" width="0.1610%" height="15" fill="rgb(232,204,19)" fg:x="1215" fg:w="2"/><text x="98.0761%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="97.8261%" y="421" width="0.1610%" height="15" fill="rgb(249,15,47)" fg:x="1215" fg:w="2"/><text x="98.0761%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="97.8261%" y="405" width="0.1610%" height="15" fill="rgb(209,227,23)" fg:x="1215" fg:w="2"/><text x="98.0761%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9066%" y="389" width="0.0805%" height="15" fill="rgb(248,92,24)" fg:x="1216" fg:w="1"/><text x="98.1566%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9066%" y="373" width="0.0805%" height="15" fill="rgb(247,59,2)" fg:x="1216" fg:w="1"/><text x="98.1566%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9066%" y="357" width="0.0805%" height="15" fill="rgb(221,30,5)" fg:x="1216" fg:w="1"/><text x="98.1566%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (59 samples, 4.75%)</title><rect x="93.3172%" y="725" width="4.7504%" height="15" fill="rgb(208,108,53)" fg:x="1159" fg:w="59"/><text x="93.5672%" y="735.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::apply_middleware (59 samples, 4.75%)</title><rect x="93.3172%" y="709" width="4.7504%" height="15" fill="rgb(211,183,26)" fg:x="1159" fg:w="59"/><text x="93.5672%" y="719.50">kernel..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (59 samples, 4.75%)</title><rect x="93.3172%" y="693" width="4.7504%" height="15" fill="rgb(232,132,4)" fg:x="1159" fg:w="59"/><text x="93.5672%" y="703.50">kernel..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (59 samples, 4.75%)</title><rect x="93.3172%" y="677" width="4.7504%" height="15" fill="rgb(253,128,37)" fg:x="1159" fg:w="59"/><text x="93.5672%" y="687.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 3.86%)</title><rect x="94.2029%" y="661" width="3.8647%" height="15" fill="rgb(221,58,24)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="671.50">kern..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (48 samples, 3.86%)</title><rect x="94.2029%" y="645" width="3.8647%" height="15" fill="rgb(230,54,45)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="655.50">&lt;plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 3.86%)</title><rect x="94.2029%" y="629" width="3.8647%" height="15" fill="rgb(254,21,18)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="639.50">kern..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 3.86%)</title><rect x="94.2029%" y="613" width="3.8647%" height="15" fill="rgb(221,108,0)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="623.50">core..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (48 samples, 3.86%)</title><rect x="94.2029%" y="597" width="3.8647%" height="15" fill="rgb(206,95,1)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="607.50">kern..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (48 samples, 3.86%)</title><rect x="94.2029%" y="581" width="3.8647%" height="15" fill="rgb(237,52,5)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="591.50">core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (48 samples, 3.86%)</title><rect x="94.2029%" y="565" width="3.8647%" height="15" fill="rgb(218,150,34)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="575.50">&lt;all..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (48 samples, 3.86%)</title><rect x="94.2029%" y="549" width="3.8647%" height="15" fill="rgb(235,194,28)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="559.50">&lt;eng..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (48 samples, 3.86%)</title><rect x="94.2029%" y="533" width="3.8647%" height="15" fill="rgb(245,92,18)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="543.50">&lt;plu..</text></g><g><title>plugins_core::looking::model::new_area_observation (48 samples, 3.86%)</title><rect x="94.2029%" y="517" width="3.8647%" height="15" fill="rgb(253,203,53)" fg:x="1170" fg:w="48"/><text x="94.4529%" y="527.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (30 samples, 2.42%)</title><rect x="95.6522%" y="501" width="2.4155%" height="15" fill="rgb(249,185,47)" fg:x="1188" fg:w="30"/><text x="95.9022%" y="511.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (30 samples, 2.42%)</title><rect x="95.6522%" y="485" width="2.4155%" height="15" fill="rgb(252,194,52)" fg:x="1188" fg:w="30"/><text x="95.9022%" y="495.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9871%" y="469" width="0.0805%" height="15" fill="rgb(210,53,36)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9871%" y="453" width="0.0805%" height="15" fill="rgb(237,37,25)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9871%" y="437" width="0.0805%" height="15" fill="rgb(242,116,27)" fg:x="1217" fg:w="1"/><text x="98.2371%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.0676%" y="645" width="0.0805%" height="15" fill="rgb(213,185,26)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.0676%" y="629" width="0.0805%" height="15" fill="rgb(225,204,8)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0676%" y="613" width="0.0805%" height="15" fill="rgb(254,111,37)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0676%" y="597" width="0.0805%" height="15" fill="rgb(242,35,9)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0676%" y="581" width="0.0805%" height="15" fill="rgb(232,138,49)" fg:x="1218" fg:w="1"/><text x="98.3176%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1481%" y="629" width="0.0805%" height="15" fill="rgb(247,56,4)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.1481%" y="613" width="0.0805%" height="15" fill="rgb(226,179,17)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.1481%" y="597" width="0.0805%" height="15" fill="rgb(216,163,45)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.1481%" y="581" width="0.0805%" height="15" fill="rgb(211,157,3)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.1481%" y="565" width="0.0805%" height="15" fill="rgb(234,44,20)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1481%" y="549" width="0.0805%" height="15" fill="rgb(254,138,23)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.1481%" y="533" width="0.0805%" height="15" fill="rgb(206,119,39)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.1481%" y="517" width="0.0805%" height="15" fill="rgb(231,105,52)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.1481%" y="501" width="0.0805%" height="15" fill="rgb(250,20,5)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.1481%" y="485" width="0.0805%" height="15" fill="rgb(215,198,30)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.1481%" y="469" width="0.0805%" height="15" fill="rgb(246,142,8)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1481%" y="453" width="0.0805%" height="15" fill="rgb(243,26,38)" fg:x="1219" fg:w="1"/><text x="98.3981%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2287%" y="629" width="0.0805%" height="15" fill="rgb(205,133,28)" fg:x="1220" fg:w="1"/><text x="98.4787%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="98.0676%" y="677" width="0.3221%" height="15" fill="rgb(212,34,0)" fg:x="1218" fg:w="4"/><text x="98.3176%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="98.0676%" y="661" width="0.3221%" height="15" fill="rgb(251,226,22)" fg:x="1218" fg:w="4"/><text x="98.3176%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="98.1481%" y="645" width="0.2415%" height="15" fill="rgb(252,119,9)" fg:x="1219" fg:w="3"/><text x="98.3981%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.3092%" y="629" width="0.0805%" height="15" fill="rgb(213,150,50)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3092%" y="613" width="0.0805%" height="15" fill="rgb(212,24,39)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3092%" y="597" width="0.0805%" height="15" fill="rgb(213,46,39)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3092%" y="581" width="0.0805%" height="15" fill="rgb(239,106,12)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3092%" y="565" width="0.0805%" height="15" fill="rgb(249,229,21)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3092%" y="549" width="0.0805%" height="15" fill="rgb(212,158,3)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3092%" y="533" width="0.0805%" height="15" fill="rgb(253,26,48)" fg:x="1221" fg:w="1"/><text x="98.5592%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3897%" y="613" width="0.0805%" height="15" fill="rgb(238,178,20)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.3897%" y="597" width="0.0805%" height="15" fill="rgb(208,86,15)" fg:x="1222" fg:w="1"/><text x="98.6397%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4702%" y="613" width="0.0805%" height="15" fill="rgb(239,42,53)" fg:x="1223" fg:w="1"/><text x="98.7202%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5507%" y="581" width="0.0805%" height="15" fill="rgb(245,226,8)" fg:x="1224" fg:w="1"/><text x="98.8007%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5507%" y="565" width="0.0805%" height="15" fill="rgb(216,176,32)" fg:x="1224" fg:w="1"/><text x="98.8007%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6312%" y="549" width="0.0805%" height="15" fill="rgb(231,186,21)" fg:x="1225" fg:w="1"/><text x="98.8812%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.6312%" y="581" width="0.1610%" height="15" fill="rgb(205,95,49)" fg:x="1225" fg:w="2"/><text x="98.8812%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.6312%" y="565" width="0.1610%" height="15" fill="rgb(217,145,8)" fg:x="1225" fg:w="2"/><text x="98.8812%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.7118%" y="549" width="0.0805%" height="15" fill="rgb(239,144,48)" fg:x="1226" fg:w="1"/><text x="98.9618%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7923%" y="549" width="0.0805%" height="15" fill="rgb(214,189,23)" fg:x="1227" fg:w="1"/><text x="99.0423%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.9533%" y="517" width="0.0805%" height="15" fill="rgb(229,157,17)" fg:x="1229" fg:w="1"/><text x="99.2033%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9533%" y="501" width="0.0805%" height="15" fill="rgb(230,5,48)" fg:x="1229" fg:w="1"/><text x="99.2033%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0338%" y="485" width="0.0805%" height="15" fill="rgb(224,156,48)" fg:x="1230" fg:w="1"/><text x="99.2838%" y="495.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="98.3897%" y="661" width="0.8052%" height="15" fill="rgb(223,14,29)" fg:x="1222" fg:w="10"/><text x="98.6397%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="98.3897%" y="645" width="0.8052%" height="15" fill="rgb(229,96,36)" fg:x="1222" fg:w="10"/><text x="98.6397%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="98.3897%" y="629" width="0.8052%" height="15" fill="rgb(231,102,53)" fg:x="1222" fg:w="10"/><text x="98.6397%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="98.5507%" y="613" width="0.6441%" height="15" fill="rgb(210,77,38)" fg:x="1224" fg:w="8"/><text x="98.8007%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="98.5507%" y="597" width="0.6441%" height="15" fill="rgb(235,131,6)" fg:x="1224" fg:w="8"/><text x="98.8007%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.7923%" y="581" width="0.4026%" height="15" fill="rgb(252,55,38)" fg:x="1227" fg:w="5"/><text x="99.0423%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.7923%" y="565" width="0.4026%" height="15" fill="rgb(246,38,14)" fg:x="1227" fg:w="5"/><text x="99.0423%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.8728%" y="549" width="0.3221%" height="15" fill="rgb(242,27,5)" fg:x="1228" fg:w="4"/><text x="99.1228%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.9533%" y="533" width="0.2415%" height="15" fill="rgb(228,65,35)" fg:x="1229" fg:w="3"/><text x="99.2033%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.0338%" y="517" width="0.1610%" height="15" fill="rgb(245,93,11)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.0338%" y="501" width="0.1610%" height="15" fill="rgb(213,1,31)" fg:x="1230" fg:w="2"/><text x="99.2838%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1143%" y="485" width="0.0805%" height="15" fill="rgb(237,205,14)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1143%" y="469" width="0.0805%" height="15" fill="rgb(232,118,45)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1143%" y="453" width="0.0805%" height="15" fill="rgb(218,5,6)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.1143%" y="437" width="0.0805%" height="15" fill="rgb(251,87,51)" fg:x="1231" fg:w="1"/><text x="99.3643%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1948%" y="581" width="0.1610%" height="15" fill="rgb(207,225,20)" fg:x="1232" fg:w="2"/><text x="99.4448%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="565" width="0.0805%" height="15" fill="rgb(222,78,54)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2754%" y="549" width="0.0805%" height="15" fill="rgb(232,85,16)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="533" width="0.0805%" height="15" fill="rgb(244,25,33)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2754%" y="517" width="0.0805%" height="15" fill="rgb(233,24,36)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="501" width="0.0805%" height="15" fill="rgb(253,49,54)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2754%" y="485" width="0.0805%" height="15" fill="rgb(245,12,22)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2754%" y="469" width="0.0805%" height="15" fill="rgb(253,141,28)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2754%" y="453" width="0.0805%" height="15" fill="rgb(225,207,27)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2754%" y="437" width="0.0805%" height="15" fill="rgb(220,84,2)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="99.2754%" y="421" width="0.0805%" height="15" fill="rgb(224,37,37)" fg:x="1233" fg:w="1"/><text x="99.5254%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3559%" y="581" width="0.0805%" height="15" fill="rgb(220,143,18)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.3559%" y="565" width="0.0805%" height="15" fill="rgb(210,88,33)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3559%" y="549" width="0.0805%" height="15" fill="rgb(219,87,51)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3559%" y="533" width="0.0805%" height="15" fill="rgb(211,7,35)" fg:x="1234" fg:w="1"/><text x="99.6059%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.13%)</title><rect x="98.3897%" y="677" width="1.1272%" height="15" fill="rgb(232,77,2)" fg:x="1222" fg:w="14"/><text x="98.6397%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.1948%" y="661" width="0.3221%" height="15" fill="rgb(249,94,25)" fg:x="1232" fg:w="4"/><text x="99.4448%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1948%" y="645" width="0.3221%" height="15" fill="rgb(215,112,2)" fg:x="1232" fg:w="4"/><text x="99.4448%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="99.1948%" y="629" width="0.3221%" height="15" fill="rgb(226,115,48)" fg:x="1232" fg:w="4"/><text x="99.4448%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1948%" y="613" width="0.3221%" height="15" fill="rgb(249,196,10)" fg:x="1232" fg:w="4"/><text x="99.4448%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.1948%" y="597" width="0.3221%" height="15" fill="rgb(237,109,14)" fg:x="1232" fg:w="4"/><text x="99.4448%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4364%" y="581" width="0.0805%" height="15" fill="rgb(217,103,53)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4364%" y="565" width="0.0805%" height="15" fill="rgb(244,137,9)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4364%" y="549" width="0.0805%" height="15" fill="rgb(227,201,3)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4364%" y="533" width="0.0805%" height="15" fill="rgb(243,94,6)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4364%" y="517" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4364%" y="501" width="0.0805%" height="15" fill="rgb(247,10,30)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4364%" y="485" width="0.0805%" height="15" fill="rgb(205,26,28)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4364%" y="469" width="0.0805%" height="15" fill="rgb(206,99,35)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4364%" y="453" width="0.0805%" height="15" fill="rgb(238,130,40)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4364%" y="437" width="0.0805%" height="15" fill="rgb(224,126,31)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4364%" y="421" width="0.0805%" height="15" fill="rgb(254,105,17)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4364%" y="405" width="0.0805%" height="15" fill="rgb(216,87,36)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4364%" y="389" width="0.0805%" height="15" fill="rgb(240,21,12)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4364%" y="373" width="0.0805%" height="15" fill="rgb(245,192,34)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.4364%" y="357" width="0.0805%" height="15" fill="rgb(226,100,49)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.4364%" y="341" width="0.0805%" height="15" fill="rgb(245,188,27)" fg:x="1235" fg:w="1"/><text x="99.6864%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="98.0676%" y="709" width="1.6908%" height="15" fill="rgb(212,170,8)" fg:x="1218" fg:w="21"/><text x="98.3176%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.69%)</title><rect x="98.0676%" y="693" width="1.6908%" height="15" fill="rgb(217,113,29)" fg:x="1218" fg:w="21"/><text x="98.3176%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="99.5169%" y="677" width="0.2415%" height="15" fill="rgb(237,30,3)" fg:x="1236" fg:w="3"/><text x="99.7669%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="99.5169%" y="661" width="0.2415%" height="15" fill="rgb(227,19,28)" fg:x="1236" fg:w="3"/><text x="99.7669%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.5169%" y="645" width="0.2415%" height="15" fill="rgb(239,172,45)" fg:x="1236" fg:w="3"/><text x="99.7669%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6779%" y="629" width="0.0805%" height="15" fill="rgb(254,55,39)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6779%" y="613" width="0.0805%" height="15" fill="rgb(249,208,12)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6779%" y="597" width="0.0805%" height="15" fill="rgb(240,52,13)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6779%" y="581" width="0.0805%" height="15" fill="rgb(252,149,13)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.6779%" y="565" width="0.0805%" height="15" fill="rgb(232,81,48)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6779%" y="549" width="0.0805%" height="15" fill="rgb(222,144,2)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6779%" y="533" width="0.0805%" height="15" fill="rgb(216,81,32)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6779%" y="517" width="0.0805%" height="15" fill="rgb(244,78,51)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6779%" y="501" width="0.0805%" height="15" fill="rgb(217,66,21)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6779%" y="485" width="0.0805%" height="15" fill="rgb(247,101,42)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6779%" y="469" width="0.0805%" height="15" fill="rgb(227,81,39)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6779%" y="453" width="0.0805%" height="15" fill="rgb(220,223,44)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.6779%" y="437" width="0.0805%" height="15" fill="rgb(205,218,2)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.6779%" y="421" width="0.0805%" height="15" fill="rgb(212,207,28)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.6779%" y="405" width="0.0805%" height="15" fill="rgb(224,12,41)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.6779%" y="389" width="0.0805%" height="15" fill="rgb(216,118,12)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6779%" y="373" width="0.0805%" height="15" fill="rgb(252,97,46)" fg:x="1238" fg:w="1"/><text x="99.9279%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.7585%" y="709" width="0.0805%" height="15" fill="rgb(244,206,19)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7585%" y="693" width="0.0805%" height="15" fill="rgb(231,84,31)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7585%" y="677" width="0.0805%" height="15" fill="rgb(244,133,0)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7585%" y="661" width="0.0805%" height="15" fill="rgb(223,15,50)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7585%" y="645" width="0.0805%" height="15" fill="rgb(250,118,49)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7585%" y="629" width="0.0805%" height="15" fill="rgb(248,25,38)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7585%" y="613" width="0.0805%" height="15" fill="rgb(215,70,14)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.7585%" y="597" width="0.0805%" height="15" fill="rgb(215,28,15)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.7585%" y="581" width="0.0805%" height="15" fill="rgb(243,6,28)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.7585%" y="565" width="0.0805%" height="15" fill="rgb(222,130,1)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.7585%" y="549" width="0.0805%" height="15" fill="rgb(236,166,44)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.7585%" y="533" width="0.0805%" height="15" fill="rgb(221,108,14)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7585%" y="517" width="0.0805%" height="15" fill="rgb(252,3,45)" fg:x="1239" fg:w="1"/><text x="100.0085%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (23 samples, 1.85%)</title><rect x="98.0676%" y="725" width="1.8519%" height="15" fill="rgb(237,68,30)" fg:x="1218" fg:w="23"/><text x="98.3176%" y="735.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.8390%" y="709" width="0.0805%" height="15" fill="rgb(211,79,22)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8390%" y="693" width="0.0805%" height="15" fill="rgb(252,185,21)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8390%" y="677" width="0.0805%" height="15" fill="rgb(225,189,26)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8390%" y="661" width="0.0805%" height="15" fill="rgb(241,30,40)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8390%" y="645" width="0.0805%" height="15" fill="rgb(235,215,44)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8390%" y="629" width="0.0805%" height="15" fill="rgb(205,8,29)" fg:x="1240" fg:w="1"/><text x="100.0890%" y="639.50"></text></g><g><title>all (1,242 samples, 100%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(241,137,42)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1119.50"></text></g><g><title>simple-2cee43e7 (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(237,155,2)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1103.50">simple-2cee43e7</text></g><g><title>_start (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(245,29,42)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1087.50">_start</text></g><g><title>__libc_start_main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(234,101,35)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1071.50">__libc_start_main</text></g><g><title>main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(228,64,37)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1055.50">main</text></g><g><title>std::rt::lang_start_internal (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(217,214,36)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(243,70,3)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(253,158,52)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(234,111,54)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(217,70,32)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="975.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,242 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(234,18,33)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,242 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(234,12,49)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,242 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(236,10,21)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="927.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,242 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,182,45)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="911.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,242 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(217,95,36)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="895.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,242 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(212,110,31)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="879.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,242 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(206,32,53)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="863.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,242 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(246,141,37)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="847.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,242 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(219,16,7)" fg:x="0" fg:w="1242"/><text x="0.2500%" y="831.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (349 samples, 28.10%)</title><rect x="71.9002%" y="805" width="28.0998%" height="15" fill="rgb(230,205,45)" fg:x="893" fg:w="349"/><text x="72.1502%" y="815.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as crite..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (349 samples, 28.10%)</title><rect x="71.9002%" y="789" width="28.0998%" height="15" fill="rgb(231,43,49)" fg:x="893" fg:w="349"/><text x="72.1502%" y="799.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (349 samples, 28.10%)</title><rect x="71.9002%" y="773" width="28.0998%" height="15" fill="rgb(212,106,34)" fg:x="893" fg:w="349"/><text x="72.1502%" y="783.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (84 samples, 6.76%)</title><rect x="93.2367%" y="757" width="6.7633%" height="15" fill="rgb(206,83,17)" fg:x="1158" fg:w="84"/><text x="93.4867%" y="767.50">engine::s..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (84 samples, 6.76%)</title><rect x="93.2367%" y="741" width="6.7633%" height="15" fill="rgb(244,154,49)" fg:x="1158" fg:w="84"/><text x="93.4867%" y="751.50">engine::s..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9195%" y="725" width="0.0805%" height="15" fill="rgb(244,149,49)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.9195%" y="709" width="0.0805%" height="15" fill="rgb(227,134,18)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="719.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.9195%" y="693" width="0.0805%" height="15" fill="rgb(237,116,36)" fg:x="1241" fg:w="1"/><text x="100.1695%" y="703.50"></text></g></svg></svg>