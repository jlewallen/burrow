<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="1229"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.0814%" y="709" width="0.1627%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3314%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0814%" y="693" width="0.1627%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.3314%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1627%" y="677" width="0.0814%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.4127%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.4882%" y="613" width="0.1627%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="2"/><text x="0.7382%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4882%" y="597" width="0.1627%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="2"/><text x="0.7382%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8950%" y="597" width="0.1627%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="2"/><text x="1.1450%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.9764%" y="581" width="0.0814%" height="15" fill="rgb(207,160,47)" fg:x="12" fg:w="1"/><text x="1.2264%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9764%" y="565" width="0.0814%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="1.2264%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9764%" y="549" width="0.0814%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="1"/><text x="1.2264%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1391%" y="565" width="0.0814%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="1.3891%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="1.2205%" y="565" width="0.3255%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="4"/><text x="1.4705%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3832%" y="549" width="0.1627%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="2"/><text x="1.6332%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6273%" y="549" width="0.0814%" height="15" fill="rgb(216,20,37)" fg:x="20" fg:w="1"/><text x="1.8773%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.46%)</title><rect x="0.3255%" y="629" width="1.4646%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="18"/><text x="0.5755%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.14%)</title><rect x="0.6509%" y="613" width="1.1391%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="14"/><text x="0.9009%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="1.0578%" y="597" width="0.7323%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="9"/><text x="1.3078%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="1.1391%" y="581" width="0.6509%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="8"/><text x="1.3891%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.5460%" y="565" width="0.2441%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="3"/><text x="1.7960%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7087%" y="549" width="0.0814%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="1"/><text x="1.9587%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.71%)</title><rect x="0.2441%" y="661" width="1.7087%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="21"/><text x="0.4941%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.71%)</title><rect x="0.2441%" y="645" width="1.7087%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="21"/><text x="0.4941%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7901%" y="629" width="0.1627%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="2"/><text x="2.0401%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.87%)</title><rect x="0.2441%" y="693" width="1.8714%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="23"/><text x="0.4941%" y="703.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.87%)</title><rect x="0.2441%" y="677" width="1.8714%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="23"/><text x="0.4941%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="1.9528%" y="661" width="0.1627%" height="15" fill="rgb(241,131,45)" fg:x="24" fg:w="2"/><text x="2.2028%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0342%" y="645" width="0.0814%" height="15" fill="rgb(249,31,29)" fg:x="25" fg:w="1"/><text x="2.2842%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.36%)</title><rect x="0.0000%" y="725" width="2.3596%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="29"/><text x="0.2500%" y="735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.12%)</title><rect x="0.2441%" y="709" width="2.1155%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="26"/><text x="0.4941%" y="719.50">c..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.1155%" y="693" width="0.2441%" height="15" fill="rgb(214,148,48)" fg:x="26" fg:w="3"/><text x="2.3655%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="2.3596%" y="677" width="0.0814%" height="15" fill="rgb(232,36,49)" fg:x="29" fg:w="1"/><text x="2.6096%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="2.3596%" y="661" width="0.0814%" height="15" fill="rgb(209,103,24)" fg:x="29" fg:w="1"/><text x="2.6096%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.3596%" y="645" width="0.0814%" height="15" fill="rgb(229,88,8)" fg:x="29" fg:w="1"/><text x="2.6096%" y="655.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="2.6851%" y="629" width="0.0814%" height="15" fill="rgb(213,181,19)" fg:x="33" fg:w="1"/><text x="2.9351%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="2.6851%" y="613" width="0.0814%" height="15" fill="rgb(254,191,54)" fg:x="33" fg:w="1"/><text x="2.9351%" y="623.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.7665%" y="629" width="0.0814%" height="15" fill="rgb(241,83,37)" fg:x="34" fg:w="1"/><text x="3.0165%" y="639.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.7665%" y="613" width="0.0814%" height="15" fill="rgb(233,36,39)" fg:x="34" fg:w="1"/><text x="3.0165%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.7665%" y="597" width="0.0814%" height="15" fill="rgb(226,3,54)" fg:x="34" fg:w="1"/><text x="3.0165%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.7665%" y="581" width="0.0814%" height="15" fill="rgb(245,192,40)" fg:x="34" fg:w="1"/><text x="3.0165%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.7665%" y="565" width="0.0814%" height="15" fill="rgb(238,167,29)" fg:x="34" fg:w="1"/><text x="3.0165%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.7665%" y="549" width="0.0814%" height="15" fill="rgb(232,182,51)" fg:x="34" fg:w="1"/><text x="3.0165%" y="559.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="2.8478%" y="613" width="0.1627%" height="15" fill="rgb(231,60,39)" fg:x="35" fg:w="2"/><text x="3.0978%" y="623.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (2 samples, 0.16%)</title><rect x="2.8478%" y="597" width="0.1627%" height="15" fill="rgb(208,69,12)" fg:x="35" fg:w="2"/><text x="3.0978%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="2.8478%" y="581" width="0.1627%" height="15" fill="rgb(235,93,37)" fg:x="35" fg:w="2"/><text x="3.0978%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.16%)</title><rect x="2.8478%" y="565" width="0.1627%" height="15" fill="rgb(213,116,39)" fg:x="35" fg:w="2"/><text x="3.0978%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (2 samples, 0.16%)</title><rect x="2.8478%" y="549" width="0.1627%" height="15" fill="rgb(222,207,29)" fg:x="35" fg:w="2"/><text x="3.0978%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="2.8478%" y="533" width="0.1627%" height="15" fill="rgb(206,96,30)" fg:x="35" fg:w="2"/><text x="3.0978%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0106%" y="581" width="0.0814%" height="15" fill="rgb(218,138,4)" fg:x="37" fg:w="1"/><text x="3.2606%" y="591.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.0106%" y="613" width="0.1627%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="2"/><text x="3.2606%" y="623.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.0106%" y="597" width="0.1627%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="2"/><text x="3.2606%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="3.0919%" y="581" width="0.0814%" height="15" fill="rgb(206,27,48)" fg:x="38" fg:w="1"/><text x="3.3419%" y="591.50"></text></g><g><title>dlopen (8 samples, 0.65%)</title><rect x="3.1733%" y="613" width="0.6509%" height="15" fill="rgb(225,35,8)" fg:x="39" fg:w="8"/><text x="3.4233%" y="623.50"></text></g><g><title>_dl_catch_error (8 samples, 0.65%)</title><rect x="3.1733%" y="597" width="0.6509%" height="15" fill="rgb(250,213,24)" fg:x="39" fg:w="8"/><text x="3.4233%" y="607.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.65%)</title><rect x="3.1733%" y="581" width="0.6509%" height="15" fill="rgb(247,123,22)" fg:x="39" fg:w="8"/><text x="3.4233%" y="591.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.65%)</title><rect x="3.1733%" y="565" width="0.6509%" height="15" fill="rgb(231,138,38)" fg:x="39" fg:w="8"/><text x="3.4233%" y="575.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.65%)</title><rect x="3.1733%" y="549" width="0.6509%" height="15" fill="rgb(231,145,46)" fg:x="39" fg:w="8"/><text x="3.4233%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7429%" y="533" width="0.0814%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="1"/><text x="3.9929%" y="543.50"></text></g><g><title>libloading::safe::Library::new (13 samples, 1.06%)</title><rect x="2.8478%" y="629" width="1.0578%" height="15" fill="rgb(217,147,25)" fg:x="35" fg:w="13"/><text x="3.0978%" y="639.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="3.8242%" y="613" width="0.0814%" height="15" fill="rgb(247,81,37)" fg:x="47" fg:w="1"/><text x="4.0742%" y="623.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="3.8242%" y="597" width="0.0814%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="1"/><text x="4.0742%" y="607.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="3.8242%" y="581" width="0.0814%" height="15" fill="rgb(227,1,9)" fg:x="47" fg:w="1"/><text x="4.0742%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="3.8242%" y="565" width="0.0814%" height="15" fill="rgb(248,47,43)" fg:x="47" fg:w="1"/><text x="4.0742%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.8242%" y="549" width="0.0814%" height="15" fill="rgb(221,10,30)" fg:x="47" fg:w="1"/><text x="4.0742%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.8242%" y="533" width="0.0814%" height="15" fill="rgb(210,229,1)" fg:x="47" fg:w="1"/><text x="4.0742%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.8242%" y="517" width="0.0814%" height="15" fill="rgb(222,148,37)" fg:x="47" fg:w="1"/><text x="4.0742%" y="527.50"></text></g><g><title>engine::session::Session::initialize (19 samples, 1.55%)</title><rect x="2.4410%" y="677" width="1.5460%" height="15" fill="rgb(234,67,33)" fg:x="30" fg:w="19"/><text x="2.6910%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (17 samples, 1.38%)</title><rect x="2.6037%" y="661" width="1.3832%" height="15" fill="rgb(247,98,35)" fg:x="32" fg:w="17"/><text x="2.8537%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (17 samples, 1.38%)</title><rect x="2.6037%" y="645" width="1.3832%" height="15" fill="rgb(247,138,52)" fg:x="32" fg:w="17"/><text x="2.8537%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.9056%" y="629" width="0.0814%" height="15" fill="rgb(213,79,30)" fg:x="48" fg:w="1"/><text x="4.1556%" y="639.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.9056%" y="613" width="0.0814%" height="15" fill="rgb(246,177,23)" fg:x="48" fg:w="1"/><text x="4.1556%" y="623.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.9056%" y="597" width="0.0814%" height="15" fill="rgb(230,62,27)" fg:x="48" fg:w="1"/><text x="4.1556%" y="607.50"></text></g><g><title>&lt;plugins_core::building::BuildingPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="3.9870%" y="645" width="0.0814%" height="15" fill="rgb(216,154,8)" fg:x="49" fg:w="1"/><text x="4.2370%" y="655.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (23 samples, 1.87%)</title><rect x="2.3596%" y="725" width="1.8714%" height="15" fill="rgb(244,35,45)" fg:x="29" fg:w="23"/><text x="2.6096%" y="735.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (23 samples, 1.87%)</title><rect x="2.3596%" y="709" width="1.8714%" height="15" fill="rgb(251,115,12)" fg:x="29" fg:w="23"/><text x="2.6096%" y="719.50">e..</text></g><g><title>engine::session::Session::new (23 samples, 1.87%)</title><rect x="2.3596%" y="693" width="1.8714%" height="15" fill="rgb(240,54,50)" fg:x="29" fg:w="23"/><text x="2.6096%" y="703.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="3.9870%" y="677" width="0.2441%" height="15" fill="rgb(233,84,52)" fg:x="49" fg:w="3"/><text x="4.2370%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.9870%" y="661" width="0.2441%" height="15" fill="rgb(207,117,47)" fg:x="49" fg:w="3"/><text x="4.2370%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.0683%" y="645" width="0.1627%" height="15" fill="rgb(249,43,39)" fg:x="50" fg:w="2"/><text x="4.3183%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.0683%" y="629" width="0.1627%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="2"/><text x="4.3183%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.0683%" y="613" width="0.1627%" height="15" fill="rgb(236,212,23)" fg:x="50" fg:w="2"/><text x="4.3183%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.5566%" y="709" width="0.0814%" height="15" fill="rgb(242,79,21)" fg:x="56" fg:w="1"/><text x="4.8066%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.5566%" y="693" width="0.0814%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="1"/><text x="4.8066%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.5566%" y="677" width="0.0814%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="1"/><text x="4.8066%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.5566%" y="661" width="0.0814%" height="15" fill="rgb(211,81,21)" fg:x="56" fg:w="1"/><text x="4.8066%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.5566%" y="645" width="0.0814%" height="15" fill="rgb(208,190,38)" fg:x="56" fg:w="1"/><text x="4.8066%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.5566%" y="629" width="0.0814%" height="15" fill="rgb(235,213,38)" fg:x="56" fg:w="1"/><text x="4.8066%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.5566%" y="613" width="0.0814%" height="15" fill="rgb(237,122,38)" fg:x="56" fg:w="1"/><text x="4.8066%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.5566%" y="597" width="0.0814%" height="15" fill="rgb(244,218,35)" fg:x="56" fg:w="1"/><text x="4.8066%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.5566%" y="581" width="0.0814%" height="15" fill="rgb(240,68,47)" fg:x="56" fg:w="1"/><text x="4.8066%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.5566%" y="565" width="0.0814%" height="15" fill="rgb(210,16,53)" fg:x="56" fg:w="1"/><text x="4.8066%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.5566%" y="549" width="0.0814%" height="15" fill="rgb(235,124,12)" fg:x="56" fg:w="1"/><text x="4.8066%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.5566%" y="533" width="0.0814%" height="15" fill="rgb(224,169,11)" fg:x="56" fg:w="1"/><text x="4.8066%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.5566%" y="517" width="0.0814%" height="15" fill="rgb(250,166,2)" fg:x="56" fg:w="1"/><text x="4.8066%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.7193%" y="677" width="0.0814%" height="15" fill="rgb(242,216,29)" fg:x="58" fg:w="1"/><text x="4.9693%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="4.7193%" y="693" width="0.1627%" height="15" fill="rgb(230,116,27)" fg:x="58" fg:w="2"/><text x="4.9693%" y="703.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="4.8007%" y="677" width="0.0814%" height="15" fill="rgb(228,99,48)" fg:x="59" fg:w="1"/><text x="5.0507%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.8820%" y="661" width="0.0814%" height="15" fill="rgb(253,11,6)" fg:x="60" fg:w="1"/><text x="5.1320%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.8820%" y="645" width="0.0814%" height="15" fill="rgb(247,143,39)" fg:x="60" fg:w="1"/><text x="5.1320%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8820%" y="629" width="0.0814%" height="15" fill="rgb(236,97,10)" fg:x="60" fg:w="1"/><text x="5.1320%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.9634%" y="629" width="0.0814%" height="15" fill="rgb(233,208,19)" fg:x="61" fg:w="1"/><text x="5.2134%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="4.9634%" y="613" width="0.0814%" height="15" fill="rgb(216,164,2)" fg:x="61" fg:w="1"/><text x="5.2134%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.0448%" y="613" width="0.0814%" height="15" fill="rgb(220,129,5)" fg:x="62" fg:w="1"/><text x="5.2948%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.1261%" y="597" width="0.0814%" height="15" fill="rgb(242,17,10)" fg:x="63" fg:w="1"/><text x="5.3761%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1261%" y="581" width="0.0814%" height="15" fill="rgb(242,107,0)" fg:x="63" fg:w="1"/><text x="5.3761%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="5.1261%" y="613" width="0.1627%" height="15" fill="rgb(251,28,31)" fg:x="63" fg:w="2"/><text x="5.3761%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2075%" y="597" width="0.0814%" height="15" fill="rgb(233,223,10)" fg:x="64" fg:w="1"/><text x="5.4575%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2075%" y="581" width="0.0814%" height="15" fill="rgb(215,21,27)" fg:x="64" fg:w="1"/><text x="5.4575%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.2075%" y="565" width="0.0814%" height="15" fill="rgb(232,23,21)" fg:x="64" fg:w="1"/><text x="5.4575%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.3702%" y="597" width="0.2441%" height="15" fill="rgb(244,5,23)" fg:x="66" fg:w="3"/><text x="5.6202%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.4516%" y="581" width="0.1627%" height="15" fill="rgb(226,81,46)" fg:x="67" fg:w="2"/><text x="5.7016%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.5330%" y="565" width="0.0814%" height="15" fill="rgb(247,70,30)" fg:x="68" fg:w="1"/><text x="5.7830%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.6957%" y="581" width="0.0814%" height="15" fill="rgb(212,68,19)" fg:x="70" fg:w="1"/><text x="5.9457%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.7771%" y="581" width="0.0814%" height="15" fill="rgb(240,187,13)" fg:x="71" fg:w="1"/><text x="6.0271%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.7771%" y="565" width="0.0814%" height="15" fill="rgb(223,113,26)" fg:x="71" fg:w="1"/><text x="6.0271%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.8584%" y="565" width="0.0814%" height="15" fill="rgb(206,192,2)" fg:x="72" fg:w="1"/><text x="6.1084%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.8584%" y="549" width="0.0814%" height="15" fill="rgb(241,108,4)" fg:x="72" fg:w="1"/><text x="6.1084%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.9398%" y="549" width="0.0814%" height="15" fill="rgb(247,173,49)" fg:x="73" fg:w="1"/><text x="6.1898%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.0212%" y="549" width="0.2441%" height="15" fill="rgb(224,114,35)" fg:x="74" fg:w="3"/><text x="6.2712%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.1025%" y="533" width="0.1627%" height="15" fill="rgb(245,159,27)" fg:x="75" fg:w="2"/><text x="6.3525%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1839%" y="517" width="0.0814%" height="15" fill="rgb(245,172,44)" fg:x="76" fg:w="1"/><text x="6.4339%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1839%" y="501" width="0.0814%" height="15" fill="rgb(236,23,11)" fg:x="76" fg:w="1"/><text x="6.4339%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.2653%" y="533" width="0.2441%" height="15" fill="rgb(205,117,38)" fg:x="77" fg:w="3"/><text x="6.5153%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.2653%" y="517" width="0.2441%" height="15" fill="rgb(237,72,25)" fg:x="77" fg:w="3"/><text x="6.5153%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4280%" y="501" width="0.0814%" height="15" fill="rgb(244,70,9)" fg:x="79" fg:w="1"/><text x="6.6780%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.4280%" y="485" width="0.0814%" height="15" fill="rgb(217,125,39)" fg:x="79" fg:w="1"/><text x="6.6780%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="6.2653%" y="549" width="0.4068%" height="15" fill="rgb(235,36,10)" fg:x="77" fg:w="5"/><text x="6.5153%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.5094%" y="533" width="0.1627%" height="15" fill="rgb(251,123,47)" fg:x="80" fg:w="2"/><text x="6.7594%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5094%" y="517" width="0.1627%" height="15" fill="rgb(221,13,13)" fg:x="80" fg:w="2"/><text x="6.7594%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5907%" y="501" width="0.0814%" height="15" fill="rgb(238,131,9)" fg:x="81" fg:w="1"/><text x="6.8407%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5907%" y="485" width="0.0814%" height="15" fill="rgb(211,50,8)" fg:x="81" fg:w="1"/><text x="6.8407%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.14%)</title><rect x="5.6143%" y="597" width="1.1391%" height="15" fill="rgb(245,182,24)" fg:x="69" fg:w="14"/><text x="5.8643%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="5.8584%" y="581" width="0.8950%" height="15" fill="rgb(242,14,37)" fg:x="72" fg:w="11"/><text x="6.1084%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="5.9398%" y="565" width="0.8137%" height="15" fill="rgb(246,228,12)" fg:x="73" fg:w="10"/><text x="6.1898%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6721%" y="549" width="0.0814%" height="15" fill="rgb(213,55,15)" fg:x="82" fg:w="1"/><text x="6.9221%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6721%" y="533" width="0.0814%" height="15" fill="rgb(209,9,3)" fg:x="82" fg:w="1"/><text x="6.9221%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.6721%" y="517" width="0.0814%" height="15" fill="rgb(230,59,30)" fg:x="82" fg:w="1"/><text x="6.9221%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.55%)</title><rect x="5.2889%" y="613" width="1.5460%" height="15" fill="rgb(209,121,21)" fg:x="65" fg:w="19"/><text x="5.5389%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.7535%" y="597" width="0.0814%" height="15" fill="rgb(220,109,13)" fg:x="83" fg:w="1"/><text x="7.0035%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7535%" y="581" width="0.0814%" height="15" fill="rgb(232,18,1)" fg:x="83" fg:w="1"/><text x="7.0035%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7535%" y="565" width="0.0814%" height="15" fill="rgb(215,41,42)" fg:x="83" fg:w="1"/><text x="7.0035%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.7535%" y="549" width="0.0814%" height="15" fill="rgb(224,123,36)" fg:x="83" fg:w="1"/><text x="7.0035%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.7535%" y="533" width="0.0814%" height="15" fill="rgb(240,125,3)" fg:x="83" fg:w="1"/><text x="7.0035%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.7535%" y="517" width="0.0814%" height="15" fill="rgb(205,98,50)" fg:x="83" fg:w="1"/><text x="7.0035%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.87%)</title><rect x="5.0448%" y="629" width="1.8714%" height="15" fill="rgb(205,185,37)" fg:x="62" fg:w="23"/><text x="5.2948%" y="639.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8348%" y="613" width="0.0814%" height="15" fill="rgb(238,207,15)" fg:x="84" fg:w="1"/><text x="7.0848%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8348%" y="597" width="0.0814%" height="15" fill="rgb(213,199,42)" fg:x="84" fg:w="1"/><text x="7.0848%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="6.9976%" y="597" width="0.1627%" height="15" fill="rgb(235,201,11)" fg:x="86" fg:w="2"/><text x="7.2476%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.2417%" y="581" width="0.1627%" height="15" fill="rgb(207,46,11)" fg:x="89" fg:w="2"/><text x="7.4917%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.4858%" y="565" width="0.0814%" height="15" fill="rgb(241,35,35)" fg:x="92" fg:w="1"/><text x="7.7358%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.6485%" y="549" width="0.0814%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="1"/><text x="7.8985%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.6485%" y="533" width="0.0814%" height="15" fill="rgb(247,202,23)" fg:x="94" fg:w="1"/><text x="7.8985%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6485%" y="517" width="0.0814%" height="15" fill="rgb(219,102,11)" fg:x="94" fg:w="1"/><text x="7.8985%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.8112%" y="517" width="0.1627%" height="15" fill="rgb(243,110,44)" fg:x="96" fg:w="2"/><text x="8.0612%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.22%)</title><rect x="6.9162%" y="629" width="1.2205%" height="15" fill="rgb(222,74,54)" fg:x="85" fg:w="15"/><text x="7.1662%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.22%)</title><rect x="6.9162%" y="613" width="1.2205%" height="15" fill="rgb(216,99,12)" fg:x="85" fg:w="15"/><text x="7.1662%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.98%)</title><rect x="7.1603%" y="597" width="0.9764%" height="15" fill="rgb(226,22,26)" fg:x="88" fg:w="12"/><text x="7.4103%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="7.4044%" y="581" width="0.7323%" height="15" fill="rgb(217,163,10)" fg:x="91" fg:w="9"/><text x="7.6544%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="7.5671%" y="565" width="0.5696%" height="15" fill="rgb(213,25,53)" fg:x="93" fg:w="7"/><text x="7.8171%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="7.7299%" y="549" width="0.4068%" height="15" fill="rgb(252,105,26)" fg:x="95" fg:w="5"/><text x="7.9799%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="7.7299%" y="533" width="0.4068%" height="15" fill="rgb(220,39,43)" fg:x="95" fg:w="5"/><text x="7.9799%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.9740%" y="517" width="0.1627%" height="15" fill="rgb(229,68,48)" fg:x="98" fg:w="2"/><text x="8.2240%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="7.9740%" y="501" width="0.1627%" height="15" fill="rgb(252,8,32)" fg:x="98" fg:w="2"/><text x="8.2240%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0553%" y="485" width="0.0814%" height="15" fill="rgb(223,20,43)" fg:x="99" fg:w="1"/><text x="8.3053%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.1367%" y="613" width="0.0814%" height="15" fill="rgb(229,81,49)" fg:x="100" fg:w="1"/><text x="8.3867%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="8.1367%" y="597" width="0.0814%" height="15" fill="rgb(236,28,36)" fg:x="100" fg:w="1"/><text x="8.3867%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.1367%" y="581" width="0.0814%" height="15" fill="rgb(249,185,26)" fg:x="100" fg:w="1"/><text x="8.3867%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2181%" y="581" width="0.0814%" height="15" fill="rgb(249,174,33)" fg:x="101" fg:w="1"/><text x="8.4681%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2994%" y="581" width="0.0814%" height="15" fill="rgb(233,201,37)" fg:x="102" fg:w="1"/><text x="8.5494%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="8.3808%" y="581" width="0.0814%" height="15" fill="rgb(221,78,26)" fg:x="103" fg:w="1"/><text x="8.6308%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.3808%" y="565" width="0.0814%" height="15" fill="rgb(250,127,30)" fg:x="103" fg:w="1"/><text x="8.6308%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="8.4622%" y="565" width="0.0814%" height="15" fill="rgb(230,49,44)" fg:x="104" fg:w="1"/><text x="8.7122%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="8.4622%" y="581" width="0.2441%" height="15" fill="rgb(229,67,23)" fg:x="104" fg:w="3"/><text x="8.7122%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.5435%" y="565" width="0.1627%" height="15" fill="rgb(249,83,47)" fg:x="105" fg:w="2"/><text x="8.7935%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6249%" y="549" width="0.0814%" height="15" fill="rgb(215,43,3)" fg:x="106" fg:w="1"/><text x="8.8749%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6249%" y="533" width="0.0814%" height="15" fill="rgb(238,154,13)" fg:x="106" fg:w="1"/><text x="8.8749%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7063%" y="533" width="0.0814%" height="15" fill="rgb(219,56,2)" fg:x="107" fg:w="1"/><text x="8.9563%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7063%" y="517" width="0.0814%" height="15" fill="rgb(233,0,4)" fg:x="107" fg:w="1"/><text x="8.9563%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7063%" y="501" width="0.0814%" height="15" fill="rgb(235,30,7)" fg:x="107" fg:w="1"/><text x="8.9563%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.7876%" y="533" width="0.0814%" height="15" fill="rgb(250,79,13)" fg:x="108" fg:w="1"/><text x="9.0376%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7876%" y="517" width="0.0814%" height="15" fill="rgb(211,146,34)" fg:x="108" fg:w="1"/><text x="9.0376%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7876%" y="501" width="0.0814%" height="15" fill="rgb(228,22,38)" fg:x="108" fg:w="1"/><text x="9.0376%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.0317%" y="501" width="0.0814%" height="15" fill="rgb(235,168,5)" fg:x="111" fg:w="1"/><text x="9.2817%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1945%" y="453" width="0.0814%" height="15" fill="rgb(221,155,16)" fg:x="113" fg:w="1"/><text x="9.4445%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="9.2758%" y="453" width="0.0814%" height="15" fill="rgb(215,215,53)" fg:x="114" fg:w="1"/><text x="9.5258%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="9.0317%" y="517" width="0.5696%" height="15" fill="rgb(223,4,10)" fg:x="111" fg:w="7"/><text x="9.2817%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="9.1131%" y="501" width="0.4882%" height="15" fill="rgb(234,103,6)" fg:x="112" fg:w="6"/><text x="9.3631%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="9.1131%" y="485" width="0.4882%" height="15" fill="rgb(227,97,0)" fg:x="112" fg:w="6"/><text x="9.3631%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="9.1945%" y="469" width="0.4068%" height="15" fill="rgb(234,150,53)" fg:x="113" fg:w="5"/><text x="9.4445%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.3572%" y="453" width="0.2441%" height="15" fill="rgb(228,201,54)" fg:x="115" fg:w="3"/><text x="9.6072%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.5199%" y="437" width="0.0814%" height="15" fill="rgb(222,22,37)" fg:x="117" fg:w="1"/><text x="9.7699%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5199%" y="421" width="0.0814%" height="15" fill="rgb(237,53,32)" fg:x="117" fg:w="1"/><text x="9.7699%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.06%)</title><rect x="8.7063%" y="565" width="1.0578%" height="15" fill="rgb(233,25,53)" fg:x="107" fg:w="13"/><text x="8.9563%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="8.7063%" y="549" width="1.0578%" height="15" fill="rgb(210,40,34)" fg:x="107" fg:w="13"/><text x="8.9563%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="8.8690%" y="533" width="0.8950%" height="15" fill="rgb(241,220,44)" fg:x="109" fg:w="11"/><text x="9.1190%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.6013%" y="517" width="0.1627%" height="15" fill="rgb(235,28,35)" fg:x="118" fg:w="2"/><text x="9.8513%" y="527.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.29%)</title><rect x="4.6379%" y="709" width="5.2889%" height="15" fill="rgb(210,56,17)" fg:x="57" fg:w="65"/><text x="4.8879%" y="719.50">engine..</text></g><g><title>engine::session::state::State::close (62 samples, 5.04%)</title><rect x="4.8820%" y="693" width="5.0448%" height="15" fill="rgb(224,130,29)" fg:x="60" fg:w="62"/><text x="5.1320%" y="703.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (62 samples, 5.04%)</title><rect x="4.8820%" y="677" width="5.0448%" height="15" fill="rgb(235,212,8)" fg:x="60" fg:w="62"/><text x="5.1320%" y="687.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.96%)</title><rect x="4.9634%" y="661" width="4.9634%" height="15" fill="rgb(223,33,50)" fg:x="61" fg:w="61"/><text x="5.2134%" y="671.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (61 samples, 4.96%)</title><rect x="4.9634%" y="645" width="4.9634%" height="15" fill="rgb(219,149,13)" fg:x="61" fg:w="61"/><text x="5.2134%" y="655.50">engine..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.79%)</title><rect x="8.1367%" y="629" width="1.7901%" height="15" fill="rgb(250,156,29)" fg:x="100" fg:w="22"/><text x="8.3867%" y="639.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.71%)</title><rect x="8.2181%" y="613" width="1.7087%" height="15" fill="rgb(216,193,19)" fg:x="101" fg:w="21"/><text x="8.4681%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.71%)</title><rect x="8.2181%" y="597" width="1.7087%" height="15" fill="rgb(216,135,14)" fg:x="101" fg:w="21"/><text x="8.4681%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.22%)</title><rect x="8.7063%" y="581" width="1.2205%" height="15" fill="rgb(241,47,5)" fg:x="107" fg:w="15"/><text x="8.9563%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.7640%" y="565" width="0.1627%" height="15" fill="rgb(233,42,35)" fg:x="120" fg:w="2"/><text x="10.0140%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.7640%" y="549" width="0.1627%" height="15" fill="rgb(231,13,6)" fg:x="120" fg:w="2"/><text x="10.0140%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="9.7640%" y="533" width="0.1627%" height="15" fill="rgb(207,181,40)" fg:x="120" fg:w="2"/><text x="10.0140%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="10.0081%" y="453" width="0.0814%" height="15" fill="rgb(254,173,49)" fg:x="123" fg:w="1"/><text x="10.2581%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.0081%" y="437" width="0.0814%" height="15" fill="rgb(221,1,38)" fg:x="123" fg:w="1"/><text x="10.2581%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.0081%" y="421" width="0.0814%" height="15" fill="rgb(206,124,46)" fg:x="123" fg:w="1"/><text x="10.2581%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.0081%" y="405" width="0.0814%" height="15" fill="rgb(249,21,11)" fg:x="123" fg:w="1"/><text x="10.2581%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.0081%" y="389" width="0.0814%" height="15" fill="rgb(222,201,40)" fg:x="123" fg:w="1"/><text x="10.2581%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.0081%" y="373" width="0.0814%" height="15" fill="rgb(235,61,29)" fg:x="123" fg:w="1"/><text x="10.2581%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.0081%" y="357" width="0.0814%" height="15" fill="rgb(219,207,3)" fg:x="123" fg:w="1"/><text x="10.2581%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.0081%" y="341" width="0.0814%" height="15" fill="rgb(222,56,46)" fg:x="123" fg:w="1"/><text x="10.2581%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.0081%" y="325" width="0.0814%" height="15" fill="rgb(239,76,54)" fg:x="123" fg:w="1"/><text x="10.2581%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.0081%" y="309" width="0.0814%" height="15" fill="rgb(231,124,27)" fg:x="123" fg:w="1"/><text x="10.2581%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.0081%" y="293" width="0.0814%" height="15" fill="rgb(249,195,6)" fg:x="123" fg:w="1"/><text x="10.2581%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.33%)</title><rect x="9.9268%" y="677" width="0.3255%" height="15" fill="rgb(237,174,47)" fg:x="122" fg:w="4"/><text x="10.1768%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="9.9268%" y="661" width="0.3255%" height="15" fill="rgb(206,201,31)" fg:x="122" fg:w="4"/><text x="10.1768%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="9.9268%" y="645" width="0.3255%" height="15" fill="rgb(231,57,52)" fg:x="122" fg:w="4"/><text x="10.1768%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="629" width="0.2441%" height="15" fill="rgb(248,177,22)" fg:x="123" fg:w="3"/><text x="10.2581%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="10.0081%" y="613" width="0.2441%" height="15" fill="rgb(215,211,37)" fg:x="123" fg:w="3"/><text x="10.2581%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="597" width="0.2441%" height="15" fill="rgb(241,128,51)" fg:x="123" fg:w="3"/><text x="10.2581%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="581" width="0.2441%" height="15" fill="rgb(227,165,31)" fg:x="123" fg:w="3"/><text x="10.2581%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="565" width="0.2441%" height="15" fill="rgb(228,167,24)" fg:x="123" fg:w="3"/><text x="10.2581%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="10.0081%" y="549" width="0.2441%" height="15" fill="rgb(228,143,12)" fg:x="123" fg:w="3"/><text x="10.2581%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="533" width="0.2441%" height="15" fill="rgb(249,149,8)" fg:x="123" fg:w="3"/><text x="10.2581%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="517" width="0.2441%" height="15" fill="rgb(243,35,44)" fg:x="123" fg:w="3"/><text x="10.2581%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="501" width="0.2441%" height="15" fill="rgb(246,89,9)" fg:x="123" fg:w="3"/><text x="10.2581%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="10.0081%" y="485" width="0.2441%" height="15" fill="rgb(233,213,13)" fg:x="123" fg:w="3"/><text x="10.2581%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="10.0081%" y="469" width="0.2441%" height="15" fill="rgb(233,141,41)" fg:x="123" fg:w="3"/><text x="10.2581%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.0895%" y="453" width="0.1627%" height="15" fill="rgb(239,167,4)" fg:x="124" fg:w="2"/><text x="10.3395%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.0895%" y="437" width="0.1627%" height="15" fill="rgb(209,217,16)" fg:x="124" fg:w="2"/><text x="10.3395%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="10.0895%" y="421" width="0.1627%" height="15" fill="rgb(219,88,35)" fg:x="124" fg:w="2"/><text x="10.3395%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="10.0895%" y="405" width="0.1627%" height="15" fill="rgb(220,193,23)" fg:x="124" fg:w="2"/><text x="10.3395%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="10.0895%" y="389" width="0.1627%" height="15" fill="rgb(230,90,52)" fg:x="124" fg:w="2"/><text x="10.3395%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="10.0895%" y="373" width="0.1627%" height="15" fill="rgb(252,106,19)" fg:x="124" fg:w="2"/><text x="10.3395%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="10.0895%" y="357" width="0.1627%" height="15" fill="rgb(206,74,20)" fg:x="124" fg:w="2"/><text x="10.3395%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="10.0895%" y="341" width="0.1627%" height="15" fill="rgb(230,138,44)" fg:x="124" fg:w="2"/><text x="10.3395%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="10.0895%" y="325" width="0.1627%" height="15" fill="rgb(235,182,43)" fg:x="124" fg:w="2"/><text x="10.3395%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="10.0895%" y="309" width="0.1627%" height="15" fill="rgb(242,16,51)" fg:x="124" fg:w="2"/><text x="10.3395%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="10.0895%" y="293" width="0.1627%" height="15" fill="rgb(248,9,4)" fg:x="124" fg:w="2"/><text x="10.3395%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="10.0895%" y="277" width="0.1627%" height="15" fill="rgb(210,31,22)" fg:x="124" fg:w="2"/><text x="10.3395%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="10.0895%" y="261" width="0.1627%" height="15" fill="rgb(239,54,39)" fg:x="124" fg:w="2"/><text x="10.3395%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="10.0895%" y="245" width="0.1627%" height="15" fill="rgb(230,99,41)" fg:x="124" fg:w="2"/><text x="10.3395%" y="255.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="10.0895%" y="229" width="0.1627%" height="15" fill="rgb(253,106,12)" fg:x="124" fg:w="2"/><text x="10.3395%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.2522%" y="629" width="0.1627%" height="15" fill="rgb(213,46,41)" fg:x="126" fg:w="2"/><text x="10.5022%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.2522%" y="613" width="0.1627%" height="15" fill="rgb(215,133,35)" fg:x="126" fg:w="2"/><text x="10.5022%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.2522%" y="597" width="0.1627%" height="15" fill="rgb(213,28,5)" fg:x="126" fg:w="2"/><text x="10.5022%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.2522%" y="581" width="0.1627%" height="15" fill="rgb(215,77,49)" fg:x="126" fg:w="2"/><text x="10.5022%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.2522%" y="565" width="0.1627%" height="15" fill="rgb(248,100,22)" fg:x="126" fg:w="2"/><text x="10.5022%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="10.2522%" y="549" width="0.1627%" height="15" fill="rgb(208,67,9)" fg:x="126" fg:w="2"/><text x="10.5022%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="10.2522%" y="533" width="0.1627%" height="15" fill="rgb(219,133,21)" fg:x="126" fg:w="2"/><text x="10.5022%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="10.2522%" y="517" width="0.1627%" height="15" fill="rgb(246,46,29)" fg:x="126" fg:w="2"/><text x="10.5022%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="10.2522%" y="501" width="0.1627%" height="15" fill="rgb(246,185,52)" fg:x="126" fg:w="2"/><text x="10.5022%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.2522%" y="485" width="0.1627%" height="15" fill="rgb(252,136,11)" fg:x="126" fg:w="2"/><text x="10.5022%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="10.2522%" y="469" width="0.1627%" height="15" fill="rgb(219,138,53)" fg:x="126" fg:w="2"/><text x="10.5022%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="10.2522%" y="453" width="0.1627%" height="15" fill="rgb(211,51,23)" fg:x="126" fg:w="2"/><text x="10.5022%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="10.2522%" y="437" width="0.1627%" height="15" fill="rgb(247,221,28)" fg:x="126" fg:w="2"/><text x="10.5022%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="10.2522%" y="421" width="0.1627%" height="15" fill="rgb(251,222,45)" fg:x="126" fg:w="2"/><text x="10.5022%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="10.2522%" y="405" width="0.1627%" height="15" fill="rgb(217,162,53)" fg:x="126" fg:w="2"/><text x="10.5022%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.2522%" y="389" width="0.1627%" height="15" fill="rgb(229,93,14)" fg:x="126" fg:w="2"/><text x="10.5022%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="10.2522%" y="677" width="0.2441%" height="15" fill="rgb(209,67,49)" fg:x="126" fg:w="3"/><text x="10.5022%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="10.2522%" y="661" width="0.2441%" height="15" fill="rgb(213,87,29)" fg:x="126" fg:w="3"/><text x="10.5022%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.2522%" y="645" width="0.2441%" height="15" fill="rgb(205,151,52)" fg:x="126" fg:w="3"/><text x="10.5022%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4150%" y="629" width="0.0814%" height="15" fill="rgb(253,215,39)" fg:x="128" fg:w="1"/><text x="10.6650%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4150%" y="613" width="0.0814%" height="15" fill="rgb(221,220,41)" fg:x="128" fg:w="1"/><text x="10.6650%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4150%" y="597" width="0.0814%" height="15" fill="rgb(218,133,21)" fg:x="128" fg:w="1"/><text x="10.6650%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4150%" y="581" width="0.0814%" height="15" fill="rgb(221,193,43)" fg:x="128" fg:w="1"/><text x="10.6650%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.4150%" y="565" width="0.0814%" height="15" fill="rgb(240,128,52)" fg:x="128" fg:w="1"/><text x="10.6650%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4150%" y="549" width="0.0814%" height="15" fill="rgb(253,114,12)" fg:x="128" fg:w="1"/><text x="10.6650%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4150%" y="533" width="0.0814%" height="15" fill="rgb(215,223,47)" fg:x="128" fg:w="1"/><text x="10.6650%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4150%" y="517" width="0.0814%" height="15" fill="rgb(248,225,23)" fg:x="128" fg:w="1"/><text x="10.6650%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.4963%" y="645" width="0.0814%" height="15" fill="rgb(250,108,0)" fg:x="129" fg:w="1"/><text x="10.7463%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.4963%" y="629" width="0.0814%" height="15" fill="rgb(228,208,7)" fg:x="129" fg:w="1"/><text x="10.7463%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.4963%" y="613" width="0.0814%" height="15" fill="rgb(244,45,10)" fg:x="129" fg:w="1"/><text x="10.7463%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.4963%" y="597" width="0.0814%" height="15" fill="rgb(207,125,25)" fg:x="129" fg:w="1"/><text x="10.7463%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.4963%" y="581" width="0.0814%" height="15" fill="rgb(210,195,18)" fg:x="129" fg:w="1"/><text x="10.7463%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.4963%" y="565" width="0.0814%" height="15" fill="rgb(249,80,12)" fg:x="129" fg:w="1"/><text x="10.7463%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.4963%" y="549" width="0.0814%" height="15" fill="rgb(221,65,9)" fg:x="129" fg:w="1"/><text x="10.7463%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.4963%" y="533" width="0.0814%" height="15" fill="rgb(235,49,36)" fg:x="129" fg:w="1"/><text x="10.7463%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.5777%" y="629" width="0.0814%" height="15" fill="rgb(225,32,20)" fg:x="130" fg:w="1"/><text x="10.8277%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.5777%" y="613" width="0.0814%" height="15" fill="rgb(215,141,46)" fg:x="130" fg:w="1"/><text x="10.8277%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6591%" y="597" width="0.0814%" height="15" fill="rgb(250,160,47)" fg:x="131" fg:w="1"/><text x="10.9091%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.41%)</title><rect x="10.4963%" y="661" width="0.4068%" height="15" fill="rgb(216,222,40)" fg:x="129" fg:w="5"/><text x="10.7463%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="10.5777%" y="645" width="0.3255%" height="15" fill="rgb(234,217,39)" fg:x="130" fg:w="4"/><text x="10.8277%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="10.6591%" y="629" width="0.2441%" height="15" fill="rgb(207,178,40)" fg:x="131" fg:w="3"/><text x="10.9091%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="10.6591%" y="613" width="0.2441%" height="15" fill="rgb(221,136,13)" fg:x="131" fg:w="3"/><text x="10.9091%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.7404%" y="597" width="0.1627%" height="15" fill="rgb(249,199,10)" fg:x="132" fg:w="2"/><text x="10.9904%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.8218%" y="581" width="0.0814%" height="15" fill="rgb(249,222,13)" fg:x="133" fg:w="1"/><text x="11.0718%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (6 samples, 0.49%)</title><rect x="10.4963%" y="677" width="0.4882%" height="15" fill="rgb(244,185,38)" fg:x="129" fg:w="6"/><text x="10.7463%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.9032%" y="661" width="0.0814%" height="15" fill="rgb(236,202,9)" fg:x="134" fg:w="1"/><text x="11.1532%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9032%" y="645" width="0.0814%" height="15" fill="rgb(250,229,37)" fg:x="134" fg:w="1"/><text x="11.1532%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9032%" y="629" width="0.0814%" height="15" fill="rgb(206,174,23)" fg:x="134" fg:w="1"/><text x="11.1532%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9032%" y="613" width="0.0814%" height="15" fill="rgb(211,33,43)" fg:x="134" fg:w="1"/><text x="11.1532%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9032%" y="597" width="0.0814%" height="15" fill="rgb(245,58,50)" fg:x="134" fg:w="1"/><text x="11.1532%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.9032%" y="581" width="0.0814%" height="15" fill="rgb(244,68,36)" fg:x="134" fg:w="1"/><text x="11.1532%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0659%" y="597" width="0.0814%" height="15" fill="rgb(232,229,15)" fg:x="136" fg:w="1"/><text x="11.3159%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="10.9845%" y="629" width="0.2441%" height="15" fill="rgb(254,30,23)" fg:x="135" fg:w="3"/><text x="11.2345%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.9845%" y="613" width="0.2441%" height="15" fill="rgb(235,160,14)" fg:x="135" fg:w="3"/><text x="11.2345%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1473%" y="597" width="0.0814%" height="15" fill="rgb(212,155,44)" fg:x="137" fg:w="1"/><text x="11.3973%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1473%" y="581" width="0.0814%" height="15" fill="rgb(226,2,50)" fg:x="137" fg:w="1"/><text x="11.3973%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1473%" y="565" width="0.0814%" height="15" fill="rgb(234,177,6)" fg:x="137" fg:w="1"/><text x="11.3973%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1473%" y="549" width="0.0814%" height="15" fill="rgb(217,24,9)" fg:x="137" fg:w="1"/><text x="11.3973%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.1473%" y="533" width="0.0814%" height="15" fill="rgb(220,13,46)" fg:x="137" fg:w="1"/><text x="11.3973%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1473%" y="517" width="0.0814%" height="15" fill="rgb(239,221,27)" fg:x="137" fg:w="1"/><text x="11.3973%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1473%" y="501" width="0.0814%" height="15" fill="rgb(222,198,25)" fg:x="137" fg:w="1"/><text x="11.3973%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1473%" y="485" width="0.0814%" height="15" fill="rgb(211,99,13)" fg:x="137" fg:w="1"/><text x="11.3973%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="10.9845%" y="661" width="0.3255%" height="15" fill="rgb(232,111,31)" fg:x="135" fg:w="4"/><text x="11.2345%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="10.9845%" y="645" width="0.3255%" height="15" fill="rgb(245,82,37)" fg:x="135" fg:w="4"/><text x="11.2345%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="11.2286%" y="629" width="0.0814%" height="15" fill="rgb(227,149,46)" fg:x="138" fg:w="1"/><text x="11.4786%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.2286%" y="613" width="0.0814%" height="15" fill="rgb(218,36,50)" fg:x="138" fg:w="1"/><text x="11.4786%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2286%" y="597" width="0.0814%" height="15" fill="rgb(226,80,48)" fg:x="138" fg:w="1"/><text x="11.4786%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2286%" y="581" width="0.0814%" height="15" fill="rgb(238,224,15)" fg:x="138" fg:w="1"/><text x="11.4786%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2286%" y="565" width="0.0814%" height="15" fill="rgb(241,136,10)" fg:x="138" fg:w="1"/><text x="11.4786%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2286%" y="549" width="0.0814%" height="15" fill="rgb(208,32,45)" fg:x="138" fg:w="1"/><text x="11.4786%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="11.2286%" y="533" width="0.0814%" height="15" fill="rgb(207,135,9)" fg:x="138" fg:w="1"/><text x="11.4786%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2286%" y="517" width="0.0814%" height="15" fill="rgb(206,86,44)" fg:x="138" fg:w="1"/><text x="11.4786%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2286%" y="501" width="0.0814%" height="15" fill="rgb(245,177,15)" fg:x="138" fg:w="1"/><text x="11.4786%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2286%" y="485" width="0.0814%" height="15" fill="rgb(206,64,50)" fg:x="138" fg:w="1"/><text x="11.4786%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.2286%" y="469" width="0.0814%" height="15" fill="rgb(234,36,40)" fg:x="138" fg:w="1"/><text x="11.4786%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.2286%" y="453" width="0.0814%" height="15" fill="rgb(213,64,8)" fg:x="138" fg:w="1"/><text x="11.4786%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.73%)</title><rect x="10.9845%" y="677" width="0.7323%" height="15" fill="rgb(210,75,36)" fg:x="135" fg:w="9"/><text x="11.2345%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.41%)</title><rect x="11.3100%" y="661" width="0.4068%" height="15" fill="rgb(229,88,21)" fg:x="139" fg:w="5"/><text x="11.5600%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="11.3100%" y="645" width="0.4068%" height="15" fill="rgb(252,204,47)" fg:x="139" fg:w="5"/><text x="11.5600%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="11.3100%" y="629" width="0.4068%" height="15" fill="rgb(208,77,27)" fg:x="139" fg:w="5"/><text x="11.5600%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="11.3100%" y="613" width="0.4068%" height="15" fill="rgb(221,76,26)" fg:x="139" fg:w="5"/><text x="11.5600%" y="623.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="11.3100%" y="597" width="0.4068%" height="15" fill="rgb(225,139,18)" fg:x="139" fg:w="5"/><text x="11.5600%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.87%)</title><rect x="9.9268%" y="693" width="1.8714%" height="15" fill="rgb(230,137,11)" fg:x="122" fg:w="23"/><text x="10.1768%" y="703.50">&lt;..</text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="11.7168%" y="677" width="0.0814%" height="15" fill="rgb(212,28,1)" fg:x="144" fg:w="1"/><text x="11.9668%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7168%" y="661" width="0.0814%" height="15" fill="rgb(248,164,17)" fg:x="144" fg:w="1"/><text x="11.9668%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.7168%" y="645" width="0.0814%" height="15" fill="rgb(222,171,42)" fg:x="144" fg:w="1"/><text x="11.9668%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.7168%" y="629" width="0.0814%" height="15" fill="rgb(243,84,45)" fg:x="144" fg:w="1"/><text x="11.9668%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.7168%" y="613" width="0.0814%" height="15" fill="rgb(252,49,23)" fg:x="144" fg:w="1"/><text x="11.9668%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.7168%" y="597" width="0.0814%" height="15" fill="rgb(215,19,7)" fg:x="144" fg:w="1"/><text x="11.9668%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="11.7168%" y="581" width="0.0814%" height="15" fill="rgb(238,81,41)" fg:x="144" fg:w="1"/><text x="11.9668%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.7168%" y="565" width="0.0814%" height="15" fill="rgb(210,199,37)" fg:x="144" fg:w="1"/><text x="11.9668%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7982%" y="533" width="0.0814%" height="15" fill="rgb(244,192,49)" fg:x="145" fg:w="1"/><text x="12.0482%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7982%" y="597" width="0.1627%" height="15" fill="rgb(226,211,11)" fg:x="145" fg:w="2"/><text x="12.0482%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7982%" y="581" width="0.1627%" height="15" fill="rgb(236,162,54)" fg:x="145" fg:w="2"/><text x="12.0482%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7982%" y="565" width="0.1627%" height="15" fill="rgb(220,229,9)" fg:x="145" fg:w="2"/><text x="12.0482%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.7982%" y="549" width="0.1627%" height="15" fill="rgb(250,87,22)" fg:x="145" fg:w="2"/><text x="12.0482%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8796%" y="533" width="0.0814%" height="15" fill="rgb(239,43,17)" fg:x="146" fg:w="1"/><text x="12.1296%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.8796%" y="517" width="0.0814%" height="15" fill="rgb(231,177,25)" fg:x="146" fg:w="1"/><text x="12.1296%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.8796%" y="501" width="0.0814%" height="15" fill="rgb(219,179,1)" fg:x="146" fg:w="1"/><text x="12.1296%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.8796%" y="485" width="0.0814%" height="15" fill="rgb(238,219,53)" fg:x="146" fg:w="1"/><text x="12.1296%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.8796%" y="469" width="0.0814%" height="15" fill="rgb(232,167,36)" fg:x="146" fg:w="1"/><text x="12.1296%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8796%" y="453" width="0.0814%" height="15" fill="rgb(244,19,51)" fg:x="146" fg:w="1"/><text x="12.1296%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.8796%" y="437" width="0.0814%" height="15" fill="rgb(224,6,22)" fg:x="146" fg:w="1"/><text x="12.1296%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.8796%" y="421" width="0.0814%" height="15" fill="rgb(224,145,5)" fg:x="146" fg:w="1"/><text x="12.1296%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.8796%" y="405" width="0.0814%" height="15" fill="rgb(234,130,49)" fg:x="146" fg:w="1"/><text x="12.1296%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.8796%" y="389" width="0.0814%" height="15" fill="rgb(254,6,2)" fg:x="146" fg:w="1"/><text x="12.1296%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.8796%" y="373" width="0.0814%" height="15" fill="rgb(208,96,46)" fg:x="146" fg:w="1"/><text x="12.1296%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8796%" y="357" width="0.0814%" height="15" fill="rgb(239,3,39)" fg:x="146" fg:w="1"/><text x="12.1296%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.7982%" y="645" width="0.2441%" height="15" fill="rgb(233,210,1)" fg:x="145" fg:w="3"/><text x="12.0482%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.7982%" y="629" width="0.2441%" height="15" fill="rgb(244,137,37)" fg:x="145" fg:w="3"/><text x="12.0482%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.7982%" y="613" width="0.2441%" height="15" fill="rgb(240,136,2)" fg:x="145" fg:w="3"/><text x="12.0482%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9609%" y="597" width="0.0814%" height="15" fill="rgb(239,18,37)" fg:x="147" fg:w="1"/><text x="12.2109%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9609%" y="581" width="0.0814%" height="15" fill="rgb(218,185,22)" fg:x="147" fg:w="1"/><text x="12.2109%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9609%" y="565" width="0.0814%" height="15" fill="rgb(225,218,4)" fg:x="147" fg:w="1"/><text x="12.2109%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9609%" y="549" width="0.0814%" height="15" fill="rgb(230,182,32)" fg:x="147" fg:w="1"/><text x="12.2109%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.9609%" y="533" width="0.0814%" height="15" fill="rgb(242,56,43)" fg:x="147" fg:w="1"/><text x="12.2109%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9609%" y="517" width="0.0814%" height="15" fill="rgb(233,99,24)" fg:x="147" fg:w="1"/><text x="12.2109%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="11.9609%" y="501" width="0.0814%" height="15" fill="rgb(234,209,42)" fg:x="147" fg:w="1"/><text x="12.2109%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="12.0423%" y="629" width="0.0814%" height="15" fill="rgb(227,7,12)" fg:x="148" fg:w="1"/><text x="12.2923%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0423%" y="613" width="0.0814%" height="15" fill="rgb(245,203,43)" fg:x="148" fg:w="1"/><text x="12.2923%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1237%" y="581" width="0.1627%" height="15" fill="rgb(238,205,33)" fg:x="149" fg:w="2"/><text x="12.3737%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1237%" y="565" width="0.1627%" height="15" fill="rgb(231,56,7)" fg:x="149" fg:w="2"/><text x="12.3737%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.1237%" y="549" width="0.1627%" height="15" fill="rgb(244,186,29)" fg:x="149" fg:w="2"/><text x="12.3737%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2050%" y="533" width="0.0814%" height="15" fill="rgb(234,111,31)" fg:x="150" fg:w="1"/><text x="12.4550%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.1237%" y="597" width="0.2441%" height="15" fill="rgb(241,149,10)" fg:x="149" fg:w="3"/><text x="12.3737%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2864%" y="581" width="0.0814%" height="15" fill="rgb(249,206,44)" fg:x="151" fg:w="1"/><text x="12.5364%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4491%" y="469" width="0.0814%" height="15" fill="rgb(251,153,30)" fg:x="153" fg:w="1"/><text x="12.6991%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.81%)</title><rect x="11.7982%" y="677" width="0.8137%" height="15" fill="rgb(239,152,38)" fg:x="145" fg:w="10"/><text x="12.0482%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.81%)</title><rect x="11.7982%" y="661" width="0.8137%" height="15" fill="rgb(249,139,47)" fg:x="145" fg:w="10"/><text x="12.0482%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.57%)</title><rect x="12.0423%" y="645" width="0.5696%" height="15" fill="rgb(244,64,35)" fg:x="148" fg:w="7"/><text x="12.2923%" y="655.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="12.1237%" y="629" width="0.4882%" height="15" fill="rgb(216,46,15)" fg:x="149" fg:w="6"/><text x="12.3737%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="12.1237%" y="613" width="0.4882%" height="15" fill="rgb(250,74,19)" fg:x="149" fg:w="6"/><text x="12.3737%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="12.3678%" y="597" width="0.2441%" height="15" fill="rgb(249,42,33)" fg:x="152" fg:w="3"/><text x="12.6178%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3678%" y="581" width="0.2441%" height="15" fill="rgb(242,149,17)" fg:x="152" fg:w="3"/><text x="12.6178%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="12.3678%" y="565" width="0.2441%" height="15" fill="rgb(244,29,21)" fg:x="152" fg:w="3"/><text x="12.6178%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3678%" y="549" width="0.2441%" height="15" fill="rgb(220,130,37)" fg:x="152" fg:w="3"/><text x="12.6178%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="12.3678%" y="533" width="0.2441%" height="15" fill="rgb(211,67,2)" fg:x="152" fg:w="3"/><text x="12.6178%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3678%" y="517" width="0.2441%" height="15" fill="rgb(235,68,52)" fg:x="152" fg:w="3"/><text x="12.6178%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="12.3678%" y="501" width="0.2441%" height="15" fill="rgb(246,142,3)" fg:x="152" fg:w="3"/><text x="12.6178%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3678%" y="485" width="0.2441%" height="15" fill="rgb(241,25,7)" fg:x="152" fg:w="3"/><text x="12.6178%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5305%" y="469" width="0.0814%" height="15" fill="rgb(242,119,39)" fg:x="154" fg:w="1"/><text x="12.7805%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5305%" y="453" width="0.0814%" height="15" fill="rgb(241,98,45)" fg:x="154" fg:w="1"/><text x="12.7805%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.5305%" y="437" width="0.0814%" height="15" fill="rgb(254,28,30)" fg:x="154" fg:w="1"/><text x="12.7805%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.5305%" y="421" width="0.0814%" height="15" fill="rgb(241,142,54)" fg:x="154" fg:w="1"/><text x="12.7805%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="12.6119%" y="677" width="0.2441%" height="15" fill="rgb(222,85,15)" fg:x="155" fg:w="3"/><text x="12.8619%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="12.6119%" y="661" width="0.2441%" height="15" fill="rgb(210,85,47)" fg:x="155" fg:w="3"/><text x="12.8619%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.7746%" y="645" width="0.0814%" height="15" fill="rgb(224,206,25)" fg:x="157" fg:w="1"/><text x="13.0246%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7746%" y="629" width="0.0814%" height="15" fill="rgb(243,201,19)" fg:x="157" fg:w="1"/><text x="13.0246%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7746%" y="613" width="0.0814%" height="15" fill="rgb(236,59,4)" fg:x="157" fg:w="1"/><text x="13.0246%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7746%" y="597" width="0.0814%" height="15" fill="rgb(254,179,45)" fg:x="157" fg:w="1"/><text x="13.0246%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9373%" y="581" width="0.0814%" height="15" fill="rgb(226,14,10)" fg:x="159" fg:w="1"/><text x="13.1873%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9373%" y="565" width="0.0814%" height="15" fill="rgb(244,27,41)" fg:x="159" fg:w="1"/><text x="13.1873%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0187%" y="517" width="0.0814%" height="15" fill="rgb(235,35,32)" fg:x="160" fg:w="1"/><text x="13.2687%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0187%" y="501" width="0.0814%" height="15" fill="rgb(218,68,31)" fg:x="160" fg:w="1"/><text x="13.2687%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.9373%" y="629" width="0.2441%" height="15" fill="rgb(207,120,37)" fg:x="159" fg:w="3"/><text x="13.1873%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.9373%" y="613" width="0.2441%" height="15" fill="rgb(227,98,0)" fg:x="159" fg:w="3"/><text x="13.1873%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.9373%" y="597" width="0.2441%" height="15" fill="rgb(207,7,3)" fg:x="159" fg:w="3"/><text x="13.1873%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.0187%" y="581" width="0.1627%" height="15" fill="rgb(206,98,19)" fg:x="160" fg:w="2"/><text x="13.2687%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.0187%" y="565" width="0.1627%" height="15" fill="rgb(217,5,26)" fg:x="160" fg:w="2"/><text x="13.2687%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.0187%" y="549" width="0.1627%" height="15" fill="rgb(235,190,38)" fg:x="160" fg:w="2"/><text x="13.2687%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.0187%" y="533" width="0.1627%" height="15" fill="rgb(247,86,24)" fg:x="160" fg:w="2"/><text x="13.2687%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1001%" y="517" width="0.0814%" height="15" fill="rgb(205,101,16)" fg:x="161" fg:w="1"/><text x="13.3501%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1001%" y="501" width="0.0814%" height="15" fill="rgb(246,168,33)" fg:x="161" fg:w="1"/><text x="13.3501%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1814%" y="501" width="0.0814%" height="15" fill="rgb(231,114,1)" fg:x="162" fg:w="1"/><text x="13.4314%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1814%" y="485" width="0.0814%" height="15" fill="rgb(207,184,53)" fg:x="162" fg:w="1"/><text x="13.4314%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.1814%" y="469" width="0.0814%" height="15" fill="rgb(224,95,51)" fg:x="162" fg:w="1"/><text x="13.4314%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.1814%" y="453" width="0.0814%" height="15" fill="rgb(212,188,45)" fg:x="162" fg:w="1"/><text x="13.4314%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.1814%" y="437" width="0.0814%" height="15" fill="rgb(223,154,38)" fg:x="162" fg:w="1"/><text x="13.4314%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1814%" y="421" width="0.0814%" height="15" fill="rgb(251,22,52)" fg:x="162" fg:w="1"/><text x="13.4314%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1814%" y="405" width="0.0814%" height="15" fill="rgb(229,209,22)" fg:x="162" fg:w="1"/><text x="13.4314%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.1814%" y="389" width="0.0814%" height="15" fill="rgb(234,138,34)" fg:x="162" fg:w="1"/><text x="13.4314%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.1814%" y="373" width="0.0814%" height="15" fill="rgb(212,95,11)" fg:x="162" fg:w="1"/><text x="13.4314%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.1814%" y="357" width="0.0814%" height="15" fill="rgb(240,179,47)" fg:x="162" fg:w="1"/><text x="13.4314%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.1814%" y="341" width="0.0814%" height="15" fill="rgb(240,163,11)" fg:x="162" fg:w="1"/><text x="13.4314%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1814%" y="325" width="0.0814%" height="15" fill="rgb(236,37,12)" fg:x="162" fg:w="1"/><text x="13.4314%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1814%" y="533" width="0.1627%" height="15" fill="rgb(232,164,16)" fg:x="162" fg:w="2"/><text x="13.4314%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1814%" y="517" width="0.1627%" height="15" fill="rgb(244,205,15)" fg:x="162" fg:w="2"/><text x="13.4314%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2628%" y="501" width="0.0814%" height="15" fill="rgb(223,117,47)" fg:x="163" fg:w="1"/><text x="13.5128%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1814%" y="581" width="0.2441%" height="15" fill="rgb(244,107,35)" fg:x="162" fg:w="3"/><text x="13.4314%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1814%" y="565" width="0.2441%" height="15" fill="rgb(205,140,8)" fg:x="162" fg:w="3"/><text x="13.4314%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1814%" y="549" width="0.2441%" height="15" fill="rgb(228,84,46)" fg:x="162" fg:w="3"/><text x="13.4314%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3442%" y="533" width="0.0814%" height="15" fill="rgb(254,188,9)" fg:x="164" fg:w="1"/><text x="13.5942%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="12.8560%" y="661" width="0.7323%" height="15" fill="rgb(206,112,54)" fg:x="158" fg:w="9"/><text x="13.1060%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="12.8560%" y="645" width="0.7323%" height="15" fill="rgb(216,84,49)" fg:x="158" fg:w="9"/><text x="13.1060%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="13.1814%" y="629" width="0.4068%" height="15" fill="rgb(214,194,35)" fg:x="162" fg:w="5"/><text x="13.4314%" y="639.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="13.1814%" y="613" width="0.4068%" height="15" fill="rgb(249,28,3)" fg:x="162" fg:w="5"/><text x="13.4314%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="13.1814%" y="597" width="0.4068%" height="15" fill="rgb(222,56,52)" fg:x="162" fg:w="5"/><text x="13.4314%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.4255%" y="581" width="0.1627%" height="15" fill="rgb(245,217,50)" fg:x="165" fg:w="2"/><text x="13.6755%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4255%" y="565" width="0.1627%" height="15" fill="rgb(213,201,24)" fg:x="165" fg:w="2"/><text x="13.6755%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.4255%" y="549" width="0.1627%" height="15" fill="rgb(248,116,28)" fg:x="165" fg:w="2"/><text x="13.6755%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.4255%" y="533" width="0.1627%" height="15" fill="rgb(219,72,43)" fg:x="165" fg:w="2"/><text x="13.6755%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.5069%" y="517" width="0.0814%" height="15" fill="rgb(209,138,14)" fg:x="166" fg:w="1"/><text x="13.7569%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5069%" y="501" width="0.0814%" height="15" fill="rgb(222,18,33)" fg:x="166" fg:w="1"/><text x="13.7569%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5069%" y="485" width="0.0814%" height="15" fill="rgb(213,199,7)" fg:x="166" fg:w="1"/><text x="13.7569%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.5069%" y="469" width="0.0814%" height="15" fill="rgb(250,110,10)" fg:x="166" fg:w="1"/><text x="13.7569%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.81%)</title><rect x="12.8560%" y="677" width="0.8137%" height="15" fill="rgb(248,123,6)" fg:x="158" fg:w="10"/><text x="13.1060%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.5883%" y="661" width="0.0814%" height="15" fill="rgb(206,91,31)" fg:x="167" fg:w="1"/><text x="13.8383%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.5883%" y="645" width="0.0814%" height="15" fill="rgb(211,154,13)" fg:x="167" fg:w="1"/><text x="13.8383%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="13.6697%" y="661" width="0.0814%" height="15" fill="rgb(225,148,7)" fg:x="168" fg:w="1"/><text x="13.9197%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.6697%" y="645" width="0.0814%" height="15" fill="rgb(220,160,43)" fg:x="168" fg:w="1"/><text x="13.9197%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6697%" y="629" width="0.0814%" height="15" fill="rgb(213,52,39)" fg:x="168" fg:w="1"/><text x="13.9197%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (51 samples, 4.15%)</title><rect x="9.9268%" y="709" width="4.1497%" height="15" fill="rgb(243,137,7)" fg:x="122" fg:w="51"/><text x="10.1768%" y="719.50">plugi..</text></g><g><title>plugins_core::tools::set_container (28 samples, 2.28%)</title><rect x="11.7982%" y="693" width="2.2783%" height="15" fill="rgb(230,79,13)" fg:x="145" fg:w="28"/><text x="12.0482%" y="703.50">p..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.41%)</title><rect x="13.6697%" y="677" width="0.4068%" height="15" fill="rgb(247,105,23)" fg:x="168" fg:w="5"/><text x="13.9197%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="13.7510%" y="661" width="0.3255%" height="15" fill="rgb(223,179,41)" fg:x="169" fg:w="4"/><text x="14.0010%" y="671.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.33%)</title><rect x="13.7510%" y="645" width="0.3255%" height="15" fill="rgb(218,9,34)" fg:x="169" fg:w="4"/><text x="14.0010%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="13.7510%" y="629" width="0.3255%" height="15" fill="rgb(222,106,8)" fg:x="169" fg:w="4"/><text x="14.0010%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.33%)</title><rect x="13.7510%" y="613" width="0.3255%" height="15" fill="rgb(211,220,0)" fg:x="169" fg:w="4"/><text x="14.0010%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="13.7510%" y="597" width="0.3255%" height="15" fill="rgb(229,52,16)" fg:x="169" fg:w="4"/><text x="14.0010%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.8324%" y="581" width="0.2441%" height="15" fill="rgb(212,155,18)" fg:x="170" fg:w="3"/><text x="14.0824%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.8324%" y="565" width="0.2441%" height="15" fill="rgb(242,21,14)" fg:x="170" fg:w="3"/><text x="14.0824%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="13.9138%" y="549" width="0.1627%" height="15" fill="rgb(222,19,48)" fg:x="171" fg:w="2"/><text x="14.1638%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.1579%" y="677" width="0.0814%" height="15" fill="rgb(232,45,27)" fg:x="174" fg:w="1"/><text x="14.4079%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3206%" y="565" width="0.0814%" height="15" fill="rgb(249,103,42)" fg:x="176" fg:w="1"/><text x="14.5706%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4020%" y="565" width="0.0814%" height="15" fill="rgb(246,81,33)" fg:x="177" fg:w="1"/><text x="14.6520%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4020%" y="549" width="0.0814%" height="15" fill="rgb(252,33,42)" fg:x="177" fg:w="1"/><text x="14.6520%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4020%" y="533" width="0.0814%" height="15" fill="rgb(209,212,41)" fg:x="177" fg:w="1"/><text x="14.6520%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4020%" y="517" width="0.0814%" height="15" fill="rgb(207,154,6)" fg:x="177" fg:w="1"/><text x="14.6520%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4020%" y="501" width="0.0814%" height="15" fill="rgb(223,64,47)" fg:x="177" fg:w="1"/><text x="14.6520%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4020%" y="485" width="0.0814%" height="15" fill="rgb(211,161,38)" fg:x="177" fg:w="1"/><text x="14.6520%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4020%" y="469" width="0.0814%" height="15" fill="rgb(219,138,40)" fg:x="177" fg:w="1"/><text x="14.6520%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.4020%" y="453" width="0.0814%" height="15" fill="rgb(241,228,46)" fg:x="177" fg:w="1"/><text x="14.6520%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.4020%" y="437" width="0.0814%" height="15" fill="rgb(223,209,38)" fg:x="177" fg:w="1"/><text x="14.6520%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.4020%" y="421" width="0.0814%" height="15" fill="rgb(236,164,45)" fg:x="177" fg:w="1"/><text x="14.6520%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.4020%" y="405" width="0.0814%" height="15" fill="rgb(231,15,5)" fg:x="177" fg:w="1"/><text x="14.6520%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4020%" y="389" width="0.0814%" height="15" fill="rgb(252,35,15)" fg:x="177" fg:w="1"/><text x="14.6520%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="14.2392%" y="613" width="0.3255%" height="15" fill="rgb(248,181,18)" fg:x="175" fg:w="4"/><text x="14.4892%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.3206%" y="597" width="0.2441%" height="15" fill="rgb(233,39,42)" fg:x="176" fg:w="3"/><text x="14.5706%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.3206%" y="581" width="0.2441%" height="15" fill="rgb(238,110,33)" fg:x="176" fg:w="3"/><text x="14.5706%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4833%" y="565" width="0.0814%" height="15" fill="rgb(233,195,10)" fg:x="178" fg:w="1"/><text x="14.7333%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="14.2392%" y="629" width="0.4068%" height="15" fill="rgb(254,105,3)" fg:x="175" fg:w="5"/><text x="14.4892%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5647%" y="613" width="0.0814%" height="15" fill="rgb(221,225,9)" fg:x="179" fg:w="1"/><text x="14.8147%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5647%" y="597" width="0.0814%" height="15" fill="rgb(224,227,45)" fg:x="179" fg:w="1"/><text x="14.8147%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.5647%" y="581" width="0.0814%" height="15" fill="rgb(229,198,43)" fg:x="179" fg:w="1"/><text x="14.8147%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.5647%" y="565" width="0.0814%" height="15" fill="rgb(206,209,35)" fg:x="179" fg:w="1"/><text x="14.8147%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.5647%" y="549" width="0.0814%" height="15" fill="rgb(245,195,53)" fg:x="179" fg:w="1"/><text x="14.8147%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5647%" y="533" width="0.0814%" height="15" fill="rgb(240,92,26)" fg:x="179" fg:w="1"/><text x="14.8147%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5647%" y="517" width="0.0814%" height="15" fill="rgb(207,40,23)" fg:x="179" fg:w="1"/><text x="14.8147%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.5647%" y="501" width="0.0814%" height="15" fill="rgb(223,111,35)" fg:x="179" fg:w="1"/><text x="14.8147%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.5647%" y="485" width="0.0814%" height="15" fill="rgb(229,147,28)" fg:x="179" fg:w="1"/><text x="14.8147%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.5647%" y="469" width="0.0814%" height="15" fill="rgb(211,29,28)" fg:x="179" fg:w="1"/><text x="14.8147%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.5647%" y="453" width="0.0814%" height="15" fill="rgb(228,72,33)" fg:x="179" fg:w="1"/><text x="14.8147%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5647%" y="437" width="0.0814%" height="15" fill="rgb(205,214,31)" fg:x="179" fg:w="1"/><text x="14.8147%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.6461%" y="533" width="0.0814%" height="15" fill="rgb(224,111,15)" fg:x="180" fg:w="1"/><text x="14.8961%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="14.2392%" y="677" width="0.5696%" height="15" fill="rgb(253,21,26)" fg:x="175" fg:w="7"/><text x="14.4892%" y="687.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="14.2392%" y="661" width="0.5696%" height="15" fill="rgb(245,139,43)" fg:x="175" fg:w="7"/><text x="14.4892%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="14.2392%" y="645" width="0.5696%" height="15" fill="rgb(252,170,7)" fg:x="175" fg:w="7"/><text x="14.4892%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.6461%" y="629" width="0.1627%" height="15" fill="rgb(231,118,14)" fg:x="180" fg:w="2"/><text x="14.8961%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6461%" y="613" width="0.1627%" height="15" fill="rgb(238,83,0)" fg:x="180" fg:w="2"/><text x="14.8961%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.6461%" y="597" width="0.1627%" height="15" fill="rgb(221,39,39)" fg:x="180" fg:w="2"/><text x="14.8961%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6461%" y="581" width="0.1627%" height="15" fill="rgb(222,119,46)" fg:x="180" fg:w="2"/><text x="14.8961%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.6461%" y="565" width="0.1627%" height="15" fill="rgb(222,165,49)" fg:x="180" fg:w="2"/><text x="14.8961%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.6461%" y="549" width="0.1627%" height="15" fill="rgb(219,113,52)" fg:x="180" fg:w="2"/><text x="14.8961%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7274%" y="533" width="0.0814%" height="15" fill="rgb(214,7,15)" fg:x="181" fg:w="1"/><text x="14.9774%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7274%" y="517" width="0.0814%" height="15" fill="rgb(235,32,4)" fg:x="181" fg:w="1"/><text x="14.9774%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7274%" y="501" width="0.0814%" height="15" fill="rgb(238,90,54)" fg:x="181" fg:w="1"/><text x="14.9774%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7274%" y="485" width="0.0814%" height="15" fill="rgb(213,208,19)" fg:x="181" fg:w="1"/><text x="14.9774%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.8902%" y="629" width="0.0814%" height="15" fill="rgb(233,156,4)" fg:x="183" fg:w="1"/><text x="15.1402%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="14.8088%" y="677" width="0.2441%" height="15" fill="rgb(207,194,5)" fg:x="182" fg:w="3"/><text x="15.0588%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="14.8088%" y="661" width="0.2441%" height="15" fill="rgb(206,111,30)" fg:x="182" fg:w="3"/><text x="15.0588%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.8088%" y="645" width="0.2441%" height="15" fill="rgb(243,70,54)" fg:x="182" fg:w="3"/><text x="15.0588%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9715%" y="629" width="0.0814%" height="15" fill="rgb(242,28,8)" fg:x="184" fg:w="1"/><text x="15.2215%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9715%" y="613" width="0.0814%" height="15" fill="rgb(219,106,18)" fg:x="184" fg:w="1"/><text x="15.2215%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9715%" y="597" width="0.0814%" height="15" fill="rgb(244,222,10)" fg:x="184" fg:w="1"/><text x="15.2215%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0529%" y="597" width="0.0814%" height="15" fill="rgb(236,179,52)" fg:x="185" fg:w="1"/><text x="15.3029%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0529%" y="581" width="0.0814%" height="15" fill="rgb(213,23,39)" fg:x="185" fg:w="1"/><text x="15.3029%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.1343%" y="597" width="0.0814%" height="15" fill="rgb(238,48,10)" fg:x="186" fg:w="1"/><text x="15.3843%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.1343%" y="581" width="0.0814%" height="15" fill="rgb(251,196,23)" fg:x="186" fg:w="1"/><text x="15.3843%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.1343%" y="565" width="0.0814%" height="15" fill="rgb(250,152,24)" fg:x="186" fg:w="1"/><text x="15.3843%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.1343%" y="549" width="0.0814%" height="15" fill="rgb(209,150,17)" fg:x="186" fg:w="1"/><text x="15.3843%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1343%" y="533" width="0.0814%" height="15" fill="rgb(234,202,34)" fg:x="186" fg:w="1"/><text x="15.3843%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.0529%" y="629" width="0.2441%" height="15" fill="rgb(253,148,53)" fg:x="185" fg:w="3"/><text x="15.3029%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.0529%" y="613" width="0.2441%" height="15" fill="rgb(218,129,16)" fg:x="185" fg:w="3"/><text x="15.3029%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2156%" y="597" width="0.0814%" height="15" fill="rgb(216,85,19)" fg:x="187" fg:w="1"/><text x="15.4656%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2156%" y="581" width="0.0814%" height="15" fill="rgb(235,228,7)" fg:x="187" fg:w="1"/><text x="15.4656%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2156%" y="565" width="0.0814%" height="15" fill="rgb(245,175,0)" fg:x="187" fg:w="1"/><text x="15.4656%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2156%" y="549" width="0.0814%" height="15" fill="rgb(208,168,36)" fg:x="187" fg:w="1"/><text x="15.4656%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2156%" y="533" width="0.0814%" height="15" fill="rgb(246,171,24)" fg:x="187" fg:w="1"/><text x="15.4656%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2156%" y="517" width="0.0814%" height="15" fill="rgb(215,142,24)" fg:x="187" fg:w="1"/><text x="15.4656%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2156%" y="501" width="0.0814%" height="15" fill="rgb(250,187,7)" fg:x="187" fg:w="1"/><text x="15.4656%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2156%" y="485" width="0.0814%" height="15" fill="rgb(228,66,33)" fg:x="187" fg:w="1"/><text x="15.4656%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2156%" y="469" width="0.0814%" height="15" fill="rgb(234,215,21)" fg:x="187" fg:w="1"/><text x="15.4656%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2156%" y="453" width="0.0814%" height="15" fill="rgb(222,191,20)" fg:x="187" fg:w="1"/><text x="15.4656%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.2156%" y="437" width="0.0814%" height="15" fill="rgb(245,79,54)" fg:x="187" fg:w="1"/><text x="15.4656%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2970%" y="453" width="0.0814%" height="15" fill="rgb(240,10,37)" fg:x="188" fg:w="1"/><text x="15.5470%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.2970%" y="437" width="0.0814%" height="15" fill="rgb(214,192,32)" fg:x="188" fg:w="1"/><text x="15.5470%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.2970%" y="421" width="0.0814%" height="15" fill="rgb(209,36,54)" fg:x="188" fg:w="1"/><text x="15.5470%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.2970%" y="405" width="0.0814%" height="15" fill="rgb(220,10,11)" fg:x="188" fg:w="1"/><text x="15.5470%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.2970%" y="389" width="0.0814%" height="15" fill="rgb(221,106,17)" fg:x="188" fg:w="1"/><text x="15.5470%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.2970%" y="373" width="0.0814%" height="15" fill="rgb(251,142,44)" fg:x="188" fg:w="1"/><text x="15.5470%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2970%" y="357" width="0.0814%" height="15" fill="rgb(238,13,15)" fg:x="188" fg:w="1"/><text x="15.5470%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2970%" y="597" width="0.1627%" height="15" fill="rgb(208,107,27)" fg:x="188" fg:w="2"/><text x="15.5470%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2970%" y="581" width="0.1627%" height="15" fill="rgb(205,136,37)" fg:x="188" fg:w="2"/><text x="15.5470%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2970%" y="565" width="0.1627%" height="15" fill="rgb(250,205,27)" fg:x="188" fg:w="2"/><text x="15.5470%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2970%" y="549" width="0.1627%" height="15" fill="rgb(210,80,43)" fg:x="188" fg:w="2"/><text x="15.5470%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.2970%" y="533" width="0.1627%" height="15" fill="rgb(247,160,36)" fg:x="188" fg:w="2"/><text x="15.5470%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.2970%" y="517" width="0.1627%" height="15" fill="rgb(234,13,49)" fg:x="188" fg:w="2"/><text x="15.5470%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="15.2970%" y="501" width="0.1627%" height="15" fill="rgb(234,122,0)" fg:x="188" fg:w="2"/><text x="15.5470%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="15.2970%" y="485" width="0.1627%" height="15" fill="rgb(207,146,38)" fg:x="188" fg:w="2"/><text x="15.5470%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="15.2970%" y="469" width="0.1627%" height="15" fill="rgb(207,177,25)" fg:x="188" fg:w="2"/><text x="15.5470%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.3784%" y="453" width="0.0814%" height="15" fill="rgb(211,178,42)" fg:x="189" fg:w="1"/><text x="15.6284%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.3784%" y="437" width="0.0814%" height="15" fill="rgb(230,69,54)" fg:x="189" fg:w="1"/><text x="15.6284%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4597%" y="597" width="0.0814%" height="15" fill="rgb(214,135,41)" fg:x="190" fg:w="1"/><text x="15.7097%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.4597%" y="581" width="0.0814%" height="15" fill="rgb(237,67,25)" fg:x="190" fg:w="1"/><text x="15.7097%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5411%" y="597" width="0.0814%" height="15" fill="rgb(222,189,50)" fg:x="191" fg:w="1"/><text x="15.7911%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5411%" y="581" width="0.0814%" height="15" fill="rgb(245,148,34)" fg:x="191" fg:w="1"/><text x="15.7911%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5411%" y="565" width="0.0814%" height="15" fill="rgb(222,29,6)" fg:x="191" fg:w="1"/><text x="15.7911%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5411%" y="549" width="0.0814%" height="15" fill="rgb(221,189,43)" fg:x="191" fg:w="1"/><text x="15.7911%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.5411%" y="533" width="0.0814%" height="15" fill="rgb(207,36,27)" fg:x="191" fg:w="1"/><text x="15.7911%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5411%" y="517" width="0.0814%" height="15" fill="rgb(217,90,24)" fg:x="191" fg:w="1"/><text x="15.7911%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.7038%" y="517" width="0.0814%" height="15" fill="rgb(224,66,35)" fg:x="193" fg:w="1"/><text x="15.9538%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.7038%" y="501" width="0.0814%" height="15" fill="rgb(221,13,50)" fg:x="193" fg:w="1"/><text x="15.9538%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (10 samples, 0.81%)</title><rect x="15.0529%" y="661" width="0.8137%" height="15" fill="rgb(236,68,49)" fg:x="185" fg:w="10"/><text x="15.3029%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (10 samples, 0.81%)</title><rect x="15.0529%" y="645" width="0.8137%" height="15" fill="rgb(229,146,28)" fg:x="185" fg:w="10"/><text x="15.3029%" y="655.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.57%)</title><rect x="15.2970%" y="629" width="0.5696%" height="15" fill="rgb(225,31,38)" fg:x="188" fg:w="7"/><text x="15.5470%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.57%)</title><rect x="15.2970%" y="613" width="0.5696%" height="15" fill="rgb(250,208,3)" fg:x="188" fg:w="7"/><text x="15.5470%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="15.6225%" y="597" width="0.2441%" height="15" fill="rgb(246,54,23)" fg:x="192" fg:w="3"/><text x="15.8725%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="15.6225%" y="581" width="0.2441%" height="15" fill="rgb(243,76,11)" fg:x="192" fg:w="3"/><text x="15.8725%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="15.6225%" y="565" width="0.2441%" height="15" fill="rgb(245,21,50)" fg:x="192" fg:w="3"/><text x="15.8725%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="15.6225%" y="549" width="0.2441%" height="15" fill="rgb(228,9,43)" fg:x="192" fg:w="3"/><text x="15.8725%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="15.6225%" y="533" width="0.2441%" height="15" fill="rgb(208,100,47)" fg:x="192" fg:w="3"/><text x="15.8725%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7852%" y="517" width="0.0814%" height="15" fill="rgb(232,26,8)" fg:x="194" fg:w="1"/><text x="16.0352%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7852%" y="501" width="0.0814%" height="15" fill="rgb(216,166,38)" fg:x="194" fg:w="1"/><text x="16.0352%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7852%" y="485" width="0.0814%" height="15" fill="rgb(251,202,51)" fg:x="194" fg:w="1"/><text x="16.0352%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7852%" y="469" width="0.0814%" height="15" fill="rgb(254,216,34)" fg:x="194" fg:w="1"/><text x="16.0352%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.7852%" y="453" width="0.0814%" height="15" fill="rgb(251,32,27)" fg:x="194" fg:w="1"/><text x="16.0352%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (23 samples, 1.87%)</title><rect x="14.0765%" y="709" width="1.8714%" height="15" fill="rgb(208,127,28)" fg:x="173" fg:w="23"/><text x="14.3265%" y="719.50">p..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.87%)</title><rect x="14.0765%" y="693" width="1.8714%" height="15" fill="rgb(224,137,22)" fg:x="173" fg:w="23"/><text x="14.3265%" y="703.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (11 samples, 0.90%)</title><rect x="15.0529%" y="677" width="0.8950%" height="15" fill="rgb(254,70,32)" fg:x="185" fg:w="11"/><text x="15.3029%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="15.8666%" y="661" width="0.0814%" height="15" fill="rgb(229,75,37)" fg:x="195" fg:w="1"/><text x="16.1166%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8666%" y="645" width="0.0814%" height="15" fill="rgb(252,64,23)" fg:x="195" fg:w="1"/><text x="16.1166%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8666%" y="629" width="0.0814%" height="15" fill="rgb(232,162,48)" fg:x="195" fg:w="1"/><text x="16.1166%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.8666%" y="613" width="0.0814%" height="15" fill="rgb(246,160,12)" fg:x="195" fg:w="1"/><text x="16.1166%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9479%" y="645" width="0.0814%" height="15" fill="rgb(247,166,0)" fg:x="196" fg:w="1"/><text x="16.1979%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9479%" y="629" width="0.0814%" height="15" fill="rgb(249,219,21)" fg:x="196" fg:w="1"/><text x="16.1979%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="15.9479%" y="709" width="0.2441%" height="15" fill="rgb(205,209,3)" fg:x="196" fg:w="3"/><text x="16.1979%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="15.9479%" y="693" width="0.2441%" height="15" fill="rgb(243,44,1)" fg:x="196" fg:w="3"/><text x="16.1979%" y="703.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.9479%" y="677" width="0.2441%" height="15" fill="rgb(206,159,16)" fg:x="196" fg:w="3"/><text x="16.1979%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.9479%" y="661" width="0.2441%" height="15" fill="rgb(244,77,30)" fg:x="196" fg:w="3"/><text x="16.1979%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0293%" y="645" width="0.1627%" height="15" fill="rgb(218,69,12)" fg:x="197" fg:w="2"/><text x="16.2793%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0293%" y="629" width="0.1627%" height="15" fill="rgb(212,87,7)" fg:x="197" fg:w="2"/><text x="16.2793%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="16.0293%" y="613" width="0.1627%" height="15" fill="rgb(245,114,25)" fg:x="197" fg:w="2"/><text x="16.2793%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.0293%" y="597" width="0.1627%" height="15" fill="rgb(210,61,42)" fg:x="197" fg:w="2"/><text x="16.2793%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.0293%" y="581" width="0.1627%" height="15" fill="rgb(211,52,33)" fg:x="197" fg:w="2"/><text x="16.2793%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1107%" y="565" width="0.0814%" height="15" fill="rgb(234,58,33)" fg:x="198" fg:w="1"/><text x="16.3607%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.1107%" y="549" width="0.0814%" height="15" fill="rgb(220,115,36)" fg:x="198" fg:w="1"/><text x="16.3607%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="16.1920%" y="693" width="0.1627%" height="15" fill="rgb(243,153,54)" fg:x="199" fg:w="2"/><text x="16.4420%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="16.1920%" y="677" width="0.1627%" height="15" fill="rgb(251,47,18)" fg:x="199" fg:w="2"/><text x="16.4420%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2734%" y="661" width="0.0814%" height="15" fill="rgb(242,102,42)" fg:x="200" fg:w="1"/><text x="16.5234%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3548%" y="629" width="0.0814%" height="15" fill="rgb(234,31,38)" fg:x="201" fg:w="1"/><text x="16.6048%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3548%" y="613" width="0.0814%" height="15" fill="rgb(221,117,51)" fg:x="201" fg:w="1"/><text x="16.6048%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3548%" y="597" width="0.0814%" height="15" fill="rgb(212,20,18)" fg:x="201" fg:w="1"/><text x="16.6048%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="16.3548%" y="693" width="0.2441%" height="15" fill="rgb(245,133,36)" fg:x="201" fg:w="3"/><text x="16.6048%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.3548%" y="677" width="0.2441%" height="15" fill="rgb(212,6,19)" fg:x="201" fg:w="3"/><text x="16.6048%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.3548%" y="661" width="0.2441%" height="15" fill="rgb(218,1,36)" fg:x="201" fg:w="3"/><text x="16.6048%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.3548%" y="645" width="0.2441%" height="15" fill="rgb(246,84,54)" fg:x="201" fg:w="3"/><text x="16.6048%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4361%" y="629" width="0.1627%" height="15" fill="rgb(242,110,6)" fg:x="202" fg:w="2"/><text x="16.6861%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4361%" y="613" width="0.1627%" height="15" fill="rgb(214,47,5)" fg:x="202" fg:w="2"/><text x="16.6861%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4361%" y="597" width="0.1627%" height="15" fill="rgb(218,159,25)" fg:x="202" fg:w="2"/><text x="16.6861%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4361%" y="581" width="0.1627%" height="15" fill="rgb(215,211,28)" fg:x="202" fg:w="2"/><text x="16.6861%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.4361%" y="565" width="0.1627%" height="15" fill="rgb(238,59,32)" fg:x="202" fg:w="2"/><text x="16.6861%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4361%" y="549" width="0.1627%" height="15" fill="rgb(226,82,3)" fg:x="202" fg:w="2"/><text x="16.6861%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.5175%" y="533" width="0.0814%" height="15" fill="rgb(240,164,32)" fg:x="203" fg:w="1"/><text x="16.7675%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.5175%" y="517" width="0.0814%" height="15" fill="rgb(232,46,7)" fg:x="203" fg:w="1"/><text x="16.7675%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5175%" y="501" width="0.0814%" height="15" fill="rgb(229,129,53)" fg:x="203" fg:w="1"/><text x="16.7675%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5989%" y="661" width="0.0814%" height="15" fill="rgb(234,188,29)" fg:x="204" fg:w="1"/><text x="16.8489%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5989%" y="645" width="0.0814%" height="15" fill="rgb(246,141,4)" fg:x="204" fg:w="1"/><text x="16.8489%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.5989%" y="629" width="0.0814%" height="15" fill="rgb(229,23,39)" fg:x="204" fg:w="1"/><text x="16.8489%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="16.5989%" y="693" width="0.1627%" height="15" fill="rgb(206,12,3)" fg:x="204" fg:w="2"/><text x="16.8489%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="16.5989%" y="677" width="0.1627%" height="15" fill="rgb(252,226,20)" fg:x="204" fg:w="2"/><text x="16.8489%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.6802%" y="661" width="0.0814%" height="15" fill="rgb(216,123,35)" fg:x="205" fg:w="1"/><text x="16.9302%" y="671.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6802%" y="645" width="0.0814%" height="15" fill="rgb(212,68,40)" fg:x="205" fg:w="1"/><text x="16.9302%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6802%" y="629" width="0.0814%" height="15" fill="rgb(254,125,32)" fg:x="205" fg:w="1"/><text x="16.9302%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.6802%" y="613" width="0.0814%" height="15" fill="rgb(253,97,22)" fg:x="205" fg:w="1"/><text x="16.9302%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="16.7616%" y="629" width="0.0814%" height="15" fill="rgb(241,101,14)" fg:x="206" fg:w="1"/><text x="17.0116%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="16.7616%" y="613" width="0.0814%" height="15" fill="rgb(238,103,29)" fg:x="206" fg:w="1"/><text x="17.0116%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7616%" y="597" width="0.0814%" height="15" fill="rgb(233,195,47)" fg:x="206" fg:w="1"/><text x="17.0116%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7616%" y="581" width="0.0814%" height="15" fill="rgb(246,218,30)" fg:x="206" fg:w="1"/><text x="17.0116%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="16.7616%" y="565" width="0.0814%" height="15" fill="rgb(219,145,47)" fg:x="206" fg:w="1"/><text x="17.0116%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.7616%" y="549" width="0.0814%" height="15" fill="rgb(243,12,26)" fg:x="206" fg:w="1"/><text x="17.0116%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8430%" y="613" width="0.0814%" height="15" fill="rgb(214,87,16)" fg:x="207" fg:w="1"/><text x="17.0930%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8430%" y="597" width="0.0814%" height="15" fill="rgb(208,99,42)" fg:x="207" fg:w="1"/><text x="17.0930%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.8430%" y="581" width="0.0814%" height="15" fill="rgb(253,99,2)" fg:x="207" fg:w="1"/><text x="17.0930%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.8430%" y="565" width="0.0814%" height="15" fill="rgb(220,168,23)" fg:x="207" fg:w="1"/><text x="17.0930%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.8430%" y="549" width="0.0814%" height="15" fill="rgb(242,38,24)" fg:x="207" fg:w="1"/><text x="17.0930%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8430%" y="533" width="0.0814%" height="15" fill="rgb(225,182,9)" fg:x="207" fg:w="1"/><text x="17.0930%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.8430%" y="517" width="0.0814%" height="15" fill="rgb(243,178,37)" fg:x="207" fg:w="1"/><text x="17.0930%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.8430%" y="501" width="0.0814%" height="15" fill="rgb(232,139,19)" fg:x="207" fg:w="1"/><text x="17.0930%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.8430%" y="485" width="0.0814%" height="15" fill="rgb(225,201,24)" fg:x="207" fg:w="1"/><text x="17.0930%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.8430%" y="469" width="0.0814%" height="15" fill="rgb(221,47,46)" fg:x="207" fg:w="1"/><text x="17.0930%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.8430%" y="453" width="0.0814%" height="15" fill="rgb(249,23,13)" fg:x="207" fg:w="1"/><text x="17.0930%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8430%" y="437" width="0.0814%" height="15" fill="rgb(219,9,5)" fg:x="207" fg:w="1"/><text x="17.0930%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="16.7616%" y="645" width="0.2441%" height="15" fill="rgb(254,171,16)" fg:x="206" fg:w="3"/><text x="17.0116%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="16.8430%" y="629" width="0.1627%" height="15" fill="rgb(230,171,20)" fg:x="207" fg:w="2"/><text x="17.0930%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.9243%" y="613" width="0.0814%" height="15" fill="rgb(210,71,41)" fg:x="208" fg:w="1"/><text x="17.1743%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.9243%" y="597" width="0.0814%" height="15" fill="rgb(206,173,20)" fg:x="208" fg:w="1"/><text x="17.1743%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.9243%" y="581" width="0.0814%" height="15" fill="rgb(233,88,34)" fg:x="208" fg:w="1"/><text x="17.1743%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9243%" y="565" width="0.0814%" height="15" fill="rgb(223,209,46)" fg:x="208" fg:w="1"/><text x="17.1743%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9243%" y="549" width="0.0814%" height="15" fill="rgb(250,43,18)" fg:x="208" fg:w="1"/><text x="17.1743%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9243%" y="533" width="0.0814%" height="15" fill="rgb(208,13,10)" fg:x="208" fg:w="1"/><text x="17.1743%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9243%" y="517" width="0.0814%" height="15" fill="rgb(212,200,36)" fg:x="208" fg:w="1"/><text x="17.1743%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.9243%" y="501" width="0.0814%" height="15" fill="rgb(225,90,30)" fg:x="208" fg:w="1"/><text x="17.1743%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.9243%" y="485" width="0.0814%" height="15" fill="rgb(236,182,39)" fg:x="208" fg:w="1"/><text x="17.1743%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.9243%" y="469" width="0.0814%" height="15" fill="rgb(212,144,35)" fg:x="208" fg:w="1"/><text x="17.1743%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9243%" y="453" width="0.0814%" height="15" fill="rgb(228,63,44)" fg:x="208" fg:w="1"/><text x="17.1743%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9243%" y="437" width="0.0814%" height="15" fill="rgb(228,109,6)" fg:x="208" fg:w="1"/><text x="17.1743%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.9243%" y="421" width="0.0814%" height="15" fill="rgb(238,117,24)" fg:x="208" fg:w="1"/><text x="17.1743%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.9243%" y="405" width="0.0814%" height="15" fill="rgb(242,26,26)" fg:x="208" fg:w="1"/><text x="17.1743%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.9243%" y="389" width="0.0814%" height="15" fill="rgb(221,92,48)" fg:x="208" fg:w="1"/><text x="17.1743%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.9243%" y="373" width="0.0814%" height="15" fill="rgb(209,209,32)" fg:x="208" fg:w="1"/><text x="17.1743%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9243%" y="357" width="0.0814%" height="15" fill="rgb(221,70,22)" fg:x="208" fg:w="1"/><text x="17.1743%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0057%" y="565" width="0.0814%" height="15" fill="rgb(248,145,5)" fg:x="209" fg:w="1"/><text x="17.2557%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.0057%" y="549" width="0.0814%" height="15" fill="rgb(226,116,26)" fg:x="209" fg:w="1"/><text x="17.2557%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0057%" y="533" width="0.0814%" height="15" fill="rgb(244,5,17)" fg:x="209" fg:w="1"/><text x="17.2557%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0057%" y="517" width="0.0814%" height="15" fill="rgb(252,159,33)" fg:x="209" fg:w="1"/><text x="17.2557%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.0057%" y="501" width="0.0814%" height="15" fill="rgb(206,71,0)" fg:x="209" fg:w="1"/><text x="17.2557%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0057%" y="485" width="0.0814%" height="15" fill="rgb(233,118,54)" fg:x="209" fg:w="1"/><text x="17.2557%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.0057%" y="469" width="0.0814%" height="15" fill="rgb(234,83,48)" fg:x="209" fg:w="1"/><text x="17.2557%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="17.0057%" y="645" width="0.1627%" height="15" fill="rgb(228,3,54)" fg:x="209" fg:w="2"/><text x="17.2557%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="17.0057%" y="629" width="0.1627%" height="15" fill="rgb(226,155,13)" fg:x="209" fg:w="2"/><text x="17.2557%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.0057%" y="613" width="0.1627%" height="15" fill="rgb(241,28,37)" fg:x="209" fg:w="2"/><text x="17.2557%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.0057%" y="597" width="0.1627%" height="15" fill="rgb(233,93,10)" fg:x="209" fg:w="2"/><text x="17.2557%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.0057%" y="581" width="0.1627%" height="15" fill="rgb(225,113,19)" fg:x="209" fg:w="2"/><text x="17.2557%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.0871%" y="565" width="0.0814%" height="15" fill="rgb(241,2,18)" fg:x="210" fg:w="1"/><text x="17.3371%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0871%" y="549" width="0.0814%" height="15" fill="rgb(228,207,21)" fg:x="210" fg:w="1"/><text x="17.3371%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.0871%" y="533" width="0.0814%" height="15" fill="rgb(213,211,35)" fg:x="210" fg:w="1"/><text x="17.3371%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0871%" y="517" width="0.0814%" height="15" fill="rgb(209,83,10)" fg:x="210" fg:w="1"/><text x="17.3371%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.1684%" y="597" width="0.0814%" height="15" fill="rgb(209,164,1)" fg:x="211" fg:w="1"/><text x="17.4184%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.1684%" y="581" width="0.0814%" height="15" fill="rgb(213,184,43)" fg:x="211" fg:w="1"/><text x="17.4184%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="17.1684%" y="613" width="0.1627%" height="15" fill="rgb(231,61,34)" fg:x="211" fg:w="2"/><text x="17.4184%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.2498%" y="597" width="0.0814%" height="15" fill="rgb(235,75,3)" fg:x="212" fg:w="1"/><text x="17.4998%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.2498%" y="581" width="0.0814%" height="15" fill="rgb(220,106,47)" fg:x="212" fg:w="1"/><text x="17.4998%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="565" width="0.0814%" height="15" fill="rgb(210,196,33)" fg:x="212" fg:w="1"/><text x="17.4998%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2498%" y="549" width="0.0814%" height="15" fill="rgb(229,154,42)" fg:x="212" fg:w="1"/><text x="17.4998%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="533" width="0.0814%" height="15" fill="rgb(228,114,26)" fg:x="212" fg:w="1"/><text x="17.4998%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="517" width="0.0814%" height="15" fill="rgb(208,144,1)" fg:x="212" fg:w="1"/><text x="17.4998%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="501" width="0.0814%" height="15" fill="rgb(239,112,37)" fg:x="212" fg:w="1"/><text x="17.4998%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2498%" y="485" width="0.0814%" height="15" fill="rgb(210,96,50)" fg:x="212" fg:w="1"/><text x="17.4998%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="469" width="0.0814%" height="15" fill="rgb(222,178,2)" fg:x="212" fg:w="1"/><text x="17.4998%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="453" width="0.0814%" height="15" fill="rgb(226,74,18)" fg:x="212" fg:w="1"/><text x="17.4998%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="437" width="0.0814%" height="15" fill="rgb(225,67,54)" fg:x="212" fg:w="1"/><text x="17.4998%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2498%" y="421" width="0.0814%" height="15" fill="rgb(251,92,32)" fg:x="212" fg:w="1"/><text x="17.4998%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="405" width="0.0814%" height="15" fill="rgb(228,149,22)" fg:x="212" fg:w="1"/><text x="17.4998%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="389" width="0.0814%" height="15" fill="rgb(243,54,13)" fg:x="212" fg:w="1"/><text x="17.4998%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="373" width="0.0814%" height="15" fill="rgb(243,180,28)" fg:x="212" fg:w="1"/><text x="17.4998%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.2498%" y="357" width="0.0814%" height="15" fill="rgb(208,167,24)" fg:x="212" fg:w="1"/><text x="17.4998%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.2498%" y="341" width="0.0814%" height="15" fill="rgb(245,73,45)" fg:x="212" fg:w="1"/><text x="17.4998%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2498%" y="325" width="0.0814%" height="15" fill="rgb(237,203,48)" fg:x="212" fg:w="1"/><text x="17.4998%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2498%" y="309" width="0.0814%" height="15" fill="rgb(211,197,16)" fg:x="212" fg:w="1"/><text x="17.4998%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="17.2498%" y="293" width="0.0814%" height="15" fill="rgb(243,99,51)" fg:x="212" fg:w="1"/><text x="17.4998%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="17.2498%" y="277" width="0.0814%" height="15" fill="rgb(215,123,29)" fg:x="212" fg:w="1"/><text x="17.4998%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="17.2498%" y="261" width="0.0814%" height="15" fill="rgb(239,186,37)" fg:x="212" fg:w="1"/><text x="17.4998%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="17.2498%" y="245" width="0.0814%" height="15" fill="rgb(252,136,39)" fg:x="212" fg:w="1"/><text x="17.4998%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.2498%" y="229" width="0.0814%" height="15" fill="rgb(223,213,32)" fg:x="212" fg:w="1"/><text x="17.4998%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.2498%" y="213" width="0.0814%" height="15" fill="rgb(233,115,5)" fg:x="212" fg:w="1"/><text x="17.4998%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.2498%" y="197" width="0.0814%" height="15" fill="rgb(207,226,44)" fg:x="212" fg:w="1"/><text x="17.4998%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="17.2498%" y="181" width="0.0814%" height="15" fill="rgb(208,126,0)" fg:x="212" fg:w="1"/><text x="17.4998%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.2498%" y="165" width="0.0814%" height="15" fill="rgb(244,66,21)" fg:x="212" fg:w="1"/><text x="17.4998%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="17.2498%" y="149" width="0.0814%" height="15" fill="rgb(222,97,12)" fg:x="212" fg:w="1"/><text x="17.4998%" y="159.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="17.3312%" y="581" width="0.0814%" height="15" fill="rgb(219,213,19)" fg:x="213" fg:w="1"/><text x="17.5812%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.3312%" y="565" width="0.0814%" height="15" fill="rgb(252,169,30)" fg:x="213" fg:w="1"/><text x="17.5812%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.3312%" y="549" width="0.0814%" height="15" fill="rgb(206,32,51)" fg:x="213" fg:w="1"/><text x="17.5812%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.3312%" y="533" width="0.0814%" height="15" fill="rgb(250,172,42)" fg:x="213" fg:w="1"/><text x="17.5812%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="17.3312%" y="613" width="0.1627%" height="15" fill="rgb(209,34,43)" fg:x="213" fg:w="2"/><text x="17.5812%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.3312%" y="597" width="0.1627%" height="15" fill="rgb(223,11,35)" fg:x="213" fg:w="2"/><text x="17.5812%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4125%" y="581" width="0.0814%" height="15" fill="rgb(251,219,26)" fg:x="214" fg:w="1"/><text x="17.6625%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.4939%" y="549" width="0.0814%" height="15" fill="rgb(231,119,3)" fg:x="215" fg:w="1"/><text x="17.7439%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6566%" y="485" width="0.0814%" height="15" fill="rgb(216,97,11)" fg:x="217" fg:w="1"/><text x="17.9066%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6566%" y="469" width="0.0814%" height="15" fill="rgb(223,59,9)" fg:x="217" fg:w="1"/><text x="17.9066%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6566%" y="533" width="0.1627%" height="15" fill="rgb(233,93,31)" fg:x="217" fg:w="2"/><text x="17.9066%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6566%" y="517" width="0.1627%" height="15" fill="rgb(239,81,33)" fg:x="217" fg:w="2"/><text x="17.9066%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6566%" y="501" width="0.1627%" height="15" fill="rgb(213,120,34)" fg:x="217" fg:w="2"/><text x="17.9066%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7380%" y="485" width="0.0814%" height="15" fill="rgb(243,49,53)" fg:x="218" fg:w="1"/><text x="17.9880%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7380%" y="469" width="0.0814%" height="15" fill="rgb(247,216,33)" fg:x="218" fg:w="1"/><text x="17.9880%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7380%" y="453" width="0.0814%" height="15" fill="rgb(226,26,14)" fg:x="218" fg:w="1"/><text x="17.9880%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7380%" y="437" width="0.0814%" height="15" fill="rgb(215,49,53)" fg:x="218" fg:w="1"/><text x="17.9880%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7380%" y="421" width="0.0814%" height="15" fill="rgb(245,162,40)" fg:x="218" fg:w="1"/><text x="17.9880%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.7380%" y="405" width="0.0814%" height="15" fill="rgb(229,68,17)" fg:x="218" fg:w="1"/><text x="17.9880%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.7380%" y="389" width="0.0814%" height="15" fill="rgb(213,182,10)" fg:x="218" fg:w="1"/><text x="17.9880%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8194%" y="533" width="0.0814%" height="15" fill="rgb(245,125,30)" fg:x="219" fg:w="1"/><text x="18.0694%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8194%" y="517" width="0.0814%" height="15" fill="rgb(232,202,2)" fg:x="219" fg:w="1"/><text x="18.0694%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="17.4939%" y="597" width="0.4882%" height="15" fill="rgb(237,140,51)" fg:x="215" fg:w="6"/><text x="17.7439%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.49%)</title><rect x="17.4939%" y="581" width="0.4882%" height="15" fill="rgb(236,157,25)" fg:x="215" fg:w="6"/><text x="17.7439%" y="591.50"></text></g><g><title>kernel::model::props::save_props (6 samples, 0.49%)</title><rect x="17.4939%" y="565" width="0.4882%" height="15" fill="rgb(219,209,0)" fg:x="215" fg:w="6"/><text x="17.7439%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.41%)</title><rect x="17.5753%" y="549" width="0.4068%" height="15" fill="rgb(240,116,54)" fg:x="216" fg:w="5"/><text x="17.8253%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9007%" y="533" width="0.0814%" height="15" fill="rgb(216,10,36)" fg:x="220" fg:w="1"/><text x="18.1507%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9007%" y="517" width="0.0814%" height="15" fill="rgb(222,72,44)" fg:x="220" fg:w="1"/><text x="18.1507%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9007%" y="501" width="0.0814%" height="15" fill="rgb(232,159,9)" fg:x="220" fg:w="1"/><text x="18.1507%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9007%" y="485" width="0.0814%" height="15" fill="rgb(210,39,32)" fg:x="220" fg:w="1"/><text x="18.1507%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.9007%" y="469" width="0.0814%" height="15" fill="rgb(216,194,45)" fg:x="220" fg:w="1"/><text x="18.1507%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.9007%" y="453" width="0.0814%" height="15" fill="rgb(218,18,35)" fg:x="220" fg:w="1"/><text x="18.1507%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.9007%" y="437" width="0.0814%" height="15" fill="rgb(207,83,51)" fg:x="220" fg:w="1"/><text x="18.1507%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.90%)</title><rect x="17.1684%" y="629" width="0.8950%" height="15" fill="rgb(225,63,43)" fg:x="211" fg:w="11"/><text x="17.4184%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="17.4939%" y="613" width="0.5696%" height="15" fill="rgb(207,57,36)" fg:x="215" fg:w="7"/><text x="17.7439%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="17.9821%" y="597" width="0.0814%" height="15" fill="rgb(216,99,33)" fg:x="221" fg:w="1"/><text x="18.2321%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9821%" y="581" width="0.0814%" height="15" fill="rgb(225,42,16)" fg:x="221" fg:w="1"/><text x="18.2321%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9821%" y="565" width="0.0814%" height="15" fill="rgb(220,201,45)" fg:x="221" fg:w="1"/><text x="18.2321%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9821%" y="549" width="0.0814%" height="15" fill="rgb(225,33,4)" fg:x="221" fg:w="1"/><text x="18.2321%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9821%" y="533" width="0.0814%" height="15" fill="rgb(224,33,50)" fg:x="221" fg:w="1"/><text x="18.2321%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9821%" y="517" width="0.0814%" height="15" fill="rgb(246,198,51)" fg:x="221" fg:w="1"/><text x="18.2321%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9821%" y="501" width="0.0814%" height="15" fill="rgb(205,22,4)" fg:x="221" fg:w="1"/><text x="18.2321%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9821%" y="485" width="0.0814%" height="15" fill="rgb(206,3,8)" fg:x="221" fg:w="1"/><text x="18.2321%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.9821%" y="469" width="0.0814%" height="15" fill="rgb(251,23,15)" fg:x="221" fg:w="1"/><text x="18.2321%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.9821%" y="453" width="0.0814%" height="15" fill="rgb(252,88,28)" fg:x="221" fg:w="1"/><text x="18.2321%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.9821%" y="437" width="0.0814%" height="15" fill="rgb(212,127,14)" fg:x="221" fg:w="1"/><text x="18.2321%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.9821%" y="421" width="0.0814%" height="15" fill="rgb(247,145,37)" fg:x="221" fg:w="1"/><text x="18.2321%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9821%" y="405" width="0.0814%" height="15" fill="rgb(209,117,53)" fg:x="221" fg:w="1"/><text x="18.2321%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="18.0635%" y="565" width="0.0814%" height="15" fill="rgb(212,90,42)" fg:x="222" fg:w="1"/><text x="18.3135%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0635%" y="549" width="0.0814%" height="15" fill="rgb(218,164,37)" fg:x="222" fg:w="1"/><text x="18.3135%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2262%" y="485" width="0.0814%" height="15" fill="rgb(246,65,34)" fg:x="224" fg:w="1"/><text x="18.4762%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2262%" y="469" width="0.0814%" height="15" fill="rgb(231,100,33)" fg:x="224" fg:w="1"/><text x="18.4762%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.1448%" y="533" width="0.2441%" height="15" fill="rgb(228,126,14)" fg:x="223" fg:w="3"/><text x="18.3948%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.1448%" y="517" width="0.2441%" height="15" fill="rgb(215,173,21)" fg:x="223" fg:w="3"/><text x="18.3948%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.2262%" y="501" width="0.1627%" height="15" fill="rgb(210,6,40)" fg:x="224" fg:w="2"/><text x="18.4762%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3076%" y="485" width="0.0814%" height="15" fill="rgb(212,48,18)" fg:x="225" fg:w="1"/><text x="18.5576%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3076%" y="469" width="0.0814%" height="15" fill="rgb(230,214,11)" fg:x="225" fg:w="1"/><text x="18.5576%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3076%" y="453" width="0.0814%" height="15" fill="rgb(254,105,39)" fg:x="225" fg:w="1"/><text x="18.5576%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3076%" y="437" width="0.0814%" height="15" fill="rgb(245,158,5)" fg:x="225" fg:w="1"/><text x="18.5576%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3076%" y="421" width="0.0814%" height="15" fill="rgb(249,208,11)" fg:x="225" fg:w="1"/><text x="18.5576%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3076%" y="405" width="0.0814%" height="15" fill="rgb(210,39,28)" fg:x="225" fg:w="1"/><text x="18.5576%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3076%" y="389" width="0.0814%" height="15" fill="rgb(211,56,53)" fg:x="225" fg:w="1"/><text x="18.5576%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3076%" y="373" width="0.0814%" height="15" fill="rgb(226,201,30)" fg:x="225" fg:w="1"/><text x="18.5576%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3076%" y="357" width="0.0814%" height="15" fill="rgb(239,101,34)" fg:x="225" fg:w="1"/><text x="18.5576%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3076%" y="341" width="0.0814%" height="15" fill="rgb(226,209,5)" fg:x="225" fg:w="1"/><text x="18.5576%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3076%" y="325" width="0.0814%" height="15" fill="rgb(250,105,47)" fg:x="225" fg:w="1"/><text x="18.5576%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.3076%" y="309" width="0.0814%" height="15" fill="rgb(230,72,3)" fg:x="225" fg:w="1"/><text x="18.5576%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3889%" y="533" width="0.0814%" height="15" fill="rgb(232,218,39)" fg:x="226" fg:w="1"/><text x="18.6389%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3889%" y="517" width="0.0814%" height="15" fill="rgb(248,166,6)" fg:x="226" fg:w="1"/><text x="18.6389%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3889%" y="501" width="0.0814%" height="15" fill="rgb(247,89,20)" fg:x="226" fg:w="1"/><text x="18.6389%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3889%" y="485" width="0.0814%" height="15" fill="rgb(248,130,54)" fg:x="226" fg:w="1"/><text x="18.6389%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.3889%" y="469" width="0.0814%" height="15" fill="rgb(234,196,4)" fg:x="226" fg:w="1"/><text x="18.6389%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3889%" y="453" width="0.0814%" height="15" fill="rgb(250,143,31)" fg:x="226" fg:w="1"/><text x="18.6389%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="18.0635%" y="581" width="0.4882%" height="15" fill="rgb(211,110,34)" fg:x="222" fg:w="6"/><text x="18.3135%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="18.1448%" y="565" width="0.4068%" height="15" fill="rgb(215,124,48)" fg:x="223" fg:w="5"/><text x="18.3948%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="18.1448%" y="549" width="0.4068%" height="15" fill="rgb(216,46,13)" fg:x="223" fg:w="5"/><text x="18.3948%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4703%" y="533" width="0.0814%" height="15" fill="rgb(205,184,25)" fg:x="227" fg:w="1"/><text x="18.7203%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4703%" y="517" width="0.0814%" height="15" fill="rgb(228,1,10)" fg:x="227" fg:w="1"/><text x="18.7203%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.4703%" y="501" width="0.0814%" height="15" fill="rgb(213,116,27)" fg:x="227" fg:w="1"/><text x="18.7203%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4703%" y="485" width="0.0814%" height="15" fill="rgb(241,95,50)" fg:x="227" fg:w="1"/><text x="18.7203%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.4703%" y="469" width="0.0814%" height="15" fill="rgb(238,48,32)" fg:x="227" fg:w="1"/><text x="18.7203%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.4703%" y="453" width="0.0814%" height="15" fill="rgb(235,113,49)" fg:x="227" fg:w="1"/><text x="18.7203%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.5517%" y="565" width="0.0814%" height="15" fill="rgb(205,127,43)" fg:x="228" fg:w="1"/><text x="18.8017%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.6330%" y="533" width="0.1627%" height="15" fill="rgb(250,162,2)" fg:x="229" fg:w="2"/><text x="18.8830%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.6330%" y="517" width="0.1627%" height="15" fill="rgb(220,13,41)" fg:x="229" fg:w="2"/><text x="18.8830%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.6330%" y="501" width="0.1627%" height="15" fill="rgb(249,221,25)" fg:x="229" fg:w="2"/><text x="18.8830%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.6330%" y="485" width="0.1627%" height="15" fill="rgb(215,208,19)" fg:x="229" fg:w="2"/><text x="18.8830%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="18.6330%" y="469" width="0.1627%" height="15" fill="rgb(236,175,2)" fg:x="229" fg:w="2"/><text x="18.8830%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.6330%" y="453" width="0.1627%" height="15" fill="rgb(241,52,2)" fg:x="229" fg:w="2"/><text x="18.8830%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="18.6330%" y="437" width="0.1627%" height="15" fill="rgb(248,140,14)" fg:x="229" fg:w="2"/><text x="18.8830%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="18.6330%" y="421" width="0.1627%" height="15" fill="rgb(253,22,42)" fg:x="229" fg:w="2"/><text x="18.8830%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="18.6330%" y="405" width="0.1627%" height="15" fill="rgb(234,61,47)" fg:x="229" fg:w="2"/><text x="18.8830%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="18.6330%" y="389" width="0.1627%" height="15" fill="rgb(208,226,15)" fg:x="229" fg:w="2"/><text x="18.8830%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.6330%" y="373" width="0.1627%" height="15" fill="rgb(217,221,4)" fg:x="229" fg:w="2"/><text x="18.8830%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="18.6330%" y="357" width="0.1627%" height="15" fill="rgb(212,174,34)" fg:x="229" fg:w="2"/><text x="18.8830%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="18.6330%" y="341" width="0.1627%" height="15" fill="rgb(253,83,4)" fg:x="229" fg:w="2"/><text x="18.8830%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="18.6330%" y="325" width="0.1627%" height="15" fill="rgb(250,195,49)" fg:x="229" fg:w="2"/><text x="18.8830%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="18.6330%" y="309" width="0.1627%" height="15" fill="rgb(241,192,25)" fg:x="229" fg:w="2"/><text x="18.8830%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="18.6330%" y="293" width="0.1627%" height="15" fill="rgb(208,124,10)" fg:x="229" fg:w="2"/><text x="18.8830%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.6330%" y="277" width="0.1627%" height="15" fill="rgb(222,33,0)" fg:x="229" fg:w="2"/><text x="18.8830%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.81%)</title><rect x="18.0635%" y="613" width="0.8137%" height="15" fill="rgb(234,209,28)" fg:x="222" fg:w="10"/><text x="18.3135%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.81%)</title><rect x="18.0635%" y="597" width="0.8137%" height="15" fill="rgb(224,11,23)" fg:x="222" fg:w="10"/><text x="18.3135%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="18.5517%" y="581" width="0.3255%" height="15" fill="rgb(232,99,1)" fg:x="228" fg:w="4"/><text x="18.8017%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.6330%" y="565" width="0.2441%" height="15" fill="rgb(237,95,45)" fg:x="229" fg:w="3"/><text x="18.8830%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.6330%" y="549" width="0.2441%" height="15" fill="rgb(208,109,11)" fg:x="229" fg:w="3"/><text x="18.8830%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7958%" y="533" width="0.0814%" height="15" fill="rgb(216,190,48)" fg:x="231" fg:w="1"/><text x="19.0458%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7958%" y="517" width="0.0814%" height="15" fill="rgb(251,171,36)" fg:x="231" fg:w="1"/><text x="19.0458%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7958%" y="501" width="0.0814%" height="15" fill="rgb(230,62,22)" fg:x="231" fg:w="1"/><text x="19.0458%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7958%" y="485" width="0.0814%" height="15" fill="rgb(225,114,35)" fg:x="231" fg:w="1"/><text x="19.0458%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.7958%" y="469" width="0.0814%" height="15" fill="rgb(215,118,42)" fg:x="231" fg:w="1"/><text x="19.0458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7958%" y="453" width="0.0814%" height="15" fill="rgb(243,119,21)" fg:x="231" fg:w="1"/><text x="19.0458%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7958%" y="437" width="0.0814%" height="15" fill="rgb(252,177,53)" fg:x="231" fg:w="1"/><text x="19.0458%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7958%" y="421" width="0.0814%" height="15" fill="rgb(237,209,29)" fg:x="231" fg:w="1"/><text x="19.0458%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7958%" y="405" width="0.0814%" height="15" fill="rgb(212,65,23)" fg:x="231" fg:w="1"/><text x="19.0458%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.7958%" y="389" width="0.0814%" height="15" fill="rgb(230,222,46)" fg:x="231" fg:w="1"/><text x="19.0458%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.7958%" y="373" width="0.0814%" height="15" fill="rgb(215,135,32)" fg:x="231" fg:w="1"/><text x="19.0458%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.8771%" y="613" width="0.0814%" height="15" fill="rgb(246,101,22)" fg:x="232" fg:w="1"/><text x="19.1271%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.8771%" y="597" width="0.0814%" height="15" fill="rgb(206,107,13)" fg:x="232" fg:w="1"/><text x="19.1271%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="18.8771%" y="581" width="0.0814%" height="15" fill="rgb(250,100,44)" fg:x="232" fg:w="1"/><text x="19.1271%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0399%" y="533" width="0.0814%" height="15" fill="rgb(231,147,38)" fg:x="234" fg:w="1"/><text x="19.2899%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (25 samples, 2.03%)</title><rect x="17.1684%" y="645" width="2.0342%" height="15" fill="rgb(229,8,40)" fg:x="211" fg:w="25"/><text x="17.4184%" y="655.50">p..</text></g><g><title>plugins_core::tools::leads_to (14 samples, 1.14%)</title><rect x="18.0635%" y="629" width="1.1391%" height="15" fill="rgb(221,135,30)" fg:x="222" fg:w="14"/><text x="18.3135%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.9585%" y="613" width="0.2441%" height="15" fill="rgb(249,193,18)" fg:x="233" fg:w="3"/><text x="19.2085%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="19.0399%" y="597" width="0.1627%" height="15" fill="rgb(209,133,39)" fg:x="234" fg:w="2"/><text x="19.2899%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.0399%" y="581" width="0.1627%" height="15" fill="rgb(232,100,14)" fg:x="234" fg:w="2"/><text x="19.2899%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="19.0399%" y="565" width="0.1627%" height="15" fill="rgb(224,185,1)" fg:x="234" fg:w="2"/><text x="19.2899%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.0399%" y="549" width="0.1627%" height="15" fill="rgb(223,139,8)" fg:x="234" fg:w="2"/><text x="19.2899%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.1212%" y="533" width="0.0814%" height="15" fill="rgb(232,213,38)" fg:x="235" fg:w="1"/><text x="19.3712%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (32 samples, 2.60%)</title><rect x="16.7616%" y="693" width="2.6037%" height="15" fill="rgb(207,94,22)" fg:x="206" fg:w="32"/><text x="17.0116%" y="703.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.60%)</title><rect x="16.7616%" y="677" width="2.6037%" height="15" fill="rgb(219,183,54)" fg:x="206" fg:w="32"/><text x="17.0116%" y="687.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (32 samples, 2.60%)</title><rect x="16.7616%" y="661" width="2.6037%" height="15" fill="rgb(216,185,54)" fg:x="206" fg:w="32"/><text x="17.0116%" y="671.50">pl..</text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="19.2026%" y="645" width="0.1627%" height="15" fill="rgb(254,217,39)" fg:x="236" fg:w="2"/><text x="19.4526%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="19.2026%" y="629" width="0.1627%" height="15" fill="rgb(240,178,23)" fg:x="236" fg:w="2"/><text x="19.4526%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="19.2026%" y="613" width="0.1627%" height="15" fill="rgb(218,11,47)" fg:x="236" fg:w="2"/><text x="19.4526%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.2026%" y="597" width="0.1627%" height="15" fill="rgb(218,51,51)" fg:x="236" fg:w="2"/><text x="19.4526%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="19.2026%" y="581" width="0.1627%" height="15" fill="rgb(238,126,27)" fg:x="236" fg:w="2"/><text x="19.4526%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.2026%" y="565" width="0.1627%" height="15" fill="rgb(249,202,22)" fg:x="236" fg:w="2"/><text x="19.4526%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="19.2026%" y="549" width="0.1627%" height="15" fill="rgb(254,195,49)" fg:x="236" fg:w="2"/><text x="19.4526%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.2026%" y="533" width="0.1627%" height="15" fill="rgb(208,123,14)" fg:x="236" fg:w="2"/><text x="19.4526%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="19.2026%" y="517" width="0.1627%" height="15" fill="rgb(224,200,8)" fg:x="236" fg:w="2"/><text x="19.4526%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2840%" y="501" width="0.0814%" height="15" fill="rgb(217,61,36)" fg:x="237" fg:w="1"/><text x="19.5340%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.2840%" y="485" width="0.0814%" height="15" fill="rgb(206,35,45)" fg:x="237" fg:w="1"/><text x="19.5340%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2840%" y="469" width="0.0814%" height="15" fill="rgb(217,65,33)" fg:x="237" fg:w="1"/><text x="19.5340%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2840%" y="453" width="0.0814%" height="15" fill="rgb(222,158,48)" fg:x="237" fg:w="1"/><text x="19.5340%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.3653%" y="693" width="0.0814%" height="15" fill="rgb(254,2,54)" fg:x="238" fg:w="1"/><text x="19.6153%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3653%" y="677" width="0.0814%" height="15" fill="rgb(250,143,38)" fg:x="238" fg:w="1"/><text x="19.6153%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4467%" y="661" width="0.0814%" height="15" fill="rgb(248,25,0)" fg:x="239" fg:w="1"/><text x="19.6967%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.4467%" y="645" width="0.0814%" height="15" fill="rgb(206,152,27)" fg:x="239" fg:w="1"/><text x="19.6967%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.4467%" y="629" width="0.0814%" height="15" fill="rgb(240,77,30)" fg:x="239" fg:w="1"/><text x="19.6967%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.4467%" y="613" width="0.0814%" height="15" fill="rgb(231,5,3)" fg:x="239" fg:w="1"/><text x="19.6967%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.4467%" y="597" width="0.0814%" height="15" fill="rgb(207,226,32)" fg:x="239" fg:w="1"/><text x="19.6967%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4467%" y="581" width="0.0814%" height="15" fill="rgb(222,207,47)" fg:x="239" fg:w="1"/><text x="19.6967%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4467%" y="565" width="0.0814%" height="15" fill="rgb(229,115,45)" fg:x="239" fg:w="1"/><text x="19.6967%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.4467%" y="549" width="0.0814%" height="15" fill="rgb(224,191,6)" fg:x="239" fg:w="1"/><text x="19.6967%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.4467%" y="533" width="0.0814%" height="15" fill="rgb(230,227,24)" fg:x="239" fg:w="1"/><text x="19.6967%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.4467%" y="517" width="0.0814%" height="15" fill="rgb(228,80,19)" fg:x="239" fg:w="1"/><text x="19.6967%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.4467%" y="501" width="0.0814%" height="15" fill="rgb(247,229,0)" fg:x="239" fg:w="1"/><text x="19.6967%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4467%" y="485" width="0.0814%" height="15" fill="rgb(237,194,15)" fg:x="239" fg:w="1"/><text x="19.6967%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="19.4467%" y="677" width="0.1627%" height="15" fill="rgb(219,203,20)" fg:x="239" fg:w="2"/><text x="19.6967%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5281%" y="661" width="0.0814%" height="15" fill="rgb(234,128,8)" fg:x="240" fg:w="1"/><text x="19.7781%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5281%" y="645" width="0.0814%" height="15" fill="rgb(248,202,8)" fg:x="240" fg:w="1"/><text x="19.7781%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.5281%" y="629" width="0.0814%" height="15" fill="rgb(206,104,37)" fg:x="240" fg:w="1"/><text x="19.7781%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.5281%" y="613" width="0.0814%" height="15" fill="rgb(223,8,27)" fg:x="240" fg:w="1"/><text x="19.7781%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.5281%" y="597" width="0.0814%" height="15" fill="rgb(216,217,28)" fg:x="240" fg:w="1"/><text x="19.7781%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.6094%" y="629" width="0.0814%" height="15" fill="rgb(249,199,1)" fg:x="241" fg:w="1"/><text x="19.8594%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="19.6094%" y="613" width="0.0814%" height="15" fill="rgb(240,85,17)" fg:x="241" fg:w="1"/><text x="19.8594%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="19.6094%" y="597" width="0.0814%" height="15" fill="rgb(206,108,45)" fg:x="241" fg:w="1"/><text x="19.8594%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6094%" y="581" width="0.0814%" height="15" fill="rgb(245,210,41)" fg:x="241" fg:w="1"/><text x="19.8594%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.6094%" y="565" width="0.0814%" height="15" fill="rgb(206,13,37)" fg:x="241" fg:w="1"/><text x="19.8594%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.6094%" y="549" width="0.0814%" height="15" fill="rgb(250,61,18)" fg:x="241" fg:w="1"/><text x="19.8594%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.6094%" y="533" width="0.0814%" height="15" fill="rgb(235,172,48)" fg:x="241" fg:w="1"/><text x="19.8594%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.6094%" y="517" width="0.0814%" height="15" fill="rgb(249,201,17)" fg:x="241" fg:w="1"/><text x="19.8594%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.6094%" y="501" width="0.0814%" height="15" fill="rgb(219,208,6)" fg:x="241" fg:w="1"/><text x="19.8594%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.6094%" y="485" width="0.0814%" height="15" fill="rgb(248,31,23)" fg:x="241" fg:w="1"/><text x="19.8594%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="19.6908%" y="581" width="0.1627%" height="15" fill="rgb(245,15,42)" fg:x="242" fg:w="2"/><text x="19.9408%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.8535%" y="565" width="0.2441%" height="15" fill="rgb(222,217,39)" fg:x="244" fg:w="3"/><text x="20.1035%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0163%" y="549" width="0.0814%" height="15" fill="rgb(210,219,27)" fg:x="246" fg:w="1"/><text x="20.2663%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0163%" y="533" width="0.0814%" height="15" fill="rgb(252,166,36)" fg:x="246" fg:w="1"/><text x="20.2663%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0163%" y="517" width="0.0814%" height="15" fill="rgb(245,132,34)" fg:x="246" fg:w="1"/><text x="20.2663%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="19.8535%" y="581" width="0.3255%" height="15" fill="rgb(236,54,3)" fg:x="244" fg:w="4"/><text x="20.1035%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0976%" y="565" width="0.0814%" height="15" fill="rgb(241,173,43)" fg:x="247" fg:w="1"/><text x="20.3476%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.1790%" y="565" width="0.0814%" height="15" fill="rgb(215,190,9)" fg:x="248" fg:w="1"/><text x="20.4290%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1790%" y="549" width="0.0814%" height="15" fill="rgb(242,101,16)" fg:x="248" fg:w="1"/><text x="20.4290%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1790%" y="533" width="0.0814%" height="15" fill="rgb(223,190,21)" fg:x="248" fg:w="1"/><text x="20.4290%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1790%" y="517" width="0.0814%" height="15" fill="rgb(215,228,25)" fg:x="248" fg:w="1"/><text x="20.4290%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="20.2604%" y="565" width="0.3255%" height="15" fill="rgb(225,36,22)" fg:x="249" fg:w="4"/><text x="20.5104%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.3417%" y="549" width="0.2441%" height="15" fill="rgb(251,106,46)" fg:x="250" fg:w="3"/><text x="20.5917%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.3417%" y="533" width="0.2441%" height="15" fill="rgb(208,90,1)" fg:x="250" fg:w="3"/><text x="20.5917%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.4231%" y="517" width="0.1627%" height="15" fill="rgb(243,10,4)" fg:x="251" fg:w="2"/><text x="20.6731%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.5045%" y="501" width="0.0814%" height="15" fill="rgb(212,137,27)" fg:x="252" fg:w="1"/><text x="20.7545%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.5045%" y="485" width="0.0814%" height="15" fill="rgb(231,220,49)" fg:x="252" fg:w="1"/><text x="20.7545%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.5045%" y="469" width="0.0814%" height="15" fill="rgb(237,96,20)" fg:x="252" fg:w="1"/><text x="20.7545%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.5858%" y="517" width="0.0814%" height="15" fill="rgb(239,229,30)" fg:x="253" fg:w="1"/><text x="20.8358%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.5858%" y="501" width="0.0814%" height="15" fill="rgb(219,65,33)" fg:x="253" fg:w="1"/><text x="20.8358%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5858%" y="485" width="0.0814%" height="15" fill="rgb(243,134,7)" fg:x="253" fg:w="1"/><text x="20.8358%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.5858%" y="549" width="0.1627%" height="15" fill="rgb(216,177,54)" fg:x="253" fg:w="2"/><text x="20.8358%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.5858%" y="533" width="0.1627%" height="15" fill="rgb(211,160,20)" fg:x="253" fg:w="2"/><text x="20.8358%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.6672%" y="517" width="0.0814%" height="15" fill="rgb(239,85,39)" fg:x="254" fg:w="1"/><text x="20.9172%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.6672%" y="501" width="0.0814%" height="15" fill="rgb(232,125,22)" fg:x="254" fg:w="1"/><text x="20.9172%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.6672%" y="485" width="0.0814%" height="15" fill="rgb(244,57,34)" fg:x="254" fg:w="1"/><text x="20.9172%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.6672%" y="469" width="0.0814%" height="15" fill="rgb(214,203,32)" fg:x="254" fg:w="1"/><text x="20.9172%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.6672%" y="453" width="0.0814%" height="15" fill="rgb(207,58,43)" fg:x="254" fg:w="1"/><text x="20.9172%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="20.7486%" y="549" width="0.4068%" height="15" fill="rgb(215,193,15)" fg:x="255" fg:w="5"/><text x="20.9986%" y="559.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="20.7486%" y="533" width="0.4068%" height="15" fill="rgb(232,15,44)" fg:x="255" fg:w="5"/><text x="20.9986%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="20.8299%" y="517" width="0.3255%" height="15" fill="rgb(212,3,48)" fg:x="256" fg:w="4"/><text x="21.0799%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="20.8299%" y="501" width="0.3255%" height="15" fill="rgb(218,128,7)" fg:x="256" fg:w="4"/><text x="21.0799%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="20.9927%" y="485" width="0.1627%" height="15" fill="rgb(226,216,39)" fg:x="258" fg:w="2"/><text x="21.2427%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="20.9927%" y="469" width="0.1627%" height="15" fill="rgb(243,47,51)" fg:x="258" fg:w="2"/><text x="21.2427%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="20.9927%" y="453" width="0.1627%" height="15" fill="rgb(241,183,40)" fg:x="258" fg:w="2"/><text x="21.2427%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="21.1554%" y="517" width="0.1627%" height="15" fill="rgb(231,217,32)" fg:x="260" fg:w="2"/><text x="21.4054%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.1554%" y="501" width="0.1627%" height="15" fill="rgb(229,61,38)" fg:x="260" fg:w="2"/><text x="21.4054%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.1554%" y="485" width="0.1627%" height="15" fill="rgb(225,210,5)" fg:x="260" fg:w="2"/><text x="21.4054%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.1554%" y="469" width="0.1627%" height="15" fill="rgb(231,79,45)" fg:x="260" fg:w="2"/><text x="21.4054%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.3181%" y="501" width="0.2441%" height="15" fill="rgb(224,100,7)" fg:x="262" fg:w="3"/><text x="21.5681%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.4809%" y="485" width="0.0814%" height="15" fill="rgb(241,198,18)" fg:x="264" fg:w="1"/><text x="21.7309%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.81%)</title><rect x="21.5622%" y="485" width="0.8137%" height="15" fill="rgb(252,97,53)" fg:x="265" fg:w="10"/><text x="21.8122%" y="495.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.81%)</title><rect x="21.5622%" y="469" width="0.8137%" height="15" fill="rgb(220,88,7)" fg:x="265" fg:w="10"/><text x="21.8122%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (9 samples, 0.73%)</title><rect x="21.6436%" y="453" width="0.7323%" height="15" fill="rgb(213,176,14)" fg:x="266" fg:w="9"/><text x="21.8936%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.65%)</title><rect x="21.7250%" y="437" width="0.6509%" height="15" fill="rgb(246,73,7)" fg:x="267" fg:w="8"/><text x="21.9750%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.57%)</title><rect x="21.8063%" y="421" width="0.5696%" height="15" fill="rgb(245,64,36)" fg:x="268" fg:w="7"/><text x="22.0563%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.57%)</title><rect x="21.8063%" y="405" width="0.5696%" height="15" fill="rgb(245,80,10)" fg:x="268" fg:w="7"/><text x="22.0563%" y="415.50"></text></g><g><title>realloc (6 samples, 0.49%)</title><rect x="21.8877%" y="389" width="0.4882%" height="15" fill="rgb(232,107,50)" fg:x="269" fg:w="6"/><text x="22.1377%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="21.5622%" y="501" width="0.8950%" height="15" fill="rgb(253,3,0)" fg:x="265" fg:w="11"/><text x="21.8122%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.3759%" y="485" width="0.0814%" height="15" fill="rgb(212,99,53)" fg:x="275" fg:w="1"/><text x="22.6259%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.3759%" y="469" width="0.0814%" height="15" fill="rgb(249,111,54)" fg:x="275" fg:w="1"/><text x="22.6259%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.3759%" y="453" width="0.0814%" height="15" fill="rgb(249,55,30)" fg:x="275" fg:w="1"/><text x="22.6259%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.22%)</title><rect x="21.3181%" y="517" width="1.2205%" height="15" fill="rgb(237,47,42)" fg:x="262" fg:w="15"/><text x="21.5681%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.4573%" y="501" width="0.0814%" height="15" fill="rgb(211,20,18)" fg:x="276" fg:w="1"/><text x="22.7073%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.4573%" y="485" width="0.0814%" height="15" fill="rgb(231,203,46)" fg:x="276" fg:w="1"/><text x="22.7073%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="21.1554%" y="549" width="1.4646%" height="15" fill="rgb(237,142,3)" fg:x="260" fg:w="18"/><text x="21.4054%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="21.1554%" y="533" width="1.4646%" height="15" fill="rgb(241,107,1)" fg:x="260" fg:w="18"/><text x="21.4054%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.5386%" y="517" width="0.0814%" height="15" fill="rgb(229,83,13)" fg:x="277" fg:w="1"/><text x="22.7886%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.12%)</title><rect x="20.5858%" y="565" width="2.1155%" height="15" fill="rgb(241,91,40)" fg:x="253" fg:w="26"/><text x="20.8358%" y="575.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.6200%" y="549" width="0.0814%" height="15" fill="rgb(225,3,45)" fg:x="278" fg:w="1"/><text x="22.8700%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.6200%" y="533" width="0.0814%" height="15" fill="rgb(244,223,14)" fg:x="278" fg:w="1"/><text x="22.8700%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.6200%" y="517" width="0.0814%" height="15" fill="rgb(224,124,37)" fg:x="278" fg:w="1"/><text x="22.8700%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.93%)</title><rect x="20.1790%" y="581" width="2.9292%" height="15" fill="rgb(251,171,30)" fg:x="248" fg:w="36"/><text x="20.4290%" y="591.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="22.7014%" y="565" width="0.4068%" height="15" fill="rgb(236,46,54)" fg:x="279" fg:w="5"/><text x="22.9514%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="22.7828%" y="549" width="0.3255%" height="15" fill="rgb(245,213,5)" fg:x="280" fg:w="4"/><text x="23.0328%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="22.7828%" y="533" width="0.3255%" height="15" fill="rgb(230,144,27)" fg:x="280" fg:w="4"/><text x="23.0328%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="22.8641%" y="517" width="0.2441%" height="15" fill="rgb(220,86,6)" fg:x="281" fg:w="3"/><text x="23.1141%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="22.8641%" y="501" width="0.2441%" height="15" fill="rgb(240,20,13)" fg:x="281" fg:w="3"/><text x="23.1141%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="22.8641%" y="485" width="0.2441%" height="15" fill="rgb(217,89,34)" fg:x="281" fg:w="3"/><text x="23.1141%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (43 samples, 3.50%)</title><rect x="19.6908%" y="597" width="3.4988%" height="15" fill="rgb(229,13,5)" fg:x="242" fg:w="43"/><text x="19.9408%" y="607.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.1082%" y="581" width="0.0814%" height="15" fill="rgb(244,67,35)" fg:x="284" fg:w="1"/><text x="23.3582%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.1082%" y="565" width="0.0814%" height="15" fill="rgb(221,40,2)" fg:x="284" fg:w="1"/><text x="23.3582%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.1082%" y="549" width="0.0814%" height="15" fill="rgb(237,157,21)" fg:x="284" fg:w="1"/><text x="23.3582%" y="559.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="23.1896%" y="597" width="0.0814%" height="15" fill="rgb(222,94,11)" fg:x="285" fg:w="1"/><text x="23.4396%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.2710%" y="565" width="0.0814%" height="15" fill="rgb(249,113,6)" fg:x="286" fg:w="1"/><text x="23.5210%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4337%" y="533" width="0.0814%" height="15" fill="rgb(238,137,36)" fg:x="288" fg:w="1"/><text x="23.6837%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="23.5151%" y="517" width="0.1627%" height="15" fill="rgb(210,102,26)" fg:x="289" fg:w="2"/><text x="23.7651%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.5151%" y="501" width="0.1627%" height="15" fill="rgb(218,30,30)" fg:x="289" fg:w="2"/><text x="23.7651%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.5151%" y="485" width="0.1627%" height="15" fill="rgb(214,67,26)" fg:x="289" fg:w="2"/><text x="23.7651%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="23.2710%" y="597" width="0.5696%" height="15" fill="rgb(251,9,53)" fg:x="286" fg:w="7"/><text x="23.5210%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="23.2710%" y="581" width="0.5696%" height="15" fill="rgb(228,204,25)" fg:x="286" fg:w="7"/><text x="23.5210%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="23.3523%" y="565" width="0.4882%" height="15" fill="rgb(207,153,8)" fg:x="287" fg:w="6"/><text x="23.6023%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="23.4337%" y="549" width="0.4068%" height="15" fill="rgb(242,9,16)" fg:x="288" fg:w="5"/><text x="23.6837%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="23.5151%" y="533" width="0.3255%" height="15" fill="rgb(217,211,10)" fg:x="289" fg:w="4"/><text x="23.7651%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.6778%" y="517" width="0.1627%" height="15" fill="rgb(219,228,52)" fg:x="291" fg:w="2"/><text x="23.9278%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7592%" y="501" width="0.0814%" height="15" fill="rgb(231,92,29)" fg:x="292" fg:w="1"/><text x="24.0092%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7592%" y="485" width="0.0814%" height="15" fill="rgb(232,8,23)" fg:x="292" fg:w="1"/><text x="24.0092%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.8405%" y="549" width="0.0814%" height="15" fill="rgb(216,211,34)" fg:x="293" fg:w="1"/><text x="24.0905%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.8405%" y="533" width="0.0814%" height="15" fill="rgb(236,151,0)" fg:x="293" fg:w="1"/><text x="24.0905%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8405%" y="517" width="0.0814%" height="15" fill="rgb(209,168,3)" fg:x="293" fg:w="1"/><text x="24.0905%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="23.8405%" y="581" width="0.1627%" height="15" fill="rgb(208,129,28)" fg:x="293" fg:w="2"/><text x="24.0905%" y="591.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="23.8405%" y="565" width="0.1627%" height="15" fill="rgb(229,78,22)" fg:x="293" fg:w="2"/><text x="24.0905%" y="575.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="23.9219%" y="549" width="0.0814%" height="15" fill="rgb(228,187,13)" fg:x="294" fg:w="1"/><text x="24.1719%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.9219%" y="533" width="0.0814%" height="15" fill="rgb(240,119,24)" fg:x="294" fg:w="1"/><text x="24.1719%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.9219%" y="517" width="0.0814%" height="15" fill="rgb(209,194,42)" fg:x="294" fg:w="1"/><text x="24.1719%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.0033%" y="581" width="0.0814%" height="15" fill="rgb(247,200,46)" fg:x="295" fg:w="1"/><text x="24.2533%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0033%" y="565" width="0.0814%" height="15" fill="rgb(218,76,16)" fg:x="295" fg:w="1"/><text x="24.2533%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0846%" y="549" width="0.0814%" height="15" fill="rgb(225,21,48)" fg:x="296" fg:w="1"/><text x="24.3346%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3287%" y="517" width="0.0814%" height="15" fill="rgb(239,223,50)" fg:x="299" fg:w="1"/><text x="24.5787%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="24.1660%" y="549" width="0.4068%" height="15" fill="rgb(244,45,21)" fg:x="297" fg:w="5"/><text x="24.4160%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.3287%" y="533" width="0.2441%" height="15" fill="rgb(232,33,43)" fg:x="299" fg:w="3"/><text x="24.5787%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="24.4101%" y="517" width="0.1627%" height="15" fill="rgb(209,8,3)" fg:x="300" fg:w="2"/><text x="24.6601%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5728%" y="517" width="0.0814%" height="15" fill="rgb(214,25,53)" fg:x="302" fg:w="1"/><text x="24.8228%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="24.5728%" y="549" width="0.2441%" height="15" fill="rgb(254,186,54)" fg:x="302" fg:w="3"/><text x="24.8228%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.5728%" y="533" width="0.2441%" height="15" fill="rgb(208,174,49)" fg:x="302" fg:w="3"/><text x="24.8228%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.6542%" y="517" width="0.1627%" height="15" fill="rgb(233,191,51)" fg:x="303" fg:w="2"/><text x="24.9042%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.8983%" y="517" width="0.0814%" height="15" fill="rgb(222,134,10)" fg:x="306" fg:w="1"/><text x="25.1483%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9797%" y="501" width="0.1627%" height="15" fill="rgb(230,226,20)" fg:x="307" fg:w="2"/><text x="25.2297%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9797%" y="485" width="0.1627%" height="15" fill="rgb(251,111,25)" fg:x="307" fg:w="2"/><text x="25.2297%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0610%" y="469" width="0.0814%" height="15" fill="rgb(224,40,46)" fg:x="308" fg:w="1"/><text x="25.3110%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="25.1424%" y="485" width="0.0814%" height="15" fill="rgb(236,108,47)" fg:x="309" fg:w="1"/><text x="25.3924%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.1424%" y="469" width="0.0814%" height="15" fill="rgb(234,93,0)" fg:x="309" fg:w="1"/><text x="25.3924%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.1424%" y="453" width="0.0814%" height="15" fill="rgb(224,213,32)" fg:x="309" fg:w="1"/><text x="25.3924%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.2238%" y="469" width="0.0814%" height="15" fill="rgb(251,11,48)" fg:x="310" fg:w="1"/><text x="25.4738%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3051%" y="453" width="0.0814%" height="15" fill="rgb(236,173,5)" fg:x="311" fg:w="1"/><text x="25.5551%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3051%" y="437" width="0.0814%" height="15" fill="rgb(230,95,12)" fg:x="311" fg:w="1"/><text x="25.5551%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.3051%" y="421" width="0.0814%" height="15" fill="rgb(232,209,1)" fg:x="311" fg:w="1"/><text x="25.5551%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.3051%" y="405" width="0.0814%" height="15" fill="rgb(232,6,1)" fg:x="311" fg:w="1"/><text x="25.5551%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="25.1424%" y="501" width="0.3255%" height="15" fill="rgb(210,224,50)" fg:x="309" fg:w="4"/><text x="25.3924%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="25.2238%" y="485" width="0.2441%" height="15" fill="rgb(228,127,35)" fg:x="310" fg:w="3"/><text x="25.4738%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="25.3051%" y="469" width="0.1627%" height="15" fill="rgb(245,102,45)" fg:x="311" fg:w="2"/><text x="25.5551%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3865%" y="453" width="0.0814%" height="15" fill="rgb(214,1,49)" fg:x="312" fg:w="1"/><text x="25.6365%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.3865%" y="437" width="0.0814%" height="15" fill="rgb(226,163,40)" fg:x="312" fg:w="1"/><text x="25.6365%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.3865%" y="421" width="0.0814%" height="15" fill="rgb(239,212,28)" fg:x="312" fg:w="1"/><text x="25.6365%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.5492%" y="469" width="0.1627%" height="15" fill="rgb(220,20,13)" fg:x="314" fg:w="2"/><text x="25.7992%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.9561%" y="437" width="0.0814%" height="15" fill="rgb(210,164,35)" fg:x="319" fg:w="1"/><text x="26.2061%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.9561%" y="421" width="0.0814%" height="15" fill="rgb(248,109,41)" fg:x="319" fg:w="1"/><text x="26.2061%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.9561%" y="405" width="0.0814%" height="15" fill="rgb(238,23,50)" fg:x="319" fg:w="1"/><text x="26.2061%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="26.2002%" y="421" width="0.0814%" height="15" fill="rgb(211,48,49)" fg:x="322" fg:w="1"/><text x="26.4502%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.2815%" y="389" width="0.0814%" height="15" fill="rgb(223,36,21)" fg:x="323" fg:w="1"/><text x="26.5315%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="26.2815%" y="421" width="0.2441%" height="15" fill="rgb(207,123,46)" fg:x="323" fg:w="3"/><text x="26.5315%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="26.2815%" y="405" width="0.2441%" height="15" fill="rgb(240,218,32)" fg:x="323" fg:w="3"/><text x="26.5315%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.3629%" y="389" width="0.1627%" height="15" fill="rgb(252,5,43)" fg:x="324" fg:w="2"/><text x="26.6129%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="25.8747%" y="453" width="0.7323%" height="15" fill="rgb(252,84,19)" fg:x="318" fg:w="9"/><text x="26.1247%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="26.0374%" y="437" width="0.5696%" height="15" fill="rgb(243,152,39)" fg:x="320" fg:w="7"/><text x="26.2874%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5256%" y="421" width="0.0814%" height="15" fill="rgb(234,160,15)" fg:x="326" fg:w="1"/><text x="26.7756%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.71%)</title><rect x="24.9797%" y="517" width="1.7087%" height="15" fill="rgb(237,34,20)" fg:x="307" fg:w="21"/><text x="25.2297%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.22%)</title><rect x="25.4679%" y="501" width="1.2205%" height="15" fill="rgb(229,97,13)" fg:x="313" fg:w="15"/><text x="25.7179%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.22%)</title><rect x="25.4679%" y="485" width="1.2205%" height="15" fill="rgb(234,71,50)" fg:x="313" fg:w="15"/><text x="25.7179%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.98%)</title><rect x="25.7120%" y="469" width="0.9764%" height="15" fill="rgb(253,155,4)" fg:x="316" fg:w="12"/><text x="25.9620%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6070%" y="453" width="0.0814%" height="15" fill="rgb(222,185,37)" fg:x="327" fg:w="1"/><text x="26.8570%" y="463.50"></text></g><g><title>engine::session::Session::flush (90 samples, 7.32%)</title><rect x="19.4467%" y="693" width="7.3230%" height="15" fill="rgb(251,177,13)" fg:x="239" fg:w="90"/><text x="19.6967%" y="703.50">engine::se..</text></g><g><title>engine::session::Session::save_changes (88 samples, 7.16%)</title><rect x="19.6094%" y="677" width="7.1603%" height="15" fill="rgb(250,179,40)" fg:x="241" fg:w="88"/><text x="19.8594%" y="687.50">engine::se..</text></g><g><title>engine::session::state::State::close (88 samples, 7.16%)</title><rect x="19.6094%" y="661" width="7.1603%" height="15" fill="rgb(242,44,2)" fg:x="241" fg:w="88"/><text x="19.8594%" y="671.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (88 samples, 7.16%)</title><rect x="19.6094%" y="645" width="7.1603%" height="15" fill="rgb(216,177,13)" fg:x="241" fg:w="88"/><text x="19.8594%" y="655.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (87 samples, 7.08%)</title><rect x="19.6908%" y="629" width="7.0789%" height="15" fill="rgb(216,106,43)" fg:x="242" fg:w="87"/><text x="19.9408%" y="639.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (87 samples, 7.08%)</title><rect x="19.6908%" y="613" width="7.0789%" height="15" fill="rgb(216,183,2)" fg:x="242" fg:w="87"/><text x="19.9408%" y="623.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.93%)</title><rect x="23.8405%" y="597" width="2.9292%" height="15" fill="rgb(249,75,3)" fg:x="293" fg:w="36"/><text x="24.0905%" y="607.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.69%)</title><rect x="24.0846%" y="581" width="2.6851%" height="15" fill="rgb(219,67,39)" fg:x="296" fg:w="33"/><text x="24.3346%" y="591.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.69%)</title><rect x="24.0846%" y="565" width="2.6851%" height="15" fill="rgb(253,228,2)" fg:x="296" fg:w="33"/><text x="24.3346%" y="575.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.95%)</title><rect x="24.8169%" y="549" width="1.9528%" height="15" fill="rgb(235,138,27)" fg:x="305" fg:w="24"/><text x="25.0669%" y="559.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 1.95%)</title><rect x="24.8169%" y="533" width="1.9528%" height="15" fill="rgb(236,97,51)" fg:x="305" fg:w="24"/><text x="25.0669%" y="543.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="26.6884%" y="517" width="0.0814%" height="15" fill="rgb(240,80,30)" fg:x="328" fg:w="1"/><text x="26.9384%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="26.7697%" y="677" width="0.1627%" height="15" fill="rgb(230,178,19)" fg:x="329" fg:w="2"/><text x="27.0197%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="26.7697%" y="661" width="0.1627%" height="15" fill="rgb(210,190,27)" fg:x="329" fg:w="2"/><text x="27.0197%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.7697%" y="645" width="0.1627%" height="15" fill="rgb(222,107,31)" fg:x="329" fg:w="2"/><text x="27.0197%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.7697%" y="629" width="0.1627%" height="15" fill="rgb(216,127,34)" fg:x="329" fg:w="2"/><text x="27.0197%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8511%" y="613" width="0.0814%" height="15" fill="rgb(234,116,52)" fg:x="330" fg:w="1"/><text x="27.1011%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.8511%" y="597" width="0.0814%" height="15" fill="rgb(222,124,15)" fg:x="330" fg:w="1"/><text x="27.1011%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.8511%" y="581" width="0.0814%" height="15" fill="rgb(231,179,28)" fg:x="330" fg:w="1"/><text x="27.1011%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.8511%" y="565" width="0.0814%" height="15" fill="rgb(226,93,45)" fg:x="330" fg:w="1"/><text x="27.1011%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.8511%" y="549" width="0.0814%" height="15" fill="rgb(215,8,51)" fg:x="330" fg:w="1"/><text x="27.1011%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.8511%" y="533" width="0.0814%" height="15" fill="rgb(223,106,5)" fg:x="330" fg:w="1"/><text x="27.1011%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.8511%" y="517" width="0.0814%" height="15" fill="rgb(250,191,5)" fg:x="330" fg:w="1"/><text x="27.1011%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.8511%" y="501" width="0.0814%" height="15" fill="rgb(242,132,44)" fg:x="330" fg:w="1"/><text x="27.1011%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="26.7697%" y="693" width="0.2441%" height="15" fill="rgb(251,152,29)" fg:x="329" fg:w="3"/><text x="27.0197%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="26.9325%" y="677" width="0.0814%" height="15" fill="rgb(218,179,5)" fg:x="331" fg:w="1"/><text x="27.1825%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="27.2579%" y="645" width="0.0814%" height="15" fill="rgb(227,67,19)" fg:x="335" fg:w="1"/><text x="27.5079%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="27.2579%" y="629" width="0.0814%" height="15" fill="rgb(233,119,31)" fg:x="335" fg:w="1"/><text x="27.5079%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2579%" y="613" width="0.0814%" height="15" fill="rgb(241,120,22)" fg:x="335" fg:w="1"/><text x="27.5079%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4207%" y="453" width="0.0814%" height="15" fill="rgb(224,102,30)" fg:x="337" fg:w="1"/><text x="27.6707%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4207%" y="437" width="0.0814%" height="15" fill="rgb(210,164,37)" fg:x="337" fg:w="1"/><text x="27.6707%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.4207%" y="421" width="0.0814%" height="15" fill="rgb(226,191,16)" fg:x="337" fg:w="1"/><text x="27.6707%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.4207%" y="405" width="0.0814%" height="15" fill="rgb(214,40,45)" fg:x="337" fg:w="1"/><text x="27.6707%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.4207%" y="389" width="0.0814%" height="15" fill="rgb(244,29,26)" fg:x="337" fg:w="1"/><text x="27.6707%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.4207%" y="373" width="0.0814%" height="15" fill="rgb(216,16,5)" fg:x="337" fg:w="1"/><text x="27.6707%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4207%" y="357" width="0.0814%" height="15" fill="rgb(249,76,35)" fg:x="337" fg:w="1"/><text x="27.6707%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4207%" y="341" width="0.0814%" height="15" fill="rgb(207,11,44)" fg:x="337" fg:w="1"/><text x="27.6707%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.4207%" y="325" width="0.0814%" height="15" fill="rgb(228,190,49)" fg:x="337" fg:w="1"/><text x="27.6707%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.4207%" y="309" width="0.0814%" height="15" fill="rgb(214,173,12)" fg:x="337" fg:w="1"/><text x="27.6707%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.4207%" y="293" width="0.0814%" height="15" fill="rgb(218,26,35)" fg:x="337" fg:w="1"/><text x="27.6707%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4207%" y="277" width="0.0814%" height="15" fill="rgb(220,200,19)" fg:x="337" fg:w="1"/><text x="27.6707%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.33%)</title><rect x="27.2579%" y="661" width="0.3255%" height="15" fill="rgb(239,95,49)" fg:x="335" fg:w="4"/><text x="27.5079%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="27.3393%" y="645" width="0.2441%" height="15" fill="rgb(235,85,53)" fg:x="336" fg:w="3"/><text x="27.5893%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="27.3393%" y="629" width="0.2441%" height="15" fill="rgb(233,133,31)" fg:x="336" fg:w="3"/><text x="27.5893%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="613" width="0.2441%" height="15" fill="rgb(218,25,20)" fg:x="336" fg:w="3"/><text x="27.5893%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.3393%" y="597" width="0.2441%" height="15" fill="rgb(252,210,38)" fg:x="336" fg:w="3"/><text x="27.5893%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="581" width="0.2441%" height="15" fill="rgb(242,134,21)" fg:x="336" fg:w="3"/><text x="27.5893%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="565" width="0.2441%" height="15" fill="rgb(213,28,48)" fg:x="336" fg:w="3"/><text x="27.5893%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="549" width="0.2441%" height="15" fill="rgb(250,196,2)" fg:x="336" fg:w="3"/><text x="27.5893%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.3393%" y="533" width="0.2441%" height="15" fill="rgb(227,5,17)" fg:x="336" fg:w="3"/><text x="27.5893%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="517" width="0.2441%" height="15" fill="rgb(221,226,24)" fg:x="336" fg:w="3"/><text x="27.5893%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="501" width="0.2441%" height="15" fill="rgb(211,5,48)" fg:x="336" fg:w="3"/><text x="27.5893%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="27.3393%" y="485" width="0.2441%" height="15" fill="rgb(219,150,6)" fg:x="336" fg:w="3"/><text x="27.5893%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="27.4207%" y="469" width="0.1627%" height="15" fill="rgb(251,46,16)" fg:x="337" fg:w="2"/><text x="27.6707%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.5020%" y="453" width="0.0814%" height="15" fill="rgb(220,204,40)" fg:x="338" fg:w="1"/><text x="27.7520%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.5020%" y="437" width="0.0814%" height="15" fill="rgb(211,85,2)" fg:x="338" fg:w="1"/><text x="27.7520%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.5020%" y="421" width="0.0814%" height="15" fill="rgb(229,17,7)" fg:x="338" fg:w="1"/><text x="27.7520%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.5020%" y="405" width="0.0814%" height="15" fill="rgb(239,72,28)" fg:x="338" fg:w="1"/><text x="27.7520%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.5020%" y="389" width="0.0814%" height="15" fill="rgb(230,47,54)" fg:x="338" fg:w="1"/><text x="27.7520%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.5020%" y="373" width="0.0814%" height="15" fill="rgb(214,50,8)" fg:x="338" fg:w="1"/><text x="27.7520%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.5020%" y="357" width="0.0814%" height="15" fill="rgb(216,198,43)" fg:x="338" fg:w="1"/><text x="27.7520%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.5020%" y="341" width="0.0814%" height="15" fill="rgb(234,20,35)" fg:x="338" fg:w="1"/><text x="27.7520%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.5020%" y="325" width="0.0814%" height="15" fill="rgb(254,45,19)" fg:x="338" fg:w="1"/><text x="27.7520%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.5020%" y="309" width="0.0814%" height="15" fill="rgb(219,14,44)" fg:x="338" fg:w="1"/><text x="27.7520%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.5020%" y="293" width="0.0814%" height="15" fill="rgb(217,220,26)" fg:x="338" fg:w="1"/><text x="27.7520%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.5020%" y="277" width="0.0814%" height="15" fill="rgb(213,158,28)" fg:x="338" fg:w="1"/><text x="27.7520%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.5020%" y="261" width="0.0814%" height="15" fill="rgb(252,51,52)" fg:x="338" fg:w="1"/><text x="27.7520%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.5020%" y="245" width="0.0814%" height="15" fill="rgb(246,89,16)" fg:x="338" fg:w="1"/><text x="27.7520%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.5020%" y="229" width="0.0814%" height="15" fill="rgb(216,158,49)" fg:x="338" fg:w="1"/><text x="27.7520%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.5020%" y="213" width="0.0814%" height="15" fill="rgb(236,107,19)" fg:x="338" fg:w="1"/><text x="27.7520%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="27.5020%" y="197" width="0.0814%" height="15" fill="rgb(228,185,30)" fg:x="338" fg:w="1"/><text x="27.7520%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="27.5020%" y="181" width="0.0814%" height="15" fill="rgb(246,134,8)" fg:x="338" fg:w="1"/><text x="27.7520%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="27.5020%" y="165" width="0.0814%" height="15" fill="rgb(214,143,50)" fg:x="338" fg:w="1"/><text x="27.7520%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.5020%" y="149" width="0.0814%" height="15" fill="rgb(228,75,8)" fg:x="338" fg:w="1"/><text x="27.7520%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5834%" y="613" width="0.0814%" height="15" fill="rgb(207,175,4)" fg:x="339" fg:w="1"/><text x="27.8334%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5834%" y="597" width="0.0814%" height="15" fill="rgb(205,108,24)" fg:x="339" fg:w="1"/><text x="27.8334%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5834%" y="581" width="0.0814%" height="15" fill="rgb(244,120,49)" fg:x="339" fg:w="1"/><text x="27.8334%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.5834%" y="565" width="0.0814%" height="15" fill="rgb(223,47,38)" fg:x="339" fg:w="1"/><text x="27.8334%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5834%" y="549" width="0.0814%" height="15" fill="rgb(229,179,11)" fg:x="339" fg:w="1"/><text x="27.8334%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5834%" y="533" width="0.0814%" height="15" fill="rgb(231,122,1)" fg:x="339" fg:w="1"/><text x="27.8334%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5834%" y="517" width="0.0814%" height="15" fill="rgb(245,119,9)" fg:x="339" fg:w="1"/><text x="27.8334%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5834%" y="501" width="0.0814%" height="15" fill="rgb(241,163,25)" fg:x="339" fg:w="1"/><text x="27.8334%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5834%" y="485" width="0.0814%" height="15" fill="rgb(217,214,3)" fg:x="339" fg:w="1"/><text x="27.8334%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5834%" y="469" width="0.0814%" height="15" fill="rgb(240,86,28)" fg:x="339" fg:w="1"/><text x="27.8334%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5834%" y="453" width="0.0814%" height="15" fill="rgb(215,47,9)" fg:x="339" fg:w="1"/><text x="27.8334%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.5834%" y="437" width="0.0814%" height="15" fill="rgb(252,25,45)" fg:x="339" fg:w="1"/><text x="27.8334%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.5834%" y="421" width="0.0814%" height="15" fill="rgb(251,164,9)" fg:x="339" fg:w="1"/><text x="27.8334%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.5834%" y="405" width="0.0814%" height="15" fill="rgb(233,194,0)" fg:x="339" fg:w="1"/><text x="27.8334%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.5834%" y="389" width="0.0814%" height="15" fill="rgb(249,111,24)" fg:x="339" fg:w="1"/><text x="27.8334%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5834%" y="373" width="0.0814%" height="15" fill="rgb(250,223,3)" fg:x="339" fg:w="1"/><text x="27.8334%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.6648%" y="613" width="0.0814%" height="15" fill="rgb(236,178,37)" fg:x="340" fg:w="1"/><text x="27.9148%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.6648%" y="597" width="0.0814%" height="15" fill="rgb(241,158,50)" fg:x="340" fg:w="1"/><text x="27.9148%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.6648%" y="581" width="0.0814%" height="15" fill="rgb(213,121,41)" fg:x="340" fg:w="1"/><text x="27.9148%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.6648%" y="565" width="0.0814%" height="15" fill="rgb(240,92,3)" fg:x="340" fg:w="1"/><text x="27.9148%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.7461%" y="517" width="0.1627%" height="15" fill="rgb(205,123,3)" fg:x="341" fg:w="2"/><text x="27.9961%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.8275%" y="501" width="0.0814%" height="15" fill="rgb(205,97,47)" fg:x="342" fg:w="1"/><text x="28.0775%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.8275%" y="485" width="0.0814%" height="15" fill="rgb(247,152,14)" fg:x="342" fg:w="1"/><text x="28.0775%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="27.5834%" y="661" width="0.4882%" height="15" fill="rgb(248,195,53)" fg:x="339" fg:w="6"/><text x="27.8334%" y="671.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="27.5834%" y="645" width="0.4882%" height="15" fill="rgb(226,201,16)" fg:x="339" fg:w="6"/><text x="27.8334%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="27.5834%" y="629" width="0.4882%" height="15" fill="rgb(205,98,0)" fg:x="339" fg:w="6"/><text x="27.8334%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="27.7461%" y="613" width="0.3255%" height="15" fill="rgb(214,191,48)" fg:x="341" fg:w="4"/><text x="27.9961%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="27.7461%" y="597" width="0.3255%" height="15" fill="rgb(237,112,39)" fg:x="341" fg:w="4"/><text x="27.9961%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="27.7461%" y="581" width="0.3255%" height="15" fill="rgb(247,203,27)" fg:x="341" fg:w="4"/><text x="27.9961%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="27.7461%" y="565" width="0.3255%" height="15" fill="rgb(235,124,28)" fg:x="341" fg:w="4"/><text x="27.9961%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="27.7461%" y="549" width="0.3255%" height="15" fill="rgb(208,207,46)" fg:x="341" fg:w="4"/><text x="27.9961%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="27.7461%" y="533" width="0.3255%" height="15" fill="rgb(234,176,4)" fg:x="341" fg:w="4"/><text x="27.9961%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.9089%" y="517" width="0.1627%" height="15" fill="rgb(230,133,28)" fg:x="343" fg:w="2"/><text x="28.1589%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.9089%" y="501" width="0.1627%" height="15" fill="rgb(211,137,40)" fg:x="343" fg:w="2"/><text x="28.1589%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.9089%" y="485" width="0.1627%" height="15" fill="rgb(254,35,13)" fg:x="343" fg:w="2"/><text x="28.1589%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.9089%" y="469" width="0.1627%" height="15" fill="rgb(225,49,51)" fg:x="343" fg:w="2"/><text x="28.1589%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="27.9902%" y="453" width="0.0814%" height="15" fill="rgb(251,10,15)" fg:x="344" fg:w="1"/><text x="28.2402%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.9902%" y="437" width="0.0814%" height="15" fill="rgb(228,207,15)" fg:x="344" fg:w="1"/><text x="28.2402%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="28.0716%" y="661" width="0.0814%" height="15" fill="rgb(241,99,19)" fg:x="345" fg:w="1"/><text x="28.3216%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="28.0716%" y="645" width="0.0814%" height="15" fill="rgb(207,104,49)" fg:x="345" fg:w="1"/><text x="28.3216%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0716%" y="629" width="0.0814%" height="15" fill="rgb(234,99,18)" fg:x="345" fg:w="1"/><text x="28.3216%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.1530%" y="613" width="0.0814%" height="15" fill="rgb(213,191,49)" fg:x="346" fg:w="1"/><text x="28.4030%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="28.2343%" y="613" width="0.0814%" height="15" fill="rgb(210,226,19)" fg:x="347" fg:w="1"/><text x="28.4843%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.2343%" y="597" width="0.0814%" height="15" fill="rgb(229,97,18)" fg:x="347" fg:w="1"/><text x="28.4843%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="28.1530%" y="645" width="0.2441%" height="15" fill="rgb(211,167,15)" fg:x="346" fg:w="3"/><text x="28.4030%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.1530%" y="629" width="0.2441%" height="15" fill="rgb(210,169,34)" fg:x="346" fg:w="3"/><text x="28.4030%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3157%" y="613" width="0.0814%" height="15" fill="rgb(241,121,31)" fg:x="348" fg:w="1"/><text x="28.5657%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3157%" y="597" width="0.0814%" height="15" fill="rgb(232,40,11)" fg:x="348" fg:w="1"/><text x="28.5657%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3157%" y="581" width="0.0814%" height="15" fill="rgb(205,86,26)" fg:x="348" fg:w="1"/><text x="28.5657%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3157%" y="565" width="0.0814%" height="15" fill="rgb(231,126,28)" fg:x="348" fg:w="1"/><text x="28.5657%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="28.3157%" y="549" width="0.0814%" height="15" fill="rgb(219,221,18)" fg:x="348" fg:w="1"/><text x="28.5657%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="28.3157%" y="533" width="0.0814%" height="15" fill="rgb(211,40,0)" fg:x="348" fg:w="1"/><text x="28.5657%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.33%)</title><rect x="28.1530%" y="661" width="0.3255%" height="15" fill="rgb(239,85,43)" fg:x="346" fg:w="4"/><text x="28.4030%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.3971%" y="645" width="0.0814%" height="15" fill="rgb(231,55,21)" fg:x="349" fg:w="1"/><text x="28.6471%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="28.3971%" y="629" width="0.0814%" height="15" fill="rgb(225,184,43)" fg:x="349" fg:w="1"/><text x="28.6471%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.3971%" y="613" width="0.0814%" height="15" fill="rgb(251,158,41)" fg:x="349" fg:w="1"/><text x="28.6471%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3971%" y="597" width="0.0814%" height="15" fill="rgb(234,159,37)" fg:x="349" fg:w="1"/><text x="28.6471%" y="607.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="28.4784%" y="613" width="0.0814%" height="15" fill="rgb(216,204,22)" fg:x="350" fg:w="1"/><text x="28.7284%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4784%" y="597" width="0.0814%" height="15" fill="rgb(214,17,3)" fg:x="350" fg:w="1"/><text x="28.7284%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4784%" y="581" width="0.0814%" height="15" fill="rgb(212,111,17)" fg:x="350" fg:w="1"/><text x="28.7284%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.5598%" y="613" width="0.0814%" height="15" fill="rgb(221,157,24)" fg:x="351" fg:w="1"/><text x="28.8098%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.5598%" y="597" width="0.0814%" height="15" fill="rgb(252,16,13)" fg:x="351" fg:w="1"/><text x="28.8098%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5598%" y="581" width="0.0814%" height="15" fill="rgb(221,62,2)" fg:x="351" fg:w="1"/><text x="28.8098%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5598%" y="565" width="0.0814%" height="15" fill="rgb(247,87,22)" fg:x="351" fg:w="1"/><text x="28.8098%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5598%" y="549" width="0.0814%" height="15" fill="rgb(215,73,9)" fg:x="351" fg:w="1"/><text x="28.8098%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5598%" y="533" width="0.0814%" height="15" fill="rgb(207,175,33)" fg:x="351" fg:w="1"/><text x="28.8098%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.5598%" y="517" width="0.0814%" height="15" fill="rgb(243,129,54)" fg:x="351" fg:w="1"/><text x="28.8098%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5598%" y="501" width="0.0814%" height="15" fill="rgb(227,119,45)" fg:x="351" fg:w="1"/><text x="28.8098%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5598%" y="485" width="0.0814%" height="15" fill="rgb(205,109,36)" fg:x="351" fg:w="1"/><text x="28.8098%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5598%" y="469" width="0.0814%" height="15" fill="rgb(205,6,39)" fg:x="351" fg:w="1"/><text x="28.8098%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5598%" y="453" width="0.0814%" height="15" fill="rgb(221,32,16)" fg:x="351" fg:w="1"/><text x="28.8098%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.63%)</title><rect x="27.0952%" y="677" width="1.6273%" height="15" fill="rgb(228,144,50)" fg:x="333" fg:w="20"/><text x="27.3452%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="28.4784%" y="661" width="0.2441%" height="15" fill="rgb(229,201,53)" fg:x="350" fg:w="3"/><text x="28.7284%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="28.4784%" y="645" width="0.2441%" height="15" fill="rgb(249,153,27)" fg:x="350" fg:w="3"/><text x="28.7284%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="28.4784%" y="629" width="0.2441%" height="15" fill="rgb(227,106,25)" fg:x="350" fg:w="3"/><text x="28.7284%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="28.6412%" y="613" width="0.0814%" height="15" fill="rgb(230,65,29)" fg:x="352" fg:w="1"/><text x="28.8912%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="28.6412%" y="597" width="0.0814%" height="15" fill="rgb(221,57,46)" fg:x="352" fg:w="1"/><text x="28.8912%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6412%" y="581" width="0.0814%" height="15" fill="rgb(229,161,17)" fg:x="352" fg:w="1"/><text x="28.8912%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="28.7225%" y="661" width="0.0814%" height="15" fill="rgb(222,213,11)" fg:x="353" fg:w="1"/><text x="28.9725%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="28.7225%" y="645" width="0.0814%" height="15" fill="rgb(235,35,13)" fg:x="353" fg:w="1"/><text x="28.9725%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.8039%" y="613" width="0.1627%" height="15" fill="rgb(233,158,34)" fg:x="354" fg:w="2"/><text x="29.0539%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.9666%" y="533" width="0.0814%" height="15" fill="rgb(215,151,48)" fg:x="356" fg:w="1"/><text x="29.2166%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.9666%" y="517" width="0.0814%" height="15" fill="rgb(229,84,14)" fg:x="356" fg:w="1"/><text x="29.2166%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9666%" y="501" width="0.0814%" height="15" fill="rgb(229,68,14)" fg:x="356" fg:w="1"/><text x="29.2166%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9666%" y="581" width="0.1627%" height="15" fill="rgb(243,106,26)" fg:x="356" fg:w="2"/><text x="29.2166%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9666%" y="565" width="0.1627%" height="15" fill="rgb(206,45,38)" fg:x="356" fg:w="2"/><text x="29.2166%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.9666%" y="549" width="0.1627%" height="15" fill="rgb(226,6,15)" fg:x="356" fg:w="2"/><text x="29.2166%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0480%" y="533" width="0.0814%" height="15" fill="rgb(232,22,54)" fg:x="357" fg:w="1"/><text x="29.2980%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0480%" y="517" width="0.0814%" height="15" fill="rgb(229,222,32)" fg:x="357" fg:w="1"/><text x="29.2980%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.0480%" y="501" width="0.0814%" height="15" fill="rgb(228,62,29)" fg:x="357" fg:w="1"/><text x="29.2980%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.0480%" y="485" width="0.0814%" height="15" fill="rgb(251,103,34)" fg:x="357" fg:w="1"/><text x="29.2980%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.0480%" y="469" width="0.0814%" height="15" fill="rgb(233,12,30)" fg:x="357" fg:w="1"/><text x="29.2980%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.0480%" y="453" width="0.0814%" height="15" fill="rgb(238,52,0)" fg:x="357" fg:w="1"/><text x="29.2980%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.0480%" y="437" width="0.0814%" height="15" fill="rgb(223,98,5)" fg:x="357" fg:w="1"/><text x="29.2980%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.0480%" y="421" width="0.0814%" height="15" fill="rgb(228,75,37)" fg:x="357" fg:w="1"/><text x="29.2980%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="29.0480%" y="405" width="0.0814%" height="15" fill="rgb(205,115,49)" fg:x="357" fg:w="1"/><text x="29.2980%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="29.0480%" y="389" width="0.0814%" height="15" fill="rgb(250,154,43)" fg:x="357" fg:w="1"/><text x="29.2980%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="29.1294%" y="453" width="0.0814%" height="15" fill="rgb(226,43,29)" fg:x="358" fg:w="1"/><text x="29.3794%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.49%)</title><rect x="28.8039%" y="629" width="0.4882%" height="15" fill="rgb(249,228,39)" fg:x="354" fg:w="6"/><text x="29.0539%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="28.9666%" y="613" width="0.3255%" height="15" fill="rgb(216,79,43)" fg:x="356" fg:w="4"/><text x="29.2166%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="28.9666%" y="597" width="0.3255%" height="15" fill="rgb(228,95,12)" fg:x="356" fg:w="4"/><text x="29.2166%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.1294%" y="581" width="0.1627%" height="15" fill="rgb(249,221,15)" fg:x="358" fg:w="2"/><text x="29.3794%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.1294%" y="565" width="0.1627%" height="15" fill="rgb(233,34,13)" fg:x="358" fg:w="2"/><text x="29.3794%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.1294%" y="549" width="0.1627%" height="15" fill="rgb(214,103,39)" fg:x="358" fg:w="2"/><text x="29.3794%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.1294%" y="533" width="0.1627%" height="15" fill="rgb(251,126,39)" fg:x="358" fg:w="2"/><text x="29.3794%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="29.1294%" y="517" width="0.1627%" height="15" fill="rgb(214,216,36)" fg:x="358" fg:w="2"/><text x="29.3794%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.1294%" y="501" width="0.1627%" height="15" fill="rgb(220,221,8)" fg:x="358" fg:w="2"/><text x="29.3794%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.1294%" y="485" width="0.1627%" height="15" fill="rgb(240,216,3)" fg:x="358" fg:w="2"/><text x="29.3794%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.1294%" y="469" width="0.1627%" height="15" fill="rgb(232,218,17)" fg:x="358" fg:w="2"/><text x="29.3794%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.2107%" y="453" width="0.0814%" height="15" fill="rgb(229,163,45)" fg:x="359" fg:w="1"/><text x="29.4607%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2921%" y="613" width="0.0814%" height="15" fill="rgb(231,110,42)" fg:x="360" fg:w="1"/><text x="29.5421%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.65%)</title><rect x="28.8039%" y="661" width="0.6509%" height="15" fill="rgb(208,170,48)" fg:x="354" fg:w="8"/><text x="29.0539%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.65%)</title><rect x="28.8039%" y="645" width="0.6509%" height="15" fill="rgb(239,116,25)" fg:x="354" fg:w="8"/><text x="29.0539%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.2921%" y="629" width="0.1627%" height="15" fill="rgb(219,200,50)" fg:x="360" fg:w="2"/><text x="29.5421%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.3735%" y="613" width="0.0814%" height="15" fill="rgb(245,200,0)" fg:x="361" fg:w="1"/><text x="29.6235%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.3735%" y="597" width="0.0814%" height="15" fill="rgb(245,119,33)" fg:x="361" fg:w="1"/><text x="29.6235%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3735%" y="581" width="0.0814%" height="15" fill="rgb(231,125,12)" fg:x="361" fg:w="1"/><text x="29.6235%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3735%" y="565" width="0.0814%" height="15" fill="rgb(216,96,41)" fg:x="361" fg:w="1"/><text x="29.6235%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3735%" y="549" width="0.0814%" height="15" fill="rgb(248,43,45)" fg:x="361" fg:w="1"/><text x="29.6235%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3735%" y="533" width="0.0814%" height="15" fill="rgb(217,222,7)" fg:x="361" fg:w="1"/><text x="29.6235%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="29.4548%" y="645" width="0.0814%" height="15" fill="rgb(233,28,6)" fg:x="362" fg:w="1"/><text x="29.7048%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.4548%" y="629" width="0.0814%" height="15" fill="rgb(231,218,15)" fg:x="362" fg:w="1"/><text x="29.7048%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4548%" y="613" width="0.0814%" height="15" fill="rgb(226,171,48)" fg:x="362" fg:w="1"/><text x="29.7048%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.4548%" y="661" width="0.1627%" height="15" fill="rgb(235,201,9)" fg:x="362" fg:w="2"/><text x="29.7048%" y="671.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="29.5362%" y="645" width="0.0814%" height="15" fill="rgb(217,80,15)" fg:x="363" fg:w="1"/><text x="29.7862%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.5362%" y="629" width="0.0814%" height="15" fill="rgb(219,152,8)" fg:x="363" fg:w="1"/><text x="29.7862%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6176%" y="533" width="0.0814%" height="15" fill="rgb(243,107,38)" fg:x="364" fg:w="1"/><text x="29.8676%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6176%" y="517" width="0.0814%" height="15" fill="rgb(231,17,5)" fg:x="364" fg:w="1"/><text x="29.8676%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.6176%" y="565" width="0.1627%" height="15" fill="rgb(209,25,54)" fg:x="364" fg:w="2"/><text x="29.8676%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.6176%" y="549" width="0.1627%" height="15" fill="rgb(219,0,2)" fg:x="364" fg:w="2"/><text x="29.8676%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6989%" y="533" width="0.0814%" height="15" fill="rgb(246,9,5)" fg:x="365" fg:w="1"/><text x="29.9489%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7803%" y="565" width="0.0814%" height="15" fill="rgb(226,159,4)" fg:x="366" fg:w="1"/><text x="30.0303%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="29.6176%" y="613" width="0.4068%" height="15" fill="rgb(219,175,34)" fg:x="364" fg:w="5"/><text x="29.8676%" y="623.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="29.6176%" y="597" width="0.4068%" height="15" fill="rgb(236,10,46)" fg:x="364" fg:w="5"/><text x="29.8676%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="29.6176%" y="581" width="0.4068%" height="15" fill="rgb(240,211,16)" fg:x="364" fg:w="5"/><text x="29.8676%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.8617%" y="565" width="0.1627%" height="15" fill="rgb(205,3,43)" fg:x="367" fg:w="2"/><text x="30.1117%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.8617%" y="549" width="0.1627%" height="15" fill="rgb(245,7,22)" fg:x="367" fg:w="2"/><text x="30.1117%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="29.8617%" y="533" width="0.1627%" height="15" fill="rgb(239,132,32)" fg:x="367" fg:w="2"/><text x="30.1117%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9430%" y="517" width="0.0814%" height="15" fill="rgb(228,202,34)" fg:x="368" fg:w="1"/><text x="30.1930%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.9430%" y="501" width="0.0814%" height="15" fill="rgb(254,200,22)" fg:x="368" fg:w="1"/><text x="30.1930%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9430%" y="485" width="0.0814%" height="15" fill="rgb(219,10,39)" fg:x="368" fg:w="1"/><text x="30.1930%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9430%" y="469" width="0.0814%" height="15" fill="rgb(226,210,39)" fg:x="368" fg:w="1"/><text x="30.1930%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9430%" y="453" width="0.0814%" height="15" fill="rgb(208,219,16)" fg:x="368" fg:w="1"/><text x="30.1930%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.9430%" y="437" width="0.0814%" height="15" fill="rgb(216,158,51)" fg:x="368" fg:w="1"/><text x="30.1930%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9430%" y="421" width="0.0814%" height="15" fill="rgb(233,14,44)" fg:x="368" fg:w="1"/><text x="30.1930%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0244%" y="565" width="0.0814%" height="15" fill="rgb(237,97,39)" fg:x="369" fg:w="1"/><text x="30.2744%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0244%" y="549" width="0.0814%" height="15" fill="rgb(218,198,43)" fg:x="369" fg:w="1"/><text x="30.2744%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0244%" y="533" width="0.0814%" height="15" fill="rgb(231,104,20)" fg:x="369" fg:w="1"/><text x="30.2744%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0244%" y="517" width="0.0814%" height="15" fill="rgb(254,36,13)" fg:x="369" fg:w="1"/><text x="30.2744%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1058%" y="565" width="0.0814%" height="15" fill="rgb(248,14,50)" fg:x="370" fg:w="1"/><text x="30.3558%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.1058%" y="549" width="0.0814%" height="15" fill="rgb(217,107,29)" fg:x="370" fg:w="1"/><text x="30.3558%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1058%" y="533" width="0.0814%" height="15" fill="rgb(251,169,33)" fg:x="370" fg:w="1"/><text x="30.3558%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1058%" y="517" width="0.0814%" height="15" fill="rgb(217,108,32)" fg:x="370" fg:w="1"/><text x="30.3558%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.1058%" y="501" width="0.0814%" height="15" fill="rgb(219,66,42)" fg:x="370" fg:w="1"/><text x="30.3558%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1058%" y="485" width="0.0814%" height="15" fill="rgb(206,180,7)" fg:x="370" fg:w="1"/><text x="30.3558%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3499%" y="437" width="0.0814%" height="15" fill="rgb(208,226,31)" fg:x="373" fg:w="1"/><text x="30.5999%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.2685%" y="469" width="0.2441%" height="15" fill="rgb(218,26,49)" fg:x="372" fg:w="3"/><text x="30.5185%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.2685%" y="453" width="0.2441%" height="15" fill="rgb(233,197,48)" fg:x="372" fg:w="3"/><text x="30.5185%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.4312%" y="437" width="0.0814%" height="15" fill="rgb(252,181,51)" fg:x="374" fg:w="1"/><text x="30.6812%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.98%)</title><rect x="29.6176%" y="661" width="0.9764%" height="15" fill="rgb(253,90,19)" fg:x="364" fg:w="12"/><text x="29.8676%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (12 samples, 0.98%)</title><rect x="29.6176%" y="645" width="0.9764%" height="15" fill="rgb(215,171,30)" fg:x="364" fg:w="12"/><text x="29.8676%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.98%)</title><rect x="29.6176%" y="629" width="0.9764%" height="15" fill="rgb(214,222,9)" fg:x="364" fg:w="12"/><text x="29.8676%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.57%)</title><rect x="30.0244%" y="613" width="0.5696%" height="15" fill="rgb(223,3,22)" fg:x="369" fg:w="7"/><text x="30.2744%" y="623.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="30.0244%" y="597" width="0.5696%" height="15" fill="rgb(225,196,46)" fg:x="369" fg:w="7"/><text x="30.2744%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="30.0244%" y="581" width="0.5696%" height="15" fill="rgb(209,110,37)" fg:x="369" fg:w="7"/><text x="30.2744%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="30.1871%" y="565" width="0.4068%" height="15" fill="rgb(249,89,12)" fg:x="371" fg:w="5"/><text x="30.4371%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="30.1871%" y="549" width="0.4068%" height="15" fill="rgb(226,27,33)" fg:x="371" fg:w="5"/><text x="30.4371%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="30.2685%" y="533" width="0.3255%" height="15" fill="rgb(213,82,22)" fg:x="372" fg:w="4"/><text x="30.5185%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="30.2685%" y="517" width="0.3255%" height="15" fill="rgb(248,140,0)" fg:x="372" fg:w="4"/><text x="30.5185%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="30.2685%" y="501" width="0.3255%" height="15" fill="rgb(228,106,3)" fg:x="372" fg:w="4"/><text x="30.5185%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="30.2685%" y="485" width="0.3255%" height="15" fill="rgb(209,23,37)" fg:x="372" fg:w="4"/><text x="30.5185%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="30.5126%" y="469" width="0.0814%" height="15" fill="rgb(241,93,50)" fg:x="375" fg:w="1"/><text x="30.7626%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="30.5940%" y="645" width="0.0814%" height="15" fill="rgb(253,46,43)" fg:x="376" fg:w="1"/><text x="30.8440%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (46 samples, 3.74%)</title><rect x="27.0138%" y="693" width="3.7429%" height="15" fill="rgb(226,206,43)" fg:x="332" fg:w="46"/><text x="27.2638%" y="703.50">plug..</text></g><g><title>plugins_core::tools::set_container (25 samples, 2.03%)</title><rect x="28.7225%" y="677" width="2.0342%" height="15" fill="rgb(217,54,7)" fg:x="353" fg:w="25"/><text x="28.9725%" y="687.50">p..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="30.5940%" y="661" width="0.1627%" height="15" fill="rgb(223,5,52)" fg:x="376" fg:w="2"/><text x="30.8440%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.6753%" y="645" width="0.0814%" height="15" fill="rgb(206,52,46)" fg:x="377" fg:w="1"/><text x="30.9253%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6753%" y="629" width="0.0814%" height="15" fill="rgb(253,136,11)" fg:x="377" fg:w="1"/><text x="30.9253%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.7567%" y="661" width="0.1627%" height="15" fill="rgb(208,106,33)" fg:x="378" fg:w="2"/><text x="31.0067%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="30.7567%" y="645" width="0.1627%" height="15" fill="rgb(206,54,4)" fg:x="378" fg:w="2"/><text x="31.0067%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="30.7567%" y="629" width="0.1627%" height="15" fill="rgb(213,3,15)" fg:x="378" fg:w="2"/><text x="31.0067%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8381%" y="613" width="0.0814%" height="15" fill="rgb(252,211,39)" fg:x="379" fg:w="1"/><text x="31.0881%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8381%" y="597" width="0.0814%" height="15" fill="rgb(223,6,36)" fg:x="379" fg:w="1"/><text x="31.0881%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8381%" y="581" width="0.0814%" height="15" fill="rgb(252,169,45)" fg:x="379" fg:w="1"/><text x="31.0881%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8381%" y="565" width="0.0814%" height="15" fill="rgb(212,48,26)" fg:x="379" fg:w="1"/><text x="31.0881%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8381%" y="549" width="0.0814%" height="15" fill="rgb(251,102,48)" fg:x="379" fg:w="1"/><text x="31.0881%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8381%" y="533" width="0.0814%" height="15" fill="rgb(243,208,16)" fg:x="379" fg:w="1"/><text x="31.0881%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8381%" y="517" width="0.0814%" height="15" fill="rgb(219,96,24)" fg:x="379" fg:w="1"/><text x="31.0881%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8381%" y="501" width="0.0814%" height="15" fill="rgb(219,33,29)" fg:x="379" fg:w="1"/><text x="31.0881%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8381%" y="485" width="0.0814%" height="15" fill="rgb(223,176,5)" fg:x="379" fg:w="1"/><text x="31.0881%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8381%" y="469" width="0.0814%" height="15" fill="rgb(228,140,14)" fg:x="379" fg:w="1"/><text x="31.0881%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8381%" y="453" width="0.0814%" height="15" fill="rgb(217,179,31)" fg:x="379" fg:w="1"/><text x="31.0881%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8381%" y="437" width="0.0814%" height="15" fill="rgb(230,9,30)" fg:x="379" fg:w="1"/><text x="31.0881%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9194%" y="613" width="0.0814%" height="15" fill="rgb(230,136,20)" fg:x="380" fg:w="1"/><text x="31.1694%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9194%" y="597" width="0.0814%" height="15" fill="rgb(215,210,22)" fg:x="380" fg:w="1"/><text x="31.1694%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9194%" y="581" width="0.0814%" height="15" fill="rgb(218,43,5)" fg:x="380" fg:w="1"/><text x="31.1694%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.9194%" y="565" width="0.0814%" height="15" fill="rgb(216,11,5)" fg:x="380" fg:w="1"/><text x="31.1694%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.9194%" y="549" width="0.0814%" height="15" fill="rgb(209,82,29)" fg:x="380" fg:w="1"/><text x="31.1694%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.9194%" y="533" width="0.0814%" height="15" fill="rgb(244,115,12)" fg:x="380" fg:w="1"/><text x="31.1694%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.9194%" y="517" width="0.0814%" height="15" fill="rgb(222,82,18)" fg:x="380" fg:w="1"/><text x="31.1694%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.9194%" y="501" width="0.0814%" height="15" fill="rgb(249,227,8)" fg:x="380" fg:w="1"/><text x="31.1694%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="30.7567%" y="693" width="0.3255%" height="15" fill="rgb(253,141,45)" fg:x="378" fg:w="4"/><text x="31.0067%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="30.7567%" y="677" width="0.3255%" height="15" fill="rgb(234,184,4)" fg:x="378" fg:w="4"/><text x="31.0067%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.9194%" y="661" width="0.1627%" height="15" fill="rgb(218,194,23)" fg:x="380" fg:w="2"/><text x="31.1694%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.9194%" y="645" width="0.1627%" height="15" fill="rgb(235,66,41)" fg:x="380" fg:w="2"/><text x="31.1694%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.9194%" y="629" width="0.1627%" height="15" fill="rgb(245,217,1)" fg:x="380" fg:w="2"/><text x="31.1694%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0008%" y="613" width="0.0814%" height="15" fill="rgb(229,91,1)" fg:x="381" fg:w="1"/><text x="31.2508%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0008%" y="597" width="0.0814%" height="15" fill="rgb(207,101,30)" fg:x="381" fg:w="1"/><text x="31.2508%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0008%" y="581" width="0.0814%" height="15" fill="rgb(223,82,49)" fg:x="381" fg:w="1"/><text x="31.2508%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0008%" y="565" width="0.0814%" height="15" fill="rgb(218,167,17)" fg:x="381" fg:w="1"/><text x="31.2508%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.0008%" y="549" width="0.0814%" height="15" fill="rgb(208,103,14)" fg:x="381" fg:w="1"/><text x="31.2508%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0008%" y="533" width="0.0814%" height="15" fill="rgb(238,20,8)" fg:x="381" fg:w="1"/><text x="31.2508%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0008%" y="517" width="0.0814%" height="15" fill="rgb(218,80,54)" fg:x="381" fg:w="1"/><text x="31.2508%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0008%" y="501" width="0.0814%" height="15" fill="rgb(240,144,17)" fg:x="381" fg:w="1"/><text x="31.2508%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.0822%" y="661" width="0.0814%" height="15" fill="rgb(245,27,50)" fg:x="382" fg:w="1"/><text x="31.3322%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0822%" y="645" width="0.0814%" height="15" fill="rgb(251,51,7)" fg:x="382" fg:w="1"/><text x="31.3322%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.0822%" y="629" width="0.0814%" height="15" fill="rgb(245,217,29)" fg:x="382" fg:w="1"/><text x="31.3322%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1635%" y="629" width="0.1627%" height="15" fill="rgb(221,176,29)" fg:x="383" fg:w="2"/><text x="31.4135%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1635%" y="613" width="0.1627%" height="15" fill="rgb(212,180,24)" fg:x="383" fg:w="2"/><text x="31.4135%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2449%" y="597" width="0.0814%" height="15" fill="rgb(254,24,2)" fg:x="384" fg:w="1"/><text x="31.4949%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (5 samples, 0.41%)</title><rect x="31.0822%" y="693" width="0.4068%" height="15" fill="rgb(230,100,2)" fg:x="382" fg:w="5"/><text x="31.3322%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.41%)</title><rect x="31.0822%" y="677" width="0.4068%" height="15" fill="rgb(219,142,25)" fg:x="382" fg:w="5"/><text x="31.3322%" y="687.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="31.1635%" y="661" width="0.3255%" height="15" fill="rgb(240,73,43)" fg:x="383" fg:w="4"/><text x="31.4135%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="31.1635%" y="645" width="0.3255%" height="15" fill="rgb(214,114,15)" fg:x="383" fg:w="4"/><text x="31.4135%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="31.3263%" y="629" width="0.1627%" height="15" fill="rgb(207,130,4)" fg:x="385" fg:w="2"/><text x="31.5763%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.3263%" y="613" width="0.1627%" height="15" fill="rgb(221,25,40)" fg:x="385" fg:w="2"/><text x="31.5763%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="31.3263%" y="597" width="0.1627%" height="15" fill="rgb(241,184,7)" fg:x="385" fg:w="2"/><text x="31.5763%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.3263%" y="581" width="0.1627%" height="15" fill="rgb(235,159,4)" fg:x="385" fg:w="2"/><text x="31.5763%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="31.3263%" y="565" width="0.1627%" height="15" fill="rgb(214,87,48)" fg:x="385" fg:w="2"/><text x="31.5763%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.4076%" y="549" width="0.0814%" height="15" fill="rgb(246,198,24)" fg:x="386" fg:w="1"/><text x="31.6576%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.4076%" y="533" width="0.0814%" height="15" fill="rgb(209,66,40)" fg:x="386" fg:w="1"/><text x="31.6576%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="31.4076%" y="517" width="0.0814%" height="15" fill="rgb(233,147,39)" fg:x="386" fg:w="1"/><text x="31.6576%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="31.5704%" y="645" width="0.0814%" height="15" fill="rgb(231,145,52)" fg:x="388" fg:w="1"/><text x="31.8204%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="31.5704%" y="661" width="0.1627%" height="15" fill="rgb(206,20,26)" fg:x="388" fg:w="2"/><text x="31.8204%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.6517%" y="645" width="0.0814%" height="15" fill="rgb(238,220,4)" fg:x="389" fg:w="1"/><text x="31.9017%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.6517%" y="629" width="0.0814%" height="15" fill="rgb(252,195,42)" fg:x="389" fg:w="1"/><text x="31.9017%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="613" width="0.0814%" height="15" fill="rgb(209,10,6)" fg:x="389" fg:w="1"/><text x="31.9017%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6517%" y="597" width="0.0814%" height="15" fill="rgb(229,3,52)" fg:x="389" fg:w="1"/><text x="31.9017%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="581" width="0.0814%" height="15" fill="rgb(253,49,37)" fg:x="389" fg:w="1"/><text x="31.9017%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="565" width="0.0814%" height="15" fill="rgb(240,103,49)" fg:x="389" fg:w="1"/><text x="31.9017%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="549" width="0.0814%" height="15" fill="rgb(250,182,30)" fg:x="389" fg:w="1"/><text x="31.9017%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6517%" y="533" width="0.0814%" height="15" fill="rgb(248,8,30)" fg:x="389" fg:w="1"/><text x="31.9017%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="517" width="0.0814%" height="15" fill="rgb(237,120,30)" fg:x="389" fg:w="1"/><text x="31.9017%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="501" width="0.0814%" height="15" fill="rgb(221,146,34)" fg:x="389" fg:w="1"/><text x="31.9017%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="485" width="0.0814%" height="15" fill="rgb(242,55,13)" fg:x="389" fg:w="1"/><text x="31.9017%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6517%" y="469" width="0.0814%" height="15" fill="rgb(242,112,31)" fg:x="389" fg:w="1"/><text x="31.9017%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="453" width="0.0814%" height="15" fill="rgb(249,192,27)" fg:x="389" fg:w="1"/><text x="31.9017%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="437" width="0.0814%" height="15" fill="rgb(208,204,44)" fg:x="389" fg:w="1"/><text x="31.9017%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6517%" y="421" width="0.0814%" height="15" fill="rgb(208,93,54)" fg:x="389" fg:w="1"/><text x="31.9017%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7331%" y="645" width="0.0814%" height="15" fill="rgb(242,1,31)" fg:x="390" fg:w="1"/><text x="31.9831%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8145%" y="565" width="0.0814%" height="15" fill="rgb(241,83,25)" fg:x="391" fg:w="1"/><text x="32.0645%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8145%" y="549" width="0.0814%" height="15" fill="rgb(205,169,50)" fg:x="391" fg:w="1"/><text x="32.0645%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8145%" y="533" width="0.0814%" height="15" fill="rgb(239,186,37)" fg:x="391" fg:w="1"/><text x="32.0645%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8145%" y="517" width="0.0814%" height="15" fill="rgb(205,221,10)" fg:x="391" fg:w="1"/><text x="32.0645%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.8145%" y="501" width="0.0814%" height="15" fill="rgb(218,196,15)" fg:x="391" fg:w="1"/><text x="32.0645%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.8145%" y="485" width="0.0814%" height="15" fill="rgb(218,196,35)" fg:x="391" fg:w="1"/><text x="32.0645%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.8145%" y="469" width="0.0814%" height="15" fill="rgb(233,63,24)" fg:x="391" fg:w="1"/><text x="32.0645%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.8145%" y="453" width="0.0814%" height="15" fill="rgb(225,8,4)" fg:x="391" fg:w="1"/><text x="32.0645%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.8145%" y="437" width="0.0814%" height="15" fill="rgb(234,105,35)" fg:x="391" fg:w="1"/><text x="32.0645%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.8145%" y="421" width="0.0814%" height="15" fill="rgb(236,21,32)" fg:x="391" fg:w="1"/><text x="32.0645%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.8145%" y="405" width="0.0814%" height="15" fill="rgb(228,109,6)" fg:x="391" fg:w="1"/><text x="32.0645%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.8145%" y="389" width="0.0814%" height="15" fill="rgb(229,215,31)" fg:x="391" fg:w="1"/><text x="32.0645%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.8145%" y="373" width="0.0814%" height="15" fill="rgb(221,52,54)" fg:x="391" fg:w="1"/><text x="32.0645%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8145%" y="357" width="0.0814%" height="15" fill="rgb(252,129,43)" fg:x="391" fg:w="1"/><text x="32.0645%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="31.7331%" y="661" width="0.2441%" height="15" fill="rgb(248,183,27)" fg:x="390" fg:w="3"/><text x="31.9831%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="31.8145%" y="645" width="0.1627%" height="15" fill="rgb(250,0,22)" fg:x="391" fg:w="2"/><text x="32.0645%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.8145%" y="629" width="0.1627%" height="15" fill="rgb(213,166,10)" fg:x="391" fg:w="2"/><text x="32.0645%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8145%" y="613" width="0.1627%" height="15" fill="rgb(207,163,36)" fg:x="391" fg:w="2"/><text x="32.0645%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8145%" y="597" width="0.1627%" height="15" fill="rgb(208,122,22)" fg:x="391" fg:w="2"/><text x="32.0645%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.8145%" y="581" width="0.1627%" height="15" fill="rgb(207,104,49)" fg:x="391" fg:w="2"/><text x="32.0645%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8959%" y="565" width="0.0814%" height="15" fill="rgb(248,211,50)" fg:x="392" fg:w="1"/><text x="32.1459%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="31.9772%" y="645" width="0.0814%" height="15" fill="rgb(217,13,45)" fg:x="393" fg:w="1"/><text x="32.2272%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="31.9772%" y="629" width="0.0814%" height="15" fill="rgb(211,216,49)" fg:x="393" fg:w="1"/><text x="32.2272%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9772%" y="613" width="0.0814%" height="15" fill="rgb(221,58,53)" fg:x="393" fg:w="1"/><text x="32.2272%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0586%" y="613" width="0.0814%" height="15" fill="rgb(220,112,41)" fg:x="394" fg:w="1"/><text x="32.3086%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0586%" y="597" width="0.0814%" height="15" fill="rgb(236,38,28)" fg:x="394" fg:w="1"/><text x="32.3086%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.0586%" y="581" width="0.0814%" height="15" fill="rgb(227,195,22)" fg:x="394" fg:w="1"/><text x="32.3086%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="31.9772%" y="661" width="0.2441%" height="15" fill="rgb(214,55,33)" fg:x="393" fg:w="3"/><text x="32.2272%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="32.0586%" y="645" width="0.1627%" height="15" fill="rgb(248,80,13)" fg:x="394" fg:w="2"/><text x="32.3086%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.0586%" y="629" width="0.1627%" height="15" fill="rgb(238,52,6)" fg:x="394" fg:w="2"/><text x="32.3086%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1400%" y="613" width="0.0814%" height="15" fill="rgb(224,198,47)" fg:x="395" fg:w="1"/><text x="32.3900%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1400%" y="597" width="0.0814%" height="15" fill="rgb(233,171,20)" fg:x="395" fg:w="1"/><text x="32.3900%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1400%" y="581" width="0.0814%" height="15" fill="rgb(241,30,25)" fg:x="395" fg:w="1"/><text x="32.3900%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1400%" y="565" width="0.0814%" height="15" fill="rgb(207,171,38)" fg:x="395" fg:w="1"/><text x="32.3900%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.1400%" y="549" width="0.0814%" height="15" fill="rgb(234,70,1)" fg:x="395" fg:w="1"/><text x="32.3900%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.1400%" y="533" width="0.0814%" height="15" fill="rgb(232,178,18)" fg:x="395" fg:w="1"/><text x="32.3900%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2213%" y="629" width="0.0814%" height="15" fill="rgb(241,78,40)" fg:x="396" fg:w="1"/><text x="32.4713%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2213%" y="613" width="0.0814%" height="15" fill="rgb(222,35,25)" fg:x="396" fg:w="1"/><text x="32.4713%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2213%" y="597" width="0.0814%" height="15" fill="rgb(207,92,16)" fg:x="396" fg:w="1"/><text x="32.4713%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2213%" y="581" width="0.0814%" height="15" fill="rgb(216,59,51)" fg:x="396" fg:w="1"/><text x="32.4713%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2213%" y="565" width="0.0814%" height="15" fill="rgb(213,80,28)" fg:x="396" fg:w="1"/><text x="32.4713%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2213%" y="549" width="0.0814%" height="15" fill="rgb(220,93,7)" fg:x="396" fg:w="1"/><text x="32.4713%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2213%" y="533" width="0.0814%" height="15" fill="rgb(225,24,44)" fg:x="396" fg:w="1"/><text x="32.4713%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2213%" y="517" width="0.0814%" height="15" fill="rgb(243,74,40)" fg:x="396" fg:w="1"/><text x="32.4713%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2213%" y="501" width="0.0814%" height="15" fill="rgb(228,39,7)" fg:x="396" fg:w="1"/><text x="32.4713%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2213%" y="485" width="0.0814%" height="15" fill="rgb(227,79,8)" fg:x="396" fg:w="1"/><text x="32.4713%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2213%" y="469" width="0.0814%" height="15" fill="rgb(236,58,11)" fg:x="396" fg:w="1"/><text x="32.4713%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2213%" y="453" width="0.0814%" height="15" fill="rgb(249,63,35)" fg:x="396" fg:w="1"/><text x="32.4713%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3027%" y="501" width="0.0814%" height="15" fill="rgb(252,114,16)" fg:x="397" fg:w="1"/><text x="32.5527%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3027%" y="485" width="0.0814%" height="15" fill="rgb(254,151,24)" fg:x="397" fg:w="1"/><text x="32.5527%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3027%" y="469" width="0.0814%" height="15" fill="rgb(253,54,39)" fg:x="397" fg:w="1"/><text x="32.5527%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3027%" y="453" width="0.0814%" height="15" fill="rgb(243,25,45)" fg:x="397" fg:w="1"/><text x="32.5527%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3027%" y="437" width="0.0814%" height="15" fill="rgb(234,134,9)" fg:x="397" fg:w="1"/><text x="32.5527%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3027%" y="421" width="0.0814%" height="15" fill="rgb(227,166,31)" fg:x="397" fg:w="1"/><text x="32.5527%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3027%" y="405" width="0.0814%" height="15" fill="rgb(245,143,41)" fg:x="397" fg:w="1"/><text x="32.5527%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.3027%" y="389" width="0.0814%" height="15" fill="rgb(238,181,32)" fg:x="397" fg:w="1"/><text x="32.5527%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.3027%" y="373" width="0.0814%" height="15" fill="rgb(224,113,18)" fg:x="397" fg:w="1"/><text x="32.5527%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.3027%" y="357" width="0.0814%" height="15" fill="rgb(240,229,28)" fg:x="397" fg:w="1"/><text x="32.5527%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.3027%" y="341" width="0.0814%" height="15" fill="rgb(250,185,3)" fg:x="397" fg:w="1"/><text x="32.5527%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3027%" y="325" width="0.0814%" height="15" fill="rgb(212,59,25)" fg:x="397" fg:w="1"/><text x="32.5527%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3841%" y="501" width="0.0814%" height="15" fill="rgb(221,87,20)" fg:x="398" fg:w="1"/><text x="32.6341%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="32.3027%" y="613" width="0.2441%" height="15" fill="rgb(213,74,28)" fg:x="397" fg:w="3"/><text x="32.5527%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.3027%" y="597" width="0.2441%" height="15" fill="rgb(224,132,34)" fg:x="397" fg:w="3"/><text x="32.5527%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3027%" y="581" width="0.2441%" height="15" fill="rgb(222,101,24)" fg:x="397" fg:w="3"/><text x="32.5527%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3027%" y="565" width="0.2441%" height="15" fill="rgb(254,142,4)" fg:x="397" fg:w="3"/><text x="32.5527%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3027%" y="549" width="0.2441%" height="15" fill="rgb(230,229,49)" fg:x="397" fg:w="3"/><text x="32.5527%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3027%" y="533" width="0.2441%" height="15" fill="rgb(238,70,47)" fg:x="397" fg:w="3"/><text x="32.5527%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3027%" y="517" width="0.2441%" height="15" fill="rgb(231,160,17)" fg:x="397" fg:w="3"/><text x="32.5527%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4654%" y="501" width="0.0814%" height="15" fill="rgb(218,68,53)" fg:x="399" fg:w="1"/><text x="32.7154%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5468%" y="533" width="0.0814%" height="15" fill="rgb(236,111,10)" fg:x="400" fg:w="1"/><text x="32.7968%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5468%" y="517" width="0.0814%" height="15" fill="rgb(224,34,41)" fg:x="400" fg:w="1"/><text x="32.7968%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5468%" y="501" width="0.0814%" height="15" fill="rgb(241,118,19)" fg:x="400" fg:w="1"/><text x="32.7968%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5468%" y="485" width="0.0814%" height="15" fill="rgb(238,129,25)" fg:x="400" fg:w="1"/><text x="32.7968%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.5468%" y="469" width="0.0814%" height="15" fill="rgb(238,22,31)" fg:x="400" fg:w="1"/><text x="32.7968%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.5468%" y="453" width="0.0814%" height="15" fill="rgb(222,174,48)" fg:x="400" fg:w="1"/><text x="32.7968%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.5468%" y="437" width="0.0814%" height="15" fill="rgb(206,152,40)" fg:x="400" fg:w="1"/><text x="32.7968%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5468%" y="421" width="0.0814%" height="15" fill="rgb(218,99,54)" fg:x="400" fg:w="1"/><text x="32.7968%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5468%" y="405" width="0.0814%" height="15" fill="rgb(220,174,26)" fg:x="400" fg:w="1"/><text x="32.7968%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.5468%" y="389" width="0.0814%" height="15" fill="rgb(245,116,9)" fg:x="400" fg:w="1"/><text x="32.7968%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.5468%" y="373" width="0.0814%" height="15" fill="rgb(209,72,35)" fg:x="400" fg:w="1"/><text x="32.7968%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.5468%" y="357" width="0.0814%" height="15" fill="rgb(226,126,21)" fg:x="400" fg:w="1"/><text x="32.7968%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.5468%" y="341" width="0.0814%" height="15" fill="rgb(227,192,1)" fg:x="400" fg:w="1"/><text x="32.7968%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="32.5468%" y="325" width="0.0814%" height="15" fill="rgb(237,180,29)" fg:x="400" fg:w="1"/><text x="32.7968%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="32.5468%" y="309" width="0.0814%" height="15" fill="rgb(230,197,35)" fg:x="400" fg:w="1"/><text x="32.7968%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.14%)</title><rect x="31.5704%" y="677" width="1.1391%" height="15" fill="rgb(246,193,31)" fg:x="388" fg:w="14"/><text x="31.8204%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="32.2213%" y="661" width="0.4882%" height="15" fill="rgb(241,36,4)" fg:x="396" fg:w="6"/><text x="32.4713%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.49%)</title><rect x="32.2213%" y="645" width="0.4882%" height="15" fill="rgb(241,130,17)" fg:x="396" fg:w="6"/><text x="32.4713%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.41%)</title><rect x="32.3027%" y="629" width="0.4068%" height="15" fill="rgb(206,137,32)" fg:x="397" fg:w="5"/><text x="32.5527%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="32.5468%" y="613" width="0.1627%" height="15" fill="rgb(237,228,51)" fg:x="400" fg:w="2"/><text x="32.7968%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="32.5468%" y="597" width="0.1627%" height="15" fill="rgb(243,6,42)" fg:x="400" fg:w="2"/><text x="32.7968%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5468%" y="581" width="0.1627%" height="15" fill="rgb(251,74,28)" fg:x="400" fg:w="2"/><text x="32.7968%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5468%" y="565" width="0.1627%" height="15" fill="rgb(218,20,49)" fg:x="400" fg:w="2"/><text x="32.7968%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5468%" y="549" width="0.1627%" height="15" fill="rgb(238,28,14)" fg:x="400" fg:w="2"/><text x="32.7968%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.6282%" y="533" width="0.0814%" height="15" fill="rgb(229,40,46)" fg:x="401" fg:w="1"/><text x="32.8782%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="32.7095%" y="677" width="0.0814%" height="15" fill="rgb(244,195,20)" fg:x="402" fg:w="1"/><text x="32.9595%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.7095%" y="661" width="0.0814%" height="15" fill="rgb(253,56,35)" fg:x="402" fg:w="1"/><text x="32.9595%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="32.7909%" y="661" width="0.0814%" height="15" fill="rgb(210,149,44)" fg:x="403" fg:w="1"/><text x="33.0409%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.7909%" y="645" width="0.0814%" height="15" fill="rgb(240,135,12)" fg:x="403" fg:w="1"/><text x="33.0409%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.8723%" y="629" width="0.1627%" height="15" fill="rgb(251,24,50)" fg:x="404" fg:w="2"/><text x="33.1223%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="32.8723%" y="613" width="0.1627%" height="15" fill="rgb(243,200,47)" fg:x="404" fg:w="2"/><text x="33.1223%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.8723%" y="597" width="0.1627%" height="15" fill="rgb(224,166,26)" fg:x="404" fg:w="2"/><text x="33.1223%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8723%" y="581" width="0.1627%" height="15" fill="rgb(233,0,47)" fg:x="404" fg:w="2"/><text x="33.1223%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8723%" y="565" width="0.1627%" height="15" fill="rgb(253,80,5)" fg:x="404" fg:w="2"/><text x="33.1223%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8723%" y="549" width="0.1627%" height="15" fill="rgb(214,133,25)" fg:x="404" fg:w="2"/><text x="33.1223%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8723%" y="533" width="0.1627%" height="15" fill="rgb(209,27,14)" fg:x="404" fg:w="2"/><text x="33.1223%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.8723%" y="517" width="0.1627%" height="15" fill="rgb(219,102,51)" fg:x="404" fg:w="2"/><text x="33.1223%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8723%" y="501" width="0.1627%" height="15" fill="rgb(237,18,16)" fg:x="404" fg:w="2"/><text x="33.1223%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8723%" y="485" width="0.1627%" height="15" fill="rgb(241,85,17)" fg:x="404" fg:w="2"/><text x="33.1223%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8723%" y="469" width="0.1627%" height="15" fill="rgb(236,90,42)" fg:x="404" fg:w="2"/><text x="33.1223%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9536%" y="453" width="0.0814%" height="15" fill="rgb(249,57,21)" fg:x="405" fg:w="1"/><text x="33.2036%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9536%" y="437" width="0.0814%" height="15" fill="rgb(243,12,36)" fg:x="405" fg:w="1"/><text x="33.2036%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="33.0350%" y="613" width="0.0814%" height="15" fill="rgb(253,128,47)" fg:x="406" fg:w="1"/><text x="33.2850%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.1977%" y="581" width="0.1627%" height="15" fill="rgb(207,33,20)" fg:x="408" fg:w="2"/><text x="33.4477%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.1977%" y="565" width="0.1627%" height="15" fill="rgb(233,215,35)" fg:x="408" fg:w="2"/><text x="33.4477%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.1977%" y="549" width="0.1627%" height="15" fill="rgb(249,188,52)" fg:x="408" fg:w="2"/><text x="33.4477%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.1977%" y="533" width="0.1627%" height="15" fill="rgb(225,12,32)" fg:x="408" fg:w="2"/><text x="33.4477%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.2791%" y="517" width="0.0814%" height="15" fill="rgb(247,98,14)" fg:x="409" fg:w="1"/><text x="33.5291%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.57%)</title><rect x="32.8723%" y="661" width="0.5696%" height="15" fill="rgb(247,219,48)" fg:x="404" fg:w="7"/><text x="33.1223%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.57%)</title><rect x="32.8723%" y="645" width="0.5696%" height="15" fill="rgb(253,60,48)" fg:x="404" fg:w="7"/><text x="33.1223%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="33.0350%" y="629" width="0.4068%" height="15" fill="rgb(245,15,52)" fg:x="406" fg:w="5"/><text x="33.2850%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="33.1164%" y="613" width="0.3255%" height="15" fill="rgb(220,133,28)" fg:x="407" fg:w="4"/><text x="33.3664%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="33.1164%" y="597" width="0.3255%" height="15" fill="rgb(217,180,4)" fg:x="407" fg:w="4"/><text x="33.3664%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3605%" y="581" width="0.0814%" height="15" fill="rgb(251,24,1)" fg:x="410" fg:w="1"/><text x="33.6105%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3605%" y="565" width="0.0814%" height="15" fill="rgb(212,185,49)" fg:x="410" fg:w="1"/><text x="33.6105%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3605%" y="549" width="0.0814%" height="15" fill="rgb(215,175,22)" fg:x="410" fg:w="1"/><text x="33.6105%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3605%" y="533" width="0.0814%" height="15" fill="rgb(250,205,14)" fg:x="410" fg:w="1"/><text x="33.6105%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.3605%" y="517" width="0.0814%" height="15" fill="rgb(225,211,22)" fg:x="410" fg:w="1"/><text x="33.6105%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3605%" y="501" width="0.0814%" height="15" fill="rgb(251,179,42)" fg:x="410" fg:w="1"/><text x="33.6105%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3605%" y="485" width="0.0814%" height="15" fill="rgb(208,216,51)" fg:x="410" fg:w="1"/><text x="33.6105%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.3605%" y="469" width="0.0814%" height="15" fill="rgb(235,36,11)" fg:x="410" fg:w="1"/><text x="33.6105%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.4418%" y="661" width="0.0814%" height="15" fill="rgb(213,189,28)" fg:x="411" fg:w="1"/><text x="33.6918%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.6046%" y="645" width="0.0814%" height="15" fill="rgb(227,203,42)" fg:x="413" fg:w="1"/><text x="33.8546%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="33.5232%" y="661" width="0.2441%" height="15" fill="rgb(244,72,36)" fg:x="412" fg:w="3"/><text x="33.7732%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6859%" y="645" width="0.0814%" height="15" fill="rgb(213,53,17)" fg:x="414" fg:w="1"/><text x="33.9359%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.6859%" y="629" width="0.0814%" height="15" fill="rgb(207,167,3)" fg:x="414" fg:w="1"/><text x="33.9359%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6859%" y="613" width="0.0814%" height="15" fill="rgb(216,98,30)" fg:x="414" fg:w="1"/><text x="33.9359%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.6859%" y="597" width="0.0814%" height="15" fill="rgb(236,123,15)" fg:x="414" fg:w="1"/><text x="33.9359%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="33.6859%" y="581" width="0.0814%" height="15" fill="rgb(248,81,50)" fg:x="414" fg:w="1"/><text x="33.9359%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7673%" y="565" width="0.0814%" height="15" fill="rgb(214,120,4)" fg:x="415" fg:w="1"/><text x="34.0173%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7673%" y="549" width="0.0814%" height="15" fill="rgb(208,179,34)" fg:x="415" fg:w="1"/><text x="34.0173%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7673%" y="533" width="0.0814%" height="15" fill="rgb(227,140,7)" fg:x="415" fg:w="1"/><text x="34.0173%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.7673%" y="517" width="0.0814%" height="15" fill="rgb(214,22,6)" fg:x="415" fg:w="1"/><text x="34.0173%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="33.7673%" y="613" width="0.2441%" height="15" fill="rgb(207,137,27)" fg:x="415" fg:w="3"/><text x="34.0173%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="33.7673%" y="597" width="0.2441%" height="15" fill="rgb(210,8,46)" fg:x="415" fg:w="3"/><text x="34.0173%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.7673%" y="581" width="0.2441%" height="15" fill="rgb(240,16,54)" fg:x="415" fg:w="3"/><text x="34.0173%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.8487%" y="565" width="0.1627%" height="15" fill="rgb(211,209,29)" fg:x="416" fg:w="2"/><text x="34.0987%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9300%" y="549" width="0.0814%" height="15" fill="rgb(226,228,24)" fg:x="417" fg:w="1"/><text x="34.1800%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9300%" y="533" width="0.0814%" height="15" fill="rgb(222,84,9)" fg:x="417" fg:w="1"/><text x="34.1800%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9300%" y="517" width="0.0814%" height="15" fill="rgb(234,203,30)" fg:x="417" fg:w="1"/><text x="34.1800%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9300%" y="501" width="0.0814%" height="15" fill="rgb(238,109,14)" fg:x="417" fg:w="1"/><text x="34.1800%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.9300%" y="485" width="0.0814%" height="15" fill="rgb(233,206,34)" fg:x="417" fg:w="1"/><text x="34.1800%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0114%" y="565" width="0.0814%" height="15" fill="rgb(220,167,47)" fg:x="418" fg:w="1"/><text x="34.2614%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0114%" y="549" width="0.0814%" height="15" fill="rgb(238,105,10)" fg:x="418" fg:w="1"/><text x="34.2614%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0114%" y="533" width="0.0814%" height="15" fill="rgb(213,227,17)" fg:x="418" fg:w="1"/><text x="34.2614%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.0114%" y="517" width="0.0814%" height="15" fill="rgb(217,132,38)" fg:x="418" fg:w="1"/><text x="34.2614%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.0928%" y="565" width="0.0814%" height="15" fill="rgb(242,146,4)" fg:x="419" fg:w="1"/><text x="34.3428%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.0928%" y="549" width="0.0814%" height="15" fill="rgb(212,61,9)" fg:x="419" fg:w="1"/><text x="34.3428%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.0928%" y="533" width="0.0814%" height="15" fill="rgb(247,126,22)" fg:x="419" fg:w="1"/><text x="34.3428%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.0928%" y="517" width="0.0814%" height="15" fill="rgb(220,196,2)" fg:x="419" fg:w="1"/><text x="34.3428%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.0928%" y="501" width="0.0814%" height="15" fill="rgb(208,46,4)" fg:x="419" fg:w="1"/><text x="34.3428%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.0928%" y="485" width="0.0814%" height="15" fill="rgb(252,104,46)" fg:x="419" fg:w="1"/><text x="34.3428%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0928%" y="469" width="0.0814%" height="15" fill="rgb(237,152,48)" fg:x="419" fg:w="1"/><text x="34.3428%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.1741%" y="405" width="0.0814%" height="15" fill="rgb(221,59,37)" fg:x="420" fg:w="1"/><text x="34.4241%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (223 samples, 18.14%)</title><rect x="16.1920%" y="709" width="18.1448%" height="15" fill="rgb(209,202,51)" fg:x="199" fg:w="223"/><text x="16.4420%" y="719.50">plugins_core::build::BuildSu..</text></g><g><title>plugins_core::build::Build::occupying (35 samples, 2.85%)</title><rect x="31.4890%" y="693" width="2.8478%" height="15" fill="rgb(228,81,30)" fg:x="387" fg:w="35"/><text x="31.7390%" y="703.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (19 samples, 1.55%)</title><rect x="32.7909%" y="677" width="1.5460%" height="15" fill="rgb(227,42,39)" fg:x="403" fg:w="19"/><text x="33.0409%" y="687.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.57%)</title><rect x="33.7673%" y="661" width="0.5696%" height="15" fill="rgb(221,26,2)" fg:x="415" fg:w="7"/><text x="34.0173%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.57%)</title><rect x="33.7673%" y="645" width="0.5696%" height="15" fill="rgb(254,61,31)" fg:x="415" fg:w="7"/><text x="34.0173%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.57%)</title><rect x="33.7673%" y="629" width="0.5696%" height="15" fill="rgb(222,173,38)" fg:x="415" fg:w="7"/><text x="34.0173%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="34.0114%" y="613" width="0.3255%" height="15" fill="rgb(218,50,12)" fg:x="418" fg:w="4"/><text x="34.2614%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="34.0114%" y="597" width="0.3255%" height="15" fill="rgb(223,88,40)" fg:x="418" fg:w="4"/><text x="34.2614%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="34.0114%" y="581" width="0.3255%" height="15" fill="rgb(237,54,19)" fg:x="418" fg:w="4"/><text x="34.2614%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.1741%" y="565" width="0.1627%" height="15" fill="rgb(251,129,25)" fg:x="420" fg:w="2"/><text x="34.4241%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1741%" y="549" width="0.1627%" height="15" fill="rgb(238,97,19)" fg:x="420" fg:w="2"/><text x="34.4241%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.1741%" y="533" width="0.1627%" height="15" fill="rgb(240,169,18)" fg:x="420" fg:w="2"/><text x="34.4241%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1741%" y="517" width="0.1627%" height="15" fill="rgb(230,187,49)" fg:x="420" fg:w="2"/><text x="34.4241%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.1741%" y="501" width="0.1627%" height="15" fill="rgb(209,44,26)" fg:x="420" fg:w="2"/><text x="34.4241%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1741%" y="485" width="0.1627%" height="15" fill="rgb(244,0,6)" fg:x="420" fg:w="2"/><text x="34.4241%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.1741%" y="469" width="0.1627%" height="15" fill="rgb(248,18,21)" fg:x="420" fg:w="2"/><text x="34.4241%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1741%" y="453" width="0.1627%" height="15" fill="rgb(245,180,19)" fg:x="420" fg:w="2"/><text x="34.4241%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.1741%" y="437" width="0.1627%" height="15" fill="rgb(252,118,36)" fg:x="420" fg:w="2"/><text x="34.4241%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1741%" y="421" width="0.1627%" height="15" fill="rgb(210,224,19)" fg:x="420" fg:w="2"/><text x="34.4241%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="34.2555%" y="405" width="0.0814%" height="15" fill="rgb(218,30,24)" fg:x="421" fg:w="1"/><text x="34.5055%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="34.3369%" y="677" width="0.0814%" height="15" fill="rgb(219,75,50)" fg:x="422" fg:w="1"/><text x="34.5869%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.3369%" y="661" width="0.0814%" height="15" fill="rgb(234,72,50)" fg:x="422" fg:w="1"/><text x="34.5869%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.3369%" y="645" width="0.0814%" height="15" fill="rgb(219,100,48)" fg:x="422" fg:w="1"/><text x="34.5869%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="34.4182%" y="677" width="0.0814%" height="15" fill="rgb(253,5,41)" fg:x="423" fg:w="1"/><text x="34.6682%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4996%" y="597" width="0.0814%" height="15" fill="rgb(247,181,11)" fg:x="424" fg:w="1"/><text x="34.7496%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4996%" y="581" width="0.0814%" height="15" fill="rgb(222,223,25)" fg:x="424" fg:w="1"/><text x="34.7496%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.4996%" y="613" width="0.1627%" height="15" fill="rgb(214,198,28)" fg:x="424" fg:w="2"/><text x="34.7496%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5810%" y="597" width="0.0814%" height="15" fill="rgb(230,46,43)" fg:x="425" fg:w="1"/><text x="34.8310%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5810%" y="581" width="0.0814%" height="15" fill="rgb(233,65,53)" fg:x="425" fg:w="1"/><text x="34.8310%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5810%" y="565" width="0.0814%" height="15" fill="rgb(221,121,27)" fg:x="425" fg:w="1"/><text x="34.8310%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5810%" y="549" width="0.0814%" height="15" fill="rgb(247,70,47)" fg:x="425" fg:w="1"/><text x="34.8310%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5810%" y="533" width="0.0814%" height="15" fill="rgb(228,85,35)" fg:x="425" fg:w="1"/><text x="34.8310%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.5810%" y="517" width="0.0814%" height="15" fill="rgb(209,50,18)" fg:x="425" fg:w="1"/><text x="34.8310%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.5810%" y="501" width="0.0814%" height="15" fill="rgb(250,19,35)" fg:x="425" fg:w="1"/><text x="34.8310%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (5 samples, 0.41%)</title><rect x="34.3369%" y="709" width="0.4068%" height="15" fill="rgb(253,107,29)" fg:x="422" fg:w="5"/><text x="34.5869%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.41%)</title><rect x="34.3369%" y="693" width="0.4068%" height="15" fill="rgb(252,179,29)" fg:x="422" fg:w="5"/><text x="34.5869%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="34.4996%" y="677" width="0.2441%" height="15" fill="rgb(238,194,6)" fg:x="424" fg:w="3"/><text x="34.7496%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="34.4996%" y="661" width="0.2441%" height="15" fill="rgb(238,164,29)" fg:x="424" fg:w="3"/><text x="34.7496%" y="671.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="34.4996%" y="645" width="0.2441%" height="15" fill="rgb(224,25,9)" fg:x="424" fg:w="3"/><text x="34.7496%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.4996%" y="629" width="0.2441%" height="15" fill="rgb(244,153,23)" fg:x="424" fg:w="3"/><text x="34.7496%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6623%" y="613" width="0.0814%" height="15" fill="rgb(212,203,14)" fg:x="426" fg:w="1"/><text x="34.9123%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6623%" y="597" width="0.0814%" height="15" fill="rgb(220,164,20)" fg:x="426" fg:w="1"/><text x="34.9123%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6623%" y="581" width="0.0814%" height="15" fill="rgb(222,203,48)" fg:x="426" fg:w="1"/><text x="34.9123%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6623%" y="565" width="0.0814%" height="15" fill="rgb(215,159,22)" fg:x="426" fg:w="1"/><text x="34.9123%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.6623%" y="549" width="0.0814%" height="15" fill="rgb(216,183,47)" fg:x="426" fg:w="1"/><text x="34.9123%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6623%" y="533" width="0.0814%" height="15" fill="rgb(229,195,25)" fg:x="426" fg:w="1"/><text x="34.9123%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="34.8251%" y="645" width="0.0814%" height="15" fill="rgb(224,132,51)" fg:x="428" fg:w="1"/><text x="35.0751%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="34.8251%" y="661" width="0.1627%" height="15" fill="rgb(240,63,7)" fg:x="428" fg:w="2"/><text x="35.0751%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.9064%" y="645" width="0.0814%" height="15" fill="rgb(249,182,41)" fg:x="429" fg:w="1"/><text x="35.1564%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.9064%" y="629" width="0.0814%" height="15" fill="rgb(243,47,26)" fg:x="429" fg:w="1"/><text x="35.1564%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="613" width="0.0814%" height="15" fill="rgb(233,48,2)" fg:x="429" fg:w="1"/><text x="35.1564%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.9064%" y="597" width="0.0814%" height="15" fill="rgb(244,165,34)" fg:x="429" fg:w="1"/><text x="35.1564%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="581" width="0.0814%" height="15" fill="rgb(207,89,7)" fg:x="429" fg:w="1"/><text x="35.1564%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="565" width="0.0814%" height="15" fill="rgb(244,117,36)" fg:x="429" fg:w="1"/><text x="35.1564%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="549" width="0.0814%" height="15" fill="rgb(226,144,34)" fg:x="429" fg:w="1"/><text x="35.1564%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.9064%" y="533" width="0.0814%" height="15" fill="rgb(213,23,19)" fg:x="429" fg:w="1"/><text x="35.1564%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="517" width="0.0814%" height="15" fill="rgb(217,75,12)" fg:x="429" fg:w="1"/><text x="35.1564%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="501" width="0.0814%" height="15" fill="rgb(224,159,17)" fg:x="429" fg:w="1"/><text x="35.1564%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="485" width="0.0814%" height="15" fill="rgb(217,118,1)" fg:x="429" fg:w="1"/><text x="35.1564%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.9064%" y="469" width="0.0814%" height="15" fill="rgb(232,180,48)" fg:x="429" fg:w="1"/><text x="35.1564%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="453" width="0.0814%" height="15" fill="rgb(230,27,33)" fg:x="429" fg:w="1"/><text x="35.1564%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.9064%" y="437" width="0.0814%" height="15" fill="rgb(205,31,21)" fg:x="429" fg:w="1"/><text x="35.1564%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.9878%" y="613" width="0.1627%" height="15" fill="rgb(253,59,4)" fg:x="430" fg:w="2"/><text x="35.2378%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0692%" y="597" width="0.0814%" height="15" fill="rgb(224,201,9)" fg:x="431" fg:w="1"/><text x="35.3192%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="34.9878%" y="661" width="0.2441%" height="15" fill="rgb(229,206,30)" fg:x="430" fg:w="3"/><text x="35.2378%" y="671.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="34.9878%" y="645" width="0.2441%" height="15" fill="rgb(212,67,47)" fg:x="430" fg:w="3"/><text x="35.2378%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.9878%" y="629" width="0.2441%" height="15" fill="rgb(211,96,50)" fg:x="430" fg:w="3"/><text x="35.2378%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.1505%" y="613" width="0.0814%" height="15" fill="rgb(252,114,18)" fg:x="432" fg:w="1"/><text x="35.4005%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1505%" y="597" width="0.0814%" height="15" fill="rgb(223,58,37)" fg:x="432" fg:w="1"/><text x="35.4005%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.1505%" y="581" width="0.0814%" height="15" fill="rgb(237,70,4)" fg:x="432" fg:w="1"/><text x="35.4005%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1505%" y="565" width="0.0814%" height="15" fill="rgb(244,85,46)" fg:x="432" fg:w="1"/><text x="35.4005%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.1505%" y="549" width="0.0814%" height="15" fill="rgb(223,39,52)" fg:x="432" fg:w="1"/><text x="35.4005%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1505%" y="533" width="0.0814%" height="15" fill="rgb(218,200,14)" fg:x="432" fg:w="1"/><text x="35.4005%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.1505%" y="517" width="0.0814%" height="15" fill="rgb(208,171,16)" fg:x="432" fg:w="1"/><text x="35.4005%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.1505%" y="501" width="0.0814%" height="15" fill="rgb(234,200,18)" fg:x="432" fg:w="1"/><text x="35.4005%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.2319%" y="661" width="0.0814%" height="15" fill="rgb(228,45,11)" fg:x="433" fg:w="1"/><text x="35.4819%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.3133%" y="581" width="0.1627%" height="15" fill="rgb(237,182,11)" fg:x="434" fg:w="2"/><text x="35.5633%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.3133%" y="565" width="0.1627%" height="15" fill="rgb(241,175,49)" fg:x="434" fg:w="2"/><text x="35.5633%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.3133%" y="549" width="0.1627%" height="15" fill="rgb(247,38,35)" fg:x="434" fg:w="2"/><text x="35.5633%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="35.3133%" y="533" width="0.1627%" height="15" fill="rgb(228,39,49)" fg:x="434" fg:w="2"/><text x="35.5633%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.3133%" y="517" width="0.1627%" height="15" fill="rgb(226,101,26)" fg:x="434" fg:w="2"/><text x="35.5633%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.3133%" y="613" width="0.2441%" height="15" fill="rgb(206,141,19)" fg:x="434" fg:w="3"/><text x="35.5633%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.3133%" y="597" width="0.2441%" height="15" fill="rgb(211,200,13)" fg:x="434" fg:w="3"/><text x="35.5633%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.4760%" y="581" width="0.0814%" height="15" fill="rgb(241,121,6)" fg:x="436" fg:w="1"/><text x="35.7260%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.4760%" y="565" width="0.0814%" height="15" fill="rgb(234,221,29)" fg:x="436" fg:w="1"/><text x="35.7260%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.4760%" y="549" width="0.0814%" height="15" fill="rgb(229,136,5)" fg:x="436" fg:w="1"/><text x="35.7260%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.4760%" y="533" width="0.0814%" height="15" fill="rgb(238,36,11)" fg:x="436" fg:w="1"/><text x="35.7260%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.4760%" y="517" width="0.0814%" height="15" fill="rgb(251,55,41)" fg:x="436" fg:w="1"/><text x="35.7260%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.4760%" y="501" width="0.0814%" height="15" fill="rgb(242,34,40)" fg:x="436" fg:w="1"/><text x="35.7260%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.4760%" y="485" width="0.0814%" height="15" fill="rgb(215,42,17)" fg:x="436" fg:w="1"/><text x="35.7260%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.4760%" y="469" width="0.0814%" height="15" fill="rgb(207,44,46)" fg:x="436" fg:w="1"/><text x="35.7260%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5574%" y="581" width="0.0814%" height="15" fill="rgb(211,206,28)" fg:x="437" fg:w="1"/><text x="35.8074%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.5574%" y="565" width="0.0814%" height="15" fill="rgb(237,167,16)" fg:x="437" fg:w="1"/><text x="35.8074%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="35.3133%" y="645" width="0.4068%" height="15" fill="rgb(233,66,6)" fg:x="434" fg:w="5"/><text x="35.5633%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.41%)</title><rect x="35.3133%" y="629" width="0.4068%" height="15" fill="rgb(246,123,29)" fg:x="434" fg:w="5"/><text x="35.5633%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="35.5574%" y="613" width="0.1627%" height="15" fill="rgb(209,62,40)" fg:x="437" fg:w="2"/><text x="35.8074%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.5574%" y="597" width="0.1627%" height="15" fill="rgb(218,4,25)" fg:x="437" fg:w="2"/><text x="35.8074%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6387%" y="581" width="0.0814%" height="15" fill="rgb(253,91,49)" fg:x="438" fg:w="1"/><text x="35.8887%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6387%" y="565" width="0.0814%" height="15" fill="rgb(228,155,29)" fg:x="438" fg:w="1"/><text x="35.8887%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="35.6387%" y="549" width="0.0814%" height="15" fill="rgb(243,57,37)" fg:x="438" fg:w="1"/><text x="35.8887%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.6387%" y="533" width="0.0814%" height="15" fill="rgb(244,167,17)" fg:x="438" fg:w="1"/><text x="35.8887%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.6387%" y="517" width="0.0814%" height="15" fill="rgb(207,181,38)" fg:x="438" fg:w="1"/><text x="35.8887%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="35.6387%" y="501" width="0.0814%" height="15" fill="rgb(211,8,23)" fg:x="438" fg:w="1"/><text x="35.8887%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="35.6387%" y="485" width="0.0814%" height="15" fill="rgb(235,11,44)" fg:x="438" fg:w="1"/><text x="35.8887%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.06%)</title><rect x="34.7437%" y="677" width="1.0578%" height="15" fill="rgb(248,18,52)" fg:x="427" fg:w="13"/><text x="34.9937%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="35.3133%" y="661" width="0.4882%" height="15" fill="rgb(208,4,7)" fg:x="434" fg:w="6"/><text x="35.5633%" y="671.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="35.7201%" y="645" width="0.0814%" height="15" fill="rgb(240,17,39)" fg:x="439" fg:w="1"/><text x="35.9701%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="35.8015%" y="661" width="0.0814%" height="15" fill="rgb(207,170,3)" fg:x="440" fg:w="1"/><text x="36.0515%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="35.8015%" y="645" width="0.0814%" height="15" fill="rgb(236,100,52)" fg:x="440" fg:w="1"/><text x="36.0515%" y="655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="35.8828%" y="645" width="0.0814%" height="15" fill="rgb(246,78,51)" fg:x="441" fg:w="1"/><text x="36.1328%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8828%" y="629" width="0.0814%" height="15" fill="rgb(211,17,15)" fg:x="441" fg:w="1"/><text x="36.1328%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.8828%" y="613" width="0.0814%" height="15" fill="rgb(209,59,46)" fg:x="441" fg:w="1"/><text x="36.1328%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.38%)</title><rect x="34.7437%" y="709" width="1.3832%" height="15" fill="rgb(210,92,25)" fg:x="427" fg:w="17"/><text x="34.9937%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.38%)</title><rect x="34.7437%" y="693" width="1.3832%" height="15" fill="rgb(238,174,52)" fg:x="427" fg:w="17"/><text x="34.9937%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.33%)</title><rect x="35.8015%" y="677" width="0.3255%" height="15" fill="rgb(230,73,7)" fg:x="440" fg:w="4"/><text x="36.0515%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (3 samples, 0.24%)</title><rect x="35.8828%" y="661" width="0.2441%" height="15" fill="rgb(243,124,40)" fg:x="441" fg:w="3"/><text x="36.1328%" y="671.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="35.9642%" y="645" width="0.1627%" height="15" fill="rgb(244,170,11)" fg:x="442" fg:w="2"/><text x="36.2142%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="35.9642%" y="629" width="0.1627%" height="15" fill="rgb(207,114,54)" fg:x="442" fg:w="2"/><text x="36.2142%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.9642%" y="613" width="0.1627%" height="15" fill="rgb(205,42,20)" fg:x="442" fg:w="2"/><text x="36.2142%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="35.9642%" y="597" width="0.1627%" height="15" fill="rgb(230,30,28)" fg:x="442" fg:w="2"/><text x="36.2142%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0456%" y="581" width="0.0814%" height="15" fill="rgb(205,73,54)" fg:x="443" fg:w="1"/><text x="36.2956%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.0456%" y="565" width="0.0814%" height="15" fill="rgb(254,227,23)" fg:x="443" fg:w="1"/><text x="36.2956%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="36.1269%" y="677" width="0.1627%" height="15" fill="rgb(228,202,34)" fg:x="444" fg:w="2"/><text x="36.3769%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="36.1269%" y="661" width="0.1627%" height="15" fill="rgb(222,225,37)" fg:x="444" fg:w="2"/><text x="36.3769%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.1269%" y="645" width="0.1627%" height="15" fill="rgb(221,14,54)" fg:x="444" fg:w="2"/><text x="36.3769%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.2083%" y="629" width="0.0814%" height="15" fill="rgb(254,102,2)" fg:x="445" fg:w="1"/><text x="36.4583%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.2083%" y="613" width="0.0814%" height="15" fill="rgb(232,104,17)" fg:x="445" fg:w="1"/><text x="36.4583%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.2083%" y="597" width="0.0814%" height="15" fill="rgb(250,220,14)" fg:x="445" fg:w="1"/><text x="36.4583%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.2083%" y="581" width="0.0814%" height="15" fill="rgb(241,158,9)" fg:x="445" fg:w="1"/><text x="36.4583%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.2083%" y="565" width="0.0814%" height="15" fill="rgb(246,9,43)" fg:x="445" fg:w="1"/><text x="36.4583%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="36.2897%" y="629" width="0.0814%" height="15" fill="rgb(206,73,33)" fg:x="446" fg:w="1"/><text x="36.5397%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.3710%" y="629" width="0.0814%" height="15" fill="rgb(222,79,8)" fg:x="447" fg:w="1"/><text x="36.6210%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.3710%" y="613" width="0.0814%" height="15" fill="rgb(234,8,54)" fg:x="447" fg:w="1"/><text x="36.6210%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3710%" y="597" width="0.0814%" height="15" fill="rgb(209,134,38)" fg:x="447" fg:w="1"/><text x="36.6210%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3710%" y="581" width="0.0814%" height="15" fill="rgb(230,127,29)" fg:x="447" fg:w="1"/><text x="36.6210%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3710%" y="565" width="0.0814%" height="15" fill="rgb(242,44,41)" fg:x="447" fg:w="1"/><text x="36.6210%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3710%" y="549" width="0.0814%" height="15" fill="rgb(222,56,43)" fg:x="447" fg:w="1"/><text x="36.6210%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3710%" y="533" width="0.0814%" height="15" fill="rgb(238,39,47)" fg:x="447" fg:w="1"/><text x="36.6210%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3710%" y="517" width="0.0814%" height="15" fill="rgb(226,79,43)" fg:x="447" fg:w="1"/><text x="36.6210%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3710%" y="501" width="0.0814%" height="15" fill="rgb(242,105,53)" fg:x="447" fg:w="1"/><text x="36.6210%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3710%" y="485" width="0.0814%" height="15" fill="rgb(251,132,46)" fg:x="447" fg:w="1"/><text x="36.6210%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3710%" y="469" width="0.0814%" height="15" fill="rgb(231,77,14)" fg:x="447" fg:w="1"/><text x="36.6210%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3710%" y="453" width="0.0814%" height="15" fill="rgb(240,135,9)" fg:x="447" fg:w="1"/><text x="36.6210%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3710%" y="437" width="0.0814%" height="15" fill="rgb(248,109,14)" fg:x="447" fg:w="1"/><text x="36.6210%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.3710%" y="421" width="0.0814%" height="15" fill="rgb(227,146,52)" fg:x="447" fg:w="1"/><text x="36.6210%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.3710%" y="405" width="0.0814%" height="15" fill="rgb(232,54,3)" fg:x="447" fg:w="1"/><text x="36.6210%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.3710%" y="389" width="0.0814%" height="15" fill="rgb(229,201,43)" fg:x="447" fg:w="1"/><text x="36.6210%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.3710%" y="373" width="0.0814%" height="15" fill="rgb(252,161,33)" fg:x="447" fg:w="1"/><text x="36.6210%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.3710%" y="357" width="0.0814%" height="15" fill="rgb(226,146,40)" fg:x="447" fg:w="1"/><text x="36.6210%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.3710%" y="341" width="0.0814%" height="15" fill="rgb(219,47,25)" fg:x="447" fg:w="1"/><text x="36.6210%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5338%" y="597" width="0.0814%" height="15" fill="rgb(250,135,13)" fg:x="449" fg:w="1"/><text x="36.7838%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.5338%" y="581" width="0.0814%" height="15" fill="rgb(219,229,18)" fg:x="449" fg:w="1"/><text x="36.7838%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.41%)</title><rect x="36.2897%" y="661" width="0.4068%" height="15" fill="rgb(217,152,27)" fg:x="446" fg:w="5"/><text x="36.5397%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.41%)</title><rect x="36.2897%" y="645" width="0.4068%" height="15" fill="rgb(225,71,47)" fg:x="446" fg:w="5"/><text x="36.5397%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="36.4524%" y="629" width="0.2441%" height="15" fill="rgb(220,139,14)" fg:x="448" fg:w="3"/><text x="36.7024%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.4524%" y="613" width="0.2441%" height="15" fill="rgb(247,54,32)" fg:x="448" fg:w="3"/><text x="36.7024%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.6151%" y="597" width="0.0814%" height="15" fill="rgb(252,131,39)" fg:x="450" fg:w="1"/><text x="36.8651%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.6151%" y="581" width="0.0814%" height="15" fill="rgb(210,108,39)" fg:x="450" fg:w="1"/><text x="36.8651%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.6151%" y="565" width="0.0814%" height="15" fill="rgb(205,23,29)" fg:x="450" fg:w="1"/><text x="36.8651%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="36.1269%" y="693" width="0.7323%" height="15" fill="rgb(246,139,46)" fg:x="444" fg:w="9"/><text x="36.3769%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="36.2897%" y="677" width="0.5696%" height="15" fill="rgb(250,81,26)" fg:x="446" fg:w="7"/><text x="36.5397%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="36.6965%" y="661" width="0.1627%" height="15" fill="rgb(214,104,7)" fg:x="451" fg:w="2"/><text x="36.9465%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7779%" y="645" width="0.0814%" height="15" fill="rgb(233,189,8)" fg:x="452" fg:w="1"/><text x="37.0279%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.7779%" y="629" width="0.0814%" height="15" fill="rgb(228,141,17)" fg:x="452" fg:w="1"/><text x="37.0279%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.7779%" y="613" width="0.0814%" height="15" fill="rgb(247,157,1)" fg:x="452" fg:w="1"/><text x="37.0279%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7779%" y="597" width="0.0814%" height="15" fill="rgb(249,225,5)" fg:x="452" fg:w="1"/><text x="37.0279%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="36.8592%" y="693" width="0.0814%" height="15" fill="rgb(242,55,13)" fg:x="453" fg:w="1"/><text x="37.1092%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="36.8592%" y="677" width="0.0814%" height="15" fill="rgb(230,49,50)" fg:x="453" fg:w="1"/><text x="37.1092%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="36.8592%" y="661" width="0.0814%" height="15" fill="rgb(241,111,38)" fg:x="453" fg:w="1"/><text x="37.1092%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.8592%" y="645" width="0.0814%" height="15" fill="rgb(252,155,4)" fg:x="453" fg:w="1"/><text x="37.1092%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8592%" y="629" width="0.0814%" height="15" fill="rgb(212,69,32)" fg:x="453" fg:w="1"/><text x="37.1092%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.8592%" y="613" width="0.0814%" height="15" fill="rgb(243,107,47)" fg:x="453" fg:w="1"/><text x="37.1092%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8592%" y="597" width="0.0814%" height="15" fill="rgb(247,130,12)" fg:x="453" fg:w="1"/><text x="37.1092%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.8592%" y="581" width="0.0814%" height="15" fill="rgb(233,74,16)" fg:x="453" fg:w="1"/><text x="37.1092%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.8592%" y="565" width="0.0814%" height="15" fill="rgb(208,58,18)" fg:x="453" fg:w="1"/><text x="37.1092%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8592%" y="549" width="0.0814%" height="15" fill="rgb(242,225,1)" fg:x="453" fg:w="1"/><text x="37.1092%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="36.8592%" y="533" width="0.0814%" height="15" fill="rgb(249,39,40)" fg:x="453" fg:w="1"/><text x="37.1092%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.8592%" y="517" width="0.0814%" height="15" fill="rgb(207,72,44)" fg:x="453" fg:w="1"/><text x="37.1092%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.9406%" y="645" width="0.0814%" height="15" fill="rgb(215,193,12)" fg:x="454" fg:w="1"/><text x="37.1906%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="36.9406%" y="629" width="0.0814%" height="15" fill="rgb(248,41,39)" fg:x="454" fg:w="1"/><text x="37.1906%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.9406%" y="613" width="0.0814%" height="15" fill="rgb(253,85,4)" fg:x="454" fg:w="1"/><text x="37.1906%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9406%" y="597" width="0.0814%" height="15" fill="rgb(243,70,31)" fg:x="454" fg:w="1"/><text x="37.1906%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9406%" y="581" width="0.0814%" height="15" fill="rgb(253,195,26)" fg:x="454" fg:w="1"/><text x="37.1906%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9406%" y="565" width="0.0814%" height="15" fill="rgb(243,42,11)" fg:x="454" fg:w="1"/><text x="37.1906%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9406%" y="549" width="0.0814%" height="15" fill="rgb(239,66,17)" fg:x="454" fg:w="1"/><text x="37.1906%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.9406%" y="533" width="0.0814%" height="15" fill="rgb(217,132,21)" fg:x="454" fg:w="1"/><text x="37.1906%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9406%" y="517" width="0.0814%" height="15" fill="rgb(252,202,21)" fg:x="454" fg:w="1"/><text x="37.1906%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.0220%" y="533" width="0.0814%" height="15" fill="rgb(233,98,36)" fg:x="455" fg:w="1"/><text x="37.2720%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.0220%" y="517" width="0.0814%" height="15" fill="rgb(216,153,54)" fg:x="455" fg:w="1"/><text x="37.2720%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new (3 samples, 0.24%)</title><rect x="36.9406%" y="677" width="0.2441%" height="15" fill="rgb(250,99,7)" fg:x="454" fg:w="3"/><text x="37.1906%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="36.9406%" y="661" width="0.2441%" height="15" fill="rgb(207,56,50)" fg:x="454" fg:w="3"/><text x="37.1906%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="37.0220%" y="645" width="0.1627%" height="15" fill="rgb(244,61,34)" fg:x="455" fg:w="2"/><text x="37.2720%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.0220%" y="629" width="0.1627%" height="15" fill="rgb(241,50,38)" fg:x="455" fg:w="2"/><text x="37.2720%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.0220%" y="613" width="0.1627%" height="15" fill="rgb(212,166,30)" fg:x="455" fg:w="2"/><text x="37.2720%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.0220%" y="597" width="0.1627%" height="15" fill="rgb(249,127,32)" fg:x="455" fg:w="2"/><text x="37.2720%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.0220%" y="581" width="0.1627%" height="15" fill="rgb(209,103,0)" fg:x="455" fg:w="2"/><text x="37.2720%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.0220%" y="565" width="0.1627%" height="15" fill="rgb(238,209,51)" fg:x="455" fg:w="2"/><text x="37.2720%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.0220%" y="549" width="0.1627%" height="15" fill="rgb(237,56,23)" fg:x="455" fg:w="2"/><text x="37.2720%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.1033%" y="533" width="0.0814%" height="15" fill="rgb(215,153,46)" fg:x="456" fg:w="1"/><text x="37.3533%" y="543.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (406 samples, 33.03%)</title><rect x="4.2311%" y="725" width="33.0350%" height="15" fill="rgb(224,49,31)" fg:x="52" fg:w="406"/><text x="4.4811%" y="735.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::p..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (14 samples, 1.14%)</title><rect x="36.1269%" y="709" width="1.1391%" height="15" fill="rgb(250,18,42)" fg:x="444" fg:w="14"/><text x="36.3769%" y="719.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.33%)</title><rect x="36.9406%" y="693" width="0.3255%" height="15" fill="rgb(215,176,39)" fg:x="454" fg:w="4"/><text x="37.1906%" y="703.50"></text></g><g><title>kernel::model::entity::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="37.1847%" y="677" width="0.0814%" height="15" fill="rgb(223,77,29)" fg:x="457" fg:w="1"/><text x="37.4347%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2661%" y="725" width="0.0814%" height="15" fill="rgb(234,94,52)" fg:x="458" fg:w="1"/><text x="37.5161%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="37.3474%" y="725" width="0.1627%" height="15" fill="rgb(220,154,50)" fg:x="459" fg:w="2"/><text x="37.5974%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="37.4288%" y="709" width="0.0814%" height="15" fill="rgb(212,11,10)" fg:x="460" fg:w="1"/><text x="37.6788%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="37.4288%" y="693" width="0.0814%" height="15" fill="rgb(205,166,19)" fg:x="460" fg:w="1"/><text x="37.6788%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.4288%" y="677" width="0.0814%" height="15" fill="rgb(244,198,16)" fg:x="460" fg:w="1"/><text x="37.6788%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5102%" y="565" width="0.0814%" height="15" fill="rgb(219,69,12)" fg:x="461" fg:w="1"/><text x="37.7602%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="37.5102%" y="597" width="0.1627%" height="15" fill="rgb(245,30,7)" fg:x="461" fg:w="2"/><text x="37.7602%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="37.5102%" y="581" width="0.1627%" height="15" fill="rgb(218,221,48)" fg:x="461" fg:w="2"/><text x="37.7602%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.5915%" y="565" width="0.0814%" height="15" fill="rgb(216,66,15)" fg:x="462" fg:w="1"/><text x="37.8415%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5915%" y="549" width="0.0814%" height="15" fill="rgb(226,122,50)" fg:x="462" fg:w="1"/><text x="37.8415%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.5915%" y="533" width="0.0814%" height="15" fill="rgb(239,156,16)" fg:x="462" fg:w="1"/><text x="37.8415%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.5915%" y="517" width="0.0814%" height="15" fill="rgb(224,27,38)" fg:x="462" fg:w="1"/><text x="37.8415%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.5915%" y="501" width="0.0814%" height="15" fill="rgb(224,39,27)" fg:x="462" fg:w="1"/><text x="37.8415%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.5915%" y="485" width="0.0814%" height="15" fill="rgb(215,92,29)" fg:x="462" fg:w="1"/><text x="37.8415%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.5915%" y="469" width="0.0814%" height="15" fill="rgb(207,159,16)" fg:x="462" fg:w="1"/><text x="37.8415%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.5915%" y="453" width="0.0814%" height="15" fill="rgb(238,163,47)" fg:x="462" fg:w="1"/><text x="37.8415%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.5915%" y="437" width="0.0814%" height="15" fill="rgb(219,91,49)" fg:x="462" fg:w="1"/><text x="37.8415%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.5915%" y="421" width="0.0814%" height="15" fill="rgb(227,167,31)" fg:x="462" fg:w="1"/><text x="37.8415%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.5915%" y="405" width="0.0814%" height="15" fill="rgb(234,80,54)" fg:x="462" fg:w="1"/><text x="37.8415%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.5915%" y="389" width="0.0814%" height="15" fill="rgb(212,114,2)" fg:x="462" fg:w="1"/><text x="37.8415%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.5915%" y="373" width="0.0814%" height="15" fill="rgb(234,50,24)" fg:x="462" fg:w="1"/><text x="37.8415%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.5915%" y="357" width="0.0814%" height="15" fill="rgb(221,68,8)" fg:x="462" fg:w="1"/><text x="37.8415%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.5915%" y="341" width="0.0814%" height="15" fill="rgb(254,180,31)" fg:x="462" fg:w="1"/><text x="37.8415%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.5915%" y="325" width="0.0814%" height="15" fill="rgb(247,130,50)" fg:x="462" fg:w="1"/><text x="37.8415%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="37.5102%" y="709" width="0.2441%" height="15" fill="rgb(211,109,4)" fg:x="461" fg:w="3"/><text x="37.7602%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="37.5102%" y="693" width="0.2441%" height="15" fill="rgb(238,50,21)" fg:x="461" fg:w="3"/><text x="37.7602%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="37.5102%" y="677" width="0.2441%" height="15" fill="rgb(225,57,45)" fg:x="461" fg:w="3"/><text x="37.7602%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="37.5102%" y="661" width="0.2441%" height="15" fill="rgb(209,196,50)" fg:x="461" fg:w="3"/><text x="37.7602%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="37.5102%" y="645" width="0.2441%" height="15" fill="rgb(242,140,13)" fg:x="461" fg:w="3"/><text x="37.7602%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="37.5102%" y="629" width="0.2441%" height="15" fill="rgb(217,111,7)" fg:x="461" fg:w="3"/><text x="37.7602%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (3 samples, 0.24%)</title><rect x="37.5102%" y="613" width="0.2441%" height="15" fill="rgb(253,193,51)" fg:x="461" fg:w="3"/><text x="37.7602%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.6729%" y="597" width="0.0814%" height="15" fill="rgb(252,70,29)" fg:x="463" fg:w="1"/><text x="37.9229%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.6729%" y="581" width="0.0814%" height="15" fill="rgb(232,127,12)" fg:x="463" fg:w="1"/><text x="37.9229%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="37.6729%" y="565" width="0.0814%" height="15" fill="rgb(211,180,21)" fg:x="463" fg:w="1"/><text x="37.9229%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="37.6729%" y="549" width="0.0814%" height="15" fill="rgb(229,72,13)" fg:x="463" fg:w="1"/><text x="37.9229%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.6729%" y="533" width="0.0814%" height="15" fill="rgb(240,211,49)" fg:x="463" fg:w="1"/><text x="37.9229%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="37.7543%" y="677" width="0.0814%" height="15" fill="rgb(219,149,40)" fg:x="464" fg:w="1"/><text x="38.0043%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="37.8356%" y="645" width="0.0814%" height="15" fill="rgb(210,127,46)" fg:x="465" fg:w="1"/><text x="38.0856%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8356%" y="629" width="0.0814%" height="15" fill="rgb(220,106,7)" fg:x="465" fg:w="1"/><text x="38.0856%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.8356%" y="613" width="0.0814%" height="15" fill="rgb(249,31,22)" fg:x="465" fg:w="1"/><text x="38.0856%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.8356%" y="597" width="0.0814%" height="15" fill="rgb(253,1,49)" fg:x="465" fg:w="1"/><text x="38.0856%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.8356%" y="581" width="0.0814%" height="15" fill="rgb(227,144,33)" fg:x="465" fg:w="1"/><text x="38.0856%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.8356%" y="565" width="0.0814%" height="15" fill="rgb(249,163,44)" fg:x="465" fg:w="1"/><text x="38.0856%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8356%" y="549" width="0.0814%" height="15" fill="rgb(234,15,39)" fg:x="465" fg:w="1"/><text x="38.0856%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.8356%" y="533" width="0.0814%" height="15" fill="rgb(207,66,16)" fg:x="465" fg:w="1"/><text x="38.0856%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.8356%" y="517" width="0.0814%" height="15" fill="rgb(233,112,24)" fg:x="465" fg:w="1"/><text x="38.0856%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.8356%" y="501" width="0.0814%" height="15" fill="rgb(230,90,22)" fg:x="465" fg:w="1"/><text x="38.0856%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.8356%" y="485" width="0.0814%" height="15" fill="rgb(229,61,13)" fg:x="465" fg:w="1"/><text x="38.0856%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.8356%" y="469" width="0.0814%" height="15" fill="rgb(225,57,24)" fg:x="465" fg:w="1"/><text x="38.0856%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8356%" y="453" width="0.0814%" height="15" fill="rgb(208,169,48)" fg:x="465" fg:w="1"/><text x="38.0856%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="37.8356%" y="677" width="0.1627%" height="15" fill="rgb(244,218,51)" fg:x="465" fg:w="2"/><text x="38.0856%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="37.8356%" y="661" width="0.1627%" height="15" fill="rgb(214,148,10)" fg:x="465" fg:w="2"/><text x="38.0856%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="37.9170%" y="645" width="0.0814%" height="15" fill="rgb(225,174,27)" fg:x="466" fg:w="1"/><text x="38.1670%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="37.9984%" y="661" width="0.1627%" height="15" fill="rgb(230,96,26)" fg:x="467" fg:w="2"/><text x="38.2484%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="37.9984%" y="645" width="0.1627%" height="15" fill="rgb(232,10,30)" fg:x="467" fg:w="2"/><text x="38.2484%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.0797%" y="629" width="0.0814%" height="15" fill="rgb(222,8,50)" fg:x="468" fg:w="1"/><text x="38.3297%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="38.3238%" y="613" width="0.0814%" height="15" fill="rgb(213,81,27)" fg:x="471" fg:w="1"/><text x="38.5738%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.3238%" y="597" width="0.0814%" height="15" fill="rgb(245,50,10)" fg:x="471" fg:w="1"/><text x="38.5738%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="38.2425%" y="629" width="0.2441%" height="15" fill="rgb(216,100,18)" fg:x="470" fg:w="3"/><text x="38.4925%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.4052%" y="613" width="0.0814%" height="15" fill="rgb(236,147,54)" fg:x="472" fg:w="1"/><text x="38.6552%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.4052%" y="597" width="0.0814%" height="15" fill="rgb(205,143,26)" fg:x="472" fg:w="1"/><text x="38.6552%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.4052%" y="581" width="0.0814%" height="15" fill="rgb(236,26,9)" fg:x="472" fg:w="1"/><text x="38.6552%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.5679%" y="613" width="0.0814%" height="15" fill="rgb(221,165,53)" fg:x="474" fg:w="1"/><text x="38.8179%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="38.6493%" y="613" width="0.0814%" height="15" fill="rgb(214,110,17)" fg:x="475" fg:w="1"/><text x="38.8993%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (8 samples, 0.65%)</title><rect x="38.7307%" y="613" width="0.6509%" height="15" fill="rgb(237,197,12)" fg:x="476" fg:w="8"/><text x="38.9807%" y="623.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="38.8934%" y="597" width="0.4882%" height="15" fill="rgb(205,84,17)" fg:x="478" fg:w="6"/><text x="39.1434%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.2189%" y="581" width="0.1627%" height="15" fill="rgb(237,18,45)" fg:x="482" fg:w="2"/><text x="39.4689%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.3002%" y="565" width="0.0814%" height="15" fill="rgb(221,87,14)" fg:x="483" fg:w="1"/><text x="39.5502%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.3002%" y="549" width="0.0814%" height="15" fill="rgb(238,186,15)" fg:x="483" fg:w="1"/><text x="39.5502%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.3002%" y="533" width="0.0814%" height="15" fill="rgb(208,115,11)" fg:x="483" fg:w="1"/><text x="39.5502%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.3002%" y="517" width="0.0814%" height="15" fill="rgb(254,175,0)" fg:x="483" fg:w="1"/><text x="39.5502%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="39.3816%" y="597" width="0.1627%" height="15" fill="rgb(227,24,42)" fg:x="484" fg:w="2"/><text x="39.6316%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="39.3816%" y="581" width="0.1627%" height="15" fill="rgb(223,211,37)" fg:x="484" fg:w="2"/><text x="39.6316%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="39.3816%" y="565" width="0.1627%" height="15" fill="rgb(235,49,27)" fg:x="484" fg:w="2"/><text x="39.6316%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.3816%" y="549" width="0.1627%" height="15" fill="rgb(254,97,51)" fg:x="484" fg:w="2"/><text x="39.6316%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.3816%" y="533" width="0.1627%" height="15" fill="rgb(249,51,40)" fg:x="484" fg:w="2"/><text x="39.6316%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="39.3816%" y="517" width="0.1627%" height="15" fill="rgb(210,128,45)" fg:x="484" fg:w="2"/><text x="39.6316%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="39.3816%" y="501" width="0.1627%" height="15" fill="rgb(224,137,50)" fg:x="484" fg:w="2"/><text x="39.6316%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="39.3816%" y="485" width="0.1627%" height="15" fill="rgb(242,15,9)" fg:x="484" fg:w="2"/><text x="39.6316%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="39.3816%" y="469" width="0.1627%" height="15" fill="rgb(233,187,41)" fg:x="484" fg:w="2"/><text x="39.6316%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="39.5443%" y="597" width="0.3255%" height="15" fill="rgb(227,2,29)" fg:x="486" fg:w="4"/><text x="39.7943%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.7884%" y="581" width="0.0814%" height="15" fill="rgb(222,70,3)" fg:x="489" fg:w="1"/><text x="40.0384%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.7884%" y="565" width="0.0814%" height="15" fill="rgb(213,11,42)" fg:x="489" fg:w="1"/><text x="40.0384%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.7884%" y="549" width="0.0814%" height="15" fill="rgb(225,150,9)" fg:x="489" fg:w="1"/><text x="40.0384%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="39.8698%" y="581" width="0.1627%" height="15" fill="rgb(230,162,45)" fg:x="490" fg:w="2"/><text x="40.1198%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.0325%" y="581" width="0.1627%" height="15" fill="rgb(222,14,52)" fg:x="492" fg:w="2"/><text x="40.2825%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.0325%" y="565" width="0.1627%" height="15" fill="rgb(254,198,14)" fg:x="492" fg:w="2"/><text x="40.2825%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.1139%" y="549" width="0.0814%" height="15" fill="rgb(220,217,30)" fg:x="493" fg:w="1"/><text x="40.3639%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="40.1953%" y="565" width="0.1627%" height="15" fill="rgb(215,146,41)" fg:x="494" fg:w="2"/><text x="40.4453%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.3580%" y="549" width="0.0814%" height="15" fill="rgb(217,27,36)" fg:x="496" fg:w="1"/><text x="40.6080%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.4394%" y="533" width="0.0814%" height="15" fill="rgb(219,218,39)" fg:x="497" fg:w="1"/><text x="40.6894%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.5207%" y="533" width="0.0814%" height="15" fill="rgb(219,4,42)" fg:x="498" fg:w="1"/><text x="40.7707%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.5207%" y="517" width="0.0814%" height="15" fill="rgb(249,119,36)" fg:x="498" fg:w="1"/><text x="40.7707%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.5207%" y="501" width="0.0814%" height="15" fill="rgb(209,23,33)" fg:x="498" fg:w="1"/><text x="40.7707%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.5207%" y="485" width="0.0814%" height="15" fill="rgb(211,10,0)" fg:x="498" fg:w="1"/><text x="40.7707%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="40.6021%" y="533" width="0.2441%" height="15" fill="rgb(208,99,37)" fg:x="499" fg:w="3"/><text x="40.8521%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="40.6021%" y="517" width="0.2441%" height="15" fill="rgb(213,132,31)" fg:x="499" fg:w="3"/><text x="40.8521%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="40.6021%" y="501" width="0.2441%" height="15" fill="rgb(243,129,40)" fg:x="499" fg:w="3"/><text x="40.8521%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="40.6021%" y="485" width="0.2441%" height="15" fill="rgb(210,66,33)" fg:x="499" fg:w="3"/><text x="40.8521%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="40.6021%" y="469" width="0.2441%" height="15" fill="rgb(209,189,4)" fg:x="499" fg:w="3"/><text x="40.8521%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="40.6021%" y="453" width="0.2441%" height="15" fill="rgb(214,107,37)" fg:x="499" fg:w="3"/><text x="40.8521%" y="463.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="40.6021%" y="437" width="0.2441%" height="15" fill="rgb(245,88,54)" fg:x="499" fg:w="3"/><text x="40.8521%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="40.4394%" y="549" width="0.4882%" height="15" fill="rgb(205,146,20)" fg:x="497" fg:w="6"/><text x="40.6894%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="40.8462%" y="533" width="0.0814%" height="15" fill="rgb(220,161,25)" fg:x="502" fg:w="1"/><text x="41.0962%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="40.1953%" y="581" width="0.8137%" height="15" fill="rgb(215,152,15)" fg:x="494" fg:w="10"/><text x="40.4453%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="40.3580%" y="565" width="0.6509%" height="15" fill="rgb(233,192,44)" fg:x="496" fg:w="8"/><text x="40.6080%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.9276%" y="549" width="0.0814%" height="15" fill="rgb(240,170,46)" fg:x="503" fg:w="1"/><text x="41.1776%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.9276%" y="533" width="0.0814%" height="15" fill="rgb(207,104,33)" fg:x="503" fg:w="1"/><text x="41.1776%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.38%)</title><rect x="39.8698%" y="597" width="1.3832%" height="15" fill="rgb(219,21,39)" fg:x="490" fg:w="17"/><text x="40.1198%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="41.0090%" y="581" width="0.2441%" height="15" fill="rgb(214,133,29)" fg:x="504" fg:w="3"/><text x="41.2590%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.1717%" y="565" width="0.0814%" height="15" fill="rgb(226,93,6)" fg:x="506" fg:w="1"/><text x="41.4217%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.95%)</title><rect x="39.3816%" y="613" width="1.9528%" height="15" fill="rgb(252,222,34)" fg:x="484" fg:w="24"/><text x="39.6316%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.2531%" y="597" width="0.0814%" height="15" fill="rgb(252,92,48)" fg:x="507" fg:w="1"/><text x="41.5031%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.2531%" y="581" width="0.0814%" height="15" fill="rgb(245,223,24)" fg:x="507" fg:w="1"/><text x="41.5031%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (40 samples, 3.25%)</title><rect x="38.2425%" y="645" width="3.2547%" height="15" fill="rgb(205,176,3)" fg:x="470" fg:w="40"/><text x="38.4925%" y="655.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 3.01%)</title><rect x="38.4866%" y="629" width="3.0106%" height="15" fill="rgb(235,151,15)" fg:x="473" fg:w="37"/><text x="38.7366%" y="639.50">ser..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.3344%" y="613" width="0.1627%" height="15" fill="rgb(237,209,11)" fg:x="508" fg:w="2"/><text x="41.5844%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.4158%" y="597" width="0.0814%" height="15" fill="rgb(243,227,24)" fg:x="509" fg:w="1"/><text x="41.6658%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.4158%" y="581" width="0.0814%" height="15" fill="rgb(239,193,16)" fg:x="509" fg:w="1"/><text x="41.6658%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.4158%" y="565" width="0.0814%" height="15" fill="rgb(231,27,9)" fg:x="509" fg:w="1"/><text x="41.6658%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.4158%" y="549" width="0.0814%" height="15" fill="rgb(219,169,10)" fg:x="509" fg:w="1"/><text x="41.6658%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.4158%" y="533" width="0.0814%" height="15" fill="rgb(244,229,43)" fg:x="509" fg:w="1"/><text x="41.6658%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.5785%" y="613" width="0.0814%" height="15" fill="rgb(254,38,20)" fg:x="511" fg:w="1"/><text x="41.8285%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="41.6599%" y="597" width="0.2441%" height="15" fill="rgb(250,47,30)" fg:x="512" fg:w="3"/><text x="41.9099%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.7413%" y="581" width="0.1627%" height="15" fill="rgb(224,124,36)" fg:x="513" fg:w="2"/><text x="41.9913%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9854%" y="565" width="0.0814%" height="15" fill="rgb(246,68,51)" fg:x="516" fg:w="1"/><text x="42.2354%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.0667%" y="565" width="0.0814%" height="15" fill="rgb(253,43,49)" fg:x="517" fg:w="1"/><text x="42.3167%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0667%" y="549" width="0.0814%" height="15" fill="rgb(219,54,36)" fg:x="517" fg:w="1"/><text x="42.3167%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1481%" y="533" width="0.0814%" height="15" fill="rgb(227,133,34)" fg:x="518" fg:w="1"/><text x="42.3981%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="42.1481%" y="565" width="0.1627%" height="15" fill="rgb(247,227,15)" fg:x="518" fg:w="2"/><text x="42.3981%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="42.1481%" y="549" width="0.1627%" height="15" fill="rgb(229,96,14)" fg:x="518" fg:w="2"/><text x="42.3981%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.2295%" y="533" width="0.0814%" height="15" fill="rgb(220,79,17)" fg:x="519" fg:w="1"/><text x="42.4795%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.2295%" y="517" width="0.0814%" height="15" fill="rgb(205,131,53)" fg:x="519" fg:w="1"/><text x="42.4795%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.98%)</title><rect x="41.4972%" y="645" width="0.9764%" height="15" fill="rgb(209,50,29)" fg:x="510" fg:w="12"/><text x="41.7472%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.90%)</title><rect x="41.5785%" y="629" width="0.8950%" height="15" fill="rgb(245,86,46)" fg:x="511" fg:w="11"/><text x="41.8285%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="41.6599%" y="613" width="0.8137%" height="15" fill="rgb(235,66,46)" fg:x="512" fg:w="10"/><text x="41.9099%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="41.9040%" y="597" width="0.5696%" height="15" fill="rgb(232,148,31)" fg:x="515" fg:w="7"/><text x="42.1540%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="41.9854%" y="581" width="0.4882%" height="15" fill="rgb(217,149,8)" fg:x="516" fg:w="6"/><text x="42.2354%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="42.3108%" y="565" width="0.1627%" height="15" fill="rgb(209,183,11)" fg:x="520" fg:w="2"/><text x="42.5608%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.3922%" y="549" width="0.0814%" height="15" fill="rgb(208,55,20)" fg:x="521" fg:w="1"/><text x="42.6422%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.3922%" y="533" width="0.0814%" height="15" fill="rgb(218,39,14)" fg:x="521" fg:w="1"/><text x="42.6422%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.4736%" y="581" width="0.1627%" height="15" fill="rgb(216,169,33)" fg:x="522" fg:w="2"/><text x="42.7236%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7990%" y="565" width="0.0814%" height="15" fill="rgb(233,80,24)" fg:x="526" fg:w="1"/><text x="43.0490%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.8804%" y="565" width="0.0814%" height="15" fill="rgb(213,179,31)" fg:x="527" fg:w="1"/><text x="43.1304%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.0431%" y="549" width="0.2441%" height="15" fill="rgb(209,19,5)" fg:x="529" fg:w="3"/><text x="43.2931%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2872%" y="549" width="0.0814%" height="15" fill="rgb(219,18,35)" fg:x="532" fg:w="1"/><text x="43.5372%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.3686%" y="533" width="0.1627%" height="15" fill="rgb(209,169,16)" fg:x="533" fg:w="2"/><text x="43.6186%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="43.5313%" y="533" width="0.1627%" height="15" fill="rgb(245,90,51)" fg:x="535" fg:w="2"/><text x="43.7813%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="43.6941%" y="533" width="0.1627%" height="15" fill="rgb(220,99,45)" fg:x="537" fg:w="2"/><text x="43.9441%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.7754%" y="517" width="0.0814%" height="15" fill="rgb(249,89,25)" fg:x="538" fg:w="1"/><text x="44.0254%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.7754%" y="501" width="0.0814%" height="15" fill="rgb(239,193,0)" fg:x="538" fg:w="1"/><text x="44.0254%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7754%" y="485" width="0.0814%" height="15" fill="rgb(231,126,1)" fg:x="538" fg:w="1"/><text x="44.0254%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.8568%" y="517" width="0.0814%" height="15" fill="rgb(243,166,3)" fg:x="539" fg:w="1"/><text x="44.1068%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.9382%" y="501" width="0.1627%" height="15" fill="rgb(223,22,34)" fg:x="540" fg:w="2"/><text x="44.1882%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1009%" y="501" width="0.0814%" height="15" fill="rgb(251,52,51)" fg:x="542" fg:w="1"/><text x="44.3509%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (22 samples, 1.79%)</title><rect x="42.4736%" y="613" width="1.7901%" height="15" fill="rgb(221,165,28)" fg:x="522" fg:w="22"/><text x="42.7236%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (22 samples, 1.79%)</title><rect x="42.4736%" y="597" width="1.7901%" height="15" fill="rgb(218,121,47)" fg:x="522" fg:w="22"/><text x="42.7236%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.63%)</title><rect x="42.6363%" y="581" width="1.6273%" height="15" fill="rgb(209,120,9)" fg:x="524" fg:w="20"/><text x="42.8863%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.30%)</title><rect x="42.9618%" y="565" width="1.3019%" height="15" fill="rgb(236,68,12)" fg:x="528" fg:w="16"/><text x="43.2118%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="43.3686%" y="549" width="0.8950%" height="15" fill="rgb(225,194,26)" fg:x="533" fg:w="11"/><text x="43.6186%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="43.8568%" y="533" width="0.4068%" height="15" fill="rgb(231,84,39)" fg:x="539" fg:w="5"/><text x="44.1068%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="43.9382%" y="517" width="0.3255%" height="15" fill="rgb(210,11,45)" fg:x="540" fg:w="4"/><text x="44.1882%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.1823%" y="501" width="0.0814%" height="15" fill="rgb(224,54,52)" fg:x="543" fg:w="1"/><text x="44.4323%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.1823%" y="485" width="0.0814%" height="15" fill="rgb(238,102,14)" fg:x="543" fg:w="1"/><text x="44.4323%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1823%" y="469" width="0.0814%" height="15" fill="rgb(243,160,52)" fg:x="543" fg:w="1"/><text x="44.4323%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="44.2636%" y="613" width="0.1627%" height="15" fill="rgb(216,114,19)" fg:x="544" fg:w="2"/><text x="44.5136%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="44.6705%" y="549" width="0.0814%" height="15" fill="rgb(244,166,37)" fg:x="549" fg:w="1"/><text x="44.9205%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="44.6705%" y="533" width="0.0814%" height="15" fill="rgb(246,29,44)" fg:x="549" fg:w="1"/><text x="44.9205%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (32 samples, 2.60%)</title><rect x="42.4736%" y="629" width="2.6037%" height="15" fill="rgb(215,56,53)" fg:x="522" fg:w="32"/><text x="42.7236%" y="639.50">&lt;k..</text></g><g><title>treediff::diff::diff (8 samples, 0.65%)</title><rect x="44.4264%" y="613" width="0.6509%" height="15" fill="rgb(217,60,2)" fg:x="546" fg:w="8"/><text x="44.6764%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="44.4264%" y="597" width="0.6509%" height="15" fill="rgb(207,26,24)" fg:x="546" fg:w="8"/><text x="44.6764%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.65%)</title><rect x="44.4264%" y="581" width="0.6509%" height="15" fill="rgb(252,210,15)" fg:x="546" fg:w="8"/><text x="44.6764%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.49%)</title><rect x="44.5891%" y="565" width="0.4882%" height="15" fill="rgb(253,209,26)" fg:x="548" fg:w="6"/><text x="44.8391%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="44.7518%" y="549" width="0.3255%" height="15" fill="rgb(238,170,14)" fg:x="550" fg:w="4"/><text x="45.0018%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="44.8332%" y="533" width="0.2441%" height="15" fill="rgb(216,178,15)" fg:x="551" fg:w="3"/><text x="45.0832%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="44.8332%" y="517" width="0.2441%" height="15" fill="rgb(250,197,2)" fg:x="551" fg:w="3"/><text x="45.0832%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="44.8332%" y="501" width="0.2441%" height="15" fill="rgb(212,70,42)" fg:x="551" fg:w="3"/><text x="45.0832%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.3214%" y="597" width="0.1627%" height="15" fill="rgb(227,213,9)" fg:x="557" fg:w="2"/><text x="45.5714%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="45.4841%" y="597" width="0.3255%" height="15" fill="rgb(245,99,25)" fg:x="559" fg:w="4"/><text x="45.7341%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.6469%" y="581" width="0.1627%" height="15" fill="rgb(250,82,29)" fg:x="561" fg:w="2"/><text x="45.8969%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.7282%" y="565" width="0.0814%" height="15" fill="rgb(241,226,54)" fg:x="562" fg:w="1"/><text x="45.9782%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="45.8096%" y="597" width="0.0814%" height="15" fill="rgb(221,99,41)" fg:x="563" fg:w="1"/><text x="46.0596%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="45.8096%" y="581" width="0.0814%" height="15" fill="rgb(213,90,21)" fg:x="563" fg:w="1"/><text x="46.0596%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="45.8096%" y="565" width="0.0814%" height="15" fill="rgb(205,208,24)" fg:x="563" fg:w="1"/><text x="46.0596%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8910%" y="565" width="0.0814%" height="15" fill="rgb(246,31,12)" fg:x="564" fg:w="1"/><text x="46.1410%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="45.8910%" y="597" width="0.1627%" height="15" fill="rgb(213,154,6)" fg:x="564" fg:w="2"/><text x="46.1410%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="45.8910%" y="581" width="0.1627%" height="15" fill="rgb(222,163,29)" fg:x="564" fg:w="2"/><text x="46.1410%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9723%" y="565" width="0.0814%" height="15" fill="rgb(227,201,8)" fg:x="565" fg:w="1"/><text x="46.2223%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.2164%" y="549" width="0.1627%" height="15" fill="rgb(233,9,32)" fg:x="568" fg:w="2"/><text x="46.4664%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2978%" y="533" width="0.0814%" height="15" fill="rgb(217,54,24)" fg:x="569" fg:w="1"/><text x="46.5478%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2978%" y="517" width="0.0814%" height="15" fill="rgb(235,192,0)" fg:x="569" fg:w="1"/><text x="46.5478%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="46.3792%" y="533" width="0.0814%" height="15" fill="rgb(235,45,9)" fg:x="570" fg:w="1"/><text x="46.6292%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4605%" y="501" width="0.0814%" height="15" fill="rgb(246,42,40)" fg:x="571" fg:w="1"/><text x="46.7105%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="46.4605%" y="517" width="0.1627%" height="15" fill="rgb(248,111,24)" fg:x="571" fg:w="2"/><text x="46.7105%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="46.5419%" y="501" width="0.0814%" height="15" fill="rgb(249,65,22)" fg:x="572" fg:w="1"/><text x="46.7919%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5419%" y="485" width="0.0814%" height="15" fill="rgb(238,111,51)" fg:x="572" fg:w="1"/><text x="46.7919%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="46.3792%" y="549" width="0.3255%" height="15" fill="rgb(250,118,22)" fg:x="570" fg:w="4"/><text x="46.6292%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="46.4605%" y="533" width="0.2441%" height="15" fill="rgb(234,84,26)" fg:x="571" fg:w="3"/><text x="46.7105%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6233%" y="517" width="0.0814%" height="15" fill="rgb(243,172,12)" fg:x="573" fg:w="1"/><text x="46.8733%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7046%" y="517" width="0.0814%" height="15" fill="rgb(236,150,49)" fg:x="574" fg:w="1"/><text x="46.9546%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7046%" y="501" width="0.0814%" height="15" fill="rgb(225,197,26)" fg:x="574" fg:w="1"/><text x="46.9546%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7046%" y="485" width="0.0814%" height="15" fill="rgb(214,17,42)" fg:x="574" fg:w="1"/><text x="46.9546%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="46.8674%" y="469" width="0.0814%" height="15" fill="rgb(224,165,40)" fg:x="576" fg:w="1"/><text x="47.1174%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.1928%" y="437" width="0.0814%" height="15" fill="rgb(246,100,4)" fg:x="580" fg:w="1"/><text x="47.4428%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="47.2742%" y="437" width="0.0814%" height="15" fill="rgb(222,103,0)" fg:x="581" fg:w="1"/><text x="47.5242%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="46.9487%" y="469" width="0.5696%" height="15" fill="rgb(227,189,26)" fg:x="577" fg:w="7"/><text x="47.1987%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="47.1115%" y="453" width="0.4068%" height="15" fill="rgb(214,202,17)" fg:x="579" fg:w="5"/><text x="47.3615%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="47.3556%" y="437" width="0.1627%" height="15" fill="rgb(229,111,3)" fg:x="582" fg:w="2"/><text x="47.6056%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4369%" y="421" width="0.0814%" height="15" fill="rgb(229,172,15)" fg:x="583" fg:w="1"/><text x="47.6869%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="46.8674%" y="501" width="0.7323%" height="15" fill="rgb(230,224,35)" fg:x="576" fg:w="9"/><text x="47.1174%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="46.8674%" y="485" width="0.7323%" height="15" fill="rgb(251,141,6)" fg:x="576" fg:w="9"/><text x="47.1174%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5183%" y="469" width="0.0814%" height="15" fill="rgb(225,208,6)" fg:x="584" fg:w="1"/><text x="47.7683%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.55%)</title><rect x="46.2164%" y="565" width="1.5460%" height="15" fill="rgb(246,181,16)" fg:x="568" fg:w="19"/><text x="46.4664%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.06%)</title><rect x="46.7046%" y="549" width="1.0578%" height="15" fill="rgb(227,129,36)" fg:x="574" fg:w="13"/><text x="46.9546%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="46.7046%" y="533" width="1.0578%" height="15" fill="rgb(248,117,24)" fg:x="574" fg:w="13"/><text x="46.9546%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.98%)</title><rect x="46.7860%" y="517" width="0.9764%" height="15" fill="rgb(214,185,35)" fg:x="575" fg:w="12"/><text x="47.0360%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5997%" y="501" width="0.1627%" height="15" fill="rgb(236,150,34)" fg:x="585" fg:w="2"/><text x="47.8497%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.71%)</title><rect x="46.1351%" y="581" width="1.7087%" height="15" fill="rgb(243,228,27)" fg:x="567" fg:w="21"/><text x="46.3851%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="47.7624%" y="565" width="0.0814%" height="15" fill="rgb(245,77,44)" fg:x="587" fg:w="1"/><text x="48.0124%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7624%" y="549" width="0.0814%" height="15" fill="rgb(235,214,42)" fg:x="587" fg:w="1"/><text x="48.0124%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (35 samples, 2.85%)</title><rect x="45.0773%" y="629" width="2.8478%" height="15" fill="rgb(221,74,3)" fg:x="554" fg:w="35"/><text x="45.3273%" y="639.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (35 samples, 2.85%)</title><rect x="45.0773%" y="613" width="2.8478%" height="15" fill="rgb(206,121,29)" fg:x="554" fg:w="35"/><text x="45.3273%" y="623.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.87%)</title><rect x="46.0537%" y="597" width="1.8714%" height="15" fill="rgb(249,131,53)" fg:x="566" fg:w="23"/><text x="46.3037%" y="607.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.8438%" y="581" width="0.0814%" height="15" fill="rgb(236,170,29)" fg:x="588" fg:w="1"/><text x="48.0938%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.4133%" y="517" width="0.0814%" height="15" fill="rgb(247,96,15)" fg:x="595" fg:w="1"/><text x="48.6633%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.7388%" y="453" width="0.0814%" height="15" fill="rgb(211,210,7)" fg:x="599" fg:w="1"/><text x="48.9888%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="48.7388%" y="437" width="0.0814%" height="15" fill="rgb(240,88,50)" fg:x="599" fg:w="1"/><text x="48.9888%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="48.7388%" y="421" width="0.0814%" height="15" fill="rgb(209,229,26)" fg:x="599" fg:w="1"/><text x="48.9888%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.6574%" y="485" width="0.2441%" height="15" fill="rgb(210,68,23)" fg:x="598" fg:w="3"/><text x="48.9074%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.6574%" y="469" width="0.2441%" height="15" fill="rgb(229,180,13)" fg:x="598" fg:w="3"/><text x="48.9074%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8202%" y="453" width="0.0814%" height="15" fill="rgb(236,53,44)" fg:x="600" fg:w="1"/><text x="49.0702%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.8202%" y="437" width="0.0814%" height="15" fill="rgb(244,214,29)" fg:x="600" fg:w="1"/><text x="49.0702%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8202%" y="421" width="0.0814%" height="15" fill="rgb(220,75,29)" fg:x="600" fg:w="1"/><text x="49.0702%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3084%" y="373" width="0.0814%" height="15" fill="rgb(214,183,37)" fg:x="606" fg:w="1"/><text x="49.5584%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.3897%" y="373" width="0.0814%" height="15" fill="rgb(239,117,29)" fg:x="607" fg:w="1"/><text x="49.6397%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3897%" y="357" width="0.0814%" height="15" fill="rgb(237,171,35)" fg:x="607" fg:w="1"/><text x="49.6397%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="49.2270%" y="405" width="0.3255%" height="15" fill="rgb(229,178,53)" fg:x="605" fg:w="4"/><text x="49.4770%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="49.2270%" y="389" width="0.3255%" height="15" fill="rgb(210,102,19)" fg:x="605" fg:w="4"/><text x="49.4770%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4711%" y="373" width="0.0814%" height="15" fill="rgb(235,127,22)" fg:x="608" fg:w="1"/><text x="49.7211%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.4711%" y="357" width="0.0814%" height="15" fill="rgb(244,31,31)" fg:x="608" fg:w="1"/><text x="49.7211%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4711%" y="341" width="0.0814%" height="15" fill="rgb(231,43,21)" fg:x="608" fg:w="1"/><text x="49.7211%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.5525%" y="405" width="0.0814%" height="15" fill="rgb(217,131,35)" fg:x="609" fg:w="1"/><text x="49.8025%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5525%" y="389" width="0.0814%" height="15" fill="rgb(221,149,4)" fg:x="609" fg:w="1"/><text x="49.8025%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="49.0643%" y="437" width="0.7323%" height="15" fill="rgb(232,170,28)" fg:x="603" fg:w="9"/><text x="49.3143%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="49.1456%" y="421" width="0.6509%" height="15" fill="rgb(238,56,10)" fg:x="604" fg:w="8"/><text x="49.3956%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.6338%" y="405" width="0.1627%" height="15" fill="rgb(235,196,14)" fg:x="610" fg:w="2"/><text x="49.8838%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.7152%" y="389" width="0.0814%" height="15" fill="rgb(216,45,48)" fg:x="611" fg:w="1"/><text x="49.9652%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.98%)</title><rect x="48.9015%" y="469" width="0.9764%" height="15" fill="rgb(238,213,17)" fg:x="601" fg:w="12"/><text x="49.1515%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.98%)</title><rect x="48.9015%" y="453" width="0.9764%" height="15" fill="rgb(212,13,2)" fg:x="601" fg:w="12"/><text x="49.1515%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.7966%" y="437" width="0.0814%" height="15" fill="rgb(240,114,20)" fg:x="612" fg:w="1"/><text x="50.0466%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.9593%" y="453" width="0.0814%" height="15" fill="rgb(228,41,40)" fg:x="614" fg:w="1"/><text x="50.2093%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="49.8779%" y="469" width="0.2441%" height="15" fill="rgb(244,132,35)" fg:x="613" fg:w="3"/><text x="50.1279%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0407%" y="453" width="0.0814%" height="15" fill="rgb(253,189,4)" fg:x="615" fg:w="1"/><text x="50.2907%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.71%)</title><rect x="48.5761%" y="501" width="1.7087%" height="15" fill="rgb(224,37,19)" fg:x="597" fg:w="21"/><text x="48.8261%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.38%)</title><rect x="48.9015%" y="485" width="1.3832%" height="15" fill="rgb(235,223,18)" fg:x="601" fg:w="17"/><text x="49.1515%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.1221%" y="469" width="0.1627%" height="15" fill="rgb(235,163,25)" fg:x="616" fg:w="2"/><text x="50.3721%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2034%" y="453" width="0.0814%" height="15" fill="rgb(217,145,28)" fg:x="617" fg:w="1"/><text x="50.4534%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.2034%" y="437" width="0.0814%" height="15" fill="rgb(223,223,32)" fg:x="617" fg:w="1"/><text x="50.4534%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.12%)</title><rect x="48.3320%" y="533" width="2.1155%" height="15" fill="rgb(227,189,39)" fg:x="594" fg:w="26"/><text x="48.5820%" y="543.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.95%)</title><rect x="48.4947%" y="517" width="1.9528%" height="15" fill="rgb(248,10,22)" fg:x="596" fg:w="24"/><text x="48.7447%" y="527.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.2848%" y="501" width="0.1627%" height="15" fill="rgb(248,46,39)" fg:x="618" fg:w="2"/><text x="50.5348%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.3662%" y="485" width="0.0814%" height="15" fill="rgb(248,113,48)" fg:x="619" fg:w="1"/><text x="50.6162%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3662%" y="469" width="0.0814%" height="15" fill="rgb(245,16,25)" fg:x="619" fg:w="1"/><text x="50.6162%" y="479.50"></text></g><g><title>engine::session::Session::close (164 samples, 13.34%)</title><rect x="37.5102%" y="725" width="13.3442%" height="15" fill="rgb(249,152,16)" fg:x="461" fg:w="164"/><text x="37.7602%" y="735.50">engine::session::Ses..</text></g><g><title>engine::session::state::State::close (161 samples, 13.10%)</title><rect x="37.7543%" y="709" width="13.1001%" height="15" fill="rgb(250,16,1)" fg:x="464" fg:w="161"/><text x="38.0043%" y="719.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (161 samples, 13.10%)</title><rect x="37.7543%" y="693" width="13.1001%" height="15" fill="rgb(249,138,3)" fg:x="464" fg:w="161"/><text x="38.0043%" y="703.50">engine::session::sta..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (158 samples, 12.86%)</title><rect x="37.9984%" y="677" width="12.8560%" height="15" fill="rgb(227,71,41)" fg:x="467" fg:w="158"/><text x="38.2484%" y="687.50">engine::session::in..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (156 samples, 12.69%)</title><rect x="38.1611%" y="661" width="12.6932%" height="15" fill="rgb(209,184,23)" fg:x="469" fg:w="156"/><text x="38.4111%" y="671.50">engine::session::st..</text></g><g><title>kernel::model::any_entity_changes (103 samples, 8.38%)</title><rect x="42.4736%" y="645" width="8.3808%" height="15" fill="rgb(223,215,31)" fg:x="522" fg:w="103"/><text x="42.7236%" y="655.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (36 samples, 2.93%)</title><rect x="47.9251%" y="629" width="2.9292%" height="15" fill="rgb(210,146,28)" fg:x="589" fg:w="36"/><text x="48.1751%" y="639.50">se..</text></g><g><title>serde_json::de::from_trait (36 samples, 2.93%)</title><rect x="47.9251%" y="613" width="2.9292%" height="15" fill="rgb(209,183,41)" fg:x="589" fg:w="36"/><text x="48.1751%" y="623.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.93%)</title><rect x="47.9251%" y="597" width="2.9292%" height="15" fill="rgb(209,224,45)" fg:x="589" fg:w="36"/><text x="48.1751%" y="607.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (36 samples, 2.93%)</title><rect x="47.9251%" y="581" width="2.9292%" height="15" fill="rgb(224,209,51)" fg:x="589" fg:w="36"/><text x="48.1751%" y="591.50">&lt;s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.93%)</title><rect x="47.9251%" y="565" width="2.9292%" height="15" fill="rgb(223,17,39)" fg:x="589" fg:w="36"/><text x="48.1751%" y="575.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.60%)</title><rect x="48.2506%" y="549" width="2.6037%" height="15" fill="rgb(234,204,37)" fg:x="593" fg:w="32"/><text x="48.5006%" y="559.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.41%)</title><rect x="50.4475%" y="533" width="0.4068%" height="15" fill="rgb(236,120,5)" fg:x="620" fg:w="5"/><text x="50.6975%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.6916%" y="517" width="0.1627%" height="15" fill="rgb(248,97,27)" fg:x="623" fg:w="2"/><text x="50.9416%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="50.9357%" y="613" width="0.1627%" height="15" fill="rgb(240,66,17)" fg:x="626" fg:w="2"/><text x="51.1857%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="50.9357%" y="597" width="0.1627%" height="15" fill="rgb(210,79,3)" fg:x="626" fg:w="2"/><text x="51.1857%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="51.0171%" y="581" width="0.0814%" height="15" fill="rgb(214,176,27)" fg:x="627" fg:w="1"/><text x="51.2671%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="51.0171%" y="565" width="0.0814%" height="15" fill="rgb(235,185,3)" fg:x="627" fg:w="1"/><text x="51.2671%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0985%" y="453" width="0.0814%" height="15" fill="rgb(227,24,12)" fg:x="628" fg:w="1"/><text x="51.3485%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0985%" y="437" width="0.0814%" height="15" fill="rgb(252,169,48)" fg:x="628" fg:w="1"/><text x="51.3485%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0985%" y="421" width="0.0814%" height="15" fill="rgb(212,65,1)" fg:x="628" fg:w="1"/><text x="51.3485%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0985%" y="405" width="0.0814%" height="15" fill="rgb(242,39,24)" fg:x="628" fg:w="1"/><text x="51.3485%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="51.0985%" y="533" width="0.1627%" height="15" fill="rgb(249,32,23)" fg:x="628" fg:w="2"/><text x="51.3485%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="51.0985%" y="517" width="0.1627%" height="15" fill="rgb(251,195,23)" fg:x="628" fg:w="2"/><text x="51.3485%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="51.0985%" y="501" width="0.1627%" height="15" fill="rgb(236,174,8)" fg:x="628" fg:w="2"/><text x="51.3485%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="51.0985%" y="485" width="0.1627%" height="15" fill="rgb(220,197,8)" fg:x="628" fg:w="2"/><text x="51.3485%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="51.0985%" y="469" width="0.1627%" height="15" fill="rgb(240,108,37)" fg:x="628" fg:w="2"/><text x="51.3485%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.1798%" y="453" width="0.0814%" height="15" fill="rgb(232,176,24)" fg:x="629" fg:w="1"/><text x="51.4298%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1798%" y="437" width="0.0814%" height="15" fill="rgb(243,35,29)" fg:x="629" fg:w="1"/><text x="51.4298%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.1798%" y="421" width="0.0814%" height="15" fill="rgb(210,37,18)" fg:x="629" fg:w="1"/><text x="51.4298%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1798%" y="405" width="0.0814%" height="15" fill="rgb(224,184,40)" fg:x="629" fg:w="1"/><text x="51.4298%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3426%" y="437" width="0.0814%" height="15" fill="rgb(236,39,29)" fg:x="631" fg:w="1"/><text x="51.5926%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.4239%" y="405" width="0.0814%" height="15" fill="rgb(232,48,39)" fg:x="632" fg:w="1"/><text x="51.6739%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4239%" y="389" width="0.0814%" height="15" fill="rgb(236,34,42)" fg:x="632" fg:w="1"/><text x="51.6739%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5053%" y="389" width="0.0814%" height="15" fill="rgb(243,106,37)" fg:x="633" fg:w="1"/><text x="51.7553%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5053%" y="373" width="0.0814%" height="15" fill="rgb(218,96,6)" fg:x="633" fg:w="1"/><text x="51.7553%" y="383.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="51.2612%" y="517" width="0.4068%" height="15" fill="rgb(235,130,12)" fg:x="630" fg:w="5"/><text x="51.5112%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="51.2612%" y="501" width="0.4068%" height="15" fill="rgb(231,95,0)" fg:x="630" fg:w="5"/><text x="51.5112%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="51.2612%" y="485" width="0.4068%" height="15" fill="rgb(228,12,23)" fg:x="630" fg:w="5"/><text x="51.5112%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="51.3426%" y="469" width="0.3255%" height="15" fill="rgb(216,12,1)" fg:x="631" fg:w="4"/><text x="51.5926%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="51.3426%" y="453" width="0.3255%" height="15" fill="rgb(219,59,3)" fg:x="631" fg:w="4"/><text x="51.5926%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.4239%" y="437" width="0.2441%" height="15" fill="rgb(215,208,46)" fg:x="632" fg:w="3"/><text x="51.6739%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="51.4239%" y="421" width="0.2441%" height="15" fill="rgb(254,224,29)" fg:x="632" fg:w="3"/><text x="51.6739%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.5053%" y="405" width="0.1627%" height="15" fill="rgb(232,14,29)" fg:x="633" fg:w="2"/><text x="51.7553%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.5867%" y="389" width="0.0814%" height="15" fill="rgb(208,45,52)" fg:x="634" fg:w="1"/><text x="51.8367%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.5867%" y="373" width="0.0814%" height="15" fill="rgb(234,191,28)" fg:x="634" fg:w="1"/><text x="51.8367%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.5867%" y="357" width="0.0814%" height="15" fill="rgb(244,67,43)" fg:x="634" fg:w="1"/><text x="51.8367%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="51.6680%" y="485" width="0.0814%" height="15" fill="rgb(236,189,24)" fg:x="635" fg:w="1"/><text x="51.9180%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7494%" y="453" width="0.0814%" height="15" fill="rgb(239,214,33)" fg:x="636" fg:w="1"/><text x="51.9994%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7494%" y="437" width="0.0814%" height="15" fill="rgb(226,176,41)" fg:x="636" fg:w="1"/><text x="51.9994%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8308%" y="437" width="0.0814%" height="15" fill="rgb(248,47,8)" fg:x="637" fg:w="1"/><text x="52.0808%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.8308%" y="421" width="0.0814%" height="15" fill="rgb(218,81,44)" fg:x="637" fg:w="1"/><text x="52.0808%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="51.8308%" y="405" width="0.0814%" height="15" fill="rgb(213,98,6)" fg:x="637" fg:w="1"/><text x="52.0808%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8308%" y="389" width="0.0814%" height="15" fill="rgb(222,85,22)" fg:x="637" fg:w="1"/><text x="52.0808%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.8308%" y="373" width="0.0814%" height="15" fill="rgb(239,46,39)" fg:x="637" fg:w="1"/><text x="52.0808%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.9121%" y="437" width="0.0814%" height="15" fill="rgb(237,12,29)" fg:x="638" fg:w="1"/><text x="52.1621%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.9121%" y="421" width="0.0814%" height="15" fill="rgb(214,77,8)" fg:x="638" fg:w="1"/><text x="52.1621%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.9121%" y="405" width="0.0814%" height="15" fill="rgb(217,168,37)" fg:x="638" fg:w="1"/><text x="52.1621%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.9121%" y="389" width="0.0814%" height="15" fill="rgb(221,217,23)" fg:x="638" fg:w="1"/><text x="52.1621%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9121%" y="373" width="0.0814%" height="15" fill="rgb(243,229,36)" fg:x="638" fg:w="1"/><text x="52.1621%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.9935%" y="389" width="0.0814%" height="15" fill="rgb(251,163,40)" fg:x="639" fg:w="1"/><text x="52.2435%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="51.9935%" y="373" width="0.0814%" height="15" fill="rgb(237,222,12)" fg:x="639" fg:w="1"/><text x="52.2435%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.9935%" y="357" width="0.0814%" height="15" fill="rgb(248,132,6)" fg:x="639" fg:w="1"/><text x="52.2435%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.9935%" y="341" width="0.0814%" height="15" fill="rgb(227,167,50)" fg:x="639" fg:w="1"/><text x="52.2435%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.1562%" y="341" width="0.0814%" height="15" fill="rgb(242,84,37)" fg:x="641" fg:w="1"/><text x="52.4062%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="52.1562%" y="325" width="0.0814%" height="15" fill="rgb(212,4,50)" fg:x="641" fg:w="1"/><text x="52.4062%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="51.7494%" y="485" width="0.5696%" height="15" fill="rgb(230,228,32)" fg:x="636" fg:w="7"/><text x="51.9994%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="51.7494%" y="469" width="0.5696%" height="15" fill="rgb(248,217,23)" fg:x="636" fg:w="7"/><text x="51.9994%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="51.8308%" y="453" width="0.4882%" height="15" fill="rgb(238,197,32)" fg:x="637" fg:w="6"/><text x="52.0808%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="51.9935%" y="437" width="0.3255%" height="15" fill="rgb(236,106,1)" fg:x="639" fg:w="4"/><text x="52.2435%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="51.9935%" y="421" width="0.3255%" height="15" fill="rgb(219,228,13)" fg:x="639" fg:w="4"/><text x="52.2435%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.33%)</title><rect x="51.9935%" y="405" width="0.3255%" height="15" fill="rgb(238,30,35)" fg:x="639" fg:w="4"/><text x="52.2435%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.0749%" y="389" width="0.2441%" height="15" fill="rgb(236,70,23)" fg:x="640" fg:w="3"/><text x="52.3249%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.1562%" y="373" width="0.1627%" height="15" fill="rgb(249,104,48)" fg:x="641" fg:w="2"/><text x="52.4062%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="52.1562%" y="357" width="0.1627%" height="15" fill="rgb(254,117,50)" fg:x="641" fg:w="2"/><text x="52.4062%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2376%" y="341" width="0.0814%" height="15" fill="rgb(223,152,4)" fg:x="642" fg:w="1"/><text x="52.4876%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2376%" y="325" width="0.0814%" height="15" fill="rgb(245,6,2)" fg:x="642" fg:w="1"/><text x="52.4876%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="52.2376%" y="309" width="0.0814%" height="15" fill="rgb(249,150,24)" fg:x="642" fg:w="1"/><text x="52.4876%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.2376%" y="293" width="0.0814%" height="15" fill="rgb(228,185,42)" fg:x="642" fg:w="1"/><text x="52.4876%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="52.2376%" y="277" width="0.0814%" height="15" fill="rgb(226,39,33)" fg:x="642" fg:w="1"/><text x="52.4876%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.2376%" y="261" width="0.0814%" height="15" fill="rgb(221,166,19)" fg:x="642" fg:w="1"/><text x="52.4876%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.2376%" y="245" width="0.0814%" height="15" fill="rgb(209,109,2)" fg:x="642" fg:w="1"/><text x="52.4876%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2376%" y="229" width="0.0814%" height="15" fill="rgb(252,216,26)" fg:x="642" fg:w="1"/><text x="52.4876%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.30%)</title><rect x="51.0985%" y="581" width="1.3019%" height="15" fill="rgb(227,173,36)" fg:x="628" fg:w="16"/><text x="51.3485%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.30%)</title><rect x="51.0985%" y="565" width="1.3019%" height="15" fill="rgb(209,90,7)" fg:x="628" fg:w="16"/><text x="51.3485%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.30%)</title><rect x="51.0985%" y="549" width="1.3019%" height="15" fill="rgb(250,194,11)" fg:x="628" fg:w="16"/><text x="51.3485%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.14%)</title><rect x="51.2612%" y="533" width="1.1391%" height="15" fill="rgb(220,72,50)" fg:x="630" fg:w="14"/><text x="51.5112%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="51.6680%" y="517" width="0.7323%" height="15" fill="rgb(222,106,48)" fg:x="635" fg:w="9"/><text x="51.9180%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="51.6680%" y="501" width="0.7323%" height="15" fill="rgb(216,220,45)" fg:x="635" fg:w="9"/><text x="51.9180%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.3190%" y="485" width="0.0814%" height="15" fill="rgb(234,112,18)" fg:x="643" fg:w="1"/><text x="52.5690%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.3190%" y="469" width="0.0814%" height="15" fill="rgb(206,179,9)" fg:x="643" fg:w="1"/><text x="52.5690%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3190%" y="453" width="0.0814%" height="15" fill="rgb(215,115,40)" fg:x="643" fg:w="1"/><text x="52.5690%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (19 samples, 1.55%)</title><rect x="50.9357%" y="629" width="1.5460%" height="15" fill="rgb(222,69,34)" fg:x="626" fg:w="19"/><text x="51.1857%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.38%)</title><rect x="51.0985%" y="613" width="1.3832%" height="15" fill="rgb(209,161,10)" fg:x="628" fg:w="17"/><text x="51.3485%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.38%)</title><rect x="51.0985%" y="597" width="1.3832%" height="15" fill="rgb(217,6,38)" fg:x="628" fg:w="17"/><text x="51.3485%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.4003%" y="581" width="0.0814%" height="15" fill="rgb(229,229,48)" fg:x="644" fg:w="1"/><text x="52.6503%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.4003%" y="565" width="0.0814%" height="15" fill="rgb(225,21,28)" fg:x="644" fg:w="1"/><text x="52.6503%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="52.4817%" y="597" width="0.0814%" height="15" fill="rgb(206,33,13)" fg:x="645" fg:w="1"/><text x="52.7317%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.4817%" y="581" width="0.0814%" height="15" fill="rgb(242,178,17)" fg:x="645" fg:w="1"/><text x="52.7317%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.4817%" y="565" width="0.0814%" height="15" fill="rgb(220,162,5)" fg:x="645" fg:w="1"/><text x="52.7317%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4817%" y="549" width="0.0814%" height="15" fill="rgb(210,33,43)" fg:x="645" fg:w="1"/><text x="52.7317%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4817%" y="533" width="0.0814%" height="15" fill="rgb(216,116,54)" fg:x="645" fg:w="1"/><text x="52.7317%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4817%" y="517" width="0.0814%" height="15" fill="rgb(249,92,24)" fg:x="645" fg:w="1"/><text x="52.7317%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.4817%" y="501" width="0.0814%" height="15" fill="rgb(231,189,14)" fg:x="645" fg:w="1"/><text x="52.7317%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.4817%" y="485" width="0.0814%" height="15" fill="rgb(230,8,41)" fg:x="645" fg:w="1"/><text x="52.7317%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.4817%" y="469" width="0.0814%" height="15" fill="rgb(249,7,27)" fg:x="645" fg:w="1"/><text x="52.7317%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4817%" y="453" width="0.0814%" height="15" fill="rgb(232,86,5)" fg:x="645" fg:w="1"/><text x="52.7317%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4817%" y="437" width="0.0814%" height="15" fill="rgb(224,175,18)" fg:x="645" fg:w="1"/><text x="52.7317%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (21 samples, 1.71%)</title><rect x="50.9357%" y="645" width="1.7087%" height="15" fill="rgb(220,129,12)" fg:x="626" fg:w="21"/><text x="51.1857%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="52.4817%" y="629" width="0.1627%" height="15" fill="rgb(210,19,36)" fg:x="645" fg:w="2"/><text x="52.7317%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="52.4817%" y="613" width="0.1627%" height="15" fill="rgb(219,96,14)" fg:x="645" fg:w="2"/><text x="52.7317%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5631%" y="597" width="0.0814%" height="15" fill="rgb(249,106,1)" fg:x="646" fg:w="1"/><text x="52.8131%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6444%" y="645" width="0.0814%" height="15" fill="rgb(249,155,20)" fg:x="647" fg:w="1"/><text x="52.8944%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6444%" y="629" width="0.0814%" height="15" fill="rgb(244,168,9)" fg:x="647" fg:w="1"/><text x="52.8944%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6444%" y="613" width="0.0814%" height="15" fill="rgb(216,23,50)" fg:x="647" fg:w="1"/><text x="52.8944%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6444%" y="597" width="0.0814%" height="15" fill="rgb(224,219,20)" fg:x="647" fg:w="1"/><text x="52.8944%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6444%" y="581" width="0.0814%" height="15" fill="rgb(222,156,15)" fg:x="647" fg:w="1"/><text x="52.8944%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6444%" y="565" width="0.0814%" height="15" fill="rgb(231,97,17)" fg:x="647" fg:w="1"/><text x="52.8944%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6444%" y="549" width="0.0814%" height="15" fill="rgb(218,70,48)" fg:x="647" fg:w="1"/><text x="52.8944%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6444%" y="533" width="0.0814%" height="15" fill="rgb(212,196,52)" fg:x="647" fg:w="1"/><text x="52.8944%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6444%" y="517" width="0.0814%" height="15" fill="rgb(243,203,18)" fg:x="647" fg:w="1"/><text x="52.8944%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6444%" y="501" width="0.0814%" height="15" fill="rgb(252,125,41)" fg:x="647" fg:w="1"/><text x="52.8944%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6444%" y="485" width="0.0814%" height="15" fill="rgb(223,180,33)" fg:x="647" fg:w="1"/><text x="52.8944%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6444%" y="469" width="0.0814%" height="15" fill="rgb(254,159,46)" fg:x="647" fg:w="1"/><text x="52.8944%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6444%" y="453" width="0.0814%" height="15" fill="rgb(254,38,10)" fg:x="647" fg:w="1"/><text x="52.8944%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.7258%" y="501" width="0.0814%" height="15" fill="rgb(208,217,32)" fg:x="648" fg:w="1"/><text x="52.9758%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.7258%" y="485" width="0.0814%" height="15" fill="rgb(221,120,13)" fg:x="648" fg:w="1"/><text x="52.9758%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.7258%" y="469" width="0.0814%" height="15" fill="rgb(246,54,52)" fg:x="648" fg:w="1"/><text x="52.9758%" y="479.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="52.8072%" y="501" width="0.0814%" height="15" fill="rgb(242,34,25)" fg:x="649" fg:w="1"/><text x="53.0572%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8072%" y="485" width="0.0814%" height="15" fill="rgb(247,209,9)" fg:x="649" fg:w="1"/><text x="53.0572%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8072%" y="469" width="0.0814%" height="15" fill="rgb(228,71,26)" fg:x="649" fg:w="1"/><text x="53.0572%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8072%" y="453" width="0.0814%" height="15" fill="rgb(222,145,49)" fg:x="649" fg:w="1"/><text x="53.0572%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8072%" y="437" width="0.0814%" height="15" fill="rgb(218,121,17)" fg:x="649" fg:w="1"/><text x="53.0572%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8072%" y="421" width="0.0814%" height="15" fill="rgb(244,50,7)" fg:x="649" fg:w="1"/><text x="53.0572%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8072%" y="405" width="0.0814%" height="15" fill="rgb(246,229,37)" fg:x="649" fg:w="1"/><text x="53.0572%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8072%" y="389" width="0.0814%" height="15" fill="rgb(225,18,5)" fg:x="649" fg:w="1"/><text x="53.0572%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8072%" y="373" width="0.0814%" height="15" fill="rgb(213,204,8)" fg:x="649" fg:w="1"/><text x="53.0572%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8072%" y="357" width="0.0814%" height="15" fill="rgb(238,103,6)" fg:x="649" fg:w="1"/><text x="53.0572%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8072%" y="341" width="0.0814%" height="15" fill="rgb(222,25,35)" fg:x="649" fg:w="1"/><text x="53.0572%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8072%" y="325" width="0.0814%" height="15" fill="rgb(213,203,35)" fg:x="649" fg:w="1"/><text x="53.0572%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8072%" y="309" width="0.0814%" height="15" fill="rgb(221,79,53)" fg:x="649" fg:w="1"/><text x="53.0572%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="52.8072%" y="293" width="0.0814%" height="15" fill="rgb(243,200,35)" fg:x="649" fg:w="1"/><text x="53.0572%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.8072%" y="277" width="0.0814%" height="15" fill="rgb(248,60,25)" fg:x="649" fg:w="1"/><text x="53.0572%" y="287.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="53.0513%" y="453" width="0.2441%" height="15" fill="rgb(227,53,46)" fg:x="652" fg:w="3"/><text x="53.3013%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="53.2954%" y="453" width="0.0814%" height="15" fill="rgb(216,120,32)" fg:x="655" fg:w="1"/><text x="53.5454%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.2954%" y="437" width="0.0814%" height="15" fill="rgb(220,134,1)" fg:x="655" fg:w="1"/><text x="53.5454%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6208%" y="277" width="0.0814%" height="15" fill="rgb(237,168,5)" fg:x="659" fg:w="1"/><text x="53.8708%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6208%" y="261" width="0.0814%" height="15" fill="rgb(231,100,33)" fg:x="659" fg:w="1"/><text x="53.8708%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.6208%" y="245" width="0.0814%" height="15" fill="rgb(236,177,47)" fg:x="659" fg:w="1"/><text x="53.8708%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.6208%" y="229" width="0.0814%" height="15" fill="rgb(235,7,49)" fg:x="659" fg:w="1"/><text x="53.8708%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.6208%" y="213" width="0.0814%" height="15" fill="rgb(232,119,22)" fg:x="659" fg:w="1"/><text x="53.8708%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.6208%" y="197" width="0.0814%" height="15" fill="rgb(254,73,53)" fg:x="659" fg:w="1"/><text x="53.8708%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6208%" y="181" width="0.0814%" height="15" fill="rgb(251,35,20)" fg:x="659" fg:w="1"/><text x="53.8708%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="53.4581%" y="373" width="0.4068%" height="15" fill="rgb(241,119,20)" fg:x="657" fg:w="5"/><text x="53.7081%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.6208%" y="357" width="0.2441%" height="15" fill="rgb(207,102,14)" fg:x="659" fg:w="3"/><text x="53.8708%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.6208%" y="341" width="0.2441%" height="15" fill="rgb(248,201,50)" fg:x="659" fg:w="3"/><text x="53.8708%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="53.6208%" y="325" width="0.2441%" height="15" fill="rgb(222,185,44)" fg:x="659" fg:w="3"/><text x="53.8708%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="53.6208%" y="309" width="0.2441%" height="15" fill="rgb(218,107,18)" fg:x="659" fg:w="3"/><text x="53.8708%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="53.6208%" y="293" width="0.2441%" height="15" fill="rgb(237,177,39)" fg:x="659" fg:w="3"/><text x="53.8708%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="53.7022%" y="277" width="0.1627%" height="15" fill="rgb(246,69,6)" fg:x="660" fg:w="2"/><text x="53.9522%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="53.7022%" y="261" width="0.1627%" height="15" fill="rgb(234,208,37)" fg:x="660" fg:w="2"/><text x="53.9522%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="53.4581%" y="389" width="0.4882%" height="15" fill="rgb(225,4,6)" fg:x="657" fg:w="6"/><text x="53.7081%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8649%" y="373" width="0.0814%" height="15" fill="rgb(233,45,0)" fg:x="662" fg:w="1"/><text x="54.1149%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8649%" y="357" width="0.0814%" height="15" fill="rgb(226,136,5)" fg:x="662" fg:w="1"/><text x="54.1149%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.8649%" y="341" width="0.0814%" height="15" fill="rgb(211,91,47)" fg:x="662" fg:w="1"/><text x="54.1149%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.8649%" y="325" width="0.0814%" height="15" fill="rgb(242,88,51)" fg:x="662" fg:w="1"/><text x="54.1149%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.8649%" y="309" width="0.0814%" height="15" fill="rgb(230,91,28)" fg:x="662" fg:w="1"/><text x="54.1149%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8649%" y="293" width="0.0814%" height="15" fill="rgb(254,186,29)" fg:x="662" fg:w="1"/><text x="54.1149%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8649%" y="277" width="0.0814%" height="15" fill="rgb(238,6,4)" fg:x="662" fg:w="1"/><text x="54.1149%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.8649%" y="261" width="0.0814%" height="15" fill="rgb(221,151,16)" fg:x="662" fg:w="1"/><text x="54.1149%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.8649%" y="245" width="0.0814%" height="15" fill="rgb(251,143,52)" fg:x="662" fg:w="1"/><text x="54.1149%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.8649%" y="229" width="0.0814%" height="15" fill="rgb(206,90,15)" fg:x="662" fg:w="1"/><text x="54.1149%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.8649%" y="213" width="0.0814%" height="15" fill="rgb(218,35,8)" fg:x="662" fg:w="1"/><text x="54.1149%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8649%" y="197" width="0.0814%" height="15" fill="rgb(239,215,6)" fg:x="662" fg:w="1"/><text x="54.1149%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="53.4581%" y="421" width="0.5696%" height="15" fill="rgb(245,116,39)" fg:x="657" fg:w="7"/><text x="53.7081%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="53.4581%" y="405" width="0.5696%" height="15" fill="rgb(242,65,28)" fg:x="657" fg:w="7"/><text x="53.7081%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9463%" y="389" width="0.0814%" height="15" fill="rgb(252,132,53)" fg:x="663" fg:w="1"/><text x="54.1963%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9463%" y="373" width="0.0814%" height="15" fill="rgb(224,159,50)" fg:x="663" fg:w="1"/><text x="54.1963%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9463%" y="357" width="0.0814%" height="15" fill="rgb(224,93,4)" fg:x="663" fg:w="1"/><text x="54.1963%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9463%" y="341" width="0.0814%" height="15" fill="rgb(208,81,34)" fg:x="663" fg:w="1"/><text x="54.1963%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9463%" y="325" width="0.0814%" height="15" fill="rgb(233,92,54)" fg:x="663" fg:w="1"/><text x="54.1963%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9463%" y="309" width="0.0814%" height="15" fill="rgb(237,21,14)" fg:x="663" fg:w="1"/><text x="54.1963%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9463%" y="293" width="0.0814%" height="15" fill="rgb(249,128,51)" fg:x="663" fg:w="1"/><text x="54.1963%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.1090%" y="405" width="0.0814%" height="15" fill="rgb(223,129,24)" fg:x="665" fg:w="1"/><text x="54.3590%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="54.0277%" y="421" width="0.2441%" height="15" fill="rgb(231,168,25)" fg:x="664" fg:w="3"/><text x="54.2777%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.1904%" y="405" width="0.0814%" height="15" fill="rgb(224,39,20)" fg:x="666" fg:w="1"/><text x="54.4404%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2718%" y="357" width="0.0814%" height="15" fill="rgb(225,152,53)" fg:x="667" fg:w="1"/><text x="54.5218%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2718%" y="341" width="0.0814%" height="15" fill="rgb(252,17,24)" fg:x="667" fg:w="1"/><text x="54.5218%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.2718%" y="421" width="0.1627%" height="15" fill="rgb(250,114,30)" fg:x="667" fg:w="2"/><text x="54.5218%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.2718%" y="405" width="0.1627%" height="15" fill="rgb(229,5,4)" fg:x="667" fg:w="2"/><text x="54.5218%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.2718%" y="389" width="0.1627%" height="15" fill="rgb(225,176,49)" fg:x="667" fg:w="2"/><text x="54.5218%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.2718%" y="373" width="0.1627%" height="15" fill="rgb(224,221,49)" fg:x="667" fg:w="2"/><text x="54.5218%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3531%" y="357" width="0.0814%" height="15" fill="rgb(253,169,27)" fg:x="668" fg:w="1"/><text x="54.6031%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.3531%" y="341" width="0.0814%" height="15" fill="rgb(211,206,16)" fg:x="668" fg:w="1"/><text x="54.6031%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.4345%" y="357" width="0.0814%" height="15" fill="rgb(244,87,35)" fg:x="669" fg:w="1"/><text x="54.6845%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4345%" y="341" width="0.0814%" height="15" fill="rgb(246,28,10)" fg:x="669" fg:w="1"/><text x="54.6845%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.5159%" y="325" width="0.0814%" height="15" fill="rgb(229,12,44)" fg:x="670" fg:w="1"/><text x="54.7659%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.5159%" y="309" width="0.0814%" height="15" fill="rgb(210,145,37)" fg:x="670" fg:w="1"/><text x="54.7659%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5972%" y="325" width="0.0814%" height="15" fill="rgb(227,112,52)" fg:x="671" fg:w="1"/><text x="54.8472%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0041%" y="261" width="0.0814%" height="15" fill="rgb(238,155,34)" fg:x="676" fg:w="1"/><text x="55.2541%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (26 samples, 2.12%)</title><rect x="53.0513%" y="469" width="2.1155%" height="15" fill="rgb(239,226,36)" fg:x="652" fg:w="26"/><text x="53.3013%" y="479.50">&lt;..</text></g><g><title>kernel::model::props::load_props (22 samples, 1.79%)</title><rect x="53.3767%" y="453" width="1.7901%" height="15" fill="rgb(230,16,23)" fg:x="656" fg:w="22"/><text x="53.6267%" y="463.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (22 samples, 1.79%)</title><rect x="53.3767%" y="437" width="1.7901%" height="15" fill="rgb(236,171,36)" fg:x="656" fg:w="22"/><text x="53.6267%" y="447.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="54.4345%" y="421" width="0.7323%" height="15" fill="rgb(221,22,14)" fg:x="669" fg:w="9"/><text x="54.6845%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="54.4345%" y="405" width="0.7323%" height="15" fill="rgb(242,43,11)" fg:x="669" fg:w="9"/><text x="54.6845%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="54.4345%" y="389" width="0.7323%" height="15" fill="rgb(232,69,23)" fg:x="669" fg:w="9"/><text x="54.6845%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="54.4345%" y="373" width="0.7323%" height="15" fill="rgb(216,180,54)" fg:x="669" fg:w="9"/><text x="54.6845%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="54.5159%" y="357" width="0.6509%" height="15" fill="rgb(216,5,24)" fg:x="670" fg:w="8"/><text x="54.7659%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="54.5159%" y="341" width="0.6509%" height="15" fill="rgb(225,89,9)" fg:x="670" fg:w="8"/><text x="54.7659%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="54.6786%" y="325" width="0.4882%" height="15" fill="rgb(243,75,33)" fg:x="672" fg:w="6"/><text x="54.9286%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="54.6786%" y="309" width="0.4882%" height="15" fill="rgb(247,141,45)" fg:x="672" fg:w="6"/><text x="54.9286%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.9227%" y="293" width="0.2441%" height="15" fill="rgb(232,177,36)" fg:x="675" fg:w="3"/><text x="55.1727%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.9227%" y="277" width="0.2441%" height="15" fill="rgb(219,125,36)" fg:x="675" fg:w="3"/><text x="55.1727%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.0854%" y="261" width="0.0814%" height="15" fill="rgb(227,94,9)" fg:x="677" fg:w="1"/><text x="55.3354%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.0854%" y="245" width="0.0814%" height="15" fill="rgb(240,34,52)" fg:x="677" fg:w="1"/><text x="55.3354%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.0854%" y="229" width="0.0814%" height="15" fill="rgb(216,45,12)" fg:x="677" fg:w="1"/><text x="55.3354%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="55.2482%" y="453" width="0.0814%" height="15" fill="rgb(246,21,19)" fg:x="679" fg:w="1"/><text x="55.4982%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4109%" y="373" width="0.0814%" height="15" fill="rgb(213,98,42)" fg:x="681" fg:w="1"/><text x="55.6609%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4109%" y="357" width="0.0814%" height="15" fill="rgb(250,136,47)" fg:x="681" fg:w="1"/><text x="55.6609%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4109%" y="341" width="0.0814%" height="15" fill="rgb(251,124,27)" fg:x="681" fg:w="1"/><text x="55.6609%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4109%" y="325" width="0.0814%" height="15" fill="rgb(229,180,14)" fg:x="681" fg:w="1"/><text x="55.6609%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4109%" y="309" width="0.0814%" height="15" fill="rgb(245,216,25)" fg:x="681" fg:w="1"/><text x="55.6609%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4109%" y="293" width="0.0814%" height="15" fill="rgb(251,43,5)" fg:x="681" fg:w="1"/><text x="55.6609%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4109%" y="277" width="0.0814%" height="15" fill="rgb(250,128,24)" fg:x="681" fg:w="1"/><text x="55.6609%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.3295%" y="405" width="0.2441%" height="15" fill="rgb(217,117,27)" fg:x="680" fg:w="3"/><text x="55.5795%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.3295%" y="389" width="0.2441%" height="15" fill="rgb(245,147,4)" fg:x="680" fg:w="3"/><text x="55.5795%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4923%" y="373" width="0.0814%" height="15" fill="rgb(242,201,35)" fg:x="682" fg:w="1"/><text x="55.7423%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4923%" y="357" width="0.0814%" height="15" fill="rgb(218,181,1)" fg:x="682" fg:w="1"/><text x="55.7423%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4923%" y="341" width="0.0814%" height="15" fill="rgb(222,6,29)" fg:x="682" fg:w="1"/><text x="55.7423%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4923%" y="325" width="0.0814%" height="15" fill="rgb(208,186,3)" fg:x="682" fg:w="1"/><text x="55.7423%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4923%" y="309" width="0.0814%" height="15" fill="rgb(216,36,26)" fg:x="682" fg:w="1"/><text x="55.7423%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4923%" y="293" width="0.0814%" height="15" fill="rgb(248,201,23)" fg:x="682" fg:w="1"/><text x="55.7423%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4923%" y="277" width="0.0814%" height="15" fill="rgb(251,170,31)" fg:x="682" fg:w="1"/><text x="55.7423%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.4923%" y="261" width="0.0814%" height="15" fill="rgb(207,110,25)" fg:x="682" fg:w="1"/><text x="55.7423%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.4923%" y="245" width="0.0814%" height="15" fill="rgb(250,54,15)" fg:x="682" fg:w="1"/><text x="55.7423%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.4923%" y="229" width="0.0814%" height="15" fill="rgb(227,68,33)" fg:x="682" fg:w="1"/><text x="55.7423%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.4923%" y="213" width="0.0814%" height="15" fill="rgb(238,34,41)" fg:x="682" fg:w="1"/><text x="55.7423%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4923%" y="197" width="0.0814%" height="15" fill="rgb(220,11,15)" fg:x="682" fg:w="1"/><text x="55.7423%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="55.3295%" y="421" width="0.3255%" height="15" fill="rgb(246,111,35)" fg:x="680" fg:w="4"/><text x="55.5795%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5736%" y="405" width="0.0814%" height="15" fill="rgb(209,88,53)" fg:x="683" fg:w="1"/><text x="55.8236%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5736%" y="389" width="0.0814%" height="15" fill="rgb(231,185,47)" fg:x="683" fg:w="1"/><text x="55.8236%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.5736%" y="373" width="0.0814%" height="15" fill="rgb(233,154,1)" fg:x="683" fg:w="1"/><text x="55.8236%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.5736%" y="357" width="0.0814%" height="15" fill="rgb(225,15,46)" fg:x="683" fg:w="1"/><text x="55.8236%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.5736%" y="341" width="0.0814%" height="15" fill="rgb(211,135,41)" fg:x="683" fg:w="1"/><text x="55.8236%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5736%" y="325" width="0.0814%" height="15" fill="rgb(208,54,0)" fg:x="683" fg:w="1"/><text x="55.8236%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5736%" y="309" width="0.0814%" height="15" fill="rgb(244,136,14)" fg:x="683" fg:w="1"/><text x="55.8236%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.5736%" y="293" width="0.0814%" height="15" fill="rgb(241,56,14)" fg:x="683" fg:w="1"/><text x="55.8236%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.5736%" y="277" width="0.0814%" height="15" fill="rgb(205,80,24)" fg:x="683" fg:w="1"/><text x="55.8236%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.5736%" y="261" width="0.0814%" height="15" fill="rgb(220,57,4)" fg:x="683" fg:w="1"/><text x="55.8236%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.5736%" y="245" width="0.0814%" height="15" fill="rgb(226,193,50)" fg:x="683" fg:w="1"/><text x="55.8236%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5736%" y="229" width="0.0814%" height="15" fill="rgb(231,168,22)" fg:x="683" fg:w="1"/><text x="55.8236%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.6550%" y="421" width="0.0814%" height="15" fill="rgb(254,215,14)" fg:x="684" fg:w="1"/><text x="55.9050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.7364%" y="421" width="0.1627%" height="15" fill="rgb(211,115,16)" fg:x="685" fg:w="2"/><text x="55.9864%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="55.7364%" y="405" width="0.1627%" height="15" fill="rgb(236,210,16)" fg:x="685" fg:w="2"/><text x="55.9864%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.7364%" y="389" width="0.1627%" height="15" fill="rgb(221,94,12)" fg:x="685" fg:w="2"/><text x="55.9864%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.8177%" y="373" width="0.0814%" height="15" fill="rgb(235,218,49)" fg:x="686" fg:w="1"/><text x="56.0677%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8177%" y="357" width="0.0814%" height="15" fill="rgb(217,114,14)" fg:x="686" fg:w="1"/><text x="56.0677%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.0618%" y="293" width="0.0814%" height="15" fill="rgb(216,145,22)" fg:x="689" fg:w="1"/><text x="56.3118%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0618%" y="277" width="0.0814%" height="15" fill="rgb(217,112,39)" fg:x="689" fg:w="1"/><text x="56.3118%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1432%" y="293" width="0.0814%" height="15" fill="rgb(225,85,32)" fg:x="690" fg:w="1"/><text x="56.3932%" y="303.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (43 samples, 3.50%)</title><rect x="52.8885%" y="485" width="3.4988%" height="15" fill="rgb(245,209,47)" fg:x="650" fg:w="43"/><text x="53.1385%" y="495.50">&lt;&amp;k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (15 samples, 1.22%)</title><rect x="55.1668%" y="469" width="1.2205%" height="15" fill="rgb(218,220,15)" fg:x="678" fg:w="15"/><text x="55.4168%" y="479.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.06%)</title><rect x="55.3295%" y="453" width="1.0578%" height="15" fill="rgb(222,202,31)" fg:x="680" fg:w="13"/><text x="55.5795%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.06%)</title><rect x="55.3295%" y="437" width="1.0578%" height="15" fill="rgb(243,203,4)" fg:x="680" fg:w="13"/><text x="55.5795%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="55.8991%" y="421" width="0.4882%" height="15" fill="rgb(237,92,17)" fg:x="687" fg:w="6"/><text x="56.1491%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="55.8991%" y="405" width="0.4882%" height="15" fill="rgb(231,119,7)" fg:x="687" fg:w="6"/><text x="56.1491%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="55.9805%" y="389" width="0.4068%" height="15" fill="rgb(237,82,41)" fg:x="688" fg:w="5"/><text x="56.2305%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="55.9805%" y="373" width="0.4068%" height="15" fill="rgb(226,81,48)" fg:x="688" fg:w="5"/><text x="56.2305%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="55.9805%" y="357" width="0.4068%" height="15" fill="rgb(234,70,51)" fg:x="688" fg:w="5"/><text x="56.2305%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="55.9805%" y="341" width="0.4068%" height="15" fill="rgb(251,86,4)" fg:x="688" fg:w="5"/><text x="56.2305%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="56.0618%" y="325" width="0.3255%" height="15" fill="rgb(244,144,28)" fg:x="689" fg:w="4"/><text x="56.3118%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="56.0618%" y="309" width="0.3255%" height="15" fill="rgb(232,161,39)" fg:x="689" fg:w="4"/><text x="56.3118%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.2246%" y="293" width="0.1627%" height="15" fill="rgb(247,34,51)" fg:x="691" fg:w="2"/><text x="56.4746%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.2246%" y="277" width="0.1627%" height="15" fill="rgb(225,132,2)" fg:x="691" fg:w="2"/><text x="56.4746%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.2246%" y="261" width="0.1627%" height="15" fill="rgb(209,159,44)" fg:x="691" fg:w="2"/><text x="56.4746%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="56.4687%" y="453" width="0.0814%" height="15" fill="rgb(251,214,1)" fg:x="694" fg:w="1"/><text x="56.7187%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.6314%" y="261" width="0.0814%" height="15" fill="rgb(247,84,47)" fg:x="696" fg:w="1"/><text x="56.8814%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.6314%" y="245" width="0.0814%" height="15" fill="rgb(240,111,43)" fg:x="696" fg:w="1"/><text x="56.8814%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.6314%" y="229" width="0.0814%" height="15" fill="rgb(215,214,35)" fg:x="696" fg:w="1"/><text x="56.8814%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.6314%" y="213" width="0.0814%" height="15" fill="rgb(248,207,23)" fg:x="696" fg:w="1"/><text x="56.8814%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.6314%" y="197" width="0.0814%" height="15" fill="rgb(214,186,4)" fg:x="696" fg:w="1"/><text x="56.8814%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.6314%" y="181" width="0.0814%" height="15" fill="rgb(220,133,22)" fg:x="696" fg:w="1"/><text x="56.8814%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6314%" y="165" width="0.0814%" height="15" fill="rgb(239,134,19)" fg:x="696" fg:w="1"/><text x="56.8814%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.41%)</title><rect x="56.3873%" y="485" width="0.4068%" height="15" fill="rgb(250,140,9)" fg:x="693" fg:w="5"/><text x="56.6373%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.41%)</title><rect x="56.3873%" y="469" width="0.4068%" height="15" fill="rgb(225,59,14)" fg:x="693" fg:w="5"/><text x="56.6373%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="56.5500%" y="453" width="0.2441%" height="15" fill="rgb(214,152,51)" fg:x="695" fg:w="3"/><text x="56.8000%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="56.5500%" y="437" width="0.2441%" height="15" fill="rgb(251,227,43)" fg:x="695" fg:w="3"/><text x="56.8000%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="421" width="0.2441%" height="15" fill="rgb(241,96,17)" fg:x="695" fg:w="3"/><text x="56.8000%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="56.5500%" y="405" width="0.2441%" height="15" fill="rgb(234,198,43)" fg:x="695" fg:w="3"/><text x="56.8000%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="389" width="0.2441%" height="15" fill="rgb(220,108,29)" fg:x="695" fg:w="3"/><text x="56.8000%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="373" width="0.2441%" height="15" fill="rgb(226,163,33)" fg:x="695" fg:w="3"/><text x="56.8000%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="357" width="0.2441%" height="15" fill="rgb(205,194,45)" fg:x="695" fg:w="3"/><text x="56.8000%" y="367.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="56.5500%" y="341" width="0.2441%" height="15" fill="rgb(206,143,44)" fg:x="695" fg:w="3"/><text x="56.8000%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="325" width="0.2441%" height="15" fill="rgb(236,136,36)" fg:x="695" fg:w="3"/><text x="56.8000%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="309" width="0.2441%" height="15" fill="rgb(249,172,42)" fg:x="695" fg:w="3"/><text x="56.8000%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="56.5500%" y="293" width="0.2441%" height="15" fill="rgb(216,139,23)" fg:x="695" fg:w="3"/><text x="56.8000%" y="303.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="56.5500%" y="277" width="0.2441%" height="15" fill="rgb(207,166,20)" fg:x="695" fg:w="3"/><text x="56.8000%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.7128%" y="261" width="0.0814%" height="15" fill="rgb(210,209,22)" fg:x="697" fg:w="1"/><text x="56.9628%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.7128%" y="245" width="0.0814%" height="15" fill="rgb(232,118,20)" fg:x="697" fg:w="1"/><text x="56.9628%" y="255.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.7941%" y="485" width="0.1627%" height="15" fill="rgb(238,113,42)" fg:x="698" fg:w="2"/><text x="57.0441%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9569%" y="469" width="0.0814%" height="15" fill="rgb(231,42,5)" fg:x="700" fg:w="1"/><text x="57.2069%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="56.9569%" y="485" width="0.1627%" height="15" fill="rgb(243,166,24)" fg:x="700" fg:w="2"/><text x="57.2069%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="57.0382%" y="469" width="0.0814%" height="15" fill="rgb(237,226,12)" fg:x="701" fg:w="1"/><text x="57.2882%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="57.1196%" y="485" width="0.0814%" height="15" fill="rgb(229,133,24)" fg:x="702" fg:w="1"/><text x="57.3696%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.1196%" y="469" width="0.0814%" height="15" fill="rgb(238,33,43)" fg:x="702" fg:w="1"/><text x="57.3696%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.1196%" y="453" width="0.0814%" height="15" fill="rgb(227,59,38)" fg:x="702" fg:w="1"/><text x="57.3696%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3637%" y="421" width="0.0814%" height="15" fill="rgb(230,97,0)" fg:x="705" fg:w="1"/><text x="57.6137%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3637%" y="405" width="0.0814%" height="15" fill="rgb(250,173,50)" fg:x="705" fg:w="1"/><text x="57.6137%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3637%" y="389" width="0.0814%" height="15" fill="rgb(240,15,50)" fg:x="705" fg:w="1"/><text x="57.6137%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3637%" y="373" width="0.0814%" height="15" fill="rgb(221,93,22)" fg:x="705" fg:w="1"/><text x="57.6137%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3637%" y="357" width="0.0814%" height="15" fill="rgb(245,180,53)" fg:x="705" fg:w="1"/><text x="57.6137%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3637%" y="341" width="0.0814%" height="15" fill="rgb(231,88,51)" fg:x="705" fg:w="1"/><text x="57.6137%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.3637%" y="325" width="0.0814%" height="15" fill="rgb(240,58,21)" fg:x="705" fg:w="1"/><text x="57.6137%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.3637%" y="309" width="0.0814%" height="15" fill="rgb(237,21,10)" fg:x="705" fg:w="1"/><text x="57.6137%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.3637%" y="293" width="0.0814%" height="15" fill="rgb(218,43,11)" fg:x="705" fg:w="1"/><text x="57.6137%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.3637%" y="277" width="0.0814%" height="15" fill="rgb(218,221,29)" fg:x="705" fg:w="1"/><text x="57.6137%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.3637%" y="261" width="0.0814%" height="15" fill="rgb(214,118,42)" fg:x="705" fg:w="1"/><text x="57.6137%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3637%" y="245" width="0.0814%" height="15" fill="rgb(251,200,26)" fg:x="705" fg:w="1"/><text x="57.6137%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.5264%" y="309" width="0.0814%" height="15" fill="rgb(237,101,39)" fg:x="707" fg:w="1"/><text x="57.7764%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.5264%" y="293" width="0.0814%" height="15" fill="rgb(251,117,11)" fg:x="707" fg:w="1"/><text x="57.7764%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.5264%" y="277" width="0.0814%" height="15" fill="rgb(216,223,23)" fg:x="707" fg:w="1"/><text x="57.7764%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="57.3637%" y="453" width="0.3255%" height="15" fill="rgb(251,54,12)" fg:x="705" fg:w="4"/><text x="57.6137%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="57.3637%" y="437" width="0.3255%" height="15" fill="rgb(254,176,54)" fg:x="705" fg:w="4"/><text x="57.6137%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.4451%" y="421" width="0.2441%" height="15" fill="rgb(210,32,8)" fg:x="706" fg:w="3"/><text x="57.6951%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.5264%" y="405" width="0.1627%" height="15" fill="rgb(235,52,38)" fg:x="707" fg:w="2"/><text x="57.7764%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.5264%" y="389" width="0.1627%" height="15" fill="rgb(231,4,44)" fg:x="707" fg:w="2"/><text x="57.7764%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.5264%" y="373" width="0.1627%" height="15" fill="rgb(249,2,32)" fg:x="707" fg:w="2"/><text x="57.7764%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.5264%" y="357" width="0.1627%" height="15" fill="rgb(224,65,26)" fg:x="707" fg:w="2"/><text x="57.7764%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.5264%" y="341" width="0.1627%" height="15" fill="rgb(250,73,40)" fg:x="707" fg:w="2"/><text x="57.7764%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.5264%" y="325" width="0.1627%" height="15" fill="rgb(253,177,16)" fg:x="707" fg:w="2"/><text x="57.7764%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.6078%" y="309" width="0.0814%" height="15" fill="rgb(217,32,34)" fg:x="708" fg:w="1"/><text x="57.8578%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.6078%" y="293" width="0.0814%" height="15" fill="rgb(212,7,10)" fg:x="708" fg:w="1"/><text x="57.8578%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.7705%" y="261" width="0.0814%" height="15" fill="rgb(245,89,8)" fg:x="710" fg:w="1"/><text x="58.0205%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7705%" y="245" width="0.0814%" height="15" fill="rgb(237,16,53)" fg:x="710" fg:w="1"/><text x="58.0205%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="57.6892%" y="309" width="0.2441%" height="15" fill="rgb(250,204,30)" fg:x="709" fg:w="3"/><text x="57.9392%" y="319.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="57.7705%" y="293" width="0.1627%" height="15" fill="rgb(208,77,27)" fg:x="710" fg:w="2"/><text x="58.0205%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="57.7705%" y="277" width="0.1627%" height="15" fill="rgb(250,204,28)" fg:x="710" fg:w="2"/><text x="58.0205%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8519%" y="261" width="0.0814%" height="15" fill="rgb(244,63,21)" fg:x="711" fg:w="1"/><text x="58.1019%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8519%" y="245" width="0.0814%" height="15" fill="rgb(236,85,44)" fg:x="711" fg:w="1"/><text x="58.1019%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8519%" y="229" width="0.0814%" height="15" fill="rgb(215,98,4)" fg:x="711" fg:w="1"/><text x="58.1019%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8519%" y="213" width="0.0814%" height="15" fill="rgb(235,38,11)" fg:x="711" fg:w="1"/><text x="58.1019%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="57.8519%" y="197" width="0.0814%" height="15" fill="rgb(254,186,25)" fg:x="711" fg:w="1"/><text x="58.1019%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8519%" y="181" width="0.0814%" height="15" fill="rgb(225,55,31)" fg:x="711" fg:w="1"/><text x="58.1019%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.8519%" y="165" width="0.0814%" height="15" fill="rgb(211,15,21)" fg:x="711" fg:w="1"/><text x="58.1019%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.8519%" y="149" width="0.0814%" height="15" fill="rgb(215,187,41)" fg:x="711" fg:w="1"/><text x="58.1019%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9333%" y="261" width="0.0814%" height="15" fill="rgb(248,69,32)" fg:x="712" fg:w="1"/><text x="58.1833%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.0960%" y="133" width="0.0814%" height="15" fill="rgb(252,102,52)" fg:x="714" fg:w="1"/><text x="58.3460%" y="143.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.57%)</title><rect x="57.6892%" y="341" width="0.5696%" height="15" fill="rgb(253,140,32)" fg:x="709" fg:w="7"/><text x="57.9392%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.57%)</title><rect x="57.6892%" y="325" width="0.5696%" height="15" fill="rgb(216,56,42)" fg:x="709" fg:w="7"/><text x="57.9392%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="57.9333%" y="309" width="0.3255%" height="15" fill="rgb(216,184,14)" fg:x="712" fg:w="4"/><text x="58.1833%" y="319.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="57.9333%" y="293" width="0.3255%" height="15" fill="rgb(237,187,27)" fg:x="712" fg:w="4"/><text x="58.1833%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="57.9333%" y="277" width="0.3255%" height="15" fill="rgb(219,65,3)" fg:x="712" fg:w="4"/><text x="58.1833%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.0146%" y="261" width="0.2441%" height="15" fill="rgb(245,83,25)" fg:x="713" fg:w="3"/><text x="58.2646%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.0146%" y="245" width="0.2441%" height="15" fill="rgb(214,205,45)" fg:x="713" fg:w="3"/><text x="58.2646%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.0146%" y="229" width="0.2441%" height="15" fill="rgb(241,20,18)" fg:x="713" fg:w="3"/><text x="58.2646%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.0960%" y="213" width="0.1627%" height="15" fill="rgb(232,163,23)" fg:x="714" fg:w="2"/><text x="58.3460%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.0960%" y="197" width="0.1627%" height="15" fill="rgb(214,5,46)" fg:x="714" fg:w="2"/><text x="58.3460%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.0960%" y="181" width="0.1627%" height="15" fill="rgb(229,78,17)" fg:x="714" fg:w="2"/><text x="58.3460%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.0960%" y="165" width="0.1627%" height="15" fill="rgb(248,89,10)" fg:x="714" fg:w="2"/><text x="58.3460%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.0960%" y="149" width="0.1627%" height="15" fill="rgb(248,54,15)" fg:x="714" fg:w="2"/><text x="58.3460%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1774%" y="133" width="0.0814%" height="15" fill="rgb(223,116,6)" fg:x="715" fg:w="1"/><text x="58.4274%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1774%" y="117" width="0.0814%" height="15" fill="rgb(205,125,38)" fg:x="715" fg:w="1"/><text x="58.4274%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.1774%" y="101" width="0.0814%" height="15" fill="rgb(251,78,38)" fg:x="715" fg:w="1"/><text x="58.4274%" y="111.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.1774%" y="85" width="0.0814%" height="15" fill="rgb(253,78,28)" fg:x="715" fg:w="1"/><text x="58.4274%" y="95.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.3401%" y="277" width="0.0814%" height="15" fill="rgb(209,120,3)" fg:x="717" fg:w="1"/><text x="58.5901%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.4215%" y="245" width="0.1627%" height="15" fill="rgb(238,229,9)" fg:x="718" fg:w="2"/><text x="58.6715%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.4215%" y="229" width="0.1627%" height="15" fill="rgb(253,159,18)" fg:x="718" fg:w="2"/><text x="58.6715%" y="239.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="58.5842%" y="245" width="0.0814%" height="15" fill="rgb(244,42,34)" fg:x="720" fg:w="1"/><text x="58.8342%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.6656%" y="245" width="0.1627%" height="15" fill="rgb(224,8,7)" fg:x="721" fg:w="2"/><text x="58.9156%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.7469%" y="229" width="0.0814%" height="15" fill="rgb(210,201,45)" fg:x="722" fg:w="1"/><text x="58.9969%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="58.7469%" y="213" width="0.0814%" height="15" fill="rgb(252,185,21)" fg:x="722" fg:w="1"/><text x="58.9969%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="58.7469%" y="197" width="0.0814%" height="15" fill="rgb(223,131,1)" fg:x="722" fg:w="1"/><text x="58.9969%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9097%" y="149" width="0.0814%" height="15" fill="rgb(245,141,16)" fg:x="724" fg:w="1"/><text x="59.1597%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.9097%" y="133" width="0.0814%" height="15" fill="rgb(229,55,45)" fg:x="724" fg:w="1"/><text x="59.1597%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.9097%" y="165" width="0.1627%" height="15" fill="rgb(208,92,15)" fg:x="724" fg:w="2"/><text x="59.1597%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.9910%" y="149" width="0.0814%" height="15" fill="rgb(234,185,47)" fg:x="725" fg:w="1"/><text x="59.2410%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.9910%" y="133" width="0.0814%" height="15" fill="rgb(253,104,50)" fg:x="725" fg:w="1"/><text x="59.2410%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9910%" y="117" width="0.0814%" height="15" fill="rgb(205,70,7)" fg:x="725" fg:w="1"/><text x="59.2410%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9910%" y="101" width="0.0814%" height="15" fill="rgb(240,178,43)" fg:x="725" fg:w="1"/><text x="59.2410%" y="111.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.98%)</title><rect x="58.2587%" y="325" width="0.9764%" height="15" fill="rgb(214,112,2)" fg:x="716" fg:w="12"/><text x="58.5087%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.98%)</title><rect x="58.2587%" y="309" width="0.9764%" height="15" fill="rgb(206,46,17)" fg:x="716" fg:w="12"/><text x="58.5087%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.98%)</title><rect x="58.2587%" y="293" width="0.9764%" height="15" fill="rgb(225,220,16)" fg:x="716" fg:w="12"/><text x="58.5087%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="58.4215%" y="277" width="0.8137%" height="15" fill="rgb(238,65,40)" fg:x="718" fg:w="10"/><text x="58.6715%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="58.4215%" y="261" width="0.8137%" height="15" fill="rgb(230,151,21)" fg:x="718" fg:w="10"/><text x="58.6715%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="58.8283%" y="245" width="0.4068%" height="15" fill="rgb(218,58,49)" fg:x="723" fg:w="5"/><text x="59.0783%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="58.8283%" y="229" width="0.4068%" height="15" fill="rgb(219,179,14)" fg:x="723" fg:w="5"/><text x="59.0783%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="58.8283%" y="213" width="0.4068%" height="15" fill="rgb(223,72,1)" fg:x="723" fg:w="5"/><text x="59.0783%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="58.8283%" y="197" width="0.4068%" height="15" fill="rgb(238,126,10)" fg:x="723" fg:w="5"/><text x="59.0783%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="58.8283%" y="181" width="0.4068%" height="15" fill="rgb(224,206,38)" fg:x="723" fg:w="5"/><text x="59.0783%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.0724%" y="165" width="0.1627%" height="15" fill="rgb(212,201,54)" fg:x="726" fg:w="2"/><text x="59.3224%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.5606%" y="261" width="0.0814%" height="15" fill="rgb(218,154,48)" fg:x="732" fg:w="1"/><text x="59.8106%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.5606%" y="245" width="0.0814%" height="15" fill="rgb(232,93,24)" fg:x="732" fg:w="1"/><text x="59.8106%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6420%" y="213" width="0.0814%" height="15" fill="rgb(245,30,21)" fg:x="733" fg:w="1"/><text x="59.8920%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6420%" y="197" width="0.0814%" height="15" fill="rgb(242,148,29)" fg:x="733" fg:w="1"/><text x="59.8920%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6420%" y="181" width="0.0814%" height="15" fill="rgb(244,153,54)" fg:x="733" fg:w="1"/><text x="59.8920%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6420%" y="165" width="0.0814%" height="15" fill="rgb(252,87,22)" fg:x="733" fg:w="1"/><text x="59.8920%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6420%" y="149" width="0.0814%" height="15" fill="rgb(210,51,29)" fg:x="733" fg:w="1"/><text x="59.8920%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6420%" y="133" width="0.0814%" height="15" fill="rgb(242,136,47)" fg:x="733" fg:w="1"/><text x="59.8920%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.6420%" y="117" width="0.0814%" height="15" fill="rgb(238,68,4)" fg:x="733" fg:w="1"/><text x="59.8920%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.6420%" y="101" width="0.0814%" height="15" fill="rgb(242,161,30)" fg:x="733" fg:w="1"/><text x="59.8920%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.6420%" y="85" width="0.0814%" height="15" fill="rgb(218,58,44)" fg:x="733" fg:w="1"/><text x="59.8920%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.6420%" y="245" width="0.1627%" height="15" fill="rgb(252,125,32)" fg:x="733" fg:w="2"/><text x="59.8920%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.6420%" y="229" width="0.1627%" height="15" fill="rgb(219,178,0)" fg:x="733" fg:w="2"/><text x="59.8920%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="59.7234%" y="213" width="0.0814%" height="15" fill="rgb(213,152,7)" fg:x="734" fg:w="1"/><text x="59.9734%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.8047%" y="245" width="0.1627%" height="15" fill="rgb(249,109,34)" fg:x="735" fg:w="2"/><text x="60.0547%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="59.8047%" y="229" width="0.1627%" height="15" fill="rgb(232,96,21)" fg:x="735" fg:w="2"/><text x="60.0547%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.8047%" y="213" width="0.1627%" height="15" fill="rgb(228,27,39)" fg:x="735" fg:w="2"/><text x="60.0547%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="59.8047%" y="197" width="0.1627%" height="15" fill="rgb(211,182,52)" fg:x="735" fg:w="2"/><text x="60.0547%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8861%" y="181" width="0.0814%" height="15" fill="rgb(234,178,38)" fg:x="736" fg:w="1"/><text x="60.1361%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.9675%" y="197" width="0.0814%" height="15" fill="rgb(221,111,3)" fg:x="737" fg:w="1"/><text x="60.2175%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.9675%" y="181" width="0.0814%" height="15" fill="rgb(228,175,21)" fg:x="737" fg:w="1"/><text x="60.2175%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.65%)</title><rect x="59.4793%" y="293" width="0.6509%" height="15" fill="rgb(228,174,43)" fg:x="731" fg:w="8"/><text x="59.7293%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="59.5606%" y="277" width="0.5696%" height="15" fill="rgb(211,191,0)" fg:x="732" fg:w="7"/><text x="59.8106%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="59.6420%" y="261" width="0.4882%" height="15" fill="rgb(253,117,3)" fg:x="733" fg:w="6"/><text x="59.8920%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9675%" y="245" width="0.1627%" height="15" fill="rgb(241,127,19)" fg:x="737" fg:w="2"/><text x="60.2175%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9675%" y="229" width="0.1627%" height="15" fill="rgb(218,103,12)" fg:x="737" fg:w="2"/><text x="60.2175%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="59.9675%" y="213" width="0.1627%" height="15" fill="rgb(236,214,43)" fg:x="737" fg:w="2"/><text x="60.2175%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0488%" y="197" width="0.0814%" height="15" fill="rgb(244,144,19)" fg:x="738" fg:w="1"/><text x="60.2988%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0488%" y="181" width="0.0814%" height="15" fill="rgb(246,188,10)" fg:x="738" fg:w="1"/><text x="60.2988%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.0488%" y="165" width="0.0814%" height="15" fill="rgb(212,193,33)" fg:x="738" fg:w="1"/><text x="60.2988%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0488%" y="149" width="0.0814%" height="15" fill="rgb(241,51,29)" fg:x="738" fg:w="1"/><text x="60.2988%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0488%" y="133" width="0.0814%" height="15" fill="rgb(211,58,19)" fg:x="738" fg:w="1"/><text x="60.2988%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.0488%" y="117" width="0.0814%" height="15" fill="rgb(229,111,26)" fg:x="738" fg:w="1"/><text x="60.2988%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.0488%" y="101" width="0.0814%" height="15" fill="rgb(213,115,40)" fg:x="738" fg:w="1"/><text x="60.2988%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (25 samples, 2.03%)</title><rect x="58.2587%" y="341" width="2.0342%" height="15" fill="rgb(209,56,44)" fg:x="716" fg:w="25"/><text x="58.5087%" y="351.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.06%)</title><rect x="59.2352%" y="325" width="1.0578%" height="15" fill="rgb(230,108,32)" fg:x="728" fg:w="13"/><text x="59.4852%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.98%)</title><rect x="59.3165%" y="309" width="0.9764%" height="15" fill="rgb(216,165,31)" fg:x="729" fg:w="12"/><text x="59.5665%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1302%" y="293" width="0.1627%" height="15" fill="rgb(218,122,21)" fg:x="739" fg:w="2"/><text x="60.3802%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1302%" y="277" width="0.1627%" height="15" fill="rgb(223,224,47)" fg:x="739" fg:w="2"/><text x="60.3802%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.2116%" y="261" width="0.0814%" height="15" fill="rgb(238,102,44)" fg:x="740" fg:w="1"/><text x="60.4616%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.2116%" y="245" width="0.0814%" height="15" fill="rgb(236,46,40)" fg:x="740" fg:w="1"/><text x="60.4616%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.2929%" y="293" width="0.0814%" height="15" fill="rgb(247,202,50)" fg:x="741" fg:w="1"/><text x="60.5429%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.2929%" y="277" width="0.0814%" height="15" fill="rgb(209,99,20)" fg:x="741" fg:w="1"/><text x="60.5429%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.2929%" y="261" width="0.0814%" height="15" fill="rgb(252,27,34)" fg:x="741" fg:w="1"/><text x="60.5429%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2929%" y="245" width="0.0814%" height="15" fill="rgb(215,206,23)" fg:x="741" fg:w="1"/><text x="60.5429%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="60.2929%" y="341" width="0.1627%" height="15" fill="rgb(212,135,36)" fg:x="741" fg:w="2"/><text x="60.5429%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.2929%" y="325" width="0.1627%" height="15" fill="rgb(240,189,1)" fg:x="741" fg:w="2"/><text x="60.5429%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.2929%" y="309" width="0.1627%" height="15" fill="rgb(242,56,20)" fg:x="741" fg:w="2"/><text x="60.5429%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.3743%" y="293" width="0.0814%" height="15" fill="rgb(247,132,33)" fg:x="742" fg:w="1"/><text x="60.6243%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.3743%" y="277" width="0.0814%" height="15" fill="rgb(208,149,11)" fg:x="742" fg:w="1"/><text x="60.6243%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.3743%" y="261" width="0.0814%" height="15" fill="rgb(211,33,11)" fg:x="742" fg:w="1"/><text x="60.6243%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.3743%" y="245" width="0.0814%" height="15" fill="rgb(221,29,38)" fg:x="742" fg:w="1"/><text x="60.6243%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.3743%" y="229" width="0.0814%" height="15" fill="rgb(206,182,49)" fg:x="742" fg:w="1"/><text x="60.6243%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.3743%" y="213" width="0.0814%" height="15" fill="rgb(216,140,1)" fg:x="742" fg:w="1"/><text x="60.6243%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.3743%" y="197" width="0.0814%" height="15" fill="rgb(232,57,40)" fg:x="742" fg:w="1"/><text x="60.6243%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.3743%" y="181" width="0.0814%" height="15" fill="rgb(224,186,18)" fg:x="742" fg:w="1"/><text x="60.6243%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.3743%" y="165" width="0.0814%" height="15" fill="rgb(215,121,11)" fg:x="742" fg:w="1"/><text x="60.6243%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.6184%" y="277" width="0.2441%" height="15" fill="rgb(245,147,10)" fg:x="745" fg:w="3"/><text x="60.8684%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (40 samples, 3.25%)</title><rect x="57.6892%" y="373" width="3.2547%" height="15" fill="rgb(238,153,13)" fg:x="709" fg:w="40"/><text x="57.9392%" y="383.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (40 samples, 3.25%)</title><rect x="57.6892%" y="357" width="3.2547%" height="15" fill="rgb(233,108,0)" fg:x="709" fg:w="40"/><text x="57.9392%" y="367.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.49%)</title><rect x="60.4557%" y="341" width="0.4882%" height="15" fill="rgb(212,157,17)" fg:x="743" fg:w="6"/><text x="60.7057%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="60.5370%" y="325" width="0.4068%" height="15" fill="rgb(225,213,38)" fg:x="744" fg:w="5"/><text x="60.7870%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="60.5370%" y="309" width="0.4068%" height="15" fill="rgb(248,16,11)" fg:x="744" fg:w="5"/><text x="60.7870%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.33%)</title><rect x="60.6184%" y="293" width="0.3255%" height="15" fill="rgb(241,33,4)" fg:x="745" fg:w="4"/><text x="60.8684%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.8625%" y="277" width="0.0814%" height="15" fill="rgb(222,26,43)" fg:x="748" fg:w="1"/><text x="61.1125%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.34%)</title><rect x="57.6892%" y="453" width="3.3360%" height="15" fill="rgb(243,29,36)" fg:x="709" fg:w="41"/><text x="57.9392%" y="463.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (41 samples, 3.34%)</title><rect x="57.6892%" y="437" width="3.3360%" height="15" fill="rgb(241,9,27)" fg:x="709" fg:w="41"/><text x="57.9392%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 3.34%)</title><rect x="57.6892%" y="421" width="3.3360%" height="15" fill="rgb(205,117,26)" fg:x="709" fg:w="41"/><text x="57.9392%" y="431.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 3.34%)</title><rect x="57.6892%" y="405" width="3.3360%" height="15" fill="rgb(209,80,39)" fg:x="709" fg:w="41"/><text x="57.9392%" y="415.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (41 samples, 3.34%)</title><rect x="57.6892%" y="389" width="3.3360%" height="15" fill="rgb(239,155,6)" fg:x="709" fg:w="41"/><text x="57.9392%" y="399.50">&lt;en..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9439%" y="373" width="0.0814%" height="15" fill="rgb(212,104,12)" fg:x="749" fg:w="1"/><text x="61.1939%" y="383.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="61.0252%" y="453" width="0.1627%" height="15" fill="rgb(234,204,3)" fg:x="750" fg:w="2"/><text x="61.2752%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="61.0252%" y="437" width="0.1627%" height="15" fill="rgb(251,218,7)" fg:x="750" fg:w="2"/><text x="61.2752%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="61.0252%" y="421" width="0.1627%" height="15" fill="rgb(221,81,32)" fg:x="750" fg:w="2"/><text x="61.2752%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="61.1066%" y="405" width="0.0814%" height="15" fill="rgb(214,152,26)" fg:x="751" fg:w="1"/><text x="61.3566%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1066%" y="389" width="0.0814%" height="15" fill="rgb(223,22,3)" fg:x="751" fg:w="1"/><text x="61.3566%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.2693%" y="421" width="0.0814%" height="15" fill="rgb(207,174,7)" fg:x="753" fg:w="1"/><text x="61.5193%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.2693%" y="405" width="0.0814%" height="15" fill="rgb(224,19,52)" fg:x="753" fg:w="1"/><text x="61.5193%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.2693%" y="389" width="0.0814%" height="15" fill="rgb(228,24,14)" fg:x="753" fg:w="1"/><text x="61.5193%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.2693%" y="373" width="0.0814%" height="15" fill="rgb(230,153,43)" fg:x="753" fg:w="1"/><text x="61.5193%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.33%)</title><rect x="61.3507%" y="421" width="0.3255%" height="15" fill="rgb(231,106,12)" fg:x="754" fg:w="4"/><text x="61.6007%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.33%)</title><rect x="61.3507%" y="405" width="0.3255%" height="15" fill="rgb(215,92,2)" fg:x="754" fg:w="4"/><text x="61.6007%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.33%)</title><rect x="61.3507%" y="389" width="0.3255%" height="15" fill="rgb(249,143,25)" fg:x="754" fg:w="4"/><text x="61.6007%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.4321%" y="373" width="0.2441%" height="15" fill="rgb(252,7,35)" fg:x="755" fg:w="3"/><text x="61.6821%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.4321%" y="357" width="0.2441%" height="15" fill="rgb(216,69,40)" fg:x="755" fg:w="3"/><text x="61.6821%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.5134%" y="341" width="0.1627%" height="15" fill="rgb(240,36,33)" fg:x="756" fg:w="2"/><text x="61.7634%" y="351.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (111 samples, 9.03%)</title><rect x="52.7258%" y="517" width="9.0317%" height="15" fill="rgb(231,128,14)" fg:x="648" fg:w="111"/><text x="52.9758%" y="527.50">&lt;plugins_core..</text></g><g><title>plugins_core::looking::model::new_area_observation (109 samples, 8.87%)</title><rect x="52.8885%" y="501" width="8.8690%" height="15" fill="rgb(245,143,14)" fg:x="650" fg:w="109"/><text x="53.1385%" y="511.50">plugins_core:..</text></g><g><title>kernel::model::entry::Entry::scope (56 samples, 4.56%)</title><rect x="57.2010%" y="485" width="4.5566%" height="15" fill="rgb(222,130,28)" fg:x="703" fg:w="56"/><text x="57.4510%" y="495.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (55 samples, 4.48%)</title><rect x="57.2823%" y="469" width="4.4752%" height="15" fill="rgb(212,10,48)" fg:x="704" fg:w="55"/><text x="57.5323%" y="479.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="61.1880%" y="453" width="0.5696%" height="15" fill="rgb(254,118,45)" fg:x="752" fg:w="7"/><text x="61.4380%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="61.1880%" y="437" width="0.5696%" height="15" fill="rgb(228,6,45)" fg:x="752" fg:w="7"/><text x="61.4380%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.6762%" y="421" width="0.0814%" height="15" fill="rgb(241,18,35)" fg:x="758" fg:w="1"/><text x="61.9262%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6762%" y="405" width="0.0814%" height="15" fill="rgb(227,214,53)" fg:x="758" fg:w="1"/><text x="61.9262%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (135 samples, 10.98%)</title><rect x="50.8544%" y="709" width="10.9845%" height="15" fill="rgb(224,107,51)" fg:x="625" fg:w="135"/><text x="51.1044%" y="719.50">&lt;engine::session..</text></g><g><title>kernel::plugins::mw::apply_middleware (135 samples, 10.98%)</title><rect x="50.8544%" y="693" width="10.9845%" height="15" fill="rgb(248,60,28)" fg:x="625" fg:w="135"/><text x="51.1044%" y="703.50">kernel::plugins:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (135 samples, 10.98%)</title><rect x="50.8544%" y="677" width="10.9845%" height="15" fill="rgb(249,101,23)" fg:x="625" fg:w="135"/><text x="51.1044%" y="687.50">kernel::plugins:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (134 samples, 10.90%)</title><rect x="50.9357%" y="661" width="10.9032%" height="15" fill="rgb(228,51,19)" fg:x="626" fg:w="134"/><text x="51.1857%" y="671.50">&lt;engine::session..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (112 samples, 9.11%)</title><rect x="52.7258%" y="645" width="9.1131%" height="15" fill="rgb(213,20,6)" fg:x="648" fg:w="112"/><text x="52.9758%" y="655.50">kernel::plugi..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (112 samples, 9.11%)</title><rect x="52.7258%" y="629" width="9.1131%" height="15" fill="rgb(212,124,10)" fg:x="648" fg:w="112"/><text x="52.9758%" y="639.50">&lt;plugins_dynl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (112 samples, 9.11%)</title><rect x="52.7258%" y="613" width="9.1131%" height="15" fill="rgb(248,3,40)" fg:x="648" fg:w="112"/><text x="52.9758%" y="623.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (112 samples, 9.11%)</title><rect x="52.7258%" y="597" width="9.1131%" height="15" fill="rgb(223,178,23)" fg:x="648" fg:w="112"/><text x="52.9758%" y="607.50">core::ops::fu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (112 samples, 9.11%)</title><rect x="52.7258%" y="581" width="9.1131%" height="15" fill="rgb(240,132,45)" fg:x="648" fg:w="112"/><text x="52.9758%" y="591.50">kernel::plugi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (112 samples, 9.11%)</title><rect x="52.7258%" y="565" width="9.1131%" height="15" fill="rgb(245,164,36)" fg:x="648" fg:w="112"/><text x="52.9758%" y="575.50">core::ops::fu..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (112 samples, 9.11%)</title><rect x="52.7258%" y="549" width="9.1131%" height="15" fill="rgb(231,188,53)" fg:x="648" fg:w="112"/><text x="52.9758%" y="559.50">&lt;alloc::boxed..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (112 samples, 9.11%)</title><rect x="52.7258%" y="533" width="9.1131%" height="15" fill="rgb(237,198,39)" fg:x="648" fg:w="112"/><text x="52.9758%" y="543.50">&lt;engine::sess..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7575%" y="517" width="0.0814%" height="15" fill="rgb(223,120,35)" fg:x="759" fg:w="1"/><text x="62.0075%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="61.8389%" y="693" width="0.0814%" height="15" fill="rgb(253,107,49)" fg:x="760" fg:w="1"/><text x="62.0889%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="62.0016%" y="645" width="0.0814%" height="15" fill="rgb(216,44,31)" fg:x="762" fg:w="1"/><text x="62.2516%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0016%" y="629" width="0.0814%" height="15" fill="rgb(253,87,21)" fg:x="762" fg:w="1"/><text x="62.2516%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0830%" y="629" width="0.0814%" height="15" fill="rgb(226,18,2)" fg:x="763" fg:w="1"/><text x="62.3330%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.41%)</title><rect x="61.9203%" y="677" width="0.4068%" height="15" fill="rgb(216,8,46)" fg:x="761" fg:w="5"/><text x="62.1703%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="62.0016%" y="661" width="0.3255%" height="15" fill="rgb(226,140,39)" fg:x="762" fg:w="4"/><text x="62.2516%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="62.0830%" y="645" width="0.2441%" height="15" fill="rgb(221,194,54)" fg:x="763" fg:w="3"/><text x="62.3330%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="62.1644%" y="629" width="0.1627%" height="15" fill="rgb(213,92,11)" fg:x="764" fg:w="2"/><text x="62.4144%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="62.1644%" y="613" width="0.1627%" height="15" fill="rgb(229,162,46)" fg:x="764" fg:w="2"/><text x="62.4144%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.1644%" y="597" width="0.1627%" height="15" fill="rgb(214,111,36)" fg:x="764" fg:w="2"/><text x="62.4144%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.1644%" y="581" width="0.1627%" height="15" fill="rgb(207,6,21)" fg:x="764" fg:w="2"/><text x="62.4144%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2457%" y="565" width="0.0814%" height="15" fill="rgb(213,127,38)" fg:x="765" fg:w="1"/><text x="62.4957%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2457%" y="549" width="0.0814%" height="15" fill="rgb(238,118,32)" fg:x="765" fg:w="1"/><text x="62.4957%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.2457%" y="533" width="0.0814%" height="15" fill="rgb(240,139,39)" fg:x="765" fg:w="1"/><text x="62.4957%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2457%" y="517" width="0.0814%" height="15" fill="rgb(235,10,37)" fg:x="765" fg:w="1"/><text x="62.4957%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2457%" y="501" width="0.0814%" height="15" fill="rgb(249,171,38)" fg:x="765" fg:w="1"/><text x="62.4957%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2457%" y="485" width="0.0814%" height="15" fill="rgb(242,144,32)" fg:x="765" fg:w="1"/><text x="62.4957%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2457%" y="469" width="0.0814%" height="15" fill="rgb(217,117,21)" fg:x="765" fg:w="1"/><text x="62.4957%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2457%" y="453" width="0.0814%" height="15" fill="rgb(249,87,1)" fg:x="765" fg:w="1"/><text x="62.4957%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.2457%" y="437" width="0.0814%" height="15" fill="rgb(248,196,48)" fg:x="765" fg:w="1"/><text x="62.4957%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2457%" y="421" width="0.0814%" height="15" fill="rgb(251,206,33)" fg:x="765" fg:w="1"/><text x="62.4957%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3271%" y="613" width="0.0814%" height="15" fill="rgb(232,141,28)" fg:x="766" fg:w="1"/><text x="62.5771%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3271%" y="597" width="0.0814%" height="15" fill="rgb(209,167,14)" fg:x="766" fg:w="1"/><text x="62.5771%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.3271%" y="581" width="0.0814%" height="15" fill="rgb(225,11,50)" fg:x="766" fg:w="1"/><text x="62.5771%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.4085%" y="549" width="0.0814%" height="15" fill="rgb(209,50,20)" fg:x="767" fg:w="1"/><text x="62.6585%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.5712%" y="501" width="0.0814%" height="15" fill="rgb(212,17,46)" fg:x="769" fg:w="1"/><text x="62.8212%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.5712%" y="485" width="0.0814%" height="15" fill="rgb(216,101,39)" fg:x="769" fg:w="1"/><text x="62.8212%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.5712%" y="469" width="0.0814%" height="15" fill="rgb(212,228,48)" fg:x="769" fg:w="1"/><text x="62.8212%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.5712%" y="453" width="0.0814%" height="15" fill="rgb(250,6,50)" fg:x="769" fg:w="1"/><text x="62.8212%" y="463.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="62.3271%" y="661" width="0.4068%" height="15" fill="rgb(250,160,48)" fg:x="766" fg:w="5"/><text x="62.5771%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="62.3271%" y="645" width="0.4068%" height="15" fill="rgb(244,216,33)" fg:x="766" fg:w="5"/><text x="62.5771%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="62.3271%" y="629" width="0.4068%" height="15" fill="rgb(207,157,5)" fg:x="766" fg:w="5"/><text x="62.5771%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="62.4085%" y="613" width="0.3255%" height="15" fill="rgb(228,199,8)" fg:x="767" fg:w="4"/><text x="62.6585%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="62.4085%" y="597" width="0.3255%" height="15" fill="rgb(227,80,20)" fg:x="767" fg:w="4"/><text x="62.6585%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="62.4085%" y="581" width="0.3255%" height="15" fill="rgb(222,9,33)" fg:x="767" fg:w="4"/><text x="62.6585%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="62.4085%" y="565" width="0.3255%" height="15" fill="rgb(239,44,28)" fg:x="767" fg:w="4"/><text x="62.6585%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.4898%" y="549" width="0.2441%" height="15" fill="rgb(249,187,43)" fg:x="768" fg:w="3"/><text x="62.7398%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.5712%" y="533" width="0.1627%" height="15" fill="rgb(216,141,28)" fg:x="769" fg:w="2"/><text x="62.8212%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.5712%" y="517" width="0.1627%" height="15" fill="rgb(230,154,53)" fg:x="769" fg:w="2"/><text x="62.8212%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.6526%" y="501" width="0.0814%" height="15" fill="rgb(227,82,4)" fg:x="770" fg:w="1"/><text x="62.9026%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="62.7339%" y="629" width="0.0814%" height="15" fill="rgb(220,107,16)" fg:x="771" fg:w="1"/><text x="62.9839%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.8153%" y="517" width="0.1627%" height="15" fill="rgb(207,187,2)" fg:x="772" fg:w="2"/><text x="63.0653%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.8153%" y="501" width="0.1627%" height="15" fill="rgb(210,162,52)" fg:x="772" fg:w="2"/><text x="63.0653%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.8967%" y="485" width="0.0814%" height="15" fill="rgb(217,216,49)" fg:x="773" fg:w="1"/><text x="63.1467%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.8967%" y="469" width="0.0814%" height="15" fill="rgb(218,146,49)" fg:x="773" fg:w="1"/><text x="63.1467%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.8967%" y="453" width="0.0814%" height="15" fill="rgb(216,55,40)" fg:x="773" fg:w="1"/><text x="63.1467%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.8153%" y="549" width="0.2441%" height="15" fill="rgb(208,196,21)" fg:x="772" fg:w="3"/><text x="63.0653%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.8153%" y="533" width="0.2441%" height="15" fill="rgb(242,117,42)" fg:x="772" fg:w="3"/><text x="63.0653%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.9780%" y="517" width="0.0814%" height="15" fill="rgb(210,11,23)" fg:x="774" fg:w="1"/><text x="63.2280%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="62.8153%" y="581" width="0.3255%" height="15" fill="rgb(217,110,2)" fg:x="772" fg:w="4"/><text x="63.0653%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="62.8153%" y="565" width="0.3255%" height="15" fill="rgb(229,77,54)" fg:x="772" fg:w="4"/><text x="63.0653%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.0594%" y="549" width="0.0814%" height="15" fill="rgb(218,53,16)" fg:x="775" fg:w="1"/><text x="63.3094%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="63.0594%" y="533" width="0.0814%" height="15" fill="rgb(215,38,13)" fg:x="775" fg:w="1"/><text x="63.3094%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1408%" y="581" width="0.0814%" height="15" fill="rgb(235,42,18)" fg:x="776" fg:w="1"/><text x="63.3908%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.2221%" y="533" width="0.2441%" height="15" fill="rgb(219,66,54)" fg:x="777" fg:w="3"/><text x="63.4721%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.41%)</title><rect x="63.2221%" y="581" width="0.4068%" height="15" fill="rgb(222,205,4)" fg:x="777" fg:w="5"/><text x="63.4721%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.41%)</title><rect x="63.2221%" y="565" width="0.4068%" height="15" fill="rgb(227,213,46)" fg:x="777" fg:w="5"/><text x="63.4721%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5 samples, 0.41%)</title><rect x="63.2221%" y="549" width="0.4068%" height="15" fill="rgb(250,145,42)" fg:x="777" fg:w="5"/><text x="63.4721%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.4662%" y="533" width="0.1627%" height="15" fill="rgb(219,15,2)" fg:x="780" fg:w="2"/><text x="63.7162%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="63.4662%" y="517" width="0.1627%" height="15" fill="rgb(231,181,52)" fg:x="780" fg:w="2"/><text x="63.7162%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.5476%" y="501" width="0.0814%" height="15" fill="rgb(235,1,42)" fg:x="781" fg:w="1"/><text x="63.7976%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7103%" y="517" width="0.0814%" height="15" fill="rgb(249,88,27)" fg:x="783" fg:w="1"/><text x="63.9603%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.7103%" y="501" width="0.0814%" height="15" fill="rgb(235,145,16)" fg:x="783" fg:w="1"/><text x="63.9603%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.7103%" y="485" width="0.0814%" height="15" fill="rgb(237,114,19)" fg:x="783" fg:w="1"/><text x="63.9603%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7103%" y="469" width="0.0814%" height="15" fill="rgb(238,51,50)" fg:x="783" fg:w="1"/><text x="63.9603%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.7103%" y="453" width="0.0814%" height="15" fill="rgb(205,194,25)" fg:x="783" fg:w="1"/><text x="63.9603%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.7103%" y="437" width="0.0814%" height="15" fill="rgb(215,203,17)" fg:x="783" fg:w="1"/><text x="63.9603%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.7103%" y="421" width="0.0814%" height="15" fill="rgb(233,112,49)" fg:x="783" fg:w="1"/><text x="63.9603%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.55%)</title><rect x="62.3271%" y="677" width="1.5460%" height="15" fill="rgb(241,130,26)" fg:x="766" fg:w="19"/><text x="62.5771%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.14%)</title><rect x="62.7339%" y="661" width="1.1391%" height="15" fill="rgb(252,223,19)" fg:x="771" fg:w="14"/><text x="62.9839%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.14%)</title><rect x="62.7339%" y="645" width="1.1391%" height="15" fill="rgb(211,95,25)" fg:x="771" fg:w="14"/><text x="62.9839%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.06%)</title><rect x="62.8153%" y="629" width="1.0578%" height="15" fill="rgb(251,182,27)" fg:x="772" fg:w="13"/><text x="63.0653%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.06%)</title><rect x="62.8153%" y="613" width="1.0578%" height="15" fill="rgb(238,24,4)" fg:x="772" fg:w="13"/><text x="63.0653%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.06%)</title><rect x="62.8153%" y="597" width="1.0578%" height="15" fill="rgb(224,220,25)" fg:x="772" fg:w="13"/><text x="63.0653%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.6290%" y="581" width="0.2441%" height="15" fill="rgb(239,133,26)" fg:x="782" fg:w="3"/><text x="63.8790%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.6290%" y="565" width="0.2441%" height="15" fill="rgb(211,94,48)" fg:x="782" fg:w="3"/><text x="63.8790%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="63.7103%" y="549" width="0.1627%" height="15" fill="rgb(239,87,6)" fg:x="783" fg:w="2"/><text x="63.9603%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.7103%" y="533" width="0.1627%" height="15" fill="rgb(227,62,0)" fg:x="783" fg:w="2"/><text x="63.9603%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="63.7917%" y="517" width="0.0814%" height="15" fill="rgb(211,226,4)" fg:x="784" fg:w="1"/><text x="64.0417%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8731%" y="629" width="0.0814%" height="15" fill="rgb(253,38,52)" fg:x="785" fg:w="1"/><text x="64.1231%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8731%" y="613" width="0.0814%" height="15" fill="rgb(229,126,40)" fg:x="785" fg:w="1"/><text x="64.1231%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8731%" y="597" width="0.0814%" height="15" fill="rgb(229,165,44)" fg:x="785" fg:w="1"/><text x="64.1231%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8731%" y="581" width="0.0814%" height="15" fill="rgb(247,95,47)" fg:x="785" fg:w="1"/><text x="64.1231%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8731%" y="565" width="0.0814%" height="15" fill="rgb(216,140,30)" fg:x="785" fg:w="1"/><text x="64.1231%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8731%" y="549" width="0.0814%" height="15" fill="rgb(246,214,8)" fg:x="785" fg:w="1"/><text x="64.1231%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.8731%" y="533" width="0.0814%" height="15" fill="rgb(227,224,15)" fg:x="785" fg:w="1"/><text x="64.1231%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.8731%" y="517" width="0.0814%" height="15" fill="rgb(233,175,4)" fg:x="785" fg:w="1"/><text x="64.1231%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.8731%" y="501" width="0.0814%" height="15" fill="rgb(221,66,45)" fg:x="785" fg:w="1"/><text x="64.1231%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.8731%" y="485" width="0.0814%" height="15" fill="rgb(221,178,18)" fg:x="785" fg:w="1"/><text x="64.1231%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.8731%" y="469" width="0.0814%" height="15" fill="rgb(213,81,29)" fg:x="785" fg:w="1"/><text x="64.1231%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.8731%" y="453" width="0.0814%" height="15" fill="rgb(220,89,49)" fg:x="785" fg:w="1"/><text x="64.1231%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.8731%" y="437" width="0.0814%" height="15" fill="rgb(227,60,33)" fg:x="785" fg:w="1"/><text x="64.1231%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.8731%" y="421" width="0.0814%" height="15" fill="rgb(205,113,12)" fg:x="785" fg:w="1"/><text x="64.1231%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.8731%" y="405" width="0.0814%" height="15" fill="rgb(211,32,1)" fg:x="785" fg:w="1"/><text x="64.1231%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9544%" y="501" width="0.0814%" height="15" fill="rgb(246,2,12)" fg:x="786" fg:w="1"/><text x="64.2044%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9544%" y="485" width="0.0814%" height="15" fill="rgb(243,37,27)" fg:x="786" fg:w="1"/><text x="64.2044%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="63.8731%" y="677" width="0.2441%" height="15" fill="rgb(248,211,31)" fg:x="785" fg:w="3"/><text x="64.1231%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="63.8731%" y="661" width="0.2441%" height="15" fill="rgb(242,146,47)" fg:x="785" fg:w="3"/><text x="64.1231%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.8731%" y="645" width="0.2441%" height="15" fill="rgb(206,70,20)" fg:x="785" fg:w="3"/><text x="64.1231%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.9544%" y="629" width="0.1627%" height="15" fill="rgb(215,10,51)" fg:x="786" fg:w="2"/><text x="64.2044%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.9544%" y="613" width="0.1627%" height="15" fill="rgb(243,178,53)" fg:x="786" fg:w="2"/><text x="64.2044%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.9544%" y="597" width="0.1627%" height="15" fill="rgb(233,221,20)" fg:x="786" fg:w="2"/><text x="64.2044%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.9544%" y="581" width="0.1627%" height="15" fill="rgb(218,95,35)" fg:x="786" fg:w="2"/><text x="64.2044%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="63.9544%" y="565" width="0.1627%" height="15" fill="rgb(229,13,5)" fg:x="786" fg:w="2"/><text x="64.2044%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.9544%" y="549" width="0.1627%" height="15" fill="rgb(252,164,30)" fg:x="786" fg:w="2"/><text x="64.2044%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.9544%" y="533" width="0.1627%" height="15" fill="rgb(232,68,36)" fg:x="786" fg:w="2"/><text x="64.2044%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.9544%" y="517" width="0.1627%" height="15" fill="rgb(219,59,54)" fg:x="786" fg:w="2"/><text x="64.2044%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.0358%" y="501" width="0.0814%" height="15" fill="rgb(250,92,33)" fg:x="787" fg:w="1"/><text x="64.2858%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.0358%" y="485" width="0.0814%" height="15" fill="rgb(229,162,54)" fg:x="787" fg:w="1"/><text x="64.2858%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="64.0358%" y="469" width="0.0814%" height="15" fill="rgb(244,114,52)" fg:x="787" fg:w="1"/><text x="64.2858%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (29 samples, 2.36%)</title><rect x="61.8389%" y="709" width="2.3596%" height="15" fill="rgb(212,211,43)" fg:x="760" fg:w="29"/><text x="62.0889%" y="719.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.28%)</title><rect x="61.9203%" y="693" width="2.2783%" height="15" fill="rgb(226,147,8)" fg:x="761" fg:w="28"/><text x="62.1703%" y="703.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="64.1172%" y="677" width="0.0814%" height="15" fill="rgb(226,23,13)" fg:x="788" fg:w="1"/><text x="64.3672%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1172%" y="661" width="0.0814%" height="15" fill="rgb(240,63,4)" fg:x="788" fg:w="1"/><text x="64.3672%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1172%" y="645" width="0.0814%" height="15" fill="rgb(221,1,32)" fg:x="788" fg:w="1"/><text x="64.3672%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="64.1985%" y="677" width="0.0814%" height="15" fill="rgb(242,117,10)" fg:x="789" fg:w="1"/><text x="64.4485%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1985%" y="661" width="0.0814%" height="15" fill="rgb(249,172,44)" fg:x="789" fg:w="1"/><text x="64.4485%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1985%" y="645" width="0.0814%" height="15" fill="rgb(244,46,45)" fg:x="789" fg:w="1"/><text x="64.4485%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.1985%" y="629" width="0.0814%" height="15" fill="rgb(206,43,17)" fg:x="789" fg:w="1"/><text x="64.4485%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.1985%" y="613" width="0.0814%" height="15" fill="rgb(239,218,39)" fg:x="789" fg:w="1"/><text x="64.4485%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.1985%" y="597" width="0.0814%" height="15" fill="rgb(208,169,54)" fg:x="789" fg:w="1"/><text x="64.4485%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1985%" y="581" width="0.0814%" height="15" fill="rgb(247,25,42)" fg:x="789" fg:w="1"/><text x="64.4485%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1985%" y="565" width="0.0814%" height="15" fill="rgb(226,23,31)" fg:x="789" fg:w="1"/><text x="64.4485%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.1985%" y="549" width="0.0814%" height="15" fill="rgb(247,16,28)" fg:x="789" fg:w="1"/><text x="64.4485%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.1985%" y="533" width="0.0814%" height="15" fill="rgb(231,147,38)" fg:x="789" fg:w="1"/><text x="64.4485%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.1985%" y="517" width="0.0814%" height="15" fill="rgb(253,81,48)" fg:x="789" fg:w="1"/><text x="64.4485%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.1985%" y="501" width="0.0814%" height="15" fill="rgb(249,222,43)" fg:x="789" fg:w="1"/><text x="64.4485%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3613%" y="661" width="0.0814%" height="15" fill="rgb(221,3,27)" fg:x="791" fg:w="1"/><text x="64.6113%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.4426%" y="581" width="0.1627%" height="15" fill="rgb(228,180,5)" fg:x="792" fg:w="2"/><text x="64.6926%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.4426%" y="565" width="0.1627%" height="15" fill="rgb(227,131,42)" fg:x="792" fg:w="2"/><text x="64.6926%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.4426%" y="549" width="0.1627%" height="15" fill="rgb(212,3,39)" fg:x="792" fg:w="2"/><text x="64.6926%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.5240%" y="533" width="0.0814%" height="15" fill="rgb(226,45,5)" fg:x="793" fg:w="1"/><text x="64.7740%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5240%" y="517" width="0.0814%" height="15" fill="rgb(215,167,45)" fg:x="793" fg:w="1"/><text x="64.7740%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="64.4426%" y="661" width="0.2441%" height="15" fill="rgb(250,218,53)" fg:x="792" fg:w="3"/><text x="64.6926%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="64.4426%" y="645" width="0.2441%" height="15" fill="rgb(207,140,0)" fg:x="792" fg:w="3"/><text x="64.6926%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="64.4426%" y="629" width="0.2441%" height="15" fill="rgb(238,133,51)" fg:x="792" fg:w="3"/><text x="64.6926%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="64.4426%" y="613" width="0.2441%" height="15" fill="rgb(218,203,53)" fg:x="792" fg:w="3"/><text x="64.6926%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="64.4426%" y="597" width="0.2441%" height="15" fill="rgb(226,184,25)" fg:x="792" fg:w="3"/><text x="64.6926%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6054%" y="581" width="0.0814%" height="15" fill="rgb(231,121,21)" fg:x="794" fg:w="1"/><text x="64.8554%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6054%" y="565" width="0.0814%" height="15" fill="rgb(251,14,34)" fg:x="794" fg:w="1"/><text x="64.8554%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6054%" y="549" width="0.0814%" height="15" fill="rgb(249,193,11)" fg:x="794" fg:w="1"/><text x="64.8554%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6054%" y="533" width="0.0814%" height="15" fill="rgb(220,172,37)" fg:x="794" fg:w="1"/><text x="64.8554%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.6054%" y="517" width="0.0814%" height="15" fill="rgb(231,229,43)" fg:x="794" fg:w="1"/><text x="64.8554%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6054%" y="501" width="0.0814%" height="15" fill="rgb(250,161,5)" fg:x="794" fg:w="1"/><text x="64.8554%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6054%" y="485" width="0.0814%" height="15" fill="rgb(218,225,18)" fg:x="794" fg:w="1"/><text x="64.8554%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6054%" y="469" width="0.0814%" height="15" fill="rgb(245,45,42)" fg:x="794" fg:w="1"/><text x="64.8554%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.6054%" y="453" width="0.0814%" height="15" fill="rgb(211,115,1)" fg:x="794" fg:w="1"/><text x="64.8554%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.6054%" y="437" width="0.0814%" height="15" fill="rgb(248,133,52)" fg:x="794" fg:w="1"/><text x="64.8554%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6867%" y="597" width="0.0814%" height="15" fill="rgb(238,100,21)" fg:x="795" fg:w="1"/><text x="64.9367%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6867%" y="581" width="0.0814%" height="15" fill="rgb(247,144,11)" fg:x="795" fg:w="1"/><text x="64.9367%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="64.7681%" y="549" width="0.0814%" height="15" fill="rgb(206,164,16)" fg:x="796" fg:w="1"/><text x="65.0181%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.9308%" y="437" width="0.0814%" height="15" fill="rgb(222,34,3)" fg:x="798" fg:w="1"/><text x="65.1808%" y="447.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="64.6867%" y="645" width="0.4068%" height="15" fill="rgb(248,82,4)" fg:x="795" fg:w="5"/><text x="64.9367%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="64.6867%" y="629" width="0.4068%" height="15" fill="rgb(228,81,46)" fg:x="795" fg:w="5"/><text x="64.9367%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="64.6867%" y="613" width="0.4068%" height="15" fill="rgb(227,67,47)" fg:x="795" fg:w="5"/><text x="64.9367%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="64.7681%" y="597" width="0.3255%" height="15" fill="rgb(215,93,53)" fg:x="796" fg:w="4"/><text x="65.0181%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="64.7681%" y="581" width="0.3255%" height="15" fill="rgb(248,194,39)" fg:x="796" fg:w="4"/><text x="65.0181%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="64.7681%" y="565" width="0.3255%" height="15" fill="rgb(215,5,19)" fg:x="796" fg:w="4"/><text x="65.0181%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.8495%" y="549" width="0.2441%" height="15" fill="rgb(226,215,51)" fg:x="797" fg:w="3"/><text x="65.0995%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="64.8495%" y="533" width="0.2441%" height="15" fill="rgb(225,56,26)" fg:x="797" fg:w="3"/><text x="65.0995%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.9308%" y="517" width="0.1627%" height="15" fill="rgb(222,75,29)" fg:x="798" fg:w="2"/><text x="65.1808%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.9308%" y="501" width="0.1627%" height="15" fill="rgb(236,139,6)" fg:x="798" fg:w="2"/><text x="65.1808%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.9308%" y="485" width="0.1627%" height="15" fill="rgb(223,137,36)" fg:x="798" fg:w="2"/><text x="65.1808%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.9308%" y="469" width="0.1627%" height="15" fill="rgb(226,99,2)" fg:x="798" fg:w="2"/><text x="65.1808%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.9308%" y="453" width="0.1627%" height="15" fill="rgb(206,133,23)" fg:x="798" fg:w="2"/><text x="65.1808%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0122%" y="437" width="0.0814%" height="15" fill="rgb(243,173,15)" fg:x="799" fg:w="1"/><text x="65.2622%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.2563%" y="533" width="0.0814%" height="15" fill="rgb(228,69,28)" fg:x="802" fg:w="1"/><text x="65.5063%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.90%)</title><rect x="64.6867%" y="661" width="0.8950%" height="15" fill="rgb(212,51,22)" fg:x="795" fg:w="11"/><text x="64.9367%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="65.0936%" y="645" width="0.4882%" height="15" fill="rgb(227,113,0)" fg:x="800" fg:w="6"/><text x="65.3436%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="65.0936%" y="629" width="0.4882%" height="15" fill="rgb(252,84,27)" fg:x="800" fg:w="6"/><text x="65.3436%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="65.1749%" y="613" width="0.4068%" height="15" fill="rgb(223,145,39)" fg:x="801" fg:w="5"/><text x="65.4249%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="65.1749%" y="597" width="0.4068%" height="15" fill="rgb(239,219,30)" fg:x="801" fg:w="5"/><text x="65.4249%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="65.1749%" y="581" width="0.4068%" height="15" fill="rgb(224,196,39)" fg:x="801" fg:w="5"/><text x="65.4249%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="65.1749%" y="565" width="0.4068%" height="15" fill="rgb(205,35,43)" fg:x="801" fg:w="5"/><text x="65.4249%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="65.2563%" y="549" width="0.3255%" height="15" fill="rgb(228,201,21)" fg:x="802" fg:w="4"/><text x="65.5063%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="65.3377%" y="533" width="0.2441%" height="15" fill="rgb(237,118,16)" fg:x="803" fg:w="3"/><text x="65.5877%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.3377%" y="517" width="0.2441%" height="15" fill="rgb(241,17,19)" fg:x="803" fg:w="3"/><text x="65.5877%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.4190%" y="501" width="0.1627%" height="15" fill="rgb(214,10,25)" fg:x="804" fg:w="2"/><text x="65.6690%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.5004%" y="485" width="0.0814%" height="15" fill="rgb(238,37,29)" fg:x="805" fg:w="1"/><text x="65.7504%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5004%" y="469" width="0.0814%" height="15" fill="rgb(253,83,25)" fg:x="805" fg:w="1"/><text x="65.7504%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.5004%" y="453" width="0.0814%" height="15" fill="rgb(234,192,12)" fg:x="805" fg:w="1"/><text x="65.7504%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.5004%" y="437" width="0.0814%" height="15" fill="rgb(241,216,45)" fg:x="805" fg:w="1"/><text x="65.7504%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5004%" y="421" width="0.0814%" height="15" fill="rgb(242,22,33)" fg:x="805" fg:w="1"/><text x="65.7504%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.5818%" y="581" width="0.1627%" height="15" fill="rgb(231,105,49)" fg:x="806" fg:w="2"/><text x="65.8318%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="65.5818%" y="661" width="0.3255%" height="15" fill="rgb(218,204,15)" fg:x="806" fg:w="4"/><text x="65.8318%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="65.5818%" y="645" width="0.3255%" height="15" fill="rgb(235,138,41)" fg:x="806" fg:w="4"/><text x="65.8318%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="65.5818%" y="629" width="0.3255%" height="15" fill="rgb(246,0,9)" fg:x="806" fg:w="4"/><text x="65.8318%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="65.5818%" y="613" width="0.3255%" height="15" fill="rgb(210,74,4)" fg:x="806" fg:w="4"/><text x="65.8318%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="65.5818%" y="597" width="0.3255%" height="15" fill="rgb(250,60,41)" fg:x="806" fg:w="4"/><text x="65.8318%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7445%" y="581" width="0.1627%" height="15" fill="rgb(220,115,12)" fg:x="808" fg:w="2"/><text x="65.9945%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7445%" y="565" width="0.1627%" height="15" fill="rgb(237,100,13)" fg:x="808" fg:w="2"/><text x="65.9945%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.7445%" y="549" width="0.1627%" height="15" fill="rgb(213,55,26)" fg:x="808" fg:w="2"/><text x="65.9945%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7445%" y="533" width="0.1627%" height="15" fill="rgb(216,17,4)" fg:x="808" fg:w="2"/><text x="65.9945%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.7445%" y="517" width="0.1627%" height="15" fill="rgb(220,153,47)" fg:x="808" fg:w="2"/><text x="65.9945%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.7445%" y="501" width="0.1627%" height="15" fill="rgb(215,131,9)" fg:x="808" fg:w="2"/><text x="65.9945%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8259%" y="485" width="0.0814%" height="15" fill="rgb(233,46,42)" fg:x="809" fg:w="1"/><text x="66.0759%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8259%" y="469" width="0.0814%" height="15" fill="rgb(226,86,7)" fg:x="809" fg:w="1"/><text x="66.0759%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (22 samples, 1.79%)</title><rect x="64.1985%" y="709" width="1.7901%" height="15" fill="rgb(239,226,21)" fg:x="789" fg:w="22"/><text x="64.4485%" y="719.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.79%)</title><rect x="64.1985%" y="693" width="1.7901%" height="15" fill="rgb(244,137,22)" fg:x="789" fg:w="22"/><text x="64.4485%" y="703.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.71%)</title><rect x="64.2799%" y="677" width="1.7087%" height="15" fill="rgb(211,139,35)" fg:x="790" fg:w="21"/><text x="64.5299%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="65.9072%" y="661" width="0.0814%" height="15" fill="rgb(214,62,50)" fg:x="810" fg:w="1"/><text x="66.1572%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9072%" y="645" width="0.0814%" height="15" fill="rgb(212,113,44)" fg:x="810" fg:w="1"/><text x="66.1572%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.9072%" y="629" width="0.0814%" height="15" fill="rgb(226,150,43)" fg:x="810" fg:w="1"/><text x="66.1572%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9886%" y="709" width="0.0814%" height="15" fill="rgb(250,71,37)" fg:x="811" fg:w="1"/><text x="66.2386%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="66.0700%" y="709" width="0.0814%" height="15" fill="rgb(219,76,19)" fg:x="812" fg:w="1"/><text x="66.3200%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="66.0700%" y="693" width="0.0814%" height="15" fill="rgb(250,39,11)" fg:x="812" fg:w="1"/><text x="66.3200%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.0700%" y="677" width="0.0814%" height="15" fill="rgb(230,64,31)" fg:x="812" fg:w="1"/><text x="66.3200%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.0700%" y="661" width="0.0814%" height="15" fill="rgb(208,222,23)" fg:x="812" fg:w="1"/><text x="66.3200%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.0700%" y="645" width="0.0814%" height="15" fill="rgb(227,125,18)" fg:x="812" fg:w="1"/><text x="66.3200%" y="655.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="66.1513%" y="645" width="0.0814%" height="15" fill="rgb(234,210,9)" fg:x="813" fg:w="1"/><text x="66.4013%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3141%" y="517" width="0.0814%" height="15" fill="rgb(217,127,24)" fg:x="815" fg:w="1"/><text x="66.5641%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3141%" y="501" width="0.0814%" height="15" fill="rgb(239,141,48)" fg:x="815" fg:w="1"/><text x="66.5641%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.3141%" y="485" width="0.0814%" height="15" fill="rgb(227,109,8)" fg:x="815" fg:w="1"/><text x="66.5641%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.3141%" y="469" width="0.0814%" height="15" fill="rgb(235,184,23)" fg:x="815" fg:w="1"/><text x="66.5641%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.3141%" y="453" width="0.0814%" height="15" fill="rgb(227,226,48)" fg:x="815" fg:w="1"/><text x="66.5641%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.3141%" y="437" width="0.0814%" height="15" fill="rgb(206,150,11)" fg:x="815" fg:w="1"/><text x="66.5641%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.3141%" y="421" width="0.0814%" height="15" fill="rgb(254,2,33)" fg:x="815" fg:w="1"/><text x="66.5641%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (817 samples, 66.48%)</title><rect x="0.0000%" y="773" width="66.4768%" height="15" fill="rgb(243,160,20)" fg:x="0" fg:w="817"/><text x="0.2500%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (817 samples, 66.48%)</title><rect x="0.0000%" y="757" width="66.4768%" height="15" fill="rgb(218,208,30)" fg:x="0" fg:w="817"/><text x="0.2500%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (817 samples, 66.48%)</title><rect x="0.0000%" y="741" width="66.4768%" height="15" fill="rgb(224,120,49)" fg:x="0" fg:w="817"/><text x="0.2500%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (192 samples, 15.62%)</title><rect x="50.8544%" y="725" width="15.6225%" height="15" fill="rgb(246,12,2)" fg:x="625" fg:w="192"/><text x="51.1044%" y="735.50">engine::session::Session..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="66.1513%" y="709" width="0.3255%" height="15" fill="rgb(236,117,3)" fg:x="813" fg:w="4"/><text x="66.4013%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.33%)</title><rect x="66.1513%" y="693" width="0.3255%" height="15" fill="rgb(216,128,52)" fg:x="813" fg:w="4"/><text x="66.4013%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.33%)</title><rect x="66.1513%" y="677" width="0.3255%" height="15" fill="rgb(246,145,19)" fg:x="813" fg:w="4"/><text x="66.4013%" y="687.50"></text></g><g><title>core::fmt::write (4 samples, 0.33%)</title><rect x="66.1513%" y="661" width="0.3255%" height="15" fill="rgb(222,11,46)" fg:x="813" fg:w="4"/><text x="66.4013%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="645" width="0.2441%" height="15" fill="rgb(245,82,36)" fg:x="814" fg:w="3"/><text x="66.4827%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="629" width="0.2441%" height="15" fill="rgb(250,73,51)" fg:x="814" fg:w="3"/><text x="66.4827%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="613" width="0.2441%" height="15" fill="rgb(221,189,23)" fg:x="814" fg:w="3"/><text x="66.4827%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="66.2327%" y="597" width="0.2441%" height="15" fill="rgb(210,33,7)" fg:x="814" fg:w="3"/><text x="66.4827%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="581" width="0.2441%" height="15" fill="rgb(210,107,22)" fg:x="814" fg:w="3"/><text x="66.4827%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="565" width="0.2441%" height="15" fill="rgb(222,116,37)" fg:x="814" fg:w="3"/><text x="66.4827%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="66.2327%" y="549" width="0.2441%" height="15" fill="rgb(254,17,48)" fg:x="814" fg:w="3"/><text x="66.4827%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="66.2327%" y="533" width="0.2441%" height="15" fill="rgb(224,36,32)" fg:x="814" fg:w="3"/><text x="66.4827%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.3954%" y="517" width="0.0814%" height="15" fill="rgb(232,90,46)" fg:x="816" fg:w="1"/><text x="66.6454%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3954%" y="501" width="0.0814%" height="15" fill="rgb(241,66,40)" fg:x="816" fg:w="1"/><text x="66.6454%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3954%" y="485" width="0.0814%" height="15" fill="rgb(249,184,29)" fg:x="816" fg:w="1"/><text x="66.6454%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.3954%" y="469" width="0.0814%" height="15" fill="rgb(231,181,1)" fg:x="816" fg:w="1"/><text x="66.6454%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.3954%" y="453" width="0.0814%" height="15" fill="rgb(224,94,2)" fg:x="816" fg:w="1"/><text x="66.6454%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.3954%" y="437" width="0.0814%" height="15" fill="rgb(229,170,15)" fg:x="816" fg:w="1"/><text x="66.6454%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.3954%" y="421" width="0.0814%" height="15" fill="rgb(240,127,35)" fg:x="816" fg:w="1"/><text x="66.6454%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.3954%" y="405" width="0.0814%" height="15" fill="rgb(248,196,34)" fg:x="816" fg:w="1"/><text x="66.6454%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.3954%" y="389" width="0.0814%" height="15" fill="rgb(236,137,7)" fg:x="816" fg:w="1"/><text x="66.6454%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.3954%" y="373" width="0.0814%" height="15" fill="rgb(235,127,16)" fg:x="816" fg:w="1"/><text x="66.6454%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.3954%" y="357" width="0.0814%" height="15" fill="rgb(250,192,54)" fg:x="816" fg:w="1"/><text x="66.6454%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.3954%" y="341" width="0.0814%" height="15" fill="rgb(218,98,20)" fg:x="816" fg:w="1"/><text x="66.6454%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.3954%" y="325" width="0.0814%" height="15" fill="rgb(230,176,47)" fg:x="816" fg:w="1"/><text x="66.6454%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.3954%" y="309" width="0.0814%" height="15" fill="rgb(244,2,33)" fg:x="816" fg:w="1"/><text x="66.6454%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.3954%" y="293" width="0.0814%" height="15" fill="rgb(231,100,17)" fg:x="816" fg:w="1"/><text x="66.6454%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.3954%" y="277" width="0.0814%" height="15" fill="rgb(245,23,12)" fg:x="816" fg:w="1"/><text x="66.6454%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="66.4768%" y="709" width="0.0814%" height="15" fill="rgb(249,55,22)" fg:x="817" fg:w="1"/><text x="66.7268%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.4768%" y="693" width="0.0814%" height="15" fill="rgb(207,134,9)" fg:x="817" fg:w="1"/><text x="66.7268%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5582%" y="613" width="0.0814%" height="15" fill="rgb(218,134,0)" fg:x="818" fg:w="1"/><text x="66.8082%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="66.6395%" y="613" width="0.2441%" height="15" fill="rgb(213,212,33)" fg:x="819" fg:w="3"/><text x="66.8895%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8023%" y="597" width="0.0814%" height="15" fill="rgb(252,106,18)" fg:x="821" fg:w="1"/><text x="67.0523%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.9650%" y="597" width="0.0814%" height="15" fill="rgb(208,126,42)" fg:x="823" fg:w="1"/><text x="67.2150%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0464%" y="581" width="0.0814%" height="15" fill="rgb(246,175,29)" fg:x="824" fg:w="1"/><text x="67.2964%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="66.5582%" y="645" width="0.7323%" height="15" fill="rgb(215,13,50)" fg:x="818" fg:w="9"/><text x="66.8082%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="66.5582%" y="629" width="0.7323%" height="15" fill="rgb(216,172,15)" fg:x="818" fg:w="9"/><text x="66.8082%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="66.8836%" y="613" width="0.4068%" height="15" fill="rgb(212,103,13)" fg:x="822" fg:w="5"/><text x="67.1336%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.0464%" y="597" width="0.2441%" height="15" fill="rgb(231,171,36)" fg:x="824" fg:w="3"/><text x="67.2964%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.1277%" y="581" width="0.1627%" height="15" fill="rgb(250,123,20)" fg:x="825" fg:w="2"/><text x="67.3777%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2091%" y="565" width="0.0814%" height="15" fill="rgb(212,53,50)" fg:x="826" fg:w="1"/><text x="67.4591%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="66.5582%" y="693" width="0.8137%" height="15" fill="rgb(243,54,12)" fg:x="818" fg:w="10"/><text x="66.8082%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (10 samples, 0.81%)</title><rect x="66.5582%" y="677" width="0.8137%" height="15" fill="rgb(234,101,34)" fg:x="818" fg:w="10"/><text x="66.8082%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="66.5582%" y="661" width="0.8137%" height="15" fill="rgb(254,67,22)" fg:x="818" fg:w="10"/><text x="66.8082%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::base::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="67.2905%" y="645" width="0.0814%" height="15" fill="rgb(250,35,47)" fg:x="827" fg:w="1"/><text x="67.5405%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="66.4768%" y="725" width="1.0578%" height="15" fill="rgb(226,126,38)" fg:x="817" fg:w="13"/><text x="66.7268%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (12 samples, 0.98%)</title><rect x="66.5582%" y="709" width="0.9764%" height="15" fill="rgb(216,138,53)" fg:x="818" fg:w="12"/><text x="66.8082%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.3718%" y="693" width="0.1627%" height="15" fill="rgb(246,199,43)" fg:x="828" fg:w="2"/><text x="67.6218%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="67.6159%" y="629" width="0.0814%" height="15" fill="rgb(232,125,11)" fg:x="831" fg:w="1"/><text x="67.8659%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.6159%" y="613" width="0.0814%" height="15" fill="rgb(218,219,45)" fg:x="831" fg:w="1"/><text x="67.8659%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.6159%" y="597" width="0.0814%" height="15" fill="rgb(216,102,54)" fg:x="831" fg:w="1"/><text x="67.8659%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.6159%" y="581" width="0.0814%" height="15" fill="rgb(250,228,7)" fg:x="831" fg:w="1"/><text x="67.8659%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.57%)</title><rect x="67.6159%" y="645" width="0.5696%" height="15" fill="rgb(226,125,25)" fg:x="831" fg:w="7"/><text x="67.8659%" y="655.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.49%)</title><rect x="67.6973%" y="629" width="0.4882%" height="15" fill="rgb(224,165,27)" fg:x="832" fg:w="6"/><text x="67.9473%" y="639.50"></text></g><g><title>dlopen (6 samples, 0.49%)</title><rect x="67.6973%" y="613" width="0.4882%" height="15" fill="rgb(233,86,3)" fg:x="832" fg:w="6"/><text x="67.9473%" y="623.50"></text></g><g><title>_dl_catch_error (6 samples, 0.49%)</title><rect x="67.6973%" y="597" width="0.4882%" height="15" fill="rgb(228,116,20)" fg:x="832" fg:w="6"/><text x="67.9473%" y="607.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="67.6973%" y="581" width="0.4882%" height="15" fill="rgb(209,192,17)" fg:x="832" fg:w="6"/><text x="67.9473%" y="591.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="67.6973%" y="565" width="0.4882%" height="15" fill="rgb(224,88,34)" fg:x="832" fg:w="6"/><text x="67.9473%" y="575.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.49%)</title><rect x="67.6973%" y="549" width="0.4882%" height="15" fill="rgb(233,38,6)" fg:x="832" fg:w="6"/><text x="67.9473%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.73%)</title><rect x="67.5346%" y="725" width="0.7323%" height="15" fill="rgb(212,59,30)" fg:x="830" fg:w="9"/><text x="67.7846%" y="735.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (9 samples, 0.73%)</title><rect x="67.5346%" y="709" width="0.7323%" height="15" fill="rgb(213,80,3)" fg:x="830" fg:w="9"/><text x="67.7846%" y="719.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.73%)</title><rect x="67.5346%" y="693" width="0.7323%" height="15" fill="rgb(251,178,7)" fg:x="830" fg:w="9"/><text x="67.7846%" y="703.50"></text></g><g><title>engine::session::Session::initialize (9 samples, 0.73%)</title><rect x="67.5346%" y="677" width="0.7323%" height="15" fill="rgb(213,154,26)" fg:x="830" fg:w="9"/><text x="67.7846%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.73%)</title><rect x="67.5346%" y="661" width="0.7323%" height="15" fill="rgb(238,165,49)" fg:x="830" fg:w="9"/><text x="67.7846%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="68.1855%" y="645" width="0.0814%" height="15" fill="rgb(248,91,46)" fg:x="838" fg:w="1"/><text x="68.4355%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="68.1855%" y="629" width="0.0814%" height="15" fill="rgb(244,21,52)" fg:x="838" fg:w="1"/><text x="68.4355%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="68.2669%" y="709" width="0.0814%" height="15" fill="rgb(247,122,20)" fg:x="839" fg:w="1"/><text x="68.5169%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="68.2669%" y="693" width="0.0814%" height="15" fill="rgb(218,27,9)" fg:x="839" fg:w="1"/><text x="68.5169%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3483%" y="677" width="0.0814%" height="15" fill="rgb(246,7,6)" fg:x="840" fg:w="1"/><text x="68.5983%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3483%" y="661" width="0.0814%" height="15" fill="rgb(227,135,54)" fg:x="840" fg:w="1"/><text x="68.5983%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.3483%" y="645" width="0.0814%" height="15" fill="rgb(247,14,11)" fg:x="840" fg:w="1"/><text x="68.5983%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.3483%" y="629" width="0.0814%" height="15" fill="rgb(206,149,34)" fg:x="840" fg:w="1"/><text x="68.5983%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.3483%" y="613" width="0.0814%" height="15" fill="rgb(227,228,4)" fg:x="840" fg:w="1"/><text x="68.5983%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3483%" y="597" width="0.0814%" height="15" fill="rgb(238,218,28)" fg:x="840" fg:w="1"/><text x="68.5983%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.3483%" y="581" width="0.0814%" height="15" fill="rgb(252,86,40)" fg:x="840" fg:w="1"/><text x="68.5983%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.3483%" y="565" width="0.0814%" height="15" fill="rgb(251,225,11)" fg:x="840" fg:w="1"/><text x="68.5983%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.3483%" y="549" width="0.0814%" height="15" fill="rgb(206,46,49)" fg:x="840" fg:w="1"/><text x="68.5983%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.3483%" y="533" width="0.0814%" height="15" fill="rgb(245,128,24)" fg:x="840" fg:w="1"/><text x="68.5983%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.3483%" y="517" width="0.0814%" height="15" fill="rgb(219,177,34)" fg:x="840" fg:w="1"/><text x="68.5983%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3483%" y="501" width="0.0814%" height="15" fill="rgb(218,60,48)" fg:x="840" fg:w="1"/><text x="68.5983%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4296%" y="677" width="0.0814%" height="15" fill="rgb(221,11,5)" fg:x="841" fg:w="1"/><text x="68.6796%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.4296%" y="661" width="0.0814%" height="15" fill="rgb(220,148,13)" fg:x="841" fg:w="1"/><text x="68.6796%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.33%)</title><rect x="68.3483%" y="693" width="0.3255%" height="15" fill="rgb(210,16,3)" fg:x="840" fg:w="4"/><text x="68.5983%" y="703.50"></text></g><g><title>kernel::model::base::EntityKey::new (2 samples, 0.16%)</title><rect x="68.5110%" y="677" width="0.1627%" height="15" fill="rgb(236,80,2)" fg:x="842" fg:w="2"/><text x="68.7610%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5924%" y="661" width="0.0814%" height="15" fill="rgb(239,129,19)" fg:x="843" fg:w="1"/><text x="68.8424%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.6737%" y="661" width="0.0814%" height="15" fill="rgb(220,106,35)" fg:x="844" fg:w="1"/><text x="68.9237%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.7551%" y="661" width="0.1627%" height="15" fill="rgb(252,139,45)" fg:x="845" fg:w="2"/><text x="69.0051%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="68.7551%" y="645" width="0.1627%" height="15" fill="rgb(229,8,36)" fg:x="845" fg:w="2"/><text x="69.0051%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="68.8365%" y="629" width="0.0814%" height="15" fill="rgb(230,126,33)" fg:x="846" fg:w="1"/><text x="69.0865%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8365%" y="613" width="0.0814%" height="15" fill="rgb(239,140,21)" fg:x="846" fg:w="1"/><text x="69.0865%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8365%" y="597" width="0.0814%" height="15" fill="rgb(254,104,9)" fg:x="846" fg:w="1"/><text x="69.0865%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8365%" y="581" width="0.0814%" height="15" fill="rgb(239,52,14)" fg:x="846" fg:w="1"/><text x="69.0865%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8365%" y="565" width="0.0814%" height="15" fill="rgb(208,227,44)" fg:x="846" fg:w="1"/><text x="69.0865%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8365%" y="549" width="0.0814%" height="15" fill="rgb(246,18,19)" fg:x="846" fg:w="1"/><text x="69.0865%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8365%" y="533" width="0.0814%" height="15" fill="rgb(235,228,25)" fg:x="846" fg:w="1"/><text x="69.0865%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.8365%" y="517" width="0.0814%" height="15" fill="rgb(240,156,20)" fg:x="846" fg:w="1"/><text x="69.0865%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="68.9178%" y="613" width="0.2441%" height="15" fill="rgb(224,8,20)" fg:x="847" fg:w="3"/><text x="69.1678%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="68.9178%" y="597" width="0.2441%" height="15" fill="rgb(214,12,52)" fg:x="847" fg:w="3"/><text x="69.1678%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="68.9992%" y="581" width="0.1627%" height="15" fill="rgb(211,220,47)" fg:x="848" fg:w="2"/><text x="69.2492%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.9992%" y="565" width="0.1627%" height="15" fill="rgb(250,173,5)" fg:x="848" fg:w="2"/><text x="69.2492%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.9992%" y="549" width="0.1627%" height="15" fill="rgb(250,125,52)" fg:x="848" fg:w="2"/><text x="69.2492%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.1619%" y="597" width="0.0814%" height="15" fill="rgb(209,133,18)" fg:x="850" fg:w="1"/><text x="69.4119%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.4060%" y="549" width="0.0814%" height="15" fill="rgb(216,173,22)" fg:x="853" fg:w="1"/><text x="69.6560%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.4060%" y="533" width="0.0814%" height="15" fill="rgb(205,3,22)" fg:x="853" fg:w="1"/><text x="69.6560%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="69.2433%" y="597" width="0.3255%" height="15" fill="rgb(248,22,20)" fg:x="851" fg:w="4"/><text x="69.4933%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="69.2433%" y="581" width="0.3255%" height="15" fill="rgb(233,6,29)" fg:x="851" fg:w="4"/><text x="69.4933%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.4060%" y="565" width="0.1627%" height="15" fill="rgb(240,22,54)" fg:x="853" fg:w="2"/><text x="69.6560%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="69.4874%" y="549" width="0.0814%" height="15" fill="rgb(231,133,32)" fg:x="854" fg:w="1"/><text x="69.7374%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.6501%" y="581" width="0.0814%" height="15" fill="rgb(248,193,4)" fg:x="856" fg:w="1"/><text x="69.9001%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="69.7315%" y="581" width="0.1627%" height="15" fill="rgb(211,178,46)" fg:x="857" fg:w="2"/><text x="69.9815%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="69.7315%" y="565" width="0.1627%" height="15" fill="rgb(224,5,42)" fg:x="857" fg:w="2"/><text x="69.9815%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.8129%" y="549" width="0.0814%" height="15" fill="rgb(239,176,25)" fg:x="858" fg:w="1"/><text x="70.0629%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.8129%" y="533" width="0.0814%" height="15" fill="rgb(245,187,50)" fg:x="858" fg:w="1"/><text x="70.0629%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.8129%" y="517" width="0.0814%" height="15" fill="rgb(248,24,15)" fg:x="858" fg:w="1"/><text x="70.0629%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.8129%" y="501" width="0.0814%" height="15" fill="rgb(205,166,13)" fg:x="858" fg:w="1"/><text x="70.0629%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.8129%" y="485" width="0.0814%" height="15" fill="rgb(208,114,23)" fg:x="858" fg:w="1"/><text x="70.0629%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.8129%" y="469" width="0.0814%" height="15" fill="rgb(239,127,18)" fg:x="858" fg:w="1"/><text x="70.0629%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="69.8942%" y="581" width="0.1627%" height="15" fill="rgb(219,154,28)" fg:x="859" fg:w="2"/><text x="70.1442%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.9756%" y="565" width="0.0814%" height="15" fill="rgb(225,157,23)" fg:x="860" fg:w="1"/><text x="70.2256%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.9756%" y="549" width="0.0814%" height="15" fill="rgb(219,8,6)" fg:x="860" fg:w="1"/><text x="70.2256%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.2197%" y="517" width="0.0814%" height="15" fill="rgb(212,47,6)" fg:x="863" fg:w="1"/><text x="70.4697%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.2197%" y="501" width="0.0814%" height="15" fill="rgb(224,190,4)" fg:x="863" fg:w="1"/><text x="70.4697%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="70.1383%" y="549" width="0.4882%" height="15" fill="rgb(239,183,29)" fg:x="862" fg:w="6"/><text x="70.3883%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="70.1383%" y="533" width="0.4882%" height="15" fill="rgb(213,57,7)" fg:x="862" fg:w="6"/><text x="70.3883%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="70.3011%" y="517" width="0.3255%" height="15" fill="rgb(216,148,1)" fg:x="864" fg:w="4"/><text x="70.5511%" y="527.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="70.3011%" y="501" width="0.3255%" height="15" fill="rgb(236,182,29)" fg:x="864" fg:w="4"/><text x="70.5511%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.33%)</title><rect x="70.3011%" y="485" width="0.3255%" height="15" fill="rgb(244,120,48)" fg:x="864" fg:w="4"/><text x="70.5511%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.33%)</title><rect x="70.3011%" y="469" width="0.3255%" height="15" fill="rgb(206,71,34)" fg:x="864" fg:w="4"/><text x="70.5511%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="70.3824%" y="453" width="0.2441%" height="15" fill="rgb(242,32,6)" fg:x="865" fg:w="3"/><text x="70.6324%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="70.3824%" y="437" width="0.2441%" height="15" fill="rgb(241,35,3)" fg:x="865" fg:w="3"/><text x="70.6324%" y="447.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="70.3824%" y="421" width="0.2441%" height="15" fill="rgb(222,62,19)" fg:x="865" fg:w="3"/><text x="70.6324%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.14%)</title><rect x="69.5688%" y="597" width="1.1391%" height="15" fill="rgb(223,110,41)" fg:x="855" fg:w="14"/><text x="69.8188%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="70.0570%" y="581" width="0.6509%" height="15" fill="rgb(208,224,4)" fg:x="861" fg:w="8"/><text x="70.3070%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="70.1383%" y="565" width="0.5696%" height="15" fill="rgb(241,137,19)" fg:x="862" fg:w="7"/><text x="70.3883%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.6265%" y="549" width="0.0814%" height="15" fill="rgb(244,24,17)" fg:x="868" fg:w="1"/><text x="70.8765%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.6265%" y="533" width="0.0814%" height="15" fill="rgb(245,178,49)" fg:x="868" fg:w="1"/><text x="70.8765%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (25 samples, 2.03%)</title><rect x="68.9178%" y="629" width="2.0342%" height="15" fill="rgb(219,160,38)" fg:x="847" fg:w="25"/><text x="69.1678%" y="639.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.79%)</title><rect x="69.1619%" y="613" width="1.7901%" height="15" fill="rgb(228,137,14)" fg:x="850" fg:w="22"/><text x="69.4119%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="70.7079%" y="597" width="0.2441%" height="15" fill="rgb(237,134,11)" fg:x="869" fg:w="3"/><text x="70.9579%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.7893%" y="581" width="0.1627%" height="15" fill="rgb(211,126,44)" fg:x="870" fg:w="2"/><text x="71.0393%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.8706%" y="565" width="0.0814%" height="15" fill="rgb(226,171,33)" fg:x="871" fg:w="1"/><text x="71.1206%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.8706%" y="549" width="0.0814%" height="15" fill="rgb(253,99,13)" fg:x="871" fg:w="1"/><text x="71.1206%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.8706%" y="533" width="0.0814%" height="15" fill="rgb(244,48,7)" fg:x="871" fg:w="1"/><text x="71.1206%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.8706%" y="517" width="0.0814%" height="15" fill="rgb(244,217,54)" fg:x="871" fg:w="1"/><text x="71.1206%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.0334%" y="565" width="0.0814%" height="15" fill="rgb(224,15,18)" fg:x="873" fg:w="1"/><text x="71.2834%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1147%" y="549" width="0.0814%" height="15" fill="rgb(244,99,12)" fg:x="874" fg:w="1"/><text x="71.3647%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1147%" y="533" width="0.0814%" height="15" fill="rgb(233,226,8)" fg:x="874" fg:w="1"/><text x="71.3647%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.1961%" y="533" width="0.0814%" height="15" fill="rgb(229,211,3)" fg:x="875" fg:w="1"/><text x="71.4461%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1961%" y="517" width="0.0814%" height="15" fill="rgb(216,140,21)" fg:x="875" fg:w="1"/><text x="71.4461%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="70.9520%" y="629" width="0.4068%" height="15" fill="rgb(234,122,30)" fg:x="872" fg:w="5"/><text x="71.2020%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="70.9520%" y="613" width="0.4068%" height="15" fill="rgb(236,25,46)" fg:x="872" fg:w="5"/><text x="71.2020%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="70.9520%" y="597" width="0.4068%" height="15" fill="rgb(217,52,54)" fg:x="872" fg:w="5"/><text x="71.2020%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="71.0334%" y="581" width="0.3255%" height="15" fill="rgb(222,29,26)" fg:x="873" fg:w="4"/><text x="71.2834%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="71.1147%" y="565" width="0.2441%" height="15" fill="rgb(216,177,29)" fg:x="874" fg:w="3"/><text x="71.3647%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.1961%" y="549" width="0.1627%" height="15" fill="rgb(247,136,51)" fg:x="875" fg:w="2"/><text x="71.4461%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.2775%" y="533" width="0.0814%" height="15" fill="rgb(231,47,47)" fg:x="876" fg:w="1"/><text x="71.5275%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.2775%" y="517" width="0.0814%" height="15" fill="rgb(211,192,36)" fg:x="876" fg:w="1"/><text x="71.5275%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.2775%" y="501" width="0.0814%" height="15" fill="rgb(229,156,32)" fg:x="876" fg:w="1"/><text x="71.5275%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4402%" y="581" width="0.0814%" height="15" fill="rgb(248,213,20)" fg:x="878" fg:w="1"/><text x="71.6902%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5216%" y="581" width="0.0814%" height="15" fill="rgb(217,64,7)" fg:x="879" fg:w="1"/><text x="71.7716%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6029%" y="581" width="0.0814%" height="15" fill="rgb(232,142,8)" fg:x="880" fg:w="1"/><text x="71.8529%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6029%" y="565" width="0.0814%" height="15" fill="rgb(224,92,44)" fg:x="880" fg:w="1"/><text x="71.8529%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6029%" y="549" width="0.0814%" height="15" fill="rgb(214,169,17)" fg:x="880" fg:w="1"/><text x="71.8529%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="71.6843%" y="581" width="0.0814%" height="15" fill="rgb(210,59,37)" fg:x="881" fg:w="1"/><text x="71.9343%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.6843%" y="565" width="0.0814%" height="15" fill="rgb(214,116,48)" fg:x="881" fg:w="1"/><text x="71.9343%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6843%" y="549" width="0.0814%" height="15" fill="rgb(244,191,6)" fg:x="881" fg:w="1"/><text x="71.9343%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="71.7657%" y="501" width="0.1627%" height="15" fill="rgb(241,50,52)" fg:x="882" fg:w="2"/><text x="72.0157%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="71.7657%" y="533" width="0.2441%" height="15" fill="rgb(236,75,39)" fg:x="882" fg:w="3"/><text x="72.0157%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="71.7657%" y="517" width="0.2441%" height="15" fill="rgb(236,99,0)" fg:x="882" fg:w="3"/><text x="72.0157%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9284%" y="501" width="0.0814%" height="15" fill="rgb(207,202,15)" fg:x="884" fg:w="1"/><text x="72.1784%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1725%" y="501" width="0.0814%" height="15" fill="rgb(233,207,14)" fg:x="887" fg:w="1"/><text x="72.4225%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.4980%" y="453" width="0.0814%" height="15" fill="rgb(226,27,51)" fg:x="891" fg:w="1"/><text x="72.7480%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5793%" y="437" width="0.0814%" height="15" fill="rgb(206,104,42)" fg:x="892" fg:w="1"/><text x="72.8293%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="72.5793%" y="453" width="0.1627%" height="15" fill="rgb(212,225,4)" fg:x="892" fg:w="2"/><text x="72.8293%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="72.6607%" y="437" width="0.0814%" height="15" fill="rgb(233,96,42)" fg:x="893" fg:w="1"/><text x="72.9107%" y="447.50"></text></g><g><title>engine::session::Session::flush (56 samples, 4.56%)</title><rect x="68.3483%" y="709" width="4.5566%" height="15" fill="rgb(229,21,32)" fg:x="840" fg:w="56"/><text x="68.5983%" y="719.50">engin..</text></g><g><title>engine::session::state::State::close (52 samples, 4.23%)</title><rect x="68.6737%" y="693" width="4.2311%" height="15" fill="rgb(226,216,24)" fg:x="844" fg:w="52"/><text x="68.9237%" y="703.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (52 samples, 4.23%)</title><rect x="68.6737%" y="677" width="4.2311%" height="15" fill="rgb(221,163,17)" fg:x="844" fg:w="52"/><text x="68.9237%" y="687.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (49 samples, 3.99%)</title><rect x="68.9178%" y="661" width="3.9870%" height="15" fill="rgb(216,216,42)" fg:x="847" fg:w="49"/><text x="69.1678%" y="671.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (49 samples, 3.99%)</title><rect x="68.9178%" y="645" width="3.9870%" height="15" fill="rgb(240,118,7)" fg:x="847" fg:w="49"/><text x="69.1678%" y="655.50">engi..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.55%)</title><rect x="71.3588%" y="629" width="1.5460%" height="15" fill="rgb(221,67,37)" fg:x="877" fg:w="19"/><text x="71.6088%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.55%)</title><rect x="71.3588%" y="613" width="1.5460%" height="15" fill="rgb(241,32,44)" fg:x="877" fg:w="19"/><text x="71.6088%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.55%)</title><rect x="71.3588%" y="597" width="1.5460%" height="15" fill="rgb(235,204,43)" fg:x="877" fg:w="19"/><text x="71.6088%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.14%)</title><rect x="71.7657%" y="581" width="1.1391%" height="15" fill="rgb(213,116,10)" fg:x="882" fg:w="14"/><text x="72.0157%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.14%)</title><rect x="71.7657%" y="565" width="1.1391%" height="15" fill="rgb(239,15,48)" fg:x="882" fg:w="14"/><text x="72.0157%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.14%)</title><rect x="71.7657%" y="549" width="1.1391%" height="15" fill="rgb(207,123,36)" fg:x="882" fg:w="14"/><text x="72.0157%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="72.0098%" y="533" width="0.8950%" height="15" fill="rgb(209,103,30)" fg:x="885" fg:w="11"/><text x="72.2598%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="72.0911%" y="517" width="0.8137%" height="15" fill="rgb(238,100,19)" fg:x="886" fg:w="10"/><text x="72.3411%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="72.2539%" y="501" width="0.6509%" height="15" fill="rgb(244,30,14)" fg:x="888" fg:w="8"/><text x="72.5039%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="72.4166%" y="485" width="0.4882%" height="15" fill="rgb(249,174,6)" fg:x="890" fg:w="6"/><text x="72.6666%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="72.4166%" y="469" width="0.4882%" height="15" fill="rgb(235,213,41)" fg:x="890" fg:w="6"/><text x="72.6666%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.7421%" y="453" width="0.1627%" height="15" fill="rgb(213,118,6)" fg:x="894" fg:w="2"/><text x="72.9921%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.9048%" y="677" width="0.0814%" height="15" fill="rgb(235,44,51)" fg:x="896" fg:w="1"/><text x="73.1548%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.9048%" y="661" width="0.0814%" height="15" fill="rgb(217,9,53)" fg:x="896" fg:w="1"/><text x="73.1548%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.9048%" y="645" width="0.0814%" height="15" fill="rgb(237,172,34)" fg:x="896" fg:w="1"/><text x="73.1548%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9048%" y="629" width="0.0814%" height="15" fill="rgb(206,206,11)" fg:x="896" fg:w="1"/><text x="73.1548%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9048%" y="613" width="0.0814%" height="15" fill="rgb(214,149,29)" fg:x="896" fg:w="1"/><text x="73.1548%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="72.9862%" y="677" width="0.0814%" height="15" fill="rgb(208,123,3)" fg:x="897" fg:w="1"/><text x="73.2362%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="72.9862%" y="661" width="0.0814%" height="15" fill="rgb(229,126,4)" fg:x="897" fg:w="1"/><text x="73.2362%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9862%" y="645" width="0.0814%" height="15" fill="rgb(222,92,36)" fg:x="897" fg:w="1"/><text x="73.2362%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="72.9048%" y="693" width="0.3255%" height="15" fill="rgb(216,39,41)" fg:x="896" fg:w="4"/><text x="73.1548%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="73.0675%" y="677" width="0.1627%" height="15" fill="rgb(253,127,28)" fg:x="898" fg:w="2"/><text x="73.3175%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="73.0675%" y="661" width="0.1627%" height="15" fill="rgb(249,152,51)" fg:x="898" fg:w="2"/><text x="73.3175%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.0675%" y="645" width="0.1627%" height="15" fill="rgb(209,123,42)" fg:x="898" fg:w="2"/><text x="73.3175%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.0675%" y="629" width="0.1627%" height="15" fill="rgb(241,118,22)" fg:x="898" fg:w="2"/><text x="73.3175%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="73.0675%" y="613" width="0.1627%" height="15" fill="rgb(208,25,7)" fg:x="898" fg:w="2"/><text x="73.3175%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.0675%" y="597" width="0.1627%" height="15" fill="rgb(243,144,39)" fg:x="898" fg:w="2"/><text x="73.3175%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="73.2303%" y="677" width="0.0814%" height="15" fill="rgb(250,50,5)" fg:x="900" fg:w="1"/><text x="73.4803%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.49%)</title><rect x="72.9048%" y="709" width="0.4882%" height="15" fill="rgb(207,67,11)" fg:x="896" fg:w="6"/><text x="73.1548%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="73.2303%" y="693" width="0.1627%" height="15" fill="rgb(245,204,40)" fg:x="900" fg:w="2"/><text x="73.4803%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="73.3116%" y="677" width="0.0814%" height="15" fill="rgb(238,228,24)" fg:x="901" fg:w="1"/><text x="73.5616%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="73.3116%" y="661" width="0.0814%" height="15" fill="rgb(217,116,22)" fg:x="901" fg:w="1"/><text x="73.5616%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="73.3116%" y="645" width="0.0814%" height="15" fill="rgb(234,98,12)" fg:x="901" fg:w="1"/><text x="73.5616%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="73.3116%" y="629" width="0.0814%" height="15" fill="rgb(242,170,50)" fg:x="901" fg:w="1"/><text x="73.5616%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.3116%" y="613" width="0.0814%" height="15" fill="rgb(235,7,5)" fg:x="901" fg:w="1"/><text x="73.5616%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.3116%" y="597" width="0.0814%" height="15" fill="rgb(241,114,28)" fg:x="901" fg:w="1"/><text x="73.5616%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3116%" y="581" width="0.0814%" height="15" fill="rgb(246,112,42)" fg:x="901" fg:w="1"/><text x="73.5616%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3116%" y="565" width="0.0814%" height="15" fill="rgb(248,228,14)" fg:x="901" fg:w="1"/><text x="73.5616%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3116%" y="549" width="0.0814%" height="15" fill="rgb(208,133,18)" fg:x="901" fg:w="1"/><text x="73.5616%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3116%" y="533" width="0.0814%" height="15" fill="rgb(207,35,49)" fg:x="901" fg:w="1"/><text x="73.5616%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.3116%" y="517" width="0.0814%" height="15" fill="rgb(205,68,36)" fg:x="901" fg:w="1"/><text x="73.5616%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3116%" y="501" width="0.0814%" height="15" fill="rgb(245,62,40)" fg:x="901" fg:w="1"/><text x="73.5616%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3116%" y="485" width="0.0814%" height="15" fill="rgb(228,27,24)" fg:x="901" fg:w="1"/><text x="73.5616%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3116%" y="469" width="0.0814%" height="15" fill="rgb(253,19,12)" fg:x="901" fg:w="1"/><text x="73.5616%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3116%" y="453" width="0.0814%" height="15" fill="rgb(232,28,20)" fg:x="901" fg:w="1"/><text x="73.5616%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3116%" y="437" width="0.0814%" height="15" fill="rgb(218,35,51)" fg:x="901" fg:w="1"/><text x="73.5616%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.3116%" y="421" width="0.0814%" height="15" fill="rgb(212,90,40)" fg:x="901" fg:w="1"/><text x="73.5616%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="73.3930%" y="677" width="0.0814%" height="15" fill="rgb(220,172,12)" fg:x="902" fg:w="1"/><text x="73.6430%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="73.3930%" y="661" width="0.0814%" height="15" fill="rgb(226,159,20)" fg:x="902" fg:w="1"/><text x="73.6430%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.3930%" y="645" width="0.0814%" height="15" fill="rgb(234,205,16)" fg:x="902" fg:w="1"/><text x="73.6430%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.3930%" y="629" width="0.0814%" height="15" fill="rgb(207,9,39)" fg:x="902" fg:w="1"/><text x="73.6430%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.3930%" y="613" width="0.0814%" height="15" fill="rgb(249,143,15)" fg:x="902" fg:w="1"/><text x="73.6430%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.3930%" y="597" width="0.0814%" height="15" fill="rgb(253,133,29)" fg:x="902" fg:w="1"/><text x="73.6430%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.3930%" y="581" width="0.0814%" height="15" fill="rgb(221,187,0)" fg:x="902" fg:w="1"/><text x="73.6430%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.3930%" y="565" width="0.0814%" height="15" fill="rgb(205,204,26)" fg:x="902" fg:w="1"/><text x="73.6430%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.3930%" y="549" width="0.0814%" height="15" fill="rgb(224,68,54)" fg:x="902" fg:w="1"/><text x="73.6430%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.4744%" y="677" width="0.0814%" height="15" fill="rgb(209,67,4)" fg:x="903" fg:w="1"/><text x="73.7244%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.4744%" y="661" width="0.0814%" height="15" fill="rgb(228,229,18)" fg:x="903" fg:w="1"/><text x="73.7244%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.4744%" y="645" width="0.0814%" height="15" fill="rgb(231,89,13)" fg:x="903" fg:w="1"/><text x="73.7244%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.4744%" y="629" width="0.0814%" height="15" fill="rgb(210,182,18)" fg:x="903" fg:w="1"/><text x="73.7244%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4744%" y="613" width="0.0814%" height="15" fill="rgb(240,105,2)" fg:x="903" fg:w="1"/><text x="73.7244%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.4744%" y="597" width="0.0814%" height="15" fill="rgb(207,170,50)" fg:x="903" fg:w="1"/><text x="73.7244%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4744%" y="581" width="0.0814%" height="15" fill="rgb(232,133,24)" fg:x="903" fg:w="1"/><text x="73.7244%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.4744%" y="565" width="0.0814%" height="15" fill="rgb(235,166,27)" fg:x="903" fg:w="1"/><text x="73.7244%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4744%" y="549" width="0.0814%" height="15" fill="rgb(209,19,13)" fg:x="903" fg:w="1"/><text x="73.7244%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.4744%" y="533" width="0.0814%" height="15" fill="rgb(226,79,39)" fg:x="903" fg:w="1"/><text x="73.7244%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4744%" y="517" width="0.0814%" height="15" fill="rgb(222,163,10)" fg:x="903" fg:w="1"/><text x="73.7244%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5557%" y="645" width="0.0814%" height="15" fill="rgb(214,44,19)" fg:x="904" fg:w="1"/><text x="73.8057%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5557%" y="629" width="0.0814%" height="15" fill="rgb(210,217,13)" fg:x="904" fg:w="1"/><text x="73.8057%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5557%" y="613" width="0.0814%" height="15" fill="rgb(237,61,54)" fg:x="904" fg:w="1"/><text x="73.8057%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.5557%" y="597" width="0.0814%" height="15" fill="rgb(226,184,24)" fg:x="904" fg:w="1"/><text x="73.8057%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.5557%" y="581" width="0.0814%" height="15" fill="rgb(223,226,4)" fg:x="904" fg:w="1"/><text x="73.8057%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.5557%" y="565" width="0.0814%" height="15" fill="rgb(210,26,41)" fg:x="904" fg:w="1"/><text x="73.8057%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5557%" y="549" width="0.0814%" height="15" fill="rgb(220,221,6)" fg:x="904" fg:w="1"/><text x="73.8057%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5557%" y="533" width="0.0814%" height="15" fill="rgb(225,89,49)" fg:x="904" fg:w="1"/><text x="73.8057%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.5557%" y="517" width="0.0814%" height="15" fill="rgb(218,70,45)" fg:x="904" fg:w="1"/><text x="73.8057%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.5557%" y="501" width="0.0814%" height="15" fill="rgb(238,166,21)" fg:x="904" fg:w="1"/><text x="73.8057%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.5557%" y="485" width="0.0814%" height="15" fill="rgb(224,141,44)" fg:x="904" fg:w="1"/><text x="73.8057%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.5557%" y="469" width="0.0814%" height="15" fill="rgb(230,12,49)" fg:x="904" fg:w="1"/><text x="73.8057%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5557%" y="453" width="0.0814%" height="15" fill="rgb(212,174,12)" fg:x="904" fg:w="1"/><text x="73.8057%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="73.5557%" y="677" width="0.1627%" height="15" fill="rgb(246,67,9)" fg:x="904" fg:w="2"/><text x="73.8057%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="73.5557%" y="661" width="0.1627%" height="15" fill="rgb(239,35,23)" fg:x="904" fg:w="2"/><text x="73.8057%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.6371%" y="645" width="0.0814%" height="15" fill="rgb(211,167,0)" fg:x="905" fg:w="1"/><text x="73.8871%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.6371%" y="629" width="0.0814%" height="15" fill="rgb(225,119,45)" fg:x="905" fg:w="1"/><text x="73.8871%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6371%" y="613" width="0.0814%" height="15" fill="rgb(210,162,6)" fg:x="905" fg:w="1"/><text x="73.8871%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7185%" y="597" width="0.0814%" height="15" fill="rgb(208,118,35)" fg:x="906" fg:w="1"/><text x="73.9685%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.7185%" y="581" width="0.0814%" height="15" fill="rgb(239,4,53)" fg:x="906" fg:w="1"/><text x="73.9685%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7185%" y="565" width="0.0814%" height="15" fill="rgb(213,130,21)" fg:x="906" fg:w="1"/><text x="73.9685%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.7185%" y="549" width="0.0814%" height="15" fill="rgb(235,148,0)" fg:x="906" fg:w="1"/><text x="73.9685%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="73.7185%" y="629" width="0.1627%" height="15" fill="rgb(244,224,18)" fg:x="906" fg:w="2"/><text x="73.9685%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.7185%" y="613" width="0.1627%" height="15" fill="rgb(211,214,4)" fg:x="906" fg:w="2"/><text x="73.9685%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7998%" y="597" width="0.0814%" height="15" fill="rgb(206,119,25)" fg:x="907" fg:w="1"/><text x="74.0498%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7998%" y="581" width="0.0814%" height="15" fill="rgb(243,93,47)" fg:x="907" fg:w="1"/><text x="74.0498%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7998%" y="565" width="0.0814%" height="15" fill="rgb(224,194,6)" fg:x="907" fg:w="1"/><text x="74.0498%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7998%" y="549" width="0.0814%" height="15" fill="rgb(243,229,6)" fg:x="907" fg:w="1"/><text x="74.0498%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.7998%" y="533" width="0.0814%" height="15" fill="rgb(207,23,50)" fg:x="907" fg:w="1"/><text x="74.0498%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7998%" y="517" width="0.0814%" height="15" fill="rgb(253,192,32)" fg:x="907" fg:w="1"/><text x="74.0498%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7998%" y="501" width="0.0814%" height="15" fill="rgb(213,21,6)" fg:x="907" fg:w="1"/><text x="74.0498%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7998%" y="485" width="0.0814%" height="15" fill="rgb(243,151,13)" fg:x="907" fg:w="1"/><text x="74.0498%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8812%" y="613" width="0.0814%" height="15" fill="rgb(233,165,41)" fg:x="908" fg:w="1"/><text x="74.1312%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.65%)</title><rect x="73.3930%" y="709" width="0.6509%" height="15" fill="rgb(246,176,45)" fg:x="902" fg:w="8"/><text x="73.6430%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.65%)</title><rect x="73.3930%" y="693" width="0.6509%" height="15" fill="rgb(217,170,52)" fg:x="902" fg:w="8"/><text x="73.6430%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="73.7185%" y="677" width="0.3255%" height="15" fill="rgb(214,203,54)" fg:x="906" fg:w="4"/><text x="73.9685%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="73.7185%" y="661" width="0.3255%" height="15" fill="rgb(248,215,49)" fg:x="906" fg:w="4"/><text x="73.9685%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="73.7185%" y="645" width="0.3255%" height="15" fill="rgb(208,46,10)" fg:x="906" fg:w="4"/><text x="73.9685%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="73.8812%" y="629" width="0.1627%" height="15" fill="rgb(254,5,31)" fg:x="908" fg:w="2"/><text x="74.1312%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.9626%" y="613" width="0.0814%" height="15" fill="rgb(222,104,33)" fg:x="909" fg:w="1"/><text x="74.2126%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9626%" y="597" width="0.0814%" height="15" fill="rgb(248,49,16)" fg:x="909" fg:w="1"/><text x="74.2126%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.9626%" y="581" width="0.0814%" height="15" fill="rgb(232,198,41)" fg:x="909" fg:w="1"/><text x="74.2126%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9626%" y="565" width="0.0814%" height="15" fill="rgb(214,125,3)" fg:x="909" fg:w="1"/><text x="74.2126%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9626%" y="549" width="0.0814%" height="15" fill="rgb(229,220,28)" fg:x="909" fg:w="1"/><text x="74.2126%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.0439%" y="677" width="0.1627%" height="15" fill="rgb(222,64,37)" fg:x="910" fg:w="2"/><text x="74.2939%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.0439%" y="661" width="0.1627%" height="15" fill="rgb(249,184,13)" fg:x="910" fg:w="2"/><text x="74.2939%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1253%" y="645" width="0.0814%" height="15" fill="rgb(252,176,6)" fg:x="911" fg:w="1"/><text x="74.3753%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1253%" y="629" width="0.0814%" height="15" fill="rgb(228,153,7)" fg:x="911" fg:w="1"/><text x="74.3753%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2067%" y="629" width="0.0814%" height="15" fill="rgb(242,193,5)" fg:x="912" fg:w="1"/><text x="74.4567%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.33%)</title><rect x="74.0439%" y="709" width="0.3255%" height="15" fill="rgb(232,140,9)" fg:x="910" fg:w="4"/><text x="74.2939%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.33%)</title><rect x="74.0439%" y="693" width="0.3255%" height="15" fill="rgb(213,222,16)" fg:x="910" fg:w="4"/><text x="74.2939%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="74.2067%" y="677" width="0.1627%" height="15" fill="rgb(222,75,50)" fg:x="912" fg:w="2"/><text x="74.4567%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="74.2067%" y="661" width="0.1627%" height="15" fill="rgb(205,180,2)" fg:x="912" fg:w="2"/><text x="74.4567%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.2067%" y="645" width="0.1627%" height="15" fill="rgb(216,34,7)" fg:x="912" fg:w="2"/><text x="74.4567%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2880%" y="629" width="0.0814%" height="15" fill="rgb(253,16,32)" fg:x="913" fg:w="1"/><text x="74.5380%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2880%" y="613" width="0.0814%" height="15" fill="rgb(208,97,28)" fg:x="913" fg:w="1"/><text x="74.5380%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2880%" y="597" width="0.0814%" height="15" fill="rgb(225,92,11)" fg:x="913" fg:w="1"/><text x="74.5380%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2880%" y="581" width="0.0814%" height="15" fill="rgb(243,38,12)" fg:x="913" fg:w="1"/><text x="74.5380%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2880%" y="565" width="0.0814%" height="15" fill="rgb(208,139,16)" fg:x="913" fg:w="1"/><text x="74.5380%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2880%" y="549" width="0.0814%" height="15" fill="rgb(227,24,9)" fg:x="913" fg:w="1"/><text x="74.5380%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2880%" y="533" width="0.0814%" height="15" fill="rgb(206,62,11)" fg:x="913" fg:w="1"/><text x="74.5380%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.2880%" y="517" width="0.0814%" height="15" fill="rgb(228,134,27)" fg:x="913" fg:w="1"/><text x="74.5380%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.2880%" y="501" width="0.0814%" height="15" fill="rgb(205,55,33)" fg:x="913" fg:w="1"/><text x="74.5380%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.2880%" y="485" width="0.0814%" height="15" fill="rgb(243,75,43)" fg:x="913" fg:w="1"/><text x="74.5380%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.2880%" y="469" width="0.0814%" height="15" fill="rgb(223,27,42)" fg:x="913" fg:w="1"/><text x="74.5380%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2880%" y="453" width="0.0814%" height="15" fill="rgb(232,189,33)" fg:x="913" fg:w="1"/><text x="74.5380%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.3694%" y="693" width="0.1627%" height="15" fill="rgb(210,9,39)" fg:x="914" fg:w="2"/><text x="74.6194%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="74.5321%" y="693" width="0.0814%" height="15" fill="rgb(242,85,26)" fg:x="916" fg:w="1"/><text x="74.7821%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="74.5321%" y="677" width="0.0814%" height="15" fill="rgb(248,44,4)" fg:x="916" fg:w="1"/><text x="74.7821%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.5321%" y="661" width="0.0814%" height="15" fill="rgb(250,96,46)" fg:x="916" fg:w="1"/><text x="74.7821%" y="671.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="74.5321%" y="645" width="0.0814%" height="15" fill="rgb(229,116,26)" fg:x="916" fg:w="1"/><text x="74.7821%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.5321%" y="629" width="0.0814%" height="15" fill="rgb(246,94,34)" fg:x="916" fg:w="1"/><text x="74.7821%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="74.5321%" y="613" width="0.0814%" height="15" fill="rgb(251,73,21)" fg:x="916" fg:w="1"/><text x="74.7821%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.5321%" y="597" width="0.0814%" height="15" fill="rgb(254,121,25)" fg:x="916" fg:w="1"/><text x="74.7821%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.5321%" y="581" width="0.0814%" height="15" fill="rgb(215,161,49)" fg:x="916" fg:w="1"/><text x="74.7821%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="74.6135%" y="645" width="0.0814%" height="15" fill="rgb(221,43,13)" fg:x="917" fg:w="1"/><text x="74.8635%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="74.6135%" y="629" width="0.0814%" height="15" fill="rgb(249,5,37)" fg:x="917" fg:w="1"/><text x="74.8635%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.6135%" y="613" width="0.0814%" height="15" fill="rgb(226,25,44)" fg:x="917" fg:w="1"/><text x="74.8635%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.6135%" y="597" width="0.0814%" height="15" fill="rgb(238,189,16)" fg:x="917" fg:w="1"/><text x="74.8635%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6135%" y="581" width="0.0814%" height="15" fill="rgb(251,186,8)" fg:x="917" fg:w="1"/><text x="74.8635%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6135%" y="565" width="0.0814%" height="15" fill="rgb(254,34,31)" fg:x="917" fg:w="1"/><text x="74.8635%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6135%" y="549" width="0.0814%" height="15" fill="rgb(225,215,27)" fg:x="917" fg:w="1"/><text x="74.8635%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6135%" y="533" width="0.0814%" height="15" fill="rgb(221,192,48)" fg:x="917" fg:w="1"/><text x="74.8635%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6135%" y="517" width="0.0814%" height="15" fill="rgb(219,137,20)" fg:x="917" fg:w="1"/><text x="74.8635%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6135%" y="501" width="0.0814%" height="15" fill="rgb(219,84,11)" fg:x="917" fg:w="1"/><text x="74.8635%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6135%" y="485" width="0.0814%" height="15" fill="rgb(224,10,23)" fg:x="917" fg:w="1"/><text x="74.8635%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.6135%" y="469" width="0.0814%" height="15" fill="rgb(248,22,39)" fg:x="917" fg:w="1"/><text x="74.8635%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.6135%" y="453" width="0.0814%" height="15" fill="rgb(212,154,20)" fg:x="917" fg:w="1"/><text x="74.8635%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="74.6949%" y="645" width="0.0814%" height="15" fill="rgb(236,199,50)" fg:x="918" fg:w="1"/><text x="74.9449%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="74.6949%" y="629" width="0.0814%" height="15" fill="rgb(211,9,17)" fg:x="918" fg:w="1"/><text x="74.9449%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.6949%" y="613" width="0.0814%" height="15" fill="rgb(243,216,36)" fg:x="918" fg:w="1"/><text x="74.9449%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.6949%" y="597" width="0.0814%" height="15" fill="rgb(250,2,10)" fg:x="918" fg:w="1"/><text x="74.9449%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.6949%" y="581" width="0.0814%" height="15" fill="rgb(226,50,48)" fg:x="918" fg:w="1"/><text x="74.9449%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6949%" y="565" width="0.0814%" height="15" fill="rgb(243,81,16)" fg:x="918" fg:w="1"/><text x="74.9449%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6949%" y="549" width="0.0814%" height="15" fill="rgb(250,14,2)" fg:x="918" fg:w="1"/><text x="74.9449%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6949%" y="533" width="0.0814%" height="15" fill="rgb(233,135,29)" fg:x="918" fg:w="1"/><text x="74.9449%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6949%" y="517" width="0.0814%" height="15" fill="rgb(224,64,43)" fg:x="918" fg:w="1"/><text x="74.9449%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6949%" y="501" width="0.0814%" height="15" fill="rgb(238,84,13)" fg:x="918" fg:w="1"/><text x="74.9449%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6949%" y="485" width="0.0814%" height="15" fill="rgb(253,48,26)" fg:x="918" fg:w="1"/><text x="74.9449%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6949%" y="469" width="0.0814%" height="15" fill="rgb(205,223,31)" fg:x="918" fg:w="1"/><text x="74.9449%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6949%" y="453" width="0.0814%" height="15" fill="rgb(221,41,32)" fg:x="918" fg:w="1"/><text x="74.9449%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.7762%" y="613" width="0.0814%" height="15" fill="rgb(213,158,31)" fg:x="919" fg:w="1"/><text x="75.0262%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.7762%" y="597" width="0.0814%" height="15" fill="rgb(245,126,43)" fg:x="919" fg:w="1"/><text x="75.0262%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.7762%" y="581" width="0.0814%" height="15" fill="rgb(227,7,22)" fg:x="919" fg:w="1"/><text x="75.0262%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.7762%" y="565" width="0.0814%" height="15" fill="rgb(252,90,44)" fg:x="919" fg:w="1"/><text x="75.0262%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.7762%" y="549" width="0.0814%" height="15" fill="rgb(253,91,0)" fg:x="919" fg:w="1"/><text x="75.0262%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.7762%" y="533" width="0.0814%" height="15" fill="rgb(252,175,49)" fg:x="919" fg:w="1"/><text x="75.0262%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.7762%" y="517" width="0.0814%" height="15" fill="rgb(246,150,1)" fg:x="919" fg:w="1"/><text x="75.0262%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="74.7762%" y="629" width="0.1627%" height="15" fill="rgb(241,192,25)" fg:x="919" fg:w="2"/><text x="75.0262%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.8576%" y="613" width="0.0814%" height="15" fill="rgb(239,187,11)" fg:x="920" fg:w="1"/><text x="75.1076%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.8576%" y="597" width="0.0814%" height="15" fill="rgb(218,202,51)" fg:x="920" fg:w="1"/><text x="75.1076%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.8576%" y="581" width="0.0814%" height="15" fill="rgb(225,176,8)" fg:x="920" fg:w="1"/><text x="75.1076%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="74.8576%" y="565" width="0.0814%" height="15" fill="rgb(219,122,41)" fg:x="920" fg:w="1"/><text x="75.1076%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.8576%" y="549" width="0.0814%" height="15" fill="rgb(248,140,20)" fg:x="920" fg:w="1"/><text x="75.1076%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8576%" y="533" width="0.0814%" height="15" fill="rgb(245,41,37)" fg:x="920" fg:w="1"/><text x="75.1076%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8576%" y="517" width="0.0814%" height="15" fill="rgb(235,82,39)" fg:x="920" fg:w="1"/><text x="75.1076%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8576%" y="501" width="0.0814%" height="15" fill="rgb(230,108,42)" fg:x="920" fg:w="1"/><text x="75.1076%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8576%" y="485" width="0.0814%" height="15" fill="rgb(215,150,50)" fg:x="920" fg:w="1"/><text x="75.1076%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8576%" y="469" width="0.0814%" height="15" fill="rgb(233,212,5)" fg:x="920" fg:w="1"/><text x="75.1076%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8576%" y="453" width="0.0814%" height="15" fill="rgb(245,80,22)" fg:x="920" fg:w="1"/><text x="75.1076%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9390%" y="533" width="0.0814%" height="15" fill="rgb(238,129,16)" fg:x="921" fg:w="1"/><text x="75.1890%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9390%" y="517" width="0.0814%" height="15" fill="rgb(240,19,0)" fg:x="921" fg:w="1"/><text x="75.1890%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9390%" y="501" width="0.0814%" height="15" fill="rgb(232,42,35)" fg:x="921" fg:w="1"/><text x="75.1890%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9390%" y="485" width="0.0814%" height="15" fill="rgb(223,130,24)" fg:x="921" fg:w="1"/><text x="75.1890%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9390%" y="469" width="0.0814%" height="15" fill="rgb(237,16,22)" fg:x="921" fg:w="1"/><text x="75.1890%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9390%" y="453" width="0.0814%" height="15" fill="rgb(248,192,20)" fg:x="921" fg:w="1"/><text x="75.1890%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.9390%" y="437" width="0.0814%" height="15" fill="rgb(233,167,2)" fg:x="921" fg:w="1"/><text x="75.1890%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.9390%" y="421" width="0.0814%" height="15" fill="rgb(252,71,44)" fg:x="921" fg:w="1"/><text x="75.1890%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.9390%" y="405" width="0.0814%" height="15" fill="rgb(238,37,47)" fg:x="921" fg:w="1"/><text x="75.1890%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9390%" y="389" width="0.0814%" height="15" fill="rgb(214,202,54)" fg:x="921" fg:w="1"/><text x="75.1890%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9390%" y="373" width="0.0814%" height="15" fill="rgb(254,165,40)" fg:x="921" fg:w="1"/><text x="75.1890%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.9390%" y="357" width="0.0814%" height="15" fill="rgb(246,173,38)" fg:x="921" fg:w="1"/><text x="75.1890%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.9390%" y="341" width="0.0814%" height="15" fill="rgb(215,3,27)" fg:x="921" fg:w="1"/><text x="75.1890%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.9390%" y="325" width="0.0814%" height="15" fill="rgb(239,169,51)" fg:x="921" fg:w="1"/><text x="75.1890%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.9390%" y="309" width="0.0814%" height="15" fill="rgb(212,5,25)" fg:x="921" fg:w="1"/><text x="75.1890%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.9390%" y="293" width="0.0814%" height="15" fill="rgb(243,45,17)" fg:x="921" fg:w="1"/><text x="75.1890%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.9390%" y="277" width="0.0814%" height="15" fill="rgb(242,97,9)" fg:x="921" fg:w="1"/><text x="75.1890%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="74.9390%" y="613" width="0.1627%" height="15" fill="rgb(228,71,31)" fg:x="921" fg:w="2"/><text x="75.1890%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="74.9390%" y="597" width="0.1627%" height="15" fill="rgb(252,184,16)" fg:x="921" fg:w="2"/><text x="75.1890%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.9390%" y="581" width="0.1627%" height="15" fill="rgb(236,169,46)" fg:x="921" fg:w="2"/><text x="75.1890%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.9390%" y="565" width="0.1627%" height="15" fill="rgb(207,17,47)" fg:x="921" fg:w="2"/><text x="75.1890%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.9390%" y="549" width="0.1627%" height="15" fill="rgb(206,201,28)" fg:x="921" fg:w="2"/><text x="75.1890%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0203%" y="533" width="0.0814%" height="15" fill="rgb(224,184,23)" fg:x="922" fg:w="1"/><text x="75.2703%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0203%" y="517" width="0.0814%" height="15" fill="rgb(208,139,48)" fg:x="922" fg:w="1"/><text x="75.2703%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0203%" y="501" width="0.0814%" height="15" fill="rgb(208,130,10)" fg:x="922" fg:w="1"/><text x="75.2703%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0203%" y="485" width="0.0814%" height="15" fill="rgb(211,213,45)" fg:x="922" fg:w="1"/><text x="75.2703%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.0203%" y="469" width="0.0814%" height="15" fill="rgb(235,100,30)" fg:x="922" fg:w="1"/><text x="75.2703%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0203%" y="453" width="0.0814%" height="15" fill="rgb(206,144,31)" fg:x="922" fg:w="1"/><text x="75.2703%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0203%" y="437" width="0.0814%" height="15" fill="rgb(224,200,26)" fg:x="922" fg:w="1"/><text x="75.2703%" y="447.50"></text></g><g><title>plugins_core::build::Build::leads_to (5 samples, 0.41%)</title><rect x="74.7762%" y="645" width="0.4068%" height="15" fill="rgb(247,104,53)" fg:x="919" fg:w="5"/><text x="75.0262%" y="655.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="74.9390%" y="629" width="0.2441%" height="15" fill="rgb(220,14,17)" fg:x="921" fg:w="3"/><text x="75.1890%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.1017%" y="613" width="0.0814%" height="15" fill="rgb(230,140,40)" fg:x="923" fg:w="1"/><text x="75.3517%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1017%" y="597" width="0.0814%" height="15" fill="rgb(229,2,41)" fg:x="923" fg:w="1"/><text x="75.3517%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1017%" y="581" width="0.0814%" height="15" fill="rgb(232,89,16)" fg:x="923" fg:w="1"/><text x="75.3517%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1017%" y="565" width="0.0814%" height="15" fill="rgb(247,59,52)" fg:x="923" fg:w="1"/><text x="75.3517%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1017%" y="549" width="0.0814%" height="15" fill="rgb(226,110,21)" fg:x="923" fg:w="1"/><text x="75.3517%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1017%" y="533" width="0.0814%" height="15" fill="rgb(224,176,43)" fg:x="923" fg:w="1"/><text x="75.3517%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.65%)</title><rect x="74.6135%" y="693" width="0.6509%" height="15" fill="rgb(221,73,6)" fg:x="917" fg:w="8"/><text x="74.8635%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="74.6135%" y="677" width="0.6509%" height="15" fill="rgb(232,78,19)" fg:x="917" fg:w="8"/><text x="74.8635%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.65%)</title><rect x="74.6135%" y="661" width="0.6509%" height="15" fill="rgb(233,112,48)" fg:x="917" fg:w="8"/><text x="74.8635%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="75.1831%" y="645" width="0.0814%" height="15" fill="rgb(243,131,47)" fg:x="924" fg:w="1"/><text x="75.4331%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="75.1831%" y="629" width="0.0814%" height="15" fill="rgb(226,51,1)" fg:x="924" fg:w="1"/><text x="75.4331%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.1831%" y="613" width="0.0814%" height="15" fill="rgb(247,58,7)" fg:x="924" fg:w="1"/><text x="75.4331%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.1831%" y="597" width="0.0814%" height="15" fill="rgb(209,7,32)" fg:x="924" fg:w="1"/><text x="75.4331%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1831%" y="581" width="0.0814%" height="15" fill="rgb(209,39,41)" fg:x="924" fg:w="1"/><text x="75.4331%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="75.2644%" y="693" width="0.0814%" height="15" fill="rgb(226,182,46)" fg:x="925" fg:w="1"/><text x="75.5144%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="75.3458%" y="661" width="0.1627%" height="15" fill="rgb(230,219,10)" fg:x="926" fg:w="2"/><text x="75.5958%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4272%" y="645" width="0.0814%" height="15" fill="rgb(227,175,30)" fg:x="927" fg:w="1"/><text x="75.6772%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.4272%" y="629" width="0.0814%" height="15" fill="rgb(217,2,50)" fg:x="927" fg:w="1"/><text x="75.6772%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.4272%" y="613" width="0.0814%" height="15" fill="rgb(229,160,0)" fg:x="927" fg:w="1"/><text x="75.6772%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.4272%" y="597" width="0.0814%" height="15" fill="rgb(207,78,37)" fg:x="927" fg:w="1"/><text x="75.6772%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.4272%" y="581" width="0.0814%" height="15" fill="rgb(225,57,0)" fg:x="927" fg:w="1"/><text x="75.6772%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.4272%" y="565" width="0.0814%" height="15" fill="rgb(232,154,2)" fg:x="927" fg:w="1"/><text x="75.6772%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.4272%" y="549" width="0.0814%" height="15" fill="rgb(241,212,25)" fg:x="927" fg:w="1"/><text x="75.6772%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.4272%" y="533" width="0.0814%" height="15" fill="rgb(226,69,20)" fg:x="927" fg:w="1"/><text x="75.6772%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.4272%" y="517" width="0.0814%" height="15" fill="rgb(247,184,54)" fg:x="927" fg:w="1"/><text x="75.6772%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.4272%" y="501" width="0.0814%" height="15" fill="rgb(210,145,0)" fg:x="927" fg:w="1"/><text x="75.6772%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4272%" y="485" width="0.0814%" height="15" fill="rgb(253,82,12)" fg:x="927" fg:w="1"/><text x="75.6772%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="75.3458%" y="677" width="0.2441%" height="15" fill="rgb(245,42,11)" fg:x="926" fg:w="3"/><text x="75.5958%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="75.5085%" y="661" width="0.0814%" height="15" fill="rgb(219,147,32)" fg:x="928" fg:w="1"/><text x="75.7585%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5085%" y="645" width="0.0814%" height="15" fill="rgb(246,12,7)" fg:x="928" fg:w="1"/><text x="75.7585%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.5899%" y="629" width="0.0814%" height="15" fill="rgb(243,50,9)" fg:x="929" fg:w="1"/><text x="75.8399%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5899%" y="613" width="0.0814%" height="15" fill="rgb(219,149,6)" fg:x="929" fg:w="1"/><text x="75.8399%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5899%" y="597" width="0.0814%" height="15" fill="rgb(241,51,42)" fg:x="929" fg:w="1"/><text x="75.8399%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.5899%" y="581" width="0.0814%" height="15" fill="rgb(226,128,27)" fg:x="929" fg:w="1"/><text x="75.8399%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.6713%" y="581" width="0.0814%" height="15" fill="rgb(244,144,4)" fg:x="930" fg:w="1"/><text x="75.9213%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="75.7526%" y="565" width="0.2441%" height="15" fill="rgb(221,4,13)" fg:x="931" fg:w="3"/><text x="76.0026%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="75.7526%" y="549" width="0.2441%" height="15" fill="rgb(208,170,28)" fg:x="931" fg:w="3"/><text x="76.0026%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.8340%" y="533" width="0.1627%" height="15" fill="rgb(226,131,13)" fg:x="932" fg:w="2"/><text x="76.0840%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9154%" y="517" width="0.0814%" height="15" fill="rgb(215,72,41)" fg:x="933" fg:w="1"/><text x="76.1654%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="75.7526%" y="581" width="0.5696%" height="15" fill="rgb(243,108,20)" fg:x="931" fg:w="7"/><text x="76.0026%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="75.9967%" y="565" width="0.3255%" height="15" fill="rgb(230,189,17)" fg:x="934" fg:w="4"/><text x="76.2467%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="76.0781%" y="549" width="0.2441%" height="15" fill="rgb(220,50,17)" fg:x="935" fg:w="3"/><text x="76.3281%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.1595%" y="533" width="0.1627%" height="15" fill="rgb(248,152,48)" fg:x="936" fg:w="2"/><text x="76.4095%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.5663%" y="517" width="0.0814%" height="15" fill="rgb(244,91,11)" fg:x="941" fg:w="1"/><text x="76.8163%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.5663%" y="501" width="0.0814%" height="15" fill="rgb(220,157,5)" fg:x="941" fg:w="1"/><text x="76.8163%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.5663%" y="485" width="0.0814%" height="15" fill="rgb(253,137,8)" fg:x="941" fg:w="1"/><text x="76.8163%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="76.5663%" y="549" width="0.1627%" height="15" fill="rgb(217,137,51)" fg:x="941" fg:w="2"/><text x="76.8163%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="76.5663%" y="533" width="0.1627%" height="15" fill="rgb(218,209,53)" fg:x="941" fg:w="2"/><text x="76.8163%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.6477%" y="517" width="0.0814%" height="15" fill="rgb(249,137,25)" fg:x="942" fg:w="1"/><text x="76.8977%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.7290%" y="549" width="0.1627%" height="15" fill="rgb(239,155,26)" fg:x="943" fg:w="2"/><text x="76.9790%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.7290%" y="533" width="0.1627%" height="15" fill="rgb(227,85,46)" fg:x="943" fg:w="2"/><text x="76.9790%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.7290%" y="517" width="0.1627%" height="15" fill="rgb(251,107,43)" fg:x="943" fg:w="2"/><text x="76.9790%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="76.7290%" y="501" width="0.1627%" height="15" fill="rgb(234,170,33)" fg:x="943" fg:w="2"/><text x="76.9790%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.8104%" y="485" width="0.0814%" height="15" fill="rgb(206,29,35)" fg:x="944" fg:w="1"/><text x="77.0604%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.8104%" y="469" width="0.0814%" height="15" fill="rgb(227,138,25)" fg:x="944" fg:w="1"/><text x="77.0604%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.8104%" y="453" width="0.0814%" height="15" fill="rgb(249,131,35)" fg:x="944" fg:w="1"/><text x="77.0604%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="76.8918%" y="533" width="0.1627%" height="15" fill="rgb(239,6,40)" fg:x="945" fg:w="2"/><text x="77.1418%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="76.8918%" y="517" width="0.1627%" height="15" fill="rgb(246,136,47)" fg:x="945" fg:w="2"/><text x="77.1418%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="76.8918%" y="501" width="0.1627%" height="15" fill="rgb(253,58,26)" fg:x="945" fg:w="2"/><text x="77.1418%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.9731%" y="485" width="0.0814%" height="15" fill="rgb(237,141,10)" fg:x="946" fg:w="1"/><text x="77.2231%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.0545%" y="501" width="0.2441%" height="15" fill="rgb(234,156,12)" fg:x="947" fg:w="3"/><text x="77.3045%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.1359%" y="485" width="0.1627%" height="15" fill="rgb(243,224,36)" fg:x="948" fg:w="2"/><text x="77.3859%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.1359%" y="469" width="0.1627%" height="15" fill="rgb(205,229,51)" fg:x="948" fg:w="2"/><text x="77.3859%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="77.3800%" y="485" width="0.2441%" height="15" fill="rgb(223,189,4)" fg:x="951" fg:w="3"/><text x="77.6300%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="77.3800%" y="469" width="0.2441%" height="15" fill="rgb(249,167,54)" fg:x="951" fg:w="3"/><text x="77.6300%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="77.3800%" y="453" width="0.2441%" height="15" fill="rgb(218,34,28)" fg:x="951" fg:w="3"/><text x="77.6300%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="77.3800%" y="437" width="0.2441%" height="15" fill="rgb(232,109,42)" fg:x="951" fg:w="3"/><text x="77.6300%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="77.3800%" y="421" width="0.2441%" height="15" fill="rgb(248,214,46)" fg:x="951" fg:w="3"/><text x="77.6300%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="77.3800%" y="405" width="0.2441%" height="15" fill="rgb(244,216,40)" fg:x="951" fg:w="3"/><text x="77.6300%" y="415.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="77.3800%" y="389" width="0.2441%" height="15" fill="rgb(231,226,31)" fg:x="951" fg:w="3"/><text x="77.6300%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="77.2986%" y="501" width="0.4068%" height="15" fill="rgb(238,38,43)" fg:x="950" fg:w="5"/><text x="77.5486%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6241%" y="485" width="0.0814%" height="15" fill="rgb(208,88,43)" fg:x="954" fg:w="1"/><text x="77.8741%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="77.0545%" y="533" width="0.8137%" height="15" fill="rgb(205,136,37)" fg:x="947" fg:w="10"/><text x="77.3045%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="77.0545%" y="517" width="0.8137%" height="15" fill="rgb(237,34,14)" fg:x="947" fg:w="10"/><text x="77.3045%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.7055%" y="501" width="0.1627%" height="15" fill="rgb(236,193,44)" fg:x="955" fg:w="2"/><text x="77.9555%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.7868%" y="485" width="0.0814%" height="15" fill="rgb(231,48,10)" fg:x="956" fg:w="1"/><text x="78.0368%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="76.4849%" y="565" width="1.4646%" height="15" fill="rgb(213,141,34)" fg:x="940" fg:w="18"/><text x="76.7349%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="76.8918%" y="549" width="1.0578%" height="15" fill="rgb(249,130,34)" fg:x="945" fg:w="13"/><text x="77.1418%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8682%" y="533" width="0.0814%" height="15" fill="rgb(219,42,41)" fg:x="957" fg:w="1"/><text x="78.1182%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8682%" y="517" width="0.0814%" height="15" fill="rgb(224,100,54)" fg:x="957" fg:w="1"/><text x="78.1182%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8682%" y="501" width="0.0814%" height="15" fill="rgb(229,200,27)" fg:x="957" fg:w="1"/><text x="78.1182%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.36%)</title><rect x="75.6713%" y="597" width="2.3596%" height="15" fill="rgb(217,118,10)" fg:x="930" fg:w="29"/><text x="75.9213%" y="607.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.71%)</title><rect x="76.3222%" y="581" width="1.7087%" height="15" fill="rgb(206,22,3)" fg:x="938" fg:w="21"/><text x="76.5722%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9496%" y="565" width="0.0814%" height="15" fill="rgb(232,163,46)" fg:x="958" fg:w="1"/><text x="78.1996%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0309%" y="565" width="0.0814%" height="15" fill="rgb(206,95,13)" fg:x="959" fg:w="1"/><text x="78.2809%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="78.1123%" y="549" width="0.2441%" height="15" fill="rgb(253,154,18)" fg:x="960" fg:w="3"/><text x="78.3623%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4378%" y="501" width="0.0814%" height="15" fill="rgb(219,32,23)" fg:x="964" fg:w="1"/><text x="78.6878%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="78.0309%" y="597" width="0.6509%" height="15" fill="rgb(230,191,45)" fg:x="959" fg:w="8"/><text x="78.2809%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="78.0309%" y="581" width="0.6509%" height="15" fill="rgb(229,64,36)" fg:x="959" fg:w="8"/><text x="78.2809%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="78.1123%" y="565" width="0.5696%" height="15" fill="rgb(205,129,25)" fg:x="960" fg:w="7"/><text x="78.3623%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="78.3564%" y="549" width="0.3255%" height="15" fill="rgb(254,112,7)" fg:x="963" fg:w="4"/><text x="78.6064%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="78.3564%" y="533" width="0.3255%" height="15" fill="rgb(226,53,48)" fg:x="963" fg:w="4"/><text x="78.6064%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="78.3564%" y="517" width="0.3255%" height="15" fill="rgb(214,153,38)" fg:x="963" fg:w="4"/><text x="78.6064%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.5191%" y="501" width="0.1627%" height="15" fill="rgb(243,101,7)" fg:x="965" fg:w="2"/><text x="78.7691%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="78.6819%" y="581" width="0.0814%" height="15" fill="rgb(240,140,22)" fg:x="967" fg:w="1"/><text x="78.9319%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.6819%" y="565" width="0.0814%" height="15" fill="rgb(235,114,2)" fg:x="967" fg:w="1"/><text x="78.9319%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0887%" y="549" width="0.0814%" height="15" fill="rgb(242,59,12)" fg:x="972" fg:w="1"/><text x="79.3387%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="79.1701%" y="549" width="0.4068%" height="15" fill="rgb(252,134,9)" fg:x="973" fg:w="5"/><text x="79.4201%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.4142%" y="533" width="0.1627%" height="15" fill="rgb(236,4,44)" fg:x="976" fg:w="2"/><text x="79.6642%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6583%" y="501" width="0.0814%" height="15" fill="rgb(254,172,41)" fg:x="979" fg:w="1"/><text x="79.9083%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.6583%" y="485" width="0.0814%" height="15" fill="rgb(244,63,20)" fg:x="979" fg:w="1"/><text x="79.9083%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.6583%" y="469" width="0.0814%" height="15" fill="rgb(250,73,31)" fg:x="979" fg:w="1"/><text x="79.9083%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0651%" y="453" width="0.0814%" height="15" fill="rgb(241,38,36)" fg:x="984" fg:w="1"/><text x="80.3151%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.49%)</title><rect x="79.7396%" y="501" width="0.4882%" height="15" fill="rgb(245,211,2)" fg:x="980" fg:w="6"/><text x="79.9896%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="79.8210%" y="485" width="0.4068%" height="15" fill="rgb(206,120,28)" fg:x="981" fg:w="5"/><text x="80.0710%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="79.9024%" y="469" width="0.3255%" height="15" fill="rgb(211,59,34)" fg:x="982" fg:w="4"/><text x="80.1524%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1465%" y="453" width="0.0814%" height="15" fill="rgb(233,168,5)" fg:x="985" fg:w="1"/><text x="80.3965%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.90%)</title><rect x="79.6583%" y="517" width="0.8950%" height="15" fill="rgb(234,33,13)" fg:x="979" fg:w="11"/><text x="79.9083%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="80.2278%" y="501" width="0.3255%" height="15" fill="rgb(231,150,26)" fg:x="986" fg:w="4"/><text x="80.4778%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.3092%" y="485" width="0.2441%" height="15" fill="rgb(217,191,4)" fg:x="987" fg:w="3"/><text x="80.5592%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.3092%" y="469" width="0.2441%" height="15" fill="rgb(246,198,38)" fg:x="987" fg:w="3"/><text x="80.5592%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.3092%" y="453" width="0.2441%" height="15" fill="rgb(245,64,37)" fg:x="987" fg:w="3"/><text x="80.5592%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="80.3092%" y="437" width="0.2441%" height="15" fill="rgb(250,30,36)" fg:x="987" fg:w="3"/><text x="80.5592%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.3906%" y="421" width="0.1627%" height="15" fill="rgb(217,86,53)" fg:x="988" fg:w="2"/><text x="80.6406%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4719%" y="405" width="0.0814%" height="15" fill="rgb(228,157,16)" fg:x="989" fg:w="1"/><text x="80.7219%" y="415.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.29%)</title><rect x="75.3458%" y="693" width="5.2889%" height="15" fill="rgb(217,59,31)" fg:x="926" fg:w="65"/><text x="75.5958%" y="703.50">engine..</text></g><g><title>engine::session::Session::save_changes (62 samples, 5.04%)</title><rect x="75.5899%" y="677" width="5.0448%" height="15" fill="rgb(237,138,41)" fg:x="929" fg:w="62"/><text x="75.8399%" y="687.50">engine..</text></g><g><title>engine::session::state::State::close (62 samples, 5.04%)</title><rect x="75.5899%" y="661" width="5.0448%" height="15" fill="rgb(227,91,49)" fg:x="929" fg:w="62"/><text x="75.8399%" y="671.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (62 samples, 5.04%)</title><rect x="75.5899%" y="645" width="5.0448%" height="15" fill="rgb(247,21,44)" fg:x="929" fg:w="62"/><text x="75.8399%" y="655.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.96%)</title><rect x="75.6713%" y="629" width="4.9634%" height="15" fill="rgb(219,210,51)" fg:x="930" fg:w="61"/><text x="75.9213%" y="639.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (61 samples, 4.96%)</title><rect x="75.6713%" y="613" width="4.9634%" height="15" fill="rgb(209,140,6)" fg:x="930" fg:w="61"/><text x="75.9213%" y="623.50">engine..</text></g><g><title>kernel::model::any_entity_changes (24 samples, 1.95%)</title><rect x="78.6819%" y="597" width="1.9528%" height="15" fill="rgb(221,188,24)" fg:x="967" fg:w="24"/><text x="78.9319%" y="607.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (23 samples, 1.87%)</title><rect x="78.7632%" y="581" width="1.8714%" height="15" fill="rgb(232,154,20)" fg:x="968" fg:w="23"/><text x="79.0132%" y="591.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.79%)</title><rect x="78.8446%" y="565" width="1.7901%" height="15" fill="rgb(244,137,50)" fg:x="969" fg:w="22"/><text x="79.0946%" y="575.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.06%)</title><rect x="79.5769%" y="549" width="1.0578%" height="15" fill="rgb(225,185,43)" fg:x="978" fg:w="13"/><text x="79.8269%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.98%)</title><rect x="79.6583%" y="533" width="0.9764%" height="15" fill="rgb(213,205,38)" fg:x="979" fg:w="12"/><text x="79.9083%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.5533%" y="517" width="0.0814%" height="15" fill="rgb(236,73,12)" fg:x="990" fg:w="1"/><text x="80.8033%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="80.6347%" y="677" width="0.0814%" height="15" fill="rgb(235,219,13)" fg:x="991" fg:w="1"/><text x="80.8847%" y="687.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="80.6347%" y="661" width="0.0814%" height="15" fill="rgb(218,59,36)" fg:x="991" fg:w="1"/><text x="80.8847%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="80.6347%" y="645" width="0.0814%" height="15" fill="rgb(205,110,39)" fg:x="991" fg:w="1"/><text x="80.8847%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="80.6347%" y="629" width="0.0814%" height="15" fill="rgb(218,206,42)" fg:x="991" fg:w="1"/><text x="80.8847%" y="639.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="80.7160%" y="677" width="0.0814%" height="15" fill="rgb(248,125,24)" fg:x="992" fg:w="1"/><text x="80.9660%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7974%" y="645" width="0.0814%" height="15" fill="rgb(242,28,27)" fg:x="993" fg:w="1"/><text x="81.0474%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.33%)</title><rect x="80.6347%" y="693" width="0.3255%" height="15" fill="rgb(216,228,15)" fg:x="991" fg:w="4"/><text x="80.8847%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="80.7974%" y="677" width="0.1627%" height="15" fill="rgb(235,116,46)" fg:x="993" fg:w="2"/><text x="81.0474%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.7974%" y="661" width="0.1627%" height="15" fill="rgb(224,18,32)" fg:x="993" fg:w="2"/><text x="81.0474%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.8788%" y="645" width="0.0814%" height="15" fill="rgb(252,5,12)" fg:x="994" fg:w="1"/><text x="81.1288%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.8788%" y="629" width="0.0814%" height="15" fill="rgb(251,36,5)" fg:x="994" fg:w="1"/><text x="81.1288%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8788%" y="613" width="0.0814%" height="15" fill="rgb(217,53,14)" fg:x="994" fg:w="1"/><text x="81.1288%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8788%" y="597" width="0.0814%" height="15" fill="rgb(215,86,45)" fg:x="994" fg:w="1"/><text x="81.1288%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8788%" y="581" width="0.0814%" height="15" fill="rgb(242,169,11)" fg:x="994" fg:w="1"/><text x="81.1288%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8788%" y="565" width="0.0814%" height="15" fill="rgb(211,213,45)" fg:x="994" fg:w="1"/><text x="81.1288%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.8788%" y="549" width="0.0814%" height="15" fill="rgb(205,88,11)" fg:x="994" fg:w="1"/><text x="81.1288%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="80.9601%" y="645" width="0.0814%" height="15" fill="rgb(252,69,26)" fg:x="995" fg:w="1"/><text x="81.2101%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9601%" y="629" width="0.0814%" height="15" fill="rgb(246,123,37)" fg:x="995" fg:w="1"/><text x="81.2101%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9601%" y="613" width="0.0814%" height="15" fill="rgb(212,205,5)" fg:x="995" fg:w="1"/><text x="81.2101%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9601%" y="597" width="0.0814%" height="15" fill="rgb(253,148,0)" fg:x="995" fg:w="1"/><text x="81.2101%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9601%" y="581" width="0.0814%" height="15" fill="rgb(239,22,4)" fg:x="995" fg:w="1"/><text x="81.2101%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9601%" y="565" width="0.0814%" height="15" fill="rgb(226,26,53)" fg:x="995" fg:w="1"/><text x="81.2101%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9601%" y="549" width="0.0814%" height="15" fill="rgb(225,229,45)" fg:x="995" fg:w="1"/><text x="81.2101%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9601%" y="533" width="0.0814%" height="15" fill="rgb(220,60,37)" fg:x="995" fg:w="1"/><text x="81.2101%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9601%" y="517" width="0.0814%" height="15" fill="rgb(217,180,35)" fg:x="995" fg:w="1"/><text x="81.2101%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="80.9601%" y="661" width="0.1627%" height="15" fill="rgb(229,7,53)" fg:x="995" fg:w="2"/><text x="81.2101%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.0415%" y="645" width="0.0814%" height="15" fill="rgb(254,137,3)" fg:x="996" fg:w="1"/><text x="81.2915%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.0415%" y="629" width="0.0814%" height="15" fill="rgb(215,140,41)" fg:x="996" fg:w="1"/><text x="81.2915%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="613" width="0.0814%" height="15" fill="rgb(250,80,15)" fg:x="996" fg:w="1"/><text x="81.2915%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.0415%" y="597" width="0.0814%" height="15" fill="rgb(252,191,6)" fg:x="996" fg:w="1"/><text x="81.2915%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="581" width="0.0814%" height="15" fill="rgb(246,217,18)" fg:x="996" fg:w="1"/><text x="81.2915%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="565" width="0.0814%" height="15" fill="rgb(223,93,7)" fg:x="996" fg:w="1"/><text x="81.2915%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="549" width="0.0814%" height="15" fill="rgb(225,55,52)" fg:x="996" fg:w="1"/><text x="81.2915%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.0415%" y="533" width="0.0814%" height="15" fill="rgb(240,31,24)" fg:x="996" fg:w="1"/><text x="81.2915%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="517" width="0.0814%" height="15" fill="rgb(205,56,52)" fg:x="996" fg:w="1"/><text x="81.2915%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="81.0415%" y="501" width="0.0814%" height="15" fill="rgb(246,146,12)" fg:x="996" fg:w="1"/><text x="81.2915%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.0415%" y="485" width="0.0814%" height="15" fill="rgb(239,84,36)" fg:x="996" fg:w="1"/><text x="81.2915%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2042%" y="549" width="0.0814%" height="15" fill="rgb(207,41,40)" fg:x="998" fg:w="1"/><text x="81.4542%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2042%" y="533" width="0.0814%" height="15" fill="rgb(241,179,25)" fg:x="998" fg:w="1"/><text x="81.4542%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2042%" y="517" width="0.0814%" height="15" fill="rgb(210,0,34)" fg:x="998" fg:w="1"/><text x="81.4542%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.2042%" y="501" width="0.0814%" height="15" fill="rgb(225,217,29)" fg:x="998" fg:w="1"/><text x="81.4542%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.2042%" y="485" width="0.0814%" height="15" fill="rgb(216,191,38)" fg:x="998" fg:w="1"/><text x="81.4542%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.2042%" y="469" width="0.0814%" height="15" fill="rgb(232,140,52)" fg:x="998" fg:w="1"/><text x="81.4542%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.2042%" y="453" width="0.0814%" height="15" fill="rgb(223,158,51)" fg:x="998" fg:w="1"/><text x="81.4542%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.2042%" y="437" width="0.0814%" height="15" fill="rgb(235,29,51)" fg:x="998" fg:w="1"/><text x="81.4542%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2042%" y="613" width="0.1627%" height="15" fill="rgb(215,181,18)" fg:x="998" fg:w="2"/><text x="81.4542%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2042%" y="597" width="0.1627%" height="15" fill="rgb(227,125,34)" fg:x="998" fg:w="2"/><text x="81.4542%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2042%" y="581" width="0.1627%" height="15" fill="rgb(230,197,49)" fg:x="998" fg:w="2"/><text x="81.4542%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="81.2042%" y="565" width="0.1627%" height="15" fill="rgb(239,141,16)" fg:x="998" fg:w="2"/><text x="81.4542%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2856%" y="549" width="0.0814%" height="15" fill="rgb(225,105,43)" fg:x="999" fg:w="1"/><text x="81.5356%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.2856%" y="533" width="0.0814%" height="15" fill="rgb(214,131,14)" fg:x="999" fg:w="1"/><text x="81.5356%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.2856%" y="517" width="0.0814%" height="15" fill="rgb(229,177,11)" fg:x="999" fg:w="1"/><text x="81.5356%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.2856%" y="501" width="0.0814%" height="15" fill="rgb(231,180,14)" fg:x="999" fg:w="1"/><text x="81.5356%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.2856%" y="485" width="0.0814%" height="15" fill="rgb(232,88,2)" fg:x="999" fg:w="1"/><text x="81.5356%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.2856%" y="469" width="0.0814%" height="15" fill="rgb(205,220,8)" fg:x="999" fg:w="1"/><text x="81.5356%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.2856%" y="453" width="0.0814%" height="15" fill="rgb(225,23,53)" fg:x="999" fg:w="1"/><text x="81.5356%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.2856%" y="437" width="0.0814%" height="15" fill="rgb(213,62,29)" fg:x="999" fg:w="1"/><text x="81.5356%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.2856%" y="421" width="0.0814%" height="15" fill="rgb(227,75,7)" fg:x="999" fg:w="1"/><text x="81.5356%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.2856%" y="405" width="0.0814%" height="15" fill="rgb(207,105,14)" fg:x="999" fg:w="1"/><text x="81.5356%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.2856%" y="389" width="0.0814%" height="15" fill="rgb(245,62,29)" fg:x="999" fg:w="1"/><text x="81.5356%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="81.1229%" y="661" width="0.4068%" height="15" fill="rgb(236,202,4)" fg:x="997" fg:w="5"/><text x="81.3729%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="81.2042%" y="645" width="0.3255%" height="15" fill="rgb(250,67,1)" fg:x="998" fg:w="4"/><text x="81.4542%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="81.2042%" y="629" width="0.3255%" height="15" fill="rgb(253,115,44)" fg:x="998" fg:w="4"/><text x="81.4542%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.3670%" y="613" width="0.1627%" height="15" fill="rgb(251,139,18)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3670%" y="597" width="0.1627%" height="15" fill="rgb(218,22,32)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.3670%" y="581" width="0.1627%" height="15" fill="rgb(243,53,5)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3670%" y="565" width="0.1627%" height="15" fill="rgb(227,56,16)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.3670%" y="549" width="0.1627%" height="15" fill="rgb(245,53,0)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.3670%" y="533" width="0.1627%" height="15" fill="rgb(216,170,35)" fg:x="1000" fg:w="2"/><text x="81.6170%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4483%" y="517" width="0.0814%" height="15" fill="rgb(211,200,8)" fg:x="1001" fg:w="1"/><text x="81.6983%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4483%" y="501" width="0.0814%" height="15" fill="rgb(228,204,44)" fg:x="1001" fg:w="1"/><text x="81.6983%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.5297%" y="661" width="0.0814%" height="15" fill="rgb(214,121,17)" fg:x="1002" fg:w="1"/><text x="81.7797%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="81.5297%" y="645" width="0.0814%" height="15" fill="rgb(233,64,38)" fg:x="1002" fg:w="1"/><text x="81.7797%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5297%" y="629" width="0.0814%" height="15" fill="rgb(253,54,19)" fg:x="1002" fg:w="1"/><text x="81.7797%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.6111%" y="661" width="0.0814%" height="15" fill="rgb(253,94,18)" fg:x="1003" fg:w="1"/><text x="81.8611%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.6111%" y="645" width="0.0814%" height="15" fill="rgb(227,57,52)" fg:x="1003" fg:w="1"/><text x="81.8611%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.6111%" y="629" width="0.0814%" height="15" fill="rgb(230,228,50)" fg:x="1003" fg:w="1"/><text x="81.8611%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.6111%" y="613" width="0.0814%" height="15" fill="rgb(217,205,27)" fg:x="1003" fg:w="1"/><text x="81.8611%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6111%" y="597" width="0.0814%" height="15" fill="rgb(252,71,50)" fg:x="1003" fg:w="1"/><text x="81.8611%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="80.9601%" y="677" width="0.8137%" height="15" fill="rgb(209,86,4)" fg:x="995" fg:w="10"/><text x="81.2101%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.6924%" y="661" width="0.0814%" height="15" fill="rgb(229,94,0)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.6924%" y="645" width="0.0814%" height="15" fill="rgb(252,223,21)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.6924%" y="629" width="0.0814%" height="15" fill="rgb(230,210,4)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.6924%" y="613" width="0.0814%" height="15" fill="rgb(240,149,38)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.6924%" y="597" width="0.0814%" height="15" fill="rgb(254,105,20)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6924%" y="581" width="0.0814%" height="15" fill="rgb(253,87,46)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6924%" y="565" width="0.0814%" height="15" fill="rgb(253,116,33)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6924%" y="549" width="0.0814%" height="15" fill="rgb(229,198,5)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6924%" y="533" width="0.0814%" height="15" fill="rgb(242,38,37)" fg:x="1004" fg:w="1"/><text x="81.9424%" y="543.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="81.7738%" y="661" width="0.0814%" height="15" fill="rgb(242,69,53)" fg:x="1005" fg:w="1"/><text x="82.0238%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8552%" y="581" width="0.0814%" height="15" fill="rgb(249,80,16)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8552%" y="565" width="0.0814%" height="15" fill="rgb(206,128,11)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8552%" y="549" width="0.0814%" height="15" fill="rgb(212,35,20)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8552%" y="533" width="0.0814%" height="15" fill="rgb(236,79,13)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8552%" y="517" width="0.0814%" height="15" fill="rgb(233,123,3)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8552%" y="501" width="0.0814%" height="15" fill="rgb(214,93,52)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.8552%" y="485" width="0.0814%" height="15" fill="rgb(251,37,40)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.8552%" y="469" width="0.0814%" height="15" fill="rgb(227,80,54)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.8552%" y="453" width="0.0814%" height="15" fill="rgb(254,48,11)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8552%" y="437" width="0.0814%" height="15" fill="rgb(235,193,26)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.8552%" y="421" width="0.0814%" height="15" fill="rgb(229,99,21)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.8552%" y="405" width="0.0814%" height="15" fill="rgb(211,140,41)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.8552%" y="389" width="0.0814%" height="15" fill="rgb(240,227,30)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.8552%" y="373" width="0.0814%" height="15" fill="rgb(215,224,45)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.8552%" y="357" width="0.0814%" height="15" fill="rgb(206,123,31)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8552%" y="341" width="0.0814%" height="15" fill="rgb(210,138,16)" fg:x="1006" fg:w="1"/><text x="82.1052%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.8552%" y="629" width="0.1627%" height="15" fill="rgb(228,57,28)" fg:x="1006" fg:w="2"/><text x="82.1052%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="81.8552%" y="613" width="0.1627%" height="15" fill="rgb(242,170,10)" fg:x="1006" fg:w="2"/><text x="82.1052%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.8552%" y="597" width="0.1627%" height="15" fill="rgb(228,214,39)" fg:x="1006" fg:w="2"/><text x="82.1052%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.9365%" y="581" width="0.0814%" height="15" fill="rgb(218,179,33)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9365%" y="565" width="0.0814%" height="15" fill="rgb(235,193,39)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.9365%" y="549" width="0.0814%" height="15" fill="rgb(219,221,36)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9365%" y="533" width="0.0814%" height="15" fill="rgb(248,218,19)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.9365%" y="517" width="0.0814%" height="15" fill="rgb(205,50,9)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9365%" y="501" width="0.0814%" height="15" fill="rgb(238,81,28)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.9365%" y="485" width="0.0814%" height="15" fill="rgb(235,110,19)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9365%" y="469" width="0.0814%" height="15" fill="rgb(214,7,14)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.9365%" y="453" width="0.0814%" height="15" fill="rgb(211,77,3)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.9365%" y="437" width="0.0814%" height="15" fill="rgb(229,5,9)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="81.9365%" y="421" width="0.0814%" height="15" fill="rgb(225,90,11)" fg:x="1007" fg:w="1"/><text x="82.1865%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="81.8552%" y="661" width="0.2441%" height="15" fill="rgb(242,56,8)" fg:x="1006" fg:w="3"/><text x="82.1052%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="81.8552%" y="645" width="0.2441%" height="15" fill="rgb(249,212,39)" fg:x="1006" fg:w="3"/><text x="82.1052%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.0179%" y="629" width="0.0814%" height="15" fill="rgb(236,90,9)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.0179%" y="613" width="0.0814%" height="15" fill="rgb(206,88,35)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0179%" y="597" width="0.0814%" height="15" fill="rgb(205,126,30)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0179%" y="581" width="0.0814%" height="15" fill="rgb(230,176,12)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0179%" y="565" width="0.0814%" height="15" fill="rgb(243,19,9)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.0179%" y="549" width="0.0814%" height="15" fill="rgb(245,171,17)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0179%" y="533" width="0.0814%" height="15" fill="rgb(227,52,21)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.0179%" y="517" width="0.0814%" height="15" fill="rgb(238,69,14)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.0179%" y="501" width="0.0814%" height="15" fill="rgb(241,156,39)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0179%" y="485" width="0.0814%" height="15" fill="rgb(212,227,28)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.0179%" y="469" width="0.0814%" height="15" fill="rgb(209,118,27)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.0179%" y="453" width="0.0814%" height="15" fill="rgb(226,102,5)" fg:x="1008" fg:w="1"/><text x="82.2679%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.0993%" y="661" width="0.0814%" height="15" fill="rgb(223,34,3)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0993%" y="645" width="0.0814%" height="15" fill="rgb(221,81,38)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.0993%" y="629" width="0.0814%" height="15" fill="rgb(236,219,28)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.0993%" y="613" width="0.0814%" height="15" fill="rgb(213,200,14)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0993%" y="597" width="0.0814%" height="15" fill="rgb(240,33,19)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.0993%" y="581" width="0.0814%" height="15" fill="rgb(233,113,27)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.0993%" y="565" width="0.0814%" height="15" fill="rgb(220,221,18)" fg:x="1009" fg:w="1"/><text x="82.3493%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.1806%" y="597" width="0.0814%" height="15" fill="rgb(238,92,8)" fg:x="1010" fg:w="1"/><text x="82.4306%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.1806%" y="581" width="0.0814%" height="15" fill="rgb(222,164,16)" fg:x="1010" fg:w="1"/><text x="82.4306%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="82.1806%" y="613" width="0.2441%" height="15" fill="rgb(241,119,3)" fg:x="1010" fg:w="3"/><text x="82.4306%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.2620%" y="597" width="0.1627%" height="15" fill="rgb(241,44,8)" fg:x="1011" fg:w="2"/><text x="82.5120%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.2620%" y="581" width="0.1627%" height="15" fill="rgb(230,36,40)" fg:x="1011" fg:w="2"/><text x="82.5120%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3434%" y="565" width="0.0814%" height="15" fill="rgb(243,16,36)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3434%" y="549" width="0.0814%" height="15" fill="rgb(231,4,26)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3434%" y="533" width="0.0814%" height="15" fill="rgb(240,9,31)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3434%" y="517" width="0.0814%" height="15" fill="rgb(207,173,15)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3434%" y="501" width="0.0814%" height="15" fill="rgb(224,192,53)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3434%" y="485" width="0.0814%" height="15" fill="rgb(223,67,28)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3434%" y="469" width="0.0814%" height="15" fill="rgb(211,20,47)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3434%" y="453" width="0.0814%" height="15" fill="rgb(240,228,2)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3434%" y="437" width="0.0814%" height="15" fill="rgb(248,151,12)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3434%" y="421" width="0.0814%" height="15" fill="rgb(244,8,39)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3434%" y="405" width="0.0814%" height="15" fill="rgb(222,26,8)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="82.3434%" y="389" width="0.0814%" height="15" fill="rgb(213,106,44)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="82.3434%" y="373" width="0.0814%" height="15" fill="rgb(214,129,20)" fg:x="1012" fg:w="1"/><text x="82.5934%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.33%)</title><rect x="82.1806%" y="661" width="0.3255%" height="15" fill="rgb(212,32,13)" fg:x="1010" fg:w="4"/><text x="82.4306%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="82.1806%" y="645" width="0.3255%" height="15" fill="rgb(208,168,33)" fg:x="1010" fg:w="4"/><text x="82.4306%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="82.1806%" y="629" width="0.3255%" height="15" fill="rgb(231,207,8)" fg:x="1010" fg:w="4"/><text x="82.4306%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.4247%" y="613" width="0.0814%" height="15" fill="rgb(235,219,23)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4247%" y="597" width="0.0814%" height="15" fill="rgb(226,216,26)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4247%" y="581" width="0.0814%" height="15" fill="rgb(239,137,16)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4247%" y="565" width="0.0814%" height="15" fill="rgb(207,12,36)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4247%" y="549" width="0.0814%" height="15" fill="rgb(210,214,24)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4247%" y="533" width="0.0814%" height="15" fill="rgb(206,56,30)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4247%" y="517" width="0.0814%" height="15" fill="rgb(228,143,26)" fg:x="1013" fg:w="1"/><text x="82.6747%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5061%" y="597" width="0.0814%" height="15" fill="rgb(216,218,46)" fg:x="1014" fg:w="1"/><text x="82.7561%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.71%)</title><rect x="80.9601%" y="693" width="1.7087%" height="15" fill="rgb(206,6,19)" fg:x="995" fg:w="21"/><text x="81.2101%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.90%)</title><rect x="81.7738%" y="677" width="0.8950%" height="15" fill="rgb(239,177,51)" fg:x="1005" fg:w="11"/><text x="82.0238%" y="687.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="82.5061%" y="661" width="0.1627%" height="15" fill="rgb(216,55,25)" fg:x="1014" fg:w="2"/><text x="82.7561%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.5061%" y="645" width="0.1627%" height="15" fill="rgb(231,163,29)" fg:x="1014" fg:w="2"/><text x="82.7561%" y="655.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="82.5061%" y="629" width="0.1627%" height="15" fill="rgb(232,149,50)" fg:x="1014" fg:w="2"/><text x="82.7561%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.5061%" y="613" width="0.1627%" height="15" fill="rgb(223,142,48)" fg:x="1014" fg:w="2"/><text x="82.7561%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.5875%" y="597" width="0.0814%" height="15" fill="rgb(245,83,23)" fg:x="1015" fg:w="1"/><text x="82.8375%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.5875%" y="581" width="0.0814%" height="15" fill="rgb(224,63,2)" fg:x="1015" fg:w="1"/><text x="82.8375%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5875%" y="565" width="0.0814%" height="15" fill="rgb(218,65,53)" fg:x="1015" fg:w="1"/><text x="82.8375%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6688%" y="613" width="0.0814%" height="15" fill="rgb(221,84,29)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6688%" y="597" width="0.0814%" height="15" fill="rgb(234,0,32)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6688%" y="581" width="0.0814%" height="15" fill="rgb(206,20,16)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6688%" y="565" width="0.0814%" height="15" fill="rgb(244,172,18)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6688%" y="549" width="0.0814%" height="15" fill="rgb(254,133,1)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6688%" y="533" width="0.0814%" height="15" fill="rgb(222,206,41)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6688%" y="517" width="0.0814%" height="15" fill="rgb(212,3,42)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.6688%" y="501" width="0.0814%" height="15" fill="rgb(241,11,4)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.6688%" y="485" width="0.0814%" height="15" fill="rgb(205,19,26)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.6688%" y="469" width="0.0814%" height="15" fill="rgb(210,179,32)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.6688%" y="453" width="0.0814%" height="15" fill="rgb(227,116,49)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.6688%" y="437" width="0.0814%" height="15" fill="rgb(211,146,6)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6688%" y="421" width="0.0814%" height="15" fill="rgb(219,44,39)" fg:x="1016" fg:w="1"/><text x="82.9188%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="82.6688%" y="661" width="0.1627%" height="15" fill="rgb(234,128,11)" fg:x="1016" fg:w="2"/><text x="82.9188%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="82.6688%" y="645" width="0.1627%" height="15" fill="rgb(220,183,53)" fg:x="1016" fg:w="2"/><text x="82.9188%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="82.6688%" y="629" width="0.1627%" height="15" fill="rgb(213,219,32)" fg:x="1016" fg:w="2"/><text x="82.9188%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.7502%" y="613" width="0.0814%" height="15" fill="rgb(232,156,16)" fg:x="1017" fg:w="1"/><text x="83.0002%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.7502%" y="597" width="0.0814%" height="15" fill="rgb(246,135,34)" fg:x="1017" fg:w="1"/><text x="83.0002%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8316%" y="613" width="0.0814%" height="15" fill="rgb(241,99,0)" fg:x="1018" fg:w="1"/><text x="83.0816%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8316%" y="597" width="0.0814%" height="15" fill="rgb(222,103,45)" fg:x="1018" fg:w="1"/><text x="83.0816%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8316%" y="581" width="0.0814%" height="15" fill="rgb(212,57,4)" fg:x="1018" fg:w="1"/><text x="83.0816%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8316%" y="565" width="0.0814%" height="15" fill="rgb(215,68,47)" fg:x="1018" fg:w="1"/><text x="83.0816%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8316%" y="549" width="0.0814%" height="15" fill="rgb(230,84,2)" fg:x="1018" fg:w="1"/><text x="83.0816%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.33%)</title><rect x="82.6688%" y="693" width="0.3255%" height="15" fill="rgb(220,102,14)" fg:x="1016" fg:w="4"/><text x="82.9188%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="82.6688%" y="677" width="0.3255%" height="15" fill="rgb(240,10,32)" fg:x="1016" fg:w="4"/><text x="82.9188%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.8316%" y="661" width="0.1627%" height="15" fill="rgb(215,47,27)" fg:x="1018" fg:w="2"/><text x="83.0816%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.8316%" y="645" width="0.1627%" height="15" fill="rgb(233,188,43)" fg:x="1018" fg:w="2"/><text x="83.0816%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.8316%" y="629" width="0.1627%" height="15" fill="rgb(253,190,1)" fg:x="1018" fg:w="2"/><text x="83.0816%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9129%" y="613" width="0.0814%" height="15" fill="rgb(206,114,52)" fg:x="1019" fg:w="1"/><text x="83.1629%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9129%" y="597" width="0.0814%" height="15" fill="rgb(233,120,37)" fg:x="1019" fg:w="1"/><text x="83.1629%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9129%" y="581" width="0.0814%" height="15" fill="rgb(214,52,39)" fg:x="1019" fg:w="1"/><text x="83.1629%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9129%" y="565" width="0.0814%" height="15" fill="rgb(223,80,29)" fg:x="1019" fg:w="1"/><text x="83.1629%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9129%" y="549" width="0.0814%" height="15" fill="rgb(230,101,40)" fg:x="1019" fg:w="1"/><text x="83.1629%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.9943%" y="693" width="0.0814%" height="15" fill="rgb(219,211,8)" fg:x="1020" fg:w="1"/><text x="83.2443%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.9943%" y="677" width="0.0814%" height="15" fill="rgb(252,126,28)" fg:x="1020" fg:w="1"/><text x="83.2443%" y="687.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="82.9943%" y="661" width="0.0814%" height="15" fill="rgb(215,56,38)" fg:x="1020" fg:w="1"/><text x="83.2443%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9943%" y="645" width="0.0814%" height="15" fill="rgb(249,55,44)" fg:x="1020" fg:w="1"/><text x="83.2443%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.9943%" y="629" width="0.0814%" height="15" fill="rgb(220,221,32)" fg:x="1020" fg:w="1"/><text x="83.2443%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="83.0757%" y="629" width="0.0814%" height="15" fill="rgb(212,216,41)" fg:x="1021" fg:w="1"/><text x="83.3257%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.0757%" y="613" width="0.0814%" height="15" fill="rgb(228,213,43)" fg:x="1021" fg:w="1"/><text x="83.3257%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0757%" y="597" width="0.0814%" height="15" fill="rgb(211,31,26)" fg:x="1021" fg:w="1"/><text x="83.3257%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="83.0757%" y="677" width="0.1627%" height="15" fill="rgb(229,202,19)" fg:x="1021" fg:w="2"/><text x="83.3257%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="83.0757%" y="661" width="0.1627%" height="15" fill="rgb(229,105,46)" fg:x="1021" fg:w="2"/><text x="83.3257%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="83.0757%" y="645" width="0.1627%" height="15" fill="rgb(235,108,1)" fg:x="1021" fg:w="2"/><text x="83.3257%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1570%" y="629" width="0.0814%" height="15" fill="rgb(245,111,35)" fg:x="1022" fg:w="1"/><text x="83.4070%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.1570%" y="613" width="0.0814%" height="15" fill="rgb(219,185,31)" fg:x="1022" fg:w="1"/><text x="83.4070%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.2384%" y="677" width="0.0814%" height="15" fill="rgb(214,4,43)" fg:x="1023" fg:w="1"/><text x="83.4884%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="83.2384%" y="661" width="0.0814%" height="15" fill="rgb(235,227,40)" fg:x="1023" fg:w="1"/><text x="83.4884%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.3198%" y="629" width="0.0814%" height="15" fill="rgb(230,88,30)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.3198%" y="613" width="0.0814%" height="15" fill="rgb(216,217,1)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3198%" y="597" width="0.0814%" height="15" fill="rgb(248,139,50)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3198%" y="581" width="0.0814%" height="15" fill="rgb(233,1,21)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3198%" y="565" width="0.0814%" height="15" fill="rgb(215,183,12)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3198%" y="549" width="0.0814%" height="15" fill="rgb(229,104,42)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3198%" y="533" width="0.0814%" height="15" fill="rgb(243,34,48)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3198%" y="517" width="0.0814%" height="15" fill="rgb(239,11,44)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3198%" y="501" width="0.0814%" height="15" fill="rgb(231,98,35)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3198%" y="485" width="0.0814%" height="15" fill="rgb(233,28,25)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3198%" y="469" width="0.0814%" height="15" fill="rgb(234,123,11)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3198%" y="453" width="0.0814%" height="15" fill="rgb(220,69,3)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3198%" y="437" width="0.0814%" height="15" fill="rgb(214,64,36)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3198%" y="421" width="0.0814%" height="15" fill="rgb(211,138,32)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3198%" y="405" width="0.0814%" height="15" fill="rgb(213,118,47)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3198%" y="389" width="0.0814%" height="15" fill="rgb(243,124,49)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3198%" y="373" width="0.0814%" height="15" fill="rgb(221,30,28)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3198%" y="357" width="0.0814%" height="15" fill="rgb(246,37,13)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3198%" y="341" width="0.0814%" height="15" fill="rgb(249,66,14)" fg:x="1024" fg:w="1"/><text x="83.5698%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4011%" y="581" width="0.1627%" height="15" fill="rgb(213,166,5)" fg:x="1025" fg:w="2"/><text x="83.6511%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4011%" y="565" width="0.1627%" height="15" fill="rgb(221,66,24)" fg:x="1025" fg:w="2"/><text x="83.6511%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4011%" y="549" width="0.1627%" height="15" fill="rgb(210,132,17)" fg:x="1025" fg:w="2"/><text x="83.6511%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4011%" y="533" width="0.1627%" height="15" fill="rgb(243,202,5)" fg:x="1025" fg:w="2"/><text x="83.6511%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4825%" y="517" width="0.0814%" height="15" fill="rgb(233,70,48)" fg:x="1026" fg:w="1"/><text x="83.7325%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4825%" y="501" width="0.0814%" height="15" fill="rgb(238,41,26)" fg:x="1026" fg:w="1"/><text x="83.7325%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="83.3198%" y="661" width="0.3255%" height="15" fill="rgb(241,19,31)" fg:x="1024" fg:w="4"/><text x="83.5698%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="83.3198%" y="645" width="0.3255%" height="15" fill="rgb(214,76,10)" fg:x="1024" fg:w="4"/><text x="83.5698%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="83.4011%" y="629" width="0.2441%" height="15" fill="rgb(254,202,22)" fg:x="1025" fg:w="3"/><text x="83.6511%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="83.4011%" y="613" width="0.2441%" height="15" fill="rgb(214,72,24)" fg:x="1025" fg:w="3"/><text x="83.6511%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.4011%" y="597" width="0.2441%" height="15" fill="rgb(221,92,46)" fg:x="1025" fg:w="3"/><text x="83.6511%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5639%" y="581" width="0.0814%" height="15" fill="rgb(246,13,50)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5639%" y="565" width="0.0814%" height="15" fill="rgb(240,165,38)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5639%" y="549" width="0.0814%" height="15" fill="rgb(241,24,51)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5639%" y="533" width="0.0814%" height="15" fill="rgb(227,51,44)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5639%" y="517" width="0.0814%" height="15" fill="rgb(231,121,3)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5639%" y="501" width="0.0814%" height="15" fill="rgb(245,3,41)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.5639%" y="485" width="0.0814%" height="15" fill="rgb(214,13,26)" fg:x="1027" fg:w="1"/><text x="83.8139%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.6452%" y="661" width="0.0814%" height="15" fill="rgb(252,75,11)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6452%" y="645" width="0.0814%" height="15" fill="rgb(218,226,17)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.6452%" y="629" width="0.0814%" height="15" fill="rgb(248,89,38)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6452%" y="613" width="0.0814%" height="15" fill="rgb(237,73,46)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6452%" y="597" width="0.0814%" height="15" fill="rgb(242,78,33)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6452%" y="581" width="0.0814%" height="15" fill="rgb(235,60,3)" fg:x="1028" fg:w="1"/><text x="83.8952%" y="591.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="83.7266%" y="645" width="0.0814%" height="15" fill="rgb(216,172,19)" fg:x="1029" fg:w="1"/><text x="83.9766%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8080%" y="613" width="0.0814%" height="15" fill="rgb(227,6,42)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8080%" y="597" width="0.0814%" height="15" fill="rgb(223,207,42)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8080%" y="581" width="0.0814%" height="15" fill="rgb(246,138,30)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8080%" y="565" width="0.0814%" height="15" fill="rgb(251,199,47)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8080%" y="549" width="0.0814%" height="15" fill="rgb(228,218,44)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8080%" y="533" width="0.0814%" height="15" fill="rgb(220,68,6)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8080%" y="517" width="0.0814%" height="15" fill="rgb(240,60,26)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.8080%" y="501" width="0.0814%" height="15" fill="rgb(211,200,19)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8080%" y="485" width="0.0814%" height="15" fill="rgb(242,145,30)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8080%" y="469" width="0.0814%" height="15" fill="rgb(225,64,13)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8080%" y="453" width="0.0814%" height="15" fill="rgb(218,103,35)" fg:x="1030" fg:w="1"/><text x="84.0580%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8893%" y="597" width="0.0814%" height="15" fill="rgb(216,93,46)" fg:x="1031" fg:w="1"/><text x="84.1393%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0521%" y="565" width="0.0814%" height="15" fill="rgb(225,159,27)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0521%" y="549" width="0.0814%" height="15" fill="rgb(225,204,11)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0521%" y="533" width="0.0814%" height="15" fill="rgb(205,56,4)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0521%" y="517" width="0.0814%" height="15" fill="rgb(206,6,35)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0521%" y="501" width="0.0814%" height="15" fill="rgb(247,73,52)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0521%" y="485" width="0.0814%" height="15" fill="rgb(246,97,4)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.0521%" y="469" width="0.0814%" height="15" fill="rgb(212,37,15)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.0521%" y="453" width="0.0814%" height="15" fill="rgb(208,130,40)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.0521%" y="437" width="0.0814%" height="15" fill="rgb(236,55,29)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0521%" y="421" width="0.0814%" height="15" fill="rgb(209,156,45)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.0521%" y="405" width="0.0814%" height="15" fill="rgb(249,107,4)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.0521%" y="389" width="0.0814%" height="15" fill="rgb(227,7,13)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.0521%" y="373" width="0.0814%" height="15" fill="rgb(250,129,14)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.0521%" y="357" width="0.0814%" height="15" fill="rgb(229,92,13)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.0521%" y="341" width="0.0814%" height="15" fill="rgb(245,98,39)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0521%" y="325" width="0.0814%" height="15" fill="rgb(234,135,48)" fg:x="1033" fg:w="1"/><text x="84.3021%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1334%" y="565" width="0.0814%" height="15" fill="rgb(230,98,28)" fg:x="1034" fg:w="1"/><text x="84.3834%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.1334%" y="549" width="0.0814%" height="15" fill="rgb(223,121,0)" fg:x="1034" fg:w="1"/><text x="84.3834%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1334%" y="533" width="0.0814%" height="15" fill="rgb(234,173,33)" fg:x="1034" fg:w="1"/><text x="84.3834%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (122 samples, 9.93%)</title><rect x="74.3694%" y="709" width="9.9268%" height="15" fill="rgb(245,47,8)" fg:x="914" fg:w="122"/><text x="74.6194%" y="719.50">plugins_core::..</text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.22%)</title><rect x="83.0757%" y="693" width="1.2205%" height="15" fill="rgb(205,17,20)" fg:x="1021" fg:w="15"/><text x="83.3257%" y="703.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.98%)</title><rect x="83.3198%" y="677" width="0.9764%" height="15" fill="rgb(232,151,16)" fg:x="1024" fg:w="12"/><text x="83.5698%" y="687.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.57%)</title><rect x="83.7266%" y="661" width="0.5696%" height="15" fill="rgb(208,30,32)" fg:x="1029" fg:w="7"/><text x="83.9766%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="83.8080%" y="645" width="0.4882%" height="15" fill="rgb(254,26,3)" fg:x="1030" fg:w="6"/><text x="84.0580%" y="655.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="83.8080%" y="629" width="0.4882%" height="15" fill="rgb(240,177,30)" fg:x="1030" fg:w="6"/><text x="84.0580%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="83.8893%" y="613" width="0.4068%" height="15" fill="rgb(248,76,44)" fg:x="1031" fg:w="5"/><text x="84.1393%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="83.9707%" y="597" width="0.3255%" height="15" fill="rgb(241,186,54)" fg:x="1032" fg:w="4"/><text x="84.2207%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="83.9707%" y="581" width="0.3255%" height="15" fill="rgb(249,171,29)" fg:x="1032" fg:w="4"/><text x="84.2207%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2148%" y="565" width="0.0814%" height="15" fill="rgb(237,151,44)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2148%" y="549" width="0.0814%" height="15" fill="rgb(228,174,30)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2148%" y="533" width="0.0814%" height="15" fill="rgb(252,14,37)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2148%" y="517" width="0.0814%" height="15" fill="rgb(207,111,40)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.2148%" y="501" width="0.0814%" height="15" fill="rgb(248,171,54)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2148%" y="485" width="0.0814%" height="15" fill="rgb(211,127,2)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.2148%" y="469" width="0.0814%" height="15" fill="rgb(236,87,47)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.2148%" y="453" width="0.0814%" height="15" fill="rgb(223,190,45)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.2148%" y="437" width="0.0814%" height="15" fill="rgb(215,5,16)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2148%" y="421" width="0.0814%" height="15" fill="rgb(252,82,33)" fg:x="1035" fg:w="1"/><text x="84.4648%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="84.2962%" y="709" width="0.0814%" height="15" fill="rgb(247,213,44)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="84.2962%" y="693" width="0.0814%" height="15" fill="rgb(205,196,44)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.2962%" y="677" width="0.0814%" height="15" fill="rgb(237,96,54)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.2962%" y="661" width="0.0814%" height="15" fill="rgb(230,113,34)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.2962%" y="645" width="0.0814%" height="15" fill="rgb(221,224,12)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.2962%" y="629" width="0.0814%" height="15" fill="rgb(219,112,44)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="639.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="84.2962%" y="613" width="0.0814%" height="15" fill="rgb(210,31,13)" fg:x="1036" fg:w="1"/><text x="84.5462%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.3775%" y="613" width="0.0814%" height="15" fill="rgb(230,25,16)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.3775%" y="597" width="0.0814%" height="15" fill="rgb(246,108,53)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3775%" y="581" width="0.0814%" height="15" fill="rgb(241,172,50)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3775%" y="565" width="0.0814%" height="15" fill="rgb(235,141,10)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3775%" y="549" width="0.0814%" height="15" fill="rgb(220,174,43)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3775%" y="533" width="0.0814%" height="15" fill="rgb(215,181,40)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3775%" y="517" width="0.0814%" height="15" fill="rgb(230,97,2)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3775%" y="501" width="0.0814%" height="15" fill="rgb(211,25,27)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3775%" y="485" width="0.0814%" height="15" fill="rgb(230,87,26)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3775%" y="469" width="0.0814%" height="15" fill="rgb(227,160,17)" fg:x="1037" fg:w="1"/><text x="84.6275%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="84.3775%" y="677" width="0.1627%" height="15" fill="rgb(244,85,34)" fg:x="1037" fg:w="2"/><text x="84.6275%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.3775%" y="661" width="0.1627%" height="15" fill="rgb(207,70,0)" fg:x="1037" fg:w="2"/><text x="84.6275%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.3775%" y="645" width="0.1627%" height="15" fill="rgb(223,129,7)" fg:x="1037" fg:w="2"/><text x="84.6275%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.3775%" y="629" width="0.1627%" height="15" fill="rgb(246,105,7)" fg:x="1037" fg:w="2"/><text x="84.6275%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.4589%" y="613" width="0.0814%" height="15" fill="rgb(215,154,42)" fg:x="1038" fg:w="1"/><text x="84.7089%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.4589%" y="597" width="0.0814%" height="15" fill="rgb(220,215,30)" fg:x="1038" fg:w="1"/><text x="84.7089%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4589%" y="581" width="0.0814%" height="15" fill="rgb(228,81,51)" fg:x="1038" fg:w="1"/><text x="84.7089%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="84.5403%" y="677" width="0.1627%" height="15" fill="rgb(247,71,54)" fg:x="1039" fg:w="2"/><text x="84.7903%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="84.3775%" y="709" width="0.4068%" height="15" fill="rgb(234,176,34)" fg:x="1037" fg:w="5"/><text x="84.6275%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="84.3775%" y="693" width="0.4068%" height="15" fill="rgb(241,103,54)" fg:x="1037" fg:w="5"/><text x="84.6275%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.7030%" y="677" width="0.0814%" height="15" fill="rgb(228,22,34)" fg:x="1041" fg:w="1"/><text x="84.9530%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.7030%" y="661" width="0.0814%" height="15" fill="rgb(241,179,48)" fg:x="1041" fg:w="1"/><text x="84.9530%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.7030%" y="645" width="0.0814%" height="15" fill="rgb(235,167,37)" fg:x="1041" fg:w="1"/><text x="84.9530%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="84.7844%" y="677" width="0.0814%" height="15" fill="rgb(213,109,30)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="84.7844%" y="661" width="0.0814%" height="15" fill="rgb(222,172,16)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="671.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="84.7844%" y="645" width="0.0814%" height="15" fill="rgb(233,192,5)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7844%" y="629" width="0.0814%" height="15" fill="rgb(247,189,41)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7844%" y="613" width="0.0814%" height="15" fill="rgb(218,134,47)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7844%" y="597" width="0.0814%" height="15" fill="rgb(216,29,3)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7844%" y="581" width="0.0814%" height="15" fill="rgb(246,140,12)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7844%" y="565" width="0.0814%" height="15" fill="rgb(230,136,11)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7844%" y="549" width="0.0814%" height="15" fill="rgb(247,22,47)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.7844%" y="533" width="0.0814%" height="15" fill="rgb(218,84,22)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.7844%" y="517" width="0.0814%" height="15" fill="rgb(216,87,39)" fg:x="1042" fg:w="1"/><text x="85.0344%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.8657%" y="677" width="0.0814%" height="15" fill="rgb(221,178,8)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.8657%" y="661" width="0.0814%" height="15" fill="rgb(230,42,11)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8657%" y="645" width="0.0814%" height="15" fill="rgb(237,229,4)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8657%" y="629" width="0.0814%" height="15" fill="rgb(222,31,33)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.8657%" y="613" width="0.0814%" height="15" fill="rgb(210,17,39)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8657%" y="597" width="0.0814%" height="15" fill="rgb(244,93,20)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8657%" y="581" width="0.0814%" height="15" fill="rgb(210,40,47)" fg:x="1043" fg:w="1"/><text x="85.1157%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9471%" y="629" width="0.0814%" height="15" fill="rgb(239,211,47)" fg:x="1044" fg:w="1"/><text x="85.1971%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.9471%" y="613" width="0.0814%" height="15" fill="rgb(251,223,49)" fg:x="1044" fg:w="1"/><text x="85.1971%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.9471%" y="597" width="0.0814%" height="15" fill="rgb(221,149,5)" fg:x="1044" fg:w="1"/><text x="85.1971%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.33%)</title><rect x="84.7844%" y="693" width="0.3255%" height="15" fill="rgb(219,224,51)" fg:x="1042" fg:w="4"/><text x="85.0344%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.9471%" y="677" width="0.1627%" height="15" fill="rgb(223,7,8)" fg:x="1044" fg:w="2"/><text x="85.1971%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.9471%" y="661" width="0.1627%" height="15" fill="rgb(241,217,22)" fg:x="1044" fg:w="2"/><text x="85.1971%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.9471%" y="645" width="0.1627%" height="15" fill="rgb(248,209,0)" fg:x="1044" fg:w="2"/><text x="85.1971%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.0285%" y="629" width="0.0814%" height="15" fill="rgb(217,205,4)" fg:x="1045" fg:w="1"/><text x="85.2785%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0285%" y="613" width="0.0814%" height="15" fill="rgb(228,124,39)" fg:x="1045" fg:w="1"/><text x="85.2785%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0285%" y="597" width="0.0814%" height="15" fill="rgb(250,116,42)" fg:x="1045" fg:w="1"/><text x="85.2785%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0285%" y="581" width="0.0814%" height="15" fill="rgb(223,202,9)" fg:x="1045" fg:w="1"/><text x="85.2785%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1098%" y="661" width="0.0814%" height="15" fill="rgb(242,222,40)" fg:x="1046" fg:w="1"/><text x="85.3598%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1098%" y="645" width="0.0814%" height="15" fill="rgb(229,99,46)" fg:x="1046" fg:w="1"/><text x="85.3598%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1912%" y="629" width="0.0814%" height="15" fill="rgb(225,56,46)" fg:x="1047" fg:w="1"/><text x="85.4412%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.1912%" y="613" width="0.0814%" height="15" fill="rgb(227,94,5)" fg:x="1047" fg:w="1"/><text x="85.4412%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="85.1098%" y="693" width="0.2441%" height="15" fill="rgb(205,112,38)" fg:x="1046" fg:w="3"/><text x="85.3598%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="85.1098%" y="677" width="0.2441%" height="15" fill="rgb(231,133,46)" fg:x="1046" fg:w="3"/><text x="85.3598%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="85.1912%" y="661" width="0.1627%" height="15" fill="rgb(217,16,9)" fg:x="1047" fg:w="2"/><text x="85.4412%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.1912%" y="645" width="0.1627%" height="15" fill="rgb(249,173,9)" fg:x="1047" fg:w="2"/><text x="85.4412%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2726%" y="629" width="0.0814%" height="15" fill="rgb(205,163,53)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2726%" y="613" width="0.0814%" height="15" fill="rgb(217,54,41)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2726%" y="597" width="0.0814%" height="15" fill="rgb(228,216,12)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2726%" y="581" width="0.0814%" height="15" fill="rgb(244,228,15)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.2726%" y="565" width="0.0814%" height="15" fill="rgb(221,176,53)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2726%" y="549" width="0.0814%" height="15" fill="rgb(205,94,34)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2726%" y="533" width="0.0814%" height="15" fill="rgb(213,110,48)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2726%" y="517" width="0.0814%" height="15" fill="rgb(236,142,28)" fg:x="1048" fg:w="1"/><text x="85.5226%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.3539%" y="677" width="0.0814%" height="15" fill="rgb(225,135,29)" fg:x="1049" fg:w="1"/><text x="85.6039%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="85.3539%" y="661" width="0.0814%" height="15" fill="rgb(252,45,31)" fg:x="1049" fg:w="1"/><text x="85.6039%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="85.3539%" y="645" width="0.0814%" height="15" fill="rgb(211,187,50)" fg:x="1049" fg:w="1"/><text x="85.6039%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (212 samples, 17.25%)</title><rect x="68.2669%" y="725" width="17.2498%" height="15" fill="rgb(229,109,7)" fg:x="839" fg:w="212"/><text x="68.5169%" y="735.50">&lt;tests::HoldingKeyInVessel ..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (9 samples, 0.73%)</title><rect x="84.7844%" y="709" width="0.7323%" height="15" fill="rgb(251,131,51)" fg:x="1042" fg:w="9"/><text x="85.0344%" y="719.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="85.3539%" y="693" width="0.1627%" height="15" fill="rgb(251,180,35)" fg:x="1049" fg:w="2"/><text x="85.6039%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="85.4353%" y="677" width="0.0814%" height="15" fill="rgb(211,46,32)" fg:x="1050" fg:w="1"/><text x="85.6853%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.5167%" y="709" width="0.0814%" height="15" fill="rgb(248,123,17)" fg:x="1051" fg:w="1"/><text x="85.7667%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5167%" y="693" width="0.0814%" height="15" fill="rgb(227,141,18)" fg:x="1051" fg:w="1"/><text x="85.7667%" y="703.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="85.5980%" y="709" width="0.0814%" height="15" fill="rgb(216,102,9)" fg:x="1052" fg:w="1"/><text x="85.8480%" y="719.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="85.5980%" y="693" width="0.0814%" height="15" fill="rgb(253,47,13)" fg:x="1052" fg:w="1"/><text x="85.8480%" y="703.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="85.5980%" y="677" width="0.0814%" height="15" fill="rgb(226,93,23)" fg:x="1052" fg:w="1"/><text x="85.8480%" y="687.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="85.5980%" y="661" width="0.0814%" height="15" fill="rgb(247,104,17)" fg:x="1052" fg:w="1"/><text x="85.8480%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.6794%" y="629" width="0.0814%" height="15" fill="rgb(233,203,26)" fg:x="1053" fg:w="1"/><text x="85.9294%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.7608%" y="613" width="0.0814%" height="15" fill="rgb(244,98,49)" fg:x="1054" fg:w="1"/><text x="86.0108%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7608%" y="597" width="0.0814%" height="15" fill="rgb(235,134,22)" fg:x="1054" fg:w="1"/><text x="86.0108%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="85.8421%" y="597" width="0.3255%" height="15" fill="rgb(221,70,32)" fg:x="1055" fg:w="4"/><text x="86.0921%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="85.8421%" y="581" width="0.3255%" height="15" fill="rgb(238,15,50)" fg:x="1055" fg:w="4"/><text x="86.0921%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="85.9235%" y="565" width="0.2441%" height="15" fill="rgb(215,221,48)" fg:x="1056" fg:w="3"/><text x="86.1735%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="86.0049%" y="549" width="0.1627%" height="15" fill="rgb(236,73,3)" fg:x="1057" fg:w="2"/><text x="86.2549%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.1676%" y="581" width="0.0814%" height="15" fill="rgb(250,107,11)" fg:x="1059" fg:w="1"/><text x="86.4176%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="85.8421%" y="613" width="0.7323%" height="15" fill="rgb(242,39,14)" fg:x="1055" fg:w="9"/><text x="86.0921%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="86.1676%" y="597" width="0.4068%" height="15" fill="rgb(248,164,37)" fg:x="1059" fg:w="5"/><text x="86.4176%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="86.2490%" y="581" width="0.3255%" height="15" fill="rgb(217,60,12)" fg:x="1060" fg:w="4"/><text x="86.4990%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="86.2490%" y="565" width="0.3255%" height="15" fill="rgb(240,125,29)" fg:x="1060" fg:w="4"/><text x="86.4990%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="86.2490%" y="549" width="0.3255%" height="15" fill="rgb(208,207,28)" fg:x="1060" fg:w="4"/><text x="86.4990%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="86.2490%" y="533" width="0.3255%" height="15" fill="rgb(209,159,27)" fg:x="1060" fg:w="4"/><text x="86.4990%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="86.2490%" y="517" width="0.3255%" height="15" fill="rgb(251,176,53)" fg:x="1060" fg:w="4"/><text x="86.4990%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="86.3303%" y="501" width="0.2441%" height="15" fill="rgb(211,85,7)" fg:x="1061" fg:w="3"/><text x="86.5803%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="86.3303%" y="485" width="0.2441%" height="15" fill="rgb(216,64,54)" fg:x="1061" fg:w="3"/><text x="86.5803%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="86.3303%" y="469" width="0.2441%" height="15" fill="rgb(217,54,24)" fg:x="1061" fg:w="3"/><text x="86.5803%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="86.3303%" y="453" width="0.2441%" height="15" fill="rgb(208,206,53)" fg:x="1061" fg:w="3"/><text x="86.5803%" y="463.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="86.3303%" y="437" width="0.2441%" height="15" fill="rgb(251,74,39)" fg:x="1061" fg:w="3"/><text x="86.5803%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.14%)</title><rect x="85.6794%" y="645" width="1.1391%" height="15" fill="rgb(226,47,5)" fg:x="1053" fg:w="14"/><text x="85.9294%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.06%)</title><rect x="85.7608%" y="629" width="1.0578%" height="15" fill="rgb(234,111,33)" fg:x="1054" fg:w="13"/><text x="86.0108%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="86.5745%" y="613" width="0.2441%" height="15" fill="rgb(251,14,10)" fg:x="1064" fg:w="3"/><text x="86.8245%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="86.6558%" y="597" width="0.1627%" height="15" fill="rgb(232,43,0)" fg:x="1065" fg:w="2"/><text x="86.9058%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7372%" y="581" width="0.0814%" height="15" fill="rgb(222,68,43)" fg:x="1066" fg:w="1"/><text x="86.9872%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.7372%" y="565" width="0.0814%" height="15" fill="rgb(217,24,23)" fg:x="1066" fg:w="1"/><text x="86.9872%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8186%" y="581" width="0.0814%" height="15" fill="rgb(229,209,14)" fg:x="1067" fg:w="1"/><text x="87.0686%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8999%" y="565" width="0.0814%" height="15" fill="rgb(250,149,48)" fg:x="1068" fg:w="1"/><text x="87.1499%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9813%" y="549" width="0.0814%" height="15" fill="rgb(210,120,37)" fg:x="1069" fg:w="1"/><text x="87.2313%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="86.8186%" y="645" width="0.3255%" height="15" fill="rgb(210,21,8)" fg:x="1067" fg:w="4"/><text x="87.0686%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.33%)</title><rect x="86.8186%" y="629" width="0.3255%" height="15" fill="rgb(243,145,7)" fg:x="1067" fg:w="4"/><text x="87.0686%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="86.8186%" y="613" width="0.3255%" height="15" fill="rgb(238,178,32)" fg:x="1067" fg:w="4"/><text x="87.0686%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="86.8186%" y="597" width="0.3255%" height="15" fill="rgb(222,4,10)" fg:x="1067" fg:w="4"/><text x="87.0686%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.8999%" y="581" width="0.2441%" height="15" fill="rgb(239,7,37)" fg:x="1068" fg:w="3"/><text x="87.1499%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.9813%" y="565" width="0.1627%" height="15" fill="rgb(215,31,37)" fg:x="1069" fg:w="2"/><text x="87.2313%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.0627%" y="549" width="0.0814%" height="15" fill="rgb(224,83,33)" fg:x="1070" fg:w="1"/><text x="87.3127%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0627%" y="533" width="0.0814%" height="15" fill="rgb(239,55,3)" fg:x="1070" fg:w="1"/><text x="87.3127%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2254%" y="581" width="0.0814%" height="15" fill="rgb(247,92,11)" fg:x="1072" fg:w="1"/><text x="87.4754%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.3068%" y="565" width="0.0814%" height="15" fill="rgb(239,200,7)" fg:x="1073" fg:w="1"/><text x="87.5568%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3068%" y="549" width="0.0814%" height="15" fill="rgb(227,115,8)" fg:x="1073" fg:w="1"/><text x="87.5568%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4695%" y="549" width="0.0814%" height="15" fill="rgb(215,189,27)" fg:x="1075" fg:w="1"/><text x="87.7195%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4695%" y="533" width="0.0814%" height="15" fill="rgb(251,216,39)" fg:x="1075" fg:w="1"/><text x="87.7195%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.5509%" y="533" width="0.0814%" height="15" fill="rgb(207,29,47)" fg:x="1076" fg:w="1"/><text x="87.8009%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.5509%" y="517" width="0.0814%" height="15" fill="rgb(210,71,34)" fg:x="1076" fg:w="1"/><text x="87.8009%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5509%" y="501" width="0.0814%" height="15" fill="rgb(253,217,51)" fg:x="1076" fg:w="1"/><text x="87.8009%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5509%" y="485" width="0.0814%" height="15" fill="rgb(222,117,46)" fg:x="1076" fg:w="1"/><text x="87.8009%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="87.6322%" y="517" width="0.1627%" height="15" fill="rgb(226,132,6)" fg:x="1077" fg:w="2"/><text x="87.8822%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7950%" y="501" width="0.0814%" height="15" fill="rgb(254,145,51)" fg:x="1079" fg:w="1"/><text x="88.0450%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="87.2254%" y="613" width="0.7323%" height="15" fill="rgb(231,199,27)" fg:x="1072" fg:w="9"/><text x="87.4754%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="87.2254%" y="597" width="0.7323%" height="15" fill="rgb(245,158,14)" fg:x="1072" fg:w="9"/><text x="87.4754%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="87.3068%" y="581" width="0.6509%" height="15" fill="rgb(240,113,14)" fg:x="1073" fg:w="8"/><text x="87.5568%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="87.3881%" y="565" width="0.5696%" height="15" fill="rgb(210,20,13)" fg:x="1074" fg:w="7"/><text x="87.6381%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="87.5509%" y="549" width="0.4068%" height="15" fill="rgb(241,144,13)" fg:x="1076" fg:w="5"/><text x="87.8009%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="87.6322%" y="533" width="0.3255%" height="15" fill="rgb(235,43,34)" fg:x="1077" fg:w="4"/><text x="87.8822%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.7950%" y="517" width="0.1627%" height="15" fill="rgb(208,36,20)" fg:x="1079" fg:w="2"/><text x="88.0450%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.8763%" y="501" width="0.0814%" height="15" fill="rgb(239,204,10)" fg:x="1080" fg:w="1"/><text x="88.1263%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.8763%" y="485" width="0.0814%" height="15" fill="rgb(217,84,43)" fg:x="1080" fg:w="1"/><text x="88.1263%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8763%" y="469" width="0.0814%" height="15" fill="rgb(241,170,50)" fg:x="1080" fg:w="1"/><text x="88.1263%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="87.9577%" y="597" width="0.3255%" height="15" fill="rgb(226,205,29)" fg:x="1081" fg:w="4"/><text x="88.2077%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="87.9577%" y="581" width="0.3255%" height="15" fill="rgb(233,113,1)" fg:x="1081" fg:w="4"/><text x="88.2077%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="88.0391%" y="565" width="0.2441%" height="15" fill="rgb(253,98,13)" fg:x="1082" fg:w="3"/><text x="88.2891%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.2018%" y="549" width="0.0814%" height="15" fill="rgb(211,115,12)" fg:x="1084" fg:w="1"/><text x="88.4518%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.2018%" y="533" width="0.0814%" height="15" fill="rgb(208,12,16)" fg:x="1084" fg:w="1"/><text x="88.4518%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.2018%" y="517" width="0.0814%" height="15" fill="rgb(237,193,54)" fg:x="1084" fg:w="1"/><text x="88.4518%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.22%)</title><rect x="87.2254%" y="629" width="1.2205%" height="15" fill="rgb(243,22,42)" fg:x="1072" fg:w="15"/><text x="87.4754%" y="639.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.49%)</title><rect x="87.9577%" y="613" width="0.4882%" height="15" fill="rgb(233,151,36)" fg:x="1081" fg:w="6"/><text x="88.2077%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="88.2832%" y="597" width="0.1627%" height="15" fill="rgb(237,57,45)" fg:x="1085" fg:w="2"/><text x="88.5332%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="88.2832%" y="581" width="0.1627%" height="15" fill="rgb(221,88,17)" fg:x="1085" fg:w="2"/><text x="88.5332%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.3645%" y="565" width="0.0814%" height="15" fill="rgb(230,79,15)" fg:x="1086" fg:w="1"/><text x="88.6145%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.4459%" y="629" width="0.0814%" height="15" fill="rgb(213,57,13)" fg:x="1087" fg:w="1"/><text x="88.6959%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4459%" y="613" width="0.0814%" height="15" fill="rgb(222,116,39)" fg:x="1087" fg:w="1"/><text x="88.6959%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="88.6900%" y="597" width="0.0814%" height="15" fill="rgb(245,107,2)" fg:x="1090" fg:w="1"/><text x="88.9400%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.6900%" y="581" width="0.0814%" height="15" fill="rgb(238,1,10)" fg:x="1090" fg:w="1"/><text x="88.9400%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6900%" y="565" width="0.0814%" height="15" fill="rgb(249,4,48)" fg:x="1090" fg:w="1"/><text x="88.9400%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7714%" y="565" width="0.0814%" height="15" fill="rgb(223,151,18)" fg:x="1091" fg:w="1"/><text x="89.0214%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="88.7714%" y="597" width="0.1627%" height="15" fill="rgb(227,65,43)" fg:x="1091" fg:w="2"/><text x="89.0214%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.7714%" y="581" width="0.1627%" height="15" fill="rgb(218,40,45)" fg:x="1091" fg:w="2"/><text x="89.0214%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8527%" y="565" width="0.0814%" height="15" fill="rgb(252,121,31)" fg:x="1092" fg:w="1"/><text x="89.1027%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9341%" y="565" width="0.0814%" height="15" fill="rgb(219,158,43)" fg:x="1093" fg:w="1"/><text x="89.1841%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="88.9341%" y="597" width="0.1627%" height="15" fill="rgb(231,162,42)" fg:x="1093" fg:w="2"/><text x="89.1841%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.9341%" y="581" width="0.1627%" height="15" fill="rgb(217,179,25)" fg:x="1093" fg:w="2"/><text x="89.1841%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0155%" y="565" width="0.0814%" height="15" fill="rgb(206,212,31)" fg:x="1094" fg:w="1"/><text x="89.2655%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="89.3409%" y="549" width="0.1627%" height="15" fill="rgb(235,144,12)" fg:x="1098" fg:w="2"/><text x="89.5909%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.3409%" y="533" width="0.1627%" height="15" fill="rgb(213,51,10)" fg:x="1098" fg:w="2"/><text x="89.5909%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="89.4223%" y="517" width="0.0814%" height="15" fill="rgb(231,145,14)" fg:x="1099" fg:w="1"/><text x="89.6723%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.5037%" y="517" width="0.1627%" height="15" fill="rgb(235,15,28)" fg:x="1100" fg:w="2"/><text x="89.7537%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.5037%" y="501" width="0.1627%" height="15" fill="rgb(237,206,10)" fg:x="1100" fg:w="2"/><text x="89.7537%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5850%" y="485" width="0.0814%" height="15" fill="rgb(236,227,27)" fg:x="1101" fg:w="1"/><text x="89.8350%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7478%" y="485" width="0.0814%" height="15" fill="rgb(246,83,35)" fg:x="1103" fg:w="1"/><text x="89.9978%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8291%" y="453" width="0.0814%" height="15" fill="rgb(220,136,24)" fg:x="1104" fg:w="1"/><text x="90.0791%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8291%" y="437" width="0.0814%" height="15" fill="rgb(217,3,25)" fg:x="1104" fg:w="1"/><text x="90.0791%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="89.9919%" y="421" width="0.2441%" height="15" fill="rgb(239,24,14)" fg:x="1106" fg:w="3"/><text x="90.2419%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="89.9919%" y="405" width="0.2441%" height="15" fill="rgb(244,16,53)" fg:x="1106" fg:w="3"/><text x="90.2419%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="89.9919%" y="389" width="0.2441%" height="15" fill="rgb(208,175,44)" fg:x="1106" fg:w="3"/><text x="90.2419%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="89.6664%" y="501" width="0.6509%" height="15" fill="rgb(252,18,48)" fg:x="1102" fg:w="8"/><text x="89.9164%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="89.8291%" y="485" width="0.4882%" height="15" fill="rgb(234,199,32)" fg:x="1104" fg:w="6"/><text x="90.0791%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="89.8291%" y="469" width="0.4882%" height="15" fill="rgb(225,77,54)" fg:x="1104" fg:w="6"/><text x="90.0791%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="89.9105%" y="453" width="0.4068%" height="15" fill="rgb(225,42,25)" fg:x="1105" fg:w="5"/><text x="90.1605%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="89.9105%" y="437" width="0.4068%" height="15" fill="rgb(242,227,46)" fg:x="1105" fg:w="5"/><text x="90.1605%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.2360%" y="421" width="0.0814%" height="15" fill="rgb(246,197,35)" fg:x="1109" fg:w="1"/><text x="90.4860%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="90.2360%" y="405" width="0.0814%" height="15" fill="rgb(215,159,26)" fg:x="1109" fg:w="1"/><text x="90.4860%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.14%)</title><rect x="89.2596%" y="581" width="1.1391%" height="15" fill="rgb(212,194,50)" fg:x="1097" fg:w="14"/><text x="89.5096%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.14%)</title><rect x="89.2596%" y="565" width="1.1391%" height="15" fill="rgb(246,132,1)" fg:x="1097" fg:w="14"/><text x="89.5096%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="89.5037%" y="549" width="0.8950%" height="15" fill="rgb(217,71,7)" fg:x="1100" fg:w="11"/><text x="89.7537%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.90%)</title><rect x="89.5037%" y="533" width="0.8950%" height="15" fill="rgb(252,59,32)" fg:x="1100" fg:w="11"/><text x="89.7537%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="89.6664%" y="517" width="0.7323%" height="15" fill="rgb(253,204,25)" fg:x="1102" fg:w="9"/><text x="89.9164%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3173%" y="501" width="0.0814%" height="15" fill="rgb(232,21,16)" fg:x="1110" fg:w="1"/><text x="90.5673%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.03%)</title><rect x="88.5273%" y="629" width="2.0342%" height="15" fill="rgb(248,90,29)" fg:x="1088" fg:w="25"/><text x="88.7773%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.03%)</title><rect x="88.5273%" y="613" width="2.0342%" height="15" fill="rgb(249,223,7)" fg:x="1088" fg:w="25"/><text x="88.7773%" y="623.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.46%)</title><rect x="89.0968%" y="597" width="1.4646%" height="15" fill="rgb(231,119,42)" fg:x="1095" fg:w="18"/><text x="89.3468%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.3987%" y="581" width="0.1627%" height="15" fill="rgb(215,41,35)" fg:x="1111" fg:w="2"/><text x="90.6487%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.3987%" y="565" width="0.1627%" height="15" fill="rgb(220,44,45)" fg:x="1111" fg:w="2"/><text x="90.6487%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.8055%" y="485" width="0.1627%" height="15" fill="rgb(253,197,36)" fg:x="1116" fg:w="2"/><text x="91.0555%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.8055%" y="469" width="0.1627%" height="15" fill="rgb(245,225,54)" fg:x="1116" fg:w="2"/><text x="91.0555%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8869%" y="453" width="0.0814%" height="15" fill="rgb(239,94,37)" fg:x="1117" fg:w="1"/><text x="91.1369%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.0496%" y="389" width="0.0814%" height="15" fill="rgb(242,217,10)" fg:x="1119" fg:w="1"/><text x="91.2996%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.1310%" y="389" width="0.1627%" height="15" fill="rgb(250,193,7)" fg:x="1120" fg:w="2"/><text x="91.3810%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.1310%" y="373" width="0.1627%" height="15" fill="rgb(230,104,19)" fg:x="1120" fg:w="2"/><text x="91.3810%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2124%" y="357" width="0.0814%" height="15" fill="rgb(230,181,4)" fg:x="1121" fg:w="1"/><text x="91.4624%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2124%" y="341" width="0.0814%" height="15" fill="rgb(216,219,49)" fg:x="1121" fg:w="1"/><text x="91.4624%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="91.0496%" y="437" width="0.3255%" height="15" fill="rgb(254,144,0)" fg:x="1119" fg:w="4"/><text x="91.2996%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="91.0496%" y="421" width="0.3255%" height="15" fill="rgb(205,209,38)" fg:x="1119" fg:w="4"/><text x="91.2996%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="91.0496%" y="405" width="0.3255%" height="15" fill="rgb(240,21,42)" fg:x="1119" fg:w="4"/><text x="91.2996%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2937%" y="389" width="0.0814%" height="15" fill="rgb(241,132,3)" fg:x="1122" fg:w="1"/><text x="91.5437%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="91.0496%" y="469" width="0.4068%" height="15" fill="rgb(225,14,2)" fg:x="1119" fg:w="5"/><text x="91.2996%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="91.0496%" y="453" width="0.4068%" height="15" fill="rgb(210,141,35)" fg:x="1119" fg:w="5"/><text x="91.2996%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.3751%" y="437" width="0.0814%" height="15" fill="rgb(251,14,44)" fg:x="1123" fg:w="1"/><text x="91.6251%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.4565%" y="469" width="0.0814%" height="15" fill="rgb(247,48,18)" fg:x="1124" fg:w="1"/><text x="91.7065%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.4565%" y="453" width="0.0814%" height="15" fill="rgb(225,0,40)" fg:x="1124" fg:w="1"/><text x="91.7065%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.06%)</title><rect x="90.5614%" y="533" width="1.0578%" height="15" fill="rgb(221,31,33)" fg:x="1113" fg:w="13"/><text x="90.8114%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.98%)</title><rect x="90.6428%" y="517" width="0.9764%" height="15" fill="rgb(237,42,40)" fg:x="1114" fg:w="12"/><text x="90.8928%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.90%)</title><rect x="90.7242%" y="501" width="0.8950%" height="15" fill="rgb(233,51,29)" fg:x="1115" fg:w="11"/><text x="90.9742%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="90.9683%" y="485" width="0.6509%" height="15" fill="rgb(226,58,20)" fg:x="1118" fg:w="8"/><text x="91.2183%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5378%" y="469" width="0.0814%" height="15" fill="rgb(208,98,7)" fg:x="1125" fg:w="1"/><text x="91.7878%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5378%" y="453" width="0.0814%" height="15" fill="rgb(228,143,44)" fg:x="1125" fg:w="1"/><text x="91.7878%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5378%" y="437" width="0.0814%" height="15" fill="rgb(246,55,38)" fg:x="1125" fg:w="1"/><text x="91.7878%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.14%)</title><rect x="90.5614%" y="565" width="1.1391%" height="15" fill="rgb(247,87,16)" fg:x="1113" fg:w="14"/><text x="90.8114%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.14%)</title><rect x="90.5614%" y="549" width="1.1391%" height="15" fill="rgb(234,129,42)" fg:x="1113" fg:w="14"/><text x="90.8114%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.6192%" y="533" width="0.0814%" height="15" fill="rgb(220,82,16)" fg:x="1126" fg:w="1"/><text x="91.8692%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.6192%" y="517" width="0.0814%" height="15" fill="rgb(211,88,4)" fg:x="1126" fg:w="1"/><text x="91.8692%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.7006%" y="565" width="0.0814%" height="15" fill="rgb(248,151,21)" fg:x="1127" fg:w="1"/><text x="91.9506%" y="575.50"></text></g><g><title>engine::session::Session::close (78 samples, 6.35%)</title><rect x="85.5167%" y="725" width="6.3466%" height="15" fill="rgb(238,163,6)" fg:x="1051" fg:w="78"/><text x="85.7667%" y="735.50">engine::..</text></g><g><title>engine::session::state::State::close (76 samples, 6.18%)</title><rect x="85.6794%" y="709" width="6.1839%" height="15" fill="rgb(209,183,11)" fg:x="1053" fg:w="76"/><text x="85.9294%" y="719.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (76 samples, 6.18%)</title><rect x="85.6794%" y="693" width="6.1839%" height="15" fill="rgb(219,37,20)" fg:x="1053" fg:w="76"/><text x="85.9294%" y="703.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (76 samples, 6.18%)</title><rect x="85.6794%" y="677" width="6.1839%" height="15" fill="rgb(210,158,4)" fg:x="1053" fg:w="76"/><text x="85.9294%" y="687.50">engine::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (76 samples, 6.18%)</title><rect x="85.6794%" y="661" width="6.1839%" height="15" fill="rgb(221,167,53)" fg:x="1053" fg:w="76"/><text x="85.9294%" y="671.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (58 samples, 4.72%)</title><rect x="87.1440%" y="645" width="4.7193%" height="15" fill="rgb(237,151,45)" fg:x="1071" fg:w="58"/><text x="87.3940%" y="655.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.30%)</title><rect x="90.5614%" y="629" width="1.3019%" height="15" fill="rgb(231,39,3)" fg:x="1113" fg:w="16"/><text x="90.8114%" y="639.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.30%)</title><rect x="90.5614%" y="613" width="1.3019%" height="15" fill="rgb(212,167,28)" fg:x="1113" fg:w="16"/><text x="90.8114%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.30%)</title><rect x="90.5614%" y="597" width="1.3019%" height="15" fill="rgb(232,178,8)" fg:x="1113" fg:w="16"/><text x="90.8114%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.30%)</title><rect x="90.5614%" y="581" width="1.3019%" height="15" fill="rgb(225,151,20)" fg:x="1113" fg:w="16"/><text x="90.8114%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7819%" y="565" width="0.0814%" height="15" fill="rgb(238,3,37)" fg:x="1128" fg:w="1"/><text x="92.0319%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7819%" y="549" width="0.0814%" height="15" fill="rgb(251,147,42)" fg:x="1128" fg:w="1"/><text x="92.0319%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.7819%" y="533" width="0.0814%" height="15" fill="rgb(208,173,10)" fg:x="1128" fg:w="1"/><text x="92.0319%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="91.8633%" y="613" width="0.0814%" height="15" fill="rgb(246,225,4)" fg:x="1129" fg:w="1"/><text x="92.1133%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="91.8633%" y="597" width="0.0814%" height="15" fill="rgb(248,102,6)" fg:x="1129" fg:w="1"/><text x="92.1133%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="91.8633%" y="581" width="0.0814%" height="15" fill="rgb(232,6,21)" fg:x="1129" fg:w="1"/><text x="92.1133%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.8633%" y="565" width="0.0814%" height="15" fill="rgb(221,179,22)" fg:x="1129" fg:w="1"/><text x="92.1133%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8633%" y="549" width="0.0814%" height="15" fill="rgb(252,50,20)" fg:x="1129" fg:w="1"/><text x="92.1133%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.9447%" y="533" width="0.0814%" height="15" fill="rgb(222,56,38)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="91.9447%" y="517" width="0.0814%" height="15" fill="rgb(206,193,29)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.9447%" y="501" width="0.0814%" height="15" fill="rgb(239,192,45)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.9447%" y="485" width="0.0814%" height="15" fill="rgb(254,18,36)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.9447%" y="469" width="0.0814%" height="15" fill="rgb(221,127,11)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9447%" y="453" width="0.0814%" height="15" fill="rgb(234,146,35)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9447%" y="437" width="0.0814%" height="15" fill="rgb(254,201,37)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9447%" y="421" width="0.0814%" height="15" fill="rgb(211,202,23)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9447%" y="405" width="0.0814%" height="15" fill="rgb(237,91,2)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9447%" y="389" width="0.0814%" height="15" fill="rgb(226,228,36)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9447%" y="373" width="0.0814%" height="15" fill="rgb(213,63,50)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.9447%" y="357" width="0.0814%" height="15" fill="rgb(235,194,19)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.9447%" y="341" width="0.0814%" height="15" fill="rgb(207,204,18)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.9447%" y="325" width="0.0814%" height="15" fill="rgb(248,8,7)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9447%" y="309" width="0.0814%" height="15" fill="rgb(223,145,47)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9447%" y="293" width="0.0814%" height="15" fill="rgb(228,84,11)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.9447%" y="277" width="0.0814%" height="15" fill="rgb(218,76,45)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="91.9447%" y="261" width="0.0814%" height="15" fill="rgb(223,80,15)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="91.9447%" y="245" width="0.0814%" height="15" fill="rgb(219,218,33)" fg:x="1130" fg:w="1"/><text x="92.1947%" y="255.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="92.0260%" y="517" width="0.2441%" height="15" fill="rgb(208,51,11)" fg:x="1131" fg:w="3"/><text x="92.2760%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.0260%" y="501" width="0.2441%" height="15" fill="rgb(229,165,39)" fg:x="1131" fg:w="3"/><text x="92.2760%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.0260%" y="485" width="0.2441%" height="15" fill="rgb(241,100,24)" fg:x="1131" fg:w="3"/><text x="92.2760%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.1074%" y="469" width="0.1627%" height="15" fill="rgb(228,14,23)" fg:x="1132" fg:w="2"/><text x="92.3574%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.1074%" y="453" width="0.1627%" height="15" fill="rgb(247,116,52)" fg:x="1132" fg:w="2"/><text x="92.3574%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.1888%" y="437" width="0.0814%" height="15" fill="rgb(216,149,33)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1888%" y="421" width="0.0814%" height="15" fill="rgb(238,142,29)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.1888%" y="405" width="0.0814%" height="15" fill="rgb(224,83,40)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1888%" y="389" width="0.0814%" height="15" fill="rgb(234,165,11)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.1888%" y="373" width="0.0814%" height="15" fill="rgb(215,96,23)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1888%" y="357" width="0.0814%" height="15" fill="rgb(233,179,26)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1888%" y="341" width="0.0814%" height="15" fill="rgb(225,129,33)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.1888%" y="325" width="0.0814%" height="15" fill="rgb(237,49,13)" fg:x="1133" fg:w="1"/><text x="92.4388%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.2701%" y="405" width="0.0814%" height="15" fill="rgb(211,3,31)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.2701%" y="389" width="0.0814%" height="15" fill="rgb(216,152,19)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.2701%" y="373" width="0.0814%" height="15" fill="rgb(251,121,35)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.2701%" y="357" width="0.0814%" height="15" fill="rgb(210,217,47)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.2701%" y="341" width="0.0814%" height="15" fill="rgb(244,116,22)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.2701%" y="325" width="0.0814%" height="15" fill="rgb(228,17,21)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.2701%" y="309" width="0.0814%" height="15" fill="rgb(240,149,34)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="92.2701%" y="293" width="0.0814%" height="15" fill="rgb(208,125,47)" fg:x="1134" fg:w="1"/><text x="92.5201%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="92.2701%" y="437" width="0.1627%" height="15" fill="rgb(249,186,39)" fg:x="1134" fg:w="2"/><text x="92.5201%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.2701%" y="421" width="0.1627%" height="15" fill="rgb(240,220,33)" fg:x="1134" fg:w="2"/><text x="92.5201%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.3515%" y="405" width="0.0814%" height="15" fill="rgb(243,110,23)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.3515%" y="389" width="0.0814%" height="15" fill="rgb(219,163,46)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.3515%" y="373" width="0.0814%" height="15" fill="rgb(216,126,30)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3515%" y="357" width="0.0814%" height="15" fill="rgb(208,139,11)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.3515%" y="341" width="0.0814%" height="15" fill="rgb(213,118,36)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="92.3515%" y="325" width="0.0814%" height="15" fill="rgb(226,43,17)" fg:x="1135" fg:w="1"/><text x="92.6015%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="92.4329%" y="437" width="0.0814%" height="15" fill="rgb(254,217,4)" fg:x="1136" fg:w="1"/><text x="92.6829%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.4329%" y="421" width="0.0814%" height="15" fill="rgb(210,134,47)" fg:x="1136" fg:w="1"/><text x="92.6829%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4329%" y="405" width="0.0814%" height="15" fill="rgb(237,24,49)" fg:x="1136" fg:w="1"/><text x="92.6829%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.57%)</title><rect x="92.0260%" y="533" width="0.5696%" height="15" fill="rgb(251,39,46)" fg:x="1131" fg:w="7"/><text x="92.2760%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.33%)</title><rect x="92.2701%" y="517" width="0.3255%" height="15" fill="rgb(251,220,3)" fg:x="1134" fg:w="4"/><text x="92.5201%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="92.2701%" y="501" width="0.3255%" height="15" fill="rgb(228,105,12)" fg:x="1134" fg:w="4"/><text x="92.5201%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="92.2701%" y="485" width="0.3255%" height="15" fill="rgb(215,196,1)" fg:x="1134" fg:w="4"/><text x="92.5201%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="92.2701%" y="469" width="0.3255%" height="15" fill="rgb(214,33,39)" fg:x="1134" fg:w="4"/><text x="92.5201%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.33%)</title><rect x="92.2701%" y="453" width="0.3255%" height="15" fill="rgb(220,19,52)" fg:x="1134" fg:w="4"/><text x="92.5201%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5142%" y="437" width="0.0814%" height="15" fill="rgb(221,78,38)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.5142%" y="421" width="0.0814%" height="15" fill="rgb(253,30,16)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.5142%" y="405" width="0.0814%" height="15" fill="rgb(242,65,0)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5142%" y="389" width="0.0814%" height="15" fill="rgb(235,201,12)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.5142%" y="373" width="0.0814%" height="15" fill="rgb(233,161,9)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5142%" y="357" width="0.0814%" height="15" fill="rgb(241,207,41)" fg:x="1137" fg:w="1"/><text x="92.7642%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.5956%" y="533" width="0.0814%" height="15" fill="rgb(212,69,46)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.5956%" y="517" width="0.0814%" height="15" fill="rgb(239,69,45)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.5956%" y="501" width="0.0814%" height="15" fill="rgb(242,117,48)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5956%" y="485" width="0.0814%" height="15" fill="rgb(228,41,36)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5956%" y="469" width="0.0814%" height="15" fill="rgb(212,3,32)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5956%" y="453" width="0.0814%" height="15" fill="rgb(233,41,49)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5956%" y="437" width="0.0814%" height="15" fill="rgb(252,170,49)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.5956%" y="421" width="0.0814%" height="15" fill="rgb(229,53,26)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5956%" y="405" width="0.0814%" height="15" fill="rgb(217,157,12)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5956%" y="389" width="0.0814%" height="15" fill="rgb(227,17,9)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5956%" y="373" width="0.0814%" height="15" fill="rgb(218,84,12)" fg:x="1138" fg:w="1"/><text x="92.8456%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.81%)</title><rect x="91.9447%" y="581" width="0.8137%" height="15" fill="rgb(212,79,24)" fg:x="1130" fg:w="10"/><text x="92.1947%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.81%)</title><rect x="91.9447%" y="565" width="0.8137%" height="15" fill="rgb(217,222,37)" fg:x="1130" fg:w="10"/><text x="92.1947%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="91.9447%" y="549" width="0.8137%" height="15" fill="rgb(246,208,8)" fg:x="1130" fg:w="10"/><text x="92.1947%" y="559.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="92.6770%" y="533" width="0.0814%" height="15" fill="rgb(244,133,10)" fg:x="1139" fg:w="1"/><text x="92.9270%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8397%" y="453" width="0.0814%" height="15" fill="rgb(209,219,41)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8397%" y="437" width="0.0814%" height="15" fill="rgb(253,175,45)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8397%" y="421" width="0.0814%" height="15" fill="rgb(235,100,37)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8397%" y="405" width="0.0814%" height="15" fill="rgb(225,87,19)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8397%" y="389" width="0.0814%" height="15" fill="rgb(217,152,17)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8397%" y="373" width="0.0814%" height="15" fill="rgb(235,72,13)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8397%" y="357" width="0.0814%" height="15" fill="rgb(233,140,18)" fg:x="1141" fg:w="1"/><text x="93.0897%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.7583%" y="549" width="0.2441%" height="15" fill="rgb(207,212,28)" fg:x="1140" fg:w="3"/><text x="93.0083%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.8397%" y="533" width="0.1627%" height="15" fill="rgb(220,130,25)" fg:x="1141" fg:w="2"/><text x="93.0897%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.8397%" y="517" width="0.1627%" height="15" fill="rgb(205,55,34)" fg:x="1141" fg:w="2"/><text x="93.0897%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.8397%" y="501" width="0.1627%" height="15" fill="rgb(237,54,35)" fg:x="1141" fg:w="2"/><text x="93.0897%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.8397%" y="485" width="0.1627%" height="15" fill="rgb(208,67,23)" fg:x="1141" fg:w="2"/><text x="93.0897%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.8397%" y="469" width="0.1627%" height="15" fill="rgb(206,207,50)" fg:x="1141" fg:w="2"/><text x="93.0897%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.9211%" y="453" width="0.0814%" height="15" fill="rgb(213,211,42)" fg:x="1142" fg:w="1"/><text x="93.1711%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.9211%" y="437" width="0.0814%" height="15" fill="rgb(252,197,50)" fg:x="1142" fg:w="1"/><text x="93.1711%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (15 samples, 1.22%)</title><rect x="91.8633%" y="629" width="1.2205%" height="15" fill="rgb(251,211,41)" fg:x="1129" fg:w="15"/><text x="92.1133%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.14%)</title><rect x="91.9447%" y="613" width="1.1391%" height="15" fill="rgb(229,211,5)" fg:x="1130" fg:w="14"/><text x="92.1947%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.14%)</title><rect x="91.9447%" y="597" width="1.1391%" height="15" fill="rgb(239,36,31)" fg:x="1130" fg:w="14"/><text x="92.1947%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.33%)</title><rect x="92.7583%" y="581" width="0.3255%" height="15" fill="rgb(248,67,31)" fg:x="1140" fg:w="4"/><text x="93.0083%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="92.7583%" y="565" width="0.3255%" height="15" fill="rgb(249,55,44)" fg:x="1140" fg:w="4"/><text x="93.0083%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0024%" y="549" width="0.0814%" height="15" fill="rgb(216,82,12)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0024%" y="533" width="0.0814%" height="15" fill="rgb(242,174,1)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0024%" y="517" width="0.0814%" height="15" fill="rgb(208,120,29)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0024%" y="501" width="0.0814%" height="15" fill="rgb(221,105,43)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0024%" y="485" width="0.0814%" height="15" fill="rgb(234,124,22)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0024%" y="469" width="0.0814%" height="15" fill="rgb(212,23,30)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0024%" y="453" width="0.0814%" height="15" fill="rgb(219,122,53)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.0024%" y="437" width="0.0814%" height="15" fill="rgb(248,84,24)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.0024%" y="421" width="0.0814%" height="15" fill="rgb(245,115,18)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.0024%" y="405" width="0.0814%" height="15" fill="rgb(227,176,51)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.0024%" y="389" width="0.0814%" height="15" fill="rgb(229,63,42)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0024%" y="373" width="0.0814%" height="15" fill="rgb(247,202,24)" fg:x="1143" fg:w="1"/><text x="93.2524%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (16 samples, 1.30%)</title><rect x="91.8633%" y="645" width="1.3019%" height="15" fill="rgb(244,173,20)" fg:x="1129" fg:w="16"/><text x="92.1133%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="93.0838%" y="629" width="0.0814%" height="15" fill="rgb(242,81,47)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="93.0838%" y="613" width="0.0814%" height="15" fill="rgb(231,185,54)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="93.0838%" y="597" width="0.0814%" height="15" fill="rgb(243,55,32)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.0838%" y="581" width="0.0814%" height="15" fill="rgb(208,167,19)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.0838%" y="565" width="0.0814%" height="15" fill="rgb(231,72,35)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.0838%" y="549" width="0.0814%" height="15" fill="rgb(250,173,51)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.0838%" y="533" width="0.0814%" height="15" fill="rgb(209,5,22)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.0838%" y="517" width="0.0814%" height="15" fill="rgb(250,174,19)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.0838%" y="501" width="0.0814%" height="15" fill="rgb(217,3,49)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.0838%" y="485" width="0.0814%" height="15" fill="rgb(218,225,5)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.0838%" y="469" width="0.0814%" height="15" fill="rgb(236,89,11)" fg:x="1144" fg:w="1"/><text x="93.3338%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1652%" y="581" width="0.0814%" height="15" fill="rgb(206,33,28)" fg:x="1145" fg:w="1"/><text x="93.4152%" y="591.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="93.3279%" y="501" width="0.2441%" height="15" fill="rgb(241,56,42)" fg:x="1147" fg:w="3"/><text x="93.5779%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="93.3279%" y="485" width="0.2441%" height="15" fill="rgb(222,44,11)" fg:x="1147" fg:w="3"/><text x="93.5779%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4906%" y="469" width="0.0814%" height="15" fill="rgb(234,111,20)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4906%" y="453" width="0.0814%" height="15" fill="rgb(237,77,6)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.4906%" y="437" width="0.0814%" height="15" fill="rgb(235,111,23)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.4906%" y="421" width="0.0814%" height="15" fill="rgb(251,135,29)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.4906%" y="405" width="0.0814%" height="15" fill="rgb(217,57,1)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4906%" y="389" width="0.0814%" height="15" fill="rgb(249,119,31)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4906%" y="373" width="0.0814%" height="15" fill="rgb(233,164,33)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.4906%" y="357" width="0.0814%" height="15" fill="rgb(250,217,43)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.4906%" y="341" width="0.0814%" height="15" fill="rgb(232,154,50)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.4906%" y="325" width="0.0814%" height="15" fill="rgb(227,190,8)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.4906%" y="309" width="0.0814%" height="15" fill="rgb(209,217,32)" fg:x="1149" fg:w="1"/><text x="93.7406%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.9788%" y="357" width="0.1627%" height="15" fill="rgb(243,203,50)" fg:x="1155" fg:w="2"/><text x="94.2288%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0602%" y="341" width="0.0814%" height="15" fill="rgb(232,152,27)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0602%" y="325" width="0.0814%" height="15" fill="rgb(240,34,29)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.0602%" y="309" width="0.0814%" height="15" fill="rgb(215,185,52)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.0602%" y="293" width="0.0814%" height="15" fill="rgb(240,89,49)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.0602%" y="277" width="0.0814%" height="15" fill="rgb(225,12,52)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0602%" y="261" width="0.0814%" height="15" fill="rgb(239,128,45)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0602%" y="245" width="0.0814%" height="15" fill="rgb(211,78,47)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0602%" y="229" width="0.0814%" height="15" fill="rgb(232,31,21)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0602%" y="213" width="0.0814%" height="15" fill="rgb(222,168,14)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0602%" y="197" width="0.0814%" height="15" fill="rgb(209,128,24)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0602%" y="181" width="0.0814%" height="15" fill="rgb(249,35,13)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0602%" y="165" width="0.0814%" height="15" fill="rgb(218,7,2)" fg:x="1156" fg:w="1"/><text x="94.3102%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="93.8975%" y="421" width="0.3255%" height="15" fill="rgb(238,107,27)" fg:x="1154" fg:w="4"/><text x="94.1475%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="93.8975%" y="405" width="0.3255%" height="15" fill="rgb(217,88,38)" fg:x="1154" fg:w="4"/><text x="94.1475%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.9788%" y="389" width="0.2441%" height="15" fill="rgb(230,207,0)" fg:x="1155" fg:w="3"/><text x="94.2288%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.9788%" y="373" width="0.2441%" height="15" fill="rgb(249,64,54)" fg:x="1155" fg:w="3"/><text x="94.2288%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1416%" y="357" width="0.0814%" height="15" fill="rgb(231,7,11)" fg:x="1157" fg:w="1"/><text x="94.3916%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1416%" y="341" width="0.0814%" height="15" fill="rgb(205,149,21)" fg:x="1157" fg:w="1"/><text x="94.3916%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1416%" y="325" width="0.0814%" height="15" fill="rgb(215,126,34)" fg:x="1157" fg:w="1"/><text x="94.3916%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1416%" y="309" width="0.0814%" height="15" fill="rgb(241,132,45)" fg:x="1157" fg:w="1"/><text x="94.3916%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1416%" y="293" width="0.0814%" height="15" fill="rgb(252,69,32)" fg:x="1157" fg:w="1"/><text x="94.3916%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.2229%" y="421" width="0.0814%" height="15" fill="rgb(232,204,19)" fg:x="1158" fg:w="1"/><text x="94.4729%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.2229%" y="405" width="0.0814%" height="15" fill="rgb(249,15,47)" fg:x="1158" fg:w="1"/><text x="94.4729%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.3043%" y="325" width="0.0814%" height="15" fill="rgb(209,227,23)" fg:x="1159" fg:w="1"/><text x="94.5543%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (10 samples, 0.81%)</title><rect x="93.6534%" y="469" width="0.8137%" height="15" fill="rgb(248,92,24)" fg:x="1151" fg:w="10"/><text x="93.9034%" y="479.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.65%)</title><rect x="93.8161%" y="453" width="0.6509%" height="15" fill="rgb(247,59,2)" fg:x="1153" fg:w="8"/><text x="94.0661%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.65%)</title><rect x="93.8161%" y="437" width="0.6509%" height="15" fill="rgb(221,30,5)" fg:x="1153" fg:w="8"/><text x="94.0661%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.3043%" y="421" width="0.1627%" height="15" fill="rgb(208,108,53)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3043%" y="405" width="0.1627%" height="15" fill="rgb(211,183,26)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.3043%" y="389" width="0.1627%" height="15" fill="rgb(232,132,4)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3043%" y="373" width="0.1627%" height="15" fill="rgb(253,128,37)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.3043%" y="357" width="0.1627%" height="15" fill="rgb(221,58,24)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3043%" y="341" width="0.1627%" height="15" fill="rgb(230,54,45)" fg:x="1159" fg:w="2"/><text x="94.5543%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.3857%" y="325" width="0.0814%" height="15" fill="rgb(254,21,18)" fg:x="1160" fg:w="1"/><text x="94.6357%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3857%" y="309" width="0.0814%" height="15" fill="rgb(221,108,0)" fg:x="1160" fg:w="1"/><text x="94.6357%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4670%" y="453" width="0.0814%" height="15" fill="rgb(206,95,1)" fg:x="1161" fg:w="1"/><text x="94.7170%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5484%" y="357" width="0.0814%" height="15" fill="rgb(237,52,5)" fg:x="1162" fg:w="1"/><text x="94.7984%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5484%" y="341" width="0.0814%" height="15" fill="rgb(218,150,34)" fg:x="1162" fg:w="1"/><text x="94.7984%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="94.5484%" y="405" width="0.3255%" height="15" fill="rgb(235,194,28)" fg:x="1162" fg:w="4"/><text x="94.7984%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="94.5484%" y="389" width="0.3255%" height="15" fill="rgb(245,92,18)" fg:x="1162" fg:w="4"/><text x="94.7984%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="94.5484%" y="373" width="0.3255%" height="15" fill="rgb(253,203,53)" fg:x="1162" fg:w="4"/><text x="94.7984%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="94.6298%" y="357" width="0.2441%" height="15" fill="rgb(249,185,47)" fg:x="1163" fg:w="3"/><text x="94.8798%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.7111%" y="341" width="0.1627%" height="15" fill="rgb(252,194,52)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="94.7111%" y="325" width="0.1627%" height="15" fill="rgb(210,53,36)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="94.7111%" y="309" width="0.1627%" height="15" fill="rgb(237,37,25)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="94.7111%" y="293" width="0.1627%" height="15" fill="rgb(242,116,27)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.7111%" y="277" width="0.1627%" height="15" fill="rgb(213,185,26)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.7111%" y="261" width="0.1627%" height="15" fill="rgb(225,204,8)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="94.7111%" y="245" width="0.1627%" height="15" fill="rgb(254,111,37)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="94.7111%" y="229" width="0.1627%" height="15" fill="rgb(242,35,9)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="94.7111%" y="213" width="0.1627%" height="15" fill="rgb(232,138,49)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="94.7111%" y="197" width="0.1627%" height="15" fill="rgb(247,56,4)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.7111%" y="181" width="0.1627%" height="15" fill="rgb(226,179,17)" fg:x="1164" fg:w="2"/><text x="94.9611%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="94.5484%" y="421" width="0.4068%" height="15" fill="rgb(216,163,45)" fg:x="1162" fg:w="5"/><text x="94.7984%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8739%" y="405" width="0.0814%" height="15" fill="rgb(211,157,3)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8739%" y="389" width="0.0814%" height="15" fill="rgb(234,44,20)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8739%" y="373" width="0.0814%" height="15" fill="rgb(254,138,23)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8739%" y="357" width="0.0814%" height="15" fill="rgb(206,119,39)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8739%" y="341" width="0.0814%" height="15" fill="rgb(231,105,52)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8739%" y="325" width="0.0814%" height="15" fill="rgb(250,20,5)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8739%" y="309" width="0.0814%" height="15" fill="rgb(215,198,30)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8739%" y="293" width="0.0814%" height="15" fill="rgb(246,142,8)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8739%" y="277" width="0.0814%" height="15" fill="rgb(243,26,38)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8739%" y="261" width="0.0814%" height="15" fill="rgb(205,133,28)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8739%" y="245" width="0.0814%" height="15" fill="rgb(212,34,0)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8739%" y="229" width="0.0814%" height="15" fill="rgb(251,226,22)" fg:x="1166" fg:w="1"/><text x="95.1239%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9552%" y="389" width="0.0814%" height="15" fill="rgb(252,119,9)" fg:x="1167" fg:w="1"/><text x="95.2052%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="94.9552%" y="421" width="0.1627%" height="15" fill="rgb(213,150,50)" fg:x="1167" fg:w="2"/><text x="95.2052%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="94.9552%" y="405" width="0.1627%" height="15" fill="rgb(212,24,39)" fg:x="1167" fg:w="2"/><text x="95.2052%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.0366%" y="389" width="0.0814%" height="15" fill="rgb(213,46,39)" fg:x="1168" fg:w="1"/><text x="95.2866%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.0366%" y="373" width="0.0814%" height="15" fill="rgb(239,106,12)" fg:x="1168" fg:w="1"/><text x="95.2866%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0366%" y="357" width="0.0814%" height="15" fill="rgb(249,229,21)" fg:x="1168" fg:w="1"/><text x="95.2866%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1180%" y="325" width="0.0814%" height="15" fill="rgb(212,158,3)" fg:x="1169" fg:w="1"/><text x="95.3680%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1993%" y="293" width="0.0814%" height="15" fill="rgb(253,26,48)" fg:x="1170" fg:w="1"/><text x="95.4493%" y="303.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (21 samples, 1.71%)</title><rect x="93.6534%" y="485" width="1.7087%" height="15" fill="rgb(238,178,20)" fg:x="1151" fg:w="21"/><text x="93.9034%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.90%)</title><rect x="94.4670%" y="469" width="0.8950%" height="15" fill="rgb(208,86,15)" fg:x="1161" fg:w="11"/><text x="94.7170%" y="479.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="94.5484%" y="453" width="0.8137%" height="15" fill="rgb(239,42,53)" fg:x="1162" fg:w="10"/><text x="94.7984%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="94.5484%" y="437" width="0.8137%" height="15" fill="rgb(245,226,8)" fg:x="1162" fg:w="10"/><text x="94.7984%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.1180%" y="421" width="0.2441%" height="15" fill="rgb(216,176,32)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.1180%" y="405" width="0.2441%" height="15" fill="rgb(231,186,21)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.1180%" y="389" width="0.2441%" height="15" fill="rgb(205,95,49)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.1180%" y="373" width="0.2441%" height="15" fill="rgb(217,145,8)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="95.1180%" y="357" width="0.2441%" height="15" fill="rgb(239,144,48)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.1180%" y="341" width="0.2441%" height="15" fill="rgb(214,189,23)" fg:x="1169" fg:w="3"/><text x="95.3680%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.1993%" y="325" width="0.1627%" height="15" fill="rgb(229,157,17)" fg:x="1170" fg:w="2"/><text x="95.4493%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.1993%" y="309" width="0.1627%" height="15" fill="rgb(230,5,48)" fg:x="1170" fg:w="2"/><text x="95.4493%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2807%" y="293" width="0.0814%" height="15" fill="rgb(224,156,48)" fg:x="1171" fg:w="1"/><text x="95.5307%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2807%" y="277" width="0.0814%" height="15" fill="rgb(223,14,29)" fg:x="1171" fg:w="1"/><text x="95.5307%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.3621%" y="485" width="0.0814%" height="15" fill="rgb(229,96,36)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.3621%" y="469" width="0.0814%" height="15" fill="rgb(231,102,53)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.3621%" y="453" width="0.0814%" height="15" fill="rgb(210,77,38)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.3621%" y="437" width="0.0814%" height="15" fill="rgb(235,131,6)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.3621%" y="421" width="0.0814%" height="15" fill="rgb(252,55,38)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.3621%" y="405" width="0.0814%" height="15" fill="rgb(246,38,14)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.3621%" y="389" width="0.0814%" height="15" fill="rgb(242,27,5)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.3621%" y="373" width="0.0814%" height="15" fill="rgb(228,65,35)" fg:x="1172" fg:w="1"/><text x="95.6121%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4434%" y="485" width="0.0814%" height="15" fill="rgb(245,93,11)" fg:x="1173" fg:w="1"/><text x="95.6934%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="95.5248%" y="485" width="0.0814%" height="15" fill="rgb(213,1,31)" fg:x="1174" fg:w="1"/><text x="95.7748%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="95.5248%" y="469" width="0.0814%" height="15" fill="rgb(237,205,14)" fg:x="1174" fg:w="1"/><text x="95.7748%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="95.6876%" y="453" width="0.2441%" height="15" fill="rgb(232,118,45)" fg:x="1176" fg:w="3"/><text x="95.9376%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.6876%" y="437" width="0.2441%" height="15" fill="rgb(218,5,6)" fg:x="1176" fg:w="3"/><text x="95.9376%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="95.6876%" y="421" width="0.2441%" height="15" fill="rgb(251,87,51)" fg:x="1176" fg:w="3"/><text x="95.9376%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.7689%" y="405" width="0.1627%" height="15" fill="rgb(207,225,20)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.7689%" y="389" width="0.1627%" height="15" fill="rgb(222,78,54)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.7689%" y="373" width="0.1627%" height="15" fill="rgb(232,85,16)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.7689%" y="357" width="0.1627%" height="15" fill="rgb(244,25,33)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.7689%" y="341" width="0.1627%" height="15" fill="rgb(233,24,36)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.7689%" y="325" width="0.1627%" height="15" fill="rgb(253,49,54)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.7689%" y="309" width="0.1627%" height="15" fill="rgb(245,12,22)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.7689%" y="293" width="0.1627%" height="15" fill="rgb(253,141,28)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.7689%" y="277" width="0.1627%" height="15" fill="rgb(225,207,27)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="95.7689%" y="261" width="0.1627%" height="15" fill="rgb(220,84,2)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="95.7689%" y="245" width="0.1627%" height="15" fill="rgb(224,37,37)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="95.7689%" y="229" width="0.1627%" height="15" fill="rgb(220,143,18)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.7689%" y="213" width="0.1627%" height="15" fill="rgb(210,88,33)" fg:x="1177" fg:w="2"/><text x="96.0189%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9317%" y="261" width="0.0814%" height="15" fill="rgb(219,87,51)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9317%" y="245" width="0.0814%" height="15" fill="rgb(211,7,35)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9317%" y="229" width="0.0814%" height="15" fill="rgb(232,77,2)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9317%" y="213" width="0.0814%" height="15" fill="rgb(249,94,25)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9317%" y="197" width="0.0814%" height="15" fill="rgb(215,112,2)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9317%" y="181" width="0.0814%" height="15" fill="rgb(226,115,48)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9317%" y="165" width="0.0814%" height="15" fill="rgb(249,196,10)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9317%" y="149" width="0.0814%" height="15" fill="rgb(237,109,14)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9317%" y="133" width="0.0814%" height="15" fill="rgb(217,103,53)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9317%" y="117" width="0.0814%" height="15" fill="rgb(244,137,9)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.9317%" y="101" width="0.0814%" height="15" fill="rgb(227,201,3)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.9317%" y="85" width="0.0814%" height="15" fill="rgb(243,94,6)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.9317%" y="69" width="0.0814%" height="15" fill="rgb(235,118,5)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.9317%" y="53" width="0.0814%" height="15" fill="rgb(247,10,30)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9317%" y="37" width="0.0814%" height="15" fill="rgb(205,26,28)" fg:x="1179" fg:w="1"/><text x="96.1817%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="95.9317%" y="309" width="0.3255%" height="15" fill="rgb(206,99,35)" fg:x="1179" fg:w="4"/><text x="96.1817%" y="319.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="95.9317%" y="293" width="0.3255%" height="15" fill="rgb(238,130,40)" fg:x="1179" fg:w="4"/><text x="96.1817%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="95.9317%" y="277" width="0.3255%" height="15" fill="rgb(224,126,31)" fg:x="1179" fg:w="4"/><text x="96.1817%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.0130%" y="261" width="0.2441%" height="15" fill="rgb(254,105,17)" fg:x="1180" fg:w="3"/><text x="96.2630%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.0130%" y="245" width="0.2441%" height="15" fill="rgb(216,87,36)" fg:x="1180" fg:w="3"/><text x="96.2630%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.0130%" y="229" width="0.2441%" height="15" fill="rgb(240,21,12)" fg:x="1180" fg:w="3"/><text x="96.2630%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0944%" y="213" width="0.1627%" height="15" fill="rgb(245,192,34)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.0944%" y="197" width="0.1627%" height="15" fill="rgb(226,100,49)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0944%" y="181" width="0.1627%" height="15" fill="rgb(245,188,27)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.0944%" y="165" width="0.1627%" height="15" fill="rgb(212,170,8)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.0944%" y="149" width="0.1627%" height="15" fill="rgb(217,113,29)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="96.0944%" y="133" width="0.1627%" height="15" fill="rgb(237,30,3)" fg:x="1181" fg:w="2"/><text x="96.3444%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2571%" y="261" width="0.0814%" height="15" fill="rgb(227,19,28)" fg:x="1183" fg:w="1"/><text x="96.5071%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2571%" y="245" width="0.0814%" height="15" fill="rgb(239,172,45)" fg:x="1183" fg:w="1"/><text x="96.5071%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2571%" y="229" width="0.0814%" height="15" fill="rgb(254,55,39)" fg:x="1183" fg:w="1"/><text x="96.5071%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.49%)</title><rect x="95.9317%" y="341" width="0.4882%" height="15" fill="rgb(249,208,12)" fg:x="1179" fg:w="6"/><text x="96.1817%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.49%)</title><rect x="95.9317%" y="325" width="0.4882%" height="15" fill="rgb(240,52,13)" fg:x="1179" fg:w="6"/><text x="96.1817%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.2571%" y="309" width="0.1627%" height="15" fill="rgb(252,149,13)" fg:x="1183" fg:w="2"/><text x="96.5071%" y="319.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.2571%" y="293" width="0.1627%" height="15" fill="rgb(232,81,48)" fg:x="1183" fg:w="2"/><text x="96.5071%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.2571%" y="277" width="0.1627%" height="15" fill="rgb(222,144,2)" fg:x="1183" fg:w="2"/><text x="96.5071%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.3385%" y="261" width="0.0814%" height="15" fill="rgb(216,81,32)" fg:x="1184" fg:w="1"/><text x="96.5885%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.3385%" y="245" width="0.0814%" height="15" fill="rgb(244,78,51)" fg:x="1184" fg:w="1"/><text x="96.5885%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.4199%" y="277" width="0.0814%" height="15" fill="rgb(217,66,21)" fg:x="1185" fg:w="1"/><text x="96.6699%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.4199%" y="261" width="0.0814%" height="15" fill="rgb(247,101,42)" fg:x="1185" fg:w="1"/><text x="96.6699%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5826%" y="213" width="0.0814%" height="15" fill="rgb(227,81,39)" fg:x="1187" fg:w="1"/><text x="96.8326%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5826%" y="197" width="0.0814%" height="15" fill="rgb(220,223,44)" fg:x="1187" fg:w="1"/><text x="96.8326%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="96.6640%" y="181" width="0.1627%" height="15" fill="rgb(205,218,2)" fg:x="1188" fg:w="2"/><text x="96.9140%" y="191.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="96.6640%" y="165" width="0.1627%" height="15" fill="rgb(212,207,28)" fg:x="1188" fg:w="2"/><text x="96.9140%" y="175.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.49%)</title><rect x="96.4199%" y="325" width="0.4882%" height="15" fill="rgb(224,12,41)" fg:x="1185" fg:w="6"/><text x="96.6699%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="96.4199%" y="309" width="0.4882%" height="15" fill="rgb(216,118,12)" fg:x="1185" fg:w="6"/><text x="96.6699%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="96.4199%" y="293" width="0.4882%" height="15" fill="rgb(252,97,46)" fg:x="1185" fg:w="6"/><text x="96.6699%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="96.5012%" y="277" width="0.4068%" height="15" fill="rgb(244,206,19)" fg:x="1186" fg:w="5"/><text x="96.7512%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="96.5826%" y="261" width="0.3255%" height="15" fill="rgb(231,84,31)" fg:x="1187" fg:w="4"/><text x="96.8326%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.33%)</title><rect x="96.5826%" y="245" width="0.3255%" height="15" fill="rgb(244,133,0)" fg:x="1187" fg:w="4"/><text x="96.8326%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="96.5826%" y="229" width="0.3255%" height="15" fill="rgb(223,15,50)" fg:x="1187" fg:w="4"/><text x="96.8326%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="96.6640%" y="213" width="0.2441%" height="15" fill="rgb(250,118,49)" fg:x="1188" fg:w="3"/><text x="96.9140%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.6640%" y="197" width="0.2441%" height="15" fill="rgb(248,25,38)" fg:x="1188" fg:w="3"/><text x="96.9140%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8267%" y="181" width="0.0814%" height="15" fill="rgb(215,70,14)" fg:x="1190" fg:w="1"/><text x="97.0767%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8267%" y="165" width="0.0814%" height="15" fill="rgb(215,28,15)" fg:x="1190" fg:w="1"/><text x="97.0767%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8267%" y="149" width="0.0814%" height="15" fill="rgb(243,6,28)" fg:x="1190" fg:w="1"/><text x="97.0767%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0708%" y="245" width="0.0814%" height="15" fill="rgb(222,130,1)" fg:x="1193" fg:w="1"/><text x="97.3208%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0708%" y="229" width="0.0814%" height="15" fill="rgb(236,166,44)" fg:x="1193" fg:w="1"/><text x="97.3208%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.0708%" y="213" width="0.0814%" height="15" fill="rgb(221,108,14)" fg:x="1193" fg:w="1"/><text x="97.3208%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.0708%" y="197" width="0.0814%" height="15" fill="rgb(252,3,45)" fg:x="1193" fg:w="1"/><text x="97.3208%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0708%" y="181" width="0.0814%" height="15" fill="rgb(237,68,30)" fg:x="1193" fg:w="1"/><text x="97.3208%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1522%" y="213" width="0.0814%" height="15" fill="rgb(211,79,22)" fg:x="1194" fg:w="1"/><text x="97.4022%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2335%" y="181" width="0.0814%" height="15" fill="rgb(252,185,21)" fg:x="1195" fg:w="1"/><text x="97.4835%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.98%)</title><rect x="96.4199%" y="341" width="0.9764%" height="15" fill="rgb(225,189,26)" fg:x="1185" fg:w="12"/><text x="96.6699%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="96.9081%" y="325" width="0.4882%" height="15" fill="rgb(241,30,40)" fg:x="1191" fg:w="6"/><text x="97.1581%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="96.9081%" y="309" width="0.4882%" height="15" fill="rgb(235,215,44)" fg:x="1191" fg:w="6"/><text x="97.1581%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="96.9894%" y="293" width="0.4068%" height="15" fill="rgb(205,8,29)" fg:x="1192" fg:w="5"/><text x="97.2394%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="96.9894%" y="277" width="0.4068%" height="15" fill="rgb(241,137,42)" fg:x="1192" fg:w="5"/><text x="97.2394%" y="287.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="96.9894%" y="261" width="0.4068%" height="15" fill="rgb(237,155,2)" fg:x="1192" fg:w="5"/><text x="97.2394%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="97.1522%" y="245" width="0.2441%" height="15" fill="rgb(245,29,42)" fg:x="1194" fg:w="3"/><text x="97.4022%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="97.1522%" y="229" width="0.2441%" height="15" fill="rgb(234,101,35)" fg:x="1194" fg:w="3"/><text x="97.4022%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.2335%" y="213" width="0.1627%" height="15" fill="rgb(228,64,37)" fg:x="1195" fg:w="2"/><text x="97.4835%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="97.2335%" y="197" width="0.1627%" height="15" fill="rgb(217,214,36)" fg:x="1195" fg:w="2"/><text x="97.4835%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.3149%" y="181" width="0.0814%" height="15" fill="rgb(243,70,3)" fg:x="1196" fg:w="1"/><text x="97.5649%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.3149%" y="165" width="0.0814%" height="15" fill="rgb(253,158,52)" fg:x="1196" fg:w="1"/><text x="97.5649%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.3963%" y="341" width="0.1627%" height="15" fill="rgb(234,111,54)" fg:x="1197" fg:w="2"/><text x="97.6463%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.3963%" y="325" width="0.1627%" height="15" fill="rgb(217,70,32)" fg:x="1197" fg:w="2"/><text x="97.6463%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.3963%" y="309" width="0.1627%" height="15" fill="rgb(234,18,33)" fg:x="1197" fg:w="2"/><text x="97.6463%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4776%" y="293" width="0.0814%" height="15" fill="rgb(234,12,49)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4776%" y="277" width="0.0814%" height="15" fill="rgb(236,10,21)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4776%" y="261" width="0.0814%" height="15" fill="rgb(248,182,45)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4776%" y="245" width="0.0814%" height="15" fill="rgb(217,95,36)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.4776%" y="229" width="0.0814%" height="15" fill="rgb(212,110,31)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4776%" y="213" width="0.0814%" height="15" fill="rgb(206,32,53)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4776%" y="197" width="0.0814%" height="15" fill="rgb(246,141,37)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4776%" y="181" width="0.0814%" height="15" fill="rgb(219,16,7)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4776%" y="165" width="0.0814%" height="15" fill="rgb(230,205,45)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.4776%" y="149" width="0.0814%" height="15" fill="rgb(231,43,49)" fg:x="1198" fg:w="1"/><text x="97.7276%" y="159.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.71%)</title><rect x="95.9317%" y="357" width="1.7087%" height="15" fill="rgb(212,106,34)" fg:x="1179" fg:w="21"/><text x="96.1817%" y="367.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="97.5590%" y="341" width="0.0814%" height="15" fill="rgb(206,83,17)" fg:x="1199" fg:w="1"/><text x="97.8090%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5590%" y="325" width="0.0814%" height="15" fill="rgb(244,154,49)" fg:x="1199" fg:w="1"/><text x="97.8090%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5590%" y="309" width="0.0814%" height="15" fill="rgb(244,149,49)" fg:x="1199" fg:w="1"/><text x="97.8090%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="97.5590%" y="293" width="0.0814%" height="15" fill="rgb(227,134,18)" fg:x="1199" fg:w="1"/><text x="97.8090%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5590%" y="277" width="0.0814%" height="15" fill="rgb(237,116,36)" fg:x="1199" fg:w="1"/><text x="97.8090%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (72 samples, 5.86%)</title><rect x="91.8633%" y="709" width="5.8584%" height="15" fill="rgb(205,129,40)" fg:x="1129" fg:w="72"/><text x="92.1133%" y="719.50">&lt;engine..</text></g><g><title>kernel::plugins::mw::apply_middleware (72 samples, 5.86%)</title><rect x="91.8633%" y="693" width="5.8584%" height="15" fill="rgb(236,178,4)" fg:x="1129" fg:w="72"/><text x="92.1133%" y="703.50">kernel:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (72 samples, 5.86%)</title><rect x="91.8633%" y="677" width="5.8584%" height="15" fill="rgb(251,76,53)" fg:x="1129" fg:w="72"/><text x="92.1133%" y="687.50">kernel:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (72 samples, 5.86%)</title><rect x="91.8633%" y="661" width="5.8584%" height="15" fill="rgb(242,92,40)" fg:x="1129" fg:w="72"/><text x="92.1133%" y="671.50">&lt;engine..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (56 samples, 4.56%)</title><rect x="93.1652%" y="645" width="4.5566%" height="15" fill="rgb(209,45,30)" fg:x="1145" fg:w="56"/><text x="93.4152%" y="655.50">kerne..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (56 samples, 4.56%)</title><rect x="93.1652%" y="629" width="4.5566%" height="15" fill="rgb(218,157,36)" fg:x="1145" fg:w="56"/><text x="93.4152%" y="639.50">&lt;plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (56 samples, 4.56%)</title><rect x="93.1652%" y="613" width="4.5566%" height="15" fill="rgb(222,186,16)" fg:x="1145" fg:w="56"/><text x="93.4152%" y="623.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 4.56%)</title><rect x="93.1652%" y="597" width="4.5566%" height="15" fill="rgb(254,72,35)" fg:x="1145" fg:w="56"/><text x="93.4152%" y="607.50">core:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (55 samples, 4.48%)</title><rect x="93.2465%" y="581" width="4.4752%" height="15" fill="rgb(224,25,35)" fg:x="1146" fg:w="55"/><text x="93.4965%" y="591.50">kerne..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (55 samples, 4.48%)</title><rect x="93.2465%" y="565" width="4.4752%" height="15" fill="rgb(206,135,52)" fg:x="1146" fg:w="55"/><text x="93.4965%" y="575.50">core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 4.39%)</title><rect x="93.3279%" y="549" width="4.3938%" height="15" fill="rgb(229,174,47)" fg:x="1147" fg:w="54"/><text x="93.5779%" y="559.50">&lt;allo..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (54 samples, 4.39%)</title><rect x="93.3279%" y="533" width="4.3938%" height="15" fill="rgb(242,184,21)" fg:x="1147" fg:w="54"/><text x="93.5779%" y="543.50">&lt;engi..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (54 samples, 4.39%)</title><rect x="93.3279%" y="517" width="4.3938%" height="15" fill="rgb(213,22,45)" fg:x="1147" fg:w="54"/><text x="93.5779%" y="527.50">&lt;plug..</text></g><g><title>plugins_core::looking::model::new_area_observation (51 samples, 4.15%)</title><rect x="93.5720%" y="501" width="4.1497%" height="15" fill="rgb(237,81,54)" fg:x="1150" fg:w="51"/><text x="93.8220%" y="511.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (26 samples, 2.12%)</title><rect x="95.6062%" y="485" width="2.1155%" height="15" fill="rgb(248,177,18)" fg:x="1175" fg:w="26"/><text x="95.8562%" y="495.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.12%)</title><rect x="95.6062%" y="469" width="2.1155%" height="15" fill="rgb(254,31,16)" fg:x="1175" fg:w="26"/><text x="95.8562%" y="479.50">k..</text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (22 samples, 1.79%)</title><rect x="95.9317%" y="453" width="1.7901%" height="15" fill="rgb(235,20,31)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="463.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (22 samples, 1.79%)</title><rect x="95.9317%" y="437" width="1.7901%" height="15" fill="rgb(240,56,43)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="447.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 1.79%)</title><rect x="95.9317%" y="421" width="1.7901%" height="15" fill="rgb(237,197,51)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="431.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 1.79%)</title><rect x="95.9317%" y="405" width="1.7901%" height="15" fill="rgb(241,162,44)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.79%)</title><rect x="95.9317%" y="389" width="1.7901%" height="15" fill="rgb(224,23,20)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="399.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.79%)</title><rect x="95.9317%" y="373" width="1.7901%" height="15" fill="rgb(250,109,34)" fg:x="1179" fg:w="22"/><text x="96.1817%" y="383.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.6404%" y="357" width="0.0814%" height="15" fill="rgb(214,175,50)" fg:x="1200" fg:w="1"/><text x="97.8904%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.7217%" y="677" width="0.0814%" height="15" fill="rgb(213,182,5)" fg:x="1201" fg:w="1"/><text x="97.9717%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7217%" y="661" width="0.0814%" height="15" fill="rgb(209,199,19)" fg:x="1201" fg:w="1"/><text x="97.9717%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8031%" y="517" width="0.0814%" height="15" fill="rgb(236,224,42)" fg:x="1202" fg:w="1"/><text x="98.0531%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8031%" y="501" width="0.0814%" height="15" fill="rgb(246,226,29)" fg:x="1202" fg:w="1"/><text x="98.0531%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8031%" y="485" width="0.0814%" height="15" fill="rgb(227,223,11)" fg:x="1202" fg:w="1"/><text x="98.0531%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.8031%" y="533" width="0.1627%" height="15" fill="rgb(219,7,51)" fg:x="1202" fg:w="2"/><text x="98.0531%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.8845%" y="517" width="0.0814%" height="15" fill="rgb(245,167,10)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8845%" y="501" width="0.0814%" height="15" fill="rgb(237,224,16)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.8845%" y="485" width="0.0814%" height="15" fill="rgb(226,132,13)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.8845%" y="469" width="0.0814%" height="15" fill="rgb(214,140,3)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8845%" y="453" width="0.0814%" height="15" fill="rgb(221,177,4)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8845%" y="437" width="0.0814%" height="15" fill="rgb(238,139,3)" fg:x="1203" fg:w="1"/><text x="98.1345%" y="447.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.8031%" y="661" width="0.2441%" height="15" fill="rgb(216,17,39)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8031%" y="645" width="0.2441%" height="15" fill="rgb(238,120,9)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.8031%" y="629" width="0.2441%" height="15" fill="rgb(244,92,53)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8031%" y="613" width="0.2441%" height="15" fill="rgb(224,148,33)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.8031%" y="597" width="0.2441%" height="15" fill="rgb(243,6,36)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8031%" y="581" width="0.2441%" height="15" fill="rgb(230,102,11)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.8031%" y="565" width="0.2441%" height="15" fill="rgb(234,148,36)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.8031%" y="549" width="0.2441%" height="15" fill="rgb(251,153,25)" fg:x="1202" fg:w="3"/><text x="98.0531%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="97.9658%" y="533" width="0.0814%" height="15" fill="rgb(215,129,8)" fg:x="1204" fg:w="1"/><text x="98.2158%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="97.9658%" y="517" width="0.0814%" height="15" fill="rgb(224,128,35)" fg:x="1204" fg:w="1"/><text x="98.2158%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9658%" y="501" width="0.0814%" height="15" fill="rgb(237,56,52)" fg:x="1204" fg:w="1"/><text x="98.2158%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0472%" y="549" width="0.0814%" height="15" fill="rgb(234,213,19)" fg:x="1205" fg:w="1"/><text x="98.2972%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0472%" y="533" width="0.0814%" height="15" fill="rgb(252,82,23)" fg:x="1205" fg:w="1"/><text x="98.2972%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0472%" y="517" width="0.0814%" height="15" fill="rgb(254,201,21)" fg:x="1205" fg:w="1"/><text x="98.2972%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0472%" y="501" width="0.0814%" height="15" fill="rgb(250,186,11)" fg:x="1205" fg:w="1"/><text x="98.2972%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.0472%" y="485" width="0.0814%" height="15" fill="rgb(211,174,5)" fg:x="1205" fg:w="1"/><text x="98.2972%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.0472%" y="581" width="0.1627%" height="15" fill="rgb(214,121,10)" fg:x="1205" fg:w="2"/><text x="98.2972%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.0472%" y="565" width="0.1627%" height="15" fill="rgb(241,66,2)" fg:x="1205" fg:w="2"/><text x="98.2972%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1286%" y="549" width="0.0814%" height="15" fill="rgb(220,167,19)" fg:x="1206" fg:w="1"/><text x="98.3786%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2099%" y="549" width="0.0814%" height="15" fill="rgb(231,54,50)" fg:x="1207" fg:w="1"/><text x="98.4599%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="98.2099%" y="581" width="0.2441%" height="15" fill="rgb(239,217,53)" fg:x="1207" fg:w="3"/><text x="98.4599%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="98.2099%" y="565" width="0.2441%" height="15" fill="rgb(248,8,0)" fg:x="1207" fg:w="3"/><text x="98.4599%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.2913%" y="549" width="0.1627%" height="15" fill="rgb(229,118,37)" fg:x="1208" fg:w="2"/><text x="98.5413%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.73%)</title><rect x="97.8031%" y="677" width="0.7323%" height="15" fill="rgb(253,223,43)" fg:x="1202" fg:w="9"/><text x="98.0531%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="98.0472%" y="661" width="0.4882%" height="15" fill="rgb(211,77,36)" fg:x="1205" fg:w="6"/><text x="98.2972%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="98.0472%" y="645" width="0.4882%" height="15" fill="rgb(219,3,53)" fg:x="1205" fg:w="6"/><text x="98.2972%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="98.0472%" y="629" width="0.4882%" height="15" fill="rgb(244,45,42)" fg:x="1205" fg:w="6"/><text x="98.2972%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="98.0472%" y="613" width="0.4882%" height="15" fill="rgb(225,95,27)" fg:x="1205" fg:w="6"/><text x="98.2972%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="98.0472%" y="597" width="0.4882%" height="15" fill="rgb(207,74,8)" fg:x="1205" fg:w="6"/><text x="98.2972%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4540%" y="581" width="0.0814%" height="15" fill="rgb(243,63,36)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4540%" y="565" width="0.0814%" height="15" fill="rgb(211,180,12)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.4540%" y="549" width="0.0814%" height="15" fill="rgb(254,166,49)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4540%" y="533" width="0.0814%" height="15" fill="rgb(205,19,0)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4540%" y="517" width="0.0814%" height="15" fill="rgb(224,172,32)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.4540%" y="501" width="0.0814%" height="15" fill="rgb(254,136,30)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4540%" y="485" width="0.0814%" height="15" fill="rgb(246,19,35)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4540%" y="469" width="0.0814%" height="15" fill="rgb(219,24,36)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.4540%" y="453" width="0.0814%" height="15" fill="rgb(251,55,1)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4540%" y="437" width="0.0814%" height="15" fill="rgb(218,117,39)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4540%" y="421" width="0.0814%" height="15" fill="rgb(248,169,11)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.4540%" y="405" width="0.0814%" height="15" fill="rgb(244,40,44)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4540%" y="389" width="0.0814%" height="15" fill="rgb(234,62,37)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.4540%" y="373" width="0.0814%" height="15" fill="rgb(207,117,42)" fg:x="1210" fg:w="1"/><text x="98.7040%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.5354%" y="661" width="0.0814%" height="15" fill="rgb(213,43,2)" fg:x="1211" fg:w="1"/><text x="98.7854%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.5354%" y="645" width="0.0814%" height="15" fill="rgb(244,202,51)" fg:x="1211" fg:w="1"/><text x="98.7854%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.5354%" y="629" width="0.0814%" height="15" fill="rgb(253,174,46)" fg:x="1211" fg:w="1"/><text x="98.7854%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.98%)</title><rect x="97.7217%" y="709" width="0.9764%" height="15" fill="rgb(251,23,1)" fg:x="1201" fg:w="12"/><text x="97.9717%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.98%)</title><rect x="97.7217%" y="693" width="0.9764%" height="15" fill="rgb(253,26,1)" fg:x="1201" fg:w="12"/><text x="97.9717%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.5354%" y="677" width="0.1627%" height="15" fill="rgb(216,89,31)" fg:x="1211" fg:w="2"/><text x="98.7854%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.6168%" y="661" width="0.0814%" height="15" fill="rgb(209,109,5)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6168%" y="645" width="0.0814%" height="15" fill="rgb(229,63,13)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6168%" y="629" width="0.0814%" height="15" fill="rgb(238,137,54)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6168%" y="613" width="0.0814%" height="15" fill="rgb(228,1,9)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6168%" y="597" width="0.0814%" height="15" fill="rgb(249,120,48)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6168%" y="581" width="0.0814%" height="15" fill="rgb(209,72,36)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.6168%" y="565" width="0.0814%" height="15" fill="rgb(247,98,49)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6168%" y="549" width="0.0814%" height="15" fill="rgb(233,75,36)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6168%" y="533" width="0.0814%" height="15" fill="rgb(225,14,24)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6168%" y="517" width="0.0814%" height="15" fill="rgb(237,193,20)" fg:x="1212" fg:w="1"/><text x="98.8668%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.6981%" y="677" width="0.0814%" height="15" fill="rgb(239,122,19)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6981%" y="661" width="0.0814%" height="15" fill="rgb(231,220,10)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.6981%" y="645" width="0.0814%" height="15" fill="rgb(220,66,15)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.6981%" y="629" width="0.0814%" height="15" fill="rgb(215,171,52)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.6981%" y="613" width="0.0814%" height="15" fill="rgb(241,169,50)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.6981%" y="597" width="0.0814%" height="15" fill="rgb(236,189,0)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.6981%" y="581" width="0.0814%" height="15" fill="rgb(217,147,20)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.6981%" y="565" width="0.0814%" height="15" fill="rgb(206,188,39)" fg:x="1213" fg:w="1"/><text x="98.9481%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7795%" y="613" width="0.0814%" height="15" fill="rgb(227,118,25)" fg:x="1214" fg:w="1"/><text x="99.0295%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8609%" y="565" width="0.0814%" height="15" fill="rgb(248,171,40)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8609%" y="549" width="0.0814%" height="15" fill="rgb(251,90,54)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8609%" y="533" width="0.0814%" height="15" fill="rgb(234,11,46)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8609%" y="517" width="0.0814%" height="15" fill="rgb(229,134,13)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8609%" y="501" width="0.0814%" height="15" fill="rgb(223,129,3)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8609%" y="485" width="0.0814%" height="15" fill="rgb(221,124,13)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.8609%" y="469" width="0.0814%" height="15" fill="rgb(234,3,18)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8609%" y="453" width="0.0814%" height="15" fill="rgb(249,199,20)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8609%" y="437" width="0.0814%" height="15" fill="rgb(224,134,6)" fg:x="1215" fg:w="1"/><text x="99.1109%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.9422%" y="565" width="0.0814%" height="15" fill="rgb(254,83,26)" fg:x="1216" fg:w="1"/><text x="99.1922%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.9422%" y="549" width="0.0814%" height="15" fill="rgb(217,88,9)" fg:x="1216" fg:w="1"/><text x="99.1922%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.9422%" y="533" width="0.0814%" height="15" fill="rgb(225,73,2)" fg:x="1216" fg:w="1"/><text x="99.1922%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.9422%" y="517" width="0.0814%" height="15" fill="rgb(226,44,39)" fg:x="1216" fg:w="1"/><text x="99.1922%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.9422%" y="501" width="0.0814%" height="15" fill="rgb(228,53,17)" fg:x="1216" fg:w="1"/><text x="99.1922%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0236%" y="533" width="0.0814%" height="15" fill="rgb(212,27,27)" fg:x="1217" fg:w="1"/><text x="99.2736%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.0236%" y="517" width="0.0814%" height="15" fill="rgb(241,50,6)" fg:x="1217" fg:w="1"/><text x="99.2736%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0236%" y="501" width="0.0814%" height="15" fill="rgb(225,28,51)" fg:x="1217" fg:w="1"/><text x="99.2736%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.49%)</title><rect x="98.7795%" y="661" width="0.4882%" height="15" fill="rgb(215,33,16)" fg:x="1214" fg:w="6"/><text x="99.0295%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="98.7795%" y="645" width="0.4882%" height="15" fill="rgb(243,40,39)" fg:x="1214" fg:w="6"/><text x="99.0295%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="98.7795%" y="629" width="0.4882%" height="15" fill="rgb(225,11,42)" fg:x="1214" fg:w="6"/><text x="99.0295%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="98.8609%" y="613" width="0.4068%" height="15" fill="rgb(241,220,38)" fg:x="1215" fg:w="5"/><text x="99.1109%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="98.8609%" y="597" width="0.4068%" height="15" fill="rgb(244,52,35)" fg:x="1215" fg:w="5"/><text x="99.1109%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="98.8609%" y="581" width="0.4068%" height="15" fill="rgb(246,42,46)" fg:x="1215" fg:w="5"/><text x="99.1109%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0236%" y="565" width="0.2441%" height="15" fill="rgb(205,184,13)" fg:x="1217" fg:w="3"/><text x="99.2736%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.0236%" y="549" width="0.2441%" height="15" fill="rgb(209,48,36)" fg:x="1217" fg:w="3"/><text x="99.2736%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.1050%" y="533" width="0.1627%" height="15" fill="rgb(244,34,51)" fg:x="1218" fg:w="2"/><text x="99.3550%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1050%" y="517" width="0.1627%" height="15" fill="rgb(221,107,33)" fg:x="1218" fg:w="2"/><text x="99.3550%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1050%" y="501" width="0.1627%" height="15" fill="rgb(224,203,12)" fg:x="1218" fg:w="2"/><text x="99.3550%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.1050%" y="485" width="0.1627%" height="15" fill="rgb(230,215,18)" fg:x="1218" fg:w="2"/><text x="99.3550%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1863%" y="469" width="0.0814%" height="15" fill="rgb(206,185,35)" fg:x="1219" fg:w="1"/><text x="99.4363%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1863%" y="453" width="0.0814%" height="15" fill="rgb(228,140,34)" fg:x="1219" fg:w="1"/><text x="99.4363%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2677%" y="613" width="0.0814%" height="15" fill="rgb(208,93,13)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.2677%" y="597" width="0.0814%" height="15" fill="rgb(221,193,39)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2677%" y="581" width="0.0814%" height="15" fill="rgb(241,132,34)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2677%" y="565" width="0.0814%" height="15" fill="rgb(221,141,10)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.2677%" y="549" width="0.0814%" height="15" fill="rgb(226,90,31)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.2677%" y="533" width="0.0814%" height="15" fill="rgb(243,75,5)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.2677%" y="517" width="0.0814%" height="15" fill="rgb(227,156,21)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2677%" y="501" width="0.0814%" height="15" fill="rgb(250,195,8)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2677%" y="485" width="0.0814%" height="15" fill="rgb(220,134,5)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.2677%" y="469" width="0.0814%" height="15" fill="rgb(246,106,34)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.2677%" y="453" width="0.0814%" height="15" fill="rgb(205,1,4)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.2677%" y="437" width="0.0814%" height="15" fill="rgb(224,151,29)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.2677%" y="421" width="0.0814%" height="15" fill="rgb(251,196,0)" fg:x="1220" fg:w="1"/><text x="99.5177%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3491%" y="581" width="0.0814%" height="15" fill="rgb(212,127,0)" fg:x="1221" fg:w="1"/><text x="99.5991%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.3491%" y="565" width="0.0814%" height="15" fill="rgb(236,71,53)" fg:x="1221" fg:w="1"/><text x="99.5991%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.4304%" y="453" width="0.0814%" height="15" fill="rgb(227,99,0)" fg:x="1222" fg:w="1"/><text x="99.6804%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4304%" y="437" width="0.0814%" height="15" fill="rgb(239,89,21)" fg:x="1222" fg:w="1"/><text x="99.6804%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.90%)</title><rect x="98.6981%" y="693" width="0.8950%" height="15" fill="rgb(243,122,19)" fg:x="1213" fg:w="11"/><text x="98.9481%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="98.7795%" y="677" width="0.8137%" height="15" fill="rgb(229,192,45)" fg:x="1214" fg:w="10"/><text x="99.0295%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="99.2677%" y="661" width="0.3255%" height="15" fill="rgb(235,165,35)" fg:x="1220" fg:w="4"/><text x="99.5177%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.33%)</title><rect x="99.2677%" y="645" width="0.3255%" height="15" fill="rgb(253,202,0)" fg:x="1220" fg:w="4"/><text x="99.5177%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="99.2677%" y="629" width="0.3255%" height="15" fill="rgb(235,51,20)" fg:x="1220" fg:w="4"/><text x="99.5177%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.3491%" y="613" width="0.2441%" height="15" fill="rgb(218,95,46)" fg:x="1221" fg:w="3"/><text x="99.5991%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.3491%" y="597" width="0.2441%" height="15" fill="rgb(212,81,10)" fg:x="1221" fg:w="3"/><text x="99.5991%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4304%" y="581" width="0.1627%" height="15" fill="rgb(240,59,0)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4304%" y="565" width="0.1627%" height="15" fill="rgb(212,191,42)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.4304%" y="549" width="0.1627%" height="15" fill="rgb(233,140,3)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4304%" y="533" width="0.1627%" height="15" fill="rgb(215,69,23)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4304%" y="517" width="0.1627%" height="15" fill="rgb(240,202,20)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4304%" y="501" width="0.1627%" height="15" fill="rgb(209,146,50)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4304%" y="485" width="0.1627%" height="15" fill="rgb(253,102,54)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4304%" y="469" width="0.1627%" height="15" fill="rgb(250,173,47)" fg:x="1222" fg:w="2"/><text x="99.6804%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.5118%" y="453" width="0.0814%" height="15" fill="rgb(232,142,7)" fg:x="1223" fg:w="1"/><text x="99.7618%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.98%)</title><rect x="98.6981%" y="709" width="0.9764%" height="15" fill="rgb(230,157,47)" fg:x="1213" fg:w="12"/><text x="98.9481%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.5932%" y="693" width="0.0814%" height="15" fill="rgb(214,177,35)" fg:x="1224" fg:w="1"/><text x="99.8432%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.5932%" y="677" width="0.0814%" height="15" fill="rgb(234,119,46)" fg:x="1224" fg:w="1"/><text x="99.8432%" y="687.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.6745%" y="709" width="0.0814%" height="15" fill="rgb(241,180,50)" fg:x="1225" fg:w="1"/><text x="99.9245%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6745%" y="693" width="0.0814%" height="15" fill="rgb(221,54,25)" fg:x="1225" fg:w="1"/><text x="99.9245%" y="703.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (99 samples, 8.06%)</title><rect x="91.8633%" y="725" width="8.0553%" height="15" fill="rgb(209,157,44)" fg:x="1129" fg:w="99"/><text x="92.1133%" y="735.50">engine::ses..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.7559%" y="709" width="0.1627%" height="15" fill="rgb(246,115,41)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.7559%" y="693" width="0.1627%" height="15" fill="rgb(229,86,1)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.7559%" y="677" width="0.1627%" height="15" fill="rgb(240,108,53)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.7559%" y="661" width="0.1627%" height="15" fill="rgb(227,134,2)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.7559%" y="645" width="0.1627%" height="15" fill="rgb(213,129,25)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.7559%" y="629" width="0.1627%" height="15" fill="rgb(226,35,21)" fg:x="1226" fg:w="2"/><text x="100.0059%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8373%" y="613" width="0.0814%" height="15" fill="rgb(208,129,26)" fg:x="1227" fg:w="1"/><text x="100.0873%" y="623.50"></text></g><g><title>all (1,229 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(224,83,6)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1087.50"></text></g><g><title>simple-efc96132 (1,229 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(227,52,39)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1071.50">simple-efc96132</text></g><g><title>_start (1,229 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(241,30,17)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1055.50">_start</text></g><g><title>__libc_start_main (1,229 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(246,186,42)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1039.50">__libc_start_main</text></g><g><title>main (1,229 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(221,169,15)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1023.50">main</text></g><g><title>std::rt::lang_start_internal (1,229 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(235,108,21)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,229 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(219,148,30)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,229 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(220,109,5)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,229 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(213,203,48)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,229 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(244,71,33)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,229 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(209,23,2)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,229 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(219,97,7)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,229 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(216,161,23)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,229 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(207,45,42)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,229 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(241,61,4)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="863.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,229 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,170,1)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,229 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(239,72,5)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="831.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,229 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(214,13,50)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="815.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,229 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(224,88,9)" fg:x="0" fg:w="1229"/><text x="0.2500%" y="799.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (412 samples, 33.52%)</title><rect x="66.4768%" y="773" width="33.5232%" height="15" fill="rgb(238,192,34)" fg:x="817" fg:w="412"/><text x="66.7268%" y="783.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (412 samples, 33.52%)</title><rect x="66.4768%" y="757" width="33.5232%" height="15" fill="rgb(217,203,50)" fg:x="817" fg:w="412"/><text x="66.7268%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (412 samples, 33.52%)</title><rect x="66.4768%" y="741" width="33.5232%" height="15" fill="rgb(241,123,32)" fg:x="817" fg:w="412"/><text x="66.7268%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9186%" y="725" width="0.0814%" height="15" fill="rgb(248,151,39)" fg:x="1228" fg:w="1"/><text x="100.1686%" y="735.50"></text></g></svg></svg>