<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0798%" y="789" width="0.0798%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.3298%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0798%" y="773" width="0.0798%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3298%" y="783.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2394%" y="757" width="0.1596%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.4894%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.5587%" y="725" width="0.0798%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="1"/><text x="0.8087%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9577%" y="693" width="0.0798%" height="15" fill="rgb(208,68,35)" fg:x="12" fg:w="1"/><text x="1.2077%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="1.0375%" y="693" width="0.3990%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="5"/><text x="1.2875%" y="703.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.1173%" y="677" width="0.3192%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="4"/><text x="1.3673%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5164%" y="661" width="0.1596%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="2"/><text x="1.7664%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="1.4366%" y="677" width="0.3990%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="5"/><text x="1.6866%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6760%" y="661" width="0.1596%" height="15" fill="rgb(220,122,19)" fg:x="21" fg:w="2"/><text x="1.9260%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7558%" y="645" width="0.0798%" height="15" fill="rgb(250,228,42)" fg:x="22" fg:w="1"/><text x="2.0058%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.8356%" y="677" width="0.2394%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="3"/><text x="2.0856%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.48%)</title><rect x="2.0750%" y="677" width="0.4789%" height="15" fill="rgb(216,20,37)" fg:x="26" fg:w="6"/><text x="2.3250%" y="687.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.3144%" y="661" width="0.2394%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="3"/><text x="2.5644%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="2.6337%" y="661" width="0.3192%" height="15" fill="rgb(217,207,13)" fg:x="33" fg:w="4"/><text x="2.8837%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.7135%" y="645" width="0.2394%" height="15" fill="rgb(231,73,38)" fg:x="34" fg:w="3"/><text x="2.9635%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.31%)</title><rect x="0.7981%" y="709" width="2.3144%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="29"/><text x="1.0481%" y="719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.68%)</title><rect x="1.4366%" y="693" width="1.6760%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="21"/><text x="1.6866%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="2.5539%" y="677" width="0.5587%" height="15" fill="rgb(221,200,47)" fg:x="32" fg:w="7"/><text x="2.8039%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="2.9529%" y="661" width="0.1596%" height="15" fill="rgb(226,26,5)" fg:x="37" fg:w="2"/><text x="3.2029%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.63%)</title><rect x="0.6385%" y="725" width="2.6337%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="33"/><text x="0.8885%" y="735.50">&lt;h..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.1125%" y="709" width="0.1596%" height="15" fill="rgb(235,183,28)" fg:x="39" fg:w="2"/><text x="3.3625%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 3.11%)</title><rect x="0.2394%" y="773" width="3.1125%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="39"/><text x="0.4894%" y="783.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 2.95%)</title><rect x="0.3990%" y="757" width="2.9529%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="37"/><text x="0.6490%" y="767.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.95%)</title><rect x="0.3990%" y="741" width="2.9529%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="37"/><text x="0.6490%" y="751.50">&lt;al..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2721%" y="725" width="0.0798%" height="15" fill="rgb(249,31,29)" fg:x="41" fg:w="1"/><text x="3.5221%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.43%)</title><rect x="0.0000%" y="805" width="3.4318%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="43"/><text x="0.2500%" y="815.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (41 samples, 3.27%)</title><rect x="0.1596%" y="789" width="3.2721%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="41"/><text x="0.4096%" y="799.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3520%" y="773" width="0.0798%" height="15" fill="rgb(214,148,48)" fg:x="42" fg:w="1"/><text x="3.6020%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.5914%" y="757" width="0.0798%" height="15" fill="rgb(232,36,49)" fg:x="45" fg:w="1"/><text x="3.8414%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.5914%" y="741" width="0.0798%" height="15" fill="rgb(209,103,24)" fg:x="45" fg:w="1"/><text x="3.8414%" y="751.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.6712%" y="757" width="0.0798%" height="15" fill="rgb(229,88,8)" fg:x="46" fg:w="1"/><text x="3.9212%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6712%" y="741" width="0.0798%" height="15" fill="rgb(213,181,19)" fg:x="46" fg:w="1"/><text x="3.9212%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.7510%" y="741" width="0.0798%" height="15" fill="rgb(254,191,54)" fg:x="47" fg:w="1"/><text x="4.0010%" y="751.50"></text></g><g><title>&lt;kernel::session::SetSession&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.8308%" y="741" width="0.0798%" height="15" fill="rgb(241,83,37)" fg:x="48" fg:w="1"/><text x="4.0808%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="3.9106%" y="693" width="0.0798%" height="15" fill="rgb(233,36,39)" fg:x="49" fg:w="1"/><text x="4.1606%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="3.9106%" y="677" width="0.0798%" height="15" fill="rgb(226,3,54)" fg:x="49" fg:w="1"/><text x="4.1606%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9106%" y="661" width="0.0798%" height="15" fill="rgb(245,192,40)" fg:x="49" fg:w="1"/><text x="4.1606%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.9106%" y="645" width="0.0798%" height="15" fill="rgb(238,167,29)" fg:x="49" fg:w="1"/><text x="4.1606%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.9106%" y="629" width="0.0798%" height="15" fill="rgb(232,182,51)" fg:x="49" fg:w="1"/><text x="4.1606%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.9106%" y="613" width="0.0798%" height="15" fill="rgb(231,60,39)" fg:x="49" fg:w="1"/><text x="4.1606%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.9106%" y="597" width="0.0798%" height="15" fill="rgb(208,69,12)" fg:x="49" fg:w="1"/><text x="4.1606%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.9106%" y="581" width="0.0798%" height="15" fill="rgb(235,93,37)" fg:x="49" fg:w="1"/><text x="4.1606%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9106%" y="565" width="0.0798%" height="15" fill="rgb(213,116,39)" fg:x="49" fg:w="1"/><text x="4.1606%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="3.9106%" y="709" width="0.2394%" height="15" fill="rgb(222,207,29)" fg:x="49" fg:w="3"/><text x="4.1606%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="3.9904%" y="693" width="0.1596%" height="15" fill="rgb(206,96,30)" fg:x="50" fg:w="2"/><text x="4.2404%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="3.9904%" y="677" width="0.1596%" height="15" fill="rgb(218,138,4)" fg:x="50" fg:w="2"/><text x="4.2404%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="3.9904%" y="661" width="0.1596%" height="15" fill="rgb(250,191,14)" fg:x="50" fg:w="2"/><text x="4.2404%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="3.9904%" y="645" width="0.1596%" height="15" fill="rgb(239,60,40)" fg:x="50" fg:w="2"/><text x="4.2404%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="3.9904%" y="629" width="0.1596%" height="15" fill="rgb(206,27,48)" fg:x="50" fg:w="2"/><text x="4.2404%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="3.9904%" y="613" width="0.1596%" height="15" fill="rgb(225,35,8)" fg:x="50" fg:w="2"/><text x="4.2404%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="3.9904%" y="597" width="0.1596%" height="15" fill="rgb(250,213,24)" fg:x="50" fg:w="2"/><text x="4.2404%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="3.9904%" y="581" width="0.1596%" height="15" fill="rgb(247,123,22)" fg:x="50" fg:w="2"/><text x="4.2404%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="3.9904%" y="565" width="0.1596%" height="15" fill="rgb(231,138,38)" fg:x="50" fg:w="2"/><text x="4.2404%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="3.9904%" y="549" width="0.1596%" height="15" fill="rgb(231,145,46)" fg:x="50" fg:w="2"/><text x="4.2404%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="3.9904%" y="533" width="0.1596%" height="15" fill="rgb(251,118,11)" fg:x="50" fg:w="2"/><text x="4.2404%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.9904%" y="517" width="0.1596%" height="15" fill="rgb(217,147,25)" fg:x="50" fg:w="2"/><text x="4.2404%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="3.9904%" y="501" width="0.1596%" height="15" fill="rgb(247,81,37)" fg:x="50" fg:w="2"/><text x="4.2404%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.9904%" y="485" width="0.1596%" height="15" fill="rgb(209,12,38)" fg:x="50" fg:w="2"/><text x="4.2404%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="3.9904%" y="469" width="0.1596%" height="15" fill="rgb(227,1,9)" fg:x="50" fg:w="2"/><text x="4.2404%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="3.9904%" y="453" width="0.1596%" height="15" fill="rgb(248,47,43)" fg:x="50" fg:w="2"/><text x="4.2404%" y="463.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="3.9904%" y="437" width="0.1596%" height="15" fill="rgb(221,10,30)" fg:x="50" fg:w="2"/><text x="4.2404%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0702%" y="421" width="0.0798%" height="15" fill="rgb(210,229,1)" fg:x="51" fg:w="1"/><text x="4.3202%" y="431.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="4.1500%" y="709" width="0.0798%" height="15" fill="rgb(222,148,37)" fg:x="52" fg:w="1"/><text x="4.4000%" y="719.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="4.1500%" y="693" width="0.0798%" height="15" fill="rgb(234,67,33)" fg:x="52" fg:w="1"/><text x="4.4000%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="4.1500%" y="677" width="0.0798%" height="15" fill="rgb(247,98,35)" fg:x="52" fg:w="1"/><text x="4.4000%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="4.1500%" y="661" width="0.0798%" height="15" fill="rgb(247,138,52)" fg:x="52" fg:w="1"/><text x="4.4000%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="4.1500%" y="645" width="0.0798%" height="15" fill="rgb(213,79,30)" fg:x="52" fg:w="1"/><text x="4.4000%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.1500%" y="629" width="0.0798%" height="15" fill="rgb(246,177,23)" fg:x="52" fg:w="1"/><text x="4.4000%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2298%" y="693" width="0.0798%" height="15" fill="rgb(230,62,27)" fg:x="53" fg:w="1"/><text x="4.4798%" y="703.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="4.3097%" y="693" width="0.0798%" height="15" fill="rgb(216,154,8)" fg:x="54" fg:w="1"/><text x="4.5597%" y="703.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="4.3097%" y="677" width="0.0798%" height="15" fill="rgb(244,35,45)" fg:x="54" fg:w="1"/><text x="4.5597%" y="687.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="4.3097%" y="661" width="0.0798%" height="15" fill="rgb(251,115,12)" fg:x="54" fg:w="1"/><text x="4.5597%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (21 samples, 1.68%)</title><rect x="3.9106%" y="725" width="1.6760%" height="15" fill="rgb(240,54,50)" fg:x="49" fg:w="21"/><text x="4.1606%" y="735.50"></text></g><g><title>libloading::safe::Library::new (17 samples, 1.36%)</title><rect x="4.2298%" y="709" width="1.3567%" height="15" fill="rgb(233,84,52)" fg:x="53" fg:w="17"/><text x="4.4798%" y="719.50"></text></g><g><title>dlopen (15 samples, 1.20%)</title><rect x="4.3895%" y="693" width="1.1971%" height="15" fill="rgb(207,117,47)" fg:x="55" fg:w="15"/><text x="4.6395%" y="703.50"></text></g><g><title>_dl_catch_error (15 samples, 1.20%)</title><rect x="4.3895%" y="677" width="1.1971%" height="15" fill="rgb(249,43,39)" fg:x="55" fg:w="15"/><text x="4.6395%" y="687.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="4.3895%" y="661" width="1.1971%" height="15" fill="rgb(209,38,44)" fg:x="55" fg:w="15"/><text x="4.6395%" y="671.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="4.3895%" y="645" width="1.1971%" height="15" fill="rgb(236,212,23)" fg:x="55" fg:w="15"/><text x="4.6395%" y="655.50"></text></g><g><title>_dl_catch_exception (15 samples, 1.20%)</title><rect x="4.3895%" y="629" width="1.1971%" height="15" fill="rgb(242,79,21)" fg:x="55" fg:w="15"/><text x="4.6395%" y="639.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="5.5068%" y="613" width="0.0798%" height="15" fill="rgb(211,96,35)" fg:x="69" fg:w="1"/><text x="5.7568%" y="623.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="5.5068%" y="597" width="0.0798%" height="15" fill="rgb(253,215,40)" fg:x="69" fg:w="1"/><text x="5.7568%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (22 samples, 1.76%)</title><rect x="3.9106%" y="741" width="1.7558%" height="15" fill="rgb(211,81,21)" fg:x="49" fg:w="22"/><text x="4.1606%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.5866%" y="725" width="0.0798%" height="15" fill="rgb(208,190,38)" fg:x="70" fg:w="1"/><text x="5.8366%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.5866%" y="709" width="0.0798%" height="15" fill="rgb(235,213,38)" fg:x="70" fg:w="1"/><text x="5.8366%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.6664%" y="709" width="0.0798%" height="15" fill="rgb(237,122,38)" fg:x="71" fg:w="1"/><text x="5.9164%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="5.6664%" y="693" width="0.0798%" height="15" fill="rgb(244,218,35)" fg:x="71" fg:w="1"/><text x="5.9164%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.6664%" y="725" width="0.1596%" height="15" fill="rgb(240,68,47)" fg:x="71" fg:w="2"/><text x="5.9164%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7462%" y="709" width="0.0798%" height="15" fill="rgb(210,16,53)" fg:x="72" fg:w="1"/><text x="5.9962%" y="719.50"></text></g><g><title>engine::session::Session::initialize (28 samples, 2.23%)</title><rect x="3.7510%" y="757" width="2.2346%" height="15" fill="rgb(235,124,12)" fg:x="47" fg:w="28"/><text x="4.0010%" y="767.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="5.6664%" y="741" width="0.3192%" height="15" fill="rgb(224,169,11)" fg:x="71" fg:w="4"/><text x="5.9164%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="5.8260%" y="725" width="0.1596%" height="15" fill="rgb(250,166,2)" fg:x="73" fg:w="2"/><text x="6.0760%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.8260%" y="709" width="0.1596%" height="15" fill="rgb(242,216,29)" fg:x="73" fg:w="2"/><text x="6.0760%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.8260%" y="693" width="0.1596%" height="15" fill="rgb(230,116,27)" fg:x="73" fg:w="2"/><text x="6.0760%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.8260%" y="677" width="0.1596%" height="15" fill="rgb(228,99,48)" fg:x="73" fg:w="2"/><text x="6.0760%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.8260%" y="661" width="0.1596%" height="15" fill="rgb(253,11,6)" fg:x="73" fg:w="2"/><text x="6.0760%" y="671.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (4 samples, 0.32%)</title><rect x="5.9856%" y="757" width="0.3192%" height="15" fill="rgb(247,143,39)" fg:x="75" fg:w="4"/><text x="6.2356%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="6.0654%" y="741" width="0.2394%" height="15" fill="rgb(236,97,10)" fg:x="76" fg:w="3"/><text x="6.3154%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.0654%" y="725" width="0.2394%" height="15" fill="rgb(233,208,19)" fg:x="76" fg:w="3"/><text x="6.3154%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.0654%" y="709" width="0.2394%" height="15" fill="rgb(216,164,2)" fg:x="76" fg:w="3"/><text x="6.3154%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.0654%" y="693" width="0.2394%" height="15" fill="rgb(220,129,5)" fg:x="76" fg:w="3"/><text x="6.3154%" y="703.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.0654%" y="677" width="0.2394%" height="15" fill="rgb(242,17,10)" fg:x="76" fg:w="3"/><text x="6.3154%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (37 samples, 2.95%)</title><rect x="3.4318%" y="805" width="2.9529%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="37"/><text x="3.6818%" y="815.50">&lt;en..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (37 samples, 2.95%)</title><rect x="3.4318%" y="789" width="2.9529%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="37"/><text x="3.6818%" y="799.50">eng..</text></g><g><title>engine::session::Session::new (37 samples, 2.95%)</title><rect x="3.4318%" y="773" width="2.9529%" height="15" fill="rgb(233,223,10)" fg:x="43" fg:w="37"/><text x="3.6818%" y="783.50">eng..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="6.3049%" y="757" width="0.0798%" height="15" fill="rgb(215,21,27)" fg:x="79" fg:w="1"/><text x="6.5549%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="6.3049%" y="741" width="0.0798%" height="15" fill="rgb(232,23,21)" fg:x="79" fg:w="1"/><text x="6.5549%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4645%" y="789" width="0.0798%" height="15" fill="rgb(244,5,23)" fg:x="81" fg:w="1"/><text x="6.7145%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.5443%" y="789" width="0.0798%" height="15" fill="rgb(226,81,46)" fg:x="82" fg:w="1"/><text x="6.7943%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="6.5443%" y="773" width="0.0798%" height="15" fill="rgb(247,70,30)" fg:x="82" fg:w="1"/><text x="6.7943%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7039%" y="757" width="0.0798%" height="15" fill="rgb(212,68,19)" fg:x="84" fg:w="1"/><text x="6.9539%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="6.6241%" y="773" width="0.3192%" height="15" fill="rgb(240,187,13)" fg:x="83" fg:w="4"/><text x="6.8741%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.7837%" y="757" width="0.1596%" height="15" fill="rgb(223,113,26)" fg:x="85" fg:w="2"/><text x="7.0337%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.8635%" y="741" width="0.0798%" height="15" fill="rgb(206,192,2)" fg:x="86" fg:w="1"/><text x="7.1135%" y="751.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="6.9433%" y="773" width="0.0798%" height="15" fill="rgb(241,108,4)" fg:x="87" fg:w="1"/><text x="7.1933%" y="783.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="6.9433%" y="757" width="0.0798%" height="15" fill="rgb(247,173,49)" fg:x="87" fg:w="1"/><text x="7.1933%" y="767.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="6.9433%" y="741" width="0.0798%" height="15" fill="rgb(224,114,35)" fg:x="87" fg:w="1"/><text x="7.1933%" y="751.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="6.9433%" y="725" width="0.0798%" height="15" fill="rgb(245,159,27)" fg:x="87" fg:w="1"/><text x="7.1933%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="6.9433%" y="709" width="0.0798%" height="15" fill="rgb(245,172,44)" fg:x="87" fg:w="1"/><text x="7.1933%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="6.9433%" y="693" width="0.0798%" height="15" fill="rgb(236,23,11)" fg:x="87" fg:w="1"/><text x="7.1933%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="6.9433%" y="677" width="0.0798%" height="15" fill="rgb(205,117,38)" fg:x="87" fg:w="1"/><text x="7.1933%" y="687.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="6.9433%" y="661" width="0.0798%" height="15" fill="rgb(237,72,25)" fg:x="87" fg:w="1"/><text x="7.1933%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.0231%" y="741" width="0.1596%" height="15" fill="rgb(244,70,9)" fg:x="88" fg:w="2"/><text x="7.2731%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="7.0231%" y="725" width="0.1596%" height="15" fill="rgb(217,125,39)" fg:x="88" fg:w="2"/><text x="7.2731%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="7.0231%" y="709" width="0.1596%" height="15" fill="rgb(235,36,10)" fg:x="88" fg:w="2"/><text x="7.2731%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1030%" y="693" width="0.0798%" height="15" fill="rgb(251,123,47)" fg:x="89" fg:w="1"/><text x="7.3530%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1030%" y="677" width="0.0798%" height="15" fill="rgb(221,13,13)" fg:x="89" fg:w="1"/><text x="7.3530%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.1030%" y="661" width="0.0798%" height="15" fill="rgb(238,131,9)" fg:x="89" fg:w="1"/><text x="7.3530%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.1030%" y="645" width="0.0798%" height="15" fill="rgb(211,50,8)" fg:x="89" fg:w="1"/><text x="7.3530%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.1030%" y="629" width="0.0798%" height="15" fill="rgb(245,182,24)" fg:x="89" fg:w="1"/><text x="7.3530%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="7.1030%" y="613" width="0.0798%" height="15" fill="rgb(242,14,37)" fg:x="89" fg:w="1"/><text x="7.3530%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.1030%" y="597" width="0.0798%" height="15" fill="rgb(246,228,12)" fg:x="89" fg:w="1"/><text x="7.3530%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="7.3424%" y="677" width="0.4789%" height="15" fill="rgb(213,55,15)" fg:x="92" fg:w="6"/><text x="7.5924%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.5818%" y="661" width="0.2394%" height="15" fill="rgb(209,9,3)" fg:x="95" fg:w="3"/><text x="7.8318%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="7.3424%" y="693" width="0.6385%" height="15" fill="rgb(230,59,30)" fg:x="92" fg:w="8"/><text x="7.5924%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.8212%" y="677" width="0.1596%" height="15" fill="rgb(209,121,21)" fg:x="98" fg:w="2"/><text x="8.0712%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.8212%" y="661" width="0.1596%" height="15" fill="rgb(220,109,13)" fg:x="98" fg:w="2"/><text x="8.0712%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.0607%" y="677" width="0.0798%" height="15" fill="rgb(232,18,1)" fg:x="101" fg:w="1"/><text x="8.3107%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.1405%" y="677" width="0.3990%" height="15" fill="rgb(215,41,42)" fg:x="102" fg:w="5"/><text x="8.3905%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.1405%" y="661" width="0.3990%" height="15" fill="rgb(224,123,36)" fg:x="102" fg:w="5"/><text x="8.3905%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="8.2203%" y="645" width="0.3192%" height="15" fill="rgb(240,125,3)" fg:x="103" fg:w="4"/><text x="8.4703%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="8.3001%" y="629" width="0.2394%" height="15" fill="rgb(205,98,50)" fg:x="104" fg:w="3"/><text x="8.5501%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.5395%" y="661" width="0.0798%" height="15" fill="rgb(205,185,37)" fg:x="107" fg:w="1"/><text x="8.7895%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.5395%" y="645" width="0.0798%" height="15" fill="rgb(238,207,15)" fg:x="107" fg:w="1"/><text x="8.7895%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.5395%" y="629" width="0.0798%" height="15" fill="rgb(213,199,42)" fg:x="107" fg:w="1"/><text x="8.7895%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.6193%" y="661" width="0.3990%" height="15" fill="rgb(235,201,11)" fg:x="108" fg:w="5"/><text x="8.8693%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.6193%" y="645" width="0.3990%" height="15" fill="rgb(207,46,11)" fg:x="108" fg:w="5"/><text x="8.8693%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="8.6193%" y="629" width="0.3990%" height="15" fill="rgb(241,35,35)" fg:x="108" fg:w="5"/><text x="8.8693%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="8.6991%" y="613" width="0.3192%" height="15" fill="rgb(243,32,47)" fg:x="109" fg:w="4"/><text x="8.9491%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.9385%" y="597" width="0.0798%" height="15" fill="rgb(247,202,23)" fg:x="112" fg:w="1"/><text x="9.1885%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.9385%" y="581" width="0.0798%" height="15" fill="rgb(219,102,11)" fg:x="112" fg:w="1"/><text x="9.1885%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="8.9385%" y="565" width="0.0798%" height="15" fill="rgb(243,110,44)" fg:x="112" fg:w="1"/><text x="9.1885%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.0184%" y="645" width="0.0798%" height="15" fill="rgb(222,74,54)" fg:x="113" fg:w="1"/><text x="9.2684%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0184%" y="629" width="0.0798%" height="15" fill="rgb(216,99,12)" fg:x="113" fg:w="1"/><text x="9.2684%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="9.0982%" y="629" width="0.3990%" height="15" fill="rgb(226,22,26)" fg:x="114" fg:w="5"/><text x="9.3482%" y="639.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="9.0982%" y="613" width="0.3990%" height="15" fill="rgb(217,163,10)" fg:x="114" fg:w="5"/><text x="9.3482%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="9.2578%" y="597" width="0.2394%" height="15" fill="rgb(213,25,53)" fg:x="116" fg:w="3"/><text x="9.5078%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.2578%" y="581" width="0.2394%" height="15" fill="rgb(252,105,26)" fg:x="116" fg:w="3"/><text x="9.5078%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.4972%" y="613" width="0.0798%" height="15" fill="rgb(220,39,43)" fg:x="119" fg:w="1"/><text x="9.7472%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.4972%" y="597" width="0.0798%" height="15" fill="rgb(229,68,48)" fg:x="119" fg:w="1"/><text x="9.7472%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.4972%" y="629" width="0.1596%" height="15" fill="rgb(252,8,32)" fg:x="119" fg:w="2"/><text x="9.7472%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5770%" y="613" width="0.0798%" height="15" fill="rgb(223,20,43)" fg:x="120" fg:w="1"/><text x="9.8270%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.5770%" y="597" width="0.0798%" height="15" fill="rgb(229,81,49)" fg:x="120" fg:w="1"/><text x="9.8270%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.5770%" y="581" width="0.0798%" height="15" fill="rgb(236,28,36)" fg:x="120" fg:w="1"/><text x="9.8270%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="9.0982%" y="645" width="0.7981%" height="15" fill="rgb(249,185,26)" fg:x="114" fg:w="10"/><text x="9.3482%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.6568%" y="629" width="0.2394%" height="15" fill="rgb(249,174,33)" fg:x="121" fg:w="3"/><text x="9.9068%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8164%" y="613" width="0.0798%" height="15" fill="rgb(233,201,37)" fg:x="123" fg:w="1"/><text x="10.0664%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="9.0184%" y="661" width="1.0375%" height="15" fill="rgb(221,78,26)" fg:x="113" fg:w="13"/><text x="9.2684%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.8962%" y="645" width="0.1596%" height="15" fill="rgb(250,127,30)" fg:x="124" fg:w="2"/><text x="10.1462%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.9761%" y="629" width="0.0798%" height="15" fill="rgb(230,49,44)" fg:x="125" fg:w="1"/><text x="10.2261%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.9761%" y="613" width="0.0798%" height="15" fill="rgb(229,67,23)" fg:x="125" fg:w="1"/><text x="10.2261%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="8.5395%" y="677" width="1.6760%" height="15" fill="rgb(249,83,47)" fg:x="107" fg:w="21"/><text x="8.7895%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.0559%" y="661" width="0.1596%" height="15" fill="rgb(215,43,3)" fg:x="126" fg:w="2"/><text x="10.3059%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.1357%" y="645" width="0.0798%" height="15" fill="rgb(238,154,13)" fg:x="127" fg:w="1"/><text x="10.3857%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.1357%" y="629" width="0.0798%" height="15" fill="rgb(219,56,2)" fg:x="127" fg:w="1"/><text x="10.3857%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (46 samples, 3.67%)</title><rect x="7.3424%" y="709" width="3.6712%" height="15" fill="rgb(233,0,4)" fg:x="92" fg:w="46"/><text x="7.5924%" y="719.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.03%)</title><rect x="7.9808%" y="693" width="3.0327%" height="15" fill="rgb(235,30,7)" fg:x="100" fg:w="38"/><text x="8.2308%" y="703.50">ser..</text></g><g><title>std::io::Write::write_all (10 samples, 0.80%)</title><rect x="10.2155%" y="677" width="0.7981%" height="15" fill="rgb(250,79,13)" fg:x="128" fg:w="10"/><text x="10.4655%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="10.5347%" y="661" width="0.4789%" height="15" fill="rgb(211,146,34)" fg:x="132" fg:w="6"/><text x="10.7847%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="10.5347%" y="645" width="0.4789%" height="15" fill="rgb(228,22,38)" fg:x="132" fg:w="6"/><text x="10.7847%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="10.6943%" y="629" width="0.3192%" height="15" fill="rgb(235,168,5)" fg:x="134" fg:w="4"/><text x="10.9443%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="10.6943%" y="613" width="0.3192%" height="15" fill="rgb(221,155,16)" fg:x="134" fg:w="4"/><text x="10.9443%" y="623.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="10.6943%" y="597" width="0.3192%" height="15" fill="rgb(215,215,53)" fg:x="134" fg:w="4"/><text x="10.9443%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0934%" y="677" width="0.0798%" height="15" fill="rgb(223,4,10)" fg:x="139" fg:w="1"/><text x="11.3434%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0934%" y="661" width="0.0798%" height="15" fill="rgb(234,103,6)" fg:x="139" fg:w="1"/><text x="11.3434%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="11.1732%" y="661" width="0.2394%" height="15" fill="rgb(227,97,0)" fg:x="140" fg:w="3"/><text x="11.4232%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.5722%" y="597" width="0.0798%" height="15" fill="rgb(234,150,53)" fg:x="145" fg:w="1"/><text x="11.8222%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="11.5722%" y="629" width="0.1596%" height="15" fill="rgb(228,201,54)" fg:x="145" fg:w="2"/><text x="11.8222%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="11.5722%" y="613" width="0.1596%" height="15" fill="rgb(222,22,37)" fg:x="145" fg:w="2"/><text x="11.8222%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.6520%" y="597" width="0.0798%" height="15" fill="rgb(237,53,32)" fg:x="146" fg:w="1"/><text x="11.9020%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="11.0136%" y="709" width="0.9577%" height="15" fill="rgb(233,25,53)" fg:x="138" fg:w="12"/><text x="11.2636%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="11.0136%" y="693" width="0.9577%" height="15" fill="rgb(210,40,34)" fg:x="138" fg:w="12"/><text x="11.2636%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="11.1732%" y="677" width="0.7981%" height="15" fill="rgb(241,220,44)" fg:x="140" fg:w="10"/><text x="11.4232%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.4126%" y="661" width="0.5587%" height="15" fill="rgb(235,28,35)" fg:x="143" fg:w="7"/><text x="11.6626%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.4126%" y="645" width="0.5587%" height="15" fill="rgb(210,56,17)" fg:x="143" fg:w="7"/><text x="11.6626%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.7318%" y="629" width="0.2394%" height="15" fill="rgb(224,130,29)" fg:x="147" fg:w="3"/><text x="11.9818%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="11.7318%" y="613" width="0.2394%" height="15" fill="rgb(235,212,8)" fg:x="147" fg:w="3"/><text x="11.9818%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.8117%" y="597" width="0.1596%" height="15" fill="rgb(223,33,50)" fg:x="148" fg:w="2"/><text x="12.0617%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="11.9713%" y="709" width="0.0798%" height="15" fill="rgb(219,149,13)" fg:x="150" fg:w="1"/><text x="12.2213%" y="719.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="12.0511%" y="693" width="0.0798%" height="15" fill="rgb(250,156,29)" fg:x="151" fg:w="1"/><text x="12.3011%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="12.0511%" y="677" width="0.0798%" height="15" fill="rgb(216,193,19)" fg:x="151" fg:w="1"/><text x="12.3011%" y="687.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="12.0511%" y="661" width="0.0798%" height="15" fill="rgb(216,135,14)" fg:x="151" fg:w="1"/><text x="12.3011%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.1309%" y="693" width="0.0798%" height="15" fill="rgb(241,47,5)" fg:x="152" fg:w="1"/><text x="12.3809%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1309%" y="677" width="0.0798%" height="15" fill="rgb(233,42,35)" fg:x="152" fg:w="1"/><text x="12.3809%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="12.3703%" y="645" width="0.0798%" height="15" fill="rgb(231,13,6)" fg:x="155" fg:w="1"/><text x="12.6203%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="12.3703%" y="661" width="0.1596%" height="15" fill="rgb(207,181,40)" fg:x="155" fg:w="2"/><text x="12.6203%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4501%" y="645" width="0.0798%" height="15" fill="rgb(254,173,49)" fg:x="156" fg:w="1"/><text x="12.7001%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.4501%" y="629" width="0.0798%" height="15" fill="rgb(221,1,38)" fg:x="156" fg:w="1"/><text x="12.7001%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="12.4501%" y="613" width="0.0798%" height="15" fill="rgb(206,124,46)" fg:x="156" fg:w="1"/><text x="12.7001%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5299%" y="629" width="0.0798%" height="15" fill="rgb(249,21,11)" fg:x="157" fg:w="1"/><text x="12.7799%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5299%" y="661" width="0.1596%" height="15" fill="rgb(222,201,40)" fg:x="157" fg:w="2"/><text x="12.7799%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.5299%" y="645" width="0.1596%" height="15" fill="rgb(235,61,29)" fg:x="157" fg:w="2"/><text x="12.7799%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6097%" y="629" width="0.0798%" height="15" fill="rgb(219,207,3)" fg:x="158" fg:w="1"/><text x="12.8597%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6097%" y="613" width="0.0798%" height="15" fill="rgb(222,56,46)" fg:x="158" fg:w="1"/><text x="12.8597%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.6097%" y="597" width="0.0798%" height="15" fill="rgb(239,76,54)" fg:x="158" fg:w="1"/><text x="12.8597%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="12.8492%" y="629" width="0.1596%" height="15" fill="rgb(231,124,27)" fg:x="161" fg:w="2"/><text x="13.0992%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.0088%" y="613" width="0.0798%" height="15" fill="rgb(249,195,6)" fg:x="163" fg:w="1"/><text x="13.2588%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0886%" y="565" width="0.0798%" height="15" fill="rgb(237,174,47)" fg:x="164" fg:w="1"/><text x="13.3386%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0886%" y="549" width="0.0798%" height="15" fill="rgb(206,201,31)" fg:x="164" fg:w="1"/><text x="13.3386%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.0886%" y="533" width="0.0798%" height="15" fill="rgb(231,57,52)" fg:x="164" fg:w="1"/><text x="13.3386%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="13.0886%" y="613" width="0.3192%" height="15" fill="rgb(248,177,22)" fg:x="164" fg:w="4"/><text x="13.3386%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="13.0886%" y="597" width="0.3192%" height="15" fill="rgb(215,211,37)" fg:x="164" fg:w="4"/><text x="13.3386%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="13.0886%" y="581" width="0.3192%" height="15" fill="rgb(241,128,51)" fg:x="164" fg:w="4"/><text x="13.3386%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="13.1684%" y="565" width="0.2394%" height="15" fill="rgb(227,165,31)" fg:x="165" fg:w="3"/><text x="13.4184%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.1684%" y="549" width="0.2394%" height="15" fill="rgb(228,167,24)" fg:x="165" fg:w="3"/><text x="13.4184%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.4876%" y="565" width="0.1596%" height="15" fill="rgb(228,143,12)" fg:x="169" fg:w="2"/><text x="13.7376%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5674%" y="549" width="0.0798%" height="15" fill="rgb(249,149,8)" fg:x="170" fg:w="1"/><text x="13.8174%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5674%" y="533" width="0.0798%" height="15" fill="rgb(243,35,44)" fg:x="170" fg:w="1"/><text x="13.8174%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5674%" y="517" width="0.0798%" height="15" fill="rgb(246,89,9)" fg:x="170" fg:w="1"/><text x="13.8174%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="13.0088%" y="629" width="0.9577%" height="15" fill="rgb(233,213,13)" fg:x="163" fg:w="12"/><text x="13.2588%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="13.4078%" y="613" width="0.5587%" height="15" fill="rgb(233,141,41)" fg:x="168" fg:w="7"/><text x="13.6578%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="13.4078%" y="597" width="0.5587%" height="15" fill="rgb(239,167,4)" fg:x="168" fg:w="7"/><text x="13.6578%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="13.4876%" y="581" width="0.4789%" height="15" fill="rgb(209,217,16)" fg:x="169" fg:w="6"/><text x="13.7376%" y="591.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="13.6472%" y="565" width="0.3192%" height="15" fill="rgb(219,88,35)" fg:x="171" fg:w="4"/><text x="13.8972%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="12.8492%" y="645" width="1.2769%" height="15" fill="rgb(220,193,23)" fg:x="161" fg:w="16"/><text x="13.0992%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="13.9665%" y="629" width="0.1596%" height="15" fill="rgb(230,90,52)" fg:x="175" fg:w="2"/><text x="14.2165%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0463%" y="613" width="0.0798%" height="15" fill="rgb(252,106,19)" fg:x="176" fg:w="1"/><text x="14.2963%" y="623.50"></text></g><g><title>engine::session::Session::flush (96 samples, 7.66%)</title><rect x="6.6241%" y="789" width="7.6616%" height="15" fill="rgb(206,74,20)" fg:x="83" fg:w="96"/><text x="6.8741%" y="799.50">engine::se..</text></g><g><title>engine::session::state::State::close (91 samples, 7.26%)</title><rect x="7.0231%" y="773" width="7.2626%" height="15" fill="rgb(230,138,44)" fg:x="88" fg:w="91"/><text x="7.2731%" y="783.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (91 samples, 7.26%)</title><rect x="7.0231%" y="757" width="7.2626%" height="15" fill="rgb(235,182,43)" fg:x="88" fg:w="91"/><text x="7.2731%" y="767.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (89 samples, 7.10%)</title><rect x="7.1828%" y="741" width="7.1030%" height="15" fill="rgb(242,16,51)" fg:x="90" fg:w="89"/><text x="7.4328%" y="751.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (88 samples, 7.02%)</title><rect x="7.2626%" y="725" width="7.0231%" height="15" fill="rgb(248,9,4)" fg:x="91" fg:w="88"/><text x="7.5126%" y="735.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.23%)</title><rect x="12.0511%" y="709" width="2.2346%" height="15" fill="rgb(210,31,22)" fg:x="151" fg:w="28"/><text x="12.3011%" y="719.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.08%)</title><rect x="12.2107%" y="693" width="2.0750%" height="15" fill="rgb(239,54,39)" fg:x="153" fg:w="26"/><text x="12.4607%" y="703.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (26 samples, 2.08%)</title><rect x="12.2107%" y="677" width="2.0750%" height="15" fill="rgb(230,99,41)" fg:x="153" fg:w="26"/><text x="12.4607%" y="687.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.60%)</title><rect x="12.6895%" y="661" width="1.5962%" height="15" fill="rgb(253,106,12)" fg:x="159" fg:w="20"/><text x="12.9395%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.1261%" y="645" width="0.1596%" height="15" fill="rgb(213,46,41)" fg:x="177" fg:w="2"/><text x="14.3761%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2059%" y="629" width="0.0798%" height="15" fill="rgb(215,133,35)" fg:x="178" fg:w="1"/><text x="14.4559%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.2059%" y="613" width="0.0798%" height="15" fill="rgb(213,28,5)" fg:x="178" fg:w="1"/><text x="14.4559%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.2857%" y="757" width="0.0798%" height="15" fill="rgb(215,77,49)" fg:x="179" fg:w="1"/><text x="14.5357%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.2857%" y="741" width="0.0798%" height="15" fill="rgb(248,100,22)" fg:x="179" fg:w="1"/><text x="14.5357%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.2857%" y="725" width="0.0798%" height="15" fill="rgb(208,67,9)" fg:x="179" fg:w="1"/><text x="14.5357%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.2857%" y="709" width="0.0798%" height="15" fill="rgb(219,133,21)" fg:x="179" fg:w="1"/><text x="14.5357%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.2857%" y="693" width="0.0798%" height="15" fill="rgb(246,46,29)" fg:x="179" fg:w="1"/><text x="14.5357%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.3655%" y="757" width="0.0798%" height="15" fill="rgb(246,185,52)" fg:x="180" fg:w="1"/><text x="14.6155%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.3655%" y="741" width="0.0798%" height="15" fill="rgb(252,136,11)" fg:x="180" fg:w="1"/><text x="14.6155%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3655%" y="725" width="0.0798%" height="15" fill="rgb(219,138,53)" fg:x="180" fg:w="1"/><text x="14.6155%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3655%" y="709" width="0.0798%" height="15" fill="rgb(211,51,23)" fg:x="180" fg:w="1"/><text x="14.6155%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.5251%" y="725" width="0.0798%" height="15" fill="rgb(247,221,28)" fg:x="182" fg:w="1"/><text x="14.7751%" y="735.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="14.4453%" y="757" width="0.2394%" height="15" fill="rgb(251,222,45)" fg:x="181" fg:w="3"/><text x="14.6953%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.4453%" y="741" width="0.2394%" height="15" fill="rgb(217,162,53)" fg:x="181" fg:w="3"/><text x="14.6953%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.6049%" y="725" width="0.0798%" height="15" fill="rgb(229,93,14)" fg:x="183" fg:w="1"/><text x="14.8549%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.6049%" y="709" width="0.0798%" height="15" fill="rgb(209,67,49)" fg:x="183" fg:w="1"/><text x="14.8549%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.6049%" y="693" width="0.0798%" height="15" fill="rgb(213,87,29)" fg:x="183" fg:w="1"/><text x="14.8549%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6848%" y="693" width="0.0798%" height="15" fill="rgb(205,151,52)" fg:x="184" fg:w="1"/><text x="14.9348%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7646%" y="677" width="0.0798%" height="15" fill="rgb(253,215,39)" fg:x="185" fg:w="1"/><text x="15.0146%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7646%" y="661" width="0.0798%" height="15" fill="rgb(221,220,41)" fg:x="185" fg:w="1"/><text x="15.0146%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7646%" y="645" width="0.0798%" height="15" fill="rgb(218,133,21)" fg:x="185" fg:w="1"/><text x="15.0146%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="14.6848%" y="741" width="0.2394%" height="15" fill="rgb(221,193,43)" fg:x="184" fg:w="3"/><text x="14.9348%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.6848%" y="725" width="0.2394%" height="15" fill="rgb(240,128,52)" fg:x="184" fg:w="3"/><text x="14.9348%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="14.6848%" y="709" width="0.2394%" height="15" fill="rgb(253,114,12)" fg:x="184" fg:w="3"/><text x="14.9348%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.7646%" y="693" width="0.1596%" height="15" fill="rgb(215,223,47)" fg:x="185" fg:w="2"/><text x="15.0146%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8444%" y="677" width="0.0798%" height="15" fill="rgb(248,225,23)" fg:x="186" fg:w="1"/><text x="15.0944%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.8444%" y="661" width="0.0798%" height="15" fill="rgb(250,108,0)" fg:x="186" fg:w="1"/><text x="15.0944%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.8444%" y="645" width="0.0798%" height="15" fill="rgb(228,208,7)" fg:x="186" fg:w="1"/><text x="15.0944%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8444%" y="629" width="0.0798%" height="15" fill="rgb(244,45,10)" fg:x="186" fg:w="1"/><text x="15.0944%" y="639.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="15.0040%" y="677" width="0.3990%" height="15" fill="rgb(207,125,25)" fg:x="188" fg:w="5"/><text x="15.2540%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="14.2857%" y="773" width="1.1971%" height="15" fill="rgb(210,195,18)" fg:x="179" fg:w="15"/><text x="14.5357%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="14.6848%" y="757" width="0.7981%" height="15" fill="rgb(249,80,12)" fg:x="184" fg:w="10"/><text x="14.9348%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="14.9242%" y="741" width="0.5587%" height="15" fill="rgb(221,65,9)" fg:x="187" fg:w="7"/><text x="15.1742%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="14.9242%" y="725" width="0.5587%" height="15" fill="rgb(235,49,36)" fg:x="187" fg:w="7"/><text x="15.1742%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="15.0040%" y="709" width="0.4789%" height="15" fill="rgb(225,32,20)" fg:x="188" fg:w="6"/><text x="15.2540%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="15.0040%" y="693" width="0.4789%" height="15" fill="rgb(215,141,46)" fg:x="188" fg:w="6"/><text x="15.2540%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4030%" y="677" width="0.0798%" height="15" fill="rgb(250,160,47)" fg:x="193" fg:w="1"/><text x="15.6530%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.4030%" y="661" width="0.0798%" height="15" fill="rgb(216,222,40)" fg:x="193" fg:w="1"/><text x="15.6530%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4828%" y="693" width="0.0798%" height="15" fill="rgb(234,217,39)" fg:x="194" fg:w="1"/><text x="15.7328%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4828%" y="677" width="0.0798%" height="15" fill="rgb(207,178,40)" fg:x="194" fg:w="1"/><text x="15.7328%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4828%" y="661" width="0.0798%" height="15" fill="rgb(221,136,13)" fg:x="194" fg:w="1"/><text x="15.7328%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.4828%" y="725" width="0.1596%" height="15" fill="rgb(249,199,10)" fg:x="194" fg:w="2"/><text x="15.7328%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.4828%" y="709" width="0.1596%" height="15" fill="rgb(249,222,13)" fg:x="194" fg:w="2"/><text x="15.7328%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5626%" y="693" width="0.0798%" height="15" fill="rgb(244,185,38)" fg:x="195" fg:w="1"/><text x="15.8126%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5626%" y="677" width="0.0798%" height="15" fill="rgb(236,202,9)" fg:x="195" fg:w="1"/><text x="15.8126%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5626%" y="661" width="0.0798%" height="15" fill="rgb(250,229,37)" fg:x="195" fg:w="1"/><text x="15.8126%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7223%" y="693" width="0.0798%" height="15" fill="rgb(206,174,23)" fg:x="197" fg:w="1"/><text x="15.9723%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7223%" y="677" width="0.0798%" height="15" fill="rgb(211,33,43)" fg:x="197" fg:w="1"/><text x="15.9723%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7223%" y="661" width="0.0798%" height="15" fill="rgb(245,58,50)" fg:x="197" fg:w="1"/><text x="15.9723%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7223%" y="645" width="0.0798%" height="15" fill="rgb(244,68,36)" fg:x="197" fg:w="1"/><text x="15.9723%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7223%" y="629" width="0.0798%" height="15" fill="rgb(232,229,15)" fg:x="197" fg:w="1"/><text x="15.9723%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.7223%" y="613" width="0.0798%" height="15" fill="rgb(254,30,23)" fg:x="197" fg:w="1"/><text x="15.9723%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.7223%" y="597" width="0.0798%" height="15" fill="rgb(235,160,14)" fg:x="197" fg:w="1"/><text x="15.9723%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.7223%" y="581" width="0.0798%" height="15" fill="rgb(212,155,44)" fg:x="197" fg:w="1"/><text x="15.9723%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.7223%" y="565" width="0.0798%" height="15" fill="rgb(226,2,50)" fg:x="197" fg:w="1"/><text x="15.9723%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.7223%" y="549" width="0.0798%" height="15" fill="rgb(234,177,6)" fg:x="197" fg:w="1"/><text x="15.9723%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8819%" y="629" width="0.0798%" height="15" fill="rgb(217,24,9)" fg:x="199" fg:w="1"/><text x="16.1319%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8819%" y="613" width="0.0798%" height="15" fill="rgb(220,13,46)" fg:x="199" fg:w="1"/><text x="16.1319%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="15.4828%" y="757" width="0.5587%" height="15" fill="rgb(239,221,27)" fg:x="194" fg:w="7"/><text x="15.7328%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="15.4828%" y="741" width="0.5587%" height="15" fill="rgb(222,198,25)" fg:x="194" fg:w="7"/><text x="15.7328%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="15.6425%" y="725" width="0.3990%" height="15" fill="rgb(211,99,13)" fg:x="196" fg:w="5"/><text x="15.8925%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="15.6425%" y="709" width="0.3990%" height="15" fill="rgb(232,111,31)" fg:x="196" fg:w="5"/><text x="15.8925%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="15.8021%" y="693" width="0.2394%" height="15" fill="rgb(245,82,37)" fg:x="198" fg:w="3"/><text x="16.0521%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.8021%" y="677" width="0.2394%" height="15" fill="rgb(227,149,46)" fg:x="198" fg:w="3"/><text x="16.0521%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="15.8021%" y="661" width="0.2394%" height="15" fill="rgb(218,36,50)" fg:x="198" fg:w="3"/><text x="16.0521%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.8819%" y="645" width="0.1596%" height="15" fill="rgb(226,80,48)" fg:x="199" fg:w="2"/><text x="16.1319%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9617%" y="629" width="0.0798%" height="15" fill="rgb(238,224,15)" fg:x="200" fg:w="1"/><text x="16.2117%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9617%" y="613" width="0.0798%" height="15" fill="rgb(241,136,10)" fg:x="200" fg:w="1"/><text x="16.2117%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="15.9617%" y="597" width="0.0798%" height="15" fill="rgb(208,32,45)" fg:x="200" fg:w="1"/><text x="16.2117%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0415%" y="709" width="0.0798%" height="15" fill="rgb(207,135,9)" fg:x="201" fg:w="1"/><text x="16.2915%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0415%" y="693" width="0.0798%" height="15" fill="rgb(206,86,44)" fg:x="201" fg:w="1"/><text x="16.2915%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.0415%" y="677" width="0.0798%" height="15" fill="rgb(245,177,15)" fg:x="201" fg:w="1"/><text x="16.2915%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="16.0415%" y="757" width="0.3192%" height="15" fill="rgb(206,64,50)" fg:x="201" fg:w="4"/><text x="16.2915%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="16.0415%" y="741" width="0.3192%" height="15" fill="rgb(234,36,40)" fg:x="201" fg:w="4"/><text x="16.2915%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="16.0415%" y="725" width="0.3192%" height="15" fill="rgb(213,64,8)" fg:x="201" fg:w="4"/><text x="16.2915%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.1213%" y="709" width="0.2394%" height="15" fill="rgb(210,75,36)" fg:x="202" fg:w="3"/><text x="16.3713%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="16.1213%" y="693" width="0.2394%" height="15" fill="rgb(229,88,21)" fg:x="202" fg:w="3"/><text x="16.3713%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="16.1213%" y="677" width="0.2394%" height="15" fill="rgb(252,204,47)" fg:x="202" fg:w="3"/><text x="16.3713%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2809%" y="661" width="0.0798%" height="15" fill="rgb(208,77,27)" fg:x="204" fg:w="1"/><text x="16.5309%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.3607%" y="677" width="0.0798%" height="15" fill="rgb(221,76,26)" fg:x="205" fg:w="1"/><text x="16.6107%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.3607%" y="661" width="0.0798%" height="15" fill="rgb(225,139,18)" fg:x="205" fg:w="1"/><text x="16.6107%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.3607%" y="645" width="0.0798%" height="15" fill="rgb(230,137,11)" fg:x="205" fg:w="1"/><text x="16.6107%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.3607%" y="709" width="0.1596%" height="15" fill="rgb(212,28,1)" fg:x="205" fg:w="2"/><text x="16.6107%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.3607%" y="693" width="0.1596%" height="15" fill="rgb(248,164,17)" fg:x="205" fg:w="2"/><text x="16.6107%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4405%" y="677" width="0.0798%" height="15" fill="rgb(222,171,42)" fg:x="206" fg:w="1"/><text x="16.6905%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4405%" y="661" width="0.0798%" height="15" fill="rgb(243,84,45)" fg:x="206" fg:w="1"/><text x="16.6905%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.4405%" y="645" width="0.0798%" height="15" fill="rgb(252,49,23)" fg:x="206" fg:w="1"/><text x="16.6905%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4405%" y="629" width="0.0798%" height="15" fill="rgb(215,19,7)" fg:x="206" fg:w="1"/><text x="16.6905%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.4405%" y="613" width="0.0798%" height="15" fill="rgb(238,81,41)" fg:x="206" fg:w="1"/><text x="16.6905%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.4405%" y="597" width="0.0798%" height="15" fill="rgb(210,199,37)" fg:x="206" fg:w="1"/><text x="16.6905%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4405%" y="581" width="0.0798%" height="15" fill="rgb(244,192,49)" fg:x="206" fg:w="1"/><text x="16.6905%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.5204%" y="677" width="0.0798%" height="15" fill="rgb(226,211,11)" fg:x="207" fg:w="1"/><text x="16.7704%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.5204%" y="661" width="0.0798%" height="15" fill="rgb(236,162,54)" fg:x="207" fg:w="1"/><text x="16.7704%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.5204%" y="645" width="0.0798%" height="15" fill="rgb(220,229,9)" fg:x="207" fg:w="1"/><text x="16.7704%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.5204%" y="629" width="0.0798%" height="15" fill="rgb(250,87,22)" fg:x="207" fg:w="1"/><text x="16.7704%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5204%" y="613" width="0.0798%" height="15" fill="rgb(239,43,17)" fg:x="207" fg:w="1"/><text x="16.7704%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.6002%" y="613" width="0.0798%" height="15" fill="rgb(231,177,25)" fg:x="208" fg:w="1"/><text x="16.8502%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.6002%" y="597" width="0.0798%" height="15" fill="rgb(219,179,1)" fg:x="208" fg:w="1"/><text x="16.8502%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.6002%" y="581" width="0.0798%" height="15" fill="rgb(238,219,53)" fg:x="208" fg:w="1"/><text x="16.8502%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="16.3607%" y="741" width="0.3990%" height="15" fill="rgb(232,167,36)" fg:x="205" fg:w="5"/><text x="16.6107%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="16.3607%" y="725" width="0.3990%" height="15" fill="rgb(244,19,51)" fg:x="205" fg:w="5"/><text x="16.6107%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="16.5204%" y="709" width="0.2394%" height="15" fill="rgb(224,6,22)" fg:x="207" fg:w="3"/><text x="16.7704%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.5204%" y="693" width="0.2394%" height="15" fill="rgb(224,145,5)" fg:x="207" fg:w="3"/><text x="16.7704%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.6002%" y="677" width="0.1596%" height="15" fill="rgb(234,130,49)" fg:x="208" fg:w="2"/><text x="16.8502%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.6002%" y="661" width="0.1596%" height="15" fill="rgb(254,6,2)" fg:x="208" fg:w="2"/><text x="16.8502%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="16.6002%" y="645" width="0.1596%" height="15" fill="rgb(208,96,46)" fg:x="208" fg:w="2"/><text x="16.8502%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.6002%" y="629" width="0.1596%" height="15" fill="rgb(239,3,39)" fg:x="208" fg:w="2"/><text x="16.8502%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6800%" y="613" width="0.0798%" height="15" fill="rgb(233,210,1)" fg:x="209" fg:w="1"/><text x="16.9300%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6800%" y="597" width="0.0798%" height="15" fill="rgb(244,137,37)" fg:x="209" fg:w="1"/><text x="16.9300%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (33 samples, 2.63%)</title><rect x="14.2857%" y="789" width="2.6337%" height="15" fill="rgb(240,136,2)" fg:x="179" fg:w="33"/><text x="14.5357%" y="799.50">pl..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.44%)</title><rect x="15.4828%" y="773" width="1.4366%" height="15" fill="rgb(239,18,37)" fg:x="194" fg:w="18"/><text x="15.7328%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="16.3607%" y="757" width="0.5587%" height="15" fill="rgb(218,185,22)" fg:x="205" fg:w="7"/><text x="16.6107%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="16.7598%" y="741" width="0.1596%" height="15" fill="rgb(225,218,4)" fg:x="210" fg:w="2"/><text x="17.0098%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.7598%" y="725" width="0.1596%" height="15" fill="rgb(230,182,32)" fg:x="210" fg:w="2"/><text x="17.0098%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="16.8396%" y="709" width="0.0798%" height="15" fill="rgb(242,56,43)" fg:x="211" fg:w="1"/><text x="17.0896%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.8396%" y="693" width="0.0798%" height="15" fill="rgb(233,99,24)" fg:x="211" fg:w="1"/><text x="17.0896%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.8396%" y="677" width="0.0798%" height="15" fill="rgb(234,209,42)" fg:x="211" fg:w="1"/><text x="17.0896%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="661" width="0.0798%" height="15" fill="rgb(227,7,12)" fg:x="211" fg:w="1"/><text x="17.0896%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.8396%" y="645" width="0.0798%" height="15" fill="rgb(245,203,43)" fg:x="211" fg:w="1"/><text x="17.0896%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="629" width="0.0798%" height="15" fill="rgb(238,205,33)" fg:x="211" fg:w="1"/><text x="17.0896%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="16.8396%" y="613" width="0.0798%" height="15" fill="rgb(231,56,7)" fg:x="211" fg:w="1"/><text x="17.0896%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="16.8396%" y="597" width="0.0798%" height="15" fill="rgb(244,186,29)" fg:x="211" fg:w="1"/><text x="17.0896%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8396%" y="581" width="0.0798%" height="15" fill="rgb(234,111,31)" fg:x="211" fg:w="1"/><text x="17.0896%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8396%" y="565" width="0.0798%" height="15" fill="rgb(241,149,10)" fg:x="211" fg:w="1"/><text x="17.0896%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.8396%" y="549" width="0.0798%" height="15" fill="rgb(249,206,44)" fg:x="211" fg:w="1"/><text x="17.0896%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.8396%" y="533" width="0.0798%" height="15" fill="rgb(251,153,30)" fg:x="211" fg:w="1"/><text x="17.0896%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.8396%" y="517" width="0.0798%" height="15" fill="rgb(239,152,38)" fg:x="211" fg:w="1"/><text x="17.0896%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.8396%" y="501" width="0.0798%" height="15" fill="rgb(249,139,47)" fg:x="211" fg:w="1"/><text x="17.0896%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.8396%" y="485" width="0.0798%" height="15" fill="rgb(244,64,35)" fg:x="211" fg:w="1"/><text x="17.0896%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.8396%" y="469" width="0.0798%" height="15" fill="rgb(216,46,15)" fg:x="211" fg:w="1"/><text x="17.0896%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="16.8396%" y="453" width="0.0798%" height="15" fill="rgb(250,74,19)" fg:x="211" fg:w="1"/><text x="17.0896%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="16.8396%" y="437" width="0.0798%" height="15" fill="rgb(249,42,33)" fg:x="211" fg:w="1"/><text x="17.0896%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="16.9194%" y="757" width="0.0798%" height="15" fill="rgb(242,149,17)" fg:x="212" fg:w="1"/><text x="17.1694%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="16.9194%" y="741" width="0.0798%" height="15" fill="rgb(244,29,21)" fg:x="212" fg:w="1"/><text x="17.1694%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9194%" y="725" width="0.0798%" height="15" fill="rgb(220,130,37)" fg:x="212" fg:w="1"/><text x="17.1694%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9194%" y="709" width="0.0798%" height="15" fill="rgb(211,67,2)" fg:x="212" fg:w="1"/><text x="17.1694%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.9194%" y="693" width="0.0798%" height="15" fill="rgb(235,68,52)" fg:x="212" fg:w="1"/><text x="17.1694%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.9194%" y="677" width="0.0798%" height="15" fill="rgb(246,142,3)" fg:x="212" fg:w="1"/><text x="17.1694%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.9194%" y="661" width="0.0798%" height="15" fill="rgb(241,25,7)" fg:x="212" fg:w="1"/><text x="17.1694%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9194%" y="645" width="0.0798%" height="15" fill="rgb(242,119,39)" fg:x="212" fg:w="1"/><text x="17.1694%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9194%" y="629" width="0.0798%" height="15" fill="rgb(241,98,45)" fg:x="212" fg:w="1"/><text x="17.1694%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.9194%" y="613" width="0.0798%" height="15" fill="rgb(254,28,30)" fg:x="212" fg:w="1"/><text x="17.1694%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.9194%" y="597" width="0.0798%" height="15" fill="rgb(241,142,54)" fg:x="212" fg:w="1"/><text x="17.1694%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.9194%" y="581" width="0.0798%" height="15" fill="rgb(222,85,15)" fg:x="212" fg:w="1"/><text x="17.1694%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.9194%" y="565" width="0.0798%" height="15" fill="rgb(210,85,47)" fg:x="212" fg:w="1"/><text x="17.1694%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9194%" y="549" width="0.0798%" height="15" fill="rgb(224,206,25)" fg:x="212" fg:w="1"/><text x="17.1694%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9992%" y="741" width="0.0798%" height="15" fill="rgb(243,201,19)" fg:x="213" fg:w="1"/><text x="17.2492%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.9992%" y="757" width="0.2394%" height="15" fill="rgb(236,59,4)" fg:x="213" fg:w="3"/><text x="17.2492%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.0790%" y="741" width="0.1596%" height="15" fill="rgb(254,179,45)" fg:x="214" fg:w="2"/><text x="17.3290%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.0790%" y="725" width="0.1596%" height="15" fill="rgb(226,14,10)" fg:x="214" fg:w="2"/><text x="17.3290%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.0790%" y="709" width="0.1596%" height="15" fill="rgb(244,27,41)" fg:x="214" fg:w="2"/><text x="17.3290%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.0790%" y="693" width="0.1596%" height="15" fill="rgb(235,35,32)" fg:x="214" fg:w="2"/><text x="17.3290%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1588%" y="677" width="0.0798%" height="15" fill="rgb(218,68,31)" fg:x="215" fg:w="1"/><text x="17.4088%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2386%" y="757" width="0.0798%" height="15" fill="rgb(207,120,37)" fg:x="216" fg:w="1"/><text x="17.4886%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.3184%" y="757" width="0.0798%" height="15" fill="rgb(227,98,0)" fg:x="217" fg:w="1"/><text x="17.5684%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="17.3184%" y="741" width="0.0798%" height="15" fill="rgb(207,7,3)" fg:x="217" fg:w="1"/><text x="17.5684%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="17.3982%" y="741" width="0.2394%" height="15" fill="rgb(206,98,19)" fg:x="218" fg:w="3"/><text x="17.6482%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.3982%" y="725" width="0.2394%" height="15" fill="rgb(217,5,26)" fg:x="218" fg:w="3"/><text x="17.6482%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.4781%" y="709" width="0.1596%" height="15" fill="rgb(235,190,38)" fg:x="219" fg:w="2"/><text x="17.7281%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5579%" y="693" width="0.0798%" height="15" fill="rgb(247,86,24)" fg:x="220" fg:w="1"/><text x="17.8079%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5579%" y="677" width="0.0798%" height="15" fill="rgb(205,101,16)" fg:x="220" fg:w="1"/><text x="17.8079%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5579%" y="661" width="0.0798%" height="15" fill="rgb(246,168,33)" fg:x="220" fg:w="1"/><text x="17.8079%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5579%" y="645" width="0.0798%" height="15" fill="rgb(231,114,1)" fg:x="220" fg:w="1"/><text x="17.8079%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5579%" y="629" width="0.0798%" height="15" fill="rgb(207,184,53)" fg:x="220" fg:w="1"/><text x="17.8079%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="17.3982%" y="757" width="0.3192%" height="15" fill="rgb(224,95,51)" fg:x="218" fg:w="4"/><text x="17.6482%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.6377%" y="741" width="0.0798%" height="15" fill="rgb(212,188,45)" fg:x="221" fg:w="1"/><text x="17.8877%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="17.6377%" y="725" width="0.0798%" height="15" fill="rgb(223,154,38)" fg:x="221" fg:w="1"/><text x="17.8877%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.7175%" y="709" width="0.1596%" height="15" fill="rgb(251,22,52)" fg:x="222" fg:w="2"/><text x="17.9675%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.7973%" y="693" width="0.0798%" height="15" fill="rgb(229,209,22)" fg:x="223" fg:w="1"/><text x="18.0473%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7973%" y="677" width="0.0798%" height="15" fill="rgb(234,138,34)" fg:x="223" fg:w="1"/><text x="18.0473%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7973%" y="661" width="0.0798%" height="15" fill="rgb(212,95,11)" fg:x="223" fg:w="1"/><text x="18.0473%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7973%" y="645" width="0.0798%" height="15" fill="rgb(240,179,47)" fg:x="223" fg:w="1"/><text x="18.0473%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7973%" y="629" width="0.0798%" height="15" fill="rgb(240,163,11)" fg:x="223" fg:w="1"/><text x="18.0473%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7973%" y="613" width="0.0798%" height="15" fill="rgb(236,37,12)" fg:x="223" fg:w="1"/><text x="18.0473%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7973%" y="597" width="0.0798%" height="15" fill="rgb(232,164,16)" fg:x="223" fg:w="1"/><text x="18.0473%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7973%" y="581" width="0.0798%" height="15" fill="rgb(244,205,15)" fg:x="223" fg:w="1"/><text x="18.0473%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7973%" y="565" width="0.0798%" height="15" fill="rgb(223,117,47)" fg:x="223" fg:w="1"/><text x="18.0473%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7973%" y="549" width="0.0798%" height="15" fill="rgb(244,107,35)" fg:x="223" fg:w="1"/><text x="18.0473%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7973%" y="533" width="0.0798%" height="15" fill="rgb(205,140,8)" fg:x="223" fg:w="1"/><text x="18.0473%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7973%" y="517" width="0.0798%" height="15" fill="rgb(228,84,46)" fg:x="223" fg:w="1"/><text x="18.0473%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7973%" y="501" width="0.0798%" height="15" fill="rgb(254,188,9)" fg:x="223" fg:w="1"/><text x="18.0473%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7973%" y="485" width="0.0798%" height="15" fill="rgb(206,112,54)" fg:x="223" fg:w="1"/><text x="18.0473%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7973%" y="469" width="0.0798%" height="15" fill="rgb(216,84,49)" fg:x="223" fg:w="1"/><text x="18.0473%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="17.7973%" y="453" width="0.0798%" height="15" fill="rgb(214,194,35)" fg:x="223" fg:w="1"/><text x="18.0473%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="17.7973%" y="437" width="0.0798%" height="15" fill="rgb(249,28,3)" fg:x="223" fg:w="1"/><text x="18.0473%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.04%)</title><rect x="16.9194%" y="789" width="1.0375%" height="15" fill="rgb(222,56,52)" fg:x="212" fg:w="13"/><text x="17.1694%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="16.9194%" y="773" width="1.0375%" height="15" fill="rgb(245,217,50)" fg:x="212" fg:w="13"/><text x="17.1694%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="17.7175%" y="757" width="0.2394%" height="15" fill="rgb(213,201,24)" fg:x="222" fg:w="3"/><text x="17.9675%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="17.7175%" y="741" width="0.2394%" height="15" fill="rgb(248,116,28)" fg:x="222" fg:w="3"/><text x="17.9675%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="17.7175%" y="725" width="0.2394%" height="15" fill="rgb(219,72,43)" fg:x="222" fg:w="3"/><text x="17.9675%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.8771%" y="709" width="0.0798%" height="15" fill="rgb(209,138,14)" fg:x="224" fg:w="1"/><text x="18.1271%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="693" width="0.0798%" height="15" fill="rgb(222,18,33)" fg:x="224" fg:w="1"/><text x="18.1271%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="677" width="0.0798%" height="15" fill="rgb(213,199,7)" fg:x="224" fg:w="1"/><text x="18.1271%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8771%" y="661" width="0.0798%" height="15" fill="rgb(250,110,10)" fg:x="224" fg:w="1"/><text x="18.1271%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8771%" y="645" width="0.0798%" height="15" fill="rgb(248,123,6)" fg:x="224" fg:w="1"/><text x="18.1271%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.9569%" y="725" width="0.0798%" height="15" fill="rgb(206,91,31)" fg:x="225" fg:w="1"/><text x="18.2069%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.9569%" y="709" width="0.0798%" height="15" fill="rgb(211,154,13)" fg:x="225" fg:w="1"/><text x="18.2069%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0367%" y="693" width="0.0798%" height="15" fill="rgb(225,148,7)" fg:x="226" fg:w="1"/><text x="18.2867%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="17.9569%" y="789" width="0.3192%" height="15" fill="rgb(220,160,43)" fg:x="225" fg:w="4"/><text x="18.2069%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="17.9569%" y="773" width="0.3192%" height="15" fill="rgb(213,52,39)" fg:x="225" fg:w="4"/><text x="18.2069%" y="783.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="17.9569%" y="757" width="0.3192%" height="15" fill="rgb(243,137,7)" fg:x="225" fg:w="4"/><text x="18.2069%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="17.9569%" y="741" width="0.3192%" height="15" fill="rgb(230,79,13)" fg:x="225" fg:w="4"/><text x="18.2069%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="18.0367%" y="725" width="0.2394%" height="15" fill="rgb(247,105,23)" fg:x="226" fg:w="3"/><text x="18.2867%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="18.0367%" y="709" width="0.2394%" height="15" fill="rgb(223,179,41)" fg:x="226" fg:w="3"/><text x="18.2867%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="18.1165%" y="693" width="0.1596%" height="15" fill="rgb(218,9,34)" fg:x="227" fg:w="2"/><text x="18.3665%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="18.1165%" y="677" width="0.1596%" height="15" fill="rgb(222,106,8)" fg:x="227" fg:w="2"/><text x="18.3665%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.1963%" y="661" width="0.0798%" height="15" fill="rgb(211,220,0)" fg:x="228" fg:w="1"/><text x="18.4463%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.1963%" y="645" width="0.0798%" height="15" fill="rgb(229,52,16)" fg:x="228" fg:w="1"/><text x="18.4463%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.1963%" y="629" width="0.0798%" height="15" fill="rgb(212,155,18)" fg:x="228" fg:w="1"/><text x="18.4463%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="18.3559%" y="757" width="0.0798%" height="15" fill="rgb(242,21,14)" fg:x="230" fg:w="1"/><text x="18.6059%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="18.3559%" y="741" width="0.0798%" height="15" fill="rgb(222,19,48)" fg:x="230" fg:w="1"/><text x="18.6059%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="18.3559%" y="725" width="0.0798%" height="15" fill="rgb(232,45,27)" fg:x="230" fg:w="1"/><text x="18.6059%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3559%" y="709" width="0.0798%" height="15" fill="rgb(249,103,42)" fg:x="230" fg:w="1"/><text x="18.6059%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3559%" y="693" width="0.0798%" height="15" fill="rgb(246,81,33)" fg:x="230" fg:w="1"/><text x="18.6059%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.3559%" y="677" width="0.0798%" height="15" fill="rgb(252,33,42)" fg:x="230" fg:w="1"/><text x="18.6059%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.3559%" y="661" width="0.0798%" height="15" fill="rgb(209,212,41)" fg:x="230" fg:w="1"/><text x="18.6059%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.3559%" y="645" width="0.0798%" height="15" fill="rgb(207,154,6)" fg:x="230" fg:w="1"/><text x="18.6059%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.3559%" y="629" width="0.0798%" height="15" fill="rgb(223,64,47)" fg:x="230" fg:w="1"/><text x="18.6059%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3559%" y="613" width="0.0798%" height="15" fill="rgb(211,161,38)" fg:x="230" fg:w="1"/><text x="18.6059%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.3559%" y="597" width="0.0798%" height="15" fill="rgb(219,138,40)" fg:x="230" fg:w="1"/><text x="18.6059%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.3559%" y="581" width="0.0798%" height="15" fill="rgb(241,228,46)" fg:x="230" fg:w="1"/><text x="18.6059%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.3559%" y="565" width="0.0798%" height="15" fill="rgb(223,209,38)" fg:x="230" fg:w="1"/><text x="18.6059%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.3559%" y="549" width="0.0798%" height="15" fill="rgb(236,164,45)" fg:x="230" fg:w="1"/><text x="18.6059%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.3559%" y="533" width="0.0798%" height="15" fill="rgb(231,15,5)" fg:x="230" fg:w="1"/><text x="18.6059%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="18.3559%" y="517" width="0.0798%" height="15" fill="rgb(252,35,15)" fg:x="230" fg:w="1"/><text x="18.6059%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="18.3559%" y="501" width="0.0798%" height="15" fill="rgb(248,181,18)" fg:x="230" fg:w="1"/><text x="18.6059%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4358%" y="725" width="0.0798%" height="15" fill="rgb(233,39,42)" fg:x="231" fg:w="1"/><text x="18.6858%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="18.2761%" y="773" width="0.3192%" height="15" fill="rgb(238,110,33)" fg:x="229" fg:w="4"/><text x="18.5261%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.4358%" y="757" width="0.1596%" height="15" fill="rgb(233,195,10)" fg:x="231" fg:w="2"/><text x="18.6858%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.4358%" y="741" width="0.1596%" height="15" fill="rgb(254,105,3)" fg:x="231" fg:w="2"/><text x="18.6858%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5156%" y="725" width="0.0798%" height="15" fill="rgb(221,225,9)" fg:x="232" fg:w="1"/><text x="18.7656%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5156%" y="709" width="0.0798%" height="15" fill="rgb(224,227,45)" fg:x="232" fg:w="1"/><text x="18.7656%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.5156%" y="693" width="0.0798%" height="15" fill="rgb(229,198,43)" fg:x="232" fg:w="1"/><text x="18.7656%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5156%" y="677" width="0.0798%" height="15" fill="rgb(206,209,35)" fg:x="232" fg:w="1"/><text x="18.7656%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5156%" y="661" width="0.0798%" height="15" fill="rgb(245,195,53)" fg:x="232" fg:w="1"/><text x="18.7656%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5156%" y="645" width="0.0798%" height="15" fill="rgb(240,92,26)" fg:x="232" fg:w="1"/><text x="18.7656%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5954%" y="773" width="0.0798%" height="15" fill="rgb(207,40,23)" fg:x="233" fg:w="1"/><text x="18.8454%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5954%" y="757" width="0.0798%" height="15" fill="rgb(223,111,35)" fg:x="233" fg:w="1"/><text x="18.8454%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5954%" y="741" width="0.0798%" height="15" fill="rgb(229,147,28)" fg:x="233" fg:w="1"/><text x="18.8454%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5954%" y="725" width="0.0798%" height="15" fill="rgb(211,29,28)" fg:x="233" fg:w="1"/><text x="18.8454%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5954%" y="709" width="0.0798%" height="15" fill="rgb(228,72,33)" fg:x="233" fg:w="1"/><text x="18.8454%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5954%" y="693" width="0.0798%" height="15" fill="rgb(205,214,31)" fg:x="233" fg:w="1"/><text x="18.8454%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5954%" y="677" width="0.0798%" height="15" fill="rgb(224,111,15)" fg:x="233" fg:w="1"/><text x="18.8454%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5954%" y="661" width="0.0798%" height="15" fill="rgb(253,21,26)" fg:x="233" fg:w="1"/><text x="18.8454%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.5954%" y="645" width="0.0798%" height="15" fill="rgb(245,139,43)" fg:x="233" fg:w="1"/><text x="18.8454%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.5954%" y="629" width="0.0798%" height="15" fill="rgb(252,170,7)" fg:x="233" fg:w="1"/><text x="18.8454%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.5954%" y="613" width="0.0798%" height="15" fill="rgb(231,118,14)" fg:x="233" fg:w="1"/><text x="18.8454%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.5954%" y="597" width="0.0798%" height="15" fill="rgb(238,83,0)" fg:x="233" fg:w="1"/><text x="18.8454%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5954%" y="581" width="0.0798%" height="15" fill="rgb(221,39,39)" fg:x="233" fg:w="1"/><text x="18.8454%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="18.6752%" y="725" width="0.0798%" height="15" fill="rgb(222,119,46)" fg:x="234" fg:w="1"/><text x="18.9252%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="18.6752%" y="709" width="0.0798%" height="15" fill="rgb(222,165,49)" fg:x="234" fg:w="1"/><text x="18.9252%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.6752%" y="693" width="0.0798%" height="15" fill="rgb(219,113,52)" fg:x="234" fg:w="1"/><text x="18.9252%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.6752%" y="677" width="0.0798%" height="15" fill="rgb(214,7,15)" fg:x="234" fg:w="1"/><text x="18.9252%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6752%" y="661" width="0.0798%" height="15" fill="rgb(235,32,4)" fg:x="234" fg:w="1"/><text x="18.9252%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6752%" y="645" width="0.0798%" height="15" fill="rgb(238,90,54)" fg:x="234" fg:w="1"/><text x="18.9252%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="18.7550%" y="725" width="0.0798%" height="15" fill="rgb(213,208,19)" fg:x="235" fg:w="1"/><text x="19.0050%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="18.7550%" y="709" width="0.0798%" height="15" fill="rgb(233,156,4)" fg:x="235" fg:w="1"/><text x="19.0050%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.7550%" y="693" width="0.0798%" height="15" fill="rgb(207,194,5)" fg:x="235" fg:w="1"/><text x="19.0050%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.7550%" y="677" width="0.0798%" height="15" fill="rgb(206,111,30)" fg:x="235" fg:w="1"/><text x="19.0050%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7550%" y="661" width="0.0798%" height="15" fill="rgb(243,70,54)" fg:x="235" fg:w="1"/><text x="19.0050%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7550%" y="645" width="0.0798%" height="15" fill="rgb(242,28,8)" fg:x="235" fg:w="1"/><text x="19.0050%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7550%" y="629" width="0.0798%" height="15" fill="rgb(219,106,18)" fg:x="235" fg:w="1"/><text x="19.0050%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7550%" y="613" width="0.0798%" height="15" fill="rgb(244,222,10)" fg:x="235" fg:w="1"/><text x="19.0050%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7550%" y="597" width="0.0798%" height="15" fill="rgb(236,179,52)" fg:x="235" fg:w="1"/><text x="19.0050%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.7550%" y="581" width="0.0798%" height="15" fill="rgb(213,23,39)" fg:x="235" fg:w="1"/><text x="19.0050%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.7550%" y="565" width="0.0798%" height="15" fill="rgb(238,48,10)" fg:x="235" fg:w="1"/><text x="19.0050%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.7550%" y="549" width="0.0798%" height="15" fill="rgb(251,196,23)" fg:x="235" fg:w="1"/><text x="19.0050%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.7550%" y="533" width="0.0798%" height="15" fill="rgb(250,152,24)" fg:x="235" fg:w="1"/><text x="19.0050%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.7550%" y="517" width="0.0798%" height="15" fill="rgb(209,150,17)" fg:x="235" fg:w="1"/><text x="19.0050%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8348%" y="661" width="0.0798%" height="15" fill="rgb(234,202,34)" fg:x="236" fg:w="1"/><text x="19.0848%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.8348%" y="645" width="0.0798%" height="15" fill="rgb(253,148,53)" fg:x="236" fg:w="1"/><text x="19.0848%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.8348%" y="629" width="0.0798%" height="15" fill="rgb(218,129,16)" fg:x="236" fg:w="1"/><text x="19.0848%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.8348%" y="613" width="0.0798%" height="15" fill="rgb(216,85,19)" fg:x="236" fg:w="1"/><text x="19.0848%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.8348%" y="597" width="0.0798%" height="15" fill="rgb(235,228,7)" fg:x="236" fg:w="1"/><text x="19.0848%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8348%" y="581" width="0.0798%" height="15" fill="rgb(245,175,0)" fg:x="236" fg:w="1"/><text x="19.0848%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.8348%" y="565" width="0.0798%" height="15" fill="rgb(208,168,36)" fg:x="236" fg:w="1"/><text x="19.0848%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.8348%" y="549" width="0.0798%" height="15" fill="rgb(246,171,24)" fg:x="236" fg:w="1"/><text x="19.0848%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.8348%" y="533" width="0.0798%" height="15" fill="rgb(215,142,24)" fg:x="236" fg:w="1"/><text x="19.0848%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.8348%" y="517" width="0.0798%" height="15" fill="rgb(250,187,7)" fg:x="236" fg:w="1"/><text x="19.0848%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.8348%" y="501" width="0.0798%" height="15" fill="rgb(228,66,33)" fg:x="236" fg:w="1"/><text x="19.0848%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8348%" y="485" width="0.0798%" height="15" fill="rgb(234,215,21)" fg:x="236" fg:w="1"/><text x="19.0848%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9146%" y="517" width="0.0798%" height="15" fill="rgb(222,191,20)" fg:x="237" fg:w="1"/><text x="19.1646%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="18.8348%" y="693" width="0.2394%" height="15" fill="rgb(245,79,54)" fg:x="236" fg:w="3"/><text x="19.0848%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.8348%" y="677" width="0.2394%" height="15" fill="rgb(240,10,37)" fg:x="236" fg:w="3"/><text x="19.0848%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="18.9146%" y="661" width="0.1596%" height="15" fill="rgb(214,192,32)" fg:x="237" fg:w="2"/><text x="19.1646%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="645" width="0.1596%" height="15" fill="rgb(209,36,54)" fg:x="237" fg:w="2"/><text x="19.1646%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.9146%" y="629" width="0.1596%" height="15" fill="rgb(220,10,11)" fg:x="237" fg:w="2"/><text x="19.1646%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="613" width="0.1596%" height="15" fill="rgb(221,106,17)" fg:x="237" fg:w="2"/><text x="19.1646%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="597" width="0.1596%" height="15" fill="rgb(251,142,44)" fg:x="237" fg:w="2"/><text x="19.1646%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="581" width="0.1596%" height="15" fill="rgb(238,13,15)" fg:x="237" fg:w="2"/><text x="19.1646%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.9146%" y="565" width="0.1596%" height="15" fill="rgb(208,107,27)" fg:x="237" fg:w="2"/><text x="19.1646%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="549" width="0.1596%" height="15" fill="rgb(205,136,37)" fg:x="237" fg:w="2"/><text x="19.1646%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="18.9146%" y="533" width="0.1596%" height="15" fill="rgb(250,205,27)" fg:x="237" fg:w="2"/><text x="19.1646%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.9944%" y="517" width="0.0798%" height="15" fill="rgb(210,80,43)" fg:x="238" fg:w="1"/><text x="19.2444%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.9944%" y="501" width="0.0798%" height="15" fill="rgb(247,160,36)" fg:x="238" fg:w="1"/><text x="19.2444%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9944%" y="485" width="0.0798%" height="15" fill="rgb(234,13,49)" fg:x="238" fg:w="1"/><text x="19.2444%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9944%" y="469" width="0.0798%" height="15" fill="rgb(234,122,0)" fg:x="238" fg:w="1"/><text x="19.2444%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.9944%" y="453" width="0.0798%" height="15" fill="rgb(207,146,38)" fg:x="238" fg:w="1"/><text x="19.2444%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.9944%" y="437" width="0.0798%" height="15" fill="rgb(207,177,25)" fg:x="238" fg:w="1"/><text x="19.2444%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.9944%" y="421" width="0.0798%" height="15" fill="rgb(211,178,42)" fg:x="238" fg:w="1"/><text x="19.2444%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.9944%" y="405" width="0.0798%" height="15" fill="rgb(230,69,54)" fg:x="238" fg:w="1"/><text x="19.2444%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.9944%" y="389" width="0.0798%" height="15" fill="rgb(214,135,41)" fg:x="238" fg:w="1"/><text x="19.2444%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.9944%" y="373" width="0.0798%" height="15" fill="rgb(237,67,25)" fg:x="238" fg:w="1"/><text x="19.2444%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.1540%" y="661" width="0.0798%" height="15" fill="rgb(222,189,50)" fg:x="240" fg:w="1"/><text x="19.4040%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.1540%" y="645" width="0.0798%" height="15" fill="rgb(245,148,34)" fg:x="240" fg:w="1"/><text x="19.4040%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.1540%" y="629" width="0.0798%" height="15" fill="rgb(222,29,6)" fg:x="240" fg:w="1"/><text x="19.4040%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1540%" y="613" width="0.0798%" height="15" fill="rgb(221,189,43)" fg:x="240" fg:w="1"/><text x="19.4040%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="19.0742%" y="693" width="0.2394%" height="15" fill="rgb(207,36,27)" fg:x="239" fg:w="3"/><text x="19.3242%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.0742%" y="677" width="0.2394%" height="15" fill="rgb(217,90,24)" fg:x="239" fg:w="3"/><text x="19.3242%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.2338%" y="661" width="0.0798%" height="15" fill="rgb(224,66,35)" fg:x="241" fg:w="1"/><text x="19.4838%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2338%" y="645" width="0.0798%" height="15" fill="rgb(221,13,50)" fg:x="241" fg:w="1"/><text x="19.4838%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.2338%" y="629" width="0.0798%" height="15" fill="rgb(236,68,49)" fg:x="241" fg:w="1"/><text x="19.4838%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.2338%" y="613" width="0.0798%" height="15" fill="rgb(229,146,28)" fg:x="241" fg:w="1"/><text x="19.4838%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.2338%" y="597" width="0.0798%" height="15" fill="rgb(225,31,38)" fg:x="241" fg:w="1"/><text x="19.4838%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.2338%" y="581" width="0.0798%" height="15" fill="rgb(250,208,3)" fg:x="241" fg:w="1"/><text x="19.4838%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.2338%" y="565" width="0.0798%" height="15" fill="rgb(246,54,23)" fg:x="241" fg:w="1"/><text x="19.4838%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3136%" y="613" width="0.0798%" height="15" fill="rgb(243,76,11)" fg:x="242" fg:w="1"/><text x="19.5636%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.3136%" y="597" width="0.0798%" height="15" fill="rgb(245,21,50)" fg:x="242" fg:w="1"/><text x="19.5636%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3136%" y="581" width="0.0798%" height="15" fill="rgb(228,9,43)" fg:x="242" fg:w="1"/><text x="19.5636%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="19.3136%" y="645" width="0.1596%" height="15" fill="rgb(208,100,47)" fg:x="242" fg:w="2"/><text x="19.5636%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.3136%" y="629" width="0.1596%" height="15" fill="rgb(232,26,8)" fg:x="242" fg:w="2"/><text x="19.5636%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3935%" y="613" width="0.0798%" height="15" fill="rgb(216,166,38)" fg:x="243" fg:w="1"/><text x="19.6435%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.3935%" y="597" width="0.0798%" height="15" fill="rgb(251,202,51)" fg:x="243" fg:w="1"/><text x="19.6435%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3935%" y="581" width="0.0798%" height="15" fill="rgb(254,216,34)" fg:x="243" fg:w="1"/><text x="19.6435%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="18.8348%" y="709" width="0.7183%" height="15" fill="rgb(251,32,27)" fg:x="236" fg:w="9"/><text x="19.0848%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="19.3136%" y="693" width="0.2394%" height="15" fill="rgb(208,127,28)" fg:x="242" fg:w="3"/><text x="19.5636%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="19.3136%" y="677" width="0.2394%" height="15" fill="rgb(224,137,22)" fg:x="242" fg:w="3"/><text x="19.5636%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="19.3136%" y="661" width="0.2394%" height="15" fill="rgb(254,70,32)" fg:x="242" fg:w="3"/><text x="19.5636%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.4733%" y="645" width="0.0798%" height="15" fill="rgb(229,75,37)" fg:x="244" fg:w="1"/><text x="19.7233%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="19.5531%" y="709" width="0.0798%" height="15" fill="rgb(252,64,23)" fg:x="245" fg:w="1"/><text x="19.8031%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="19.5531%" y="693" width="0.0798%" height="15" fill="rgb(232,162,48)" fg:x="245" fg:w="1"/><text x="19.8031%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5531%" y="677" width="0.0798%" height="15" fill="rgb(246,160,12)" fg:x="245" fg:w="1"/><text x="19.8031%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6329%" y="693" width="0.0798%" height="15" fill="rgb(247,166,0)" fg:x="246" fg:w="1"/><text x="19.8829%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="19.7127%" y="661" width="0.1596%" height="15" fill="rgb(249,219,21)" fg:x="247" fg:w="2"/><text x="19.9627%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="19.7127%" y="645" width="0.1596%" height="15" fill="rgb(205,209,3)" fg:x="247" fg:w="2"/><text x="19.9627%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7127%" y="629" width="0.1596%" height="15" fill="rgb(243,44,1)" fg:x="247" fg:w="2"/><text x="19.9627%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.7127%" y="613" width="0.1596%" height="15" fill="rgb(206,159,16)" fg:x="247" fg:w="2"/><text x="19.9627%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.7925%" y="597" width="0.0798%" height="15" fill="rgb(244,77,30)" fg:x="248" fg:w="1"/><text x="20.0425%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8723%" y="645" width="0.0798%" height="15" fill="rgb(218,69,12)" fg:x="249" fg:w="1"/><text x="20.1223%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.8723%" y="629" width="0.0798%" height="15" fill="rgb(212,87,7)" fg:x="249" fg:w="1"/><text x="20.1223%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.8723%" y="613" width="0.0798%" height="15" fill="rgb(245,114,25)" fg:x="249" fg:w="1"/><text x="20.1223%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.8723%" y="597" width="0.0798%" height="15" fill="rgb(210,61,42)" fg:x="249" fg:w="1"/><text x="20.1223%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.8723%" y="581" width="0.0798%" height="15" fill="rgb(211,52,33)" fg:x="249" fg:w="1"/><text x="20.1223%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.8723%" y="565" width="0.0798%" height="15" fill="rgb(234,58,33)" fg:x="249" fg:w="1"/><text x="20.1223%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.8723%" y="549" width="0.0798%" height="15" fill="rgb(220,115,36)" fg:x="249" fg:w="1"/><text x="20.1223%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.8723%" y="533" width="0.0798%" height="15" fill="rgb(243,153,54)" fg:x="249" fg:w="1"/><text x="20.1223%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.8723%" y="517" width="0.0798%" height="15" fill="rgb(251,47,18)" fg:x="249" fg:w="1"/><text x="20.1223%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.8723%" y="501" width="0.0798%" height="15" fill="rgb(242,102,42)" fg:x="249" fg:w="1"/><text x="20.1223%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.8723%" y="485" width="0.0798%" height="15" fill="rgb(234,31,38)" fg:x="249" fg:w="1"/><text x="20.1223%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8723%" y="469" width="0.0798%" height="15" fill="rgb(221,117,51)" fg:x="249" fg:w="1"/><text x="20.1223%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="19.9521%" y="645" width="0.0798%" height="15" fill="rgb(212,20,18)" fg:x="250" fg:w="1"/><text x="20.2021%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9521%" y="629" width="0.0798%" height="15" fill="rgb(245,133,36)" fg:x="250" fg:w="1"/><text x="20.2021%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.0319%" y="629" width="0.0798%" height="15" fill="rgb(212,6,19)" fg:x="251" fg:w="1"/><text x="20.2819%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0319%" y="613" width="0.0798%" height="15" fill="rgb(218,1,36)" fg:x="251" fg:w="1"/><text x="20.2819%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.0319%" y="597" width="0.0798%" height="15" fill="rgb(246,84,54)" fg:x="251" fg:w="1"/><text x="20.2819%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.0319%" y="581" width="0.0798%" height="15" fill="rgb(242,110,6)" fg:x="251" fg:w="1"/><text x="20.2819%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.0319%" y="565" width="0.0798%" height="15" fill="rgb(214,47,5)" fg:x="251" fg:w="1"/><text x="20.2819%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.0319%" y="549" width="0.0798%" height="15" fill="rgb(218,159,25)" fg:x="251" fg:w="1"/><text x="20.2819%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0319%" y="533" width="0.0798%" height="15" fill="rgb(215,211,28)" fg:x="251" fg:w="1"/><text x="20.2819%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="20.0319%" y="517" width="0.0798%" height="15" fill="rgb(238,59,32)" fg:x="251" fg:w="1"/><text x="20.2819%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="19.7127%" y="693" width="0.4789%" height="15" fill="rgb(226,82,3)" fg:x="247" fg:w="6"/><text x="19.9627%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="19.7127%" y="677" width="0.4789%" height="15" fill="rgb(240,164,32)" fg:x="247" fg:w="6"/><text x="19.9627%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="19.8723%" y="661" width="0.3192%" height="15" fill="rgb(232,46,7)" fg:x="249" fg:w="4"/><text x="20.1223%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.0319%" y="645" width="0.1596%" height="15" fill="rgb(229,129,53)" fg:x="251" fg:w="2"/><text x="20.2819%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.1117%" y="629" width="0.0798%" height="15" fill="rgb(234,188,29)" fg:x="252" fg:w="1"/><text x="20.3617%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.1117%" y="613" width="0.0798%" height="15" fill="rgb(246,141,4)" fg:x="252" fg:w="1"/><text x="20.3617%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.1915%" y="693" width="0.0798%" height="15" fill="rgb(229,23,39)" fg:x="253" fg:w="1"/><text x="20.4415%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.1915%" y="677" width="0.0798%" height="15" fill="rgb(206,12,3)" fg:x="253" fg:w="1"/><text x="20.4415%" y="687.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="20.1915%" y="661" width="0.0798%" height="15" fill="rgb(252,226,20)" fg:x="253" fg:w="1"/><text x="20.4415%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="20.1915%" y="645" width="0.0798%" height="15" fill="rgb(216,123,35)" fg:x="253" fg:w="1"/><text x="20.4415%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (21 samples, 1.68%)</title><rect x="18.8348%" y="725" width="1.6760%" height="15" fill="rgb(212,68,40)" fg:x="236" fg:w="21"/><text x="19.0848%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (11 samples, 0.88%)</title><rect x="19.6329%" y="709" width="0.8779%" height="15" fill="rgb(254,125,32)" fg:x="246" fg:w="11"/><text x="19.8829%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="20.2713%" y="693" width="0.2394%" height="15" fill="rgb(253,97,22)" fg:x="254" fg:w="3"/><text x="20.5213%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (3 samples, 0.24%)</title><rect x="20.2713%" y="677" width="0.2394%" height="15" fill="rgb(241,101,14)" fg:x="254" fg:w="3"/><text x="20.5213%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.2713%" y="661" width="0.2394%" height="15" fill="rgb(238,103,29)" fg:x="254" fg:w="3"/><text x="20.5213%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="20.2713%" y="645" width="0.2394%" height="15" fill="rgb(233,195,47)" fg:x="254" fg:w="3"/><text x="20.5213%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.2713%" y="629" width="0.2394%" height="15" fill="rgb(246,218,30)" fg:x="254" fg:w="3"/><text x="20.5213%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4310%" y="613" width="0.0798%" height="15" fill="rgb(219,145,47)" fg:x="256" fg:w="1"/><text x="20.6810%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.92%)</title><rect x="18.6752%" y="773" width="1.9154%" height="15" fill="rgb(243,12,26)" fg:x="234" fg:w="24"/><text x="18.9252%" y="783.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 1.92%)</title><rect x="18.6752%" y="757" width="1.9154%" height="15" fill="rgb(214,87,16)" fg:x="234" fg:w="24"/><text x="18.9252%" y="767.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.92%)</title><rect x="18.6752%" y="741" width="1.9154%" height="15" fill="rgb(208,99,42)" fg:x="234" fg:w="24"/><text x="18.9252%" y="751.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="20.5108%" y="725" width="0.0798%" height="15" fill="rgb(253,99,2)" fg:x="257" fg:w="1"/><text x="20.7608%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="709" width="0.0798%" height="15" fill="rgb(220,168,23)" fg:x="257" fg:w="1"/><text x="20.7608%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="693" width="0.0798%" height="15" fill="rgb(242,38,24)" fg:x="257" fg:w="1"/><text x="20.7608%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="677" width="0.0798%" height="15" fill="rgb(225,182,9)" fg:x="257" fg:w="1"/><text x="20.7608%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.5108%" y="661" width="0.0798%" height="15" fill="rgb(243,178,37)" fg:x="257" fg:w="1"/><text x="20.7608%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.5108%" y="645" width="0.0798%" height="15" fill="rgb(232,139,19)" fg:x="257" fg:w="1"/><text x="20.7608%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.5108%" y="629" width="0.0798%" height="15" fill="rgb(225,201,24)" fg:x="257" fg:w="1"/><text x="20.7608%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5108%" y="613" width="0.0798%" height="15" fill="rgb(221,47,46)" fg:x="257" fg:w="1"/><text x="20.7608%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5108%" y="597" width="0.0798%" height="15" fill="rgb(249,23,13)" fg:x="257" fg:w="1"/><text x="20.7608%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.5108%" y="581" width="0.0798%" height="15" fill="rgb(219,9,5)" fg:x="257" fg:w="1"/><text x="20.7608%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.5108%" y="565" width="0.0798%" height="15" fill="rgb(254,171,16)" fg:x="257" fg:w="1"/><text x="20.7608%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.5108%" y="549" width="0.0798%" height="15" fill="rgb(230,171,20)" fg:x="257" fg:w="1"/><text x="20.7608%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.5108%" y="533" width="0.0798%" height="15" fill="rgb(210,71,41)" fg:x="257" fg:w="1"/><text x="20.7608%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5108%" y="517" width="0.0798%" height="15" fill="rgb(206,173,20)" fg:x="257" fg:w="1"/><text x="20.7608%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="20.5906%" y="773" width="0.0798%" height="15" fill="rgb(233,88,34)" fg:x="258" fg:w="1"/><text x="20.8406%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5906%" y="757" width="0.0798%" height="15" fill="rgb(223,209,46)" fg:x="258" fg:w="1"/><text x="20.8406%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.7502%" y="741" width="0.1596%" height="15" fill="rgb(250,43,18)" fg:x="260" fg:w="2"/><text x="21.0002%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.7502%" y="725" width="0.1596%" height="15" fill="rgb(208,13,10)" fg:x="260" fg:w="2"/><text x="21.0002%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="20.7502%" y="709" width="0.1596%" height="15" fill="rgb(212,200,36)" fg:x="260" fg:w="2"/><text x="21.0002%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="20.7502%" y="693" width="0.1596%" height="15" fill="rgb(225,90,30)" fg:x="260" fg:w="2"/><text x="21.0002%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="20.7502%" y="677" width="0.1596%" height="15" fill="rgb(236,182,39)" fg:x="260" fg:w="2"/><text x="21.0002%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.7502%" y="661" width="0.1596%" height="15" fill="rgb(212,144,35)" fg:x="260" fg:w="2"/><text x="21.0002%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.7502%" y="645" width="0.1596%" height="15" fill="rgb(228,63,44)" fg:x="260" fg:w="2"/><text x="21.0002%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="20.7502%" y="629" width="0.1596%" height="15" fill="rgb(228,109,6)" fg:x="260" fg:w="2"/><text x="21.0002%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="20.7502%" y="613" width="0.1596%" height="15" fill="rgb(238,117,24)" fg:x="260" fg:w="2"/><text x="21.0002%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="20.7502%" y="597" width="0.1596%" height="15" fill="rgb(242,26,26)" fg:x="260" fg:w="2"/><text x="21.0002%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="20.7502%" y="581" width="0.1596%" height="15" fill="rgb(221,92,48)" fg:x="260" fg:w="2"/><text x="21.0002%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.7502%" y="565" width="0.1596%" height="15" fill="rgb(209,209,32)" fg:x="260" fg:w="2"/><text x="21.0002%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (5 samples, 0.40%)</title><rect x="20.6704%" y="757" width="0.3990%" height="15" fill="rgb(221,70,22)" fg:x="259" fg:w="5"/><text x="20.9204%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.9098%" y="741" width="0.1596%" height="15" fill="rgb(248,145,5)" fg:x="262" fg:w="2"/><text x="21.1598%" y="751.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="21.0694%" y="741" width="0.1596%" height="15" fill="rgb(226,116,26)" fg:x="264" fg:w="2"/><text x="21.3194%" y="751.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="21.0694%" y="725" width="0.1596%" height="15" fill="rgb(244,5,17)" fg:x="264" fg:w="2"/><text x="21.3194%" y="735.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="21.0694%" y="709" width="0.1596%" height="15" fill="rgb(252,159,33)" fg:x="264" fg:w="2"/><text x="21.3194%" y="719.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="21.0694%" y="693" width="0.1596%" height="15" fill="rgb(206,71,0)" fg:x="264" fg:w="2"/><text x="21.3194%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="21.0694%" y="677" width="0.1596%" height="15" fill="rgb(233,118,54)" fg:x="264" fg:w="2"/><text x="21.3194%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="21.0694%" y="661" width="0.1596%" height="15" fill="rgb(234,83,48)" fg:x="264" fg:w="2"/><text x="21.3194%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="21.0694%" y="645" width="0.1596%" height="15" fill="rgb(228,3,54)" fg:x="264" fg:w="2"/><text x="21.3194%" y="655.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="21.0694%" y="629" width="0.1596%" height="15" fill="rgb(226,155,13)" fg:x="264" fg:w="2"/><text x="21.3194%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="21.2291%" y="693" width="0.0798%" height="15" fill="rgb(241,28,37)" fg:x="266" fg:w="1"/><text x="21.4791%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="21.2291%" y="677" width="0.0798%" height="15" fill="rgb(233,93,10)" fg:x="266" fg:w="1"/><text x="21.4791%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="21.2291%" y="661" width="0.0798%" height="15" fill="rgb(225,113,19)" fg:x="266" fg:w="1"/><text x="21.4791%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.2291%" y="645" width="0.0798%" height="15" fill="rgb(241,2,18)" fg:x="266" fg:w="1"/><text x="21.4791%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.2291%" y="629" width="0.0798%" height="15" fill="rgb(228,207,21)" fg:x="266" fg:w="1"/><text x="21.4791%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="21.2291%" y="709" width="0.1596%" height="15" fill="rgb(213,211,35)" fg:x="266" fg:w="2"/><text x="21.4791%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3089%" y="693" width="0.0798%" height="15" fill="rgb(209,83,10)" fg:x="267" fg:w="1"/><text x="21.5589%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="21.6281%" y="645" width="0.4789%" height="15" fill="rgb(209,164,1)" fg:x="271" fg:w="6"/><text x="21.8781%" y="655.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="21.6281%" y="629" width="0.4789%" height="15" fill="rgb(213,184,43)" fg:x="271" fg:w="6"/><text x="21.8781%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.9473%" y="613" width="0.1596%" height="15" fill="rgb(231,61,34)" fg:x="275" fg:w="2"/><text x="22.1973%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.0271%" y="597" width="0.0798%" height="15" fill="rgb(235,75,3)" fg:x="276" fg:w="1"/><text x="22.2771%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="21.6281%" y="661" width="0.6385%" height="15" fill="rgb(220,106,47)" fg:x="271" fg:w="8"/><text x="21.8781%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.1069%" y="645" width="0.1596%" height="15" fill="rgb(210,196,33)" fg:x="277" fg:w="2"/><text x="22.3569%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.1069%" y="629" width="0.1596%" height="15" fill="rgb(229,154,42)" fg:x="277" fg:w="2"/><text x="22.3569%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.1069%" y="613" width="0.1596%" height="15" fill="rgb(228,114,26)" fg:x="277" fg:w="2"/><text x="22.3569%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="22.3464%" y="645" width="0.5587%" height="15" fill="rgb(208,144,1)" fg:x="280" fg:w="7"/><text x="22.5964%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="22.5858%" y="629" width="0.3192%" height="15" fill="rgb(239,112,37)" fg:x="283" fg:w="4"/><text x="22.8358%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="22.6656%" y="613" width="0.2394%" height="15" fill="rgb(210,96,50)" fg:x="284" fg:w="3"/><text x="22.9156%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.7454%" y="597" width="0.1596%" height="15" fill="rgb(222,178,2)" fg:x="285" fg:w="2"/><text x="22.9954%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.9050%" y="597" width="0.0798%" height="15" fill="rgb(226,74,18)" fg:x="287" fg:w="1"/><text x="23.1550%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.9050%" y="581" width="0.0798%" height="15" fill="rgb(225,67,54)" fg:x="287" fg:w="1"/><text x="23.1550%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.9050%" y="565" width="0.0798%" height="15" fill="rgb(251,92,32)" fg:x="287" fg:w="1"/><text x="23.1550%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="22.9050%" y="629" width="0.1596%" height="15" fill="rgb(228,149,22)" fg:x="287" fg:w="2"/><text x="23.1550%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9050%" y="613" width="0.1596%" height="15" fill="rgb(243,54,13)" fg:x="287" fg:w="2"/><text x="23.1550%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.9848%" y="597" width="0.0798%" height="15" fill="rgb(243,180,28)" fg:x="288" fg:w="1"/><text x="23.2348%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.9848%" y="581" width="0.0798%" height="15" fill="rgb(208,167,24)" fg:x="288" fg:w="1"/><text x="23.2348%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (10 samples, 0.80%)</title><rect x="23.0646%" y="629" width="0.7981%" height="15" fill="rgb(245,73,45)" fg:x="289" fg:w="10"/><text x="23.3146%" y="639.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.72%)</title><rect x="23.1445%" y="613" width="0.7183%" height="15" fill="rgb(237,203,48)" fg:x="290" fg:w="9"/><text x="23.3945%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.56%)</title><rect x="23.3041%" y="597" width="0.5587%" height="15" fill="rgb(211,197,16)" fg:x="292" fg:w="7"/><text x="23.5541%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="23.3839%" y="581" width="0.4789%" height="15" fill="rgb(243,99,51)" fg:x="293" fg:w="6"/><text x="23.6339%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="23.7031%" y="565" width="0.1596%" height="15" fill="rgb(215,123,29)" fg:x="297" fg:w="2"/><text x="23.9531%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="23.7031%" y="549" width="0.1596%" height="15" fill="rgb(239,186,37)" fg:x="297" fg:w="2"/><text x="23.9531%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="23.7031%" y="533" width="0.1596%" height="15" fill="rgb(252,136,39)" fg:x="297" fg:w="2"/><text x="23.9531%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.9425%" y="613" width="0.0798%" height="15" fill="rgb(223,213,32)" fg:x="300" fg:w="1"/><text x="24.1925%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="24.0223%" y="613" width="0.2394%" height="15" fill="rgb(233,115,5)" fg:x="301" fg:w="3"/><text x="24.2723%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="24.0223%" y="597" width="0.2394%" height="15" fill="rgb(207,226,44)" fg:x="301" fg:w="3"/><text x="24.2723%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.1820%" y="581" width="0.0798%" height="15" fill="rgb(208,126,0)" fg:x="303" fg:w="1"/><text x="24.4320%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.1820%" y="565" width="0.0798%" height="15" fill="rgb(244,66,21)" fg:x="303" fg:w="1"/><text x="24.4320%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="24.5012%" y="549" width="0.1596%" height="15" fill="rgb(222,97,12)" fg:x="307" fg:w="2"/><text x="24.7512%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="24.2618%" y="597" width="0.4789%" height="15" fill="rgb(219,213,19)" fg:x="304" fg:w="6"/><text x="24.5118%" y="607.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="24.2618%" y="581" width="0.4789%" height="15" fill="rgb(252,169,30)" fg:x="304" fg:w="6"/><text x="24.5118%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="24.4214%" y="565" width="0.3192%" height="15" fill="rgb(206,32,51)" fg:x="306" fg:w="4"/><text x="24.6714%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="24.6608%" y="549" width="0.0798%" height="15" fill="rgb(250,172,42)" fg:x="309" fg:w="1"/><text x="24.9108%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.7406%" y="581" width="0.0798%" height="15" fill="rgb(209,34,43)" fg:x="310" fg:w="1"/><text x="24.9906%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="24.7406%" y="597" width="0.1596%" height="15" fill="rgb(223,11,35)" fg:x="310" fg:w="2"/><text x="24.9906%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.8204%" y="581" width="0.0798%" height="15" fill="rgb(251,219,26)" fg:x="311" fg:w="1"/><text x="25.0704%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.8204%" y="565" width="0.0798%" height="15" fill="rgb(231,119,3)" fg:x="311" fg:w="1"/><text x="25.0704%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.8204%" y="549" width="0.0798%" height="15" fill="rgb(216,97,11)" fg:x="311" fg:w="1"/><text x="25.0704%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="24.8204%" y="533" width="0.0798%" height="15" fill="rgb(223,59,9)" fg:x="311" fg:w="1"/><text x="25.0704%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="24.8204%" y="517" width="0.0798%" height="15" fill="rgb(233,93,31)" fg:x="311" fg:w="1"/><text x="25.0704%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="24.8204%" y="501" width="0.0798%" height="15" fill="rgb(239,81,33)" fg:x="311" fg:w="1"/><text x="25.0704%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="24.2618%" y="613" width="0.8779%" height="15" fill="rgb(213,120,34)" fg:x="304" fg:w="11"/><text x="24.5118%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="24.9002%" y="597" width="0.2394%" height="15" fill="rgb(243,49,53)" fg:x="312" fg:w="3"/><text x="25.1502%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.0599%" y="581" width="0.0798%" height="15" fill="rgb(247,216,33)" fg:x="314" fg:w="1"/><text x="25.3099%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.60%)</title><rect x="23.8627%" y="629" width="1.5962%" height="15" fill="rgb(226,26,14)" fg:x="299" fg:w="20"/><text x="24.1127%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="25.1397%" y="613" width="0.3192%" height="15" fill="rgb(215,49,53)" fg:x="315" fg:w="4"/><text x="25.3897%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.63%)</title><rect x="22.9050%" y="645" width="2.6337%" height="15" fill="rgb(245,162,40)" fg:x="287" fg:w="33"/><text x="23.1550%" y="655.50">se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.4589%" y="629" width="0.0798%" height="15" fill="rgb(229,68,17)" fg:x="319" fg:w="1"/><text x="25.7089%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.4589%" y="613" width="0.0798%" height="15" fill="rgb(213,182,10)" fg:x="319" fg:w="1"/><text x="25.7089%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.4589%" y="597" width="0.0798%" height="15" fill="rgb(245,125,30)" fg:x="319" fg:w="1"/><text x="25.7089%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (56 samples, 4.47%)</title><rect x="21.3887%" y="677" width="4.4693%" height="15" fill="rgb(232,202,2)" fg:x="268" fg:w="56"/><text x="21.6387%" y="687.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.59%)</title><rect x="22.2666%" y="661" width="3.5914%" height="15" fill="rgb(237,140,51)" fg:x="279" fg:w="45"/><text x="22.5166%" y="671.50">serd..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="25.5387%" y="645" width="0.3192%" height="15" fill="rgb(236,157,25)" fg:x="320" fg:w="4"/><text x="25.7887%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="25.6185%" y="629" width="0.2394%" height="15" fill="rgb(219,209,0)" fg:x="321" fg:w="3"/><text x="25.8685%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.6983%" y="613" width="0.1596%" height="15" fill="rgb(240,116,54)" fg:x="322" fg:w="2"/><text x="25.9483%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7781%" y="597" width="0.0798%" height="15" fill="rgb(216,10,36)" fg:x="323" fg:w="1"/><text x="26.0281%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7781%" y="581" width="0.0798%" height="15" fill="rgb(222,72,44)" fg:x="323" fg:w="1"/><text x="26.0281%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.7781%" y="565" width="0.0798%" height="15" fill="rgb(232,159,9)" fg:x="323" fg:w="1"/><text x="26.0281%" y="575.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="25.8579%" y="677" width="0.0798%" height="15" fill="rgb(210,39,32)" fg:x="324" fg:w="1"/><text x="26.1079%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0974%" y="629" width="0.0798%" height="15" fill="rgb(216,194,45)" fg:x="327" fg:w="1"/><text x="26.3474%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.1772%" y="629" width="0.1596%" height="15" fill="rgb(218,18,35)" fg:x="328" fg:w="2"/><text x="26.4272%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4166%" y="613" width="0.0798%" height="15" fill="rgb(207,83,51)" fg:x="331" fg:w="1"/><text x="26.6666%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="26.4964%" y="613" width="0.1596%" height="15" fill="rgb(225,63,43)" fg:x="332" fg:w="2"/><text x="26.7464%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.4964%" y="597" width="0.1596%" height="15" fill="rgb(207,57,36)" fg:x="332" fg:w="2"/><text x="26.7464%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6560%" y="597" width="0.0798%" height="15" fill="rgb(216,99,33)" fg:x="334" fg:w="1"/><text x="26.9060%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.7358%" y="597" width="0.0798%" height="15" fill="rgb(225,42,16)" fg:x="335" fg:w="1"/><text x="26.9858%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="26.8156%" y="597" width="0.2394%" height="15" fill="rgb(220,201,45)" fg:x="336" fg:w="3"/><text x="27.0656%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="26.8156%" y="581" width="0.2394%" height="15" fill="rgb(225,33,4)" fg:x="336" fg:w="3"/><text x="27.0656%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="26.8156%" y="565" width="0.2394%" height="15" fill="rgb(224,33,50)" fg:x="336" fg:w="3"/><text x="27.0656%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.1349%" y="581" width="0.1596%" height="15" fill="rgb(246,198,51)" fg:x="340" fg:w="2"/><text x="27.3849%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.60%)</title><rect x="25.9377%" y="677" width="1.5962%" height="15" fill="rgb(205,22,4)" fg:x="325" fg:w="20"/><text x="26.1877%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="26.0176%" y="661" width="1.5164%" height="15" fill="rgb(206,3,8)" fg:x="326" fg:w="19"/><text x="26.2676%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.44%)</title><rect x="26.0974%" y="645" width="1.4366%" height="15" fill="rgb(251,23,15)" fg:x="327" fg:w="18"/><text x="26.3474%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="26.3368%" y="629" width="1.1971%" height="15" fill="rgb(252,88,28)" fg:x="330" fg:w="15"/><text x="26.5868%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="26.6560%" y="613" width="0.8779%" height="15" fill="rgb(212,127,14)" fg:x="334" fg:w="11"/><text x="26.9060%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="27.0551%" y="597" width="0.4789%" height="15" fill="rgb(247,145,37)" fg:x="339" fg:w="6"/><text x="27.3051%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="27.2945%" y="581" width="0.2394%" height="15" fill="rgb(209,117,53)" fg:x="342" fg:w="3"/><text x="27.5445%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="27.2945%" y="565" width="0.2394%" height="15" fill="rgb(212,90,42)" fg:x="342" fg:w="3"/><text x="27.5445%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="27.6137%" y="661" width="0.1596%" height="15" fill="rgb(218,164,37)" fg:x="346" fg:w="2"/><text x="27.8637%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="27.6935%" y="645" width="0.0798%" height="15" fill="rgb(246,65,34)" fg:x="347" fg:w="1"/><text x="27.9435%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="27.6935%" y="629" width="0.0798%" height="15" fill="rgb(231,100,33)" fg:x="347" fg:w="1"/><text x="27.9435%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.6935%" y="613" width="0.0798%" height="15" fill="rgb(228,126,14)" fg:x="347" fg:w="1"/><text x="27.9435%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="27.6935%" y="597" width="0.0798%" height="15" fill="rgb(215,173,21)" fg:x="347" fg:w="1"/><text x="27.9435%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="27.6935%" y="581" width="0.0798%" height="15" fill="rgb(210,6,40)" fg:x="347" fg:w="1"/><text x="27.9435%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="27.8532%" y="629" width="0.3192%" height="15" fill="rgb(212,48,18)" fg:x="349" fg:w="4"/><text x="28.1032%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.0128%" y="613" width="0.1596%" height="15" fill="rgb(230,214,11)" fg:x="351" fg:w="2"/><text x="28.2628%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="28.0128%" y="597" width="0.1596%" height="15" fill="rgb(254,105,39)" fg:x="351" fg:w="2"/><text x="28.2628%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="28.1724%" y="629" width="0.0798%" height="15" fill="rgb(245,158,5)" fg:x="353" fg:w="1"/><text x="28.4224%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.1724%" y="613" width="0.0798%" height="15" fill="rgb(249,208,11)" fg:x="353" fg:w="1"/><text x="28.4224%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.1724%" y="597" width="0.0798%" height="15" fill="rgb(210,39,28)" fg:x="353" fg:w="1"/><text x="28.4224%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="28.1724%" y="581" width="0.0798%" height="15" fill="rgb(211,56,53)" fg:x="353" fg:w="1"/><text x="28.4224%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="28.2522%" y="629" width="0.0798%" height="15" fill="rgb(226,201,30)" fg:x="354" fg:w="1"/><text x="28.5022%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="28.3320%" y="629" width="0.2394%" height="15" fill="rgb(239,101,34)" fg:x="355" fg:w="3"/><text x="28.5820%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="28.3320%" y="613" width="0.2394%" height="15" fill="rgb(226,209,5)" fg:x="355" fg:w="3"/><text x="28.5820%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.4118%" y="597" width="0.1596%" height="15" fill="rgb(250,105,47)" fg:x="356" fg:w="2"/><text x="28.6618%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="28.8907%" y="581" width="0.3192%" height="15" fill="rgb(230,72,3)" fg:x="362" fg:w="4"/><text x="29.1407%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="28.8907%" y="565" width="0.3192%" height="15" fill="rgb(232,218,39)" fg:x="362" fg:w="4"/><text x="29.1407%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.0503%" y="549" width="0.1596%" height="15" fill="rgb(248,166,6)" fg:x="364" fg:w="2"/><text x="29.3003%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="29.2099%" y="581" width="0.1596%" height="15" fill="rgb(247,89,20)" fg:x="366" fg:w="2"/><text x="29.4599%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2099%" y="565" width="0.1596%" height="15" fill="rgb(248,130,54)" fg:x="366" fg:w="2"/><text x="29.4599%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="29.2099%" y="549" width="0.1596%" height="15" fill="rgb(234,196,4)" fg:x="366" fg:w="2"/><text x="29.4599%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2897%" y="533" width="0.0798%" height="15" fill="rgb(250,143,31)" fg:x="367" fg:w="1"/><text x="29.5397%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6089%" y="517" width="0.0798%" height="15" fill="rgb(211,110,34)" fg:x="371" fg:w="1"/><text x="29.8589%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="29.5291%" y="549" width="0.2394%" height="15" fill="rgb(215,124,48)" fg:x="370" fg:w="3"/><text x="29.7791%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.6089%" y="533" width="0.1596%" height="15" fill="rgb(216,46,13)" fg:x="371" fg:w="2"/><text x="29.8589%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.6887%" y="517" width="0.0798%" height="15" fill="rgb(205,184,25)" fg:x="372" fg:w="1"/><text x="29.9387%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="30.1676%" y="533" width="0.2394%" height="15" fill="rgb(228,1,10)" fg:x="378" fg:w="3"/><text x="30.4176%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.2474%" y="517" width="0.1596%" height="15" fill="rgb(213,116,27)" fg:x="379" fg:w="2"/><text x="30.4974%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.2474%" y="501" width="0.1596%" height="15" fill="rgb(241,95,50)" fg:x="379" fg:w="2"/><text x="30.4974%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="30.2474%" y="485" width="0.1596%" height="15" fill="rgb(238,48,32)" fg:x="379" fg:w="2"/><text x="30.4974%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (17 samples, 1.36%)</title><rect x="29.3695%" y="565" width="1.3567%" height="15" fill="rgb(235,113,49)" fg:x="368" fg:w="17"/><text x="29.6195%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="29.7686%" y="549" width="0.9577%" height="15" fill="rgb(205,127,43)" fg:x="373" fg:w="12"/><text x="30.0186%" y="559.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="30.4070%" y="533" width="0.3192%" height="15" fill="rgb(250,162,2)" fg:x="381" fg:w="4"/><text x="30.6570%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.08%)</title><rect x="28.8907%" y="597" width="2.0750%" height="15" fill="rgb(220,13,41)" fg:x="362" fg:w="26"/><text x="29.1407%" y="607.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.60%)</title><rect x="29.3695%" y="581" width="1.5962%" height="15" fill="rgb(249,221,25)" fg:x="368" fg:w="20"/><text x="29.6195%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="30.7263%" y="565" width="0.2394%" height="15" fill="rgb(215,208,19)" fg:x="385" fg:w="3"/><text x="30.9763%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.47%)</title><rect x="28.7310%" y="613" width="2.4741%" height="15" fill="rgb(236,175,2)" fg:x="360" fg:w="31"/><text x="28.9810%" y="623.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="30.9657%" y="597" width="0.2394%" height="15" fill="rgb(241,52,2)" fg:x="388" fg:w="3"/><text x="31.2157%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1253%" y="581" width="0.0798%" height="15" fill="rgb(248,140,14)" fg:x="390" fg:w="1"/><text x="31.3753%" y="591.50"></text></g><g><title>engine::session::Session::flush (135 samples, 10.77%)</title><rect x="20.6704%" y="773" width="10.7741%" height="15" fill="rgb(253,22,42)" fg:x="259" fg:w="135"/><text x="20.9204%" y="783.50">engine::session:..</text></g><g><title>engine::session::Session::save_changes (130 samples, 10.38%)</title><rect x="21.0694%" y="757" width="10.3751%" height="15" fill="rgb(234,61,47)" fg:x="264" fg:w="130"/><text x="21.3194%" y="767.50">engine::session..</text></g><g><title>engine::session::state::State::close (128 samples, 10.22%)</title><rect x="21.2291%" y="741" width="10.2155%" height="15" fill="rgb(208,226,15)" fg:x="266" fg:w="128"/><text x="21.4791%" y="751.50">engine::session..</text></g><g><title>engine::session::state::State::flush_entities (128 samples, 10.22%)</title><rect x="21.2291%" y="725" width="10.2155%" height="15" fill="rgb(217,221,4)" fg:x="266" fg:w="128"/><text x="21.4791%" y="735.50">engine::session..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (126 samples, 10.06%)</title><rect x="21.3887%" y="709" width="10.0559%" height="15" fill="rgb(212,174,34)" fg:x="268" fg:w="126"/><text x="21.6387%" y="719.50">engine::session..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (126 samples, 10.06%)</title><rect x="21.3887%" y="693" width="10.0559%" height="15" fill="rgb(253,83,4)" fg:x="268" fg:w="126"/><text x="21.6387%" y="703.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (49 samples, 3.91%)</title><rect x="27.5339%" y="677" width="3.9106%" height="15" fill="rgb(250,195,49)" fg:x="345" fg:w="49"/><text x="27.7839%" y="687.50">kern..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.67%)</title><rect x="27.7733%" y="661" width="3.6712%" height="15" fill="rgb(241,192,25)" fg:x="348" fg:w="46"/><text x="28.0233%" y="671.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 3.59%)</title><rect x="27.8532%" y="645" width="3.5914%" height="15" fill="rgb(208,124,10)" fg:x="349" fg:w="45"/><text x="28.1032%" y="655.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.87%)</title><rect x="28.5714%" y="629" width="2.8731%" height="15" fill="rgb(222,33,0)" fg:x="358" fg:w="36"/><text x="28.8214%" y="639.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="31.2051%" y="613" width="0.2394%" height="15" fill="rgb(234,209,28)" fg:x="391" fg:w="3"/><text x="31.4551%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.2849%" y="597" width="0.1596%" height="15" fill="rgb(224,11,23)" fg:x="392" fg:w="2"/><text x="31.5349%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.2849%" y="581" width="0.1596%" height="15" fill="rgb(232,99,1)" fg:x="392" fg:w="2"/><text x="31.5349%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="31.4445%" y="773" width="0.0798%" height="15" fill="rgb(237,95,45)" fg:x="394" fg:w="1"/><text x="31.6945%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="31.4445%" y="757" width="0.0798%" height="15" fill="rgb(208,109,11)" fg:x="394" fg:w="1"/><text x="31.6945%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="31.4445%" y="741" width="0.0798%" height="15" fill="rgb(216,190,48)" fg:x="394" fg:w="1"/><text x="31.6945%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.4445%" y="725" width="0.0798%" height="15" fill="rgb(251,171,36)" fg:x="394" fg:w="1"/><text x="31.6945%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.4445%" y="709" width="0.0798%" height="15" fill="rgb(230,62,22)" fg:x="394" fg:w="1"/><text x="31.6945%" y="719.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="31.4445%" y="693" width="0.0798%" height="15" fill="rgb(225,114,35)" fg:x="394" fg:w="1"/><text x="31.6945%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="31.4445%" y="677" width="0.0798%" height="15" fill="rgb(215,118,42)" fg:x="394" fg:w="1"/><text x="31.6945%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4445%" y="661" width="0.0798%" height="15" fill="rgb(243,119,21)" fg:x="394" fg:w="1"/><text x="31.6945%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4445%" y="645" width="0.0798%" height="15" fill="rgb(252,177,53)" fg:x="394" fg:w="1"/><text x="31.6945%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4445%" y="629" width="0.0798%" height="15" fill="rgb(237,209,29)" fg:x="394" fg:w="1"/><text x="31.6945%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4445%" y="613" width="0.0798%" height="15" fill="rgb(212,65,23)" fg:x="394" fg:w="1"/><text x="31.6945%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4445%" y="597" width="0.0798%" height="15" fill="rgb(230,222,46)" fg:x="394" fg:w="1"/><text x="31.6945%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4445%" y="581" width="0.0798%" height="15" fill="rgb(215,135,32)" fg:x="394" fg:w="1"/><text x="31.6945%" y="591.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="31.4445%" y="565" width="0.0798%" height="15" fill="rgb(246,101,22)" fg:x="394" fg:w="1"/><text x="31.6945%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.4445%" y="549" width="0.0798%" height="15" fill="rgb(206,107,13)" fg:x="394" fg:w="1"/><text x="31.6945%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="31.5243%" y="725" width="0.0798%" height="15" fill="rgb(250,100,44)" fg:x="395" fg:w="1"/><text x="31.7743%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="31.5243%" y="709" width="0.0798%" height="15" fill="rgb(231,147,38)" fg:x="395" fg:w="1"/><text x="31.7743%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="31.5243%" y="741" width="0.1596%" height="15" fill="rgb(229,8,40)" fg:x="395" fg:w="2"/><text x="31.7743%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.6042%" y="725" width="0.0798%" height="15" fill="rgb(221,135,30)" fg:x="396" fg:w="1"/><text x="31.8542%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.6042%" y="709" width="0.0798%" height="15" fill="rgb(249,193,18)" fg:x="396" fg:w="1"/><text x="31.8542%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="693" width="0.0798%" height="15" fill="rgb(209,133,39)" fg:x="396" fg:w="1"/><text x="31.8542%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6042%" y="677" width="0.0798%" height="15" fill="rgb(232,100,14)" fg:x="396" fg:w="1"/><text x="31.8542%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="661" width="0.0798%" height="15" fill="rgb(224,185,1)" fg:x="396" fg:w="1"/><text x="31.8542%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="645" width="0.0798%" height="15" fill="rgb(223,139,8)" fg:x="396" fg:w="1"/><text x="31.8542%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="629" width="0.0798%" height="15" fill="rgb(232,213,38)" fg:x="396" fg:w="1"/><text x="31.8542%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6042%" y="613" width="0.0798%" height="15" fill="rgb(207,94,22)" fg:x="396" fg:w="1"/><text x="31.8542%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="597" width="0.0798%" height="15" fill="rgb(219,183,54)" fg:x="396" fg:w="1"/><text x="31.8542%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="581" width="0.0798%" height="15" fill="rgb(216,185,54)" fg:x="396" fg:w="1"/><text x="31.8542%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="565" width="0.0798%" height="15" fill="rgb(254,217,39)" fg:x="396" fg:w="1"/><text x="31.8542%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6042%" y="549" width="0.0798%" height="15" fill="rgb(240,178,23)" fg:x="396" fg:w="1"/><text x="31.8542%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6042%" y="533" width="0.0798%" height="15" fill="rgb(218,11,47)" fg:x="396" fg:w="1"/><text x="31.8542%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.6042%" y="517" width="0.0798%" height="15" fill="rgb(218,51,51)" fg:x="396" fg:w="1"/><text x="31.8542%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.6042%" y="501" width="0.0798%" height="15" fill="rgb(238,126,27)" fg:x="396" fg:w="1"/><text x="31.8542%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.6042%" y="485" width="0.0798%" height="15" fill="rgb(249,202,22)" fg:x="396" fg:w="1"/><text x="31.8542%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.6042%" y="469" width="0.0798%" height="15" fill="rgb(254,195,49)" fg:x="396" fg:w="1"/><text x="31.8542%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.6042%" y="453" width="0.0798%" height="15" fill="rgb(208,123,14)" fg:x="396" fg:w="1"/><text x="31.8542%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.6042%" y="437" width="0.0798%" height="15" fill="rgb(224,200,8)" fg:x="396" fg:w="1"/><text x="31.8542%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="31.6042%" y="421" width="0.0798%" height="15" fill="rgb(217,61,36)" fg:x="396" fg:w="1"/><text x="31.8542%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.6840%" y="741" width="0.0798%" height="15" fill="rgb(206,35,45)" fg:x="397" fg:w="1"/><text x="31.9340%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.6840%" y="725" width="0.0798%" height="15" fill="rgb(217,65,33)" fg:x="397" fg:w="1"/><text x="31.9340%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.6840%" y="709" width="0.0798%" height="15" fill="rgb(222,158,48)" fg:x="397" fg:w="1"/><text x="31.9340%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.6840%" y="693" width="0.0798%" height="15" fill="rgb(254,2,54)" fg:x="397" fg:w="1"/><text x="31.9340%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.6840%" y="677" width="0.0798%" height="15" fill="rgb(250,143,38)" fg:x="397" fg:w="1"/><text x="31.9340%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.6840%" y="661" width="0.0798%" height="15" fill="rgb(248,25,0)" fg:x="397" fg:w="1"/><text x="31.9340%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6840%" y="645" width="0.0798%" height="15" fill="rgb(206,152,27)" fg:x="397" fg:w="1"/><text x="31.9340%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.6840%" y="629" width="0.0798%" height="15" fill="rgb(240,77,30)" fg:x="397" fg:w="1"/><text x="31.9340%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="31.7638%" y="741" width="0.0798%" height="15" fill="rgb(231,5,3)" fg:x="398" fg:w="1"/><text x="32.0138%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="31.7638%" y="725" width="0.0798%" height="15" fill="rgb(207,226,32)" fg:x="398" fg:w="1"/><text x="32.0138%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7638%" y="709" width="0.0798%" height="15" fill="rgb(222,207,47)" fg:x="398" fg:w="1"/><text x="32.0138%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9234%" y="661" width="0.0798%" height="15" fill="rgb(229,115,45)" fg:x="400" fg:w="1"/><text x="32.1734%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9234%" y="645" width="0.0798%" height="15" fill="rgb(224,191,6)" fg:x="400" fg:w="1"/><text x="32.1734%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.9234%" y="693" width="0.1596%" height="15" fill="rgb(230,227,24)" fg:x="400" fg:w="2"/><text x="32.1734%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.9234%" y="677" width="0.1596%" height="15" fill="rgb(228,80,19)" fg:x="400" fg:w="2"/><text x="32.1734%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0032%" y="661" width="0.0798%" height="15" fill="rgb(247,229,0)" fg:x="401" fg:w="1"/><text x="32.2532%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.0032%" y="645" width="0.0798%" height="15" fill="rgb(237,194,15)" fg:x="401" fg:w="1"/><text x="32.2532%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.0032%" y="629" width="0.0798%" height="15" fill="rgb(219,203,20)" fg:x="401" fg:w="1"/><text x="32.2532%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.0032%" y="613" width="0.0798%" height="15" fill="rgb(234,128,8)" fg:x="401" fg:w="1"/><text x="32.2532%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.0032%" y="597" width="0.0798%" height="15" fill="rgb(248,202,8)" fg:x="401" fg:w="1"/><text x="32.2532%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.0032%" y="581" width="0.0798%" height="15" fill="rgb(206,104,37)" fg:x="401" fg:w="1"/><text x="32.2532%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.0032%" y="565" width="0.0798%" height="15" fill="rgb(223,8,27)" fg:x="401" fg:w="1"/><text x="32.2532%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="31.8436%" y="725" width="0.3192%" height="15" fill="rgb(216,217,28)" fg:x="399" fg:w="4"/><text x="32.0936%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="31.8436%" y="709" width="0.3192%" height="15" fill="rgb(249,199,1)" fg:x="399" fg:w="4"/><text x="32.0936%" y="719.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="32.0830%" y="693" width="0.0798%" height="15" fill="rgb(240,85,17)" fg:x="402" fg:w="1"/><text x="32.3330%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.1628%" y="693" width="0.0798%" height="15" fill="rgb(206,108,45)" fg:x="403" fg:w="1"/><text x="32.4128%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2426%" y="677" width="0.0798%" height="15" fill="rgb(245,210,41)" fg:x="404" fg:w="1"/><text x="32.4926%" y="687.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="32.1628%" y="709" width="0.2394%" height="15" fill="rgb(206,13,37)" fg:x="403" fg:w="3"/><text x="32.4128%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="32.2426%" y="693" width="0.1596%" height="15" fill="rgb(250,61,18)" fg:x="404" fg:w="2"/><text x="32.4926%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3224%" y="677" width="0.0798%" height="15" fill="rgb(235,172,48)" fg:x="405" fg:w="1"/><text x="32.5724%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.3224%" y="661" width="0.0798%" height="15" fill="rgb(249,201,17)" fg:x="405" fg:w="1"/><text x="32.5724%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (9 samples, 0.72%)</title><rect x="31.8436%" y="741" width="0.7183%" height="15" fill="rgb(219,208,6)" fg:x="399" fg:w="9"/><text x="32.0936%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="32.1628%" y="725" width="0.3990%" height="15" fill="rgb(248,31,23)" fg:x="403" fg:w="5"/><text x="32.4128%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="32.4022%" y="709" width="0.1596%" height="15" fill="rgb(245,15,42)" fg:x="406" fg:w="2"/><text x="32.6522%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="32.4022%" y="693" width="0.1596%" height="15" fill="rgb(222,217,39)" fg:x="406" fg:w="2"/><text x="32.6522%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.4820%" y="677" width="0.0798%" height="15" fill="rgb(210,219,27)" fg:x="407" fg:w="1"/><text x="32.7320%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4820%" y="661" width="0.0798%" height="15" fill="rgb(252,166,36)" fg:x="407" fg:w="1"/><text x="32.7320%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4820%" y="645" width="0.0798%" height="15" fill="rgb(245,132,34)" fg:x="407" fg:w="1"/><text x="32.7320%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="32.5619%" y="693" width="0.1596%" height="15" fill="rgb(236,54,3)" fg:x="408" fg:w="2"/><text x="32.8119%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.6417%" y="677" width="0.0798%" height="15" fill="rgb(241,173,43)" fg:x="409" fg:w="1"/><text x="32.8917%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.6417%" y="661" width="0.0798%" height="15" fill="rgb(215,190,9)" fg:x="409" fg:w="1"/><text x="32.8917%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.6417%" y="645" width="0.0798%" height="15" fill="rgb(242,101,16)" fg:x="409" fg:w="1"/><text x="32.8917%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.6417%" y="629" width="0.0798%" height="15" fill="rgb(223,190,21)" fg:x="409" fg:w="1"/><text x="32.8917%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6417%" y="613" width="0.0798%" height="15" fill="rgb(215,228,25)" fg:x="409" fg:w="1"/><text x="32.8917%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="31.5243%" y="757" width="1.2769%" height="15" fill="rgb(225,36,22)" fg:x="395" fg:w="16"/><text x="31.7743%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="32.5619%" y="741" width="0.2394%" height="15" fill="rgb(251,106,46)" fg:x="408" fg:w="3"/><text x="32.8119%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="32.5619%" y="725" width="0.2394%" height="15" fill="rgb(208,90,1)" fg:x="408" fg:w="3"/><text x="32.8119%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="32.5619%" y="709" width="0.2394%" height="15" fill="rgb(243,10,4)" fg:x="408" fg:w="3"/><text x="32.8119%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.7215%" y="693" width="0.0798%" height="15" fill="rgb(212,137,27)" fg:x="410" fg:w="1"/><text x="32.9715%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.7215%" y="677" width="0.0798%" height="15" fill="rgb(231,220,49)" fg:x="410" fg:w="1"/><text x="32.9715%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.7215%" y="661" width="0.0798%" height="15" fill="rgb(237,96,20)" fg:x="410" fg:w="1"/><text x="32.9715%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="32.7215%" y="645" width="0.0798%" height="15" fill="rgb(239,229,30)" fg:x="410" fg:w="1"/><text x="32.9715%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="32.8013%" y="741" width="0.0798%" height="15" fill="rgb(219,65,33)" fg:x="411" fg:w="1"/><text x="33.0513%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.8013%" y="725" width="0.0798%" height="15" fill="rgb(243,134,7)" fg:x="411" fg:w="1"/><text x="33.0513%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8013%" y="709" width="0.0798%" height="15" fill="rgb(216,177,54)" fg:x="411" fg:w="1"/><text x="33.0513%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="32.8811%" y="741" width="0.0798%" height="15" fill="rgb(211,160,20)" fg:x="412" fg:w="1"/><text x="33.1311%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.8811%" y="725" width="0.0798%" height="15" fill="rgb(239,85,39)" fg:x="412" fg:w="1"/><text x="33.1311%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8811%" y="709" width="0.0798%" height="15" fill="rgb(232,125,22)" fg:x="412" fg:w="1"/><text x="33.1311%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1205%" y="549" width="0.0798%" height="15" fill="rgb(244,57,34)" fg:x="415" fg:w="1"/><text x="33.3705%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1205%" y="533" width="0.0798%" height="15" fill="rgb(214,203,32)" fg:x="415" fg:w="1"/><text x="33.3705%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.1205%" y="517" width="0.0798%" height="15" fill="rgb(207,58,43)" fg:x="415" fg:w="1"/><text x="33.3705%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.1205%" y="501" width="0.0798%" height="15" fill="rgb(215,193,15)" fg:x="415" fg:w="1"/><text x="33.3705%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.1205%" y="485" width="0.0798%" height="15" fill="rgb(232,15,44)" fg:x="415" fg:w="1"/><text x="33.3705%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.1205%" y="469" width="0.0798%" height="15" fill="rgb(212,3,48)" fg:x="415" fg:w="1"/><text x="33.3705%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1205%" y="453" width="0.0798%" height="15" fill="rgb(218,128,7)" fg:x="415" fg:w="1"/><text x="33.3705%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="32.9609%" y="677" width="0.3192%" height="15" fill="rgb(226,216,39)" fg:x="413" fg:w="4"/><text x="33.2109%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="32.9609%" y="661" width="0.3192%" height="15" fill="rgb(243,47,51)" fg:x="413" fg:w="4"/><text x="33.2109%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.0407%" y="645" width="0.2394%" height="15" fill="rgb(241,183,40)" fg:x="414" fg:w="3"/><text x="33.2907%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.1205%" y="629" width="0.1596%" height="15" fill="rgb(231,217,32)" fg:x="415" fg:w="2"/><text x="33.3705%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.1205%" y="613" width="0.1596%" height="15" fill="rgb(229,61,38)" fg:x="415" fg:w="2"/><text x="33.3705%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.1205%" y="597" width="0.1596%" height="15" fill="rgb(225,210,5)" fg:x="415" fg:w="2"/><text x="33.3705%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.1205%" y="581" width="0.1596%" height="15" fill="rgb(231,79,45)" fg:x="415" fg:w="2"/><text x="33.3705%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.1205%" y="565" width="0.1596%" height="15" fill="rgb(224,100,7)" fg:x="415" fg:w="2"/><text x="33.3705%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.2003%" y="549" width="0.0798%" height="15" fill="rgb(241,198,18)" fg:x="416" fg:w="1"/><text x="33.4503%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.2003%" y="533" width="0.0798%" height="15" fill="rgb(252,97,53)" fg:x="416" fg:w="1"/><text x="33.4503%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2801%" y="645" width="0.0798%" height="15" fill="rgb(220,88,7)" fg:x="417" fg:w="1"/><text x="33.5301%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.2801%" y="677" width="0.1596%" height="15" fill="rgb(213,176,14)" fg:x="417" fg:w="2"/><text x="33.5301%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.2801%" y="661" width="0.1596%" height="15" fill="rgb(246,73,7)" fg:x="417" fg:w="2"/><text x="33.5301%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.3599%" y="645" width="0.0798%" height="15" fill="rgb(245,64,36)" fg:x="418" fg:w="1"/><text x="33.6099%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.3599%" y="629" width="0.0798%" height="15" fill="rgb(245,80,10)" fg:x="418" fg:w="1"/><text x="33.6099%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3599%" y="613" width="0.0798%" height="15" fill="rgb(232,107,50)" fg:x="418" fg:w="1"/><text x="33.6099%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="32.9609%" y="709" width="0.5587%" height="15" fill="rgb(253,3,0)" fg:x="413" fg:w="7"/><text x="33.2109%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="32.9609%" y="693" width="0.5587%" height="15" fill="rgb(212,99,53)" fg:x="413" fg:w="7"/><text x="33.2109%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.4397%" y="677" width="0.0798%" height="15" fill="rgb(249,111,54)" fg:x="419" fg:w="1"/><text x="33.6897%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.4397%" y="661" width="0.0798%" height="15" fill="rgb(249,55,30)" fg:x="419" fg:w="1"/><text x="33.6897%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.4397%" y="645" width="0.0798%" height="15" fill="rgb(237,47,42)" fg:x="419" fg:w="1"/><text x="33.6897%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.4397%" y="629" width="0.0798%" height="15" fill="rgb(211,20,18)" fg:x="419" fg:w="1"/><text x="33.6897%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.4397%" y="613" width="0.0798%" height="15" fill="rgb(231,203,46)" fg:x="419" fg:w="1"/><text x="33.6897%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.4397%" y="597" width="0.0798%" height="15" fill="rgb(237,142,3)" fg:x="419" fg:w="1"/><text x="33.6897%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.4397%" y="581" width="0.0798%" height="15" fill="rgb(241,107,1)" fg:x="419" fg:w="1"/><text x="33.6897%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="33.5196%" y="693" width="0.0798%" height="15" fill="rgb(229,83,13)" fg:x="420" fg:w="1"/><text x="33.7696%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5196%" y="677" width="0.0798%" height="15" fill="rgb(241,91,40)" fg:x="420" fg:w="1"/><text x="33.7696%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.5994%" y="677" width="0.2394%" height="15" fill="rgb(225,3,45)" fg:x="421" fg:w="3"/><text x="33.8494%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.5994%" y="661" width="0.2394%" height="15" fill="rgb(244,223,14)" fg:x="421" fg:w="3"/><text x="33.8494%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="33.5994%" y="645" width="0.2394%" height="15" fill="rgb(224,124,37)" fg:x="421" fg:w="3"/><text x="33.8494%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="33.5994%" y="629" width="0.2394%" height="15" fill="rgb(251,171,30)" fg:x="421" fg:w="3"/><text x="33.8494%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="33.5994%" y="613" width="0.2394%" height="15" fill="rgb(236,46,54)" fg:x="421" fg:w="3"/><text x="33.8494%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="33.5994%" y="597" width="0.2394%" height="15" fill="rgb(245,213,5)" fg:x="421" fg:w="3"/><text x="33.8494%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="33.5994%" y="581" width="0.2394%" height="15" fill="rgb(230,144,27)" fg:x="421" fg:w="3"/><text x="33.8494%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="33.5994%" y="565" width="0.2394%" height="15" fill="rgb(220,86,6)" fg:x="421" fg:w="3"/><text x="33.8494%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="33.5994%" y="549" width="0.2394%" height="15" fill="rgb(240,20,13)" fg:x="421" fg:w="3"/><text x="33.8494%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="33.5994%" y="533" width="0.2394%" height="15" fill="rgb(217,89,34)" fg:x="421" fg:w="3"/><text x="33.8494%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="33.5994%" y="517" width="0.2394%" height="15" fill="rgb(229,13,5)" fg:x="421" fg:w="3"/><text x="33.8494%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="33.5994%" y="501" width="0.2394%" height="15" fill="rgb(244,67,35)" fg:x="421" fg:w="3"/><text x="33.8494%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="33.5994%" y="485" width="0.2394%" height="15" fill="rgb(221,40,2)" fg:x="421" fg:w="3"/><text x="33.8494%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="33.5994%" y="469" width="0.2394%" height="15" fill="rgb(237,157,21)" fg:x="421" fg:w="3"/><text x="33.8494%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="33.5994%" y="453" width="0.2394%" height="15" fill="rgb(222,94,11)" fg:x="421" fg:w="3"/><text x="33.8494%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="32.9609%" y="741" width="1.0375%" height="15" fill="rgb(249,113,6)" fg:x="413" fg:w="13"/><text x="33.2109%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="32.9609%" y="725" width="1.0375%" height="15" fill="rgb(238,137,36)" fg:x="413" fg:w="13"/><text x="33.2109%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="33.5196%" y="709" width="0.4789%" height="15" fill="rgb(210,102,26)" fg:x="420" fg:w="6"/><text x="33.7696%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="33.5994%" y="693" width="0.3990%" height="15" fill="rgb(218,30,30)" fg:x="421" fg:w="5"/><text x="33.8494%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.8388%" y="677" width="0.1596%" height="15" fill="rgb(214,67,26)" fg:x="424" fg:w="2"/><text x="34.0888%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.8388%" y="661" width="0.1596%" height="15" fill="rgb(251,9,53)" fg:x="424" fg:w="2"/><text x="34.0888%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="33.8388%" y="645" width="0.1596%" height="15" fill="rgb(228,204,25)" fg:x="424" fg:w="2"/><text x="34.0888%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.8388%" y="629" width="0.1596%" height="15" fill="rgb(207,153,8)" fg:x="424" fg:w="2"/><text x="34.0888%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.9186%" y="613" width="0.0798%" height="15" fill="rgb(242,9,16)" fg:x="425" fg:w="1"/><text x="34.1686%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.9186%" y="597" width="0.0798%" height="15" fill="rgb(217,211,10)" fg:x="425" fg:w="1"/><text x="34.1686%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="33.9984%" y="741" width="0.0798%" height="15" fill="rgb(219,228,52)" fg:x="426" fg:w="1"/><text x="34.2484%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9984%" y="725" width="0.0798%" height="15" fill="rgb(231,92,29)" fg:x="426" fg:w="1"/><text x="34.2484%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9984%" y="709" width="0.0798%" height="15" fill="rgb(232,8,23)" fg:x="426" fg:w="1"/><text x="34.2484%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="34.0782%" y="741" width="0.1596%" height="15" fill="rgb(216,211,34)" fg:x="427" fg:w="2"/><text x="34.3282%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="34.0782%" y="725" width="0.1596%" height="15" fill="rgb(236,151,0)" fg:x="427" fg:w="2"/><text x="34.3282%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.0782%" y="709" width="0.1596%" height="15" fill="rgb(209,168,3)" fg:x="427" fg:w="2"/><text x="34.3282%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="34.0782%" y="693" width="0.1596%" height="15" fill="rgb(208,129,28)" fg:x="427" fg:w="2"/><text x="34.3282%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="34.0782%" y="677" width="0.1596%" height="15" fill="rgb(229,78,22)" fg:x="427" fg:w="2"/><text x="34.3282%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.1580%" y="661" width="0.0798%" height="15" fill="rgb(228,187,13)" fg:x="428" fg:w="1"/><text x="34.4080%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1580%" y="645" width="0.0798%" height="15" fill="rgb(240,119,24)" fg:x="428" fg:w="1"/><text x="34.4080%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2378%" y="693" width="0.0798%" height="15" fill="rgb(209,194,42)" fg:x="429" fg:w="1"/><text x="34.4878%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2378%" y="677" width="0.0798%" height="15" fill="rgb(247,200,46)" fg:x="429" fg:w="1"/><text x="34.4878%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.2378%" y="661" width="0.0798%" height="15" fill="rgb(218,76,16)" fg:x="429" fg:w="1"/><text x="34.4878%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.2378%" y="645" width="0.0798%" height="15" fill="rgb(225,21,48)" fg:x="429" fg:w="1"/><text x="34.4878%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.2378%" y="629" width="0.0798%" height="15" fill="rgb(239,223,50)" fg:x="429" fg:w="1"/><text x="34.4878%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2378%" y="613" width="0.0798%" height="15" fill="rgb(244,45,21)" fg:x="429" fg:w="1"/><text x="34.4878%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2378%" y="597" width="0.0798%" height="15" fill="rgb(232,33,43)" fg:x="429" fg:w="1"/><text x="34.4878%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.2378%" y="581" width="0.0798%" height="15" fill="rgb(209,8,3)" fg:x="429" fg:w="1"/><text x="34.4878%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.2378%" y="565" width="0.0798%" height="15" fill="rgb(214,25,53)" fg:x="429" fg:w="1"/><text x="34.4878%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.2378%" y="549" width="0.0798%" height="15" fill="rgb(254,186,54)" fg:x="429" fg:w="1"/><text x="34.4878%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.2378%" y="533" width="0.0798%" height="15" fill="rgb(208,174,49)" fg:x="429" fg:w="1"/><text x="34.4878%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2378%" y="517" width="0.0798%" height="15" fill="rgb(233,191,51)" fg:x="429" fg:w="1"/><text x="34.4878%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.3176%" y="693" width="0.3192%" height="15" fill="rgb(222,134,10)" fg:x="430" fg:w="4"/><text x="34.5676%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.3176%" y="677" width="0.3192%" height="15" fill="rgb(230,226,20)" fg:x="430" fg:w="4"/><text x="34.5676%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.3974%" y="661" width="0.2394%" height="15" fill="rgb(251,111,25)" fg:x="431" fg:w="3"/><text x="34.6474%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.3974%" y="645" width="0.2394%" height="15" fill="rgb(224,40,46)" fg:x="431" fg:w="3"/><text x="34.6474%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="34.3974%" y="629" width="0.2394%" height="15" fill="rgb(236,108,47)" fg:x="431" fg:w="3"/><text x="34.6474%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.3974%" y="613" width="0.2394%" height="15" fill="rgb(234,93,0)" fg:x="431" fg:w="3"/><text x="34.6474%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="34.3974%" y="597" width="0.2394%" height="15" fill="rgb(224,213,32)" fg:x="431" fg:w="3"/><text x="34.6474%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="34.3974%" y="581" width="0.2394%" height="15" fill="rgb(251,11,48)" fg:x="431" fg:w="3"/><text x="34.6474%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.5571%" y="565" width="0.0798%" height="15" fill="rgb(236,173,5)" fg:x="433" fg:w="1"/><text x="34.8071%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7167%" y="661" width="0.0798%" height="15" fill="rgb(230,95,12)" fg:x="435" fg:w="1"/><text x="34.9667%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7167%" y="645" width="0.0798%" height="15" fill="rgb(232,209,1)" fg:x="435" fg:w="1"/><text x="34.9667%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7167%" y="629" width="0.0798%" height="15" fill="rgb(232,6,1)" fg:x="435" fg:w="1"/><text x="34.9667%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7167%" y="613" width="0.0798%" height="15" fill="rgb(210,224,50)" fg:x="435" fg:w="1"/><text x="34.9667%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.7167%" y="597" width="0.0798%" height="15" fill="rgb(228,127,35)" fg:x="435" fg:w="1"/><text x="34.9667%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.7167%" y="581" width="0.0798%" height="15" fill="rgb(245,102,45)" fg:x="435" fg:w="1"/><text x="34.9667%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.7167%" y="565" width="0.0798%" height="15" fill="rgb(214,1,49)" fg:x="435" fg:w="1"/><text x="34.9667%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7167%" y="549" width="0.0798%" height="15" fill="rgb(226,163,40)" fg:x="435" fg:w="1"/><text x="34.9667%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7167%" y="533" width="0.0798%" height="15" fill="rgb(239,212,28)" fg:x="435" fg:w="1"/><text x="34.9667%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.7167%" y="517" width="0.0798%" height="15" fill="rgb(220,20,13)" fg:x="435" fg:w="1"/><text x="34.9667%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.7167%" y="501" width="0.0798%" height="15" fill="rgb(210,164,35)" fg:x="435" fg:w="1"/><text x="34.9667%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.7167%" y="485" width="0.0798%" height="15" fill="rgb(248,109,41)" fg:x="435" fg:w="1"/><text x="34.9667%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.7167%" y="469" width="0.0798%" height="15" fill="rgb(238,23,50)" fg:x="435" fg:w="1"/><text x="34.9667%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7167%" y="453" width="0.0798%" height="15" fill="rgb(211,48,49)" fg:x="435" fg:w="1"/><text x="34.9667%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7965%" y="661" width="0.0798%" height="15" fill="rgb(223,36,21)" fg:x="436" fg:w="1"/><text x="35.0465%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.7965%" y="645" width="0.0798%" height="15" fill="rgb(207,123,46)" fg:x="436" fg:w="1"/><text x="35.0465%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7965%" y="629" width="0.0798%" height="15" fill="rgb(240,218,32)" fg:x="436" fg:w="1"/><text x="35.0465%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7965%" y="613" width="0.0798%" height="15" fill="rgb(252,5,43)" fg:x="436" fg:w="1"/><text x="35.0465%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7965%" y="597" width="0.0798%" height="15" fill="rgb(252,84,19)" fg:x="436" fg:w="1"/><text x="35.0465%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="34.2378%" y="725" width="0.7981%" height="15" fill="rgb(243,152,39)" fg:x="429" fg:w="10"/><text x="34.4878%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="34.2378%" y="709" width="0.7981%" height="15" fill="rgb(234,160,15)" fg:x="429" fg:w="10"/><text x="34.4878%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="34.6369%" y="693" width="0.3990%" height="15" fill="rgb(237,34,20)" fg:x="434" fg:w="5"/><text x="34.8869%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="34.6369%" y="677" width="0.3990%" height="15" fill="rgb(229,97,13)" fg:x="434" fg:w="5"/><text x="34.8869%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.8763%" y="661" width="0.1596%" height="15" fill="rgb(234,71,50)" fg:x="437" fg:w="2"/><text x="35.1263%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8763%" y="645" width="0.1596%" height="15" fill="rgb(253,155,4)" fg:x="437" fg:w="2"/><text x="35.1263%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.8763%" y="629" width="0.1596%" height="15" fill="rgb(222,185,37)" fg:x="437" fg:w="2"/><text x="35.1263%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8763%" y="613" width="0.1596%" height="15" fill="rgb(251,177,13)" fg:x="437" fg:w="2"/><text x="35.1263%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.8763%" y="597" width="0.1596%" height="15" fill="rgb(250,179,40)" fg:x="437" fg:w="2"/><text x="35.1263%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.8763%" y="581" width="0.1596%" height="15" fill="rgb(242,44,2)" fg:x="437" fg:w="2"/><text x="35.1263%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9561%" y="565" width="0.0798%" height="15" fill="rgb(216,177,13)" fg:x="438" fg:w="1"/><text x="35.2061%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="34.2378%" y="741" width="0.8779%" height="15" fill="rgb(216,106,43)" fg:x="429" fg:w="11"/><text x="34.4878%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="35.0359%" y="725" width="0.0798%" height="15" fill="rgb(216,183,2)" fg:x="439" fg:w="1"/><text x="35.2859%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.0359%" y="709" width="0.0798%" height="15" fill="rgb(249,75,3)" fg:x="439" fg:w="1"/><text x="35.2859%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0359%" y="693" width="0.0798%" height="15" fill="rgb(219,67,39)" fg:x="439" fg:w="1"/><text x="35.2859%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (46 samples, 3.67%)</title><rect x="31.5243%" y="773" width="3.6712%" height="15" fill="rgb(253,228,2)" fg:x="395" fg:w="46"/><text x="31.7743%" y="783.50">plug..</text></g><g><title>plugins_core::tools::set_container (30 samples, 2.39%)</title><rect x="32.8013%" y="757" width="2.3943%" height="15" fill="rgb(235,138,27)" fg:x="411" fg:w="30"/><text x="33.0513%" y="767.50">pl..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="35.1157%" y="741" width="0.0798%" height="15" fill="rgb(236,97,51)" fg:x="440" fg:w="1"/><text x="35.3657%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="35.1157%" y="725" width="0.0798%" height="15" fill="rgb(240,80,30)" fg:x="440" fg:w="1"/><text x="35.3657%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1157%" y="709" width="0.0798%" height="15" fill="rgb(230,178,19)" fg:x="440" fg:w="1"/><text x="35.3657%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1157%" y="693" width="0.0798%" height="15" fill="rgb(210,190,27)" fg:x="440" fg:w="1"/><text x="35.3657%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1157%" y="677" width="0.0798%" height="15" fill="rgb(222,107,31)" fg:x="440" fg:w="1"/><text x="35.3657%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1157%" y="661" width="0.0798%" height="15" fill="rgb(216,127,34)" fg:x="440" fg:w="1"/><text x="35.3657%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.1157%" y="645" width="0.0798%" height="15" fill="rgb(234,116,52)" fg:x="440" fg:w="1"/><text x="35.3657%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="35.1955%" y="741" width="0.2394%" height="15" fill="rgb(222,124,15)" fg:x="441" fg:w="3"/><text x="35.4455%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="35.2753%" y="725" width="0.1596%" height="15" fill="rgb(231,179,28)" fg:x="442" fg:w="2"/><text x="35.5253%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="35.2753%" y="709" width="0.1596%" height="15" fill="rgb(226,93,45)" fg:x="442" fg:w="2"/><text x="35.5253%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="35.2753%" y="693" width="0.1596%" height="15" fill="rgb(215,8,51)" fg:x="442" fg:w="2"/><text x="35.5253%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.2753%" y="677" width="0.1596%" height="15" fill="rgb(223,106,5)" fg:x="442" fg:w="2"/><text x="35.5253%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.2753%" y="661" width="0.1596%" height="15" fill="rgb(250,191,5)" fg:x="442" fg:w="2"/><text x="35.5253%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.2753%" y="645" width="0.1596%" height="15" fill="rgb(242,132,44)" fg:x="442" fg:w="2"/><text x="35.5253%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.2753%" y="629" width="0.1596%" height="15" fill="rgb(251,152,29)" fg:x="442" fg:w="2"/><text x="35.5253%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.2753%" y="613" width="0.1596%" height="15" fill="rgb(218,179,5)" fg:x="442" fg:w="2"/><text x="35.5253%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="597" width="0.0798%" height="15" fill="rgb(227,67,19)" fg:x="443" fg:w="1"/><text x="35.6051%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="581" width="0.0798%" height="15" fill="rgb(233,119,31)" fg:x="443" fg:w="1"/><text x="35.6051%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="565" width="0.0798%" height="15" fill="rgb(241,120,22)" fg:x="443" fg:w="1"/><text x="35.6051%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.3551%" y="549" width="0.0798%" height="15" fill="rgb(224,102,30)" fg:x="443" fg:w="1"/><text x="35.6051%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="533" width="0.0798%" height="15" fill="rgb(210,164,37)" fg:x="443" fg:w="1"/><text x="35.6051%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="517" width="0.0798%" height="15" fill="rgb(226,191,16)" fg:x="443" fg:w="1"/><text x="35.6051%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.3551%" y="501" width="0.0798%" height="15" fill="rgb(214,40,45)" fg:x="443" fg:w="1"/><text x="35.6051%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="35.4350%" y="725" width="0.0798%" height="15" fill="rgb(244,29,26)" fg:x="444" fg:w="1"/><text x="35.6850%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4350%" y="709" width="0.0798%" height="15" fill="rgb(216,16,5)" fg:x="444" fg:w="1"/><text x="35.6850%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="35.1955%" y="773" width="0.3990%" height="15" fill="rgb(249,76,35)" fg:x="441" fg:w="5"/><text x="35.4455%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="35.1955%" y="757" width="0.3990%" height="15" fill="rgb(207,11,44)" fg:x="441" fg:w="5"/><text x="35.4455%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="35.4350%" y="741" width="0.1596%" height="15" fill="rgb(228,190,49)" fg:x="444" fg:w="2"/><text x="35.6850%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.5148%" y="725" width="0.0798%" height="15" fill="rgb(214,173,12)" fg:x="445" fg:w="1"/><text x="35.7648%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.5148%" y="709" width="0.0798%" height="15" fill="rgb(218,26,35)" fg:x="445" fg:w="1"/><text x="35.7648%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5148%" y="693" width="0.0798%" height="15" fill="rgb(220,200,19)" fg:x="445" fg:w="1"/><text x="35.7648%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.5148%" y="677" width="0.0798%" height="15" fill="rgb(239,95,49)" fg:x="445" fg:w="1"/><text x="35.7648%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.5148%" y="661" width="0.0798%" height="15" fill="rgb(235,85,53)" fg:x="445" fg:w="1"/><text x="35.7648%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="35.5148%" y="645" width="0.0798%" height="15" fill="rgb(233,133,31)" fg:x="445" fg:w="1"/><text x="35.7648%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5946%" y="677" width="0.0798%" height="15" fill="rgb(218,25,20)" fg:x="446" fg:w="1"/><text x="35.8446%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.5946%" y="661" width="0.0798%" height="15" fill="rgb(252,210,38)" fg:x="446" fg:w="1"/><text x="35.8446%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="35.5946%" y="709" width="0.1596%" height="15" fill="rgb(242,134,21)" fg:x="446" fg:w="2"/><text x="35.8446%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="35.5946%" y="693" width="0.1596%" height="15" fill="rgb(213,28,48)" fg:x="446" fg:w="2"/><text x="35.8446%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="35.6744%" y="677" width="0.0798%" height="15" fill="rgb(250,196,2)" fg:x="447" fg:w="1"/><text x="35.9244%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.6744%" y="661" width="0.0798%" height="15" fill="rgb(227,5,17)" fg:x="447" fg:w="1"/><text x="35.9244%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="35.5946%" y="741" width="0.2394%" height="15" fill="rgb(221,226,24)" fg:x="446" fg:w="3"/><text x="35.8446%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="35.5946%" y="725" width="0.2394%" height="15" fill="rgb(211,5,48)" fg:x="446" fg:w="3"/><text x="35.8446%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.7542%" y="709" width="0.0798%" height="15" fill="rgb(219,150,6)" fg:x="448" fg:w="1"/><text x="36.0042%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.7542%" y="693" width="0.0798%" height="15" fill="rgb(251,46,16)" fg:x="448" fg:w="1"/><text x="36.0042%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.7542%" y="677" width="0.0798%" height="15" fill="rgb(220,204,40)" fg:x="448" fg:w="1"/><text x="36.0042%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="35.7542%" y="661" width="0.0798%" height="15" fill="rgb(211,85,2)" fg:x="448" fg:w="1"/><text x="36.0042%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7542%" y="645" width="0.0798%" height="15" fill="rgb(229,17,7)" fg:x="448" fg:w="1"/><text x="36.0042%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="35.5946%" y="773" width="0.4789%" height="15" fill="rgb(239,72,28)" fg:x="446" fg:w="6"/><text x="35.8446%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.48%)</title><rect x="35.5946%" y="757" width="0.4789%" height="15" fill="rgb(230,47,54)" fg:x="446" fg:w="6"/><text x="35.8446%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.8340%" y="741" width="0.2394%" height="15" fill="rgb(214,50,8)" fg:x="449" fg:w="3"/><text x="36.0840%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9138%" y="725" width="0.1596%" height="15" fill="rgb(216,198,43)" fg:x="450" fg:w="2"/><text x="36.1638%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9138%" y="709" width="0.1596%" height="15" fill="rgb(234,20,35)" fg:x="450" fg:w="2"/><text x="36.1638%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.9936%" y="693" width="0.0798%" height="15" fill="rgb(254,45,19)" fg:x="451" fg:w="1"/><text x="36.2436%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.9936%" y="677" width="0.0798%" height="15" fill="rgb(219,14,44)" fg:x="451" fg:w="1"/><text x="36.2436%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="36.0734%" y="741" width="0.0798%" height="15" fill="rgb(217,220,26)" fg:x="452" fg:w="1"/><text x="36.3234%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="36.0734%" y="725" width="0.0798%" height="15" fill="rgb(213,158,28)" fg:x="452" fg:w="1"/><text x="36.3234%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.0734%" y="709" width="0.0798%" height="15" fill="rgb(252,51,52)" fg:x="452" fg:w="1"/><text x="36.3234%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="693" width="0.0798%" height="15" fill="rgb(246,89,16)" fg:x="452" fg:w="1"/><text x="36.3234%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.0734%" y="677" width="0.0798%" height="15" fill="rgb(216,158,49)" fg:x="452" fg:w="1"/><text x="36.3234%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="661" width="0.0798%" height="15" fill="rgb(236,107,19)" fg:x="452" fg:w="1"/><text x="36.3234%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="645" width="0.0798%" height="15" fill="rgb(228,185,30)" fg:x="452" fg:w="1"/><text x="36.3234%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="629" width="0.0798%" height="15" fill="rgb(246,134,8)" fg:x="452" fg:w="1"/><text x="36.3234%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.0734%" y="613" width="0.0798%" height="15" fill="rgb(214,143,50)" fg:x="452" fg:w="1"/><text x="36.3234%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="597" width="0.0798%" height="15" fill="rgb(228,75,8)" fg:x="452" fg:w="1"/><text x="36.3234%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="581" width="0.0798%" height="15" fill="rgb(207,175,4)" fg:x="452" fg:w="1"/><text x="36.3234%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.0734%" y="565" width="0.0798%" height="15" fill="rgb(205,108,24)" fg:x="452" fg:w="1"/><text x="36.3234%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.0734%" y="549" width="0.0798%" height="15" fill="rgb(244,120,49)" fg:x="452" fg:w="1"/><text x="36.3234%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0734%" y="533" width="0.0798%" height="15" fill="rgb(223,47,38)" fg:x="452" fg:w="1"/><text x="36.3234%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0734%" y="517" width="0.0798%" height="15" fill="rgb(229,179,11)" fg:x="452" fg:w="1"/><text x="36.3234%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.0734%" y="501" width="0.0798%" height="15" fill="rgb(231,122,1)" fg:x="452" fg:w="1"/><text x="36.3234%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.0734%" y="485" width="0.0798%" height="15" fill="rgb(245,119,9)" fg:x="452" fg:w="1"/><text x="36.3234%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.0734%" y="469" width="0.0798%" height="15" fill="rgb(241,163,25)" fg:x="452" fg:w="1"/><text x="36.3234%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.0734%" y="453" width="0.0798%" height="15" fill="rgb(217,214,3)" fg:x="452" fg:w="1"/><text x="36.3234%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.0734%" y="437" width="0.0798%" height="15" fill="rgb(240,86,28)" fg:x="452" fg:w="1"/><text x="36.3234%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="36.1532%" y="741" width="0.0798%" height="15" fill="rgb(215,47,9)" fg:x="453" fg:w="1"/><text x="36.4032%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="36.1532%" y="725" width="0.0798%" height="15" fill="rgb(252,25,45)" fg:x="453" fg:w="1"/><text x="36.4032%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.1532%" y="709" width="0.0798%" height="15" fill="rgb(251,164,9)" fg:x="453" fg:w="1"/><text x="36.4032%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.2330%" y="661" width="0.0798%" height="15" fill="rgb(233,194,0)" fg:x="454" fg:w="1"/><text x="36.4830%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="36.2330%" y="725" width="0.1596%" height="15" fill="rgb(249,111,24)" fg:x="454" fg:w="2"/><text x="36.4830%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="36.2330%" y="709" width="0.1596%" height="15" fill="rgb(250,223,3)" fg:x="454" fg:w="2"/><text x="36.4830%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.2330%" y="693" width="0.1596%" height="15" fill="rgb(236,178,37)" fg:x="454" fg:w="2"/><text x="36.4830%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.2330%" y="677" width="0.1596%" height="15" fill="rgb(241,158,50)" fg:x="454" fg:w="2"/><text x="36.4830%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3128%" y="661" width="0.0798%" height="15" fill="rgb(213,121,41)" fg:x="455" fg:w="1"/><text x="36.5628%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3128%" y="645" width="0.0798%" height="15" fill="rgb(240,92,3)" fg:x="455" fg:w="1"/><text x="36.5628%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3128%" y="629" width="0.0798%" height="15" fill="rgb(205,123,3)" fg:x="455" fg:w="1"/><text x="36.5628%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3128%" y="613" width="0.0798%" height="15" fill="rgb(205,97,47)" fg:x="455" fg:w="1"/><text x="36.5628%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3128%" y="597" width="0.0798%" height="15" fill="rgb(247,152,14)" fg:x="455" fg:w="1"/><text x="36.5628%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3128%" y="581" width="0.0798%" height="15" fill="rgb(248,195,53)" fg:x="455" fg:w="1"/><text x="36.5628%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.3128%" y="565" width="0.0798%" height="15" fill="rgb(226,201,16)" fg:x="455" fg:w="1"/><text x="36.5628%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.3128%" y="549" width="0.0798%" height="15" fill="rgb(205,98,0)" fg:x="455" fg:w="1"/><text x="36.5628%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.3128%" y="533" width="0.0798%" height="15" fill="rgb(214,191,48)" fg:x="455" fg:w="1"/><text x="36.5628%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.3128%" y="517" width="0.0798%" height="15" fill="rgb(237,112,39)" fg:x="455" fg:w="1"/><text x="36.5628%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.3128%" y="501" width="0.0798%" height="15" fill="rgb(247,203,27)" fg:x="455" fg:w="1"/><text x="36.5628%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3128%" y="485" width="0.0798%" height="15" fill="rgb(235,124,28)" fg:x="455" fg:w="1"/><text x="36.5628%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3927%" y="677" width="0.0798%" height="15" fill="rgb(208,207,46)" fg:x="456" fg:w="1"/><text x="36.6427%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3927%" y="661" width="0.0798%" height="15" fill="rgb(234,176,4)" fg:x="456" fg:w="1"/><text x="36.6427%" y="671.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="36.3927%" y="709" width="0.1596%" height="15" fill="rgb(230,133,28)" fg:x="456" fg:w="2"/><text x="36.6427%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.3927%" y="693" width="0.1596%" height="15" fill="rgb(211,137,40)" fg:x="456" fg:w="2"/><text x="36.6427%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4725%" y="677" width="0.0798%" height="15" fill="rgb(254,35,13)" fg:x="457" fg:w="1"/><text x="36.7225%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="36.2330%" y="741" width="0.3990%" height="15" fill="rgb(225,49,51)" fg:x="454" fg:w="5"/><text x="36.4830%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="36.3927%" y="725" width="0.2394%" height="15" fill="rgb(251,10,15)" fg:x="456" fg:w="3"/><text x="36.6427%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.5523%" y="709" width="0.0798%" height="15" fill="rgb(228,207,15)" fg:x="458" fg:w="1"/><text x="36.8023%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5523%" y="693" width="0.0798%" height="15" fill="rgb(241,99,19)" fg:x="458" fg:w="1"/><text x="36.8023%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6321%" y="661" width="0.0798%" height="15" fill="rgb(207,104,49)" fg:x="459" fg:w="1"/><text x="36.8821%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6321%" y="645" width="0.0798%" height="15" fill="rgb(234,99,18)" fg:x="459" fg:w="1"/><text x="36.8821%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6321%" y="629" width="0.0798%" height="15" fill="rgb(213,191,49)" fg:x="459" fg:w="1"/><text x="36.8821%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6321%" y="613" width="0.0798%" height="15" fill="rgb(210,226,19)" fg:x="459" fg:w="1"/><text x="36.8821%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.7119%" y="629" width="0.0798%" height="15" fill="rgb(229,97,18)" fg:x="460" fg:w="1"/><text x="36.9619%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.7119%" y="661" width="0.1596%" height="15" fill="rgb(211,167,15)" fg:x="460" fg:w="2"/><text x="36.9619%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="36.7119%" y="645" width="0.1596%" height="15" fill="rgb(210,169,34)" fg:x="460" fg:w="2"/><text x="36.9619%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.7917%" y="629" width="0.0798%" height="15" fill="rgb(241,121,31)" fg:x="461" fg:w="1"/><text x="37.0417%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.7917%" y="613" width="0.0798%" height="15" fill="rgb(232,40,11)" fg:x="461" fg:w="1"/><text x="37.0417%" y="623.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.56%)</title><rect x="36.6321%" y="693" width="0.5587%" height="15" fill="rgb(205,86,26)" fg:x="459" fg:w="7"/><text x="36.8821%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="36.6321%" y="677" width="0.5587%" height="15" fill="rgb(231,126,28)" fg:x="459" fg:w="7"/><text x="36.8821%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="36.8715%" y="661" width="0.3192%" height="15" fill="rgb(219,221,18)" fg:x="462" fg:w="4"/><text x="37.1215%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.0311%" y="645" width="0.1596%" height="15" fill="rgb(211,40,0)" fg:x="464" fg:w="2"/><text x="37.2811%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="37.0311%" y="629" width="0.1596%" height="15" fill="rgb(239,85,43)" fg:x="464" fg:w="2"/><text x="37.2811%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.1109%" y="613" width="0.0798%" height="15" fill="rgb(231,55,21)" fg:x="465" fg:w="1"/><text x="37.3609%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="36.0734%" y="757" width="1.1971%" height="15" fill="rgb(225,184,43)" fg:x="452" fg:w="15"/><text x="36.3234%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="36.6321%" y="741" width="0.6385%" height="15" fill="rgb(251,158,41)" fg:x="459" fg:w="8"/><text x="36.8821%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="36.6321%" y="725" width="0.6385%" height="15" fill="rgb(234,159,37)" fg:x="459" fg:w="8"/><text x="36.8821%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.64%)</title><rect x="36.6321%" y="709" width="0.6385%" height="15" fill="rgb(216,204,22)" fg:x="459" fg:w="8"/><text x="36.8821%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.1907%" y="693" width="0.0798%" height="15" fill="rgb(214,17,3)" fg:x="466" fg:w="1"/><text x="37.4407%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1907%" y="677" width="0.0798%" height="15" fill="rgb(212,111,17)" fg:x="466" fg:w="1"/><text x="37.4407%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1907%" y="661" width="0.0798%" height="15" fill="rgb(221,157,24)" fg:x="466" fg:w="1"/><text x="37.4407%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2706%" y="693" width="0.0798%" height="15" fill="rgb(252,16,13)" fg:x="467" fg:w="1"/><text x="37.5206%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.2706%" y="709" width="0.1596%" height="15" fill="rgb(221,62,2)" fg:x="467" fg:w="2"/><text x="37.5206%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.3504%" y="693" width="0.0798%" height="15" fill="rgb(247,87,22)" fg:x="468" fg:w="1"/><text x="37.6004%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.3504%" y="677" width="0.0798%" height="15" fill="rgb(215,73,9)" fg:x="468" fg:w="1"/><text x="37.6004%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3504%" y="661" width="0.0798%" height="15" fill="rgb(207,175,33)" fg:x="468" fg:w="1"/><text x="37.6004%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.3504%" y="645" width="0.0798%" height="15" fill="rgb(243,129,54)" fg:x="468" fg:w="1"/><text x="37.6004%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.3504%" y="629" width="0.0798%" height="15" fill="rgb(227,119,45)" fg:x="468" fg:w="1"/><text x="37.6004%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3504%" y="613" width="0.0798%" height="15" fill="rgb(205,109,36)" fg:x="468" fg:w="1"/><text x="37.6004%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.3504%" y="597" width="0.0798%" height="15" fill="rgb(205,6,39)" fg:x="468" fg:w="1"/><text x="37.6004%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="37.2706%" y="741" width="0.2394%" height="15" fill="rgb(221,32,16)" fg:x="467" fg:w="3"/><text x="37.5206%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="37.2706%" y="725" width="0.2394%" height="15" fill="rgb(228,144,50)" fg:x="467" fg:w="3"/><text x="37.5206%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="37.4302%" y="709" width="0.0798%" height="15" fill="rgb(229,201,53)" fg:x="469" fg:w="1"/><text x="37.6802%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.4302%" y="693" width="0.0798%" height="15" fill="rgb(249,153,27)" fg:x="469" fg:w="1"/><text x="37.6802%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5100%" y="725" width="0.0798%" height="15" fill="rgb(227,106,25)" fg:x="470" fg:w="1"/><text x="37.7600%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5100%" y="709" width="0.0798%" height="15" fill="rgb(230,65,29)" fg:x="470" fg:w="1"/><text x="37.7600%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.5100%" y="693" width="0.0798%" height="15" fill="rgb(221,57,46)" fg:x="470" fg:w="1"/><text x="37.7600%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.5100%" y="677" width="0.0798%" height="15" fill="rgb(229,161,17)" fg:x="470" fg:w="1"/><text x="37.7600%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.5100%" y="661" width="0.0798%" height="15" fill="rgb(222,213,11)" fg:x="470" fg:w="1"/><text x="37.7600%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.5100%" y="645" width="0.0798%" height="15" fill="rgb(235,35,13)" fg:x="470" fg:w="1"/><text x="37.7600%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="37.5100%" y="629" width="0.0798%" height="15" fill="rgb(233,158,34)" fg:x="470" fg:w="1"/><text x="37.7600%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.5100%" y="613" width="0.0798%" height="15" fill="rgb(215,151,48)" fg:x="470" fg:w="1"/><text x="37.7600%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="37.5100%" y="741" width="0.1596%" height="15" fill="rgb(229,84,14)" fg:x="470" fg:w="2"/><text x="37.7600%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.5898%" y="725" width="0.0798%" height="15" fill="rgb(229,68,14)" fg:x="471" fg:w="1"/><text x="37.8398%" y="735.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="37.5898%" y="709" width="0.0798%" height="15" fill="rgb(243,106,26)" fg:x="471" fg:w="1"/><text x="37.8398%" y="719.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.5898%" y="693" width="0.0798%" height="15" fill="rgb(206,45,38)" fg:x="471" fg:w="1"/><text x="37.8398%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6696%" y="725" width="0.0798%" height="15" fill="rgb(226,6,15)" fg:x="472" fg:w="1"/><text x="37.9196%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7494%" y="725" width="0.0798%" height="15" fill="rgb(232,22,54)" fg:x="473" fg:w="1"/><text x="37.9994%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7494%" y="709" width="0.0798%" height="15" fill="rgb(229,222,32)" fg:x="473" fg:w="1"/><text x="37.9994%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.7494%" y="693" width="0.0798%" height="15" fill="rgb(228,62,29)" fg:x="473" fg:w="1"/><text x="37.9994%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.7494%" y="677" width="0.0798%" height="15" fill="rgb(251,103,34)" fg:x="473" fg:w="1"/><text x="37.9994%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.7494%" y="661" width="0.0798%" height="15" fill="rgb(233,12,30)" fg:x="473" fg:w="1"/><text x="37.9994%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7494%" y="645" width="0.0798%" height="15" fill="rgb(238,52,0)" fg:x="473" fg:w="1"/><text x="37.9994%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="37.6696%" y="741" width="0.2394%" height="15" fill="rgb(223,98,5)" fg:x="472" fg:w="3"/><text x="37.9196%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8292%" y="725" width="0.0798%" height="15" fill="rgb(228,75,37)" fg:x="474" fg:w="1"/><text x="38.0792%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.8292%" y="709" width="0.0798%" height="15" fill="rgb(205,115,49)" fg:x="474" fg:w="1"/><text x="38.0792%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.8292%" y="693" width="0.0798%" height="15" fill="rgb(250,154,43)" fg:x="474" fg:w="1"/><text x="38.0792%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.8292%" y="677" width="0.0798%" height="15" fill="rgb(226,43,29)" fg:x="474" fg:w="1"/><text x="38.0792%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9090%" y="661" width="0.0798%" height="15" fill="rgb(249,228,39)" fg:x="475" fg:w="1"/><text x="38.1590%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9090%" y="645" width="0.0798%" height="15" fill="rgb(216,79,43)" fg:x="475" fg:w="1"/><text x="38.1590%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.9090%" y="629" width="0.0798%" height="15" fill="rgb(228,95,12)" fg:x="475" fg:w="1"/><text x="38.1590%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.9090%" y="613" width="0.0798%" height="15" fill="rgb(249,221,15)" fg:x="475" fg:w="1"/><text x="38.1590%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.9888%" y="565" width="0.0798%" height="15" fill="rgb(233,34,13)" fg:x="476" fg:w="1"/><text x="38.2388%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="37.9090%" y="693" width="0.2394%" height="15" fill="rgb(214,103,39)" fg:x="475" fg:w="3"/><text x="38.1590%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="37.9090%" y="677" width="0.2394%" height="15" fill="rgb(251,126,39)" fg:x="475" fg:w="3"/><text x="38.1590%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.9888%" y="661" width="0.1596%" height="15" fill="rgb(214,216,36)" fg:x="476" fg:w="2"/><text x="38.2388%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.9888%" y="645" width="0.1596%" height="15" fill="rgb(220,221,8)" fg:x="476" fg:w="2"/><text x="38.2388%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.9888%" y="629" width="0.1596%" height="15" fill="rgb(240,216,3)" fg:x="476" fg:w="2"/><text x="38.2388%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.9888%" y="613" width="0.1596%" height="15" fill="rgb(232,218,17)" fg:x="476" fg:w="2"/><text x="38.2388%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.9888%" y="597" width="0.1596%" height="15" fill="rgb(229,163,45)" fg:x="476" fg:w="2"/><text x="38.2388%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.9888%" y="581" width="0.1596%" height="15" fill="rgb(231,110,42)" fg:x="476" fg:w="2"/><text x="38.2388%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.0686%" y="565" width="0.0798%" height="15" fill="rgb(208,170,48)" fg:x="477" fg:w="1"/><text x="38.3186%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.0686%" y="549" width="0.0798%" height="15" fill="rgb(239,116,25)" fg:x="477" fg:w="1"/><text x="38.3186%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (250 samples, 19.95%)</title><rect x="18.2761%" y="789" width="19.9521%" height="15" fill="rgb(219,200,50)" fg:x="229" fg:w="250"/><text x="18.5261%" y="799.50">plugins_core::build::BuildSurro..</text></g><g><title>plugins_core::build::Build::occupying (27 samples, 2.15%)</title><rect x="36.0734%" y="773" width="2.1548%" height="15" fill="rgb(245,200,0)" fg:x="452" fg:w="27"/><text x="36.3234%" y="783.50">p..</text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.96%)</title><rect x="37.2706%" y="757" width="0.9577%" height="15" fill="rgb(245,119,33)" fg:x="467" fg:w="12"/><text x="37.5206%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="37.9090%" y="741" width="0.3192%" height="15" fill="rgb(231,125,12)" fg:x="475" fg:w="4"/><text x="38.1590%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="37.9090%" y="725" width="0.3192%" height="15" fill="rgb(216,96,41)" fg:x="475" fg:w="4"/><text x="38.1590%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="37.9090%" y="709" width="0.3192%" height="15" fill="rgb(248,43,45)" fg:x="475" fg:w="4"/><text x="38.1590%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="38.1484%" y="693" width="0.0798%" height="15" fill="rgb(217,222,7)" fg:x="478" fg:w="1"/><text x="38.3984%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.1484%" y="677" width="0.0798%" height="15" fill="rgb(233,28,6)" fg:x="478" fg:w="1"/><text x="38.3984%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1484%" y="661" width="0.0798%" height="15" fill="rgb(231,218,15)" fg:x="478" fg:w="1"/><text x="38.3984%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.1484%" y="645" width="0.0798%" height="15" fill="rgb(226,171,48)" fg:x="478" fg:w="1"/><text x="38.3984%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1484%" y="629" width="0.0798%" height="15" fill="rgb(235,201,9)" fg:x="478" fg:w="1"/><text x="38.3984%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1484%" y="613" width="0.0798%" height="15" fill="rgb(217,80,15)" fg:x="478" fg:w="1"/><text x="38.3984%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.1484%" y="597" width="0.0798%" height="15" fill="rgb(219,152,8)" fg:x="478" fg:w="1"/><text x="38.3984%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.1484%" y="581" width="0.0798%" height="15" fill="rgb(243,107,38)" fg:x="478" fg:w="1"/><text x="38.3984%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.1484%" y="565" width="0.0798%" height="15" fill="rgb(231,17,5)" fg:x="478" fg:w="1"/><text x="38.3984%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.1484%" y="549" width="0.0798%" height="15" fill="rgb(209,25,54)" fg:x="478" fg:w="1"/><text x="38.3984%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.1484%" y="533" width="0.0798%" height="15" fill="rgb(219,0,2)" fg:x="478" fg:w="1"/><text x="38.3984%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="38.2283%" y="789" width="0.2394%" height="15" fill="rgb(246,9,5)" fg:x="479" fg:w="3"/><text x="38.4783%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="38.2283%" y="773" width="0.2394%" height="15" fill="rgb(226,159,4)" fg:x="479" fg:w="3"/><text x="38.4783%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="38.3081%" y="757" width="0.1596%" height="15" fill="rgb(219,175,34)" fg:x="480" fg:w="2"/><text x="38.5581%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="38.3879%" y="741" width="0.0798%" height="15" fill="rgb(236,10,46)" fg:x="481" fg:w="1"/><text x="38.6379%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="38.3879%" y="725" width="0.0798%" height="15" fill="rgb(240,211,16)" fg:x="481" fg:w="1"/><text x="38.6379%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3879%" y="709" width="0.0798%" height="15" fill="rgb(205,3,43)" fg:x="481" fg:w="1"/><text x="38.6379%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="38.4677%" y="725" width="0.0798%" height="15" fill="rgb(245,7,22)" fg:x="482" fg:w="1"/><text x="38.7177%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.4677%" y="709" width="0.0798%" height="15" fill="rgb(239,132,32)" fg:x="482" fg:w="1"/><text x="38.7177%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.4677%" y="693" width="0.0798%" height="15" fill="rgb(228,202,34)" fg:x="482" fg:w="1"/><text x="38.7177%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="38.5475%" y="725" width="0.0798%" height="15" fill="rgb(254,200,22)" fg:x="483" fg:w="1"/><text x="38.7975%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="38.4677%" y="741" width="0.2394%" height="15" fill="rgb(219,10,39)" fg:x="482" fg:w="3"/><text x="38.7177%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="38.6273%" y="725" width="0.0798%" height="15" fill="rgb(226,210,39)" fg:x="484" fg:w="1"/><text x="38.8773%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.6273%" y="709" width="0.0798%" height="15" fill="rgb(208,219,16)" fg:x="484" fg:w="1"/><text x="38.8773%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="693" width="0.0798%" height="15" fill="rgb(216,158,51)" fg:x="484" fg:w="1"/><text x="38.8773%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.6273%" y="677" width="0.0798%" height="15" fill="rgb(233,14,44)" fg:x="484" fg:w="1"/><text x="38.8773%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="661" width="0.0798%" height="15" fill="rgb(237,97,39)" fg:x="484" fg:w="1"/><text x="38.8773%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="645" width="0.0798%" height="15" fill="rgb(218,198,43)" fg:x="484" fg:w="1"/><text x="38.8773%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="629" width="0.0798%" height="15" fill="rgb(231,104,20)" fg:x="484" fg:w="1"/><text x="38.8773%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.6273%" y="613" width="0.0798%" height="15" fill="rgb(254,36,13)" fg:x="484" fg:w="1"/><text x="38.8773%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="597" width="0.0798%" height="15" fill="rgb(248,14,50)" fg:x="484" fg:w="1"/><text x="38.8773%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="581" width="0.0798%" height="15" fill="rgb(217,107,29)" fg:x="484" fg:w="1"/><text x="38.8773%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="565" width="0.0798%" height="15" fill="rgb(251,169,33)" fg:x="484" fg:w="1"/><text x="38.8773%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.6273%" y="549" width="0.0798%" height="15" fill="rgb(217,108,32)" fg:x="484" fg:w="1"/><text x="38.8773%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="533" width="0.0798%" height="15" fill="rgb(219,66,42)" fg:x="484" fg:w="1"/><text x="38.8773%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="517" width="0.0798%" height="15" fill="rgb(206,180,7)" fg:x="484" fg:w="1"/><text x="38.8773%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="501" width="0.0798%" height="15" fill="rgb(208,226,31)" fg:x="484" fg:w="1"/><text x="38.8773%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.6273%" y="485" width="0.0798%" height="15" fill="rgb(218,26,49)" fg:x="484" fg:w="1"/><text x="38.8773%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="469" width="0.0798%" height="15" fill="rgb(233,197,48)" fg:x="484" fg:w="1"/><text x="38.8773%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="38.6273%" y="453" width="0.0798%" height="15" fill="rgb(252,181,51)" fg:x="484" fg:w="1"/><text x="38.8773%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="38.7071%" y="741" width="0.1596%" height="15" fill="rgb(253,90,19)" fg:x="485" fg:w="2"/><text x="38.9571%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.7071%" y="725" width="0.1596%" height="15" fill="rgb(215,171,30)" fg:x="485" fg:w="2"/><text x="38.9571%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.7869%" y="709" width="0.0798%" height="15" fill="rgb(214,222,9)" fg:x="486" fg:w="1"/><text x="39.0369%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.7869%" y="693" width="0.0798%" height="15" fill="rgb(223,3,22)" fg:x="486" fg:w="1"/><text x="39.0369%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.7869%" y="677" width="0.0798%" height="15" fill="rgb(225,196,46)" fg:x="486" fg:w="1"/><text x="39.0369%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.7869%" y="661" width="0.0798%" height="15" fill="rgb(209,110,37)" fg:x="486" fg:w="1"/><text x="39.0369%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.7869%" y="645" width="0.0798%" height="15" fill="rgb(249,89,12)" fg:x="486" fg:w="1"/><text x="39.0369%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.7869%" y="629" width="0.0798%" height="15" fill="rgb(226,27,33)" fg:x="486" fg:w="1"/><text x="39.0369%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="38.8667%" y="741" width="0.1596%" height="15" fill="rgb(213,82,22)" fg:x="487" fg:w="2"/><text x="39.1167%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.9465%" y="725" width="0.0798%" height="15" fill="rgb(248,140,0)" fg:x="488" fg:w="1"/><text x="39.1965%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.9465%" y="709" width="0.0798%" height="15" fill="rgb(228,106,3)" fg:x="488" fg:w="1"/><text x="39.1965%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.9465%" y="693" width="0.0798%" height="15" fill="rgb(209,23,37)" fg:x="488" fg:w="1"/><text x="39.1965%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="38.9465%" y="677" width="0.0798%" height="15" fill="rgb(241,93,50)" fg:x="488" fg:w="1"/><text x="39.1965%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.1860%" y="629" width="0.0798%" height="15" fill="rgb(253,46,43)" fg:x="491" fg:w="1"/><text x="39.4360%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.1860%" y="661" width="0.1596%" height="15" fill="rgb(226,206,43)" fg:x="491" fg:w="2"/><text x="39.4360%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.1860%" y="645" width="0.1596%" height="15" fill="rgb(217,54,7)" fg:x="491" fg:w="2"/><text x="39.4360%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2658%" y="629" width="0.0798%" height="15" fill="rgb(223,5,52)" fg:x="492" fg:w="1"/><text x="39.5158%" y="639.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="39.1061%" y="693" width="0.3192%" height="15" fill="rgb(206,52,46)" fg:x="490" fg:w="4"/><text x="39.3561%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="39.1860%" y="677" width="0.2394%" height="15" fill="rgb(253,136,11)" fg:x="491" fg:w="3"/><text x="39.4360%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3456%" y="661" width="0.0798%" height="15" fill="rgb(208,106,33)" fg:x="493" fg:w="1"/><text x="39.5956%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.3456%" y="645" width="0.0798%" height="15" fill="rgb(206,54,4)" fg:x="493" fg:w="1"/><text x="39.5956%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.3456%" y="629" width="0.0798%" height="15" fill="rgb(213,3,15)" fg:x="493" fg:w="1"/><text x="39.5956%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.3456%" y="613" width="0.0798%" height="15" fill="rgb(252,211,39)" fg:x="493" fg:w="1"/><text x="39.5956%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.3456%" y="597" width="0.0798%" height="15" fill="rgb(223,6,36)" fg:x="493" fg:w="1"/><text x="39.5956%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.3456%" y="581" width="0.0798%" height="15" fill="rgb(252,169,45)" fg:x="493" fg:w="1"/><text x="39.5956%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="39.1061%" y="725" width="0.3990%" height="15" fill="rgb(212,48,26)" fg:x="490" fg:w="5"/><text x="39.3561%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="39.1061%" y="709" width="0.3990%" height="15" fill="rgb(251,102,48)" fg:x="490" fg:w="5"/><text x="39.3561%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.4254%" y="693" width="0.0798%" height="15" fill="rgb(243,208,16)" fg:x="494" fg:w="1"/><text x="39.6754%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="38.4677%" y="757" width="1.1173%" height="15" fill="rgb(219,96,24)" fg:x="482" fg:w="14"/><text x="38.7177%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="39.0263%" y="741" width="0.5587%" height="15" fill="rgb(219,33,29)" fg:x="489" fg:w="7"/><text x="39.2763%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="39.5052%" y="725" width="0.0798%" height="15" fill="rgb(223,176,5)" fg:x="495" fg:w="1"/><text x="39.7552%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5052%" y="709" width="0.0798%" height="15" fill="rgb(228,140,14)" fg:x="495" fg:w="1"/><text x="39.7552%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5052%" y="693" width="0.0798%" height="15" fill="rgb(217,179,31)" fg:x="495" fg:w="1"/><text x="39.7552%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="39.5850%" y="757" width="0.0798%" height="15" fill="rgb(230,9,30)" fg:x="496" fg:w="1"/><text x="39.8350%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="39.5850%" y="741" width="0.0798%" height="15" fill="rgb(230,136,20)" fg:x="496" fg:w="1"/><text x="39.8350%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.5850%" y="725" width="0.0798%" height="15" fill="rgb(215,210,22)" fg:x="496" fg:w="1"/><text x="39.8350%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.5850%" y="709" width="0.0798%" height="15" fill="rgb(218,43,5)" fg:x="496" fg:w="1"/><text x="39.8350%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="39.6648%" y="725" width="0.0798%" height="15" fill="rgb(216,11,5)" fg:x="497" fg:w="1"/><text x="39.9148%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="39.6648%" y="709" width="0.0798%" height="15" fill="rgb(209,82,29)" fg:x="497" fg:w="1"/><text x="39.9148%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6648%" y="693" width="0.0798%" height="15" fill="rgb(244,115,12)" fg:x="497" fg:w="1"/><text x="39.9148%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6648%" y="677" width="0.0798%" height="15" fill="rgb(222,82,18)" fg:x="497" fg:w="1"/><text x="39.9148%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="39.6648%" y="661" width="0.0798%" height="15" fill="rgb(249,227,8)" fg:x="497" fg:w="1"/><text x="39.9148%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="39.6648%" y="645" width="0.0798%" height="15" fill="rgb(253,141,45)" fg:x="497" fg:w="1"/><text x="39.9148%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="39.6648%" y="629" width="0.0798%" height="15" fill="rgb(234,184,4)" fg:x="497" fg:w="1"/><text x="39.9148%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6648%" y="613" width="0.0798%" height="15" fill="rgb(218,194,23)" fg:x="497" fg:w="1"/><text x="39.9148%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.36%)</title><rect x="38.4677%" y="789" width="1.3567%" height="15" fill="rgb(235,66,41)" fg:x="482" fg:w="17"/><text x="38.7177%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.36%)</title><rect x="38.4677%" y="773" width="1.3567%" height="15" fill="rgb(245,217,1)" fg:x="482" fg:w="17"/><text x="38.7177%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="39.6648%" y="757" width="0.1596%" height="15" fill="rgb(229,91,1)" fg:x="497" fg:w="2"/><text x="39.9148%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="39.6648%" y="741" width="0.1596%" height="15" fill="rgb(207,101,30)" fg:x="497" fg:w="2"/><text x="39.9148%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.7446%" y="725" width="0.0798%" height="15" fill="rgb(223,82,49)" fg:x="498" fg:w="1"/><text x="39.9946%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7446%" y="709" width="0.0798%" height="15" fill="rgb(218,167,17)" fg:x="498" fg:w="1"/><text x="39.9946%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7446%" y="693" width="0.0798%" height="15" fill="rgb(208,103,14)" fg:x="498" fg:w="1"/><text x="39.9946%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.7446%" y="677" width="0.0798%" height="15" fill="rgb(238,20,8)" fg:x="498" fg:w="1"/><text x="39.9946%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7446%" y="661" width="0.0798%" height="15" fill="rgb(218,80,54)" fg:x="498" fg:w="1"/><text x="39.9946%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="39.9042%" y="757" width="0.0798%" height="15" fill="rgb(240,144,17)" fg:x="500" fg:w="1"/><text x="40.1542%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.9042%" y="741" width="0.0798%" height="15" fill="rgb(245,27,50)" fg:x="500" fg:w="1"/><text x="40.1542%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.9840%" y="661" width="0.0798%" height="15" fill="rgb(251,51,7)" fg:x="501" fg:w="1"/><text x="40.2340%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.9840%" y="645" width="0.0798%" height="15" fill="rgb(245,217,29)" fg:x="501" fg:w="1"/><text x="40.2340%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9840%" y="629" width="0.0798%" height="15" fill="rgb(221,176,29)" fg:x="501" fg:w="1"/><text x="40.2340%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.9840%" y="757" width="0.1596%" height="15" fill="rgb(212,180,24)" fg:x="501" fg:w="2"/><text x="40.2340%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.9840%" y="741" width="0.1596%" height="15" fill="rgb(254,24,2)" fg:x="501" fg:w="2"/><text x="40.2340%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.9840%" y="725" width="0.1596%" height="15" fill="rgb(230,100,2)" fg:x="501" fg:w="2"/><text x="40.2340%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.9840%" y="709" width="0.1596%" height="15" fill="rgb(219,142,25)" fg:x="501" fg:w="2"/><text x="40.2340%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.9840%" y="693" width="0.1596%" height="15" fill="rgb(240,73,43)" fg:x="501" fg:w="2"/><text x="40.2340%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.9840%" y="677" width="0.1596%" height="15" fill="rgb(214,114,15)" fg:x="501" fg:w="2"/><text x="40.2340%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0638%" y="661" width="0.0798%" height="15" fill="rgb(207,130,4)" fg:x="502" fg:w="1"/><text x="40.3138%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0638%" y="645" width="0.0798%" height="15" fill="rgb(221,25,40)" fg:x="502" fg:w="1"/><text x="40.3138%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3033%" y="629" width="0.0798%" height="15" fill="rgb(241,184,7)" fg:x="505" fg:w="1"/><text x="40.5533%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3033%" y="613" width="0.0798%" height="15" fill="rgb(235,159,4)" fg:x="505" fg:w="1"/><text x="40.5533%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.3033%" y="677" width="0.1596%" height="15" fill="rgb(214,87,48)" fg:x="505" fg:w="2"/><text x="40.5533%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="40.3033%" y="661" width="0.1596%" height="15" fill="rgb(246,198,24)" fg:x="505" fg:w="2"/><text x="40.5533%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.3033%" y="645" width="0.1596%" height="15" fill="rgb(209,66,40)" fg:x="505" fg:w="2"/><text x="40.5533%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.3831%" y="629" width="0.0798%" height="15" fill="rgb(233,147,39)" fg:x="506" fg:w="1"/><text x="40.6331%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3831%" y="613" width="0.0798%" height="15" fill="rgb(231,145,52)" fg:x="506" fg:w="1"/><text x="40.6331%" y="623.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="40.2235%" y="709" width="0.3192%" height="15" fill="rgb(206,20,26)" fg:x="504" fg:w="4"/><text x="40.4735%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="40.3033%" y="693" width="0.2394%" height="15" fill="rgb(238,220,4)" fg:x="505" fg:w="3"/><text x="40.5533%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4629%" y="677" width="0.0798%" height="15" fill="rgb(252,195,42)" fg:x="507" fg:w="1"/><text x="40.7129%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.4629%" y="661" width="0.0798%" height="15" fill="rgb(209,10,6)" fg:x="507" fg:w="1"/><text x="40.7129%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="40.4629%" y="645" width="0.0798%" height="15" fill="rgb(229,3,52)" fg:x="507" fg:w="1"/><text x="40.7129%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4629%" y="629" width="0.0798%" height="15" fill="rgb(253,49,37)" fg:x="507" fg:w="1"/><text x="40.7129%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="40.4629%" y="613" width="0.0798%" height="15" fill="rgb(240,103,49)" fg:x="507" fg:w="1"/><text x="40.7129%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="40.4629%" y="597" width="0.0798%" height="15" fill="rgb(250,182,30)" fg:x="507" fg:w="1"/><text x="40.7129%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4629%" y="581" width="0.0798%" height="15" fill="rgb(248,8,30)" fg:x="507" fg:w="1"/><text x="40.7129%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.5427%" y="693" width="0.0798%" height="15" fill="rgb(237,120,30)" fg:x="508" fg:w="1"/><text x="40.7927%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.5427%" y="677" width="0.0798%" height="15" fill="rgb(221,146,34)" fg:x="508" fg:w="1"/><text x="40.7927%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.6225%" y="629" width="0.0798%" height="15" fill="rgb(242,55,13)" fg:x="509" fg:w="1"/><text x="40.8725%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7023%" y="629" width="0.0798%" height="15" fill="rgb(242,112,31)" fg:x="510" fg:w="1"/><text x="40.9523%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.7023%" y="613" width="0.0798%" height="15" fill="rgb(249,192,27)" fg:x="510" fg:w="1"/><text x="40.9523%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="40.2235%" y="741" width="0.6385%" height="15" fill="rgb(208,204,44)" fg:x="504" fg:w="8"/><text x="40.4735%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.64%)</title><rect x="40.2235%" y="725" width="0.6385%" height="15" fill="rgb(208,93,54)" fg:x="504" fg:w="8"/><text x="40.4735%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="40.5427%" y="709" width="0.3192%" height="15" fill="rgb(242,1,31)" fg:x="508" fg:w="4"/><text x="40.7927%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.6225%" y="693" width="0.2394%" height="15" fill="rgb(241,83,25)" fg:x="509" fg:w="3"/><text x="40.8725%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.6225%" y="677" width="0.2394%" height="15" fill="rgb(205,169,50)" fg:x="509" fg:w="3"/><text x="40.8725%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.6225%" y="661" width="0.2394%" height="15" fill="rgb(239,186,37)" fg:x="509" fg:w="3"/><text x="40.8725%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.6225%" y="645" width="0.2394%" height="15" fill="rgb(205,221,10)" fg:x="509" fg:w="3"/><text x="40.8725%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7821%" y="629" width="0.0798%" height="15" fill="rgb(218,196,15)" fg:x="511" fg:w="1"/><text x="41.0321%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7821%" y="613" width="0.0798%" height="15" fill="rgb(218,196,35)" fg:x="511" fg:w="1"/><text x="41.0321%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="39.8244%" y="773" width="1.1173%" height="15" fill="rgb(233,63,24)" fg:x="499" fg:w="14"/><text x="40.0744%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="40.1437%" y="757" width="0.7981%" height="15" fill="rgb(225,8,4)" fg:x="503" fg:w="10"/><text x="40.3937%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="40.8619%" y="741" width="0.0798%" height="15" fill="rgb(234,105,35)" fg:x="512" fg:w="1"/><text x="41.1119%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8619%" y="725" width="0.0798%" height="15" fill="rgb(236,21,32)" fg:x="512" fg:w="1"/><text x="41.1119%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8619%" y="709" width="0.0798%" height="15" fill="rgb(228,109,6)" fg:x="512" fg:w="1"/><text x="41.1119%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8619%" y="693" width="0.0798%" height="15" fill="rgb(229,215,31)" fg:x="512" fg:w="1"/><text x="41.1119%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8619%" y="677" width="0.0798%" height="15" fill="rgb(221,52,54)" fg:x="512" fg:w="1"/><text x="41.1119%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8619%" y="661" width="0.0798%" height="15" fill="rgb(252,129,43)" fg:x="512" fg:w="1"/><text x="41.1119%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8619%" y="645" width="0.0798%" height="15" fill="rgb(248,183,27)" fg:x="512" fg:w="1"/><text x="41.1119%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8619%" y="629" width="0.0798%" height="15" fill="rgb(250,0,22)" fg:x="512" fg:w="1"/><text x="41.1119%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.9417%" y="773" width="0.0798%" height="15" fill="rgb(213,166,10)" fg:x="513" fg:w="1"/><text x="41.1917%" y="783.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="41.0215%" y="741" width="0.0798%" height="15" fill="rgb(207,163,36)" fg:x="514" fg:w="1"/><text x="41.2715%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1014%" y="709" width="0.0798%" height="15" fill="rgb(208,122,22)" fg:x="515" fg:w="1"/><text x="41.3514%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1014%" y="693" width="0.0798%" height="15" fill="rgb(207,104,49)" fg:x="515" fg:w="1"/><text x="41.3514%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="41.1812%" y="645" width="0.0798%" height="15" fill="rgb(248,211,50)" fg:x="516" fg:w="1"/><text x="41.4312%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1812%" y="629" width="0.0798%" height="15" fill="rgb(217,13,45)" fg:x="516" fg:w="1"/><text x="41.4312%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.1812%" y="613" width="0.0798%" height="15" fill="rgb(211,216,49)" fg:x="516" fg:w="1"/><text x="41.4312%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.1812%" y="597" width="0.0798%" height="15" fill="rgb(221,58,53)" fg:x="516" fg:w="1"/><text x="41.4312%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="41.0215%" y="773" width="0.3192%" height="15" fill="rgb(220,112,41)" fg:x="514" fg:w="4"/><text x="41.2715%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="41.0215%" y="757" width="0.3192%" height="15" fill="rgb(236,38,28)" fg:x="514" fg:w="4"/><text x="41.2715%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="41.1014%" y="741" width="0.2394%" height="15" fill="rgb(227,195,22)" fg:x="515" fg:w="3"/><text x="41.3514%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="41.1014%" y="725" width="0.2394%" height="15" fill="rgb(214,55,33)" fg:x="515" fg:w="3"/><text x="41.3514%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="41.1812%" y="709" width="0.1596%" height="15" fill="rgb(248,80,13)" fg:x="516" fg:w="2"/><text x="41.4312%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.1812%" y="693" width="0.1596%" height="15" fill="rgb(238,52,6)" fg:x="516" fg:w="2"/><text x="41.4312%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="41.1812%" y="677" width="0.1596%" height="15" fill="rgb(224,198,47)" fg:x="516" fg:w="2"/><text x="41.4312%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="41.1812%" y="661" width="0.1596%" height="15" fill="rgb(233,171,20)" fg:x="516" fg:w="2"/><text x="41.4312%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.2610%" y="645" width="0.0798%" height="15" fill="rgb(241,30,25)" fg:x="517" fg:w="1"/><text x="41.5110%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2610%" y="629" width="0.0798%" height="15" fill="rgb(207,171,38)" fg:x="517" fg:w="1"/><text x="41.5110%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="41.3408%" y="741" width="0.0798%" height="15" fill="rgb(234,70,1)" fg:x="518" fg:w="1"/><text x="41.5908%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3408%" y="725" width="0.0798%" height="15" fill="rgb(232,178,18)" fg:x="518" fg:w="1"/><text x="41.5908%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.3408%" y="709" width="0.0798%" height="15" fill="rgb(241,78,40)" fg:x="518" fg:w="1"/><text x="41.5908%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.3408%" y="693" width="0.0798%" height="15" fill="rgb(222,35,25)" fg:x="518" fg:w="1"/><text x="41.5908%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="41.3408%" y="757" width="0.1596%" height="15" fill="rgb(207,92,16)" fg:x="518" fg:w="2"/><text x="41.5908%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4206%" y="741" width="0.0798%" height="15" fill="rgb(216,59,51)" fg:x="519" fg:w="1"/><text x="41.6706%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="41.5004%" y="725" width="0.0798%" height="15" fill="rgb(213,80,28)" fg:x="520" fg:w="1"/><text x="41.7504%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.5004%" y="709" width="0.0798%" height="15" fill="rgb(220,93,7)" fg:x="520" fg:w="1"/><text x="41.7504%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.5004%" y="693" width="0.0798%" height="15" fill="rgb(225,24,44)" fg:x="520" fg:w="1"/><text x="41.7504%" y="703.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (445 samples, 35.51%)</title><rect x="6.3847%" y="805" width="35.5148%" height="15" fill="rgb(243,74,40)" fg:x="80" fg:w="445"/><text x="6.6347%" y="815.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (26 samples, 2.08%)</title><rect x="39.8244%" y="789" width="2.0750%" height="15" fill="rgb(228,39,7)" fg:x="499" fg:w="26"/><text x="40.0744%" y="799.50">p..</text></g><g><title>plugins_core::build::Build::new_world (7 samples, 0.56%)</title><rect x="41.3408%" y="773" width="0.5587%" height="15" fill="rgb(227,79,8)" fg:x="518" fg:w="7"/><text x="41.5908%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (5 samples, 0.40%)</title><rect x="41.5004%" y="757" width="0.3990%" height="15" fill="rgb(236,58,11)" fg:x="520" fg:w="5"/><text x="41.7504%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="41.5004%" y="741" width="0.3990%" height="15" fill="rgb(249,63,35)" fg:x="520" fg:w="5"/><text x="41.7504%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="41.5802%" y="725" width="0.3192%" height="15" fill="rgb(252,114,16)" fg:x="521" fg:w="4"/><text x="41.8302%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="41.5802%" y="709" width="0.3192%" height="15" fill="rgb(254,151,24)" fg:x="521" fg:w="4"/><text x="41.8302%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.7398%" y="693" width="0.1596%" height="15" fill="rgb(253,54,39)" fg:x="523" fg:w="2"/><text x="41.9898%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8196%" y="677" width="0.0798%" height="15" fill="rgb(243,25,45)" fg:x="524" fg:w="1"/><text x="42.0696%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="41.8994%" y="805" width="0.0798%" height="15" fill="rgb(234,134,9)" fg:x="525" fg:w="1"/><text x="42.1494%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.8994%" y="789" width="0.0798%" height="15" fill="rgb(227,166,31)" fg:x="525" fg:w="1"/><text x="42.1494%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (1 samples, 0.08%)</title><rect x="41.9792%" y="805" width="0.0798%" height="15" fill="rgb(245,143,41)" fg:x="526" fg:w="1"/><text x="42.2292%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="41.9792%" y="789" width="0.0798%" height="15" fill="rgb(238,181,32)" fg:x="526" fg:w="1"/><text x="42.2292%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9792%" y="773" width="0.0798%" height="15" fill="rgb(224,113,18)" fg:x="526" fg:w="1"/><text x="42.2292%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="42.1389%" y="789" width="0.1596%" height="15" fill="rgb(240,229,28)" fg:x="528" fg:w="2"/><text x="42.3889%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2187%" y="773" width="0.0798%" height="15" fill="rgb(250,185,3)" fg:x="529" fg:w="1"/><text x="42.4687%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.2187%" y="757" width="0.0798%" height="15" fill="rgb(212,59,25)" fg:x="529" fg:w="1"/><text x="42.4687%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.2187%" y="741" width="0.0798%" height="15" fill="rgb(221,87,20)" fg:x="529" fg:w="1"/><text x="42.4687%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.2187%" y="725" width="0.0798%" height="15" fill="rgb(213,74,28)" fg:x="529" fg:w="1"/><text x="42.4687%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.2187%" y="709" width="0.0798%" height="15" fill="rgb(224,132,34)" fg:x="529" fg:w="1"/><text x="42.4687%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2187%" y="693" width="0.0798%" height="15" fill="rgb(222,101,24)" fg:x="529" fg:w="1"/><text x="42.4687%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.2187%" y="677" width="0.0798%" height="15" fill="rgb(254,142,4)" fg:x="529" fg:w="1"/><text x="42.4687%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.2187%" y="661" width="0.0798%" height="15" fill="rgb(230,229,49)" fg:x="529" fg:w="1"/><text x="42.4687%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.2187%" y="645" width="0.0798%" height="15" fill="rgb(238,70,47)" fg:x="529" fg:w="1"/><text x="42.4687%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.2187%" y="629" width="0.0798%" height="15" fill="rgb(231,160,17)" fg:x="529" fg:w="1"/><text x="42.4687%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.2187%" y="613" width="0.0798%" height="15" fill="rgb(218,68,53)" fg:x="529" fg:w="1"/><text x="42.4687%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2187%" y="597" width="0.0798%" height="15" fill="rgb(236,111,10)" fg:x="529" fg:w="1"/><text x="42.4687%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::rollback (1 samples, 0.08%)</title><rect x="42.2985%" y="789" width="0.0798%" height="15" fill="rgb(224,34,41)" fg:x="530" fg:w="1"/><text x="42.5485%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3783%" y="789" width="0.0798%" height="15" fill="rgb(241,118,19)" fg:x="531" fg:w="1"/><text x="42.6283%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.4581%" y="789" width="0.0798%" height="15" fill="rgb(238,129,25)" fg:x="532" fg:w="1"/><text x="42.7081%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.4581%" y="773" width="0.0798%" height="15" fill="rgb(238,22,31)" fg:x="532" fg:w="1"/><text x="42.7081%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4581%" y="757" width="0.0798%" height="15" fill="rgb(222,174,48)" fg:x="532" fg:w="1"/><text x="42.7081%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.4581%" y="741" width="0.0798%" height="15" fill="rgb(206,152,40)" fg:x="532" fg:w="1"/><text x="42.7081%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="42.4581%" y="725" width="0.0798%" height="15" fill="rgb(218,99,54)" fg:x="532" fg:w="1"/><text x="42.7081%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="42.4581%" y="709" width="0.0798%" height="15" fill="rgb(220,174,26)" fg:x="532" fg:w="1"/><text x="42.7081%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="42.4581%" y="693" width="0.0798%" height="15" fill="rgb(245,116,9)" fg:x="532" fg:w="1"/><text x="42.7081%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.4581%" y="677" width="0.0798%" height="15" fill="rgb(209,72,35)" fg:x="532" fg:w="1"/><text x="42.7081%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.4581%" y="661" width="0.0798%" height="15" fill="rgb(226,126,21)" fg:x="532" fg:w="1"/><text x="42.7081%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="42.4581%" y="645" width="0.0798%" height="15" fill="rgb(227,192,1)" fg:x="532" fg:w="1"/><text x="42.7081%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="42.4581%" y="629" width="0.0798%" height="15" fill="rgb(237,180,29)" fg:x="532" fg:w="1"/><text x="42.7081%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.4581%" y="613" width="0.0798%" height="15" fill="rgb(230,197,35)" fg:x="532" fg:w="1"/><text x="42.7081%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="42.5379%" y="757" width="0.1596%" height="15" fill="rgb(246,193,31)" fg:x="533" fg:w="2"/><text x="42.7879%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="42.6177%" y="741" width="0.0798%" height="15" fill="rgb(241,36,4)" fg:x="534" fg:w="1"/><text x="42.8677%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.6975%" y="757" width="0.0798%" height="15" fill="rgb(241,130,17)" fg:x="535" fg:w="1"/><text x="42.9475%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="42.6975%" y="741" width="0.0798%" height="15" fill="rgb(206,137,32)" fg:x="535" fg:w="1"/><text x="42.9475%" y="751.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="42.6975%" y="725" width="0.0798%" height="15" fill="rgb(237,228,51)" fg:x="535" fg:w="1"/><text x="42.9475%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6975%" y="709" width="0.0798%" height="15" fill="rgb(243,6,42)" fg:x="535" fg:w="1"/><text x="42.9475%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="42.8571%" y="741" width="0.1596%" height="15" fill="rgb(251,74,28)" fg:x="537" fg:w="2"/><text x="43.1071%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="42.8571%" y="725" width="0.1596%" height="15" fill="rgb(218,20,49)" fg:x="537" fg:w="2"/><text x="43.1071%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.9370%" y="709" width="0.0798%" height="15" fill="rgb(238,28,14)" fg:x="538" fg:w="1"/><text x="43.1870%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0966%" y="725" width="0.0798%" height="15" fill="rgb(229,40,46)" fg:x="540" fg:w="1"/><text x="43.3466%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0966%" y="709" width="0.0798%" height="15" fill="rgb(244,195,20)" fg:x="540" fg:w="1"/><text x="43.3466%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.0966%" y="693" width="0.0798%" height="15" fill="rgb(253,56,35)" fg:x="540" fg:w="1"/><text x="43.3466%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.0966%" y="677" width="0.0798%" height="15" fill="rgb(210,149,44)" fg:x="540" fg:w="1"/><text x="43.3466%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.0966%" y="661" width="0.0798%" height="15" fill="rgb(240,135,12)" fg:x="540" fg:w="1"/><text x="43.3466%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0966%" y="645" width="0.0798%" height="15" fill="rgb(251,24,50)" fg:x="540" fg:w="1"/><text x="43.3466%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0966%" y="629" width="0.0798%" height="15" fill="rgb(243,200,47)" fg:x="540" fg:w="1"/><text x="43.3466%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.0966%" y="613" width="0.0798%" height="15" fill="rgb(224,166,26)" fg:x="540" fg:w="1"/><text x="43.3466%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.0966%" y="597" width="0.0798%" height="15" fill="rgb(233,0,47)" fg:x="540" fg:w="1"/><text x="43.3466%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.0966%" y="581" width="0.0798%" height="15" fill="rgb(253,80,5)" fg:x="540" fg:w="1"/><text x="43.3466%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.0966%" y="565" width="0.0798%" height="15" fill="rgb(214,133,25)" fg:x="540" fg:w="1"/><text x="43.3466%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0966%" y="549" width="0.0798%" height="15" fill="rgb(209,27,14)" fg:x="540" fg:w="1"/><text x="43.3466%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.1764%" y="725" width="0.0798%" height="15" fill="rgb(219,102,51)" fg:x="541" fg:w="1"/><text x="43.4264%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.1764%" y="709" width="0.0798%" height="15" fill="rgb(237,18,16)" fg:x="541" fg:w="1"/><text x="43.4264%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.1764%" y="693" width="0.0798%" height="15" fill="rgb(241,85,17)" fg:x="541" fg:w="1"/><text x="43.4264%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.1764%" y="677" width="0.0798%" height="15" fill="rgb(236,90,42)" fg:x="541" fg:w="1"/><text x="43.4264%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.1764%" y="661" width="0.0798%" height="15" fill="rgb(249,57,21)" fg:x="541" fg:w="1"/><text x="43.4264%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.1764%" y="645" width="0.0798%" height="15" fill="rgb(243,12,36)" fg:x="541" fg:w="1"/><text x="43.4264%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.1764%" y="629" width="0.0798%" height="15" fill="rgb(253,128,47)" fg:x="541" fg:w="1"/><text x="43.4264%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.1764%" y="613" width="0.0798%" height="15" fill="rgb(207,33,20)" fg:x="541" fg:w="1"/><text x="43.4264%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.1764%" y="597" width="0.0798%" height="15" fill="rgb(233,215,35)" fg:x="541" fg:w="1"/><text x="43.4264%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="43.2562%" y="693" width="0.3192%" height="15" fill="rgb(249,188,52)" fg:x="542" fg:w="4"/><text x="43.5062%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.3360%" y="677" width="0.2394%" height="15" fill="rgb(225,12,32)" fg:x="543" fg:w="3"/><text x="43.5860%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="43.3360%" y="661" width="0.2394%" height="15" fill="rgb(247,98,14)" fg:x="543" fg:w="3"/><text x="43.5860%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.4158%" y="645" width="0.1596%" height="15" fill="rgb(247,219,48)" fg:x="544" fg:w="2"/><text x="43.6658%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="43.2562%" y="709" width="0.3990%" height="15" fill="rgb(253,60,48)" fg:x="542" fg:w="5"/><text x="43.5062%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.5754%" y="693" width="0.0798%" height="15" fill="rgb(245,15,52)" fg:x="546" fg:w="1"/><text x="43.8254%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.8148%" y="645" width="0.0798%" height="15" fill="rgb(220,133,28)" fg:x="549" fg:w="1"/><text x="44.0648%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="43.7350%" y="693" width="0.2394%" height="15" fill="rgb(217,180,4)" fg:x="548" fg:w="3"/><text x="43.9850%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="43.7350%" y="677" width="0.2394%" height="15" fill="rgb(251,24,1)" fg:x="548" fg:w="3"/><text x="43.9850%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="43.8148%" y="661" width="0.1596%" height="15" fill="rgb(212,185,49)" fg:x="549" fg:w="2"/><text x="44.0648%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="43.8947%" y="645" width="0.0798%" height="15" fill="rgb(215,175,22)" fg:x="550" fg:w="1"/><text x="44.1447%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.0543%" y="645" width="0.0798%" height="15" fill="rgb(250,205,14)" fg:x="552" fg:w="1"/><text x="44.3043%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.0543%" y="629" width="0.0798%" height="15" fill="rgb(225,211,22)" fg:x="552" fg:w="1"/><text x="44.3043%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.0543%" y="613" width="0.0798%" height="15" fill="rgb(251,179,42)" fg:x="552" fg:w="1"/><text x="44.3043%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.0543%" y="597" width="0.0798%" height="15" fill="rgb(208,216,51)" fg:x="552" fg:w="1"/><text x="44.3043%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.0543%" y="581" width="0.0798%" height="15" fill="rgb(235,36,11)" fg:x="552" fg:w="1"/><text x="44.3043%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.0543%" y="565" width="0.0798%" height="15" fill="rgb(213,189,28)" fg:x="552" fg:w="1"/><text x="44.3043%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.0543%" y="549" width="0.0798%" height="15" fill="rgb(227,203,42)" fg:x="552" fg:w="1"/><text x="44.3043%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="44.1341%" y="645" width="0.0798%" height="15" fill="rgb(244,72,36)" fg:x="553" fg:w="1"/><text x="44.3841%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="44.1341%" y="629" width="0.0798%" height="15" fill="rgb(213,53,17)" fg:x="553" fg:w="1"/><text x="44.3841%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.1341%" y="613" width="0.0798%" height="15" fill="rgb(207,167,3)" fg:x="553" fg:w="1"/><text x="44.3841%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="44.0543%" y="677" width="0.2394%" height="15" fill="rgb(216,98,30)" fg:x="552" fg:w="3"/><text x="44.3043%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="44.0543%" y="661" width="0.2394%" height="15" fill="rgb(236,123,15)" fg:x="552" fg:w="3"/><text x="44.3043%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.2139%" y="645" width="0.0798%" height="15" fill="rgb(248,81,50)" fg:x="554" fg:w="1"/><text x="44.4639%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="44.2937%" y="677" width="0.5587%" height="15" fill="rgb(214,120,4)" fg:x="555" fg:w="7"/><text x="44.5437%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="44.6129%" y="661" width="0.2394%" height="15" fill="rgb(208,179,34)" fg:x="559" fg:w="3"/><text x="44.8629%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.7725%" y="645" width="0.0798%" height="15" fill="rgb(227,140,7)" fg:x="561" fg:w="1"/><text x="45.0225%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.7725%" y="629" width="0.0798%" height="15" fill="rgb(214,22,6)" fg:x="561" fg:w="1"/><text x="45.0225%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.7725%" y="613" width="0.0798%" height="15" fill="rgb(207,137,27)" fg:x="561" fg:w="1"/><text x="45.0225%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.7725%" y="597" width="0.0798%" height="15" fill="rgb(210,8,46)" fg:x="561" fg:w="1"/><text x="45.0225%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.7725%" y="581" width="0.0798%" height="15" fill="rgb(240,16,54)" fg:x="561" fg:w="1"/><text x="45.0225%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="44.8524%" y="661" width="0.1596%" height="15" fill="rgb(211,209,29)" fg:x="562" fg:w="2"/><text x="45.1024%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.9322%" y="645" width="0.0798%" height="15" fill="rgb(226,228,24)" fg:x="563" fg:w="1"/><text x="45.1822%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.9322%" y="629" width="0.0798%" height="15" fill="rgb(222,84,9)" fg:x="563" fg:w="1"/><text x="45.1822%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="45.0120%" y="645" width="0.4789%" height="15" fill="rgb(234,203,30)" fg:x="564" fg:w="6"/><text x="45.2620%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="45.1716%" y="629" width="0.3192%" height="15" fill="rgb(238,109,14)" fg:x="566" fg:w="4"/><text x="45.4216%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="45.2514%" y="613" width="0.2394%" height="15" fill="rgb(233,206,34)" fg:x="567" fg:w="3"/><text x="45.5014%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="45.3312%" y="597" width="0.1596%" height="15" fill="rgb(220,167,47)" fg:x="568" fg:w="2"/><text x="45.5812%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="45.0120%" y="661" width="0.5587%" height="15" fill="rgb(238,105,10)" fg:x="564" fg:w="7"/><text x="45.2620%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="45.4908%" y="645" width="0.0798%" height="15" fill="rgb(213,227,17)" fg:x="570" fg:w="1"/><text x="45.7408%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="44.8524%" y="677" width="0.7981%" height="15" fill="rgb(217,132,38)" fg:x="562" fg:w="10"/><text x="45.1024%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.5706%" y="661" width="0.0798%" height="15" fill="rgb(242,146,4)" fg:x="571" fg:w="1"/><text x="45.8206%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.5706%" y="645" width="0.0798%" height="15" fill="rgb(212,61,9)" fg:x="571" fg:w="1"/><text x="45.8206%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.5706%" y="629" width="0.0798%" height="15" fill="rgb(247,126,22)" fg:x="571" fg:w="1"/><text x="45.8206%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="43.9745%" y="693" width="1.7558%" height="15" fill="rgb(220,196,2)" fg:x="551" fg:w="22"/><text x="44.2245%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.6504%" y="677" width="0.0798%" height="15" fill="rgb(208,46,4)" fg:x="572" fg:w="1"/><text x="45.9004%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.6504%" y="661" width="0.0798%" height="15" fill="rgb(252,104,46)" fg:x="572" fg:w="1"/><text x="45.9004%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.23%)</title><rect x="43.6552%" y="709" width="2.2346%" height="15" fill="rgb(237,152,48)" fg:x="547" fg:w="28"/><text x="43.9052%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="45.7302%" y="693" width="0.1596%" height="15" fill="rgb(221,59,37)" fg:x="573" fg:w="2"/><text x="45.9802%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.8101%" y="677" width="0.0798%" height="15" fill="rgb(209,202,51)" fg:x="574" fg:w="1"/><text x="46.0601%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.71%)</title><rect x="43.2562%" y="725" width="2.7135%" height="15" fill="rgb(228,81,30)" fg:x="542" fg:w="34"/><text x="43.5062%" y="735.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="45.8899%" y="709" width="0.0798%" height="15" fill="rgb(227,42,39)" fg:x="575" fg:w="1"/><text x="46.1399%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="45.8899%" y="693" width="0.0798%" height="15" fill="rgb(221,26,2)" fg:x="575" fg:w="1"/><text x="46.1399%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="45.8899%" y="677" width="0.0798%" height="15" fill="rgb(254,61,31)" fg:x="575" fg:w="1"/><text x="46.1399%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="45.9697%" y="693" width="0.1596%" height="15" fill="rgb(222,173,38)" fg:x="576" fg:w="2"/><text x="46.2197%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.1293%" y="677" width="0.0798%" height="15" fill="rgb(218,50,12)" fg:x="578" fg:w="1"/><text x="46.3793%" y="687.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="46.2091%" y="661" width="0.2394%" height="15" fill="rgb(223,88,40)" fg:x="579" fg:w="3"/><text x="46.4591%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.4485%" y="661" width="0.0798%" height="15" fill="rgb(237,54,19)" fg:x="582" fg:w="1"/><text x="46.6985%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5283%" y="645" width="0.0798%" height="15" fill="rgb(251,129,25)" fg:x="583" fg:w="1"/><text x="46.7783%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="46.6081%" y="645" width="0.1596%" height="15" fill="rgb(238,97,19)" fg:x="584" fg:w="2"/><text x="46.8581%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6879%" y="629" width="0.0798%" height="15" fill="rgb(240,169,18)" fg:x="585" fg:w="1"/><text x="46.9379%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="46.7678%" y="645" width="0.0798%" height="15" fill="rgb(230,187,49)" fg:x="586" fg:w="1"/><text x="47.0178%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.7678%" y="629" width="0.0798%" height="15" fill="rgb(209,44,26)" fg:x="586" fg:w="1"/><text x="47.0178%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.7678%" y="613" width="0.0798%" height="15" fill="rgb(244,0,6)" fg:x="586" fg:w="1"/><text x="47.0178%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="45.9697%" y="725" width="1.0375%" height="15" fill="rgb(248,18,21)" fg:x="576" fg:w="13"/><text x="46.2197%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="45.9697%" y="709" width="1.0375%" height="15" fill="rgb(245,180,19)" fg:x="576" fg:w="13"/><text x="46.2197%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="46.1293%" y="693" width="0.8779%" height="15" fill="rgb(252,118,36)" fg:x="578" fg:w="11"/><text x="46.3793%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="46.2091%" y="677" width="0.7981%" height="15" fill="rgb(210,224,19)" fg:x="579" fg:w="10"/><text x="46.4591%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="46.5283%" y="661" width="0.4789%" height="15" fill="rgb(218,30,24)" fg:x="583" fg:w="6"/><text x="46.7783%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="46.8476%" y="645" width="0.1596%" height="15" fill="rgb(219,75,50)" fg:x="587" fg:w="2"/><text x="47.0976%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.9274%" y="629" width="0.0798%" height="15" fill="rgb(234,72,50)" fg:x="588" fg:w="1"/><text x="47.1774%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9274%" y="613" width="0.0798%" height="15" fill="rgb(219,100,48)" fg:x="588" fg:w="1"/><text x="47.1774%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="47.0072%" y="693" width="0.1596%" height="15" fill="rgb(253,5,41)" fg:x="589" fg:w="2"/><text x="47.2572%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0870%" y="677" width="0.0798%" height="15" fill="rgb(247,181,11)" fg:x="590" fg:w="1"/><text x="47.3370%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="47.2466%" y="661" width="0.1596%" height="15" fill="rgb(222,223,25)" fg:x="592" fg:w="2"/><text x="47.4966%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.6457%" y="645" width="0.1596%" height="15" fill="rgb(214,198,28)" fg:x="597" fg:w="2"/><text x="47.8957%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="47.8053%" y="645" width="0.2394%" height="15" fill="rgb(230,46,43)" fg:x="599" fg:w="3"/><text x="48.0553%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="47.8851%" y="629" width="0.1596%" height="15" fill="rgb(233,65,53)" fg:x="600" fg:w="2"/><text x="48.1351%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.0447%" y="629" width="0.0798%" height="15" fill="rgb(221,121,27)" fg:x="602" fg:w="1"/><text x="48.2947%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.2043%" y="613" width="0.1596%" height="15" fill="rgb(247,70,47)" fg:x="604" fg:w="2"/><text x="48.4543%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.3639%" y="613" width="0.0798%" height="15" fill="rgb(228,85,35)" fg:x="606" fg:w="1"/><text x="48.6139%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="48.4437%" y="613" width="0.0798%" height="15" fill="rgb(209,50,18)" fg:x="607" fg:w="1"/><text x="48.6937%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.4437%" y="597" width="0.0798%" height="15" fill="rgb(250,19,35)" fg:x="607" fg:w="1"/><text x="48.6937%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.4437%" y="581" width="0.0798%" height="15" fill="rgb(253,107,29)" fg:x="607" fg:w="1"/><text x="48.6937%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4437%" y="565" width="0.0798%" height="15" fill="rgb(252,179,29)" fg:x="607" fg:w="1"/><text x="48.6937%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="47.1668%" y="693" width="1.5164%" height="15" fill="rgb(238,194,6)" fg:x="591" fg:w="19"/><text x="47.4168%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.44%)</title><rect x="47.2466%" y="677" width="1.4366%" height="15" fill="rgb(238,164,29)" fg:x="592" fg:w="18"/><text x="47.4966%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="47.4062%" y="661" width="1.2769%" height="15" fill="rgb(224,25,9)" fg:x="594" fg:w="16"/><text x="47.6562%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="48.0447%" y="645" width="0.6385%" height="15" fill="rgb(244,153,23)" fg:x="602" fg:w="8"/><text x="48.2947%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="48.1245%" y="629" width="0.5587%" height="15" fill="rgb(212,203,14)" fg:x="603" fg:w="7"/><text x="48.3745%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="48.5235%" y="613" width="0.1596%" height="15" fill="rgb(220,164,20)" fg:x="608" fg:w="2"/><text x="48.7735%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6034%" y="597" width="0.0798%" height="15" fill="rgb(222,203,48)" fg:x="609" fg:w="1"/><text x="48.8534%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6034%" y="581" width="0.0798%" height="15" fill="rgb(215,159,22)" fg:x="609" fg:w="1"/><text x="48.8534%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.6832%" y="693" width="0.0798%" height="15" fill="rgb(216,183,47)" fg:x="610" fg:w="1"/><text x="48.9332%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="49.0024%" y="629" width="0.0798%" height="15" fill="rgb(229,195,25)" fg:x="614" fg:w="1"/><text x="49.2524%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="49.0024%" y="613" width="0.0798%" height="15" fill="rgb(224,132,51)" fg:x="614" fg:w="1"/><text x="49.2524%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.0024%" y="597" width="0.0798%" height="15" fill="rgb(240,63,7)" fg:x="614" fg:w="1"/><text x="49.2524%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="48.9226%" y="645" width="0.2394%" height="15" fill="rgb(249,182,41)" fg:x="613" fg:w="3"/><text x="49.1726%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="49.0822%" y="629" width="0.0798%" height="15" fill="rgb(243,47,26)" fg:x="615" fg:w="1"/><text x="49.3322%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="48.8428%" y="661" width="0.3990%" height="15" fill="rgb(233,48,2)" fg:x="612" fg:w="5"/><text x="49.0928%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.1620%" y="645" width="0.0798%" height="15" fill="rgb(244,165,34)" fg:x="616" fg:w="1"/><text x="49.4120%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="48.7630%" y="677" width="0.5587%" height="15" fill="rgb(207,89,7)" fg:x="611" fg:w="7"/><text x="49.0130%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.2418%" y="661" width="0.0798%" height="15" fill="rgb(244,117,36)" fg:x="617" fg:w="1"/><text x="49.4918%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="49.3216%" y="677" width="0.0798%" height="15" fill="rgb(226,144,34)" fg:x="618" fg:w="1"/><text x="49.5716%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4014%" y="677" width="0.0798%" height="15" fill="rgb(213,23,19)" fg:x="619" fg:w="1"/><text x="49.6514%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="49.4812%" y="677" width="0.0798%" height="15" fill="rgb(217,75,12)" fg:x="620" fg:w="1"/><text x="49.7312%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.4812%" y="661" width="0.0798%" height="15" fill="rgb(224,159,17)" fg:x="620" fg:w="1"/><text x="49.7312%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4812%" y="645" width="0.0798%" height="15" fill="rgb(217,118,1)" fg:x="620" fg:w="1"/><text x="49.7312%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (34 samples, 2.71%)</title><rect x="47.0072%" y="709" width="2.7135%" height="15" fill="rgb(232,180,48)" fg:x="589" fg:w="34"/><text x="47.2572%" y="719.50">&lt;k..</text></g><g><title>treediff::diff::diff (12 samples, 0.96%)</title><rect x="48.7630%" y="693" width="0.9577%" height="15" fill="rgb(230,27,33)" fg:x="611" fg:w="12"/><text x="49.0130%" y="703.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="49.5611%" y="677" width="0.1596%" height="15" fill="rgb(205,31,21)" fg:x="621" fg:w="2"/><text x="49.8111%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.5611%" y="661" width="0.1596%" height="15" fill="rgb(253,59,4)" fg:x="621" fg:w="2"/><text x="49.8111%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.7207%" y="709" width="0.0798%" height="15" fill="rgb(224,201,9)" fg:x="623" fg:w="1"/><text x="49.9707%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7207%" y="693" width="0.0798%" height="15" fill="rgb(229,206,30)" fg:x="623" fg:w="1"/><text x="49.9707%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="50.0399%" y="693" width="0.0798%" height="15" fill="rgb(212,67,47)" fg:x="627" fg:w="1"/><text x="50.2899%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2793%" y="677" width="0.0798%" height="15" fill="rgb(211,96,50)" fg:x="630" fg:w="1"/><text x="50.5293%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.72%)</title><rect x="50.3591%" y="677" width="0.7183%" height="15" fill="rgb(252,114,18)" fg:x="631" fg:w="9"/><text x="50.6091%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="50.8380%" y="661" width="0.2394%" height="15" fill="rgb(223,58,37)" fg:x="637" fg:w="3"/><text x="51.0880%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="50.9178%" y="645" width="0.1596%" height="15" fill="rgb(237,70,4)" fg:x="638" fg:w="2"/><text x="51.1678%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="51.0774%" y="677" width="0.0798%" height="15" fill="rgb(244,85,46)" fg:x="640" fg:w="1"/><text x="51.3274%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="51.1572%" y="677" width="0.1596%" height="15" fill="rgb(223,39,52)" fg:x="641" fg:w="2"/><text x="51.4072%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="51.2370%" y="661" width="0.0798%" height="15" fill="rgb(218,200,14)" fg:x="642" fg:w="1"/><text x="51.4870%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2370%" y="645" width="0.0798%" height="15" fill="rgb(208,171,16)" fg:x="642" fg:w="1"/><text x="51.4870%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2370%" y="629" width="0.0798%" height="15" fill="rgb(234,200,18)" fg:x="642" fg:w="1"/><text x="51.4870%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2370%" y="613" width="0.0798%" height="15" fill="rgb(228,45,11)" fg:x="642" fg:w="1"/><text x="51.4870%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="51.3168%" y="677" width="0.0798%" height="15" fill="rgb(237,182,11)" fg:x="643" fg:w="1"/><text x="51.5668%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="51.3168%" y="661" width="0.0798%" height="15" fill="rgb(241,175,49)" fg:x="643" fg:w="1"/><text x="51.5668%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3168%" y="645" width="0.0798%" height="15" fill="rgb(247,38,35)" fg:x="643" fg:w="1"/><text x="51.5668%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.7159%" y="645" width="0.0798%" height="15" fill="rgb(228,39,49)" fg:x="648" fg:w="1"/><text x="51.9659%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="51.8755%" y="629" width="0.3990%" height="15" fill="rgb(226,101,26)" fg:x="650" fg:w="5"/><text x="52.1255%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.0351%" y="613" width="0.2394%" height="15" fill="rgb(206,141,19)" fg:x="652" fg:w="3"/><text x="52.2851%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.1149%" y="597" width="0.1596%" height="15" fill="rgb(211,200,13)" fg:x="653" fg:w="2"/><text x="52.3649%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="52.3543%" y="613" width="0.0798%" height="15" fill="rgb(241,121,6)" fg:x="656" fg:w="1"/><text x="52.6043%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="52.5140%" y="597" width="0.0798%" height="15" fill="rgb(234,221,29)" fg:x="658" fg:w="1"/><text x="52.7640%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.5938%" y="581" width="0.2394%" height="15" fill="rgb(229,136,5)" fg:x="659" fg:w="3"/><text x="52.8438%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.6736%" y="565" width="0.1596%" height="15" fill="rgb(238,36,11)" fg:x="660" fg:w="2"/><text x="52.9236%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="52.7534%" y="549" width="0.0798%" height="15" fill="rgb(251,55,41)" fg:x="661" fg:w="1"/><text x="53.0034%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="52.5938%" y="597" width="0.3192%" height="15" fill="rgb(242,34,40)" fg:x="659" fg:w="4"/><text x="52.8438%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="52.8332%" y="581" width="0.0798%" height="15" fill="rgb(215,42,17)" fg:x="662" fg:w="1"/><text x="53.0832%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8332%" y="565" width="0.0798%" height="15" fill="rgb(207,44,46)" fg:x="662" fg:w="1"/><text x="53.0832%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="52.9130%" y="597" width="0.0798%" height="15" fill="rgb(211,206,28)" fg:x="663" fg:w="1"/><text x="53.1630%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.80%)</title><rect x="52.2745%" y="629" width="0.7981%" height="15" fill="rgb(237,167,16)" fg:x="655" fg:w="10"/><text x="52.5245%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="52.4342%" y="613" width="0.6385%" height="15" fill="rgb(233,66,6)" fg:x="657" fg:w="8"/><text x="52.6842%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9928%" y="597" width="0.0798%" height="15" fill="rgb(246,123,29)" fg:x="664" fg:w="1"/><text x="53.2428%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.2322%" y="613" width="0.0798%" height="15" fill="rgb(209,62,40)" fg:x="667" fg:w="1"/><text x="53.4822%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.3919%" y="597" width="0.2394%" height="15" fill="rgb(218,4,25)" fg:x="669" fg:w="3"/><text x="53.6419%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.4717%" y="581" width="0.1596%" height="15" fill="rgb(253,91,49)" fg:x="670" fg:w="2"/><text x="53.7217%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5515%" y="565" width="0.0798%" height="15" fill="rgb(228,155,29)" fg:x="671" fg:w="1"/><text x="53.8015%" y="575.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.8707%" y="533" width="0.2394%" height="15" fill="rgb(243,57,37)" fg:x="675" fg:w="3"/><text x="54.1207%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="53.7909%" y="581" width="0.3990%" height="15" fill="rgb(244,167,17)" fg:x="674" fg:w="5"/><text x="54.0409%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="53.7909%" y="565" width="0.3990%" height="15" fill="rgb(207,181,38)" fg:x="674" fg:w="5"/><text x="54.0409%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="53.7909%" y="549" width="0.3990%" height="15" fill="rgb(211,8,23)" fg:x="674" fg:w="5"/><text x="54.0409%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.1101%" y="533" width="0.0798%" height="15" fill="rgb(235,11,44)" fg:x="678" fg:w="1"/><text x="54.3601%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.28%)</title><rect x="53.3121%" y="613" width="1.2769%" height="15" fill="rgb(248,18,52)" fg:x="668" fg:w="16"/><text x="53.5621%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="53.6313%" y="597" width="0.9577%" height="15" fill="rgb(208,4,7)" fg:x="672" fg:w="12"/><text x="53.8813%" y="607.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="54.1899%" y="581" width="0.3990%" height="15" fill="rgb(240,17,39)" fg:x="679" fg:w="5"/><text x="54.4399%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (38 samples, 3.03%)</title><rect x="51.7957%" y="645" width="3.0327%" height="15" fill="rgb(207,170,3)" fg:x="649" fg:w="38"/><text x="52.0457%" y="655.50">&lt;se..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 1.76%)</title><rect x="53.0726%" y="629" width="1.7558%" height="15" fill="rgb(236,100,52)" fg:x="665" fg:w="22"/><text x="53.3226%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="54.5890%" y="613" width="0.2394%" height="15" fill="rgb(246,78,51)" fg:x="684" fg:w="3"/><text x="54.8390%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 3.27%)</title><rect x="51.6361%" y="661" width="3.2721%" height="15" fill="rgb(211,17,15)" fg:x="647" fg:w="41"/><text x="51.8861%" y="671.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="54.8284%" y="645" width="0.0798%" height="15" fill="rgb(209,59,46)" fg:x="687" fg:w="1"/><text x="55.0784%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.8284%" y="629" width="0.0798%" height="15" fill="rgb(210,92,25)" fg:x="687" fg:w="1"/><text x="55.0784%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.8284%" y="613" width="0.0798%" height="15" fill="rgb(238,174,52)" fg:x="687" fg:w="1"/><text x="55.0784%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9082%" y="661" width="0.0798%" height="15" fill="rgb(230,73,7)" fg:x="688" fg:w="1"/><text x="55.1582%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (66 samples, 5.27%)</title><rect x="49.8005%" y="709" width="5.2674%" height="15" fill="rgb(243,124,40)" fg:x="624" fg:w="66"/><text x="50.0505%" y="719.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (62 samples, 4.95%)</title><rect x="50.1197%" y="693" width="4.9481%" height="15" fill="rgb(244,170,11)" fg:x="628" fg:w="62"/><text x="50.3697%" y="703.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (46 samples, 3.67%)</title><rect x="51.3966%" y="677" width="3.6712%" height="15" fill="rgb(207,114,54)" fg:x="644" fg:w="46"/><text x="51.6466%" y="687.50">serd..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9880%" y="661" width="0.0798%" height="15" fill="rgb(205,42,20)" fg:x="689" fg:w="1"/><text x="55.2380%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9880%" y="645" width="0.0798%" height="15" fill="rgb(230,30,28)" fg:x="689" fg:w="1"/><text x="55.2380%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.3871%" y="629" width="0.0798%" height="15" fill="rgb(205,73,54)" fg:x="694" fg:w="1"/><text x="55.6371%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="55.7063%" y="597" width="0.1596%" height="15" fill="rgb(254,227,23)" fg:x="698" fg:w="2"/><text x="55.9563%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.2650%" y="533" width="0.0798%" height="15" fill="rgb(228,202,34)" fg:x="705" fg:w="1"/><text x="56.5150%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="56.2650%" y="517" width="0.0798%" height="15" fill="rgb(222,225,37)" fg:x="705" fg:w="1"/><text x="56.5150%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.2650%" y="501" width="0.0798%" height="15" fill="rgb(221,14,54)" fg:x="705" fg:w="1"/><text x="56.5150%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.3448%" y="533" width="0.1596%" height="15" fill="rgb(254,102,2)" fg:x="706" fg:w="2"/><text x="56.5948%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4246%" y="517" width="0.0798%" height="15" fill="rgb(232,104,17)" fg:x="707" fg:w="1"/><text x="56.6746%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="56.2650%" y="565" width="0.3990%" height="15" fill="rgb(250,220,14)" fg:x="705" fg:w="5"/><text x="56.5150%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="56.2650%" y="549" width="0.3990%" height="15" fill="rgb(241,158,9)" fg:x="705" fg:w="5"/><text x="56.5150%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.5044%" y="533" width="0.1596%" height="15" fill="rgb(246,9,43)" fg:x="708" fg:w="2"/><text x="56.7544%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5842%" y="517" width="0.0798%" height="15" fill="rgb(206,73,33)" fg:x="709" fg:w="1"/><text x="56.8342%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5842%" y="501" width="0.0798%" height="15" fill="rgb(222,79,8)" fg:x="709" fg:w="1"/><text x="56.8342%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.7438%" y="533" width="0.3192%" height="15" fill="rgb(234,8,54)" fg:x="711" fg:w="4"/><text x="56.9938%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.9034%" y="517" width="0.1596%" height="15" fill="rgb(209,134,38)" fg:x="713" fg:w="2"/><text x="57.1534%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.9034%" y="501" width="0.1596%" height="15" fill="rgb(230,127,29)" fg:x="713" fg:w="2"/><text x="57.1534%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="56.6640%" y="549" width="0.4789%" height="15" fill="rgb(242,44,41)" fg:x="710" fg:w="6"/><text x="56.9140%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.0630%" y="533" width="0.0798%" height="15" fill="rgb(222,56,43)" fg:x="715" fg:w="1"/><text x="57.3130%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.1429%" y="533" width="0.0798%" height="15" fill="rgb(238,39,47)" fg:x="716" fg:w="1"/><text x="57.3929%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="57.1429%" y="549" width="0.2394%" height="15" fill="rgb(226,79,43)" fg:x="716" fg:w="3"/><text x="57.3929%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.2227%" y="533" width="0.1596%" height="15" fill="rgb(242,105,53)" fg:x="717" fg:w="2"/><text x="57.4727%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21 samples, 1.68%)</title><rect x="55.9457%" y="581" width="1.6760%" height="15" fill="rgb(251,132,46)" fg:x="701" fg:w="21"/><text x="56.1957%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="56.6640%" y="565" width="0.9577%" height="15" fill="rgb(231,77,14)" fg:x="710" fg:w="12"/><text x="56.9140%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.3823%" y="549" width="0.2394%" height="15" fill="rgb(240,135,9)" fg:x="719" fg:w="3"/><text x="57.6323%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.4621%" y="533" width="0.1596%" height="15" fill="rgb(248,109,14)" fg:x="720" fg:w="2"/><text x="57.7121%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5419%" y="517" width="0.0798%" height="15" fill="rgb(227,146,52)" fg:x="721" fg:w="1"/><text x="57.7919%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.6217%" y="581" width="0.1596%" height="15" fill="rgb(232,54,3)" fg:x="722" fg:w="2"/><text x="57.8717%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.6217%" y="565" width="0.1596%" height="15" fill="rgb(229,201,43)" fg:x="722" fg:w="2"/><text x="57.8717%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.31%)</title><rect x="55.6265%" y="613" width="2.3144%" height="15" fill="rgb(252,161,33)" fg:x="697" fg:w="29"/><text x="55.8765%" y="623.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.08%)</title><rect x="55.8659%" y="597" width="2.0750%" height="15" fill="rgb(226,146,40)" fg:x="700" fg:w="26"/><text x="56.1159%" y="607.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.7813%" y="581" width="0.1596%" height="15" fill="rgb(219,47,25)" fg:x="724" fg:w="2"/><text x="58.0313%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.8611%" y="565" width="0.0798%" height="15" fill="rgb(250,135,13)" fg:x="725" fg:w="1"/><text x="58.1111%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8611%" y="549" width="0.0798%" height="15" fill="rgb(219,229,18)" fg:x="725" fg:w="1"/><text x="58.1111%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.9409%" y="597" width="0.0798%" height="15" fill="rgb(217,152,27)" fg:x="726" fg:w="1"/><text x="58.1909%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.87%)</title><rect x="55.2275%" y="645" width="2.8731%" height="15" fill="rgb(225,71,47)" fg:x="692" fg:w="36"/><text x="55.4775%" y="655.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (33 samples, 2.63%)</title><rect x="55.4669%" y="629" width="2.6337%" height="15" fill="rgb(220,139,14)" fg:x="695" fg:w="33"/><text x="55.7169%" y="639.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.9409%" y="613" width="0.1596%" height="15" fill="rgb(247,54,32)" fg:x="726" fg:w="2"/><text x="58.1909%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0208%" y="597" width="0.0798%" height="15" fill="rgb(252,131,39)" fg:x="727" fg:w="1"/><text x="58.2708%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.1006%" y="629" width="0.0798%" height="15" fill="rgb(210,108,39)" fg:x="728" fg:w="1"/><text x="58.3506%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="58.1006%" y="645" width="0.1596%" height="15" fill="rgb(205,23,29)" fg:x="728" fg:w="2"/><text x="58.3506%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="58.1804%" y="629" width="0.0798%" height="15" fill="rgb(246,139,46)" fg:x="729" fg:w="1"/><text x="58.4304%" y="639.50"></text></g><g><title>engine::session::state::State::close (199 samples, 15.88%)</title><rect x="42.5379%" y="789" width="15.8819%" height="15" fill="rgb(250,81,26)" fg:x="533" fg:w="199"/><text x="42.7879%" y="799.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (199 samples, 15.88%)</title><rect x="42.5379%" y="773" width="15.8819%" height="15" fill="rgb(214,104,7)" fg:x="533" fg:w="199"/><text x="42.7879%" y="783.50">engine::session::state::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (196 samples, 15.64%)</title><rect x="42.7773%" y="757" width="15.6425%" height="15" fill="rgb(233,189,8)" fg:x="536" fg:w="196"/><text x="43.0273%" y="767.50">engine::session::interna..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (193 samples, 15.40%)</title><rect x="43.0168%" y="741" width="15.4030%" height="15" fill="rgb(228,141,17)" fg:x="539" fg:w="193"/><text x="43.2668%" y="751.50">engine::session::state::..</text></g><g><title>kernel::model::any_entity_changes (143 samples, 11.41%)</title><rect x="47.0072%" y="725" width="11.4126%" height="15" fill="rgb(247,157,1)" fg:x="589" fg:w="143"/><text x="47.2572%" y="735.50">kernel::model::an..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (42 samples, 3.35%)</title><rect x="55.0678%" y="709" width="3.3520%" height="15" fill="rgb(249,225,5)" fg:x="690" fg:w="42"/><text x="55.3178%" y="719.50">ser..</text></g><g><title>serde_json::de::from_trait (42 samples, 3.35%)</title><rect x="55.0678%" y="693" width="3.3520%" height="15" fill="rgb(242,55,13)" fg:x="690" fg:w="42"/><text x="55.3178%" y="703.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (42 samples, 3.35%)</title><rect x="55.0678%" y="677" width="3.3520%" height="15" fill="rgb(230,49,50)" fg:x="690" fg:w="42"/><text x="55.3178%" y="687.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (42 samples, 3.35%)</title><rect x="55.0678%" y="661" width="3.3520%" height="15" fill="rgb(241,111,38)" fg:x="690" fg:w="42"/><text x="55.3178%" y="671.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.2602%" y="645" width="0.1596%" height="15" fill="rgb(252,155,4)" fg:x="730" fg:w="2"/><text x="58.5102%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.3400%" y="629" width="0.0798%" height="15" fill="rgb(212,69,32)" fg:x="731" fg:w="1"/><text x="58.5900%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3400%" y="613" width="0.0798%" height="15" fill="rgb(243,107,47)" fg:x="731" fg:w="1"/><text x="58.5900%" y="623.50"></text></g><g><title>engine::session::Session::close (206 samples, 16.44%)</title><rect x="42.0591%" y="805" width="16.4405%" height="15" fill="rgb(247,130,12)" fg:x="527" fg:w="206"/><text x="42.3091%" y="815.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="58.4198%" y="789" width="0.0798%" height="15" fill="rgb(233,74,16)" fg:x="732" fg:w="1"/><text x="58.6698%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6592%" y="549" width="0.0798%" height="15" fill="rgb(208,58,18)" fg:x="735" fg:w="1"/><text x="58.9092%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6592%" y="533" width="0.0798%" height="15" fill="rgb(242,225,1)" fg:x="735" fg:w="1"/><text x="58.9092%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.6592%" y="517" width="0.0798%" height="15" fill="rgb(249,39,40)" fg:x="735" fg:w="1"/><text x="58.9092%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.6592%" y="501" width="0.0798%" height="15" fill="rgb(207,72,44)" fg:x="735" fg:w="1"/><text x="58.9092%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.6592%" y="485" width="0.0798%" height="15" fill="rgb(215,193,12)" fg:x="735" fg:w="1"/><text x="58.9092%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.6592%" y="469" width="0.0798%" height="15" fill="rgb(248,41,39)" fg:x="735" fg:w="1"/><text x="58.9092%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6592%" y="453" width="0.0798%" height="15" fill="rgb(253,85,4)" fg:x="735" fg:w="1"/><text x="58.9092%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="58.5794%" y="677" width="0.2394%" height="15" fill="rgb(243,70,31)" fg:x="734" fg:w="3"/><text x="58.8294%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="58.5794%" y="661" width="0.2394%" height="15" fill="rgb(253,195,26)" fg:x="734" fg:w="3"/><text x="58.8294%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="58.6592%" y="645" width="0.1596%" height="15" fill="rgb(243,42,11)" fg:x="735" fg:w="2"/><text x="58.9092%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.6592%" y="629" width="0.1596%" height="15" fill="rgb(239,66,17)" fg:x="735" fg:w="2"/><text x="58.9092%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.6592%" y="613" width="0.1596%" height="15" fill="rgb(217,132,21)" fg:x="735" fg:w="2"/><text x="58.9092%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.6592%" y="597" width="0.1596%" height="15" fill="rgb(252,202,21)" fg:x="735" fg:w="2"/><text x="58.9092%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.6592%" y="581" width="0.1596%" height="15" fill="rgb(233,98,36)" fg:x="735" fg:w="2"/><text x="58.9092%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.6592%" y="565" width="0.1596%" height="15" fill="rgb(216,153,54)" fg:x="735" fg:w="2"/><text x="58.9092%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7390%" y="549" width="0.0798%" height="15" fill="rgb(250,99,7)" fg:x="736" fg:w="1"/><text x="58.9890%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.7390%" y="533" width="0.0798%" height="15" fill="rgb(207,56,50)" fg:x="736" fg:w="1"/><text x="58.9890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="58.8188%" y="677" width="0.0798%" height="15" fill="rgb(244,61,34)" fg:x="737" fg:w="1"/><text x="59.0688%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8188%" y="661" width="0.0798%" height="15" fill="rgb(241,50,38)" fg:x="737" fg:w="1"/><text x="59.0688%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9785%" y="581" width="0.0798%" height="15" fill="rgb(212,166,30)" fg:x="739" fg:w="1"/><text x="59.2285%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0583%" y="549" width="0.0798%" height="15" fill="rgb(249,127,32)" fg:x="740" fg:w="1"/><text x="59.3083%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.0583%" y="565" width="0.1596%" height="15" fill="rgb(209,103,0)" fg:x="740" fg:w="2"/><text x="59.3083%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.1381%" y="549" width="0.0798%" height="15" fill="rgb(238,209,51)" fg:x="741" fg:w="1"/><text x="59.3881%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1381%" y="533" width="0.0798%" height="15" fill="rgb(237,56,23)" fg:x="741" fg:w="1"/><text x="59.3881%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1381%" y="517" width="0.0798%" height="15" fill="rgb(215,153,46)" fg:x="741" fg:w="1"/><text x="59.3881%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1381%" y="501" width="0.0798%" height="15" fill="rgb(224,49,31)" fg:x="741" fg:w="1"/><text x="59.3881%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1381%" y="485" width="0.0798%" height="15" fill="rgb(250,18,42)" fg:x="741" fg:w="1"/><text x="59.3881%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2179%" y="533" width="0.0798%" height="15" fill="rgb(215,176,39)" fg:x="742" fg:w="1"/><text x="59.4679%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="58.9785%" y="597" width="0.3990%" height="15" fill="rgb(223,77,29)" fg:x="739" fg:w="5"/><text x="59.2285%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="59.0583%" y="581" width="0.3192%" height="15" fill="rgb(234,94,52)" fg:x="740" fg:w="4"/><text x="59.3083%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="59.2179%" y="565" width="0.1596%" height="15" fill="rgb(220,154,50)" fg:x="742" fg:w="2"/><text x="59.4679%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.2179%" y="549" width="0.1596%" height="15" fill="rgb(212,11,10)" fg:x="742" fg:w="2"/><text x="59.4679%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.2977%" y="533" width="0.0798%" height="15" fill="rgb(205,166,19)" fg:x="743" fg:w="1"/><text x="59.5477%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2977%" y="517" width="0.0798%" height="15" fill="rgb(244,198,16)" fg:x="743" fg:w="1"/><text x="59.5477%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.2977%" y="501" width="0.0798%" height="15" fill="rgb(219,69,12)" fg:x="743" fg:w="1"/><text x="59.5477%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2977%" y="485" width="0.0798%" height="15" fill="rgb(245,30,7)" fg:x="743" fg:w="1"/><text x="59.5477%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.2977%" y="469" width="0.0798%" height="15" fill="rgb(218,221,48)" fg:x="743" fg:w="1"/><text x="59.5477%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2977%" y="453" width="0.0798%" height="15" fill="rgb(216,66,15)" fg:x="743" fg:w="1"/><text x="59.5477%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.2977%" y="437" width="0.0798%" height="15" fill="rgb(226,122,50)" fg:x="743" fg:w="1"/><text x="59.5477%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.3775%" y="533" width="0.1596%" height="15" fill="rgb(239,156,16)" fg:x="744" fg:w="2"/><text x="59.6275%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="59.3775%" y="581" width="0.2394%" height="15" fill="rgb(224,27,38)" fg:x="744" fg:w="3"/><text x="59.6275%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.3775%" y="565" width="0.2394%" height="15" fill="rgb(224,39,27)" fg:x="744" fg:w="3"/><text x="59.6275%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.3775%" y="549" width="0.2394%" height="15" fill="rgb(215,92,29)" fg:x="744" fg:w="3"/><text x="59.6275%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.5371%" y="533" width="0.0798%" height="15" fill="rgb(207,159,16)" fg:x="746" fg:w="1"/><text x="59.7871%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5371%" y="517" width="0.0798%" height="15" fill="rgb(238,163,47)" fg:x="746" fg:w="1"/><text x="59.7871%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.5371%" y="501" width="0.0798%" height="15" fill="rgb(219,91,49)" fg:x="746" fg:w="1"/><text x="59.7871%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.5371%" y="485" width="0.0798%" height="15" fill="rgb(227,167,31)" fg:x="746" fg:w="1"/><text x="59.7871%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5371%" y="469" width="0.0798%" height="15" fill="rgb(234,80,54)" fg:x="746" fg:w="1"/><text x="59.7871%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.5371%" y="453" width="0.0798%" height="15" fill="rgb(212,114,2)" fg:x="746" fg:w="1"/><text x="59.7871%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="59.6967%" y="549" width="0.1596%" height="15" fill="rgb(234,50,24)" fg:x="748" fg:w="2"/><text x="59.9467%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7765%" y="533" width="0.0798%" height="15" fill="rgb(221,68,8)" fg:x="749" fg:w="1"/><text x="60.0265%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.8563%" y="501" width="0.0798%" height="15" fill="rgb(254,180,31)" fg:x="750" fg:w="1"/><text x="60.1063%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.8563%" y="485" width="0.0798%" height="15" fill="rgb(247,130,50)" fg:x="750" fg:w="1"/><text x="60.1063%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="59.8563%" y="469" width="0.0798%" height="15" fill="rgb(211,109,4)" fg:x="750" fg:w="1"/><text x="60.1063%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.9362%" y="501" width="0.0798%" height="15" fill="rgb(238,50,21)" fg:x="751" fg:w="1"/><text x="60.1862%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.9362%" y="485" width="0.0798%" height="15" fill="rgb(225,57,45)" fg:x="751" fg:w="1"/><text x="60.1862%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.9362%" y="469" width="0.0798%" height="15" fill="rgb(209,196,50)" fg:x="751" fg:w="1"/><text x="60.1862%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="59.9362%" y="453" width="0.0798%" height="15" fill="rgb(242,140,13)" fg:x="751" fg:w="1"/><text x="60.1862%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9362%" y="437" width="0.0798%" height="15" fill="rgb(217,111,7)" fg:x="751" fg:w="1"/><text x="60.1862%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="60.0958%" y="453" width="0.1596%" height="15" fill="rgb(253,193,51)" fg:x="753" fg:w="2"/><text x="60.3458%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="60.0958%" y="437" width="0.1596%" height="15" fill="rgb(252,70,29)" fg:x="753" fg:w="2"/><text x="60.3458%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1756%" y="421" width="0.0798%" height="15" fill="rgb(232,127,12)" fg:x="754" fg:w="1"/><text x="60.4256%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1756%" y="405" width="0.0798%" height="15" fill="rgb(211,180,21)" fg:x="754" fg:w="1"/><text x="60.4256%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.1756%" y="389" width="0.0798%" height="15" fill="rgb(229,72,13)" fg:x="754" fg:w="1"/><text x="60.4256%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="59.3775%" y="597" width="0.9577%" height="15" fill="rgb(240,211,49)" fg:x="744" fg:w="12"/><text x="59.6275%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="59.6169%" y="581" width="0.7183%" height="15" fill="rgb(219,149,40)" fg:x="747" fg:w="9"/><text x="59.8669%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="59.6169%" y="565" width="0.7183%" height="15" fill="rgb(210,127,46)" fg:x="747" fg:w="9"/><text x="59.8669%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="59.8563%" y="549" width="0.4789%" height="15" fill="rgb(220,106,7)" fg:x="750" fg:w="6"/><text x="60.1063%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.8563%" y="533" width="0.4789%" height="15" fill="rgb(249,31,22)" fg:x="750" fg:w="6"/><text x="60.1063%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="59.8563%" y="517" width="0.4789%" height="15" fill="rgb(253,1,49)" fg:x="750" fg:w="6"/><text x="60.1063%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.0160%" y="501" width="0.3192%" height="15" fill="rgb(227,144,33)" fg:x="752" fg:w="4"/><text x="60.2660%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.0160%" y="485" width="0.3192%" height="15" fill="rgb(249,163,44)" fg:x="752" fg:w="4"/><text x="60.2660%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="60.0958%" y="469" width="0.2394%" height="15" fill="rgb(234,15,39)" fg:x="753" fg:w="3"/><text x="60.3458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2554%" y="453" width="0.0798%" height="15" fill="rgb(207,66,16)" fg:x="755" fg:w="1"/><text x="60.5054%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2554%" y="437" width="0.0798%" height="15" fill="rgb(233,112,24)" fg:x="755" fg:w="1"/><text x="60.5054%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.2554%" y="421" width="0.0798%" height="15" fill="rgb(230,90,22)" fg:x="755" fg:w="1"/><text x="60.5054%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2554%" y="405" width="0.0798%" height="15" fill="rgb(229,61,13)" fg:x="755" fg:w="1"/><text x="60.5054%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.2554%" y="389" width="0.0798%" height="15" fill="rgb(225,57,24)" fg:x="755" fg:w="1"/><text x="60.5054%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="58.9785%" y="629" width="1.4366%" height="15" fill="rgb(208,169,48)" fg:x="739" fg:w="18"/><text x="59.2285%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="58.9785%" y="613" width="1.4366%" height="15" fill="rgb(244,218,51)" fg:x="739" fg:w="18"/><text x="59.2285%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.3352%" y="597" width="0.0798%" height="15" fill="rgb(214,148,10)" fg:x="756" fg:w="1"/><text x="60.5852%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.3352%" y="581" width="0.0798%" height="15" fill="rgb(225,174,27)" fg:x="756" fg:w="1"/><text x="60.5852%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3352%" y="565" width="0.0798%" height="15" fill="rgb(230,96,26)" fg:x="756" fg:w="1"/><text x="60.5852%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3352%" y="549" width="0.0798%" height="15" fill="rgb(232,10,30)" fg:x="756" fg:w="1"/><text x="60.5852%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3352%" y="533" width="0.0798%" height="15" fill="rgb(222,8,50)" fg:x="756" fg:w="1"/><text x="60.5852%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3352%" y="517" width="0.0798%" height="15" fill="rgb(213,81,27)" fg:x="756" fg:w="1"/><text x="60.5852%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3352%" y="501" width="0.0798%" height="15" fill="rgb(245,50,10)" fg:x="756" fg:w="1"/><text x="60.5852%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3352%" y="485" width="0.0798%" height="15" fill="rgb(216,100,18)" fg:x="756" fg:w="1"/><text x="60.5852%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3352%" y="469" width="0.0798%" height="15" fill="rgb(236,147,54)" fg:x="756" fg:w="1"/><text x="60.5852%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3352%" y="453" width="0.0798%" height="15" fill="rgb(205,143,26)" fg:x="756" fg:w="1"/><text x="60.5852%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3352%" y="437" width="0.0798%" height="15" fill="rgb(236,26,9)" fg:x="756" fg:w="1"/><text x="60.5852%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3352%" y="421" width="0.0798%" height="15" fill="rgb(221,165,53)" fg:x="756" fg:w="1"/><text x="60.5852%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3352%" y="405" width="0.0798%" height="15" fill="rgb(214,110,17)" fg:x="756" fg:w="1"/><text x="60.5852%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3352%" y="389" width="0.0798%" height="15" fill="rgb(237,197,12)" fg:x="756" fg:w="1"/><text x="60.5852%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3352%" y="373" width="0.0798%" height="15" fill="rgb(205,84,17)" fg:x="756" fg:w="1"/><text x="60.5852%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3352%" y="357" width="0.0798%" height="15" fill="rgb(237,18,45)" fg:x="756" fg:w="1"/><text x="60.5852%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3352%" y="341" width="0.0798%" height="15" fill="rgb(221,87,14)" fg:x="756" fg:w="1"/><text x="60.5852%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (19 samples, 1.52%)</title><rect x="58.9785%" y="645" width="1.5164%" height="15" fill="rgb(238,186,15)" fg:x="739" fg:w="19"/><text x="59.2285%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4150%" y="629" width="0.0798%" height="15" fill="rgb(208,115,11)" fg:x="757" fg:w="1"/><text x="60.6650%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6544%" y="421" width="0.0798%" height="15" fill="rgb(254,175,0)" fg:x="760" fg:w="1"/><text x="60.9044%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.6544%" y="517" width="0.1596%" height="15" fill="rgb(227,24,42)" fg:x="760" fg:w="2"/><text x="60.9044%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.6544%" y="501" width="0.1596%" height="15" fill="rgb(223,211,37)" fg:x="760" fg:w="2"/><text x="60.9044%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.6544%" y="485" width="0.1596%" height="15" fill="rgb(235,49,27)" fg:x="760" fg:w="2"/><text x="60.9044%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.6544%" y="469" width="0.1596%" height="15" fill="rgb(254,97,51)" fg:x="760" fg:w="2"/><text x="60.9044%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.6544%" y="453" width="0.1596%" height="15" fill="rgb(249,51,40)" fg:x="760" fg:w="2"/><text x="60.9044%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.6544%" y="437" width="0.1596%" height="15" fill="rgb(210,128,45)" fg:x="760" fg:w="2"/><text x="60.9044%" y="447.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="60.7342%" y="421" width="0.0798%" height="15" fill="rgb(224,137,50)" fg:x="761" fg:w="1"/><text x="60.9842%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="60.4948%" y="645" width="0.3990%" height="15" fill="rgb(242,15,9)" fg:x="758" fg:w="5"/><text x="60.7448%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.5746%" y="629" width="0.3192%" height="15" fill="rgb(233,187,41)" fg:x="759" fg:w="4"/><text x="60.8246%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.5746%" y="613" width="0.3192%" height="15" fill="rgb(227,2,29)" fg:x="759" fg:w="4"/><text x="60.8246%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.6544%" y="597" width="0.2394%" height="15" fill="rgb(222,70,3)" fg:x="760" fg:w="3"/><text x="60.9044%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.6544%" y="581" width="0.2394%" height="15" fill="rgb(213,11,42)" fg:x="760" fg:w="3"/><text x="60.9044%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="60.6544%" y="565" width="0.2394%" height="15" fill="rgb(225,150,9)" fg:x="760" fg:w="3"/><text x="60.9044%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="60.6544%" y="549" width="0.2394%" height="15" fill="rgb(230,162,45)" fg:x="760" fg:w="3"/><text x="60.9044%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="60.6544%" y="533" width="0.2394%" height="15" fill="rgb(222,14,52)" fg:x="760" fg:w="3"/><text x="60.9044%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.8140%" y="517" width="0.0798%" height="15" fill="rgb(254,198,14)" fg:x="762" fg:w="1"/><text x="61.0640%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.8140%" y="501" width="0.0798%" height="15" fill="rgb(220,217,30)" fg:x="762" fg:w="1"/><text x="61.0640%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (33 samples, 2.63%)</title><rect x="58.4996%" y="693" width="2.6337%" height="15" fill="rgb(215,146,41)" fg:x="733" fg:w="33"/><text x="58.7496%" y="703.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (28 samples, 2.23%)</title><rect x="58.8986%" y="677" width="2.2346%" height="15" fill="rgb(217,27,36)" fg:x="738" fg:w="28"/><text x="59.1486%" y="687.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (28 samples, 2.23%)</title><rect x="58.8986%" y="661" width="2.2346%" height="15" fill="rgb(219,218,39)" fg:x="738" fg:w="28"/><text x="59.1486%" y="671.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.8939%" y="645" width="0.2394%" height="15" fill="rgb(219,4,42)" fg:x="763" fg:w="3"/><text x="61.1439%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.8939%" y="629" width="0.2394%" height="15" fill="rgb(249,119,36)" fg:x="763" fg:w="3"/><text x="61.1439%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.0535%" y="613" width="0.0798%" height="15" fill="rgb(209,23,33)" fg:x="765" fg:w="1"/><text x="61.3035%" y="623.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (34 samples, 2.71%)</title><rect x="58.4996%" y="709" width="2.7135%" height="15" fill="rgb(211,10,0)" fg:x="733" fg:w="34"/><text x="58.7496%" y="719.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="61.1333%" y="693" width="0.0798%" height="15" fill="rgb(208,99,37)" fg:x="766" fg:w="1"/><text x="61.3833%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="61.1333%" y="677" width="0.0798%" height="15" fill="rgb(213,132,31)" fg:x="766" fg:w="1"/><text x="61.3833%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="61.1333%" y="661" width="0.0798%" height="15" fill="rgb(243,129,40)" fg:x="766" fg:w="1"/><text x="61.3833%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="61.1333%" y="645" width="0.0798%" height="15" fill="rgb(210,66,33)" fg:x="766" fg:w="1"/><text x="61.3833%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.1333%" y="629" width="0.0798%" height="15" fill="rgb(209,189,4)" fg:x="766" fg:w="1"/><text x="61.3833%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="613" width="0.0798%" height="15" fill="rgb(214,107,37)" fg:x="766" fg:w="1"/><text x="61.3833%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.1333%" y="597" width="0.0798%" height="15" fill="rgb(245,88,54)" fg:x="766" fg:w="1"/><text x="61.3833%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="581" width="0.0798%" height="15" fill="rgb(205,146,20)" fg:x="766" fg:w="1"/><text x="61.3833%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="565" width="0.0798%" height="15" fill="rgb(220,161,25)" fg:x="766" fg:w="1"/><text x="61.3833%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="549" width="0.0798%" height="15" fill="rgb(215,152,15)" fg:x="766" fg:w="1"/><text x="61.3833%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.1333%" y="533" width="0.0798%" height="15" fill="rgb(233,192,44)" fg:x="766" fg:w="1"/><text x="61.3833%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="517" width="0.0798%" height="15" fill="rgb(240,170,46)" fg:x="766" fg:w="1"/><text x="61.3833%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="501" width="0.0798%" height="15" fill="rgb(207,104,33)" fg:x="766" fg:w="1"/><text x="61.3833%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.1333%" y="485" width="0.0798%" height="15" fill="rgb(219,21,39)" fg:x="766" fg:w="1"/><text x="61.3833%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.1333%" y="469" width="0.0798%" height="15" fill="rgb(214,133,29)" fg:x="766" fg:w="1"/><text x="61.3833%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.1333%" y="453" width="0.0798%" height="15" fill="rgb(226,93,6)" fg:x="766" fg:w="1"/><text x="61.3833%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.1333%" y="437" width="0.0798%" height="15" fill="rgb(252,222,34)" fg:x="766" fg:w="1"/><text x="61.3833%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.2131%" y="709" width="0.0798%" height="15" fill="rgb(252,92,48)" fg:x="767" fg:w="1"/><text x="61.4631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="61.5323%" y="581" width="0.2394%" height="15" fill="rgb(245,223,24)" fg:x="771" fg:w="3"/><text x="61.7823%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.6919%" y="565" width="0.0798%" height="15" fill="rgb(205,176,3)" fg:x="773" fg:w="1"/><text x="61.9419%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6919%" y="549" width="0.0798%" height="15" fill="rgb(235,151,15)" fg:x="773" fg:w="1"/><text x="61.9419%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="61.7717%" y="581" width="0.0798%" height="15" fill="rgb(237,209,11)" fg:x="774" fg:w="1"/><text x="62.0217%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7717%" y="565" width="0.0798%" height="15" fill="rgb(243,227,24)" fg:x="774" fg:w="1"/><text x="62.0217%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7717%" y="549" width="0.0798%" height="15" fill="rgb(239,193,16)" fg:x="774" fg:w="1"/><text x="62.0217%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7717%" y="533" width="0.0798%" height="15" fill="rgb(231,27,9)" fg:x="774" fg:w="1"/><text x="62.0217%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7717%" y="517" width="0.0798%" height="15" fill="rgb(219,169,10)" fg:x="774" fg:w="1"/><text x="62.0217%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7717%" y="501" width="0.0798%" height="15" fill="rgb(244,229,43)" fg:x="774" fg:w="1"/><text x="62.0217%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7717%" y="485" width="0.0798%" height="15" fill="rgb(254,38,20)" fg:x="774" fg:w="1"/><text x="62.0217%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7717%" y="469" width="0.0798%" height="15" fill="rgb(250,47,30)" fg:x="774" fg:w="1"/><text x="62.0217%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7717%" y="453" width="0.0798%" height="15" fill="rgb(224,124,36)" fg:x="774" fg:w="1"/><text x="62.0217%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7717%" y="437" width="0.0798%" height="15" fill="rgb(246,68,51)" fg:x="774" fg:w="1"/><text x="62.0217%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7717%" y="421" width="0.0798%" height="15" fill="rgb(253,43,49)" fg:x="774" fg:w="1"/><text x="62.0217%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7717%" y="405" width="0.0798%" height="15" fill="rgb(219,54,36)" fg:x="774" fg:w="1"/><text x="62.0217%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7717%" y="389" width="0.0798%" height="15" fill="rgb(227,133,34)" fg:x="774" fg:w="1"/><text x="62.0217%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7717%" y="373" width="0.0798%" height="15" fill="rgb(247,227,15)" fg:x="774" fg:w="1"/><text x="62.0217%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="61.8516%" y="549" width="0.0798%" height="15" fill="rgb(229,96,14)" fg:x="775" fg:w="1"/><text x="62.1016%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="61.8516%" y="533" width="0.0798%" height="15" fill="rgb(220,79,17)" fg:x="775" fg:w="1"/><text x="62.1016%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.8516%" y="517" width="0.0798%" height="15" fill="rgb(205,131,53)" fg:x="775" fg:w="1"/><text x="62.1016%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.8516%" y="501" width="0.0798%" height="15" fill="rgb(209,50,29)" fg:x="775" fg:w="1"/><text x="62.1016%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.8516%" y="485" width="0.0798%" height="15" fill="rgb(245,86,46)" fg:x="775" fg:w="1"/><text x="62.1016%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="62.0112%" y="533" width="0.0798%" height="15" fill="rgb(235,66,46)" fg:x="777" fg:w="1"/><text x="62.2612%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0112%" y="517" width="0.0798%" height="15" fill="rgb(232,148,31)" fg:x="777" fg:w="1"/><text x="62.2612%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="62.3304%" y="485" width="0.3192%" height="15" fill="rgb(217,149,8)" fg:x="781" fg:w="4"/><text x="62.5804%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5698%" y="469" width="0.0798%" height="15" fill="rgb(209,183,11)" fg:x="784" fg:w="1"/><text x="62.8198%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5698%" y="453" width="0.0798%" height="15" fill="rgb(208,55,20)" fg:x="784" fg:w="1"/><text x="62.8198%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.5698%" y="437" width="0.0798%" height="15" fill="rgb(218,39,14)" fg:x="784" fg:w="1"/><text x="62.8198%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.5698%" y="421" width="0.0798%" height="15" fill="rgb(216,169,33)" fg:x="784" fg:w="1"/><text x="62.8198%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.5698%" y="405" width="0.0798%" height="15" fill="rgb(233,80,24)" fg:x="784" fg:w="1"/><text x="62.8198%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5698%" y="389" width="0.0798%" height="15" fill="rgb(213,179,31)" fg:x="784" fg:w="1"/><text x="62.8198%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.5698%" y="373" width="0.0798%" height="15" fill="rgb(209,19,5)" fg:x="784" fg:w="1"/><text x="62.8198%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.5698%" y="357" width="0.0798%" height="15" fill="rgb(219,18,35)" fg:x="784" fg:w="1"/><text x="62.8198%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.5698%" y="341" width="0.0798%" height="15" fill="rgb(209,169,16)" fg:x="784" fg:w="1"/><text x="62.8198%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.5698%" y="325" width="0.0798%" height="15" fill="rgb(245,90,51)" fg:x="784" fg:w="1"/><text x="62.8198%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.5698%" y="309" width="0.0798%" height="15" fill="rgb(220,99,45)" fg:x="784" fg:w="1"/><text x="62.8198%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.5698%" y="293" width="0.0798%" height="15" fill="rgb(249,89,25)" fg:x="784" fg:w="1"/><text x="62.8198%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="62.0910%" y="517" width="0.7183%" height="15" fill="rgb(239,193,0)" fg:x="778" fg:w="9"/><text x="62.3410%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="62.1708%" y="501" width="0.6385%" height="15" fill="rgb(231,126,1)" fg:x="779" fg:w="8"/><text x="62.4208%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.6496%" y="485" width="0.1596%" height="15" fill="rgb(243,166,3)" fg:x="785" fg:w="2"/><text x="62.8996%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.6496%" y="469" width="0.1596%" height="15" fill="rgb(223,22,34)" fg:x="785" fg:w="2"/><text x="62.8996%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="62.6496%" y="453" width="0.1596%" height="15" fill="rgb(251,52,51)" fg:x="785" fg:w="2"/><text x="62.8996%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.6496%" y="437" width="0.1596%" height="15" fill="rgb(221,165,28)" fg:x="785" fg:w="2"/><text x="62.8996%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.6496%" y="421" width="0.1596%" height="15" fill="rgb(218,121,47)" fg:x="785" fg:w="2"/><text x="62.8996%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.6496%" y="405" width="0.1596%" height="15" fill="rgb(209,120,9)" fg:x="785" fg:w="2"/><text x="62.8996%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.6496%" y="389" width="0.1596%" height="15" fill="rgb(236,68,12)" fg:x="785" fg:w="2"/><text x="62.8996%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.6496%" y="373" width="0.1596%" height="15" fill="rgb(225,194,26)" fg:x="785" fg:w="2"/><text x="62.8996%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="62.6496%" y="357" width="0.1596%" height="15" fill="rgb(231,84,39)" fg:x="785" fg:w="2"/><text x="62.8996%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.6496%" y="341" width="0.1596%" height="15" fill="rgb(210,11,45)" fg:x="785" fg:w="2"/><text x="62.8996%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.6496%" y="325" width="0.1596%" height="15" fill="rgb(224,54,52)" fg:x="785" fg:w="2"/><text x="62.8996%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7294%" y="309" width="0.0798%" height="15" fill="rgb(238,102,14)" fg:x="786" fg:w="1"/><text x="62.9794%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.8093%" y="517" width="0.1596%" height="15" fill="rgb(243,160,52)" fg:x="787" fg:w="2"/><text x="63.0593%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.8093%" y="501" width="0.1596%" height="15" fill="rgb(216,114,19)" fg:x="787" fg:w="2"/><text x="63.0593%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.8093%" y="485" width="0.1596%" height="15" fill="rgb(244,166,37)" fg:x="787" fg:w="2"/><text x="63.0593%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.8891%" y="469" width="0.0798%" height="15" fill="rgb(246,29,44)" fg:x="788" fg:w="1"/><text x="63.1391%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8891%" y="453" width="0.0798%" height="15" fill="rgb(215,56,53)" fg:x="788" fg:w="1"/><text x="63.1391%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.9689%" y="453" width="0.0798%" height="15" fill="rgb(217,60,2)" fg:x="789" fg:w="1"/><text x="63.2189%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0487%" y="453" width="0.0798%" height="15" fill="rgb(207,26,24)" fg:x="790" fg:w="1"/><text x="63.2987%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.0487%" y="437" width="0.0798%" height="15" fill="rgb(252,210,15)" fg:x="790" fg:w="1"/><text x="63.2987%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.0487%" y="421" width="0.0798%" height="15" fill="rgb(253,209,26)" fg:x="790" fg:w="1"/><text x="63.2987%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (18 samples, 1.44%)</title><rect x="61.9314%" y="549" width="1.4366%" height="15" fill="rgb(238,170,14)" fg:x="776" fg:w="18"/><text x="62.1814%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="62.0910%" y="533" width="1.2769%" height="15" fill="rgb(216,178,15)" fg:x="778" fg:w="16"/><text x="62.3410%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.9689%" y="517" width="0.3990%" height="15" fill="rgb(250,197,2)" fg:x="789" fg:w="5"/><text x="63.2189%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.9689%" y="501" width="0.3990%" height="15" fill="rgb(212,70,42)" fg:x="789" fg:w="5"/><text x="63.2189%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="62.9689%" y="485" width="0.3990%" height="15" fill="rgb(227,213,9)" fg:x="789" fg:w="5"/><text x="63.2189%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.9689%" y="469" width="0.3990%" height="15" fill="rgb(245,99,25)" fg:x="789" fg:w="5"/><text x="63.2189%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.1285%" y="453" width="0.2394%" height="15" fill="rgb(250,82,29)" fg:x="791" fg:w="3"/><text x="63.3785%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.2083%" y="437" width="0.1596%" height="15" fill="rgb(241,226,54)" fg:x="792" fg:w="2"/><text x="63.4583%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3679%" y="533" width="0.0798%" height="15" fill="rgb(221,99,41)" fg:x="794" fg:w="1"/><text x="63.6179%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3679%" y="517" width="0.0798%" height="15" fill="rgb(213,90,21)" fg:x="794" fg:w="1"/><text x="63.6179%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3679%" y="501" width="0.0798%" height="15" fill="rgb(205,208,24)" fg:x="794" fg:w="1"/><text x="63.6179%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3679%" y="485" width="0.0798%" height="15" fill="rgb(246,31,12)" fg:x="794" fg:w="1"/><text x="63.6179%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3679%" y="469" width="0.0798%" height="15" fill="rgb(213,154,6)" fg:x="794" fg:w="1"/><text x="63.6179%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.4477%" y="533" width="0.1596%" height="15" fill="rgb(222,163,29)" fg:x="795" fg:w="2"/><text x="63.6977%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.6073%" y="533" width="0.0798%" height="15" fill="rgb(227,201,8)" fg:x="797" fg:w="1"/><text x="63.8573%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9266%" y="389" width="0.0798%" height="15" fill="rgb(233,9,32)" fg:x="801" fg:w="1"/><text x="64.1766%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9266%" y="373" width="0.0798%" height="15" fill="rgb(217,54,24)" fg:x="801" fg:w="1"/><text x="64.1766%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.9266%" y="357" width="0.0798%" height="15" fill="rgb(235,192,0)" fg:x="801" fg:w="1"/><text x="64.1766%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.9266%" y="341" width="0.0798%" height="15" fill="rgb(235,45,9)" fg:x="801" fg:w="1"/><text x="64.1766%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.9266%" y="325" width="0.0798%" height="15" fill="rgb(246,42,40)" fg:x="801" fg:w="1"/><text x="64.1766%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.9266%" y="309" width="0.0798%" height="15" fill="rgb(248,111,24)" fg:x="801" fg:w="1"/><text x="64.1766%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9266%" y="293" width="0.0798%" height="15" fill="rgb(249,65,22)" fg:x="801" fg:w="1"/><text x="64.1766%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="63.7670%" y="485" width="0.4789%" height="15" fill="rgb(238,111,51)" fg:x="799" fg:w="6"/><text x="64.0170%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.9266%" y="469" width="0.3192%" height="15" fill="rgb(250,118,22)" fg:x="801" fg:w="4"/><text x="64.1766%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="63.9266%" y="453" width="0.3192%" height="15" fill="rgb(234,84,26)" fg:x="801" fg:w="4"/><text x="64.1766%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="63.9266%" y="437" width="0.3192%" height="15" fill="rgb(243,172,12)" fg:x="801" fg:w="4"/><text x="64.1766%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="63.9266%" y="421" width="0.3192%" height="15" fill="rgb(236,150,49)" fg:x="801" fg:w="4"/><text x="64.1766%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="63.9266%" y="405" width="0.3192%" height="15" fill="rgb(225,197,26)" fg:x="801" fg:w="4"/><text x="64.1766%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.24%)</title><rect x="64.0064%" y="389" width="0.2394%" height="15" fill="rgb(214,17,42)" fg:x="802" fg:w="3"/><text x="64.2564%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.24%)</title><rect x="64.0064%" y="373" width="0.2394%" height="15" fill="rgb(224,165,40)" fg:x="802" fg:w="3"/><text x="64.2564%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2458%" y="405" width="0.0798%" height="15" fill="rgb(246,100,4)" fg:x="805" fg:w="1"/><text x="64.4958%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2458%" y="389" width="0.0798%" height="15" fill="rgb(222,103,0)" fg:x="805" fg:w="1"/><text x="64.4958%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2458%" y="373" width="0.0798%" height="15" fill="rgb(227,189,26)" fg:x="805" fg:w="1"/><text x="64.4958%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2458%" y="357" width="0.0798%" height="15" fill="rgb(214,202,17)" fg:x="805" fg:w="1"/><text x="64.4958%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2458%" y="341" width="0.0798%" height="15" fill="rgb(229,111,3)" fg:x="805" fg:w="1"/><text x="64.4958%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2458%" y="325" width="0.0798%" height="15" fill="rgb(229,172,15)" fg:x="805" fg:w="1"/><text x="64.4958%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2458%" y="309" width="0.0798%" height="15" fill="rgb(230,224,35)" fg:x="805" fg:w="1"/><text x="64.4958%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="63.7670%" y="501" width="0.6385%" height="15" fill="rgb(251,141,6)" fg:x="799" fg:w="8"/><text x="64.0170%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.2458%" y="485" width="0.1596%" height="15" fill="rgb(225,208,6)" fg:x="805" fg:w="2"/><text x="64.4958%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.2458%" y="469" width="0.1596%" height="15" fill="rgb(246,181,16)" fg:x="805" fg:w="2"/><text x="64.4958%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.2458%" y="453" width="0.1596%" height="15" fill="rgb(227,129,36)" fg:x="805" fg:w="2"/><text x="64.4958%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.2458%" y="437" width="0.1596%" height="15" fill="rgb(248,117,24)" fg:x="805" fg:w="2"/><text x="64.4958%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.2458%" y="421" width="0.1596%" height="15" fill="rgb(214,185,35)" fg:x="805" fg:w="2"/><text x="64.4958%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3256%" y="405" width="0.0798%" height="15" fill="rgb(236,150,34)" fg:x="806" fg:w="1"/><text x="64.5756%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3256%" y="389" width="0.0798%" height="15" fill="rgb(243,228,27)" fg:x="806" fg:w="1"/><text x="64.5756%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4054%" y="501" width="0.0798%" height="15" fill="rgb(245,77,44)" fg:x="807" fg:w="1"/><text x="64.6554%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4054%" y="485" width="0.0798%" height="15" fill="rgb(235,214,42)" fg:x="807" fg:w="1"/><text x="64.6554%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.4054%" y="469" width="0.0798%" height="15" fill="rgb(221,74,3)" fg:x="807" fg:w="1"/><text x="64.6554%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.4054%" y="453" width="0.0798%" height="15" fill="rgb(206,121,29)" fg:x="807" fg:w="1"/><text x="64.6554%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.4054%" y="437" width="0.0798%" height="15" fill="rgb(249,131,53)" fg:x="807" fg:w="1"/><text x="64.6554%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4054%" y="421" width="0.0798%" height="15" fill="rgb(236,170,29)" fg:x="807" fg:w="1"/><text x="64.6554%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.4054%" y="405" width="0.0798%" height="15" fill="rgb(247,96,15)" fg:x="807" fg:w="1"/><text x="64.6554%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.4054%" y="389" width="0.0798%" height="15" fill="rgb(211,210,7)" fg:x="807" fg:w="1"/><text x="64.6554%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.4054%" y="373" width="0.0798%" height="15" fill="rgb(240,88,50)" fg:x="807" fg:w="1"/><text x="64.6554%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.4054%" y="357" width="0.0798%" height="15" fill="rgb(209,229,26)" fg:x="807" fg:w="1"/><text x="64.6554%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.4054%" y="341" width="0.0798%" height="15" fill="rgb(210,68,23)" fg:x="807" fg:w="1"/><text x="64.6554%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4054%" y="325" width="0.0798%" height="15" fill="rgb(229,180,13)" fg:x="807" fg:w="1"/><text x="64.6554%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="63.6872%" y="517" width="0.8779%" height="15" fill="rgb(236,53,44)" fg:x="798" fg:w="11"/><text x="63.9372%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.4852%" y="501" width="0.0798%" height="15" fill="rgb(244,214,29)" fg:x="808" fg:w="1"/><text x="64.7352%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.5650%" y="517" width="0.0798%" height="15" fill="rgb(220,75,29)" fg:x="809" fg:w="1"/><text x="64.8150%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.5650%" y="501" width="0.0798%" height="15" fill="rgb(214,183,37)" fg:x="809" fg:w="1"/><text x="64.8150%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.5650%" y="485" width="0.0798%" height="15" fill="rgb(239,117,29)" fg:x="809" fg:w="1"/><text x="64.8150%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.5650%" y="469" width="0.0798%" height="15" fill="rgb(237,171,35)" fg:x="809" fg:w="1"/><text x="64.8150%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.8045%" y="453" width="0.0798%" height="15" fill="rgb(229,178,53)" fg:x="812" fg:w="1"/><text x="65.0545%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8045%" y="437" width="0.0798%" height="15" fill="rgb(210,102,19)" fg:x="812" fg:w="1"/><text x="65.0545%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.8843%" y="437" width="0.0798%" height="15" fill="rgb(235,127,22)" fg:x="813" fg:w="1"/><text x="65.1343%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.8843%" y="453" width="0.1596%" height="15" fill="rgb(244,31,31)" fg:x="813" fg:w="2"/><text x="65.1343%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9641%" y="437" width="0.0798%" height="15" fill="rgb(231,43,21)" fg:x="814" fg:w="1"/><text x="65.2141%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2035%" y="421" width="0.0798%" height="15" fill="rgb(217,131,35)" fg:x="817" fg:w="1"/><text x="65.4535%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (25 samples, 2.00%)</title><rect x="63.3679%" y="549" width="1.9952%" height="15" fill="rgb(221,149,4)" fg:x="794" fg:w="25"/><text x="63.6179%" y="559.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (21 samples, 1.68%)</title><rect x="63.6872%" y="533" width="1.6760%" height="15" fill="rgb(232,170,28)" fg:x="798" fg:w="21"/><text x="63.9372%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="64.6449%" y="517" width="0.7183%" height="15" fill="rgb(238,56,10)" fg:x="810" fg:w="9"/><text x="64.8949%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="64.6449%" y="501" width="0.7183%" height="15" fill="rgb(235,196,14)" fg:x="810" fg:w="9"/><text x="64.8949%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="64.7247%" y="485" width="0.6385%" height="15" fill="rgb(216,45,48)" fg:x="811" fg:w="8"/><text x="64.9747%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.7247%" y="469" width="0.6385%" height="15" fill="rgb(238,213,17)" fg:x="811" fg:w="8"/><text x="64.9747%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.0439%" y="453" width="0.3192%" height="15" fill="rgb(212,13,2)" fg:x="815" fg:w="4"/><text x="65.2939%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.0439%" y="437" width="0.3192%" height="15" fill="rgb(240,114,20)" fg:x="815" fg:w="4"/><text x="65.2939%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.2833%" y="421" width="0.0798%" height="15" fill="rgb(228,41,40)" fg:x="818" fg:w="1"/><text x="65.5333%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2833%" y="405" width="0.0798%" height="15" fill="rgb(244,132,35)" fg:x="818" fg:w="1"/><text x="65.5333%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (47 samples, 3.75%)</title><rect x="61.8516%" y="565" width="3.7510%" height="15" fill="rgb(253,189,4)" fg:x="775" fg:w="47"/><text x="62.1016%" y="575.50">&lt;&amp;ke..</text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="65.3631%" y="549" width="0.2394%" height="15" fill="rgb(224,37,19)" fg:x="819" fg:w="3"/><text x="65.6131%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="65.4429%" y="533" width="0.1596%" height="15" fill="rgb(235,223,18)" fg:x="820" fg:w="2"/><text x="65.6929%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="65.6026%" y="533" width="0.1596%" height="15" fill="rgb(235,163,25)" fg:x="822" fg:w="2"/><text x="65.8526%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="65.6026%" y="517" width="0.1596%" height="15" fill="rgb(217,145,28)" fg:x="822" fg:w="2"/><text x="65.8526%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6824%" y="501" width="0.0798%" height="15" fill="rgb(223,223,32)" fg:x="823" fg:w="1"/><text x="65.9324%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6824%" y="485" width="0.0798%" height="15" fill="rgb(227,189,39)" fg:x="823" fg:w="1"/><text x="65.9324%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="65.7622%" y="533" width="0.0798%" height="15" fill="rgb(248,10,22)" fg:x="824" fg:w="1"/><text x="66.0122%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7622%" y="517" width="0.0798%" height="15" fill="rgb(248,46,39)" fg:x="824" fg:w="1"/><text x="66.0122%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7622%" y="501" width="0.0798%" height="15" fill="rgb(248,113,48)" fg:x="824" fg:w="1"/><text x="66.0122%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7622%" y="485" width="0.0798%" height="15" fill="rgb(245,16,25)" fg:x="824" fg:w="1"/><text x="66.0122%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7622%" y="469" width="0.0798%" height="15" fill="rgb(249,152,16)" fg:x="824" fg:w="1"/><text x="66.0122%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7622%" y="453" width="0.0798%" height="15" fill="rgb(250,16,1)" fg:x="824" fg:w="1"/><text x="66.0122%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7622%" y="437" width="0.0798%" height="15" fill="rgb(249,138,3)" fg:x="824" fg:w="1"/><text x="66.0122%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7622%" y="421" width="0.0798%" height="15" fill="rgb(227,71,41)" fg:x="824" fg:w="1"/><text x="66.0122%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7622%" y="405" width="0.0798%" height="15" fill="rgb(209,184,23)" fg:x="824" fg:w="1"/><text x="66.0122%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7622%" y="389" width="0.0798%" height="15" fill="rgb(223,215,31)" fg:x="824" fg:w="1"/><text x="66.0122%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7622%" y="373" width="0.0798%" height="15" fill="rgb(210,146,28)" fg:x="824" fg:w="1"/><text x="66.0122%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7622%" y="357" width="0.0798%" height="15" fill="rgb(209,183,41)" fg:x="824" fg:w="1"/><text x="66.0122%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7622%" y="341" width="0.0798%" height="15" fill="rgb(209,224,45)" fg:x="824" fg:w="1"/><text x="66.0122%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.9218%" y="341" width="0.0798%" height="15" fill="rgb(224,209,51)" fg:x="826" fg:w="1"/><text x="66.1718%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (7 samples, 0.56%)</title><rect x="65.6026%" y="565" width="0.5587%" height="15" fill="rgb(223,17,39)" fg:x="822" fg:w="7"/><text x="65.8526%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.56%)</title><rect x="65.6026%" y="549" width="0.5587%" height="15" fill="rgb(234,204,37)" fg:x="822" fg:w="7"/><text x="65.8526%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="65.8420%" y="533" width="0.3192%" height="15" fill="rgb(236,120,5)" fg:x="825" fg:w="4"/><text x="66.0920%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="65.8420%" y="517" width="0.3192%" height="15" fill="rgb(248,97,27)" fg:x="825" fg:w="4"/><text x="66.0920%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="501" width="0.3192%" height="15" fill="rgb(240,66,17)" fg:x="825" fg:w="4"/><text x="66.0920%" y="511.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="65.8420%" y="485" width="0.3192%" height="15" fill="rgb(210,79,3)" fg:x="825" fg:w="4"/><text x="66.0920%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="469" width="0.3192%" height="15" fill="rgb(214,176,27)" fg:x="825" fg:w="4"/><text x="66.0920%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="453" width="0.3192%" height="15" fill="rgb(235,185,3)" fg:x="825" fg:w="4"/><text x="66.0920%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="437" width="0.3192%" height="15" fill="rgb(227,24,12)" fg:x="825" fg:w="4"/><text x="66.0920%" y="447.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="65.8420%" y="421" width="0.3192%" height="15" fill="rgb(252,169,48)" fg:x="825" fg:w="4"/><text x="66.0920%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="405" width="0.3192%" height="15" fill="rgb(212,65,1)" fg:x="825" fg:w="4"/><text x="66.0920%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="389" width="0.3192%" height="15" fill="rgb(242,39,24)" fg:x="825" fg:w="4"/><text x="66.0920%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="65.8420%" y="373" width="0.3192%" height="15" fill="rgb(249,32,23)" fg:x="825" fg:w="4"/><text x="66.0920%" y="383.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="65.8420%" y="357" width="0.3192%" height="15" fill="rgb(251,195,23)" fg:x="825" fg:w="4"/><text x="66.0920%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.0016%" y="341" width="0.1596%" height="15" fill="rgb(236,174,8)" fg:x="827" fg:w="2"/><text x="66.2516%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="66.0016%" y="325" width="0.1596%" height="15" fill="rgb(220,197,8)" fg:x="827" fg:w="2"/><text x="66.2516%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.0016%" y="309" width="0.1596%" height="15" fill="rgb(240,108,37)" fg:x="827" fg:w="2"/><text x="66.2516%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.0016%" y="293" width="0.1596%" height="15" fill="rgb(232,176,24)" fg:x="827" fg:w="2"/><text x="66.2516%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.0016%" y="277" width="0.1596%" height="15" fill="rgb(243,35,29)" fg:x="827" fg:w="2"/><text x="66.2516%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="66.0016%" y="261" width="0.1596%" height="15" fill="rgb(210,37,18)" fg:x="827" fg:w="2"/><text x="66.2516%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="66.0016%" y="245" width="0.1596%" height="15" fill="rgb(224,184,40)" fg:x="827" fg:w="2"/><text x="66.2516%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="66.0016%" y="229" width="0.1596%" height="15" fill="rgb(236,39,29)" fg:x="827" fg:w="2"/><text x="66.2516%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="66.0016%" y="213" width="0.1596%" height="15" fill="rgb(232,48,39)" fg:x="827" fg:w="2"/><text x="66.2516%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="66.0016%" y="197" width="0.1596%" height="15" fill="rgb(236,34,42)" fg:x="827" fg:w="2"/><text x="66.2516%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="66.0016%" y="181" width="0.1596%" height="15" fill="rgb(243,106,37)" fg:x="827" fg:w="2"/><text x="66.2516%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="66.0016%" y="165" width="0.1596%" height="15" fill="rgb(218,96,6)" fg:x="827" fg:w="2"/><text x="66.2516%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="66.0016%" y="149" width="0.1596%" height="15" fill="rgb(235,130,12)" fg:x="827" fg:w="2"/><text x="66.2516%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="66.0016%" y="133" width="0.1596%" height="15" fill="rgb(231,95,0)" fg:x="827" fg:w="2"/><text x="66.2516%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="66.0016%" y="117" width="0.1596%" height="15" fill="rgb(228,12,23)" fg:x="827" fg:w="2"/><text x="66.2516%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="66.0016%" y="101" width="0.1596%" height="15" fill="rgb(216,12,1)" fg:x="827" fg:w="2"/><text x="66.2516%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="66.0016%" y="85" width="0.1596%" height="15" fill="rgb(219,59,3)" fg:x="827" fg:w="2"/><text x="66.2516%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="66.0016%" y="69" width="0.1596%" height="15" fill="rgb(215,208,46)" fg:x="827" fg:w="2"/><text x="66.2516%" y="79.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="66.0016%" y="53" width="0.1596%" height="15" fill="rgb(254,224,29)" fg:x="827" fg:w="2"/><text x="66.2516%" y="63.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="66.0016%" y="37" width="0.1596%" height="15" fill="rgb(232,14,29)" fg:x="827" fg:w="2"/><text x="66.2516%" y="47.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="66.1612%" y="565" width="0.0798%" height="15" fill="rgb(208,45,52)" fg:x="829" fg:w="1"/><text x="66.4112%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.1612%" y="549" width="0.0798%" height="15" fill="rgb(234,191,28)" fg:x="829" fg:w="1"/><text x="66.4112%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1612%" y="533" width="0.0798%" height="15" fill="rgb(244,67,43)" fg:x="829" fg:w="1"/><text x="66.4112%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="66.2410%" y="565" width="0.0798%" height="15" fill="rgb(236,189,24)" fg:x="830" fg:w="1"/><text x="66.4910%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.2410%" y="549" width="0.0798%" height="15" fill="rgb(239,214,33)" fg:x="830" fg:w="1"/><text x="66.4910%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="66.3208%" y="565" width="0.1596%" height="15" fill="rgb(226,176,41)" fg:x="831" fg:w="2"/><text x="66.5708%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.3208%" y="549" width="0.1596%" height="15" fill="rgb(248,47,8)" fg:x="831" fg:w="2"/><text x="66.5708%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="66.4804%" y="565" width="0.0798%" height="15" fill="rgb(218,81,44)" fg:x="833" fg:w="1"/><text x="66.7304%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="66.4804%" y="549" width="0.0798%" height="15" fill="rgb(213,98,6)" fg:x="833" fg:w="1"/><text x="66.7304%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4804%" y="533" width="0.0798%" height="15" fill="rgb(222,85,22)" fg:x="833" fg:w="1"/><text x="66.7304%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.9593%" y="501" width="0.1596%" height="15" fill="rgb(239,46,39)" fg:x="839" fg:w="2"/><text x="67.2093%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0391%" y="485" width="0.0798%" height="15" fill="rgb(237,12,29)" fg:x="840" fg:w="1"/><text x="67.2891%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0391%" y="469" width="0.0798%" height="15" fill="rgb(214,77,8)" fg:x="840" fg:w="1"/><text x="67.2891%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0391%" y="453" width="0.0798%" height="15" fill="rgb(217,168,37)" fg:x="840" fg:w="1"/><text x="67.2891%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0391%" y="437" width="0.0798%" height="15" fill="rgb(221,217,23)" fg:x="840" fg:w="1"/><text x="67.2891%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0391%" y="421" width="0.0798%" height="15" fill="rgb(243,229,36)" fg:x="840" fg:w="1"/><text x="67.2891%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0391%" y="405" width="0.0798%" height="15" fill="rgb(251,163,40)" fg:x="840" fg:w="1"/><text x="67.2891%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0391%" y="389" width="0.0798%" height="15" fill="rgb(237,222,12)" fg:x="840" fg:w="1"/><text x="67.2891%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0391%" y="373" width="0.0798%" height="15" fill="rgb(248,132,6)" fg:x="840" fg:w="1"/><text x="67.2891%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0391%" y="357" width="0.0798%" height="15" fill="rgb(227,167,50)" fg:x="840" fg:w="1"/><text x="67.2891%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0391%" y="341" width="0.0798%" height="15" fill="rgb(242,84,37)" fg:x="840" fg:w="1"/><text x="67.2891%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="67.0391%" y="325" width="0.0798%" height="15" fill="rgb(212,4,50)" fg:x="840" fg:w="1"/><text x="67.2891%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.0391%" y="309" width="0.0798%" height="15" fill="rgb(230,228,32)" fg:x="840" fg:w="1"/><text x="67.2891%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1189%" y="501" width="0.0798%" height="15" fill="rgb(248,217,23)" fg:x="841" fg:w="1"/><text x="67.3689%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1189%" y="485" width="0.0798%" height="15" fill="rgb(238,197,32)" fg:x="841" fg:w="1"/><text x="67.3689%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1189%" y="469" width="0.0798%" height="15" fill="rgb(236,106,1)" fg:x="841" fg:w="1"/><text x="67.3689%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="66.8795%" y="533" width="0.3990%" height="15" fill="rgb(219,228,13)" fg:x="838" fg:w="5"/><text x="67.1295%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="66.8795%" y="517" width="0.3990%" height="15" fill="rgb(238,30,35)" fg:x="838" fg:w="5"/><text x="67.1295%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1987%" y="501" width="0.0798%" height="15" fill="rgb(236,70,23)" fg:x="842" fg:w="1"/><text x="67.4487%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.4381%" y="357" width="0.0798%" height="15" fill="rgb(249,104,48)" fg:x="845" fg:w="1"/><text x="67.6881%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="67.4381%" y="389" width="0.1596%" height="15" fill="rgb(254,117,50)" fg:x="845" fg:w="2"/><text x="67.6881%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.4381%" y="373" width="0.1596%" height="15" fill="rgb(223,152,4)" fg:x="845" fg:w="2"/><text x="67.6881%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5180%" y="357" width="0.0798%" height="15" fill="rgb(245,6,2)" fg:x="846" fg:w="1"/><text x="67.7680%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5180%" y="341" width="0.0798%" height="15" fill="rgb(249,150,24)" fg:x="846" fg:w="1"/><text x="67.7680%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.5180%" y="325" width="0.0798%" height="15" fill="rgb(228,185,42)" fg:x="846" fg:w="1"/><text x="67.7680%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5180%" y="309" width="0.0798%" height="15" fill="rgb(226,39,33)" fg:x="846" fg:w="1"/><text x="67.7680%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5180%" y="293" width="0.0798%" height="15" fill="rgb(221,166,19)" fg:x="846" fg:w="1"/><text x="67.7680%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="67.5978%" y="373" width="0.0798%" height="15" fill="rgb(209,109,2)" fg:x="847" fg:w="1"/><text x="67.8478%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5978%" y="357" width="0.0798%" height="15" fill="rgb(252,216,26)" fg:x="847" fg:w="1"/><text x="67.8478%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.6776%" y="293" width="0.0798%" height="15" fill="rgb(227,173,36)" fg:x="848" fg:w="1"/><text x="67.9276%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6776%" y="277" width="0.0798%" height="15" fill="rgb(209,90,7)" fg:x="848" fg:w="1"/><text x="67.9276%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="67.4381%" y="421" width="0.3990%" height="15" fill="rgb(250,194,11)" fg:x="845" fg:w="5"/><text x="67.6881%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="67.4381%" y="405" width="0.3990%" height="15" fill="rgb(220,72,50)" fg:x="845" fg:w="5"/><text x="67.6881%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="67.5978%" y="389" width="0.2394%" height="15" fill="rgb(222,106,48)" fg:x="847" fg:w="3"/><text x="67.8478%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="67.6776%" y="373" width="0.1596%" height="15" fill="rgb(216,220,45)" fg:x="848" fg:w="2"/><text x="67.9276%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="67.6776%" y="357" width="0.1596%" height="15" fill="rgb(234,112,18)" fg:x="848" fg:w="2"/><text x="67.9276%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.6776%" y="341" width="0.1596%" height="15" fill="rgb(206,179,9)" fg:x="848" fg:w="2"/><text x="67.9276%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="67.6776%" y="325" width="0.1596%" height="15" fill="rgb(215,115,40)" fg:x="848" fg:w="2"/><text x="67.9276%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.6776%" y="309" width="0.1596%" height="15" fill="rgb(222,69,34)" fg:x="848" fg:w="2"/><text x="67.9276%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.7574%" y="293" width="0.0798%" height="15" fill="rgb(209,161,10)" fg:x="849" fg:w="1"/><text x="68.0074%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.7574%" y="277" width="0.0798%" height="15" fill="rgb(217,6,38)" fg:x="849" fg:w="1"/><text x="68.0074%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="67.9170%" y="357" width="0.1596%" height="15" fill="rgb(229,229,48)" fg:x="851" fg:w="2"/><text x="68.1670%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="67.9170%" y="341" width="0.1596%" height="15" fill="rgb(225,21,28)" fg:x="851" fg:w="2"/><text x="68.1670%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0766%" y="325" width="0.0798%" height="15" fill="rgb(206,33,13)" fg:x="853" fg:w="1"/><text x="68.3266%" y="335.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.0766%" y="309" width="0.0798%" height="15" fill="rgb(242,178,17)" fg:x="853" fg:w="1"/><text x="68.3266%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1564%" y="325" width="0.0798%" height="15" fill="rgb(220,162,5)" fg:x="854" fg:w="1"/><text x="68.4064%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3160%" y="293" width="0.0798%" height="15" fill="rgb(210,33,43)" fg:x="856" fg:w="1"/><text x="68.5660%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3160%" y="277" width="0.0798%" height="15" fill="rgb(216,116,54)" fg:x="856" fg:w="1"/><text x="68.5660%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3160%" y="261" width="0.0798%" height="15" fill="rgb(249,92,24)" fg:x="856" fg:w="1"/><text x="68.5660%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3958%" y="261" width="0.0798%" height="15" fill="rgb(231,189,14)" fg:x="857" fg:w="1"/><text x="68.6458%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3958%" y="245" width="0.0798%" height="15" fill="rgb(230,8,41)" fg:x="857" fg:w="1"/><text x="68.6458%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="68.3958%" y="229" width="0.0798%" height="15" fill="rgb(249,7,27)" fg:x="857" fg:w="1"/><text x="68.6458%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.3958%" y="277" width="0.1596%" height="15" fill="rgb(232,86,5)" fg:x="857" fg:w="2"/><text x="68.6458%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.4757%" y="261" width="0.0798%" height="15" fill="rgb(224,175,18)" fg:x="858" fg:w="1"/><text x="68.7257%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.4757%" y="245" width="0.0798%" height="15" fill="rgb(220,129,12)" fg:x="858" fg:w="1"/><text x="68.7257%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4757%" y="229" width="0.0798%" height="15" fill="rgb(210,19,36)" fg:x="858" fg:w="1"/><text x="68.7257%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.4757%" y="213" width="0.0798%" height="15" fill="rgb(219,96,14)" fg:x="858" fg:w="1"/><text x="68.7257%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4757%" y="197" width="0.0798%" height="15" fill="rgb(249,106,1)" fg:x="858" fg:w="1"/><text x="68.7257%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="68.2362%" y="309" width="0.3990%" height="15" fill="rgb(249,155,20)" fg:x="855" fg:w="5"/><text x="68.4862%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.3958%" y="293" width="0.2394%" height="15" fill="rgb(244,168,9)" fg:x="857" fg:w="3"/><text x="68.6458%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="68.5555%" y="277" width="0.0798%" height="15" fill="rgb(216,23,50)" fg:x="859" fg:w="1"/><text x="68.8055%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.5555%" y="261" width="0.0798%" height="15" fill="rgb(224,219,20)" fg:x="859" fg:w="1"/><text x="68.8055%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5555%" y="245" width="0.0798%" height="15" fill="rgb(222,156,15)" fg:x="859" fg:w="1"/><text x="68.8055%" y="255.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.88%)</title><rect x="67.8372%" y="405" width="0.8779%" height="15" fill="rgb(231,97,17)" fg:x="850" fg:w="11"/><text x="68.0872%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.88%)</title><rect x="67.8372%" y="389" width="0.8779%" height="15" fill="rgb(218,70,48)" fg:x="850" fg:w="11"/><text x="68.0872%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="67.8372%" y="373" width="0.8779%" height="15" fill="rgb(212,196,52)" fg:x="850" fg:w="11"/><text x="68.0872%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="68.0766%" y="357" width="0.6385%" height="15" fill="rgb(243,203,18)" fg:x="853" fg:w="8"/><text x="68.3266%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="68.0766%" y="341" width="0.6385%" height="15" fill="rgb(252,125,41)" fg:x="853" fg:w="8"/><text x="68.3266%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="68.2362%" y="325" width="0.4789%" height="15" fill="rgb(223,180,33)" fg:x="855" fg:w="6"/><text x="68.4862%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6353%" y="309" width="0.0798%" height="15" fill="rgb(254,159,46)" fg:x="860" fg:w="1"/><text x="68.8853%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7151%" y="373" width="0.0798%" height="15" fill="rgb(254,38,10)" fg:x="861" fg:w="1"/><text x="68.9651%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.8747%" y="261" width="0.0798%" height="15" fill="rgb(208,217,32)" fg:x="863" fg:w="1"/><text x="69.1247%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.8747%" y="245" width="0.0798%" height="15" fill="rgb(221,120,13)" fg:x="863" fg:w="1"/><text x="69.1247%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="68.9545%" y="261" width="0.1596%" height="15" fill="rgb(246,54,52)" fg:x="864" fg:w="2"/><text x="69.2045%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.0343%" y="245" width="0.0798%" height="15" fill="rgb(242,34,25)" fg:x="865" fg:w="1"/><text x="69.2843%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.0343%" y="229" width="0.0798%" height="15" fill="rgb(247,209,9)" fg:x="865" fg:w="1"/><text x="69.2843%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.0343%" y="213" width="0.0798%" height="15" fill="rgb(228,71,26)" fg:x="865" fg:w="1"/><text x="69.2843%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.0343%" y="197" width="0.0798%" height="15" fill="rgb(222,145,49)" fg:x="865" fg:w="1"/><text x="69.2843%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0343%" y="181" width="0.0798%" height="15" fill="rgb(218,121,17)" fg:x="865" fg:w="1"/><text x="69.2843%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="68.7949%" y="293" width="0.4789%" height="15" fill="rgb(244,50,7)" fg:x="862" fg:w="6"/><text x="69.0449%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.7949%" y="277" width="0.4789%" height="15" fill="rgb(246,229,37)" fg:x="862" fg:w="6"/><text x="69.0449%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.1141%" y="261" width="0.1596%" height="15" fill="rgb(225,18,5)" fg:x="866" fg:w="2"/><text x="69.3641%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.1141%" y="245" width="0.1596%" height="15" fill="rgb(213,204,8)" fg:x="866" fg:w="2"/><text x="69.3641%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="68.7949%" y="325" width="0.5587%" height="15" fill="rgb(238,103,6)" fg:x="862" fg:w="7"/><text x="69.0449%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="68.7949%" y="309" width="0.5587%" height="15" fill="rgb(222,25,35)" fg:x="862" fg:w="7"/><text x="69.0449%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.2737%" y="293" width="0.0798%" height="15" fill="rgb(213,203,35)" fg:x="868" fg:w="1"/><text x="69.5237%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.3536%" y="325" width="0.0798%" height="15" fill="rgb(221,79,53)" fg:x="869" fg:w="1"/><text x="69.6036%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4334%" y="293" width="0.0798%" height="15" fill="rgb(243,200,35)" fg:x="870" fg:w="1"/><text x="69.6834%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5132%" y="277" width="0.0798%" height="15" fill="rgb(248,60,25)" fg:x="871" fg:w="1"/><text x="69.7632%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="69.4334%" y="325" width="0.2394%" height="15" fill="rgb(227,53,46)" fg:x="870" fg:w="3"/><text x="69.6834%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="69.4334%" y="309" width="0.2394%" height="15" fill="rgb(216,120,32)" fg:x="870" fg:w="3"/><text x="69.6834%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="69.5132%" y="293" width="0.1596%" height="15" fill="rgb(220,134,1)" fg:x="871" fg:w="2"/><text x="69.7632%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="69.5930%" y="277" width="0.0798%" height="15" fill="rgb(237,168,5)" fg:x="872" fg:w="1"/><text x="69.8430%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="68.7949%" y="373" width="1.0375%" height="15" fill="rgb(231,100,33)" fg:x="862" fg:w="13"/><text x="69.0449%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="68.7949%" y="357" width="1.0375%" height="15" fill="rgb(236,177,47)" fg:x="862" fg:w="13"/><text x="69.0449%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (13 samples, 1.04%)</title><rect x="68.7949%" y="341" width="1.0375%" height="15" fill="rgb(235,7,49)" fg:x="862" fg:w="13"/><text x="69.0449%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6728%" y="325" width="0.1596%" height="15" fill="rgb(232,119,22)" fg:x="873" fg:w="2"/><text x="69.9228%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.6728%" y="309" width="0.1596%" height="15" fill="rgb(254,73,53)" fg:x="873" fg:w="2"/><text x="69.9228%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="69.6728%" y="293" width="0.1596%" height="15" fill="rgb(251,35,20)" fg:x="873" fg:w="2"/><text x="69.9228%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6728%" y="277" width="0.1596%" height="15" fill="rgb(241,119,20)" fg:x="873" fg:w="2"/><text x="69.9228%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="69.6728%" y="261" width="0.1596%" height="15" fill="rgb(207,102,14)" fg:x="873" fg:w="2"/><text x="69.9228%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (26 samples, 2.08%)</title><rect x="67.8372%" y="421" width="2.0750%" height="15" fill="rgb(248,201,50)" fg:x="850" fg:w="26"/><text x="68.0872%" y="431.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="68.7151%" y="405" width="1.1971%" height="15" fill="rgb(222,185,44)" fg:x="861" fg:w="15"/><text x="68.9651%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="68.7151%" y="389" width="1.1971%" height="15" fill="rgb(218,107,18)" fg:x="861" fg:w="15"/><text x="68.9651%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8324%" y="373" width="0.0798%" height="15" fill="rgb(237,177,39)" fg:x="875" fg:w="1"/><text x="70.0824%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8324%" y="357" width="0.0798%" height="15" fill="rgb(246,69,6)" fg:x="875" fg:w="1"/><text x="70.0824%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="69.8324%" y="341" width="0.0798%" height="15" fill="rgb(234,208,37)" fg:x="875" fg:w="1"/><text x="70.0824%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.8324%" y="325" width="0.0798%" height="15" fill="rgb(225,4,6)" fg:x="875" fg:w="1"/><text x="70.0824%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.9122%" y="405" width="0.0798%" height="15" fill="rgb(233,45,0)" fg:x="876" fg:w="1"/><text x="70.1622%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9122%" y="389" width="0.0798%" height="15" fill="rgb(226,136,5)" fg:x="876" fg:w="1"/><text x="70.1622%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9920%" y="373" width="0.0798%" height="15" fill="rgb(211,91,47)" fg:x="877" fg:w="1"/><text x="70.2420%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9920%" y="357" width="0.0798%" height="15" fill="rgb(242,88,51)" fg:x="877" fg:w="1"/><text x="70.2420%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9920%" y="341" width="0.0798%" height="15" fill="rgb(230,91,28)" fg:x="877" fg:w="1"/><text x="70.2420%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9920%" y="325" width="0.0798%" height="15" fill="rgb(254,186,29)" fg:x="877" fg:w="1"/><text x="70.2420%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9920%" y="309" width="0.0798%" height="15" fill="rgb(238,6,4)" fg:x="877" fg:w="1"/><text x="70.2420%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9920%" y="293" width="0.0798%" height="15" fill="rgb(221,151,16)" fg:x="877" fg:w="1"/><text x="70.2420%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9920%" y="277" width="0.0798%" height="15" fill="rgb(251,143,52)" fg:x="877" fg:w="1"/><text x="70.2420%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9920%" y="261" width="0.0798%" height="15" fill="rgb(206,90,15)" fg:x="877" fg:w="1"/><text x="70.2420%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.9920%" y="245" width="0.0798%" height="15" fill="rgb(218,35,8)" fg:x="877" fg:w="1"/><text x="70.2420%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.9920%" y="229" width="0.0798%" height="15" fill="rgb(239,215,6)" fg:x="877" fg:w="1"/><text x="70.2420%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.9920%" y="213" width="0.0798%" height="15" fill="rgb(245,116,39)" fg:x="877" fg:w="1"/><text x="70.2420%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.9920%" y="197" width="0.0798%" height="15" fill="rgb(242,65,28)" fg:x="877" fg:w="1"/><text x="70.2420%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9920%" y="181" width="0.0798%" height="15" fill="rgb(252,132,53)" fg:x="877" fg:w="1"/><text x="70.2420%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.9920%" y="389" width="0.1596%" height="15" fill="rgb(224,159,50)" fg:x="877" fg:w="2"/><text x="70.2420%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.0718%" y="373" width="0.0798%" height="15" fill="rgb(224,93,4)" fg:x="878" fg:w="1"/><text x="70.3218%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1516%" y="325" width="0.0798%" height="15" fill="rgb(208,81,34)" fg:x="879" fg:w="1"/><text x="70.4016%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.1516%" y="309" width="0.0798%" height="15" fill="rgb(233,92,54)" fg:x="879" fg:w="1"/><text x="70.4016%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="69.9122%" y="421" width="0.3990%" height="15" fill="rgb(237,21,14)" fg:x="876" fg:w="5"/><text x="70.1622%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="69.9920%" y="405" width="0.3192%" height="15" fill="rgb(249,128,51)" fg:x="877" fg:w="4"/><text x="70.2420%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1516%" y="389" width="0.1596%" height="15" fill="rgb(223,129,24)" fg:x="879" fg:w="2"/><text x="70.4016%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1516%" y="373" width="0.1596%" height="15" fill="rgb(231,168,25)" fg:x="879" fg:w="2"/><text x="70.4016%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.1516%" y="357" width="0.1596%" height="15" fill="rgb(224,39,20)" fg:x="879" fg:w="2"/><text x="70.4016%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1516%" y="341" width="0.1596%" height="15" fill="rgb(225,152,53)" fg:x="879" fg:w="2"/><text x="70.4016%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2314%" y="325" width="0.0798%" height="15" fill="rgb(252,17,24)" fg:x="880" fg:w="1"/><text x="70.4814%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2314%" y="309" width="0.0798%" height="15" fill="rgb(250,114,30)" fg:x="880" fg:w="1"/><text x="70.4814%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (43 samples, 3.43%)</title><rect x="67.3583%" y="453" width="3.4318%" height="15" fill="rgb(229,5,4)" fg:x="844" fg:w="43"/><text x="67.6083%" y="463.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (43 samples, 3.43%)</title><rect x="67.3583%" y="437" width="3.4318%" height="15" fill="rgb(225,176,49)" fg:x="844" fg:w="43"/><text x="67.6083%" y="447.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="70.3113%" y="421" width="0.4789%" height="15" fill="rgb(224,221,49)" fg:x="881" fg:w="6"/><text x="70.5613%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="70.3113%" y="405" width="0.4789%" height="15" fill="rgb(253,169,27)" fg:x="881" fg:w="6"/><text x="70.5613%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="70.3113%" y="389" width="0.4789%" height="15" fill="rgb(211,206,16)" fg:x="881" fg:w="6"/><text x="70.5613%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="70.3113%" y="373" width="0.4789%" height="15" fill="rgb(244,87,35)" fg:x="881" fg:w="6"/><text x="70.5613%" y="383.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="70.3113%" y="357" width="0.4789%" height="15" fill="rgb(246,28,10)" fg:x="881" fg:w="6"/><text x="70.5613%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (45 samples, 3.59%)</title><rect x="67.2785%" y="517" width="3.5914%" height="15" fill="rgb(229,12,44)" fg:x="843" fg:w="45"/><text x="67.5285%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 3.59%)</title><rect x="67.2785%" y="501" width="3.5914%" height="15" fill="rgb(210,145,37)" fg:x="843" fg:w="45"/><text x="67.5285%" y="511.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 3.51%)</title><rect x="67.3583%" y="485" width="3.5116%" height="15" fill="rgb(227,112,52)" fg:x="844" fg:w="44"/><text x="67.6083%" y="495.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (44 samples, 3.51%)</title><rect x="67.3583%" y="469" width="3.5116%" height="15" fill="rgb(238,155,34)" fg:x="844" fg:w="44"/><text x="67.6083%" y="479.50">&lt;en..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="70.7901%" y="453" width="0.0798%" height="15" fill="rgb(239,226,36)" fg:x="887" fg:w="1"/><text x="71.0401%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7901%" y="437" width="0.0798%" height="15" fill="rgb(230,16,23)" fg:x="887" fg:w="1"/><text x="71.0401%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7901%" y="421" width="0.0798%" height="15" fill="rgb(236,171,36)" fg:x="887" fg:w="1"/><text x="71.0401%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7901%" y="405" width="0.0798%" height="15" fill="rgb(221,22,14)" fg:x="887" fg:w="1"/><text x="71.0401%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7901%" y="389" width="0.0798%" height="15" fill="rgb(242,43,11)" fg:x="887" fg:w="1"/><text x="71.0401%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7901%" y="373" width="0.0798%" height="15" fill="rgb(232,69,23)" fg:x="887" fg:w="1"/><text x="71.0401%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7901%" y="357" width="0.0798%" height="15" fill="rgb(216,180,54)" fg:x="887" fg:w="1"/><text x="71.0401%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7901%" y="341" width="0.0798%" height="15" fill="rgb(216,5,24)" fg:x="887" fg:w="1"/><text x="71.0401%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7901%" y="325" width="0.0798%" height="15" fill="rgb(225,89,9)" fg:x="887" fg:w="1"/><text x="71.0401%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7901%" y="309" width="0.0798%" height="15" fill="rgb(243,75,33)" fg:x="887" fg:w="1"/><text x="71.0401%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7901%" y="293" width="0.0798%" height="15" fill="rgb(247,141,45)" fg:x="887" fg:w="1"/><text x="71.0401%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7901%" y="277" width="0.0798%" height="15" fill="rgb(232,177,36)" fg:x="887" fg:w="1"/><text x="71.0401%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7901%" y="261" width="0.0798%" height="15" fill="rgb(219,125,36)" fg:x="887" fg:w="1"/><text x="71.0401%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (46 samples, 3.67%)</title><rect x="67.2785%" y="533" width="3.6712%" height="15" fill="rgb(227,94,9)" fg:x="843" fg:w="46"/><text x="67.5285%" y="543.50">&lt;plu..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.8699%" y="517" width="0.0798%" height="15" fill="rgb(240,34,52)" fg:x="888" fg:w="1"/><text x="71.1199%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="70.9497%" y="533" width="0.2394%" height="15" fill="rgb(216,45,12)" fg:x="889" fg:w="3"/><text x="71.1997%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="70.9497%" y="517" width="0.2394%" height="15" fill="rgb(246,21,19)" fg:x="889" fg:w="3"/><text x="71.1997%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.0295%" y="501" width="0.1596%" height="15" fill="rgb(213,98,42)" fg:x="890" fg:w="2"/><text x="71.2795%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.1891%" y="501" width="0.0798%" height="15" fill="rgb(250,136,47)" fg:x="892" fg:w="1"/><text x="71.4391%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="71.2690%" y="501" width="0.2394%" height="15" fill="rgb(251,124,27)" fg:x="893" fg:w="3"/><text x="71.5190%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="71.2690%" y="485" width="0.2394%" height="15" fill="rgb(229,180,14)" fg:x="893" fg:w="3"/><text x="71.5190%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="71.2690%" y="469" width="0.2394%" height="15" fill="rgb(245,216,25)" fg:x="893" fg:w="3"/><text x="71.5190%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.2690%" y="453" width="0.2394%" height="15" fill="rgb(251,43,5)" fg:x="893" fg:w="3"/><text x="71.5190%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.2690%" y="437" width="0.2394%" height="15" fill="rgb(250,128,24)" fg:x="893" fg:w="3"/><text x="71.5190%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.4286%" y="421" width="0.0798%" height="15" fill="rgb(217,117,27)" fg:x="895" fg:w="1"/><text x="71.6786%" y="431.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (128 samples, 10.22%)</title><rect x="61.4525%" y="597" width="10.2155%" height="15" fill="rgb(245,147,4)" fg:x="770" fg:w="128"/><text x="61.7025%" y="607.50">&lt;plugins_core::..</text></g><g><title>plugins_core::looking::model::new_area_observation (123 samples, 9.82%)</title><rect x="61.8516%" y="581" width="9.8164%" height="15" fill="rgb(242,201,35)" fg:x="775" fg:w="123"/><text x="62.1016%" y="591.50">plugins_core::..</text></g><g><title>kernel::model::entry::Entry::scope (64 samples, 5.11%)</title><rect x="66.5603%" y="565" width="5.1077%" height="15" fill="rgb(218,181,1)" fg:x="834" fg:w="64"/><text x="66.8103%" y="575.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (64 samples, 5.11%)</title><rect x="66.5603%" y="549" width="5.1077%" height="15" fill="rgb(222,6,29)" fg:x="834" fg:w="64"/><text x="66.8103%" y="559.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="71.1891%" y="533" width="0.4789%" height="15" fill="rgb(208,186,3)" fg:x="892" fg:w="6"/><text x="71.4391%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="71.1891%" y="517" width="0.4789%" height="15" fill="rgb(216,36,26)" fg:x="892" fg:w="6"/><text x="71.4391%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.5084%" y="501" width="0.1596%" height="15" fill="rgb(248,201,23)" fg:x="896" fg:w="2"/><text x="71.7584%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.5084%" y="485" width="0.1596%" height="15" fill="rgb(251,170,31)" fg:x="896" fg:w="2"/><text x="71.7584%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="71.5882%" y="469" width="0.0798%" height="15" fill="rgb(207,110,25)" fg:x="897" fg:w="1"/><text x="71.8382%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="71.5882%" y="453" width="0.0798%" height="15" fill="rgb(250,54,15)" fg:x="897" fg:w="1"/><text x="71.8382%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.5882%" y="437" width="0.0798%" height="15" fill="rgb(227,68,33)" fg:x="897" fg:w="1"/><text x="71.8382%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (166 samples, 13.25%)</title><rect x="58.4996%" y="773" width="13.2482%" height="15" fill="rgb(238,34,41)" fg:x="733" fg:w="166"/><text x="58.7496%" y="783.50">&lt;engine::session::Se..</text></g><g><title>kernel::plugins::mw::apply_middleware (166 samples, 13.25%)</title><rect x="58.4996%" y="757" width="13.2482%" height="15" fill="rgb(220,11,15)" fg:x="733" fg:w="166"/><text x="58.7496%" y="767.50">kernel::plugins::mw:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (166 samples, 13.25%)</title><rect x="58.4996%" y="741" width="13.2482%" height="15" fill="rgb(246,111,35)" fg:x="733" fg:w="166"/><text x="58.7496%" y="751.50">kernel::plugins::mw:..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (166 samples, 13.25%)</title><rect x="58.4996%" y="725" width="13.2482%" height="15" fill="rgb(209,88,53)" fg:x="733" fg:w="166"/><text x="58.7496%" y="735.50">&lt;engine::session::Ex..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (131 samples, 10.45%)</title><rect x="61.2929%" y="709" width="10.4549%" height="15" fill="rgb(231,185,47)" fg:x="768" fg:w="131"/><text x="61.5429%" y="719.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (131 samples, 10.45%)</title><rect x="61.2929%" y="693" width="10.4549%" height="15" fill="rgb(233,154,1)" fg:x="768" fg:w="131"/><text x="61.5429%" y="703.50">&lt;plugins_dynlib..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (130 samples, 10.38%)</title><rect x="61.3727%" y="677" width="10.3751%" height="15" fill="rgb(225,15,46)" fg:x="769" fg:w="130"/><text x="61.6227%" y="687.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (130 samples, 10.38%)</title><rect x="61.3727%" y="661" width="10.3751%" height="15" fill="rgb(211,135,41)" fg:x="769" fg:w="130"/><text x="61.6227%" y="671.50">core::ops::func..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (130 samples, 10.38%)</title><rect x="61.3727%" y="645" width="10.3751%" height="15" fill="rgb(208,54,0)" fg:x="769" fg:w="130"/><text x="61.6227%" y="655.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (130 samples, 10.38%)</title><rect x="61.3727%" y="629" width="10.3751%" height="15" fill="rgb(244,136,14)" fg:x="769" fg:w="130"/><text x="61.6227%" y="639.50">core::ops::func..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (130 samples, 10.38%)</title><rect x="61.3727%" y="613" width="10.3751%" height="15" fill="rgb(241,56,14)" fg:x="769" fg:w="130"/><text x="61.6227%" y="623.50">&lt;engine::sessio..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.6680%" y="597" width="0.0798%" height="15" fill="rgb(205,80,24)" fg:x="898" fg:w="1"/><text x="71.9180%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.6680%" y="581" width="0.0798%" height="15" fill="rgb(220,57,4)" fg:x="898" fg:w="1"/><text x="71.9180%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6680%" y="565" width="0.0798%" height="15" fill="rgb(226,193,50)" fg:x="898" fg:w="1"/><text x="71.9180%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.9074%" y="661" width="0.0798%" height="15" fill="rgb(231,168,22)" fg:x="901" fg:w="1"/><text x="72.1574%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.9074%" y="645" width="0.0798%" height="15" fill="rgb(254,215,14)" fg:x="901" fg:w="1"/><text x="72.1574%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.9074%" y="629" width="0.0798%" height="15" fill="rgb(211,115,16)" fg:x="901" fg:w="1"/><text x="72.1574%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9074%" y="613" width="0.0798%" height="15" fill="rgb(236,210,16)" fg:x="901" fg:w="1"/><text x="72.1574%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.9872%" y="661" width="0.0798%" height="15" fill="rgb(221,94,12)" fg:x="902" fg:w="1"/><text x="72.2372%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.9872%" y="645" width="0.0798%" height="15" fill="rgb(235,218,49)" fg:x="902" fg:w="1"/><text x="72.2372%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="71.8276%" y="693" width="0.3990%" height="15" fill="rgb(217,114,14)" fg:x="900" fg:w="5"/><text x="72.0776%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="71.8276%" y="677" width="0.3990%" height="15" fill="rgb(216,145,22)" fg:x="900" fg:w="5"/><text x="72.0776%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.0670%" y="661" width="0.1596%" height="15" fill="rgb(217,112,39)" fg:x="903" fg:w="2"/><text x="72.3170%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.0670%" y="645" width="0.1596%" height="15" fill="rgb(225,85,32)" fg:x="903" fg:w="2"/><text x="72.3170%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.1468%" y="629" width="0.0798%" height="15" fill="rgb(245,209,47)" fg:x="904" fg:w="1"/><text x="72.3968%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1468%" y="613" width="0.0798%" height="15" fill="rgb(218,220,15)" fg:x="904" fg:w="1"/><text x="72.3968%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.1468%" y="597" width="0.0798%" height="15" fill="rgb(222,202,31)" fg:x="904" fg:w="1"/><text x="72.3968%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1468%" y="581" width="0.0798%" height="15" fill="rgb(243,203,4)" fg:x="904" fg:w="1"/><text x="72.3968%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1468%" y="565" width="0.0798%" height="15" fill="rgb(237,92,17)" fg:x="904" fg:w="1"/><text x="72.3968%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2267%" y="629" width="0.0798%" height="15" fill="rgb(231,119,7)" fg:x="905" fg:w="1"/><text x="72.4767%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2267%" y="613" width="0.0798%" height="15" fill="rgb(237,82,41)" fg:x="905" fg:w="1"/><text x="72.4767%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2267%" y="597" width="0.0798%" height="15" fill="rgb(226,81,48)" fg:x="905" fg:w="1"/><text x="72.4767%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.2267%" y="581" width="0.0798%" height="15" fill="rgb(234,70,51)" fg:x="905" fg:w="1"/><text x="72.4767%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.2267%" y="565" width="0.0798%" height="15" fill="rgb(251,86,4)" fg:x="905" fg:w="1"/><text x="72.4767%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.2267%" y="549" width="0.0798%" height="15" fill="rgb(244,144,28)" fg:x="905" fg:w="1"/><text x="72.4767%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2267%" y="533" width="0.0798%" height="15" fill="rgb(232,161,39)" fg:x="905" fg:w="1"/><text x="72.4767%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.2267%" y="517" width="0.0798%" height="15" fill="rgb(247,34,51)" fg:x="905" fg:w="1"/><text x="72.4767%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.2267%" y="501" width="0.0798%" height="15" fill="rgb(225,132,2)" fg:x="905" fg:w="1"/><text x="72.4767%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.2267%" y="485" width="0.0798%" height="15" fill="rgb(209,159,44)" fg:x="905" fg:w="1"/><text x="72.4767%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.2267%" y="469" width="0.0798%" height="15" fill="rgb(251,214,1)" fg:x="905" fg:w="1"/><text x="72.4767%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.2267%" y="453" width="0.0798%" height="15" fill="rgb(247,84,47)" fg:x="905" fg:w="1"/><text x="72.4767%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2267%" y="437" width="0.0798%" height="15" fill="rgb(240,111,43)" fg:x="905" fg:w="1"/><text x="72.4767%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.2267%" y="661" width="0.1596%" height="15" fill="rgb(215,214,35)" fg:x="905" fg:w="2"/><text x="72.4767%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.2267%" y="645" width="0.1596%" height="15" fill="rgb(248,207,23)" fg:x="905" fg:w="2"/><text x="72.4767%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="72.3065%" y="629" width="0.0798%" height="15" fill="rgb(214,186,4)" fg:x="906" fg:w="1"/><text x="72.5565%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="72.3065%" y="613" width="0.0798%" height="15" fill="rgb(220,133,22)" fg:x="906" fg:w="1"/><text x="72.5565%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3863%" y="597" width="0.0798%" height="15" fill="rgb(239,134,19)" fg:x="907" fg:w="1"/><text x="72.6363%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.3863%" y="581" width="0.0798%" height="15" fill="rgb(250,140,9)" fg:x="907" fg:w="1"/><text x="72.6363%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.3863%" y="565" width="0.0798%" height="15" fill="rgb(225,59,14)" fg:x="907" fg:w="1"/><text x="72.6363%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (11 samples, 0.88%)</title><rect x="71.7478%" y="725" width="0.8779%" height="15" fill="rgb(214,152,51)" fg:x="899" fg:w="11"/><text x="71.9978%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="71.8276%" y="709" width="0.7981%" height="15" fill="rgb(251,227,43)" fg:x="900" fg:w="10"/><text x="72.0776%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="72.2267%" y="693" width="0.3990%" height="15" fill="rgb(241,96,17)" fg:x="905" fg:w="5"/><text x="72.4767%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.2267%" y="677" width="0.3990%" height="15" fill="rgb(234,198,43)" fg:x="905" fg:w="5"/><text x="72.4767%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.3863%" y="661" width="0.2394%" height="15" fill="rgb(220,108,29)" fg:x="907" fg:w="3"/><text x="72.6363%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.3863%" y="645" width="0.2394%" height="15" fill="rgb(226,163,33)" fg:x="907" fg:w="3"/><text x="72.6363%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="72.3863%" y="629" width="0.2394%" height="15" fill="rgb(205,194,45)" fg:x="907" fg:w="3"/><text x="72.6363%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.3863%" y="613" width="0.2394%" height="15" fill="rgb(206,143,44)" fg:x="907" fg:w="3"/><text x="72.6363%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.4661%" y="597" width="0.1596%" height="15" fill="rgb(236,136,36)" fg:x="908" fg:w="2"/><text x="72.7161%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.4661%" y="581" width="0.1596%" height="15" fill="rgb(249,172,42)" fg:x="908" fg:w="2"/><text x="72.7161%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.5459%" y="565" width="0.0798%" height="15" fill="rgb(216,139,23)" fg:x="909" fg:w="1"/><text x="72.7959%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.7853%" y="661" width="0.0798%" height="15" fill="rgb(207,166,20)" fg:x="912" fg:w="1"/><text x="73.0353%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.7853%" y="645" width="0.0798%" height="15" fill="rgb(210,209,22)" fg:x="912" fg:w="1"/><text x="73.0353%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="72.9449%" y="613" width="0.0798%" height="15" fill="rgb(232,118,20)" fg:x="914" fg:w="1"/><text x="73.1949%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="72.8651%" y="629" width="0.2394%" height="15" fill="rgb(238,113,42)" fg:x="913" fg:w="3"/><text x="73.1151%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0247%" y="613" width="0.0798%" height="15" fill="rgb(231,42,5)" fg:x="915" fg:w="1"/><text x="73.2747%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1045%" y="629" width="0.0798%" height="15" fill="rgb(243,166,24)" fg:x="916" fg:w="1"/><text x="73.3545%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.1844%" y="597" width="0.0798%" height="15" fill="rgb(237,226,12)" fg:x="917" fg:w="1"/><text x="73.4344%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="73.1844%" y="581" width="0.0798%" height="15" fill="rgb(229,133,24)" fg:x="917" fg:w="1"/><text x="73.4344%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="73.3440%" y="565" width="0.1596%" height="15" fill="rgb(238,33,43)" fg:x="919" fg:w="2"/><text x="73.5940%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="73.3440%" y="549" width="0.1596%" height="15" fill="rgb(227,59,38)" fg:x="919" fg:w="2"/><text x="73.5940%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5036%" y="565" width="0.0798%" height="15" fill="rgb(230,97,0)" fg:x="921" fg:w="1"/><text x="73.7536%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5036%" y="549" width="0.0798%" height="15" fill="rgb(250,173,50)" fg:x="921" fg:w="1"/><text x="73.7536%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="73.2642%" y="581" width="0.4789%" height="15" fill="rgb(240,15,50)" fg:x="918" fg:w="6"/><text x="73.5142%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="73.5834%" y="565" width="0.1596%" height="15" fill="rgb(221,93,22)" fg:x="922" fg:w="2"/><text x="73.8334%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.5834%" y="549" width="0.1596%" height="15" fill="rgb(245,180,53)" fg:x="922" fg:w="2"/><text x="73.8334%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.6632%" y="533" width="0.0798%" height="15" fill="rgb(231,88,51)" fg:x="923" fg:w="1"/><text x="73.9132%" y="543.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="73.6632%" y="517" width="0.0798%" height="15" fill="rgb(240,58,21)" fg:x="923" fg:w="1"/><text x="73.9132%" y="527.50"></text></g><g><title>serde_json::de::from_trait (13 samples, 1.04%)</title><rect x="72.7853%" y="709" width="1.0375%" height="15" fill="rgb(237,21,10)" fg:x="912" fg:w="13"/><text x="73.0353%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.04%)</title><rect x="72.7853%" y="693" width="1.0375%" height="15" fill="rgb(218,43,11)" fg:x="912" fg:w="13"/><text x="73.0353%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="72.7853%" y="677" width="1.0375%" height="15" fill="rgb(218,221,29)" fg:x="912" fg:w="13"/><text x="73.0353%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="72.8651%" y="661" width="0.9577%" height="15" fill="rgb(214,118,42)" fg:x="913" fg:w="12"/><text x="73.1151%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="72.8651%" y="645" width="0.9577%" height="15" fill="rgb(251,200,26)" fg:x="913" fg:w="12"/><text x="73.1151%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="73.1844%" y="629" width="0.6385%" height="15" fill="rgb(237,101,39)" fg:x="917" fg:w="8"/><text x="73.4344%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="73.1844%" y="613" width="0.6385%" height="15" fill="rgb(251,117,11)" fg:x="917" fg:w="8"/><text x="73.4344%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="73.2642%" y="597" width="0.5587%" height="15" fill="rgb(216,223,23)" fg:x="918" fg:w="7"/><text x="73.5142%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="73.7430%" y="581" width="0.0798%" height="15" fill="rgb(251,54,12)" fg:x="924" fg:w="1"/><text x="73.9930%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.7430%" y="565" width="0.0798%" height="15" fill="rgb(254,176,54)" fg:x="924" fg:w="1"/><text x="73.9930%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7430%" y="549" width="0.0798%" height="15" fill="rgb(210,32,8)" fg:x="924" fg:w="1"/><text x="73.9930%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (3 samples, 0.24%)</title><rect x="73.9026%" y="677" width="0.2394%" height="15" fill="rgb(235,52,38)" fg:x="926" fg:w="3"/><text x="74.1526%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.3017%" y="645" width="0.0798%" height="15" fill="rgb(231,4,44)" fg:x="931" fg:w="1"/><text x="74.5517%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.3017%" y="629" width="0.0798%" height="15" fill="rgb(249,2,32)" fg:x="931" fg:w="1"/><text x="74.5517%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.3815%" y="613" width="0.0798%" height="15" fill="rgb(224,65,26)" fg:x="932" fg:w="1"/><text x="74.6315%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.3815%" y="645" width="0.1596%" height="15" fill="rgb(250,73,40)" fg:x="932" fg:w="2"/><text x="74.6315%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="74.3815%" y="629" width="0.1596%" height="15" fill="rgb(253,177,16)" fg:x="932" fg:w="2"/><text x="74.6315%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.4613%" y="613" width="0.0798%" height="15" fill="rgb(217,32,34)" fg:x="933" fg:w="1"/><text x="74.7113%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.5411%" y="597" width="0.0798%" height="15" fill="rgb(212,7,10)" fg:x="934" fg:w="1"/><text x="74.7911%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.5411%" y="581" width="0.0798%" height="15" fill="rgb(245,89,8)" fg:x="934" fg:w="1"/><text x="74.7911%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.5411%" y="565" width="0.0798%" height="15" fill="rgb(237,16,53)" fg:x="934" fg:w="1"/><text x="74.7911%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.5411%" y="629" width="0.1596%" height="15" fill="rgb(250,204,30)" fg:x="934" fg:w="2"/><text x="74.7911%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.5411%" y="613" width="0.1596%" height="15" fill="rgb(208,77,27)" fg:x="934" fg:w="2"/><text x="74.7911%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.6209%" y="597" width="0.0798%" height="15" fill="rgb(250,204,28)" fg:x="935" fg:w="1"/><text x="74.8709%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.6209%" y="581" width="0.0798%" height="15" fill="rgb(244,63,21)" fg:x="935" fg:w="1"/><text x="74.8709%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.6209%" y="565" width="0.0798%" height="15" fill="rgb(236,85,44)" fg:x="935" fg:w="1"/><text x="74.8709%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.6209%" y="549" width="0.0798%" height="15" fill="rgb(215,98,4)" fg:x="935" fg:w="1"/><text x="74.8709%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.6209%" y="533" width="0.0798%" height="15" fill="rgb(235,38,11)" fg:x="935" fg:w="1"/><text x="74.8709%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.6209%" y="517" width="0.0798%" height="15" fill="rgb(254,186,25)" fg:x="935" fg:w="1"/><text x="74.8709%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6209%" y="501" width="0.0798%" height="15" fill="rgb(225,55,31)" fg:x="935" fg:w="1"/><text x="74.8709%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7805%" y="581" width="0.0798%" height="15" fill="rgb(211,15,21)" fg:x="937" fg:w="1"/><text x="75.0305%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8603%" y="565" width="0.0798%" height="15" fill="rgb(215,187,41)" fg:x="938" fg:w="1"/><text x="75.1103%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="74.7007%" y="629" width="0.3192%" height="15" fill="rgb(248,69,32)" fg:x="936" fg:w="4"/><text x="74.9507%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="74.7007%" y="613" width="0.3192%" height="15" fill="rgb(252,102,52)" fg:x="936" fg:w="4"/><text x="74.9507%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="74.7805%" y="597" width="0.2394%" height="15" fill="rgb(253,140,32)" fg:x="937" fg:w="3"/><text x="75.0305%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="74.8603%" y="581" width="0.1596%" height="15" fill="rgb(216,56,42)" fg:x="938" fg:w="2"/><text x="75.1103%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.9401%" y="565" width="0.0798%" height="15" fill="rgb(216,184,14)" fg:x="939" fg:w="1"/><text x="75.1901%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0200%" y="597" width="0.0798%" height="15" fill="rgb(237,187,27)" fg:x="940" fg:w="1"/><text x="75.2700%" y="607.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="75.0200%" y="581" width="0.0798%" height="15" fill="rgb(219,65,3)" fg:x="940" fg:w="1"/><text x="75.2700%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.0998%" y="565" width="0.0798%" height="15" fill="rgb(245,83,25)" fg:x="941" fg:w="1"/><text x="75.3498%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.0998%" y="549" width="0.0798%" height="15" fill="rgb(214,205,45)" fg:x="941" fg:w="1"/><text x="75.3498%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="74.1421%" y="677" width="1.1173%" height="15" fill="rgb(241,20,18)" fg:x="929" fg:w="14"/><text x="74.3921%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="74.2219%" y="661" width="1.0375%" height="15" fill="rgb(232,163,23)" fg:x="930" fg:w="13"/><text x="74.4719%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="74.5411%" y="645" width="0.7183%" height="15" fill="rgb(214,5,46)" fg:x="934" fg:w="9"/><text x="74.7911%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.0200%" y="629" width="0.2394%" height="15" fill="rgb(229,78,17)" fg:x="940" fg:w="3"/><text x="75.2700%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.0200%" y="613" width="0.2394%" height="15" fill="rgb(248,89,10)" fg:x="940" fg:w="3"/><text x="75.2700%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="75.0998%" y="597" width="0.1596%" height="15" fill="rgb(248,54,15)" fg:x="941" fg:w="2"/><text x="75.3498%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.0998%" y="581" width="0.1596%" height="15" fill="rgb(223,116,6)" fg:x="941" fg:w="2"/><text x="75.3498%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1796%" y="565" width="0.0798%" height="15" fill="rgb(205,125,38)" fg:x="942" fg:w="1"/><text x="75.4296%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.1796%" y="549" width="0.0798%" height="15" fill="rgb(251,78,38)" fg:x="942" fg:w="1"/><text x="75.4296%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.1796%" y="533" width="0.0798%" height="15" fill="rgb(253,78,28)" fg:x="942" fg:w="1"/><text x="75.4296%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1796%" y="517" width="0.0798%" height="15" fill="rgb(209,120,3)" fg:x="942" fg:w="1"/><text x="75.4296%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1796%" y="501" width="0.0798%" height="15" fill="rgb(238,229,9)" fg:x="942" fg:w="1"/><text x="75.4296%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (35 samples, 2.79%)</title><rect x="72.6257%" y="725" width="2.7933%" height="15" fill="rgb(253,159,18)" fg:x="910" fg:w="35"/><text x="72.8757%" y="735.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (20 samples, 1.60%)</title><rect x="73.8228%" y="709" width="1.5962%" height="15" fill="rgb(244,42,34)" fg:x="925" fg:w="20"/><text x="74.0728%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (20 samples, 1.60%)</title><rect x="73.8228%" y="693" width="1.5962%" height="15" fill="rgb(224,8,7)" fg:x="925" fg:w="20"/><text x="74.0728%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2594%" y="677" width="0.1596%" height="15" fill="rgb(210,201,45)" fg:x="943" fg:w="2"/><text x="75.5094%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2594%" y="661" width="0.1596%" height="15" fill="rgb(252,185,21)" fg:x="943" fg:w="2"/><text x="75.5094%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4190%" y="661" width="0.0798%" height="15" fill="rgb(223,131,1)" fg:x="945" fg:w="1"/><text x="75.6690%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4190%" y="645" width="0.0798%" height="15" fill="rgb(245,141,16)" fg:x="945" fg:w="1"/><text x="75.6690%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4190%" y="629" width="0.0798%" height="15" fill="rgb(229,55,45)" fg:x="945" fg:w="1"/><text x="75.6690%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.4190%" y="613" width="0.0798%" height="15" fill="rgb(208,92,15)" fg:x="945" fg:w="1"/><text x="75.6690%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.4190%" y="597" width="0.0798%" height="15" fill="rgb(234,185,47)" fg:x="945" fg:w="1"/><text x="75.6690%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.4190%" y="581" width="0.0798%" height="15" fill="rgb(253,104,50)" fg:x="945" fg:w="1"/><text x="75.6690%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.4190%" y="565" width="0.0798%" height="15" fill="rgb(205,70,7)" fg:x="945" fg:w="1"/><text x="75.6690%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.4190%" y="549" width="0.0798%" height="15" fill="rgb(240,178,43)" fg:x="945" fg:w="1"/><text x="75.6690%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.4190%" y="693" width="0.1596%" height="15" fill="rgb(214,112,2)" fg:x="945" fg:w="2"/><text x="75.6690%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.4190%" y="677" width="0.1596%" height="15" fill="rgb(206,46,17)" fg:x="945" fg:w="2"/><text x="75.6690%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4988%" y="661" width="0.0798%" height="15" fill="rgb(225,220,16)" fg:x="946" fg:w="1"/><text x="75.7488%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (49 samples, 3.91%)</title><rect x="71.7478%" y="773" width="3.9106%" height="15" fill="rgb(238,65,40)" fg:x="899" fg:w="49"/><text x="71.9978%" y="783.50">&lt;eng..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (49 samples, 3.91%)</title><rect x="71.7478%" y="757" width="3.9106%" height="15" fill="rgb(230,151,21)" fg:x="899" fg:w="49"/><text x="71.9978%" y="767.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (49 samples, 3.91%)</title><rect x="71.7478%" y="741" width="3.9106%" height="15" fill="rgb(218,58,49)" fg:x="899" fg:w="49"/><text x="71.9978%" y="751.50">engi..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.4190%" y="725" width="0.2394%" height="15" fill="rgb(219,179,14)" fg:x="945" fg:w="3"/><text x="75.6690%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.4190%" y="709" width="0.2394%" height="15" fill="rgb(223,72,1)" fg:x="945" fg:w="3"/><text x="75.6690%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5786%" y="693" width="0.0798%" height="15" fill="rgb(238,126,10)" fg:x="947" fg:w="1"/><text x="75.8286%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5786%" y="677" width="0.0798%" height="15" fill="rgb(224,206,38)" fg:x="947" fg:w="1"/><text x="75.8286%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.5786%" y="661" width="0.0798%" height="15" fill="rgb(212,201,54)" fg:x="947" fg:w="1"/><text x="75.8286%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5786%" y="645" width="0.0798%" height="15" fill="rgb(218,154,48)" fg:x="947" fg:w="1"/><text x="75.8286%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5786%" y="629" width="0.0798%" height="15" fill="rgb(232,93,24)" fg:x="947" fg:w="1"/><text x="75.8286%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5786%" y="613" width="0.0798%" height="15" fill="rgb(245,30,21)" fg:x="947" fg:w="1"/><text x="75.8286%" y="623.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="75.6584%" y="773" width="0.1596%" height="15" fill="rgb(242,148,29)" fg:x="948" fg:w="2"/><text x="75.9084%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="75.6584%" y="757" width="0.1596%" height="15" fill="rgb(244,153,54)" fg:x="948" fg:w="2"/><text x="75.9084%" y="767.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="75.7382%" y="741" width="0.0798%" height="15" fill="rgb(252,87,22)" fg:x="949" fg:w="1"/><text x="75.9882%" y="751.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="75.7382%" y="725" width="0.0798%" height="15" fill="rgb(210,51,29)" fg:x="949" fg:w="1"/><text x="75.9882%" y="735.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="75.8180%" y="773" width="0.0798%" height="15" fill="rgb(242,136,47)" fg:x="950" fg:w="1"/><text x="76.0680%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8180%" y="757" width="0.0798%" height="15" fill="rgb(238,68,4)" fg:x="950" fg:w="1"/><text x="76.0680%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.9777%" y="757" width="0.0798%" height="15" fill="rgb(242,161,30)" fg:x="952" fg:w="1"/><text x="76.2277%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.9777%" y="741" width="0.0798%" height="15" fill="rgb(218,58,44)" fg:x="952" fg:w="1"/><text x="76.2277%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="76.0575%" y="725" width="0.0798%" height="15" fill="rgb(252,125,32)" fg:x="953" fg:w="1"/><text x="76.3075%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (956 samples, 76.30%)</title><rect x="0.0000%" y="853" width="76.2969%" height="15" fill="rgb(219,178,0)" fg:x="0" fg:w="956"/><text x="0.2500%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (956 samples, 76.30%)</title><rect x="0.0000%" y="837" width="76.2969%" height="15" fill="rgb(213,152,7)" fg:x="0" fg:w="956"/><text x="0.2500%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (956 samples, 76.30%)</title><rect x="0.0000%" y="821" width="76.2969%" height="15" fill="rgb(249,109,34)" fg:x="0" fg:w="956"/><text x="0.2500%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (223 samples, 17.80%)</title><rect x="58.4996%" y="805" width="17.7973%" height="15" fill="rgb(232,96,21)" fg:x="733" fg:w="223"/><text x="58.7496%" y="815.50">engine::session::Session::ev..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (223 samples, 17.80%)</title><rect x="58.4996%" y="789" width="17.7973%" height="15" fill="rgb(228,27,39)" fg:x="733" fg:w="223"/><text x="58.7496%" y="799.50">engine::session::Session::ev..</text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="75.8978%" y="773" width="0.3990%" height="15" fill="rgb(211,182,52)" fg:x="951" fg:w="5"/><text x="76.1478%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="76.0575%" y="757" width="0.2394%" height="15" fill="rgb(234,178,38)" fg:x="953" fg:w="3"/><text x="76.3075%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.0575%" y="741" width="0.2394%" height="15" fill="rgb(221,111,3)" fg:x="953" fg:w="3"/><text x="76.3075%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1373%" y="725" width="0.1596%" height="15" fill="rgb(228,175,21)" fg:x="954" fg:w="2"/><text x="76.3873%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1373%" y="709" width="0.1596%" height="15" fill="rgb(228,174,43)" fg:x="954" fg:w="2"/><text x="76.3873%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2171%" y="693" width="0.0798%" height="15" fill="rgb(211,191,0)" fg:x="955" fg:w="1"/><text x="76.4671%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="76.2969%" y="789" width="0.0798%" height="15" fill="rgb(253,117,3)" fg:x="956" fg:w="1"/><text x="76.5469%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.2969%" y="773" width="0.0798%" height="15" fill="rgb(241,127,19)" fg:x="956" fg:w="1"/><text x="76.5469%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.2969%" y="757" width="0.0798%" height="15" fill="rgb(218,103,12)" fg:x="956" fg:w="1"/><text x="76.5469%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3767%" y="757" width="0.0798%" height="15" fill="rgb(236,214,43)" fg:x="957" fg:w="1"/><text x="76.6267%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4565%" y="693" width="0.0798%" height="15" fill="rgb(244,144,19)" fg:x="958" fg:w="1"/><text x="76.7065%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4565%" y="677" width="0.0798%" height="15" fill="rgb(246,188,10)" fg:x="958" fg:w="1"/><text x="76.7065%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.5363%" y="677" width="0.0798%" height="15" fill="rgb(212,193,33)" fg:x="959" fg:w="1"/><text x="76.7863%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="76.4565%" y="709" width="0.3192%" height="15" fill="rgb(241,51,29)" fg:x="958" fg:w="4"/><text x="76.7065%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.5363%" y="693" width="0.2394%" height="15" fill="rgb(211,58,19)" fg:x="959" fg:w="3"/><text x="76.7863%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.6161%" y="677" width="0.1596%" height="15" fill="rgb(229,111,26)" fg:x="960" fg:w="2"/><text x="76.8661%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6959%" y="661" width="0.0798%" height="15" fill="rgb(213,115,40)" fg:x="961" fg:w="1"/><text x="76.9459%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="76.4565%" y="725" width="0.3990%" height="15" fill="rgb(209,56,44)" fg:x="958" fg:w="5"/><text x="76.7065%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7757%" y="709" width="0.0798%" height="15" fill="rgb(230,108,32)" fg:x="962" fg:w="1"/><text x="77.0257%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="76.2969%" y="805" width="0.6385%" height="15" fill="rgb(216,165,31)" fg:x="956" fg:w="8"/><text x="76.5469%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (7 samples, 0.56%)</title><rect x="76.3767%" y="789" width="0.5587%" height="15" fill="rgb(218,122,21)" fg:x="957" fg:w="7"/><text x="76.6267%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="76.3767%" y="773" width="0.5587%" height="15" fill="rgb(223,224,47)" fg:x="957" fg:w="7"/><text x="76.6267%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="76.4565%" y="757" width="0.4789%" height="15" fill="rgb(238,102,44)" fg:x="958" fg:w="6"/><text x="76.7065%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="76.4565%" y="741" width="0.4789%" height="15" fill="rgb(236,46,40)" fg:x="958" fg:w="6"/><text x="76.7065%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8555%" y="725" width="0.0798%" height="15" fill="rgb(247,202,50)" fg:x="963" fg:w="1"/><text x="77.1055%" y="735.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="76.9354%" y="709" width="0.0798%" height="15" fill="rgb(209,99,20)" fg:x="964" fg:w="1"/><text x="77.1854%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9354%" y="693" width="0.0798%" height="15" fill="rgb(252,27,34)" fg:x="964" fg:w="1"/><text x="77.1854%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="76.9354%" y="741" width="0.5587%" height="15" fill="rgb(215,206,23)" fg:x="964" fg:w="7"/><text x="77.1854%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="76.9354%" y="725" width="0.5587%" height="15" fill="rgb(212,135,36)" fg:x="964" fg:w="7"/><text x="77.1854%" y="735.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.48%)</title><rect x="77.0152%" y="709" width="0.4789%" height="15" fill="rgb(240,189,1)" fg:x="965" fg:w="6"/><text x="77.2652%" y="719.50"></text></g><g><title>dlopen (6 samples, 0.48%)</title><rect x="77.0152%" y="693" width="0.4789%" height="15" fill="rgb(242,56,20)" fg:x="965" fg:w="6"/><text x="77.2652%" y="703.50"></text></g><g><title>_dl_catch_error (6 samples, 0.48%)</title><rect x="77.0152%" y="677" width="0.4789%" height="15" fill="rgb(247,132,33)" fg:x="965" fg:w="6"/><text x="77.2652%" y="687.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="77.0152%" y="661" width="0.4789%" height="15" fill="rgb(208,149,11)" fg:x="965" fg:w="6"/><text x="77.2652%" y="671.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="77.0152%" y="645" width="0.4789%" height="15" fill="rgb(211,33,11)" fg:x="965" fg:w="6"/><text x="77.2652%" y="655.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="77.0152%" y="629" width="0.4789%" height="15" fill="rgb(221,29,38)" fg:x="965" fg:w="6"/><text x="77.2652%" y="639.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.64%)</title><rect x="76.9354%" y="757" width="0.6385%" height="15" fill="rgb(206,182,49)" fg:x="964" fg:w="8"/><text x="77.1854%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="77.4940%" y="741" width="0.0798%" height="15" fill="rgb(216,140,1)" fg:x="971" fg:w="1"/><text x="77.7440%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="77.4940%" y="725" width="0.0798%" height="15" fill="rgb(232,57,40)" fg:x="971" fg:w="1"/><text x="77.7440%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.4940%" y="709" width="0.0798%" height="15" fill="rgb(224,186,18)" fg:x="971" fg:w="1"/><text x="77.7440%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.4940%" y="693" width="0.0798%" height="15" fill="rgb(215,121,11)" fg:x="971" fg:w="1"/><text x="77.7440%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.4940%" y="677" width="0.0798%" height="15" fill="rgb(245,147,10)" fg:x="971" fg:w="1"/><text x="77.7440%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.4940%" y="661" width="0.0798%" height="15" fill="rgb(238,153,13)" fg:x="971" fg:w="1"/><text x="77.7440%" y="671.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="77.5738%" y="757" width="0.0798%" height="15" fill="rgb(233,108,0)" fg:x="972" fg:w="1"/><text x="77.8238%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="77.5738%" y="741" width="0.0798%" height="15" fill="rgb(212,157,17)" fg:x="972" fg:w="1"/><text x="77.8238%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.80%)</title><rect x="76.9354%" y="805" width="0.7981%" height="15" fill="rgb(225,213,38)" fg:x="964" fg:w="10"/><text x="77.1854%" y="815.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (10 samples, 0.80%)</title><rect x="76.9354%" y="789" width="0.7981%" height="15" fill="rgb(248,16,11)" fg:x="964" fg:w="10"/><text x="77.1854%" y="799.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.80%)</title><rect x="76.9354%" y="773" width="0.7981%" height="15" fill="rgb(241,33,4)" fg:x="964" fg:w="10"/><text x="77.1854%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="77.6536%" y="757" width="0.0798%" height="15" fill="rgb(222,26,43)" fg:x="973" fg:w="1"/><text x="77.9036%" y="767.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="77.6536%" y="741" width="0.0798%" height="15" fill="rgb(243,29,36)" fg:x="973" fg:w="1"/><text x="77.9036%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8132%" y="789" width="0.0798%" height="15" fill="rgb(241,9,27)" fg:x="975" fg:w="1"/><text x="78.0632%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8132%" y="773" width="0.0798%" height="15" fill="rgb(205,117,26)" fg:x="975" fg:w="1"/><text x="78.0632%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="77.8931%" y="789" width="0.0798%" height="15" fill="rgb(209,80,39)" fg:x="976" fg:w="1"/><text x="78.1431%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="77.8931%" y="773" width="0.0798%" height="15" fill="rgb(239,155,6)" fg:x="976" fg:w="1"/><text x="78.1431%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="77.8931%" y="757" width="0.0798%" height="15" fill="rgb(212,104,12)" fg:x="976" fg:w="1"/><text x="78.1431%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="77.8931%" y="741" width="0.0798%" height="15" fill="rgb(234,204,3)" fg:x="976" fg:w="1"/><text x="78.1431%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8931%" y="725" width="0.0798%" height="15" fill="rgb(251,218,7)" fg:x="976" fg:w="1"/><text x="78.1431%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.9729%" y="741" width="0.0798%" height="15" fill="rgb(221,81,32)" fg:x="977" fg:w="1"/><text x="78.2229%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.9729%" y="725" width="0.0798%" height="15" fill="rgb(214,152,26)" fg:x="977" fg:w="1"/><text x="78.2229%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.9729%" y="709" width="0.0798%" height="15" fill="rgb(223,22,3)" fg:x="977" fg:w="1"/><text x="78.2229%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.9729%" y="693" width="0.0798%" height="15" fill="rgb(207,174,7)" fg:x="977" fg:w="1"/><text x="78.2229%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.0527%" y="741" width="0.0798%" height="15" fill="rgb(224,19,52)" fg:x="978" fg:w="1"/><text x="78.3027%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.0527%" y="725" width="0.0798%" height="15" fill="rgb(228,24,14)" fg:x="978" fg:w="1"/><text x="78.3027%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.0527%" y="709" width="0.0798%" height="15" fill="rgb(230,153,43)" fg:x="978" fg:w="1"/><text x="78.3027%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0527%" y="693" width="0.0798%" height="15" fill="rgb(231,106,12)" fg:x="978" fg:w="1"/><text x="78.3027%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0527%" y="677" width="0.0798%" height="15" fill="rgb(215,92,2)" fg:x="978" fg:w="1"/><text x="78.3027%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0527%" y="661" width="0.0798%" height="15" fill="rgb(249,143,25)" fg:x="978" fg:w="1"/><text x="78.3027%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0527%" y="645" width="0.0798%" height="15" fill="rgb(252,7,35)" fg:x="978" fg:w="1"/><text x="78.3027%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0527%" y="629" width="0.0798%" height="15" fill="rgb(216,69,40)" fg:x="978" fg:w="1"/><text x="78.3027%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0527%" y="613" width="0.0798%" height="15" fill="rgb(240,36,33)" fg:x="978" fg:w="1"/><text x="78.3027%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0527%" y="597" width="0.0798%" height="15" fill="rgb(231,128,14)" fg:x="978" fg:w="1"/><text x="78.3027%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.0527%" y="581" width="0.0798%" height="15" fill="rgb(245,143,14)" fg:x="978" fg:w="1"/><text x="78.3027%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0527%" y="565" width="0.0798%" height="15" fill="rgb(222,130,28)" fg:x="978" fg:w="1"/><text x="78.3027%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0527%" y="549" width="0.0798%" height="15" fill="rgb(212,10,48)" fg:x="978" fg:w="1"/><text x="78.3027%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0527%" y="533" width="0.0798%" height="15" fill="rgb(254,118,45)" fg:x="978" fg:w="1"/><text x="78.3027%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0527%" y="517" width="0.0798%" height="15" fill="rgb(228,6,45)" fg:x="978" fg:w="1"/><text x="78.3027%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1325%" y="709" width="0.0798%" height="15" fill="rgb(241,18,35)" fg:x="979" fg:w="1"/><text x="78.3825%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1325%" y="693" width="0.0798%" height="15" fill="rgb(227,214,53)" fg:x="979" fg:w="1"/><text x="78.3825%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.1325%" y="677" width="0.0798%" height="15" fill="rgb(224,107,51)" fg:x="979" fg:w="1"/><text x="78.3825%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.1325%" y="661" width="0.0798%" height="15" fill="rgb(248,60,28)" fg:x="979" fg:w="1"/><text x="78.3825%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.1325%" y="645" width="0.0798%" height="15" fill="rgb(249,101,23)" fg:x="979" fg:w="1"/><text x="78.3825%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1325%" y="629" width="0.0798%" height="15" fill="rgb(228,51,19)" fg:x="979" fg:w="1"/><text x="78.3825%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1325%" y="613" width="0.0798%" height="15" fill="rgb(213,20,6)" fg:x="979" fg:w="1"/><text x="78.3825%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.1325%" y="597" width="0.0798%" height="15" fill="rgb(212,124,10)" fg:x="979" fg:w="1"/><text x="78.3825%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.1325%" y="581" width="0.0798%" height="15" fill="rgb(248,3,40)" fg:x="979" fg:w="1"/><text x="78.3825%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.1325%" y="565" width="0.0798%" height="15" fill="rgb(223,178,23)" fg:x="979" fg:w="1"/><text x="78.3825%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.1325%" y="549" width="0.0798%" height="15" fill="rgb(240,132,45)" fg:x="979" fg:w="1"/><text x="78.3825%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1325%" y="533" width="0.0798%" height="15" fill="rgb(245,164,36)" fg:x="979" fg:w="1"/><text x="78.3825%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.2123%" y="693" width="0.0798%" height="15" fill="rgb(231,188,53)" fg:x="980" fg:w="1"/><text x="78.4623%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2123%" y="677" width="0.0798%" height="15" fill="rgb(237,198,39)" fg:x="980" fg:w="1"/><text x="78.4623%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.2921%" y="677" width="0.0798%" height="15" fill="rgb(223,120,35)" fg:x="981" fg:w="1"/><text x="78.5421%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2921%" y="661" width="0.0798%" height="15" fill="rgb(253,107,49)" fg:x="981" fg:w="1"/><text x="78.5421%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.2921%" y="645" width="0.0798%" height="15" fill="rgb(216,44,31)" fg:x="981" fg:w="1"/><text x="78.5421%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.2921%" y="629" width="0.0798%" height="15" fill="rgb(253,87,21)" fg:x="981" fg:w="1"/><text x="78.5421%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.3719%" y="629" width="0.0798%" height="15" fill="rgb(226,18,2)" fg:x="982" fg:w="1"/><text x="78.6219%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.3719%" y="613" width="0.0798%" height="15" fill="rgb(216,8,46)" fg:x="982" fg:w="1"/><text x="78.6219%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.3719%" y="597" width="0.0798%" height="15" fill="rgb(226,140,39)" fg:x="982" fg:w="1"/><text x="78.6219%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="78.3719%" y="581" width="0.0798%" height="15" fill="rgb(221,194,54)" fg:x="982" fg:w="1"/><text x="78.6219%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="78.3719%" y="661" width="0.2394%" height="15" fill="rgb(213,92,11)" fg:x="982" fg:w="3"/><text x="78.6219%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.3719%" y="645" width="0.2394%" height="15" fill="rgb(229,162,46)" fg:x="982" fg:w="3"/><text x="78.6219%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.4517%" y="629" width="0.1596%" height="15" fill="rgb(214,111,36)" fg:x="983" fg:w="2"/><text x="78.7017%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.4517%" y="613" width="0.1596%" height="15" fill="rgb(207,6,21)" fg:x="983" fg:w="2"/><text x="78.7017%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.5315%" y="597" width="0.0798%" height="15" fill="rgb(213,127,38)" fg:x="984" fg:w="1"/><text x="78.7815%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.6911%" y="629" width="0.0798%" height="15" fill="rgb(238,118,32)" fg:x="986" fg:w="1"/><text x="78.9411%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.6911%" y="613" width="0.0798%" height="15" fill="rgb(240,139,39)" fg:x="986" fg:w="1"/><text x="78.9411%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.6911%" y="597" width="0.0798%" height="15" fill="rgb(235,10,37)" fg:x="986" fg:w="1"/><text x="78.9411%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.6911%" y="581" width="0.0798%" height="15" fill="rgb(249,171,38)" fg:x="986" fg:w="1"/><text x="78.9411%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7709%" y="629" width="0.0798%" height="15" fill="rgb(242,144,32)" fg:x="987" fg:w="1"/><text x="79.0209%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="78.3719%" y="677" width="0.5587%" height="15" fill="rgb(217,117,21)" fg:x="982" fg:w="7"/><text x="78.6219%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="78.6113%" y="661" width="0.3192%" height="15" fill="rgb(249,87,1)" fg:x="985" fg:w="4"/><text x="78.8613%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="78.6113%" y="645" width="0.3192%" height="15" fill="rgb(248,196,48)" fg:x="985" fg:w="4"/><text x="78.8613%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8508%" y="629" width="0.0798%" height="15" fill="rgb(251,206,33)" fg:x="988" fg:w="1"/><text x="79.1008%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="78.2123%" y="709" width="0.7981%" height="15" fill="rgb(232,141,28)" fg:x="980" fg:w="10"/><text x="78.4623%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="78.2921%" y="693" width="0.7183%" height="15" fill="rgb(209,167,14)" fg:x="981" fg:w="9"/><text x="78.5421%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.9306%" y="677" width="0.0798%" height="15" fill="rgb(225,11,50)" fg:x="989" fg:w="1"/><text x="79.1806%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.9306%" y="661" width="0.0798%" height="15" fill="rgb(209,50,20)" fg:x="989" fg:w="1"/><text x="79.1806%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9306%" y="645" width="0.0798%" height="15" fill="rgb(212,17,46)" fg:x="989" fg:w="1"/><text x="79.1806%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.9306%" y="629" width="0.0798%" height="15" fill="rgb(216,101,39)" fg:x="989" fg:w="1"/><text x="79.1806%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.9306%" y="613" width="0.0798%" height="15" fill="rgb(212,228,48)" fg:x="989" fg:w="1"/><text x="79.1806%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.9306%" y="597" width="0.0798%" height="15" fill="rgb(250,6,50)" fg:x="989" fg:w="1"/><text x="79.1806%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.0104%" y="677" width="0.0798%" height="15" fill="rgb(250,160,48)" fg:x="990" fg:w="1"/><text x="79.2604%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0104%" y="661" width="0.0798%" height="15" fill="rgb(244,216,33)" fg:x="990" fg:w="1"/><text x="79.2604%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.1700%" y="661" width="0.1596%" height="15" fill="rgb(207,157,5)" fg:x="992" fg:w="2"/><text x="79.4200%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="79.0104%" y="709" width="0.3990%" height="15" fill="rgb(228,199,8)" fg:x="990" fg:w="5"/><text x="79.2604%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="79.0104%" y="693" width="0.3990%" height="15" fill="rgb(227,80,20)" fg:x="990" fg:w="5"/><text x="79.2604%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.0902%" y="677" width="0.3192%" height="15" fill="rgb(222,9,33)" fg:x="991" fg:w="4"/><text x="79.3402%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3296%" y="661" width="0.0798%" height="15" fill="rgb(239,44,28)" fg:x="994" fg:w="1"/><text x="79.5796%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3296%" y="645" width="0.0798%" height="15" fill="rgb(249,187,43)" fg:x="994" fg:w="1"/><text x="79.5796%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.3296%" y="629" width="0.0798%" height="15" fill="rgb(216,141,28)" fg:x="994" fg:w="1"/><text x="79.5796%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.4094%" y="661" width="0.0798%" height="15" fill="rgb(230,154,53)" fg:x="995" fg:w="1"/><text x="79.6594%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.4094%" y="645" width="0.0798%" height="15" fill="rgb(227,82,4)" fg:x="995" fg:w="1"/><text x="79.6594%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.4094%" y="629" width="0.0798%" height="15" fill="rgb(220,107,16)" fg:x="995" fg:w="1"/><text x="79.6594%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.7287%" y="581" width="0.0798%" height="15" fill="rgb(207,187,2)" fg:x="999" fg:w="1"/><text x="79.9787%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.7287%" y="565" width="0.0798%" height="15" fill="rgb(210,162,52)" fg:x="999" fg:w="1"/><text x="79.9787%" y="575.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.08%)</title><rect x="77.9729%" y="789" width="2.0750%" height="15" fill="rgb(217,216,49)" fg:x="977" fg:w="26"/><text x="78.2229%" y="799.50">e..</text></g><g><title>engine::session::state::State::close (26 samples, 2.08%)</title><rect x="77.9729%" y="773" width="2.0750%" height="15" fill="rgb(218,146,49)" fg:x="977" fg:w="26"/><text x="78.2229%" y="783.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 2.08%)</title><rect x="77.9729%" y="757" width="2.0750%" height="15" fill="rgb(216,55,40)" fg:x="977" fg:w="26"/><text x="78.2229%" y="767.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (24 samples, 1.92%)</title><rect x="78.1325%" y="741" width="1.9154%" height="15" fill="rgb(208,196,21)" fg:x="979" fg:w="24"/><text x="78.3825%" y="751.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (24 samples, 1.92%)</title><rect x="78.1325%" y="725" width="1.9154%" height="15" fill="rgb(242,117,42)" fg:x="979" fg:w="24"/><text x="78.3825%" y="735.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="79.4094%" y="709" width="0.6385%" height="15" fill="rgb(210,11,23)" fg:x="995" fg:w="8"/><text x="79.6594%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="79.4094%" y="693" width="0.6385%" height="15" fill="rgb(217,110,2)" fg:x="995" fg:w="8"/><text x="79.6594%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="79.4094%" y="677" width="0.6385%" height="15" fill="rgb(229,77,54)" fg:x="995" fg:w="8"/><text x="79.6594%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="79.4892%" y="661" width="0.5587%" height="15" fill="rgb(218,53,16)" fg:x="996" fg:w="7"/><text x="79.7392%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="79.4892%" y="645" width="0.5587%" height="15" fill="rgb(215,38,13)" fg:x="996" fg:w="7"/><text x="79.7392%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="79.4892%" y="629" width="0.5587%" height="15" fill="rgb(235,42,18)" fg:x="996" fg:w="7"/><text x="79.7392%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="79.4892%" y="613" width="0.5587%" height="15" fill="rgb(219,66,54)" fg:x="996" fg:w="7"/><text x="79.7392%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="79.7287%" y="597" width="0.3192%" height="15" fill="rgb(222,205,4)" fg:x="999" fg:w="4"/><text x="79.9787%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8085%" y="581" width="0.2394%" height="15" fill="rgb(227,213,46)" fg:x="1000" fg:w="3"/><text x="80.0585%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.8883%" y="565" width="0.1596%" height="15" fill="rgb(250,145,42)" fg:x="1001" fg:w="2"/><text x="80.1383%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.0479%" y="757" width="0.0798%" height="15" fill="rgb(219,15,2)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="80.0479%" y="741" width="0.0798%" height="15" fill="rgb(231,181,52)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="80.0479%" y="725" width="0.0798%" height="15" fill="rgb(235,1,42)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0479%" y="709" width="0.0798%" height="15" fill="rgb(249,88,27)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0479%" y="693" width="0.0798%" height="15" fill="rgb(235,145,16)" fg:x="1003" fg:w="1"/><text x="80.2979%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.1277%" y="757" width="0.0798%" height="15" fill="rgb(237,114,19)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.1277%" y="741" width="0.0798%" height="15" fill="rgb(238,51,50)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.1277%" y="725" width="0.0798%" height="15" fill="rgb(205,194,25)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1277%" y="709" width="0.0798%" height="15" fill="rgb(215,203,17)" fg:x="1004" fg:w="1"/><text x="80.3777%" y="719.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2075%" y="725" width="0.0798%" height="15" fill="rgb(233,112,49)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2075%" y="709" width="0.0798%" height="15" fill="rgb(241,130,26)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2075%" y="693" width="0.0798%" height="15" fill="rgb(252,223,19)" fg:x="1005" fg:w="1"/><text x="80.4575%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="80.2873%" y="725" width="0.0798%" height="15" fill="rgb(211,95,25)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.2873%" y="709" width="0.0798%" height="15" fill="rgb(251,182,27)" fg:x="1006" fg:w="1"/><text x="80.5373%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="80.2075%" y="757" width="0.2394%" height="15" fill="rgb(238,24,4)" fg:x="1005" fg:w="3"/><text x="80.4575%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="80.2075%" y="741" width="0.2394%" height="15" fill="rgb(224,220,25)" fg:x="1005" fg:w="3"/><text x="80.4575%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3671%" y="725" width="0.0798%" height="15" fill="rgb(239,133,26)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3671%" y="709" width="0.0798%" height="15" fill="rgb(211,94,48)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="80.0479%" y="773" width="0.5587%" height="15" fill="rgb(239,87,6)" fg:x="1003" fg:w="7"/><text x="80.2979%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="80.4469%" y="757" width="0.1596%" height="15" fill="rgb(227,62,0)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="80.4469%" y="741" width="0.1596%" height="15" fill="rgb(211,226,4)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.4469%" y="725" width="0.1596%" height="15" fill="rgb(253,38,52)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.4469%" y="709" width="0.1596%" height="15" fill="rgb(229,126,40)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="80.4469%" y="693" width="0.1596%" height="15" fill="rgb(229,165,44)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.4469%" y="677" width="0.1596%" height="15" fill="rgb(247,95,47)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.6065%" y="725" width="0.0798%" height="15" fill="rgb(216,140,30)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6065%" y="709" width="0.0798%" height="15" fill="rgb(246,214,8)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="80.6065%" y="757" width="0.1596%" height="15" fill="rgb(227,224,15)" fg:x="1010" fg:w="2"/><text x="80.8565%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="80.6065%" y="741" width="0.1596%" height="15" fill="rgb(233,175,4)" fg:x="1010" fg:w="2"/><text x="80.8565%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.6864%" y="725" width="0.0798%" height="15" fill="rgb(221,66,45)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.6864%" y="709" width="0.0798%" height="15" fill="rgb(221,178,18)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.6864%" y="693" width="0.0798%" height="15" fill="rgb(213,81,29)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.6864%" y="677" width="0.0798%" height="15" fill="rgb(220,89,49)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.7662%" y="709" width="0.0798%" height="15" fill="rgb(227,60,33)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.7662%" y="693" width="0.0798%" height="15" fill="rgb(205,113,12)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.7662%" y="677" width="0.0798%" height="15" fill="rgb(211,32,1)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7662%" y="661" width="0.0798%" height="15" fill="rgb(246,2,12)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.7662%" y="645" width="0.0798%" height="15" fill="rgb(243,37,27)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7662%" y="629" width="0.0798%" height="15" fill="rgb(248,211,31)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.7662%" y="613" width="0.0798%" height="15" fill="rgb(242,146,47)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7662%" y="597" width="0.0798%" height="15" fill="rgb(206,70,20)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="80.7662%" y="741" width="0.2394%" height="15" fill="rgb(215,10,51)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="80.7662%" y="725" width="0.2394%" height="15" fill="rgb(243,178,53)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="80.8460%" y="709" width="0.1596%" height="15" fill="rgb(233,221,20)" fg:x="1013" fg:w="2"/><text x="81.0960%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.8460%" y="693" width="0.1596%" height="15" fill="rgb(218,95,35)" fg:x="1013" fg:w="2"/><text x="81.0960%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9258%" y="677" width="0.0798%" height="15" fill="rgb(229,13,5)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9258%" y="661" width="0.0798%" height="15" fill="rgb(252,164,30)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9258%" y="645" width="0.0798%" height="15" fill="rgb(232,68,36)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9258%" y="629" width="0.0798%" height="15" fill="rgb(219,59,54)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="80.7662%" y="757" width="0.3192%" height="15" fill="rgb(250,92,33)" fg:x="1012" fg:w="4"/><text x="81.0162%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="81.0056%" y="741" width="0.0798%" height="15" fill="rgb(229,162,54)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.0056%" y="725" width="0.0798%" height="15" fill="rgb(244,114,52)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="81.0056%" y="709" width="0.0798%" height="15" fill="rgb(212,211,43)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.0056%" y="693" width="0.0798%" height="15" fill="rgb(226,147,8)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.0056%" y="677" width="0.0798%" height="15" fill="rgb(226,23,13)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="80.0479%" y="789" width="1.1173%" height="15" fill="rgb(240,63,4)" fg:x="1003" fg:w="14"/><text x="80.2979%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="80.6065%" y="773" width="0.5587%" height="15" fill="rgb(221,1,32)" fg:x="1010" fg:w="7"/><text x="80.8565%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="81.0854%" y="757" width="0.0798%" height="15" fill="rgb(242,117,10)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.0854%" y="741" width="0.0798%" height="15" fill="rgb(249,172,44)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0854%" y="725" width="0.0798%" height="15" fill="rgb(244,46,45)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0854%" y="709" width="0.0798%" height="15" fill="rgb(206,43,17)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="81.1652%" y="757" width="0.0798%" height="15" fill="rgb(239,218,39)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.1652%" y="741" width="0.0798%" height="15" fill="rgb(208,169,54)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.1652%" y="725" width="0.0798%" height="15" fill="rgb(247,25,42)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="709" width="0.0798%" height="15" fill="rgb(226,23,31)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.1652%" y="693" width="0.0798%" height="15" fill="rgb(247,16,28)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="677" width="0.0798%" height="15" fill="rgb(231,147,38)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="661" width="0.0798%" height="15" fill="rgb(253,81,48)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="645" width="0.0798%" height="15" fill="rgb(249,222,43)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.1652%" y="629" width="0.0798%" height="15" fill="rgb(221,3,27)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="613" width="0.0798%" height="15" fill="rgb(228,180,5)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="597" width="0.0798%" height="15" fill="rgb(227,131,42)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="581" width="0.0798%" height="15" fill="rgb(212,3,39)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.1652%" y="565" width="0.0798%" height="15" fill="rgb(226,45,5)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.1652%" y="549" width="0.0798%" height="15" fill="rgb(215,167,45)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1652%" y="533" width="0.0798%" height="15" fill="rgb(250,218,53)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1652%" y="517" width="0.0798%" height="15" fill="rgb(207,140,0)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="81.1652%" y="501" width="0.0798%" height="15" fill="rgb(238,133,51)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="81.1652%" y="485" width="0.0798%" height="15" fill="rgb(218,203,53)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="81.1652%" y="469" width="0.0798%" height="15" fill="rgb(226,184,25)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="81.1652%" y="453" width="0.0798%" height="15" fill="rgb(231,121,21)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.1652%" y="437" width="0.0798%" height="15" fill="rgb(251,14,34)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.1652%" y="421" width="0.0798%" height="15" fill="rgb(249,193,11)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1652%" y="405" width="0.0798%" height="15" fill="rgb(220,172,37)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="81.1652%" y="389" width="0.0798%" height="15" fill="rgb(231,229,43)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="81.1652%" y="373" width="0.0798%" height="15" fill="rgb(250,161,5)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.2450%" y="757" width="0.0798%" height="15" fill="rgb(218,225,18)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2450%" y="741" width="0.0798%" height="15" fill="rgb(245,45,42)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2450%" y="725" width="0.0798%" height="15" fill="rgb(211,115,1)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2450%" y="709" width="0.0798%" height="15" fill="rgb(248,133,52)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.3248%" y="757" width="0.0798%" height="15" fill="rgb(238,100,21)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.3248%" y="741" width="0.0798%" height="15" fill="rgb(247,144,11)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="751.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3248%" y="725" width="0.0798%" height="15" fill="rgb(206,164,16)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="735.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="81.1652%" y="789" width="0.3192%" height="15" fill="rgb(222,34,3)" fg:x="1017" fg:w="4"/><text x="81.4152%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.1652%" y="773" width="0.3192%" height="15" fill="rgb(248,82,4)" fg:x="1017" fg:w="4"/><text x="81.4152%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.4046%" y="757" width="0.0798%" height="15" fill="rgb(228,81,46)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.4046%" y="741" width="0.0798%" height="15" fill="rgb(227,67,47)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.4046%" y="725" width="0.0798%" height="15" fill="rgb(215,93,53)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4046%" y="709" width="0.0798%" height="15" fill="rgb(248,194,39)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.4046%" y="693" width="0.0798%" height="15" fill="rgb(215,5,19)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.4844%" y="757" width="0.0798%" height="15" fill="rgb(226,215,51)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="767.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="81.4844%" y="741" width="0.0798%" height="15" fill="rgb(225,56,26)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4844%" y="725" width="0.0798%" height="15" fill="rgb(222,75,29)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5642%" y="725" width="0.0798%" height="15" fill="rgb(236,139,6)" fg:x="1022" fg:w="1"/><text x="81.8142%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="81.4844%" y="789" width="0.2394%" height="15" fill="rgb(223,137,36)" fg:x="1021" fg:w="3"/><text x="81.7344%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="81.4844%" y="773" width="0.2394%" height="15" fill="rgb(226,99,2)" fg:x="1021" fg:w="3"/><text x="81.7344%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="81.5642%" y="757" width="0.1596%" height="15" fill="rgb(206,133,23)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="81.5642%" y="741" width="0.1596%" height="15" fill="rgb(243,173,15)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6441%" y="725" width="0.0798%" height="15" fill="rgb(228,69,28)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6441%" y="709" width="0.0798%" height="15" fill="rgb(212,51,22)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.6441%" y="693" width="0.0798%" height="15" fill="rgb(227,113,0)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6441%" y="677" width="0.0798%" height="15" fill="rgb(252,84,27)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.6441%" y="661" width="0.0798%" height="15" fill="rgb(223,145,39)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.7239%" y="773" width="0.0798%" height="15" fill="rgb(239,219,30)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.7239%" y="757" width="0.0798%" height="15" fill="rgb(224,196,39)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7239%" y="741" width="0.0798%" height="15" fill="rgb(205,35,43)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7239%" y="725" width="0.0798%" height="15" fill="rgb(228,201,21)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="81.8037%" y="693" width="0.1596%" height="15" fill="rgb(237,118,16)" fg:x="1025" fg:w="2"/><text x="82.0537%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.8835%" y="677" width="0.0798%" height="15" fill="rgb(241,17,19)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.9633%" y="693" width="0.0798%" height="15" fill="rgb(214,10,25)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.9633%" y="677" width="0.0798%" height="15" fill="rgb(238,37,29)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9633%" y="661" width="0.0798%" height="15" fill="rgb(253,83,25)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.8037%" y="709" width="0.3192%" height="15" fill="rgb(234,192,12)" fg:x="1025" fg:w="4"/><text x="82.0537%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.0431%" y="693" width="0.0798%" height="15" fill="rgb(241,216,45)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.0431%" y="677" width="0.0798%" height="15" fill="rgb(242,22,33)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.0431%" y="661" width="0.0798%" height="15" fill="rgb(231,105,49)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0431%" y="645" width="0.0798%" height="15" fill="rgb(218,204,15)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0431%" y="629" width="0.0798%" height="15" fill="rgb(235,138,41)" fg:x="1028" fg:w="1"/><text x="82.2931%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.1229%" y="693" width="0.0798%" height="15" fill="rgb(246,0,9)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.1229%" y="677" width="0.0798%" height="15" fill="rgb(210,74,4)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.1229%" y="661" width="0.0798%" height="15" fill="rgb(250,60,41)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1229%" y="645" width="0.0798%" height="15" fill="rgb(220,115,12)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="81.8037%" y="725" width="0.4789%" height="15" fill="rgb(237,100,13)" fg:x="1025" fg:w="6"/><text x="82.0537%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="82.1229%" y="709" width="0.1596%" height="15" fill="rgb(213,55,26)" fg:x="1029" fg:w="2"/><text x="82.3729%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.2027%" y="693" width="0.0798%" height="15" fill="rgb(216,17,4)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2027%" y="677" width="0.0798%" height="15" fill="rgb(220,153,47)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2027%" y="661" width="0.0798%" height="15" fill="rgb(215,131,9)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2027%" y="645" width="0.0798%" height="15" fill="rgb(233,46,42)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2027%" y="629" width="0.0798%" height="15" fill="rgb(226,86,7)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2027%" y="613" width="0.0798%" height="15" fill="rgb(239,226,21)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="623.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.2825%" y="693" width="0.0798%" height="15" fill="rgb(244,137,22)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2825%" y="677" width="0.0798%" height="15" fill="rgb(211,139,35)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="81.8037%" y="773" width="0.6385%" height="15" fill="rgb(214,62,50)" fg:x="1025" fg:w="8"/><text x="82.0537%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="81.8037%" y="757" width="0.6385%" height="15" fill="rgb(212,113,44)" fg:x="1025" fg:w="8"/><text x="82.0537%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="81.8037%" y="741" width="0.6385%" height="15" fill="rgb(226,150,43)" fg:x="1025" fg:w="8"/><text x="82.0537%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="82.2825%" y="725" width="0.1596%" height="15" fill="rgb(250,71,37)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="82.2825%" y="709" width="0.1596%" height="15" fill="rgb(219,76,19)" fg:x="1031" fg:w="2"/><text x="82.5325%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3623%" y="693" width="0.0798%" height="15" fill="rgb(250,39,11)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.3623%" y="677" width="0.0798%" height="15" fill="rgb(230,64,31)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="82.4421%" y="741" width="0.0798%" height="15" fill="rgb(208,222,23)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="751.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="82.4421%" y="725" width="0.0798%" height="15" fill="rgb(227,125,18)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="82.4421%" y="709" width="0.0798%" height="15" fill="rgb(234,210,9)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="82.4421%" y="693" width="0.0798%" height="15" fill="rgb(217,127,24)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="82.4421%" y="677" width="0.0798%" height="15" fill="rgb(239,141,48)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="687.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="82.4421%" y="661" width="0.0798%" height="15" fill="rgb(227,109,8)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="82.4421%" y="645" width="0.0798%" height="15" fill="rgb(235,184,23)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="655.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="82.4421%" y="629" width="0.0798%" height="15" fill="rgb(227,226,48)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.5219%" y="645" width="0.0798%" height="15" fill="rgb(206,150,11)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.5219%" y="629" width="0.0798%" height="15" fill="rgb(254,2,33)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.5219%" y="613" width="0.0798%" height="15" fill="rgb(243,160,20)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.5219%" y="597" width="0.0798%" height="15" fill="rgb(218,208,30)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.5219%" y="661" width="0.1596%" height="15" fill="rgb(224,120,49)" fg:x="1034" fg:w="2"/><text x="82.7719%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.6018%" y="645" width="0.0798%" height="15" fill="rgb(246,12,2)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.6018%" y="629" width="0.0798%" height="15" fill="rgb(236,117,3)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.6018%" y="613" width="0.0798%" height="15" fill="rgb(216,128,52)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="82.8412%" y="645" width="0.1596%" height="15" fill="rgb(246,145,19)" fg:x="1038" fg:w="2"/><text x="83.0912%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9210%" y="629" width="0.0798%" height="15" fill="rgb(222,11,46)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9210%" y="613" width="0.0798%" height="15" fill="rgb(245,82,36)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9210%" y="597" width="0.0798%" height="15" fill="rgb(250,73,51)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.0008%" y="629" width="0.1596%" height="15" fill="rgb(221,189,23)" fg:x="1040" fg:w="2"/><text x="83.2508%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.0008%" y="613" width="0.1596%" height="15" fill="rgb(210,33,7)" fg:x="1040" fg:w="2"/><text x="83.2508%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2402%" y="597" width="0.0798%" height="15" fill="rgb(210,107,22)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2402%" y="581" width="0.0798%" height="15" fill="rgb(222,116,37)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2402%" y="565" width="0.0798%" height="15" fill="rgb(254,17,48)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.3200%" y="581" width="0.0798%" height="15" fill="rgb(224,36,32)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.3200%" y="565" width="0.0798%" height="15" fill="rgb(232,90,46)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.3200%" y="549" width="0.0798%" height="15" fill="rgb(241,66,40)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3200%" y="533" width="0.0798%" height="15" fill="rgb(249,184,29)" fg:x="1044" fg:w="1"/><text x="83.5700%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.2402%" y="613" width="0.2394%" height="15" fill="rgb(231,181,1)" fg:x="1043" fg:w="3"/><text x="83.4902%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.3200%" y="597" width="0.1596%" height="15" fill="rgb(224,94,2)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.3998%" y="581" width="0.0798%" height="15" fill="rgb(229,170,15)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.3998%" y="565" width="0.0798%" height="15" fill="rgb(240,127,35)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.1604%" y="629" width="0.3990%" height="15" fill="rgb(248,196,34)" fg:x="1042" fg:w="5"/><text x="83.4104%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4796%" y="613" width="0.0798%" height="15" fill="rgb(236,137,7)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4796%" y="597" width="0.0798%" height="15" fill="rgb(235,127,16)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.4796%" y="581" width="0.0798%" height="15" fill="rgb(250,192,54)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="83.0008%" y="645" width="0.7183%" height="15" fill="rgb(218,98,20)" fg:x="1040" fg:w="9"/><text x="83.2508%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.5595%" y="629" width="0.1596%" height="15" fill="rgb(230,176,47)" fg:x="1047" fg:w="2"/><text x="83.8095%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.6393%" y="613" width="0.0798%" height="15" fill="rgb(244,2,33)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6393%" y="597" width="0.0798%" height="15" fill="rgb(231,100,17)" fg:x="1048" fg:w="1"/><text x="83.8893%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.36%)</title><rect x="82.5219%" y="677" width="1.3567%" height="15" fill="rgb(245,23,12)" fg:x="1034" fg:w="17"/><text x="82.7719%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="82.6816%" y="661" width="1.1971%" height="15" fill="rgb(249,55,22)" fg:x="1036" fg:w="15"/><text x="82.9316%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.7191%" y="645" width="0.1596%" height="15" fill="rgb(207,134,9)" fg:x="1049" fg:w="2"/><text x="83.9691%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.7989%" y="629" width="0.0798%" height="15" fill="rgb(218,134,0)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.7989%" y="613" width="0.0798%" height="15" fill="rgb(213,212,33)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7989%" y="597" width="0.0798%" height="15" fill="rgb(252,106,18)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.7989%" y="581" width="0.0798%" height="15" fill="rgb(208,126,42)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.7989%" y="565" width="0.0798%" height="15" fill="rgb(246,175,29)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9585%" y="613" width="0.0798%" height="15" fill="rgb(215,13,50)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.0383%" y="613" width="0.0798%" height="15" fill="rgb(216,172,15)" fg:x="1053" fg:w="1"/><text x="84.2883%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.1181%" y="597" width="0.0798%" height="15" fill="rgb(212,103,13)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.1181%" y="581" width="0.0798%" height="15" fill="rgb(231,171,36)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1181%" y="565" width="0.0798%" height="15" fill="rgb(250,123,20)" fg:x="1054" fg:w="1"/><text x="84.3681%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="83.8787%" y="677" width="0.3990%" height="15" fill="rgb(212,53,50)" fg:x="1051" fg:w="5"/><text x="84.1287%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="83.8787%" y="661" width="0.3990%" height="15" fill="rgb(243,54,12)" fg:x="1051" fg:w="5"/><text x="84.1287%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="83.8787%" y="645" width="0.3990%" height="15" fill="rgb(234,101,34)" fg:x="1051" fg:w="5"/><text x="84.1287%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.9585%" y="629" width="0.3192%" height="15" fill="rgb(254,67,22)" fg:x="1052" fg:w="4"/><text x="84.2085%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.1181%" y="613" width="0.1596%" height="15" fill="rgb(250,35,47)" fg:x="1054" fg:w="2"/><text x="84.3681%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.1979%" y="597" width="0.0798%" height="15" fill="rgb(226,126,38)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1979%" y="581" width="0.0798%" height="15" fill="rgb(216,138,53)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="84.2777%" y="661" width="0.0798%" height="15" fill="rgb(246,199,43)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.2777%" y="645" width="0.0798%" height="15" fill="rgb(232,125,11)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4374%" y="629" width="0.0798%" height="15" fill="rgb(218,219,45)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="84.6768%" y="581" width="0.1596%" height="15" fill="rgb(216,102,54)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.6768%" y="565" width="0.1596%" height="15" fill="rgb(250,228,7)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.6768%" y="549" width="0.1596%" height="15" fill="rgb(226,125,25)" fg:x="1061" fg:w="2"/><text x="84.9268%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7566%" y="533" width="0.0798%" height="15" fill="rgb(224,165,27)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7566%" y="517" width="0.0798%" height="15" fill="rgb(233,86,3)" fg:x="1062" fg:w="1"/><text x="85.0066%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9162%" y="533" width="0.0798%" height="15" fill="rgb(228,116,20)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9162%" y="517" width="0.0798%" height="15" fill="rgb(209,192,17)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9162%" y="501" width="0.0798%" height="15" fill="rgb(224,88,34)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="84.6768%" y="597" width="0.4789%" height="15" fill="rgb(233,38,6)" fg:x="1061" fg:w="6"/><text x="84.9268%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.8364%" y="581" width="0.3192%" height="15" fill="rgb(212,59,30)" fg:x="1063" fg:w="4"/><text x="85.0864%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.9162%" y="565" width="0.2394%" height="15" fill="rgb(213,80,3)" fg:x="1064" fg:w="3"/><text x="85.1662%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.9162%" y="549" width="0.2394%" height="15" fill="rgb(251,178,7)" fg:x="1064" fg:w="3"/><text x="85.1662%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.9960%" y="533" width="0.1596%" height="15" fill="rgb(213,154,26)" fg:x="1065" fg:w="2"/><text x="85.2460%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="84.5970%" y="613" width="0.6385%" height="15" fill="rgb(238,165,49)" fg:x="1060" fg:w="8"/><text x="84.8470%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.1556%" y="597" width="0.0798%" height="15" fill="rgb(248,91,46)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1556%" y="581" width="0.0798%" height="15" fill="rgb(244,21,52)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="591.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.87%)</title><rect x="82.4421%" y="773" width="2.8731%" height="15" fill="rgb(247,122,20)" fg:x="1033" fg:w="36"/><text x="82.6921%" y="783.50">en..</text></g><g><title>engine::session::Session::save_changes (36 samples, 2.87%)</title><rect x="82.4421%" y="757" width="2.8731%" height="15" fill="rgb(218,27,9)" fg:x="1033" fg:w="36"/><text x="82.6921%" y="767.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.79%)</title><rect x="82.5219%" y="741" width="2.7933%" height="15" fill="rgb(246,7,6)" fg:x="1034" fg:w="35"/><text x="82.7719%" y="751.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.79%)</title><rect x="82.5219%" y="725" width="2.7933%" height="15" fill="rgb(227,135,54)" fg:x="1034" fg:w="35"/><text x="82.7719%" y="735.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.79%)</title><rect x="82.5219%" y="709" width="2.7933%" height="15" fill="rgb(247,14,11)" fg:x="1034" fg:w="35"/><text x="82.7719%" y="719.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (35 samples, 2.79%)</title><rect x="82.5219%" y="693" width="2.7933%" height="15" fill="rgb(206,149,34)" fg:x="1034" fg:w="35"/><text x="82.7719%" y="703.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.04%)</title><rect x="84.2777%" y="677" width="1.0375%" height="15" fill="rgb(227,228,4)" fg:x="1056" fg:w="13"/><text x="84.5277%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="84.3575%" y="661" width="0.9577%" height="15" fill="rgb(238,218,28)" fg:x="1057" fg:w="12"/><text x="84.6075%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="84.3575%" y="645" width="0.9577%" height="15" fill="rgb(252,86,40)" fg:x="1057" fg:w="12"/><text x="84.6075%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="84.5172%" y="629" width="0.7981%" height="15" fill="rgb(251,225,11)" fg:x="1059" fg:w="10"/><text x="84.7672%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2354%" y="613" width="0.0798%" height="15" fill="rgb(206,46,49)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="85.3152%" y="773" width="0.1596%" height="15" fill="rgb(245,128,24)" fg:x="1069" fg:w="2"/><text x="85.5652%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.3152%" y="757" width="0.1596%" height="15" fill="rgb(219,177,34)" fg:x="1069" fg:w="2"/><text x="85.5652%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.3152%" y="741" width="0.1596%" height="15" fill="rgb(218,60,48)" fg:x="1069" fg:w="2"/><text x="85.5652%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.3152%" y="725" width="0.1596%" height="15" fill="rgb(221,11,5)" fg:x="1069" fg:w="2"/><text x="85.5652%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3951%" y="709" width="0.0798%" height="15" fill="rgb(220,148,13)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="693" width="0.0798%" height="15" fill="rgb(210,16,3)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3951%" y="677" width="0.0798%" height="15" fill="rgb(236,80,2)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3951%" y="661" width="0.0798%" height="15" fill="rgb(239,129,19)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="85.3951%" y="645" width="0.0798%" height="15" fill="rgb(220,106,35)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.4749%" y="741" width="0.0798%" height="15" fill="rgb(252,139,45)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.4749%" y="725" width="0.0798%" height="15" fill="rgb(229,8,36)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.4749%" y="709" width="0.0798%" height="15" fill="rgb(230,126,33)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.4749%" y="693" width="0.0798%" height="15" fill="rgb(239,140,21)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.4749%" y="677" width="0.0798%" height="15" fill="rgb(254,104,9)" fg:x="1071" fg:w="1"/><text x="85.7249%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="85.5547%" y="693" width="0.0798%" height="15" fill="rgb(239,52,14)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5547%" y="677" width="0.0798%" height="15" fill="rgb(208,227,44)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5547%" y="661" width="0.0798%" height="15" fill="rgb(246,18,19)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5547%" y="645" width="0.0798%" height="15" fill="rgb(235,228,25)" fg:x="1072" fg:w="1"/><text x="85.8047%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="85.4749%" y="757" width="0.2394%" height="15" fill="rgb(240,156,20)" fg:x="1071" fg:w="3"/><text x="85.7249%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="85.5547%" y="741" width="0.1596%" height="15" fill="rgb(224,8,20)" fg:x="1072" fg:w="2"/><text x="85.8047%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="85.5547%" y="725" width="0.1596%" height="15" fill="rgb(214,12,52)" fg:x="1072" fg:w="2"/><text x="85.8047%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.5547%" y="709" width="0.1596%" height="15" fill="rgb(211,220,47)" fg:x="1072" fg:w="2"/><text x="85.8047%" y="719.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.6345%" y="693" width="0.0798%" height="15" fill="rgb(250,173,5)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.6345%" y="677" width="0.0798%" height="15" fill="rgb(250,125,52)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6345%" y="661" width="0.0798%" height="15" fill="rgb(209,133,18)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.7143%" y="677" width="0.0798%" height="15" fill="rgb(216,173,22)" fg:x="1074" fg:w="1"/><text x="85.9643%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.7143%" y="709" width="0.1596%" height="15" fill="rgb(205,3,22)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.7143%" y="693" width="0.1596%" height="15" fill="rgb(248,22,20)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7941%" y="677" width="0.0798%" height="15" fill="rgb(233,6,29)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7941%" y="661" width="0.0798%" height="15" fill="rgb(240,22,54)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="85.7143%" y="741" width="0.2394%" height="15" fill="rgb(231,133,32)" fg:x="1074" fg:w="3"/><text x="85.9643%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="85.7143%" y="725" width="0.2394%" height="15" fill="rgb(248,193,4)" fg:x="1074" fg:w="3"/><text x="85.9643%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.8739%" y="709" width="0.0798%" height="15" fill="rgb(211,178,46)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8739%" y="693" width="0.0798%" height="15" fill="rgb(224,5,42)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="677" width="0.0798%" height="15" fill="rgb(239,176,25)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="661" width="0.0798%" height="15" fill="rgb(245,187,50)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8739%" y="645" width="0.0798%" height="15" fill="rgb(248,24,15)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.9537%" y="741" width="0.0798%" height="15" fill="rgb(205,166,13)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9537%" y="725" width="0.0798%" height="15" fill="rgb(208,114,23)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9537%" y="709" width="0.0798%" height="15" fill="rgb(239,127,18)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.9537%" y="693" width="0.0798%" height="15" fill="rgb(219,154,28)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.9537%" y="677" width="0.0798%" height="15" fill="rgb(225,157,23)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.9537%" y="661" width="0.0798%" height="15" fill="rgb(219,8,6)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9537%" y="645" width="0.0798%" height="15" fill="rgb(212,47,6)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0335%" y="613" width="0.0798%" height="15" fill="rgb(224,190,4)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0335%" y="597" width="0.0798%" height="15" fill="rgb(239,183,29)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0335%" y="581" width="0.0798%" height="15" fill="rgb(213,57,7)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0335%" y="565" width="0.0798%" height="15" fill="rgb(216,148,1)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0335%" y="549" width="0.0798%" height="15" fill="rgb(236,182,29)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0335%" y="533" width="0.0798%" height="15" fill="rgb(244,120,48)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0335%" y="517" width="0.0798%" height="15" fill="rgb(206,71,34)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0335%" y="501" width="0.0798%" height="15" fill="rgb(242,32,6)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0335%" y="485" width="0.0798%" height="15" fill="rgb(241,35,3)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0335%" y="469" width="0.0798%" height="15" fill="rgb(222,62,19)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0335%" y="453" width="0.0798%" height="15" fill="rgb(223,110,41)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0335%" y="437" width="0.0798%" height="15" fill="rgb(208,224,4)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="86.0335%" y="741" width="0.1596%" height="15" fill="rgb(241,137,19)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.0335%" y="725" width="0.1596%" height="15" fill="rgb(244,24,17)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.0335%" y="709" width="0.1596%" height="15" fill="rgb(245,178,49)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.0335%" y="693" width="0.1596%" height="15" fill="rgb(219,160,38)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.0335%" y="677" width="0.1596%" height="15" fill="rgb(228,137,14)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.0335%" y="661" width="0.1596%" height="15" fill="rgb(237,134,11)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.0335%" y="645" width="0.1596%" height="15" fill="rgb(211,126,44)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.0335%" y="629" width="0.1596%" height="15" fill="rgb(226,171,33)" fg:x="1078" fg:w="2"/><text x="86.2835%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1133%" y="613" width="0.0798%" height="15" fill="rgb(253,99,13)" fg:x="1079" fg:w="1"/><text x="86.3633%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.88%)</title><rect x="85.4749%" y="773" width="0.8779%" height="15" fill="rgb(244,48,7)" fg:x="1071" fg:w="11"/><text x="85.7249%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="85.7143%" y="757" width="0.6385%" height="15" fill="rgb(244,217,54)" fg:x="1074" fg:w="8"/><text x="85.9643%" y="767.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="86.1931%" y="741" width="0.1596%" height="15" fill="rgb(224,15,18)" fg:x="1080" fg:w="2"/><text x="86.4431%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.1931%" y="725" width="0.1596%" height="15" fill="rgb(244,99,12)" fg:x="1080" fg:w="2"/><text x="86.4431%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.3528%" y="645" width="0.0798%" height="15" fill="rgb(233,226,8)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3528%" y="629" width="0.0798%" height="15" fill="rgb(229,211,3)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="86.3528%" y="613" width="0.0798%" height="15" fill="rgb(216,140,21)" fg:x="1082" fg:w="1"/><text x="86.6028%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="86.3528%" y="773" width="0.1596%" height="15" fill="rgb(234,122,30)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.3528%" y="757" width="0.1596%" height="15" fill="rgb(236,25,46)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.3528%" y="741" width="0.1596%" height="15" fill="rgb(217,52,54)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.3528%" y="725" width="0.1596%" height="15" fill="rgb(222,29,26)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="86.3528%" y="709" width="0.1596%" height="15" fill="rgb(216,177,29)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.3528%" y="693" width="0.1596%" height="15" fill="rgb(247,136,51)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="86.3528%" y="677" width="0.1596%" height="15" fill="rgb(231,47,47)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="86.3528%" y="661" width="0.1596%" height="15" fill="rgb(211,192,36)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.4326%" y="645" width="0.0798%" height="15" fill="rgb(229,156,32)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.5124%" y="741" width="0.0798%" height="15" fill="rgb(248,213,20)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.5124%" y="725" width="0.0798%" height="15" fill="rgb(217,64,7)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.5124%" y="709" width="0.0798%" height="15" fill="rgb(232,142,8)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="693" width="0.0798%" height="15" fill="rgb(224,92,44)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.5124%" y="677" width="0.0798%" height="15" fill="rgb(214,169,17)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="661" width="0.0798%" height="15" fill="rgb(210,59,37)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="645" width="0.0798%" height="15" fill="rgb(214,116,48)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="629" width="0.0798%" height="15" fill="rgb(244,191,6)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.5124%" y="613" width="0.0798%" height="15" fill="rgb(241,50,52)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="597" width="0.0798%" height="15" fill="rgb(236,75,39)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="581" width="0.0798%" height="15" fill="rgb(236,99,0)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.5124%" y="565" width="0.0798%" height="15" fill="rgb(207,202,15)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.5124%" y="549" width="0.0798%" height="15" fill="rgb(233,207,14)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5124%" y="533" width="0.0798%" height="15" fill="rgb(226,27,51)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.5124%" y="517" width="0.0798%" height="15" fill="rgb(206,104,42)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.5124%" y="501" width="0.0798%" height="15" fill="rgb(212,225,4)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.5124%" y="485" width="0.0798%" height="15" fill="rgb(233,96,42)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.5124%" y="469" width="0.0798%" height="15" fill="rgb(229,21,32)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.5124%" y="453" width="0.0798%" height="15" fill="rgb(226,216,24)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.5124%" y="437" width="0.0798%" height="15" fill="rgb(221,163,17)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.5124%" y="421" width="0.0798%" height="15" fill="rgb(216,216,42)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="86.5124%" y="405" width="0.0798%" height="15" fill="rgb(240,118,7)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="86.5124%" y="389" width="0.0798%" height="15" fill="rgb(221,67,37)" fg:x="1084" fg:w="1"/><text x="86.7624%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="86.5922%" y="725" width="0.0798%" height="15" fill="rgb(241,32,44)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5922%" y="709" width="0.0798%" height="15" fill="rgb(235,204,43)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6720%" y="709" width="0.0798%" height="15" fill="rgb(213,116,10)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6720%" y="693" width="0.0798%" height="15" fill="rgb(239,15,48)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6720%" y="677" width="0.0798%" height="15" fill="rgb(207,123,36)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.5922%" y="741" width="0.2394%" height="15" fill="rgb(209,103,30)" fg:x="1085" fg:w="3"/><text x="86.8422%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.6720%" y="725" width="0.1596%" height="15" fill="rgb(238,100,19)" fg:x="1086" fg:w="2"/><text x="86.9220%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.7518%" y="709" width="0.0798%" height="15" fill="rgb(244,30,14)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.7518%" y="693" width="0.0798%" height="15" fill="rgb(249,174,6)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7518%" y="677" width="0.0798%" height="15" fill="rgb(235,213,41)" fg:x="1087" fg:w="1"/><text x="87.0018%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.8316%" y="741" width="0.0798%" height="15" fill="rgb(213,118,6)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.8316%" y="725" width="0.0798%" height="15" fill="rgb(235,44,51)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8316%" y="709" width="0.0798%" height="15" fill="rgb(217,9,53)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8316%" y="693" width="0.0798%" height="15" fill="rgb(237,172,34)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.9114%" y="725" width="0.0798%" height="15" fill="rgb(206,206,11)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.9114%" y="709" width="0.0798%" height="15" fill="rgb(214,149,29)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.9114%" y="693" width="0.0798%" height="15" fill="rgb(208,123,3)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9114%" y="677" width="0.0798%" height="15" fill="rgb(229,126,4)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9114%" y="661" width="0.0798%" height="15" fill="rgb(222,92,36)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="86.5124%" y="757" width="0.5587%" height="15" fill="rgb(216,39,41)" fg:x="1084" fg:w="7"/><text x="86.7624%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="86.9114%" y="741" width="0.1596%" height="15" fill="rgb(253,127,28)" fg:x="1089" fg:w="2"/><text x="87.1614%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.9912%" y="725" width="0.0798%" height="15" fill="rgb(249,152,51)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9912%" y="709" width="0.0798%" height="15" fill="rgb(209,123,42)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9912%" y="693" width="0.0798%" height="15" fill="rgb(241,118,22)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.0710%" y="709" width="0.0798%" height="15" fill="rgb(208,25,7)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1508%" y="693" width="0.0798%" height="15" fill="rgb(243,144,39)" fg:x="1092" fg:w="1"/><text x="87.4008%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.0710%" y="741" width="0.2394%" height="15" fill="rgb(250,50,5)" fg:x="1091" fg:w="3"/><text x="87.3210%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.0710%" y="725" width="0.2394%" height="15" fill="rgb(207,67,11)" fg:x="1091" fg:w="3"/><text x="87.3210%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.1508%" y="709" width="0.1596%" height="15" fill="rgb(245,204,40)" fg:x="1092" fg:w="2"/><text x="87.4008%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2306%" y="693" width="0.0798%" height="15" fill="rgb(238,228,24)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2306%" y="677" width="0.0798%" height="15" fill="rgb(217,116,22)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2306%" y="661" width="0.0798%" height="15" fill="rgb(234,98,12)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2306%" y="645" width="0.0798%" height="15" fill="rgb(242,170,50)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2306%" y="629" width="0.0798%" height="15" fill="rgb(235,7,5)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2306%" y="613" width="0.0798%" height="15" fill="rgb(241,114,28)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.2306%" y="597" width="0.0798%" height="15" fill="rgb(246,112,42)" fg:x="1093" fg:w="1"/><text x="87.4806%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.3105%" y="741" width="0.0798%" height="15" fill="rgb(248,228,14)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.3105%" y="725" width="0.0798%" height="15" fill="rgb(208,133,18)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.3105%" y="709" width="0.0798%" height="15" fill="rgb(207,35,49)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.3903%" y="693" width="0.0798%" height="15" fill="rgb(205,68,36)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3903%" y="677" width="0.0798%" height="15" fill="rgb(245,62,40)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.3903%" y="661" width="0.0798%" height="15" fill="rgb(228,27,24)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.3903%" y="645" width="0.0798%" height="15" fill="rgb(253,19,12)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.3903%" y="629" width="0.0798%" height="15" fill="rgb(232,28,20)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3903%" y="613" width="0.0798%" height="15" fill="rgb(218,35,51)" fg:x="1095" fg:w="1"/><text x="87.6403%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.4701%" y="661" width="0.1596%" height="15" fill="rgb(212,90,40)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.4701%" y="645" width="0.1596%" height="15" fill="rgb(220,172,12)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.4701%" y="629" width="0.1596%" height="15" fill="rgb(226,159,20)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.4701%" y="613" width="0.1596%" height="15" fill="rgb(234,205,16)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.4701%" y="597" width="0.1596%" height="15" fill="rgb(207,9,39)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="87.4701%" y="581" width="0.1596%" height="15" fill="rgb(249,143,15)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="87.4701%" y="565" width="0.1596%" height="15" fill="rgb(253,133,29)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="87.4701%" y="549" width="0.1596%" height="15" fill="rgb(221,187,0)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.4701%" y="533" width="0.1596%" height="15" fill="rgb(205,204,26)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.4701%" y="517" width="0.1596%" height="15" fill="rgb(224,68,54)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="87.4701%" y="501" width="0.1596%" height="15" fill="rgb(209,67,4)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="87.4701%" y="485" width="0.1596%" height="15" fill="rgb(228,229,18)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="87.4701%" y="469" width="0.1596%" height="15" fill="rgb(231,89,13)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="87.4701%" y="453" width="0.1596%" height="15" fill="rgb(210,182,18)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.4701%" y="437" width="0.1596%" height="15" fill="rgb(240,105,2)" fg:x="1096" fg:w="2"/><text x="87.7201%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (75 samples, 5.99%)</title><rect x="81.7239%" y="789" width="5.9856%" height="15" fill="rgb(207,170,50)" fg:x="1024" fg:w="75"/><text x="81.9739%" y="799.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.20%)</title><rect x="86.5124%" y="773" width="1.1971%" height="15" fill="rgb(232,133,24)" fg:x="1084" fg:w="15"/><text x="86.7624%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="87.0710%" y="757" width="0.6385%" height="15" fill="rgb(235,166,27)" fg:x="1091" fg:w="8"/><text x="87.3210%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="87.3903%" y="741" width="0.3192%" height="15" fill="rgb(209,19,13)" fg:x="1095" fg:w="4"/><text x="87.6403%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="87.3903%" y="725" width="0.3192%" height="15" fill="rgb(226,79,39)" fg:x="1095" fg:w="4"/><text x="87.6403%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="87.3903%" y="709" width="0.3192%" height="15" fill="rgb(222,163,10)" fg:x="1095" fg:w="4"/><text x="87.6403%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="87.4701%" y="693" width="0.2394%" height="15" fill="rgb(214,44,19)" fg:x="1096" fg:w="3"/><text x="87.7201%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.4701%" y="677" width="0.2394%" height="15" fill="rgb(210,217,13)" fg:x="1096" fg:w="3"/><text x="87.7201%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6297%" y="661" width="0.0798%" height="15" fill="rgb(237,61,54)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6297%" y="645" width="0.0798%" height="15" fill="rgb(226,184,24)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.6297%" y="629" width="0.0798%" height="15" fill="rgb(223,226,4)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6297%" y="613" width="0.0798%" height="15" fill="rgb(210,26,41)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6297%" y="597" width="0.0798%" height="15" fill="rgb(220,221,6)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.6297%" y="581" width="0.0798%" height="15" fill="rgb(225,89,49)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="87.7095%" y="757" width="0.0798%" height="15" fill="rgb(218,70,45)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="87.7095%" y="741" width="0.0798%" height="15" fill="rgb(238,166,21)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.7095%" y="725" width="0.0798%" height="15" fill="rgb(224,141,44)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.7095%" y="709" width="0.0798%" height="15" fill="rgb(230,12,49)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7095%" y="693" width="0.0798%" height="15" fill="rgb(212,174,12)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="87.7095%" y="789" width="0.1596%" height="15" fill="rgb(246,67,9)" fg:x="1099" fg:w="2"/><text x="87.9595%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="87.7095%" y="773" width="0.1596%" height="15" fill="rgb(239,35,23)" fg:x="1099" fg:w="2"/><text x="87.9595%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.7893%" y="757" width="0.0798%" height="15" fill="rgb(211,167,0)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.7893%" y="741" width="0.0798%" height="15" fill="rgb(225,119,45)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7893%" y="725" width="0.0798%" height="15" fill="rgb(210,162,6)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.7893%" y="709" width="0.0798%" height="15" fill="rgb(208,118,35)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.8691%" y="741" width="0.0798%" height="15" fill="rgb(239,4,53)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.8691%" y="725" width="0.0798%" height="15" fill="rgb(213,130,21)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.8691%" y="709" width="0.0798%" height="15" fill="rgb(235,148,0)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="693" width="0.0798%" height="15" fill="rgb(244,224,18)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.8691%" y="677" width="0.0798%" height="15" fill="rgb(211,214,4)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="661" width="0.0798%" height="15" fill="rgb(206,119,25)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="645" width="0.0798%" height="15" fill="rgb(243,93,47)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="629" width="0.0798%" height="15" fill="rgb(224,194,6)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.8691%" y="613" width="0.0798%" height="15" fill="rgb(243,229,6)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="597" width="0.0798%" height="15" fill="rgb(207,23,50)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="581" width="0.0798%" height="15" fill="rgb(253,192,32)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="565" width="0.0798%" height="15" fill="rgb(213,21,6)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.8691%" y="549" width="0.0798%" height="15" fill="rgb(243,151,13)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="533" width="0.0798%" height="15" fill="rgb(233,165,41)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.8691%" y="517" width="0.0798%" height="15" fill="rgb(246,176,45)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="87.8691%" y="757" width="0.1596%" height="15" fill="rgb(217,170,52)" fg:x="1101" fg:w="2"/><text x="88.1191%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.9489%" y="741" width="0.0798%" height="15" fill="rgb(214,203,54)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9489%" y="725" width="0.0798%" height="15" fill="rgb(248,215,49)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9489%" y="709" width="0.0798%" height="15" fill="rgb(208,46,10)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9489%" y="693" width="0.0798%" height="15" fill="rgb(254,5,31)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9489%" y="677" width="0.0798%" height="15" fill="rgb(222,104,33)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="88.0287%" y="757" width="0.0798%" height="15" fill="rgb(248,49,16)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="88.0287%" y="741" width="0.0798%" height="15" fill="rgb(232,198,41)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.0287%" y="725" width="0.0798%" height="15" fill="rgb(214,125,3)" fg:x="1103" fg:w="1"/><text x="88.2787%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1085%" y="693" width="0.0798%" height="15" fill="rgb(229,220,28)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1085%" y="677" width="0.0798%" height="15" fill="rgb(222,64,37)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1085%" y="661" width="0.0798%" height="15" fill="rgb(249,184,13)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1085%" y="645" width="0.0798%" height="15" fill="rgb(252,176,6)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1085%" y="629" width="0.0798%" height="15" fill="rgb(228,153,7)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1085%" y="613" width="0.0798%" height="15" fill="rgb(242,193,5)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1085%" y="597" width="0.0798%" height="15" fill="rgb(232,140,9)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1085%" y="581" width="0.0798%" height="15" fill="rgb(213,222,16)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1085%" y="565" width="0.0798%" height="15" fill="rgb(222,75,50)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1085%" y="549" width="0.0798%" height="15" fill="rgb(205,180,2)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1085%" y="533" width="0.0798%" height="15" fill="rgb(216,34,7)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1085%" y="517" width="0.0798%" height="15" fill="rgb(253,16,32)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1085%" y="501" width="0.0798%" height="15" fill="rgb(208,97,28)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="87.8691%" y="789" width="0.3990%" height="15" fill="rgb(225,92,11)" fg:x="1101" fg:w="5"/><text x="88.1191%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="87.8691%" y="773" width="0.3990%" height="15" fill="rgb(243,38,12)" fg:x="1101" fg:w="5"/><text x="88.1191%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="88.1085%" y="757" width="0.1596%" height="15" fill="rgb(208,139,16)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="88.1085%" y="741" width="0.1596%" height="15" fill="rgb(227,24,9)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="88.1085%" y="725" width="0.1596%" height="15" fill="rgb(206,62,11)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="88.1085%" y="709" width="0.1596%" height="15" fill="rgb(228,134,27)" fg:x="1104" fg:w="2"/><text x="88.3585%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1883%" y="693" width="0.0798%" height="15" fill="rgb(205,55,33)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="88.3480%" y="773" width="0.0798%" height="15" fill="rgb(243,75,43)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.3480%" y="757" width="0.0798%" height="15" fill="rgb(223,27,42)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.3480%" y="741" width="0.0798%" height="15" fill="rgb(232,189,33)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.3480%" y="725" width="0.0798%" height="15" fill="rgb(210,9,39)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.3480%" y="709" width="0.0798%" height="15" fill="rgb(242,85,26)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.3480%" y="693" width="0.0798%" height="15" fill="rgb(248,44,4)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3480%" y="677" width="0.0798%" height="15" fill="rgb(250,96,46)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3480%" y="661" width="0.0798%" height="15" fill="rgb(229,116,26)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3480%" y="645" width="0.0798%" height="15" fill="rgb(246,94,34)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.3480%" y="629" width="0.0798%" height="15" fill="rgb(251,73,21)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.3480%" y="613" width="0.0798%" height="15" fill="rgb(254,121,25)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.3480%" y="597" width="0.0798%" height="15" fill="rgb(215,161,49)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3480%" y="581" width="0.0798%" height="15" fill="rgb(221,43,13)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3480%" y="565" width="0.0798%" height="15" fill="rgb(249,5,37)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="88.4278%" y="741" width="0.0798%" height="15" fill="rgb(226,25,44)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4278%" y="725" width="0.0798%" height="15" fill="rgb(238,189,16)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.4278%" y="709" width="0.0798%" height="15" fill="rgb(251,186,8)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="88.4278%" y="693" width="0.0798%" height="15" fill="rgb(254,34,31)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4278%" y="677" width="0.0798%" height="15" fill="rgb(225,215,27)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="88.4278%" y="773" width="0.1596%" height="15" fill="rgb(221,192,48)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="88.4278%" y="757" width="0.1596%" height="15" fill="rgb(219,137,20)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.5076%" y="741" width="0.0798%" height="15" fill="rgb(219,84,11)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="88.5874%" y="757" width="0.0798%" height="15" fill="rgb(224,10,23)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="88.5874%" y="741" width="0.0798%" height="15" fill="rgb(248,22,39)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="88.5874%" y="725" width="0.0798%" height="15" fill="rgb(212,154,20)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.5874%" y="709" width="0.0798%" height="15" fill="rgb(236,199,50)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.5874%" y="693" width="0.0798%" height="15" fill="rgb(211,9,17)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.5874%" y="677" width="0.0798%" height="15" fill="rgb(243,216,36)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.5874%" y="661" width="0.0798%" height="15" fill="rgb(250,2,10)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="88.5874%" y="645" width="0.0798%" height="15" fill="rgb(226,50,48)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="88.5874%" y="629" width="0.0798%" height="15" fill="rgb(243,81,16)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.6672%" y="725" width="0.0798%" height="15" fill="rgb(250,14,2)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.6672%" y="709" width="0.0798%" height="15" fill="rgb(233,135,29)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6672%" y="693" width="0.0798%" height="15" fill="rgb(224,64,43)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6672%" y="677" width="0.0798%" height="15" fill="rgb(238,84,13)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.6672%" y="661" width="0.0798%" height="15" fill="rgb(253,48,26)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6672%" y="645" width="0.0798%" height="15" fill="rgb(205,223,31)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.6672%" y="629" width="0.0798%" height="15" fill="rgb(221,41,32)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6672%" y="613" width="0.0798%" height="15" fill="rgb(213,158,31)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (139 samples, 11.09%)</title><rect x="77.7334%" y="805" width="11.0934%" height="15" fill="rgb(245,126,43)" fg:x="974" fg:w="139"/><text x="77.9834%" y="815.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="88.2682%" y="789" width="0.5587%" height="15" fill="rgb(227,7,22)" fg:x="1106" fg:w="7"/><text x="88.5182%" y="799.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="88.5874%" y="773" width="0.2394%" height="15" fill="rgb(252,90,44)" fg:x="1110" fg:w="3"/><text x="88.8374%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="88.6672%" y="757" width="0.1596%" height="15" fill="rgb(253,91,0)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.6672%" y="741" width="0.1596%" height="15" fill="rgb(252,175,49)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7470%" y="725" width="0.0798%" height="15" fill="rgb(246,150,1)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.8268%" y="757" width="0.0798%" height="15" fill="rgb(241,192,25)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="88.9864%" y="725" width="0.0798%" height="15" fill="rgb(239,187,11)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.9864%" y="709" width="0.0798%" height="15" fill="rgb(218,202,51)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9864%" y="693" width="0.0798%" height="15" fill="rgb(225,176,8)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.9864%" y="677" width="0.0798%" height="15" fill="rgb(219,122,41)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.9864%" y="661" width="0.0798%" height="15" fill="rgb(248,140,20)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.0662%" y="693" width="0.0798%" height="15" fill="rgb(245,41,37)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.0662%" y="677" width="0.0798%" height="15" fill="rgb(235,82,39)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.0662%" y="661" width="0.0798%" height="15" fill="rgb(230,108,42)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.0662%" y="645" width="0.0798%" height="15" fill="rgb(215,150,50)" fg:x="1116" fg:w="1"/><text x="89.3162%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="89.0662%" y="709" width="0.1596%" height="15" fill="rgb(233,212,5)" fg:x="1116" fg:w="2"/><text x="89.3162%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.1460%" y="693" width="0.0798%" height="15" fill="rgb(245,80,22)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.1460%" y="677" width="0.0798%" height="15" fill="rgb(238,129,16)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.1460%" y="661" width="0.0798%" height="15" fill="rgb(240,19,0)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.2259%" y="677" width="0.0798%" height="15" fill="rgb(232,42,35)" fg:x="1118" fg:w="1"/><text x="89.4759%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.3057%" y="677" width="0.0798%" height="15" fill="rgb(223,130,24)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3057%" y="661" width="0.0798%" height="15" fill="rgb(237,16,22)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.3057%" y="645" width="0.0798%" height="15" fill="rgb(248,192,20)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.3057%" y="629" width="0.0798%" height="15" fill="rgb(233,167,2)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.3057%" y="613" width="0.0798%" height="15" fill="rgb(252,71,44)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.3057%" y="597" width="0.0798%" height="15" fill="rgb(238,37,47)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.3057%" y="581" width="0.0798%" height="15" fill="rgb(214,202,54)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.3057%" y="565" width="0.0798%" height="15" fill="rgb(254,165,40)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.3057%" y="549" width="0.0798%" height="15" fill="rgb(246,173,38)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="89.2259%" y="693" width="0.2394%" height="15" fill="rgb(215,3,27)" fg:x="1118" fg:w="3"/><text x="89.4759%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.3855%" y="677" width="0.0798%" height="15" fill="rgb(239,169,51)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.3855%" y="661" width="0.0798%" height="15" fill="rgb(212,5,25)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.3855%" y="645" width="0.0798%" height="15" fill="rgb(243,45,17)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.3855%" y="629" width="0.0798%" height="15" fill="rgb(242,97,9)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="89.0662%" y="725" width="0.4789%" height="15" fill="rgb(228,71,31)" fg:x="1116" fg:w="6"/><text x="89.3162%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="89.2259%" y="709" width="0.3192%" height="15" fill="rgb(252,184,16)" fg:x="1118" fg:w="4"/><text x="89.4759%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4653%" y="693" width="0.0798%" height="15" fill="rgb(236,169,46)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.4653%" y="677" width="0.0798%" height="15" fill="rgb(207,17,47)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4653%" y="661" width="0.0798%" height="15" fill="rgb(206,201,28)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.4653%" y="645" width="0.0798%" height="15" fill="rgb(224,184,23)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.4653%" y="629" width="0.0798%" height="15" fill="rgb(208,139,48)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5451%" y="693" width="0.0798%" height="15" fill="rgb(208,130,10)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5451%" y="677" width="0.0798%" height="15" fill="rgb(211,213,45)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6249%" y="677" width="0.0798%" height="15" fill="rgb(235,100,30)" fg:x="1123" fg:w="1"/><text x="89.8749%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7047%" y="661" width="0.0798%" height="15" fill="rgb(206,144,31)" fg:x="1124" fg:w="1"/><text x="89.9547%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7047%" y="645" width="0.0798%" height="15" fill="rgb(224,200,26)" fg:x="1124" fg:w="1"/><text x="89.9547%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.5451%" y="725" width="0.3192%" height="15" fill="rgb(247,104,53)" fg:x="1122" fg:w="4"/><text x="89.7951%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="89.5451%" y="709" width="0.3192%" height="15" fill="rgb(220,14,17)" fg:x="1122" fg:w="4"/><text x="89.7951%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.6249%" y="693" width="0.2394%" height="15" fill="rgb(230,140,40)" fg:x="1123" fg:w="3"/><text x="89.8749%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.7047%" y="677" width="0.1596%" height="15" fill="rgb(229,2,41)" fg:x="1124" fg:w="2"/><text x="89.9547%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.7845%" y="661" width="0.0798%" height="15" fill="rgb(232,89,16)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.7845%" y="645" width="0.0798%" height="15" fill="rgb(247,59,52)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7845%" y="629" width="0.0798%" height="15" fill="rgb(226,110,21)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7845%" y="613" width="0.0798%" height="15" fill="rgb(224,176,43)" fg:x="1125" fg:w="1"/><text x="90.0345%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8643%" y="661" width="0.0798%" height="15" fill="rgb(221,73,6)" fg:x="1126" fg:w="1"/><text x="90.1143%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9441%" y="645" width="0.0798%" height="15" fill="rgb(232,78,19)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1038%" y="629" width="0.0798%" height="15" fill="rgb(233,112,48)" fg:x="1129" fg:w="1"/><text x="90.3538%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="90.1836%" y="629" width="0.1596%" height="15" fill="rgb(243,131,47)" fg:x="1130" fg:w="2"/><text x="90.4336%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2634%" y="613" width="0.0798%" height="15" fill="rgb(226,51,1)" fg:x="1131" fg:w="1"/><text x="90.5134%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.3432%" y="613" width="0.1596%" height="15" fill="rgb(247,58,7)" fg:x="1132" fg:w="2"/><text x="90.5932%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.5028%" y="597" width="0.1596%" height="15" fill="rgb(209,7,32)" fg:x="1134" fg:w="2"/><text x="90.7528%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="89.8643%" y="693" width="0.8779%" height="15" fill="rgb(209,39,41)" fg:x="1126" fg:w="11"/><text x="90.1143%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="89.8643%" y="677" width="0.8779%" height="15" fill="rgb(226,182,46)" fg:x="1126" fg:w="11"/><text x="90.1143%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="89.9441%" y="661" width="0.7981%" height="15" fill="rgb(230,219,10)" fg:x="1127" fg:w="10"/><text x="90.1941%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="90.0239%" y="645" width="0.7183%" height="15" fill="rgb(227,175,30)" fg:x="1128" fg:w="9"/><text x="90.2739%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="90.3432%" y="629" width="0.3990%" height="15" fill="rgb(217,2,50)" fg:x="1132" fg:w="5"/><text x="90.5932%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.5028%" y="613" width="0.2394%" height="15" fill="rgb(229,160,0)" fg:x="1134" fg:w="3"/><text x="90.7528%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.6624%" y="597" width="0.0798%" height="15" fill="rgb(207,78,37)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6624%" y="581" width="0.0798%" height="15" fill="rgb(225,57,0)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="90.8220%" y="677" width="0.3990%" height="15" fill="rgb(232,154,2)" fg:x="1138" fg:w="5"/><text x="91.0720%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="90.8220%" y="661" width="0.3990%" height="15" fill="rgb(241,212,25)" fg:x="1138" fg:w="5"/><text x="91.0720%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="91.0615%" y="645" width="0.1596%" height="15" fill="rgb(226,69,20)" fg:x="1141" fg:w="2"/><text x="91.3115%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.1413%" y="629" width="0.0798%" height="15" fill="rgb(247,184,54)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="91.1413%" y="613" width="0.0798%" height="15" fill="rgb(210,145,0)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (18 samples, 1.44%)</title><rect x="89.8643%" y="709" width="1.4366%" height="15" fill="rgb(253,82,12)" fg:x="1126" fg:w="18"/><text x="90.1143%" y="719.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="90.7422%" y="693" width="0.5587%" height="15" fill="rgb(245,42,11)" fg:x="1137" fg:w="7"/><text x="90.9922%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="91.2211%" y="677" width="0.0798%" height="15" fill="rgb(219,147,32)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="91.2211%" y="661" width="0.0798%" height="15" fill="rgb(246,12,7)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.3009%" y="709" width="0.0798%" height="15" fill="rgb(243,50,9)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3009%" y="693" width="0.0798%" height="15" fill="rgb(219,149,6)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4605%" y="677" width="0.0798%" height="15" fill="rgb(241,51,42)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="91.5403%" y="677" width="0.3990%" height="15" fill="rgb(226,128,27)" fg:x="1147" fg:w="5"/><text x="91.7903%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="91.6201%" y="661" width="0.3192%" height="15" fill="rgb(244,144,4)" fg:x="1148" fg:w="4"/><text x="91.8701%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9393%" y="645" width="0.0798%" height="15" fill="rgb(221,4,13)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9393%" y="677" width="0.1596%" height="15" fill="rgb(208,170,28)" fg:x="1152" fg:w="2"/><text x="92.1893%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.9393%" y="661" width="0.1596%" height="15" fill="rgb(226,131,13)" fg:x="1152" fg:w="2"/><text x="92.1893%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0192%" y="645" width="0.0798%" height="15" fill="rgb(215,72,41)" fg:x="1153" fg:w="1"/><text x="92.2692%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0990%" y="629" width="0.0798%" height="15" fill="rgb(243,108,20)" fg:x="1154" fg:w="1"/><text x="92.3490%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0990%" y="613" width="0.0798%" height="15" fill="rgb(230,189,17)" fg:x="1154" fg:w="1"/><text x="92.3490%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.0990%" y="597" width="0.0798%" height="15" fill="rgb(220,50,17)" fg:x="1154" fg:w="1"/><text x="92.3490%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.0990%" y="581" width="0.0798%" height="15" fill="rgb(248,152,48)" fg:x="1154" fg:w="1"/><text x="92.3490%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="92.3384%" y="597" width="0.0798%" height="15" fill="rgb(244,91,11)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="92.1788%" y="629" width="0.3192%" height="15" fill="rgb(220,157,5)" fg:x="1155" fg:w="4"/><text x="92.4288%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="92.1788%" y="613" width="0.3192%" height="15" fill="rgb(253,137,8)" fg:x="1155" fg:w="4"/><text x="92.4288%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="92.4182%" y="597" width="0.0798%" height="15" fill="rgb(217,137,51)" fg:x="1158" fg:w="1"/><text x="92.6682%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="92.5778%" y="581" width="0.0798%" height="15" fill="rgb(218,209,53)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="92.6576%" y="581" width="0.1596%" height="15" fill="rgb(249,137,25)" fg:x="1161" fg:w="2"/><text x="92.9076%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="92.7374%" y="565" width="0.0798%" height="15" fill="rgb(239,155,26)" fg:x="1162" fg:w="1"/><text x="92.9874%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="92.0990%" y="661" width="0.8779%" height="15" fill="rgb(227,85,46)" fg:x="1154" fg:w="11"/><text x="92.3490%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="92.0990%" y="645" width="0.8779%" height="15" fill="rgb(251,107,43)" fg:x="1154" fg:w="11"/><text x="92.3490%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="92.4980%" y="629" width="0.4789%" height="15" fill="rgb(234,170,33)" fg:x="1159" fg:w="6"/><text x="92.7480%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="92.4980%" y="613" width="0.4789%" height="15" fill="rgb(206,29,35)" fg:x="1159" fg:w="6"/><text x="92.7480%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="92.5778%" y="597" width="0.3990%" height="15" fill="rgb(227,138,25)" fg:x="1160" fg:w="5"/><text x="92.8278%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.8172%" y="581" width="0.1596%" height="15" fill="rgb(249,131,35)" fg:x="1163" fg:w="2"/><text x="93.0672%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="91.3807%" y="709" width="1.6760%" height="15" fill="rgb(239,6,40)" fg:x="1145" fg:w="21"/><text x="91.6307%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="91.3807%" y="693" width="1.6760%" height="15" fill="rgb(246,136,47)" fg:x="1145" fg:w="21"/><text x="91.6307%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="92.0990%" y="677" width="0.9577%" height="15" fill="rgb(253,58,26)" fg:x="1154" fg:w="12"/><text x="92.3490%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9769%" y="661" width="0.0798%" height="15" fill="rgb(237,141,10)" fg:x="1165" fg:w="1"/><text x="93.2269%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.1365%" y="565" width="0.0798%" height="15" fill="rgb(234,156,12)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.1365%" y="549" width="0.0798%" height="15" fill="rgb(243,224,36)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1365%" y="533" width="0.0798%" height="15" fill="rgb(205,229,51)" fg:x="1167" fg:w="1"/><text x="93.3865%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2961%" y="517" width="0.0798%" height="15" fill="rgb(223,189,4)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.2961%" y="549" width="0.2394%" height="15" fill="rgb(249,167,54)" fg:x="1169" fg:w="3"/><text x="93.5461%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2961%" y="533" width="0.2394%" height="15" fill="rgb(218,34,28)" fg:x="1169" fg:w="3"/><text x="93.5461%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.3759%" y="517" width="0.1596%" height="15" fill="rgb(232,109,42)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="93.3759%" y="501" width="0.1596%" height="15" fill="rgb(248,214,46)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.3759%" y="485" width="0.1596%" height="15" fill="rgb(244,216,40)" fg:x="1170" fg:w="2"/><text x="93.6259%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="93.1365%" y="581" width="0.4789%" height="15" fill="rgb(231,226,31)" fg:x="1167" fg:w="6"/><text x="93.3865%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.2163%" y="565" width="0.3990%" height="15" fill="rgb(238,38,43)" fg:x="1168" fg:w="5"/><text x="93.4663%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5355%" y="549" width="0.0798%" height="15" fill="rgb(208,88,43)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5355%" y="533" width="0.0798%" height="15" fill="rgb(205,136,37)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="93.1365%" y="597" width="0.5587%" height="15" fill="rgb(237,34,14)" fg:x="1167" fg:w="7"/><text x="93.3865%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.6153%" y="581" width="0.0798%" height="15" fill="rgb(236,193,44)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6153%" y="565" width="0.0798%" height="15" fill="rgb(231,48,10)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="93.0567%" y="645" width="0.7183%" height="15" fill="rgb(213,141,34)" fg:x="1166" fg:w="9"/><text x="93.3067%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="93.0567%" y="629" width="0.7183%" height="15" fill="rgb(249,130,34)" fg:x="1166" fg:w="9"/><text x="93.3067%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="93.1365%" y="613" width="0.6385%" height="15" fill="rgb(219,42,41)" fg:x="1167" fg:w="8"/><text x="93.3865%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6951%" y="597" width="0.0798%" height="15" fill="rgb(224,100,54)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="93.7749%" y="645" width="0.3192%" height="15" fill="rgb(229,200,27)" fg:x="1175" fg:w="4"/><text x="94.0249%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="93.8547%" y="629" width="0.2394%" height="15" fill="rgb(217,118,10)" fg:x="1176" fg:w="3"/><text x="94.1047%" y="639.50"></text></g><g><title>engine::session::Session::close (67 samples, 5.35%)</title><rect x="88.8268%" y="805" width="5.3472%" height="15" fill="rgb(206,22,3)" fg:x="1113" fg:w="67"/><text x="89.0768%" y="815.50">engine:..</text></g><g><title>engine::session::state::State::close (67 samples, 5.35%)</title><rect x="88.8268%" y="789" width="5.3472%" height="15" fill="rgb(232,163,46)" fg:x="1113" fg:w="67"/><text x="89.0768%" y="799.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (67 samples, 5.35%)</title><rect x="88.8268%" y="773" width="5.3472%" height="15" fill="rgb(206,95,13)" fg:x="1113" fg:w="67"/><text x="89.0768%" y="783.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (66 samples, 5.27%)</title><rect x="88.9066%" y="757" width="5.2674%" height="15" fill="rgb(253,154,18)" fg:x="1114" fg:w="66"/><text x="89.1566%" y="767.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.27%)</title><rect x="88.9066%" y="741" width="5.2674%" height="15" fill="rgb(219,32,23)" fg:x="1114" fg:w="66"/><text x="89.1566%" y="751.50">engine..</text></g><g><title>kernel::model::any_entity_changes (54 samples, 4.31%)</title><rect x="89.8643%" y="725" width="4.3097%" height="15" fill="rgb(230,191,45)" fg:x="1126" fg:w="54"/><text x="90.1143%" y="735.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (14 samples, 1.12%)</title><rect x="93.0567%" y="709" width="1.1173%" height="15" fill="rgb(229,64,36)" fg:x="1166" fg:w="14"/><text x="93.3067%" y="719.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.12%)</title><rect x="93.0567%" y="693" width="1.1173%" height="15" fill="rgb(205,129,25)" fg:x="1166" fg:w="14"/><text x="93.3067%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="93.0567%" y="677" width="1.1173%" height="15" fill="rgb(254,112,7)" fg:x="1166" fg:w="14"/><text x="93.3067%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="93.0567%" y="661" width="1.1173%" height="15" fill="rgb(226,53,48)" fg:x="1166" fg:w="14"/><text x="93.3067%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0942%" y="645" width="0.0798%" height="15" fill="rgb(214,153,38)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.0942%" y="629" width="0.0798%" height="15" fill="rgb(243,101,7)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0942%" y="613" width="0.0798%" height="15" fill="rgb(240,140,22)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="94.1740%" y="597" width="0.0798%" height="15" fill="rgb(235,114,2)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="94.1740%" y="581" width="0.0798%" height="15" fill="rgb(242,59,12)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.1740%" y="565" width="0.0798%" height="15" fill="rgb(252,134,9)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.1740%" y="549" width="0.0798%" height="15" fill="rgb(236,4,44)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1740%" y="533" width="0.0798%" height="15" fill="rgb(254,172,41)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="517" width="0.0798%" height="15" fill="rgb(244,63,20)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.1740%" y="501" width="0.0798%" height="15" fill="rgb(250,73,31)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="485" width="0.0798%" height="15" fill="rgb(241,38,36)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="495.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="94.2538%" y="581" width="0.0798%" height="15" fill="rgb(245,211,2)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="565" width="0.0798%" height="15" fill="rgb(206,120,28)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2538%" y="549" width="0.0798%" height="15" fill="rgb(211,59,34)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="533" width="0.0798%" height="15" fill="rgb(233,168,5)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2538%" y="517" width="0.0798%" height="15" fill="rgb(234,33,13)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="501" width="0.0798%" height="15" fill="rgb(231,150,26)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2538%" y="485" width="0.0798%" height="15" fill="rgb(217,191,4)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="469" width="0.0798%" height="15" fill="rgb(246,198,38)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2538%" y="453" width="0.0798%" height="15" fill="rgb(245,64,37)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="437" width="0.0798%" height="15" fill="rgb(250,30,36)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2538%" y="421" width="0.0798%" height="15" fill="rgb(217,86,53)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.2538%" y="405" width="0.0798%" height="15" fill="rgb(228,157,16)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.3336%" y="549" width="0.0798%" height="15" fill="rgb(217,59,31)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.3336%" y="533" width="0.0798%" height="15" fill="rgb(237,138,41)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.3336%" y="517" width="0.0798%" height="15" fill="rgb(227,91,49)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3336%" y="501" width="0.0798%" height="15" fill="rgb(247,21,44)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3336%" y="485" width="0.0798%" height="15" fill="rgb(219,210,51)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3336%" y="469" width="0.0798%" height="15" fill="rgb(209,140,6)" fg:x="1182" fg:w="1"/><text x="94.5836%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="94.2538%" y="597" width="0.2394%" height="15" fill="rgb(221,188,24)" fg:x="1181" fg:w="3"/><text x="94.5038%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.3336%" y="581" width="0.1596%" height="15" fill="rgb(232,154,20)" fg:x="1182" fg:w="2"/><text x="94.5836%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3336%" y="565" width="0.1596%" height="15" fill="rgb(244,137,50)" fg:x="1182" fg:w="2"/><text x="94.5836%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4134%" y="549" width="0.0798%" height="15" fill="rgb(225,185,43)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4134%" y="533" width="0.0798%" height="15" fill="rgb(213,205,38)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4134%" y="517" width="0.0798%" height="15" fill="rgb(236,73,12)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4134%" y="501" width="0.0798%" height="15" fill="rgb(235,219,13)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.4932%" y="597" width="0.0798%" height="15" fill="rgb(218,59,36)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4932%" y="581" width="0.0798%" height="15" fill="rgb(205,110,39)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4932%" y="565" width="0.0798%" height="15" fill="rgb(218,206,42)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4932%" y="549" width="0.0798%" height="15" fill="rgb(248,125,24)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.4932%" y="533" width="0.0798%" height="15" fill="rgb(242,28,27)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4932%" y="517" width="0.0798%" height="15" fill="rgb(216,228,15)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="94.1740%" y="645" width="0.4789%" height="15" fill="rgb(235,116,46)" fg:x="1180" fg:w="6"/><text x="94.4240%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="94.1740%" y="629" width="0.4789%" height="15" fill="rgb(224,18,32)" fg:x="1180" fg:w="6"/><text x="94.4240%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="94.1740%" y="613" width="0.4789%" height="15" fill="rgb(252,5,12)" fg:x="1180" fg:w="6"/><text x="94.4240%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="94.5730%" y="597" width="0.0798%" height="15" fill="rgb(251,36,5)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="94.1740%" y="693" width="0.5587%" height="15" fill="rgb(217,53,14)" fg:x="1180" fg:w="7"/><text x="94.4240%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="94.1740%" y="677" width="0.5587%" height="15" fill="rgb(215,86,45)" fg:x="1180" fg:w="7"/><text x="94.4240%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="94.1740%" y="661" width="0.5587%" height="15" fill="rgb(242,169,11)" fg:x="1180" fg:w="7"/><text x="94.4240%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6528%" y="645" width="0.0798%" height="15" fill="rgb(211,213,45)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6528%" y="629" width="0.0798%" height="15" fill="rgb(205,88,11)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6528%" y="613" width="0.0798%" height="15" fill="rgb(252,69,26)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6528%" y="597" width="0.0798%" height="15" fill="rgb(246,123,37)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6528%" y="581" width="0.0798%" height="15" fill="rgb(212,205,5)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.6528%" y="565" width="0.0798%" height="15" fill="rgb(253,148,0)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.6528%" y="549" width="0.0798%" height="15" fill="rgb(239,22,4)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.6528%" y="533" width="0.0798%" height="15" fill="rgb(226,26,53)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6528%" y="517" width="0.0798%" height="15" fill="rgb(225,229,45)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6528%" y="501" width="0.0798%" height="15" fill="rgb(220,60,37)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.6528%" y="485" width="0.0798%" height="15" fill="rgb(217,180,35)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.6528%" y="469" width="0.0798%" height="15" fill="rgb(229,7,53)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.6528%" y="453" width="0.0798%" height="15" fill="rgb(254,137,3)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.6528%" y="437" width="0.0798%" height="15" fill="rgb(215,140,41)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6528%" y="421" width="0.0798%" height="15" fill="rgb(250,80,15)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="94.7326%" y="645" width="0.0798%" height="15" fill="rgb(252,191,6)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.7326%" y="629" width="0.0798%" height="15" fill="rgb(246,217,18)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7326%" y="613" width="0.0798%" height="15" fill="rgb(223,93,7)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7326%" y="597" width="0.0798%" height="15" fill="rgb(225,55,52)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7326%" y="581" width="0.0798%" height="15" fill="rgb(240,31,24)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.7326%" y="565" width="0.0798%" height="15" fill="rgb(205,56,52)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.7326%" y="549" width="0.0798%" height="15" fill="rgb(246,146,12)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.7326%" y="533" width="0.0798%" height="15" fill="rgb(239,84,36)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7326%" y="517" width="0.0798%" height="15" fill="rgb(207,41,40)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7326%" y="501" width="0.0798%" height="15" fill="rgb(241,179,25)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.7326%" y="485" width="0.0798%" height="15" fill="rgb(210,0,34)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.7326%" y="469" width="0.0798%" height="15" fill="rgb(225,217,29)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.7326%" y="453" width="0.0798%" height="15" fill="rgb(216,191,38)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.7326%" y="437" width="0.0798%" height="15" fill="rgb(232,140,52)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7326%" y="421" width="0.0798%" height="15" fill="rgb(223,158,51)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.72%)</title><rect x="94.1740%" y="709" width="0.7183%" height="15" fill="rgb(235,29,51)" fg:x="1180" fg:w="9"/><text x="94.4240%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="94.7326%" y="693" width="0.1596%" height="15" fill="rgb(215,181,18)" fg:x="1187" fg:w="2"/><text x="94.9826%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="94.7326%" y="677" width="0.1596%" height="15" fill="rgb(227,125,34)" fg:x="1187" fg:w="2"/><text x="94.9826%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="94.7326%" y="661" width="0.1596%" height="15" fill="rgb(230,197,49)" fg:x="1187" fg:w="2"/><text x="94.9826%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="94.8125%" y="645" width="0.0798%" height="15" fill="rgb(239,141,16)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="94.8125%" y="629" width="0.0798%" height="15" fill="rgb(225,105,43)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="613" width="0.0798%" height="15" fill="rgb(214,131,14)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.8125%" y="597" width="0.0798%" height="15" fill="rgb(229,177,11)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="581" width="0.0798%" height="15" fill="rgb(231,180,14)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="565" width="0.0798%" height="15" fill="rgb(232,88,2)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="549" width="0.0798%" height="15" fill="rgb(205,220,8)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.8125%" y="533" width="0.0798%" height="15" fill="rgb(225,23,53)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="517" width="0.0798%" height="15" fill="rgb(213,62,29)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="501" width="0.0798%" height="15" fill="rgb(227,75,7)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="485" width="0.0798%" height="15" fill="rgb(207,105,14)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.8125%" y="469" width="0.0798%" height="15" fill="rgb(245,62,29)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="453" width="0.0798%" height="15" fill="rgb(236,202,4)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.8125%" y="437" width="0.0798%" height="15" fill="rgb(250,67,1)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9721%" y="581" width="0.0798%" height="15" fill="rgb(253,115,44)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="95.0519%" y="581" width="0.0798%" height="15" fill="rgb(251,139,18)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.0519%" y="565" width="0.0798%" height="15" fill="rgb(218,22,32)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2115%" y="533" width="0.0798%" height="15" fill="rgb(243,53,5)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="95.2913%" y="533" width="0.0798%" height="15" fill="rgb(227,56,16)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2913%" y="517" width="0.0798%" height="15" fill="rgb(245,53,0)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.4509%" y="453" width="0.1596%" height="15" fill="rgb(216,170,35)" fg:x="1196" fg:w="2"/><text x="95.7009%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.5307%" y="437" width="0.0798%" height="15" fill="rgb(211,200,8)" fg:x="1197" fg:w="1"/><text x="95.7807%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="95.1317%" y="549" width="0.5587%" height="15" fill="rgb(228,204,44)" fg:x="1192" fg:w="7"/><text x="95.3817%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="95.3711%" y="533" width="0.3192%" height="15" fill="rgb(214,121,17)" fg:x="1195" fg:w="4"/><text x="95.6211%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.3711%" y="517" width="0.3192%" height="15" fill="rgb(233,64,38)" fg:x="1195" fg:w="4"/><text x="95.6211%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.3711%" y="501" width="0.3192%" height="15" fill="rgb(253,54,19)" fg:x="1195" fg:w="4"/><text x="95.6211%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="95.3711%" y="485" width="0.3192%" height="15" fill="rgb(253,94,18)" fg:x="1195" fg:w="4"/><text x="95.6211%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.3711%" y="469" width="0.3192%" height="15" fill="rgb(227,57,52)" fg:x="1195" fg:w="4"/><text x="95.6211%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6105%" y="453" width="0.0798%" height="15" fill="rgb(230,228,50)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6105%" y="437" width="0.0798%" height="15" fill="rgb(217,205,27)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.6105%" y="421" width="0.0798%" height="15" fill="rgb(252,71,50)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.6105%" y="405" width="0.0798%" height="15" fill="rgb(209,86,4)" fg:x="1198" fg:w="1"/><text x="95.8605%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.6903%" y="533" width="0.0798%" height="15" fill="rgb(229,94,0)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.9298%" y="485" width="0.1596%" height="15" fill="rgb(252,223,21)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="95.8500%" y="517" width="0.3990%" height="15" fill="rgb(230,210,4)" fg:x="1201" fg:w="5"/><text x="96.1000%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="95.9298%" y="501" width="0.3192%" height="15" fill="rgb(240,149,38)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.0894%" y="485" width="0.1596%" height="15" fill="rgb(254,105,20)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1692%" y="469" width="0.0798%" height="15" fill="rgb(253,87,46)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1692%" y="453" width="0.0798%" height="15" fill="rgb(253,116,33)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1692%" y="437" width="0.0798%" height="15" fill="rgb(229,198,5)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1692%" y="421" width="0.0798%" height="15" fill="rgb(242,38,37)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1692%" y="405" width="0.0798%" height="15" fill="rgb(242,69,53)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.1692%" y="389" width="0.0798%" height="15" fill="rgb(249,80,16)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2490%" y="517" width="0.0798%" height="15" fill="rgb(206,128,11)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2490%" y="501" width="0.0798%" height="15" fill="rgb(212,35,20)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2490%" y="485" width="0.0798%" height="15" fill="rgb(236,79,13)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2490%" y="469" width="0.0798%" height="15" fill="rgb(233,123,3)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2490%" y="453" width="0.0798%" height="15" fill="rgb(214,93,52)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4086%" y="453" width="0.0798%" height="15" fill="rgb(251,37,40)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4086%" y="437" width="0.0798%" height="15" fill="rgb(227,80,54)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (18 samples, 1.44%)</title><rect x="95.1317%" y="565" width="1.4366%" height="15" fill="rgb(254,48,11)" fg:x="1192" fg:w="18"/><text x="95.3817%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="95.6903%" y="549" width="0.8779%" height="15" fill="rgb(235,193,26)" fg:x="1199" fg:w="11"/><text x="95.9403%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="95.7702%" y="533" width="0.7981%" height="15" fill="rgb(229,99,21)" fg:x="1200" fg:w="10"/><text x="96.0202%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.3288%" y="517" width="0.2394%" height="15" fill="rgb(211,140,41)" fg:x="1207" fg:w="3"/><text x="96.5788%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3288%" y="501" width="0.2394%" height="15" fill="rgb(240,227,30)" fg:x="1207" fg:w="3"/><text x="96.5788%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="96.3288%" y="485" width="0.2394%" height="15" fill="rgb(215,224,45)" fg:x="1207" fg:w="3"/><text x="96.5788%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3288%" y="469" width="0.2394%" height="15" fill="rgb(206,123,31)" fg:x="1207" fg:w="3"/><text x="96.5788%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4884%" y="453" width="0.0798%" height="15" fill="rgb(210,138,16)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4884%" y="437" width="0.0798%" height="15" fill="rgb(228,57,28)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="421" width="0.0798%" height="15" fill="rgb(242,170,10)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.5682%" y="565" width="0.0798%" height="15" fill="rgb(228,214,39)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="96.6480%" y="565" width="0.1596%" height="15" fill="rgb(218,179,33)" fg:x="1211" fg:w="2"/><text x="96.8980%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="96.6480%" y="549" width="0.1596%" height="15" fill="rgb(235,193,39)" fg:x="1211" fg:w="2"/><text x="96.8980%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="96.6480%" y="533" width="0.1596%" height="15" fill="rgb(219,221,36)" fg:x="1211" fg:w="2"/><text x="96.8980%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.7279%" y="517" width="0.0798%" height="15" fill="rgb(248,218,19)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="501" width="0.0798%" height="15" fill="rgb(205,50,9)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.7279%" y="485" width="0.0798%" height="15" fill="rgb(238,81,28)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="469" width="0.0798%" height="15" fill="rgb(235,110,19)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="453" width="0.0798%" height="15" fill="rgb(214,7,14)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="437" width="0.0798%" height="15" fill="rgb(211,77,3)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.7279%" y="421" width="0.0798%" height="15" fill="rgb(229,5,9)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="405" width="0.0798%" height="15" fill="rgb(225,90,11)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="389" width="0.0798%" height="15" fill="rgb(242,56,8)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="373" width="0.0798%" height="15" fill="rgb(249,212,39)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.7279%" y="357" width="0.0798%" height="15" fill="rgb(236,90,9)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.7279%" y="341" width="0.0798%" height="15" fill="rgb(206,88,35)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.7279%" y="325" width="0.0798%" height="15" fill="rgb(205,126,30)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.7279%" y="309" width="0.0798%" height="15" fill="rgb(230,176,12)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.7279%" y="293" width="0.0798%" height="15" fill="rgb(243,19,9)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.7279%" y="277" width="0.0798%" height="15" fill="rgb(245,171,17)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.7279%" y="261" width="0.0798%" height="15" fill="rgb(227,52,21)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.7279%" y="245" width="0.0798%" height="15" fill="rgb(238,69,14)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.7279%" y="229" width="0.0798%" height="15" fill="rgb(241,156,39)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.7279%" y="213" width="0.0798%" height="15" fill="rgb(212,227,28)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.7279%" y="197" width="0.0798%" height="15" fill="rgb(209,118,27)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="96.7279%" y="181" width="0.0798%" height="15" fill="rgb(226,102,5)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.7279%" y="165" width="0.0798%" height="15" fill="rgb(223,34,3)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="96.7279%" y="149" width="0.0798%" height="15" fill="rgb(221,81,38)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="96.7279%" y="133" width="0.0798%" height="15" fill="rgb(236,219,28)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="96.7279%" y="117" width="0.0798%" height="15" fill="rgb(213,200,14)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.7279%" y="101" width="0.0798%" height="15" fill="rgb(240,33,19)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="111.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8077%" y="533" width="0.0798%" height="15" fill="rgb(233,113,27)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8077%" y="517" width="0.0798%" height="15" fill="rgb(220,221,18)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8077%" y="501" width="0.0798%" height="15" fill="rgb(238,92,8)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8077%" y="485" width="0.0798%" height="15" fill="rgb(222,164,16)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8077%" y="469" width="0.0798%" height="15" fill="rgb(241,119,3)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8077%" y="453" width="0.0798%" height="15" fill="rgb(241,44,8)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8077%" y="437" width="0.0798%" height="15" fill="rgb(230,36,40)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8077%" y="421" width="0.0798%" height="15" fill="rgb(243,16,36)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8077%" y="405" width="0.0798%" height="15" fill="rgb(231,4,26)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8077%" y="389" width="0.0798%" height="15" fill="rgb(240,9,31)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8077%" y="373" width="0.0798%" height="15" fill="rgb(207,173,15)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8077%" y="357" width="0.0798%" height="15" fill="rgb(224,192,53)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8077%" y="341" width="0.0798%" height="15" fill="rgb(223,67,28)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8077%" y="325" width="0.0798%" height="15" fill="rgb(211,20,47)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9673%" y="405" width="0.0798%" height="15" fill="rgb(240,228,2)" fg:x="1215" fg:w="1"/><text x="97.2173%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.0471%" y="389" width="0.0798%" height="15" fill="rgb(248,151,12)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.0471%" y="373" width="0.0798%" height="15" fill="rgb(244,8,39)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0471%" y="357" width="0.0798%" height="15" fill="rgb(222,26,8)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0471%" y="341" width="0.0798%" height="15" fill="rgb(213,106,44)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.0471%" y="325" width="0.0798%" height="15" fill="rgb(214,129,20)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0471%" y="309" width="0.0798%" height="15" fill="rgb(212,32,13)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.0471%" y="293" width="0.0798%" height="15" fill="rgb(208,168,33)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="96.9673%" y="421" width="0.2394%" height="15" fill="rgb(231,207,8)" fg:x="1215" fg:w="3"/><text x="97.2173%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.0471%" y="405" width="0.1596%" height="15" fill="rgb(235,219,23)" fg:x="1216" fg:w="2"/><text x="97.2971%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.1269%" y="389" width="0.0798%" height="15" fill="rgb(226,216,26)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1269%" y="373" width="0.0798%" height="15" fill="rgb(239,137,16)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1269%" y="357" width="0.0798%" height="15" fill="rgb(207,12,36)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1269%" y="341" width="0.0798%" height="15" fill="rgb(210,214,24)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1269%" y="325" width="0.0798%" height="15" fill="rgb(206,56,30)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="357" width="0.0798%" height="15" fill="rgb(228,143,26)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2067%" y="341" width="0.0798%" height="15" fill="rgb(216,218,46)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2865%" y="325" width="0.0798%" height="15" fill="rgb(206,6,19)" fg:x="1219" fg:w="1"/><text x="97.5365%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.3663%" y="293" width="0.0798%" height="15" fill="rgb(239,177,51)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.3663%" y="277" width="0.0798%" height="15" fill="rgb(216,55,25)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3663%" y="261" width="0.0798%" height="15" fill="rgb(231,163,29)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4461%" y="261" width="0.0798%" height="15" fill="rgb(232,149,50)" fg:x="1221" fg:w="1"/><text x="97.6961%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4461%" y="245" width="0.0798%" height="15" fill="rgb(223,142,48)" fg:x="1221" fg:w="1"/><text x="97.6961%" y="255.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="97.2067%" y="405" width="0.3990%" height="15" fill="rgb(245,83,23)" fg:x="1218" fg:w="5"/><text x="97.4567%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="97.2067%" y="389" width="0.3990%" height="15" fill="rgb(224,63,2)" fg:x="1218" fg:w="5"/><text x="97.4567%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.2067%" y="373" width="0.3990%" height="15" fill="rgb(218,65,53)" fg:x="1218" fg:w="5"/><text x="97.4567%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="97.2865%" y="357" width="0.3192%" height="15" fill="rgb(221,84,29)" fg:x="1219" fg:w="4"/><text x="97.5365%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.2865%" y="341" width="0.3192%" height="15" fill="rgb(234,0,32)" fg:x="1219" fg:w="4"/><text x="97.5365%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.3663%" y="325" width="0.2394%" height="15" fill="rgb(206,20,16)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.3663%" y="309" width="0.2394%" height="15" fill="rgb(244,172,18)" fg:x="1220" fg:w="3"/><text x="97.6163%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.4461%" y="293" width="0.1596%" height="15" fill="rgb(254,133,1)" fg:x="1221" fg:w="2"/><text x="97.6961%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.4461%" y="277" width="0.1596%" height="15" fill="rgb(222,206,41)" fg:x="1221" fg:w="2"/><text x="97.6961%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.5259%" y="261" width="0.0798%" height="15" fill="rgb(212,3,42)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.5259%" y="245" width="0.0798%" height="15" fill="rgb(241,11,4)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5259%" y="229" width="0.0798%" height="15" fill="rgb(205,19,26)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="97.2067%" y="421" width="0.4789%" height="15" fill="rgb(210,179,32)" fg:x="1218" fg:w="6"/><text x="97.4567%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6057%" y="405" width="0.0798%" height="15" fill="rgb(227,116,49)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6057%" y="389" width="0.0798%" height="15" fill="rgb(211,146,6)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.6057%" y="373" width="0.0798%" height="15" fill="rgb(219,44,39)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6057%" y="357" width="0.0798%" height="15" fill="rgb(234,128,11)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.6057%" y="341" width="0.0798%" height="15" fill="rgb(220,183,53)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="325" width="0.0798%" height="15" fill="rgb(213,219,32)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="309" width="0.0798%" height="15" fill="rgb(232,156,16)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.6057%" y="293" width="0.0798%" height="15" fill="rgb(246,135,34)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.6057%" y="277" width="0.0798%" height="15" fill="rgb(241,99,0)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.6057%" y="261" width="0.0798%" height="15" fill="rgb(222,103,45)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.6057%" y="245" width="0.0798%" height="15" fill="rgb(212,57,4)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.6856%" y="421" width="0.1596%" height="15" fill="rgb(215,68,47)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.6856%" y="405" width="0.1596%" height="15" fill="rgb(230,84,2)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6856%" y="389" width="0.1596%" height="15" fill="rgb(220,102,14)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6856%" y="373" width="0.1596%" height="15" fill="rgb(240,10,32)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.6856%" y="357" width="0.1596%" height="15" fill="rgb(215,47,27)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6856%" y="341" width="0.1596%" height="15" fill="rgb(233,188,43)" fg:x="1224" fg:w="2"/><text x="97.9356%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7654%" y="325" width="0.0798%" height="15" fill="rgb(253,190,1)" fg:x="1225" fg:w="1"/><text x="98.0154%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.9250%" y="357" width="0.1596%" height="15" fill="rgb(206,114,52)" fg:x="1227" fg:w="2"/><text x="98.1750%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.28%)</title><rect x="96.8875%" y="533" width="1.2769%" height="15" fill="rgb(233,120,37)" fg:x="1214" fg:w="16"/><text x="97.1375%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.28%)</title><rect x="96.8875%" y="517" width="1.2769%" height="15" fill="rgb(214,52,39)" fg:x="1214" fg:w="16"/><text x="97.1375%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="96.8875%" y="501" width="1.2769%" height="15" fill="rgb(223,80,29)" fg:x="1214" fg:w="16"/><text x="97.1375%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 1.28%)</title><rect x="96.8875%" y="485" width="1.2769%" height="15" fill="rgb(230,101,40)" fg:x="1214" fg:w="16"/><text x="97.1375%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.20%)</title><rect x="96.9673%" y="469" width="1.1971%" height="15" fill="rgb(219,211,8)" fg:x="1215" fg:w="15"/><text x="97.2173%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.20%)</title><rect x="96.9673%" y="453" width="1.1971%" height="15" fill="rgb(252,126,28)" fg:x="1215" fg:w="15"/><text x="97.2173%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="96.9673%" y="437" width="1.1971%" height="15" fill="rgb(215,56,38)" fg:x="1215" fg:w="15"/><text x="97.2173%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="97.8452%" y="421" width="0.3192%" height="15" fill="rgb(249,55,44)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="97.8452%" y="405" width="0.3192%" height="15" fill="rgb(220,221,32)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="97.8452%" y="389" width="0.3192%" height="15" fill="rgb(212,216,41)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="97.8452%" y="373" width="0.3192%" height="15" fill="rgb(228,213,43)" fg:x="1226" fg:w="4"/><text x="98.0952%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.0846%" y="357" width="0.0798%" height="15" fill="rgb(211,31,26)" fg:x="1229" fg:w="1"/><text x="98.3346%" y="367.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (41 samples, 3.27%)</title><rect x="94.9721%" y="597" width="3.2721%" height="15" fill="rgb(229,202,19)" fg:x="1190" fg:w="41"/><text x="95.2221%" y="607.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (39 samples, 3.11%)</title><rect x="95.1317%" y="581" width="3.1125%" height="15" fill="rgb(229,105,46)" fg:x="1192" fg:w="39"/><text x="95.3817%" y="591.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.44%)</title><rect x="96.8077%" y="565" width="1.4366%" height="15" fill="rgb(235,108,1)" fg:x="1213" fg:w="18"/><text x="97.0577%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="96.8077%" y="549" width="1.4366%" height="15" fill="rgb(245,111,35)" fg:x="1213" fg:w="18"/><text x="97.0577%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1644%" y="533" width="0.0798%" height="15" fill="rgb(219,185,31)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1644%" y="517" width="0.0798%" height="15" fill="rgb(214,4,43)" fg:x="1230" fg:w="1"/><text x="98.4144%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (52 samples, 4.15%)</title><rect x="94.1740%" y="773" width="4.1500%" height="15" fill="rgb(235,227,40)" fg:x="1180" fg:w="52"/><text x="94.4240%" y="783.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::apply_middleware (52 samples, 4.15%)</title><rect x="94.1740%" y="757" width="4.1500%" height="15" fill="rgb(230,88,30)" fg:x="1180" fg:w="52"/><text x="94.4240%" y="767.50">kerne..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (52 samples, 4.15%)</title><rect x="94.1740%" y="741" width="4.1500%" height="15" fill="rgb(216,217,1)" fg:x="1180" fg:w="52"/><text x="94.4240%" y="751.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (52 samples, 4.15%)</title><rect x="94.1740%" y="725" width="4.1500%" height="15" fill="rgb(248,139,50)" fg:x="1180" fg:w="52"/><text x="94.4240%" y="735.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.43%)</title><rect x="94.8923%" y="709" width="3.4318%" height="15" fill="rgb(233,1,21)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="719.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.43%)</title><rect x="94.8923%" y="693" width="3.4318%" height="15" fill="rgb(215,183,12)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="703.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.43%)</title><rect x="94.8923%" y="677" width="3.4318%" height="15" fill="rgb(229,104,42)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="687.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 3.43%)</title><rect x="94.8923%" y="661" width="3.4318%" height="15" fill="rgb(243,34,48)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="671.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.43%)</title><rect x="94.8923%" y="645" width="3.4318%" height="15" fill="rgb(239,11,44)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="655.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 3.43%)</title><rect x="94.8923%" y="629" width="3.4318%" height="15" fill="rgb(231,98,35)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="639.50">cor..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (43 samples, 3.43%)</title><rect x="94.8923%" y="613" width="3.4318%" height="15" fill="rgb(233,28,25)" fg:x="1189" fg:w="43"/><text x="95.1423%" y="623.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.2442%" y="597" width="0.0798%" height="15" fill="rgb(234,123,11)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2442%" y="581" width="0.0798%" height="15" fill="rgb(220,69,3)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.3240%" y="741" width="0.0798%" height="15" fill="rgb(214,64,36)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3240%" y="725" width="0.0798%" height="15" fill="rgb(211,138,32)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.3240%" y="709" width="0.0798%" height="15" fill="rgb(213,118,47)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.3240%" y="693" width="0.0798%" height="15" fill="rgb(243,124,49)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.3240%" y="677" width="0.0798%" height="15" fill="rgb(221,30,28)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.3240%" y="661" width="0.0798%" height="15" fill="rgb(246,37,13)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="98.3240%" y="645" width="0.0798%" height="15" fill="rgb(249,66,14)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.3240%" y="629" width="0.0798%" height="15" fill="rgb(213,166,5)" fg:x="1232" fg:w="1"/><text x="98.5740%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4038%" y="677" width="0.0798%" height="15" fill="rgb(221,66,24)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.4038%" y="693" width="0.1596%" height="15" fill="rgb(210,132,17)" fg:x="1233" fg:w="2"/><text x="98.6538%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4836%" y="677" width="0.0798%" height="15" fill="rgb(243,202,5)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4836%" y="661" width="0.0798%" height="15" fill="rgb(233,70,48)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4836%" y="645" width="0.0798%" height="15" fill="rgb(238,41,26)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5634%" y="661" width="0.0798%" height="15" fill="rgb(241,19,31)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5634%" y="645" width="0.0798%" height="15" fill="rgb(214,76,10)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5634%" y="629" width="0.0798%" height="15" fill="rgb(254,202,22)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5634%" y="613" width="0.0798%" height="15" fill="rgb(214,72,24)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.5634%" y="597" width="0.0798%" height="15" fill="rgb(221,92,46)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.5634%" y="581" width="0.0798%" height="15" fill="rgb(246,13,50)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.5634%" y="565" width="0.0798%" height="15" fill="rgb(240,165,38)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.5634%" y="549" width="0.0798%" height="15" fill="rgb(241,24,51)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5634%" y="533" width="0.0798%" height="15" fill="rgb(227,51,44)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.5634%" y="517" width="0.0798%" height="15" fill="rgb(231,121,3)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.5634%" y="501" width="0.0798%" height="15" fill="rgb(245,3,41)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.5634%" y="485" width="0.0798%" height="15" fill="rgb(214,13,26)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.5634%" y="469" width="0.0798%" height="15" fill="rgb(252,75,11)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.5634%" y="453" width="0.0798%" height="15" fill="rgb(218,226,17)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5634%" y="437" width="0.0798%" height="15" fill="rgb(248,89,38)" fg:x="1235" fg:w="1"/><text x="98.8134%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="98.4038%" y="725" width="0.3192%" height="15" fill="rgb(237,73,46)" fg:x="1233" fg:w="4"/><text x="98.6538%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="98.4038%" y="709" width="0.3192%" height="15" fill="rgb(242,78,33)" fg:x="1233" fg:w="4"/><text x="98.6538%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.5634%" y="693" width="0.1596%" height="15" fill="rgb(235,60,3)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.5634%" y="677" width="0.1596%" height="15" fill="rgb(216,172,19)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6433%" y="661" width="0.0798%" height="15" fill="rgb(227,6,42)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6433%" y="645" width="0.0798%" height="15" fill="rgb(223,207,42)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.6433%" y="629" width="0.0798%" height="15" fill="rgb(246,138,30)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6433%" y="613" width="0.0798%" height="15" fill="rgb(251,199,47)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6433%" y="597" width="0.0798%" height="15" fill="rgb(228,218,44)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6433%" y="581" width="0.0798%" height="15" fill="rgb(220,68,6)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7231%" y="661" width="0.0798%" height="15" fill="rgb(240,60,26)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7231%" y="645" width="0.0798%" height="15" fill="rgb(211,200,19)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="655.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.7231%" y="709" width="0.2394%" height="15" fill="rgb(242,145,30)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.7231%" y="693" width="0.2394%" height="15" fill="rgb(225,64,13)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.7231%" y="677" width="0.2394%" height="15" fill="rgb(218,103,35)" fg:x="1237" fg:w="3"/><text x="98.9731%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8029%" y="661" width="0.1596%" height="15" fill="rgb(216,93,46)" fg:x="1238" fg:w="2"/><text x="99.0529%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8029%" y="645" width="0.1596%" height="15" fill="rgb(225,159,27)" fg:x="1238" fg:w="2"/><text x="99.0529%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8029%" y="629" width="0.1596%" height="15" fill="rgb(225,204,11)" fg:x="1238" fg:w="2"/><text x="99.0529%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8827%" y="613" width="0.0798%" height="15" fill="rgb(205,56,4)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8827%" y="597" width="0.0798%" height="15" fill="rgb(206,6,35)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="98.9625%" y="677" width="0.0798%" height="15" fill="rgb(247,73,52)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.0423%" y="677" width="0.0798%" height="15" fill="rgb(246,97,4)" fg:x="1241" fg:w="1"/><text x="99.2923%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1221%" y="597" width="0.1596%" height="15" fill="rgb(212,37,15)" fg:x="1242" fg:w="2"/><text x="99.3721%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2019%" y="581" width="0.0798%" height="15" fill="rgb(208,130,40)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="591.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="99.2019%" y="565" width="0.0798%" height="15" fill="rgb(236,55,29)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2019%" y="549" width="0.0798%" height="15" fill="rgb(209,156,45)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2019%" y="533" width="0.0798%" height="15" fill="rgb(249,107,4)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2019%" y="517" width="0.0798%" height="15" fill="rgb(227,7,13)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.1221%" y="629" width="0.3192%" height="15" fill="rgb(250,129,14)" fg:x="1242" fg:w="4"/><text x="99.3721%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.1221%" y="613" width="0.3192%" height="15" fill="rgb(229,92,13)" fg:x="1242" fg:w="4"/><text x="99.3721%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.2817%" y="597" width="0.1596%" height="15" fill="rgb(245,98,39)" fg:x="1244" fg:w="2"/><text x="99.5317%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3615%" y="581" width="0.0798%" height="15" fill="rgb(234,135,48)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.3615%" y="565" width="0.0798%" height="15" fill="rgb(230,98,28)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="99.3615%" y="549" width="0.0798%" height="15" fill="rgb(223,121,0)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5211%" y="597" width="0.0798%" height="15" fill="rgb(234,173,33)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="98.7231%" y="725" width="0.9577%" height="15" fill="rgb(245,47,8)" fg:x="1237" fg:w="12"/><text x="98.9731%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="98.9625%" y="709" width="0.7183%" height="15" fill="rgb(205,17,20)" fg:x="1240" fg:w="9"/><text x="99.2125%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="98.9625%" y="693" width="0.7183%" height="15" fill="rgb(232,151,16)" fg:x="1240" fg:w="9"/><text x="99.2125%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="99.1221%" y="677" width="0.5587%" height="15" fill="rgb(208,30,32)" fg:x="1242" fg:w="7"/><text x="99.3721%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="99.1221%" y="661" width="0.5587%" height="15" fill="rgb(254,26,3)" fg:x="1242" fg:w="7"/><text x="99.3721%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="99.1221%" y="645" width="0.5587%" height="15" fill="rgb(240,177,30)" fg:x="1242" fg:w="7"/><text x="99.3721%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="99.4413%" y="629" width="0.2394%" height="15" fill="rgb(248,76,44)" fg:x="1246" fg:w="3"/><text x="99.6913%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="99.4413%" y="613" width="0.2394%" height="15" fill="rgb(241,186,54)" fg:x="1246" fg:w="3"/><text x="99.6913%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.6010%" y="597" width="0.0798%" height="15" fill="rgb(249,171,29)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.6010%" y="581" width="0.0798%" height="15" fill="rgb(237,151,44)" fg:x="1248" fg:w="1"/><text x="99.8510%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6808%" y="725" width="0.0798%" height="15" fill="rgb(228,174,30)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6808%" y="709" width="0.0798%" height="15" fill="rgb(252,14,37)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6808%" y="693" width="0.0798%" height="15" fill="rgb(207,111,40)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.6808%" y="677" width="0.0798%" height="15" fill="rgb(248,171,54)" fg:x="1249" fg:w="1"/><text x="99.9308%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.7606%" y="693" width="0.0798%" height="15" fill="rgb(211,127,2)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.7606%" y="677" width="0.0798%" height="15" fill="rgb(236,87,47)" fg:x="1250" fg:w="1"/><text x="100.0106%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.52%)</title><rect x="98.4038%" y="741" width="1.5164%" height="15" fill="rgb(223,190,45)" fg:x="1233" fg:w="19"/><text x="98.6538%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="99.7606%" y="725" width="0.1596%" height="15" fill="rgb(215,5,16)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.7606%" y="709" width="0.1596%" height="15" fill="rgb(252,82,33)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.8404%" y="693" width="0.0798%" height="15" fill="rgb(247,213,44)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.8404%" y="677" width="0.0798%" height="15" fill="rgb(205,196,44)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="687.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(237,96,54)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1167.50"></text></g><g><title>simple-1389ea1c (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(230,113,34)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1151.50">simple-1389ea1c</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(221,224,12)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(219,112,44)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(210,31,13)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(230,25,16)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(246,108,53)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(241,172,50)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(235,141,10)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(220,174,43)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(215,181,40)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(230,97,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(211,25,27)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,87,26)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(227,160,17)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(244,85,34)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(207,70,0)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(223,129,7)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,105,7)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (297 samples, 23.70%)</title><rect x="76.2969%" y="853" width="23.7031%" height="15" fill="rgb(215,154,42)" fg:x="956" fg:w="297"/><text x="76.5469%" y="863.50">&lt;criterion::routine::Function&lt;M,F,T&gt; a..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (297 samples, 23.70%)</title><rect x="76.2969%" y="837" width="23.7031%" height="15" fill="rgb(220,215,30)" fg:x="956" fg:w="297"/><text x="76.5469%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (297 samples, 23.70%)</title><rect x="76.2969%" y="821" width="23.7031%" height="15" fill="rgb(228,81,51)" fg:x="956" fg:w="297"/><text x="76.5469%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (73 samples, 5.83%)</title><rect x="94.1740%" y="805" width="5.8260%" height="15" fill="rgb(247,71,54)" fg:x="1180" fg:w="73"/><text x="94.4240%" y="815.50">engine:..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (73 samples, 5.83%)</title><rect x="94.1740%" y="789" width="5.8260%" height="15" fill="rgb(234,176,34)" fg:x="1180" fg:w="73"/><text x="94.4240%" y="799.50">engine:..</text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (21 samples, 1.68%)</title><rect x="98.3240%" y="773" width="1.6760%" height="15" fill="rgb(241,103,54)" fg:x="1232" fg:w="21"/><text x="98.5740%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.68%)</title><rect x="98.3240%" y="757" width="1.6760%" height="15" fill="rgb(228,22,34)" fg:x="1232" fg:w="21"/><text x="98.5740%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.9202%" y="741" width="0.0798%" height="15" fill="rgb(241,179,48)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.9202%" y="725" width="0.0798%" height="15" fill="rgb(235,167,37)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.9202%" y="709" width="0.0798%" height="15" fill="rgb(213,109,30)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="719.50"></text></g></svg></svg>