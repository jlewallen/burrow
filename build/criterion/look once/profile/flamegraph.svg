<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1243"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.1609%" y="805" width="0.2414%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.4109%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.1609%" y="789" width="0.2414%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.4109%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.3218%" y="773" width="0.0805%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.5718%" y="783.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.5632%" y="709" width="0.2414%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="3"/><text x="0.8132%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.8045%" y="709" width="0.1609%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="2"/><text x="1.0545%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8045%" y="693" width="0.1609%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="2"/><text x="1.0545%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.0459%" y="693" width="0.1609%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="2"/><text x="1.2959%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.0459%" y="677" width="0.1609%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="2"/><text x="1.2959%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2068%" y="693" width="0.1609%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="2"/><text x="1.4568%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3677%" y="693" width="0.0805%" height="15" fill="rgb(220,122,19)" fg:x="17" fg:w="1"/><text x="1.6177%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5286%" y="677" width="0.1609%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="2"/><text x="1.7786%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.7699%" y="661" width="0.1609%" height="15" fill="rgb(240,193,28)" fg:x="22" fg:w="2"/><text x="2.0199%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8504%" y="645" width="0.0805%" height="15" fill="rgb(216,20,37)" fg:x="23" fg:w="1"/><text x="2.1004%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.93%)</title><rect x="0.4023%" y="741" width="1.9308%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="24"/><text x="0.6523%" y="751.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.5632%" y="725" width="1.7699%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="22"/><text x="0.8132%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="0.9654%" y="709" width="1.3677%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="17"/><text x="1.2154%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="1.4481%" y="693" width="0.8850%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="11"/><text x="1.6981%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.6895%" y="677" width="0.6436%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="8"/><text x="1.9395%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.9308%" y="661" width="0.4023%" height="15" fill="rgb(221,200,47)" fg:x="24" fg:w="5"/><text x="2.1808%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.1722%" y="645" width="0.1609%" height="15" fill="rgb(226,26,5)" fg:x="27" fg:w="2"/><text x="2.4222%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2526%" y="629" width="0.0805%" height="15" fill="rgb(249,33,26)" fg:x="28" fg:w="1"/><text x="2.5026%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.01%)</title><rect x="0.4023%" y="757" width="2.0113%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="25"/><text x="0.6523%" y="767.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3331%" y="741" width="0.0805%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="1"/><text x="2.5831%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.33%)</title><rect x="0.1609%" y="821" width="2.3331%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="29"/><text x="0.4109%" y="831.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.09%)</title><rect x="0.4023%" y="805" width="2.0917%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="26"/><text x="0.6523%" y="815.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.09%)</title><rect x="0.4023%" y="789" width="2.0917%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="26"/><text x="0.6523%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (26 samples, 2.09%)</title><rect x="0.4023%" y="773" width="2.0917%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="26"/><text x="0.6523%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.4135%" y="757" width="0.0805%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="1"/><text x="2.6635%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4135%" y="741" width="0.0805%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="1"/><text x="2.6635%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.6549%" y="789" width="0.0805%" height="15" fill="rgb(232,36,49)" fg:x="33" fg:w="1"/><text x="2.9049%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.1376%" y="725" width="0.0805%" height="15" fill="rgb(209,103,24)" fg:x="39" fg:w="1"/><text x="3.3876%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.1376%" y="709" width="0.0805%" height="15" fill="rgb(229,88,8)" fg:x="39" fg:w="1"/><text x="3.3876%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.1376%" y="693" width="0.0805%" height="15" fill="rgb(213,181,19)" fg:x="39" fg:w="1"/><text x="3.3876%" y="703.50"></text></g><g><title>&lt;alloc::ffi::c_str::NulError as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="3.2180%" y="709" width="0.0805%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="1"/><text x="3.4680%" y="719.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.2985%" y="709" width="0.1609%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="2"/><text x="3.5485%" y="719.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="3.3789%" y="693" width="0.0805%" height="15" fill="rgb(233,36,39)" fg:x="42" fg:w="1"/><text x="3.6289%" y="703.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.3789%" y="677" width="0.0805%" height="15" fill="rgb(226,3,54)" fg:x="42" fg:w="1"/><text x="3.6289%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (18 samples, 1.45%)</title><rect x="2.9767%" y="741" width="1.4481%" height="15" fill="rgb(245,192,40)" fg:x="37" fg:w="18"/><text x="3.2267%" y="751.50"></text></g><g><title>libloading::safe::Library::new (15 samples, 1.21%)</title><rect x="3.2180%" y="725" width="1.2068%" height="15" fill="rgb(238,167,29)" fg:x="40" fg:w="15"/><text x="3.4680%" y="735.50"></text></g><g><title>dlopen (12 samples, 0.97%)</title><rect x="3.4594%" y="709" width="0.9654%" height="15" fill="rgb(232,182,51)" fg:x="43" fg:w="12"/><text x="3.7094%" y="719.50"></text></g><g><title>_dl_catch_error (12 samples, 0.97%)</title><rect x="3.4594%" y="693" width="0.9654%" height="15" fill="rgb(231,60,39)" fg:x="43" fg:w="12"/><text x="3.7094%" y="703.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.4594%" y="677" width="0.9654%" height="15" fill="rgb(208,69,12)" fg:x="43" fg:w="12"/><text x="3.7094%" y="687.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.4594%" y="661" width="0.9654%" height="15" fill="rgb(235,93,37)" fg:x="43" fg:w="12"/><text x="3.7094%" y="671.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="3.4594%" y="645" width="0.9654%" height="15" fill="rgb(213,116,39)" fg:x="43" fg:w="12"/><text x="3.7094%" y="655.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="4.4248%" y="725" width="0.0805%" height="15" fill="rgb(222,207,29)" fg:x="55" fg:w="1"/><text x="4.6748%" y="735.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (20 samples, 1.61%)</title><rect x="2.9767%" y="757" width="1.6090%" height="15" fill="rgb(206,96,30)" fg:x="37" fg:w="20"/><text x="3.2267%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="4.4248%" y="741" width="0.1609%" height="15" fill="rgb(218,138,4)" fg:x="55" fg:w="2"/><text x="4.6748%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.5052%" y="725" width="0.0805%" height="15" fill="rgb(250,191,14)" fg:x="56" fg:w="1"/><text x="4.7552%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.7466%" y="725" width="0.0805%" height="15" fill="rgb(239,60,40)" fg:x="59" fg:w="1"/><text x="4.9966%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.7466%" y="709" width="0.0805%" height="15" fill="rgb(206,27,48)" fg:x="59" fg:w="1"/><text x="4.9966%" y="719.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="4.8270%" y="725" width="0.0805%" height="15" fill="rgb(225,35,8)" fg:x="60" fg:w="1"/><text x="5.0770%" y="735.50"></text></g><g><title>engine::session::Session::initialize (28 samples, 2.25%)</title><rect x="2.8158%" y="773" width="2.2526%" height="15" fill="rgb(250,213,24)" fg:x="35" fg:w="28"/><text x="3.0658%" y="783.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.48%)</title><rect x="4.5857%" y="757" width="0.4827%" height="15" fill="rgb(247,123,22)" fg:x="57" fg:w="6"/><text x="4.8357%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="4.5857%" y="741" width="0.4827%" height="15" fill="rgb(231,138,38)" fg:x="57" fg:w="6"/><text x="4.8357%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.9075%" y="725" width="0.1609%" height="15" fill="rgb(231,145,46)" fg:x="61" fg:w="2"/><text x="5.1575%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.9075%" y="709" width="0.1609%" height="15" fill="rgb(251,118,11)" fg:x="61" fg:w="2"/><text x="5.1575%" y="719.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.9075%" y="693" width="0.1609%" height="15" fill="rgb(217,147,25)" fg:x="61" fg:w="2"/><text x="5.1575%" y="703.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="5.0684%" y="741" width="0.0805%" height="15" fill="rgb(247,81,37)" fg:x="63" fg:w="1"/><text x="5.3184%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0684%" y="725" width="0.0805%" height="15" fill="rgb(209,12,38)" fg:x="63" fg:w="1"/><text x="5.3184%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (34 samples, 2.74%)</title><rect x="2.4940%" y="821" width="2.7353%" height="15" fill="rgb(227,1,9)" fg:x="31" fg:w="34"/><text x="2.7440%" y="831.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (34 samples, 2.74%)</title><rect x="2.4940%" y="805" width="2.7353%" height="15" fill="rgb(248,47,43)" fg:x="31" fg:w="34"/><text x="2.7440%" y="815.50">en..</text></g><g><title>engine::session::Session::new (31 samples, 2.49%)</title><rect x="2.7353%" y="789" width="2.4940%" height="15" fill="rgb(221,10,30)" fg:x="34" fg:w="31"/><text x="2.9853%" y="799.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="5.0684%" y="773" width="0.1609%" height="15" fill="rgb(210,229,1)" fg:x="63" fg:w="2"/><text x="5.3184%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.0684%" y="757" width="0.1609%" height="15" fill="rgb(222,148,37)" fg:x="63" fg:w="2"/><text x="5.3184%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.1488%" y="741" width="0.0805%" height="15" fill="rgb(234,67,33)" fg:x="64" fg:w="1"/><text x="5.3988%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.1488%" y="725" width="0.0805%" height="15" fill="rgb(247,98,35)" fg:x="64" fg:w="1"/><text x="5.3988%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.1488%" y="709" width="0.0805%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="1"/><text x="5.3988%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="5.2293%" y="805" width="0.1609%" height="15" fill="rgb(213,79,30)" fg:x="65" fg:w="2"/><text x="5.4793%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="5.2293%" y="789" width="0.1609%" height="15" fill="rgb(246,177,23)" fg:x="65" fg:w="2"/><text x="5.4793%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.3097%" y="773" width="0.0805%" height="15" fill="rgb(230,62,27)" fg:x="66" fg:w="1"/><text x="5.5597%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3902%" y="773" width="0.0805%" height="15" fill="rgb(216,154,8)" fg:x="67" fg:w="1"/><text x="5.6402%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.3902%" y="757" width="0.0805%" height="15" fill="rgb(244,35,45)" fg:x="67" fg:w="1"/><text x="5.6402%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.3902%" y="741" width="0.0805%" height="15" fill="rgb(251,115,12)" fg:x="67" fg:w="1"/><text x="5.6402%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.3902%" y="725" width="0.0805%" height="15" fill="rgb(240,54,50)" fg:x="67" fg:w="1"/><text x="5.6402%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.3902%" y="709" width="0.0805%" height="15" fill="rgb(233,84,52)" fg:x="67" fg:w="1"/><text x="5.6402%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.3902%" y="693" width="0.0805%" height="15" fill="rgb(207,117,47)" fg:x="67" fg:w="1"/><text x="5.6402%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.3902%" y="677" width="0.0805%" height="15" fill="rgb(249,43,39)" fg:x="67" fg:w="1"/><text x="5.6402%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.3902%" y="661" width="0.0805%" height="15" fill="rgb(209,38,44)" fg:x="67" fg:w="1"/><text x="5.6402%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.3902%" y="645" width="0.0805%" height="15" fill="rgb(236,212,23)" fg:x="67" fg:w="1"/><text x="5.6402%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.3902%" y="629" width="0.0805%" height="15" fill="rgb(242,79,21)" fg:x="67" fg:w="1"/><text x="5.6402%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.3902%" y="613" width="0.0805%" height="15" fill="rgb(211,96,35)" fg:x="67" fg:w="1"/><text x="5.6402%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.3902%" y="597" width="0.0805%" height="15" fill="rgb(253,215,40)" fg:x="67" fg:w="1"/><text x="5.6402%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="5.3902%" y="789" width="0.1609%" height="15" fill="rgb(211,81,21)" fg:x="67" fg:w="2"/><text x="5.6402%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4706%" y="773" width="0.0805%" height="15" fill="rgb(208,190,38)" fg:x="68" fg:w="1"/><text x="5.7206%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="5.6315%" y="725" width="0.0805%" height="15" fill="rgb(235,213,38)" fg:x="70" fg:w="1"/><text x="5.8815%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6315%" y="709" width="0.0805%" height="15" fill="rgb(237,122,38)" fg:x="70" fg:w="1"/><text x="5.8815%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.6315%" y="693" width="0.0805%" height="15" fill="rgb(244,218,35)" fg:x="70" fg:w="1"/><text x="5.8815%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.6315%" y="677" width="0.0805%" height="15" fill="rgb(240,68,47)" fg:x="70" fg:w="1"/><text x="5.8815%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.6315%" y="661" width="0.0805%" height="15" fill="rgb(210,16,53)" fg:x="70" fg:w="1"/><text x="5.8815%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.6315%" y="645" width="0.0805%" height="15" fill="rgb(235,124,12)" fg:x="70" fg:w="1"/><text x="5.8815%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6315%" y="629" width="0.0805%" height="15" fill="rgb(224,169,11)" fg:x="70" fg:w="1"/><text x="5.8815%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.6315%" y="613" width="0.0805%" height="15" fill="rgb(250,166,2)" fg:x="70" fg:w="1"/><text x="5.8815%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.6315%" y="597" width="0.0805%" height="15" fill="rgb(242,216,29)" fg:x="70" fg:w="1"/><text x="5.8815%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.6315%" y="581" width="0.0805%" height="15" fill="rgb(230,116,27)" fg:x="70" fg:w="1"/><text x="5.8815%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.6315%" y="565" width="0.0805%" height="15" fill="rgb(228,99,48)" fg:x="70" fg:w="1"/><text x="5.8815%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.6315%" y="549" width="0.0805%" height="15" fill="rgb(253,11,6)" fg:x="70" fg:w="1"/><text x="5.8815%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.6315%" y="533" width="0.0805%" height="15" fill="rgb(247,143,39)" fg:x="70" fg:w="1"/><text x="5.8815%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.6315%" y="757" width="0.1609%" height="15" fill="rgb(236,97,10)" fg:x="70" fg:w="2"/><text x="5.8815%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="5.6315%" y="741" width="0.1609%" height="15" fill="rgb(233,208,19)" fg:x="70" fg:w="2"/><text x="5.8815%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7120%" y="725" width="0.0805%" height="15" fill="rgb(216,164,2)" fg:x="71" fg:w="1"/><text x="5.9620%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="5.7924%" y="741" width="0.0805%" height="15" fill="rgb(220,129,5)" fg:x="72" fg:w="1"/><text x="6.0424%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.7924%" y="725" width="0.0805%" height="15" fill="rgb(242,17,10)" fg:x="72" fg:w="1"/><text x="6.0424%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.7924%" y="709" width="0.0805%" height="15" fill="rgb(242,107,0)" fg:x="72" fg:w="1"/><text x="6.0424%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="6.0338%" y="709" width="0.1609%" height="15" fill="rgb(251,28,31)" fg:x="75" fg:w="2"/><text x="6.2838%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.0338%" y="693" width="0.1609%" height="15" fill="rgb(233,223,10)" fg:x="75" fg:w="2"/><text x="6.2838%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.1142%" y="677" width="0.0805%" height="15" fill="rgb(215,21,27)" fg:x="76" fg:w="1"/><text x="6.3642%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1142%" y="661" width="0.0805%" height="15" fill="rgb(232,23,21)" fg:x="76" fg:w="1"/><text x="6.3642%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1142%" y="645" width="0.0805%" height="15" fill="rgb(244,5,23)" fg:x="76" fg:w="1"/><text x="6.3642%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.3556%" y="693" width="0.0805%" height="15" fill="rgb(226,81,46)" fg:x="79" fg:w="1"/><text x="6.6056%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5165%" y="645" width="0.0805%" height="15" fill="rgb(247,70,30)" fg:x="81" fg:w="1"/><text x="6.7665%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.5165%" y="629" width="0.0805%" height="15" fill="rgb(212,68,19)" fg:x="81" fg:w="1"/><text x="6.7665%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5165%" y="613" width="0.0805%" height="15" fill="rgb(240,187,13)" fg:x="81" fg:w="1"/><text x="6.7665%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5165%" y="597" width="0.0805%" height="15" fill="rgb(223,113,26)" fg:x="81" fg:w="1"/><text x="6.7665%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="6.5165%" y="677" width="0.1609%" height="15" fill="rgb(206,192,2)" fg:x="81" fg:w="2"/><text x="6.7665%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.5165%" y="661" width="0.1609%" height="15" fill="rgb(241,108,4)" fg:x="81" fg:w="2"/><text x="6.7665%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5969%" y="645" width="0.0805%" height="15" fill="rgb(247,173,49)" fg:x="82" fg:w="1"/><text x="6.8469%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5969%" y="629" width="0.0805%" height="15" fill="rgb(224,114,35)" fg:x="82" fg:w="1"/><text x="6.8469%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.6774%" y="677" width="0.1609%" height="15" fill="rgb(245,159,27)" fg:x="83" fg:w="2"/><text x="6.9274%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6774%" y="661" width="0.1609%" height="15" fill="rgb(245,172,44)" fg:x="83" fg:w="2"/><text x="6.9274%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.6774%" y="645" width="0.1609%" height="15" fill="rgb(236,23,11)" fg:x="83" fg:w="2"/><text x="6.9274%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7578%" y="629" width="0.0805%" height="15" fill="rgb(205,117,38)" fg:x="84" fg:w="1"/><text x="7.0078%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.8383%" y="661" width="0.1609%" height="15" fill="rgb(237,72,25)" fg:x="85" fg:w="2"/><text x="7.0883%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.8383%" y="645" width="0.1609%" height="15" fill="rgb(244,70,9)" fg:x="85" fg:w="2"/><text x="7.0883%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.9992%" y="645" width="0.0805%" height="15" fill="rgb(217,125,39)" fg:x="87" fg:w="1"/><text x="7.2492%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9992%" y="629" width="0.0805%" height="15" fill="rgb(235,36,10)" fg:x="87" fg:w="1"/><text x="7.2492%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9992%" y="613" width="0.0805%" height="15" fill="rgb(251,123,47)" fg:x="87" fg:w="1"/><text x="7.2492%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="7.0796%" y="629" width="0.1609%" height="15" fill="rgb(221,13,13)" fg:x="88" fg:w="2"/><text x="7.3296%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.2405%" y="629" width="0.0805%" height="15" fill="rgb(238,131,9)" fg:x="90" fg:w="1"/><text x="7.4905%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.3210%" y="613" width="0.2414%" height="15" fill="rgb(211,50,8)" fg:x="91" fg:w="3"/><text x="7.5710%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.3210%" y="597" width="0.2414%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="3"/><text x="7.5710%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.3210%" y="581" width="0.2414%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="3"/><text x="7.5710%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.4014%" y="565" width="0.1609%" height="15" fill="rgb(246,228,12)" fg:x="92" fg:w="2"/><text x="7.6514%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="7.3210%" y="629" width="0.4023%" height="15" fill="rgb(213,55,15)" fg:x="91" fg:w="5"/><text x="7.5710%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.5623%" y="613" width="0.1609%" height="15" fill="rgb(209,9,3)" fg:x="94" fg:w="2"/><text x="7.8123%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6428%" y="597" width="0.0805%" height="15" fill="rgb(230,59,30)" fg:x="95" fg:w="1"/><text x="7.8928%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="6.9992%" y="661" width="0.8045%" height="15" fill="rgb(209,121,21)" fg:x="87" fg:w="10"/><text x="7.2492%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="7.0796%" y="645" width="0.7241%" height="15" fill="rgb(220,109,13)" fg:x="88" fg:w="9"/><text x="7.3296%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.7233%" y="629" width="0.0805%" height="15" fill="rgb(232,18,1)" fg:x="96" fg:w="1"/><text x="7.9733%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="6.8383%" y="677" width="1.0459%" height="15" fill="rgb(215,41,42)" fg:x="85" fg:w="13"/><text x="7.0883%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.8037%" y="661" width="0.0805%" height="15" fill="rgb(224,123,36)" fg:x="97" fg:w="1"/><text x="8.0537%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.8037%" y="645" width="0.0805%" height="15" fill="rgb(240,125,3)" fg:x="97" fg:w="1"/><text x="8.0537%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.8037%" y="629" width="0.0805%" height="15" fill="rgb(205,98,50)" fg:x="97" fg:w="1"/><text x="8.0537%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="6.4360%" y="693" width="1.5286%" height="15" fill="rgb(205,185,37)" fg:x="80" fg:w="19"/><text x="6.6860%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.8842%" y="677" width="0.0805%" height="15" fill="rgb(238,207,15)" fg:x="98" fg:w="1"/><text x="8.1342%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.17%)</title><rect x="5.9533%" y="725" width="2.1722%" height="15" fill="rgb(213,199,42)" fg:x="74" fg:w="27"/><text x="6.2033%" y="735.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="6.1947%" y="709" width="1.9308%" height="15" fill="rgb(235,201,11)" fg:x="77" fg:w="24"/><text x="6.4447%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.9646%" y="693" width="0.1609%" height="15" fill="rgb(207,46,11)" fg:x="99" fg:w="2"/><text x="8.2146%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.0451%" y="677" width="0.0805%" height="15" fill="rgb(241,35,35)" fg:x="100" fg:w="1"/><text x="8.2951%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2060%" y="693" width="0.0805%" height="15" fill="rgb(243,32,47)" fg:x="102" fg:w="1"/><text x="8.4560%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="8.2864%" y="677" width="0.2414%" height="15" fill="rgb(247,202,23)" fg:x="103" fg:w="3"/><text x="8.5364%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5278%" y="661" width="0.0805%" height="15" fill="rgb(219,102,11)" fg:x="106" fg:w="1"/><text x="8.7778%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="8.1255%" y="725" width="0.5632%" height="15" fill="rgb(243,110,44)" fg:x="101" fg:w="7"/><text x="8.3755%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="8.2060%" y="709" width="0.4827%" height="15" fill="rgb(222,74,54)" fg:x="102" fg:w="6"/><text x="8.4560%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="8.2864%" y="693" width="0.4023%" height="15" fill="rgb(216,99,12)" fg:x="103" fg:w="5"/><text x="8.5364%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.5278%" y="677" width="0.1609%" height="15" fill="rgb(226,22,26)" fg:x="106" fg:w="2"/><text x="8.7778%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.6082%" y="661" width="0.0805%" height="15" fill="rgb(217,163,10)" fg:x="107" fg:w="1"/><text x="8.8582%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.6887%" y="677" width="0.1609%" height="15" fill="rgb(213,25,53)" fg:x="108" fg:w="2"/><text x="8.9387%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.6887%" y="661" width="0.1609%" height="15" fill="rgb(252,105,26)" fg:x="108" fg:w="2"/><text x="8.9387%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="8.6887%" y="645" width="0.1609%" height="15" fill="rgb(220,39,43)" fg:x="108" fg:w="2"/><text x="8.9387%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="8.8496%" y="661" width="0.0805%" height="15" fill="rgb(229,68,48)" fg:x="110" fg:w="1"/><text x="9.0996%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="8.8496%" y="677" width="0.1609%" height="15" fill="rgb(252,8,32)" fg:x="110" fg:w="2"/><text x="9.0996%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.9300%" y="661" width="0.0805%" height="15" fill="rgb(223,20,43)" fg:x="111" fg:w="1"/><text x="9.1800%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9300%" y="645" width="0.0805%" height="15" fill="rgb(229,81,49)" fg:x="111" fg:w="1"/><text x="9.1800%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="9.0105%" y="677" width="0.1609%" height="15" fill="rgb(236,28,36)" fg:x="112" fg:w="2"/><text x="9.2605%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="9.0105%" y="661" width="0.1609%" height="15" fill="rgb(249,185,26)" fg:x="112" fg:w="2"/><text x="9.2605%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.0909%" y="645" width="0.0805%" height="15" fill="rgb(249,174,33)" fg:x="113" fg:w="1"/><text x="9.3409%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.3323%" y="613" width="0.0805%" height="15" fill="rgb(233,201,37)" fg:x="116" fg:w="1"/><text x="9.5823%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4127%" y="581" width="0.0805%" height="15" fill="rgb(221,78,26)" fg:x="117" fg:w="1"/><text x="9.6627%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4127%" y="565" width="0.0805%" height="15" fill="rgb(250,127,30)" fg:x="117" fg:w="1"/><text x="9.6627%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4127%" y="549" width="0.0805%" height="15" fill="rgb(230,49,44)" fg:x="117" fg:w="1"/><text x="9.6627%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="9.2518%" y="629" width="0.4023%" height="15" fill="rgb(229,67,23)" fg:x="115" fg:w="5"/><text x="9.5018%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.4127%" y="613" width="0.2414%" height="15" fill="rgb(249,83,47)" fg:x="117" fg:w="3"/><text x="9.6627%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.4127%" y="597" width="0.2414%" height="15" fill="rgb(215,43,3)" fg:x="117" fg:w="3"/><text x="9.6627%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.4932%" y="581" width="0.1609%" height="15" fill="rgb(238,154,13)" fg:x="118" fg:w="2"/><text x="9.7432%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5736%" y="565" width="0.0805%" height="15" fill="rgb(219,56,2)" fg:x="119" fg:w="1"/><text x="9.8236%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="9.6541%" y="581" width="0.1609%" height="15" fill="rgb(233,0,4)" fg:x="120" fg:w="2"/><text x="9.9041%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.6541%" y="565" width="0.1609%" height="15" fill="rgb(235,30,7)" fg:x="120" fg:w="2"/><text x="9.9041%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.7345%" y="549" width="0.0805%" height="15" fill="rgb(250,79,13)" fg:x="121" fg:w="1"/><text x="9.9845%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.7345%" y="533" width="0.0805%" height="15" fill="rgb(211,146,34)" fg:x="121" fg:w="1"/><text x="9.9845%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7345%" y="517" width="0.0805%" height="15" fill="rgb(228,22,38)" fg:x="121" fg:w="1"/><text x="9.9845%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="9.2518%" y="645" width="0.6436%" height="15" fill="rgb(235,168,5)" fg:x="115" fg:w="8"/><text x="9.5018%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.6541%" y="629" width="0.2414%" height="15" fill="rgb(221,155,16)" fg:x="120" fg:w="3"/><text x="9.9041%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.6541%" y="613" width="0.2414%" height="15" fill="rgb(215,215,53)" fg:x="120" fg:w="3"/><text x="9.9041%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.6541%" y="597" width="0.2414%" height="15" fill="rgb(223,4,10)" fg:x="120" fg:w="3"/><text x="9.9041%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8150%" y="581" width="0.0805%" height="15" fill="rgb(234,103,6)" fg:x="122" fg:w="1"/><text x="10.0650%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="9.2518%" y="661" width="0.8850%" height="15" fill="rgb(227,97,0)" fg:x="115" fg:w="11"/><text x="9.5018%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="9.8954%" y="645" width="0.2414%" height="15" fill="rgb(234,150,53)" fg:x="123" fg:w="3"/><text x="10.1454%" y="655.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="9.8954%" y="629" width="0.2414%" height="15" fill="rgb(228,201,54)" fg:x="123" fg:w="3"/><text x="10.1454%" y="639.50"></text></g><g><title>engine::session::Session::flush (61 samples, 4.91%)</title><rect x="5.3902%" y="805" width="4.9075%" height="15" fill="rgb(222,22,37)" fg:x="67" fg:w="61"/><text x="5.6402%" y="815.50">engine..</text></g><g><title>engine::session::state::State::close (59 samples, 4.75%)</title><rect x="5.5511%" y="789" width="4.7466%" height="15" fill="rgb(237,53,32)" fg:x="69" fg:w="59"/><text x="5.8011%" y="799.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (58 samples, 4.67%)</title><rect x="5.6315%" y="773" width="4.6661%" height="15" fill="rgb(233,25,53)" fg:x="70" fg:w="58"/><text x="5.8815%" y="783.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (56 samples, 4.51%)</title><rect x="5.7924%" y="757" width="4.5052%" height="15" fill="rgb(210,40,34)" fg:x="72" fg:w="56"/><text x="6.0424%" y="767.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.42%)</title><rect x="5.8729%" y="741" width="4.4248%" height="15" fill="rgb(241,220,44)" fg:x="73" fg:w="55"/><text x="6.1229%" y="751.50">engin..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.61%)</title><rect x="8.6887%" y="725" width="1.6090%" height="15" fill="rgb(235,28,35)" fg:x="108" fg:w="20"/><text x="8.9387%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.61%)</title><rect x="8.6887%" y="709" width="1.6090%" height="15" fill="rgb(210,56,17)" fg:x="108" fg:w="20"/><text x="8.9387%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.61%)</title><rect x="8.6887%" y="693" width="1.6090%" height="15" fill="rgb(224,130,29)" fg:x="108" fg:w="20"/><text x="8.9387%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.13%)</title><rect x="9.1714%" y="677" width="1.1263%" height="15" fill="rgb(235,212,8)" fg:x="114" fg:w="14"/><text x="9.4214%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.1368%" y="661" width="0.1609%" height="15" fill="rgb(223,33,50)" fg:x="126" fg:w="2"/><text x="10.3868%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.3781%" y="565" width="0.0805%" height="15" fill="rgb(219,149,13)" fg:x="129" fg:w="1"/><text x="10.6281%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.3781%" y="549" width="0.0805%" height="15" fill="rgb(250,156,29)" fg:x="129" fg:w="1"/><text x="10.6281%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.3781%" y="533" width="0.0805%" height="15" fill="rgb(216,193,19)" fg:x="129" fg:w="1"/><text x="10.6281%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.3781%" y="517" width="0.0805%" height="15" fill="rgb(216,135,14)" fg:x="129" fg:w="1"/><text x="10.6281%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.3781%" y="501" width="0.0805%" height="15" fill="rgb(241,47,5)" fg:x="129" fg:w="1"/><text x="10.6281%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.3781%" y="485" width="0.0805%" height="15" fill="rgb(233,42,35)" fg:x="129" fg:w="1"/><text x="10.6281%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.3781%" y="469" width="0.0805%" height="15" fill="rgb(231,13,6)" fg:x="129" fg:w="1"/><text x="10.6281%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.3781%" y="453" width="0.0805%" height="15" fill="rgb(207,181,40)" fg:x="129" fg:w="1"/><text x="10.6281%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.3781%" y="437" width="0.0805%" height="15" fill="rgb(254,173,49)" fg:x="129" fg:w="1"/><text x="10.6281%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.3781%" y="421" width="0.0805%" height="15" fill="rgb(221,1,38)" fg:x="129" fg:w="1"/><text x="10.6281%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.3781%" y="405" width="0.0805%" height="15" fill="rgb(206,124,46)" fg:x="129" fg:w="1"/><text x="10.6281%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="10.3781%" y="773" width="0.1609%" height="15" fill="rgb(249,21,11)" fg:x="129" fg:w="2"/><text x="10.6281%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="10.3781%" y="757" width="0.1609%" height="15" fill="rgb(222,201,40)" fg:x="129" fg:w="2"/><text x="10.6281%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="10.3781%" y="741" width="0.1609%" height="15" fill="rgb(235,61,29)" fg:x="129" fg:w="2"/><text x="10.6281%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="725" width="0.1609%" height="15" fill="rgb(219,207,3)" fg:x="129" fg:w="2"/><text x="10.6281%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="10.3781%" y="709" width="0.1609%" height="15" fill="rgb(222,56,46)" fg:x="129" fg:w="2"/><text x="10.6281%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="693" width="0.1609%" height="15" fill="rgb(239,76,54)" fg:x="129" fg:w="2"/><text x="10.6281%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="677" width="0.1609%" height="15" fill="rgb(231,124,27)" fg:x="129" fg:w="2"/><text x="10.6281%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="661" width="0.1609%" height="15" fill="rgb(249,195,6)" fg:x="129" fg:w="2"/><text x="10.6281%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="10.3781%" y="645" width="0.1609%" height="15" fill="rgb(237,174,47)" fg:x="129" fg:w="2"/><text x="10.6281%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="629" width="0.1609%" height="15" fill="rgb(206,201,31)" fg:x="129" fg:w="2"/><text x="10.6281%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="613" width="0.1609%" height="15" fill="rgb(231,57,52)" fg:x="129" fg:w="2"/><text x="10.6281%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="10.3781%" y="597" width="0.1609%" height="15" fill="rgb(248,177,22)" fg:x="129" fg:w="2"/><text x="10.6281%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="10.3781%" y="581" width="0.1609%" height="15" fill="rgb(215,211,37)" fg:x="129" fg:w="2"/><text x="10.6281%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.4586%" y="565" width="0.0805%" height="15" fill="rgb(241,128,51)" fg:x="130" fg:w="1"/><text x="10.7086%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4586%" y="549" width="0.0805%" height="15" fill="rgb(227,165,31)" fg:x="130" fg:w="1"/><text x="10.7086%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4586%" y="533" width="0.0805%" height="15" fill="rgb(228,167,24)" fg:x="130" fg:w="1"/><text x="10.7086%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="10.4586%" y="517" width="0.0805%" height="15" fill="rgb(228,143,12)" fg:x="130" fg:w="1"/><text x="10.7086%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="10.4586%" y="501" width="0.0805%" height="15" fill="rgb(249,149,8)" fg:x="130" fg:w="1"/><text x="10.7086%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="10.4586%" y="485" width="0.0805%" height="15" fill="rgb(243,35,44)" fg:x="130" fg:w="1"/><text x="10.7086%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="10.4586%" y="469" width="0.0805%" height="15" fill="rgb(246,89,9)" fg:x="130" fg:w="1"/><text x="10.7086%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.4586%" y="453" width="0.0805%" height="15" fill="rgb(233,213,13)" fg:x="130" fg:w="1"/><text x="10.7086%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="10.4586%" y="437" width="0.0805%" height="15" fill="rgb(233,141,41)" fg:x="130" fg:w="1"/><text x="10.7086%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.4586%" y="421" width="0.0805%" height="15" fill="rgb(239,167,4)" fg:x="130" fg:w="1"/><text x="10.7086%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="10.4586%" y="405" width="0.0805%" height="15" fill="rgb(209,217,16)" fg:x="130" fg:w="1"/><text x="10.7086%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="10.4586%" y="389" width="0.0805%" height="15" fill="rgb(219,88,35)" fg:x="130" fg:w="1"/><text x="10.7086%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="10.4586%" y="373" width="0.0805%" height="15" fill="rgb(220,193,23)" fg:x="130" fg:w="1"/><text x="10.7086%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6195%" y="725" width="0.0805%" height="15" fill="rgb(230,90,52)" fg:x="132" fg:w="1"/><text x="10.8695%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6195%" y="709" width="0.0805%" height="15" fill="rgb(252,106,19)" fg:x="132" fg:w="1"/><text x="10.8695%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6195%" y="693" width="0.0805%" height="15" fill="rgb(206,74,20)" fg:x="132" fg:w="1"/><text x="10.8695%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.6195%" y="677" width="0.0805%" height="15" fill="rgb(230,138,44)" fg:x="132" fg:w="1"/><text x="10.8695%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6195%" y="661" width="0.0805%" height="15" fill="rgb(235,182,43)" fg:x="132" fg:w="1"/><text x="10.8695%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6195%" y="645" width="0.0805%" height="15" fill="rgb(242,16,51)" fg:x="132" fg:w="1"/><text x="10.8695%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.6195%" y="629" width="0.0805%" height="15" fill="rgb(248,9,4)" fg:x="132" fg:w="1"/><text x="10.8695%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.6195%" y="613" width="0.0805%" height="15" fill="rgb(210,31,22)" fg:x="132" fg:w="1"/><text x="10.8695%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.6195%" y="597" width="0.0805%" height="15" fill="rgb(239,54,39)" fg:x="132" fg:w="1"/><text x="10.8695%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6195%" y="581" width="0.0805%" height="15" fill="rgb(230,99,41)" fg:x="132" fg:w="1"/><text x="10.8695%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6195%" y="565" width="0.0805%" height="15" fill="rgb(253,106,12)" fg:x="132" fg:w="1"/><text x="10.8695%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.6195%" y="549" width="0.0805%" height="15" fill="rgb(213,46,41)" fg:x="132" fg:w="1"/><text x="10.8695%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.6195%" y="533" width="0.0805%" height="15" fill="rgb(215,133,35)" fg:x="132" fg:w="1"/><text x="10.8695%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.6195%" y="517" width="0.0805%" height="15" fill="rgb(213,28,5)" fg:x="132" fg:w="1"/><text x="10.8695%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.6195%" y="501" width="0.0805%" height="15" fill="rgb(215,77,49)" fg:x="132" fg:w="1"/><text x="10.8695%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6195%" y="485" width="0.0805%" height="15" fill="rgb(248,100,22)" fg:x="132" fg:w="1"/><text x="10.8695%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="10.5390%" y="773" width="0.2414%" height="15" fill="rgb(208,67,9)" fg:x="131" fg:w="3"/><text x="10.7890%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.6195%" y="757" width="0.1609%" height="15" fill="rgb(219,133,21)" fg:x="132" fg:w="2"/><text x="10.8695%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.6195%" y="741" width="0.1609%" height="15" fill="rgb(246,46,29)" fg:x="132" fg:w="2"/><text x="10.8695%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6999%" y="725" width="0.0805%" height="15" fill="rgb(246,185,52)" fg:x="133" fg:w="1"/><text x="10.9499%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6999%" y="709" width="0.0805%" height="15" fill="rgb(252,136,11)" fg:x="133" fg:w="1"/><text x="10.9499%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6999%" y="693" width="0.0805%" height="15" fill="rgb(219,138,53)" fg:x="133" fg:w="1"/><text x="10.9499%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6999%" y="677" width="0.0805%" height="15" fill="rgb(211,51,23)" fg:x="133" fg:w="1"/><text x="10.9499%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.6999%" y="661" width="0.0805%" height="15" fill="rgb(247,221,28)" fg:x="133" fg:w="1"/><text x="10.9499%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.6999%" y="645" width="0.0805%" height="15" fill="rgb(251,222,45)" fg:x="133" fg:w="1"/><text x="10.9499%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.6999%" y="629" width="0.0805%" height="15" fill="rgb(217,162,53)" fg:x="133" fg:w="1"/><text x="10.9499%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.7804%" y="757" width="0.0805%" height="15" fill="rgb(229,93,14)" fg:x="134" fg:w="1"/><text x="11.0304%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.7804%" y="741" width="0.0805%" height="15" fill="rgb(209,67,49)" fg:x="134" fg:w="1"/><text x="11.0304%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="10.7804%" y="725" width="0.0805%" height="15" fill="rgb(213,87,29)" fg:x="134" fg:w="1"/><text x="11.0304%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.7804%" y="709" width="0.0805%" height="15" fill="rgb(205,151,52)" fg:x="134" fg:w="1"/><text x="11.0304%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7804%" y="693" width="0.0805%" height="15" fill="rgb(253,215,39)" fg:x="134" fg:w="1"/><text x="11.0304%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.7804%" y="677" width="0.0805%" height="15" fill="rgb(221,220,41)" fg:x="134" fg:w="1"/><text x="11.0304%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.8608%" y="741" width="0.0805%" height="15" fill="rgb(218,133,21)" fg:x="135" fg:w="1"/><text x="11.1108%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="10.7804%" y="773" width="0.2414%" height="15" fill="rgb(221,193,43)" fg:x="134" fg:w="3"/><text x="11.0304%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.8608%" y="757" width="0.1609%" height="15" fill="rgb(240,128,52)" fg:x="135" fg:w="2"/><text x="11.1108%" y="767.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9413%" y="741" width="0.0805%" height="15" fill="rgb(253,114,12)" fg:x="136" fg:w="1"/><text x="11.1913%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9413%" y="725" width="0.0805%" height="15" fill="rgb(215,223,47)" fg:x="136" fg:w="1"/><text x="11.1913%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9413%" y="709" width="0.0805%" height="15" fill="rgb(248,225,23)" fg:x="136" fg:w="1"/><text x="11.1913%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="11.0217%" y="725" width="0.1609%" height="15" fill="rgb(250,108,0)" fg:x="137" fg:w="2"/><text x="11.2717%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.0217%" y="709" width="0.1609%" height="15" fill="rgb(228,208,7)" fg:x="137" fg:w="2"/><text x="11.2717%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1022%" y="693" width="0.0805%" height="15" fill="rgb(244,45,10)" fg:x="138" fg:w="1"/><text x="11.3522%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1022%" y="677" width="0.0805%" height="15" fill="rgb(207,125,25)" fg:x="138" fg:w="1"/><text x="11.3522%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1022%" y="661" width="0.0805%" height="15" fill="rgb(210,195,18)" fg:x="138" fg:w="1"/><text x="11.3522%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1022%" y="645" width="0.0805%" height="15" fill="rgb(249,80,12)" fg:x="138" fg:w="1"/><text x="11.3522%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.1022%" y="629" width="0.0805%" height="15" fill="rgb(221,65,9)" fg:x="138" fg:w="1"/><text x="11.3522%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1022%" y="613" width="0.0805%" height="15" fill="rgb(235,49,36)" fg:x="138" fg:w="1"/><text x="11.3522%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.1022%" y="597" width="0.0805%" height="15" fill="rgb(225,32,20)" fg:x="138" fg:w="1"/><text x="11.3522%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.1022%" y="581" width="0.0805%" height="15" fill="rgb(215,141,46)" fg:x="138" fg:w="1"/><text x="11.3522%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.1826%" y="709" width="0.0805%" height="15" fill="rgb(250,160,47)" fg:x="139" fg:w="1"/><text x="11.4326%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1826%" y="693" width="0.0805%" height="15" fill="rgb(216,222,40)" fg:x="139" fg:w="1"/><text x="11.4326%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2631%" y="693" width="0.0805%" height="15" fill="rgb(234,217,39)" fg:x="140" fg:w="1"/><text x="11.5131%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.2631%" y="677" width="0.0805%" height="15" fill="rgb(207,178,40)" fg:x="140" fg:w="1"/><text x="11.5131%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2631%" y="661" width="0.0805%" height="15" fill="rgb(221,136,13)" fg:x="140" fg:w="1"/><text x="11.5131%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="11.0217%" y="757" width="0.4023%" height="15" fill="rgb(249,199,10)" fg:x="137" fg:w="5"/><text x="11.2717%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="11.0217%" y="741" width="0.4023%" height="15" fill="rgb(249,222,13)" fg:x="137" fg:w="5"/><text x="11.2717%" y="751.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="11.1826%" y="725" width="0.2414%" height="15" fill="rgb(244,185,38)" fg:x="139" fg:w="3"/><text x="11.4326%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="11.2631%" y="709" width="0.1609%" height="15" fill="rgb(236,202,9)" fg:x="140" fg:w="2"/><text x="11.5131%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3435%" y="693" width="0.0805%" height="15" fill="rgb(250,229,37)" fg:x="141" fg:w="1"/><text x="11.5935%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.3435%" y="677" width="0.0805%" height="15" fill="rgb(206,174,23)" fg:x="141" fg:w="1"/><text x="11.5935%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="11.3435%" y="661" width="0.0805%" height="15" fill="rgb(211,33,43)" fg:x="141" fg:w="1"/><text x="11.5935%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.3435%" y="645" width="0.0805%" height="15" fill="rgb(245,58,50)" fg:x="141" fg:w="1"/><text x="11.5935%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3435%" y="629" width="0.0805%" height="15" fill="rgb(244,68,36)" fg:x="141" fg:w="1"/><text x="11.5935%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3435%" y="613" width="0.0805%" height="15" fill="rgb(232,229,15)" fg:x="141" fg:w="1"/><text x="11.5935%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3435%" y="597" width="0.0805%" height="15" fill="rgb(254,30,23)" fg:x="141" fg:w="1"/><text x="11.5935%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (24 samples, 1.93%)</title><rect x="10.2977%" y="789" width="1.9308%" height="15" fill="rgb(235,160,14)" fg:x="128" fg:w="24"/><text x="10.5477%" y="799.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_entity (15 samples, 1.21%)</title><rect x="11.0217%" y="773" width="1.2068%" height="15" fill="rgb(212,155,44)" fg:x="137" fg:w="15"/><text x="11.2717%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (10 samples, 0.80%)</title><rect x="11.4240%" y="757" width="0.8045%" height="15" fill="rgb(226,2,50)" fg:x="142" fg:w="10"/><text x="11.6740%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.80%)</title><rect x="11.4240%" y="741" width="0.8045%" height="15" fill="rgb(234,177,6)" fg:x="142" fg:w="10"/><text x="11.6740%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.80%)</title><rect x="11.4240%" y="725" width="0.8045%" height="15" fill="rgb(217,24,9)" fg:x="142" fg:w="10"/><text x="11.6740%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.80%)</title><rect x="11.4240%" y="709" width="0.8045%" height="15" fill="rgb(220,13,46)" fg:x="142" fg:w="10"/><text x="11.6740%" y="719.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="11.5044%" y="693" width="0.7241%" height="15" fill="rgb(239,221,27)" fg:x="143" fg:w="9"/><text x="11.7544%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="12.2285%" y="789" width="0.0805%" height="15" fill="rgb(222,198,25)" fg:x="152" fg:w="1"/><text x="12.4785%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2285%" y="773" width="0.0805%" height="15" fill="rgb(211,99,13)" fg:x="152" fg:w="1"/><text x="12.4785%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3089%" y="773" width="0.0805%" height="15" fill="rgb(232,111,31)" fg:x="153" fg:w="1"/><text x="12.5589%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.3089%" y="757" width="0.0805%" height="15" fill="rgb(245,82,37)" fg:x="153" fg:w="1"/><text x="12.5589%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="12.3894%" y="773" width="0.0805%" height="15" fill="rgb(227,149,46)" fg:x="154" fg:w="1"/><text x="12.6394%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="12.3894%" y="757" width="0.0805%" height="15" fill="rgb(218,36,50)" fg:x="154" fg:w="1"/><text x="12.6394%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3894%" y="741" width="0.0805%" height="15" fill="rgb(226,80,48)" fg:x="154" fg:w="1"/><text x="12.6394%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4698%" y="693" width="0.0805%" height="15" fill="rgb(238,224,15)" fg:x="155" fg:w="1"/><text x="12.7198%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4698%" y="677" width="0.0805%" height="15" fill="rgb(241,136,10)" fg:x="155" fg:w="1"/><text x="12.7198%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4698%" y="661" width="0.0805%" height="15" fill="rgb(208,32,45)" fg:x="155" fg:w="1"/><text x="12.7198%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4698%" y="645" width="0.0805%" height="15" fill="rgb(207,135,9)" fg:x="155" fg:w="1"/><text x="12.7198%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4698%" y="629" width="0.0805%" height="15" fill="rgb(206,86,44)" fg:x="155" fg:w="1"/><text x="12.7198%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5503%" y="693" width="0.0805%" height="15" fill="rgb(245,177,15)" fg:x="156" fg:w="1"/><text x="12.8003%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.5503%" y="677" width="0.0805%" height="15" fill="rgb(206,64,50)" fg:x="156" fg:w="1"/><text x="12.8003%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5503%" y="661" width="0.0805%" height="15" fill="rgb(234,36,40)" fg:x="156" fg:w="1"/><text x="12.8003%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5503%" y="645" width="0.0805%" height="15" fill="rgb(213,64,8)" fg:x="156" fg:w="1"/><text x="12.8003%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5503%" y="629" width="0.0805%" height="15" fill="rgb(210,75,36)" fg:x="156" fg:w="1"/><text x="12.8003%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6307%" y="597" width="0.0805%" height="15" fill="rgb(229,88,21)" fg:x="157" fg:w="1"/><text x="12.8807%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="12.4698%" y="741" width="0.3218%" height="15" fill="rgb(252,204,47)" fg:x="155" fg:w="4"/><text x="12.7198%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="12.4698%" y="725" width="0.3218%" height="15" fill="rgb(208,77,27)" fg:x="155" fg:w="4"/><text x="12.7198%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="12.4698%" y="709" width="0.3218%" height="15" fill="rgb(221,76,26)" fg:x="155" fg:w="4"/><text x="12.7198%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.6307%" y="693" width="0.1609%" height="15" fill="rgb(225,139,18)" fg:x="157" fg:w="2"/><text x="12.8807%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.6307%" y="677" width="0.1609%" height="15" fill="rgb(230,137,11)" fg:x="157" fg:w="2"/><text x="12.8807%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.6307%" y="661" width="0.1609%" height="15" fill="rgb(212,28,1)" fg:x="157" fg:w="2"/><text x="12.8807%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.6307%" y="645" width="0.1609%" height="15" fill="rgb(248,164,17)" fg:x="157" fg:w="2"/><text x="12.8807%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="12.6307%" y="629" width="0.1609%" height="15" fill="rgb(222,171,42)" fg:x="157" fg:w="2"/><text x="12.8807%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.6307%" y="613" width="0.1609%" height="15" fill="rgb(243,84,45)" fg:x="157" fg:w="2"/><text x="12.8807%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.7112%" y="597" width="0.0805%" height="15" fill="rgb(252,49,23)" fg:x="158" fg:w="1"/><text x="12.9612%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.7112%" y="581" width="0.0805%" height="15" fill="rgb(215,19,7)" fg:x="158" fg:w="1"/><text x="12.9612%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.7112%" y="565" width="0.0805%" height="15" fill="rgb(238,81,41)" fg:x="158" fg:w="1"/><text x="12.9612%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7112%" y="549" width="0.0805%" height="15" fill="rgb(210,199,37)" fg:x="158" fg:w="1"/><text x="12.9612%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8721%" y="693" width="0.2414%" height="15" fill="rgb(244,192,49)" fg:x="160" fg:w="3"/><text x="13.1221%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8721%" y="677" width="0.2414%" height="15" fill="rgb(226,211,11)" fg:x="160" fg:w="3"/><text x="13.1221%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8721%" y="661" width="0.2414%" height="15" fill="rgb(236,162,54)" fg:x="160" fg:w="3"/><text x="13.1221%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8721%" y="645" width="0.2414%" height="15" fill="rgb(220,229,9)" fg:x="160" fg:w="3"/><text x="13.1221%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8721%" y="629" width="0.2414%" height="15" fill="rgb(250,87,22)" fg:x="160" fg:w="3"/><text x="13.1221%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0330%" y="613" width="0.0805%" height="15" fill="rgb(239,43,17)" fg:x="162" fg:w="1"/><text x="13.2830%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1134%" y="693" width="0.0805%" height="15" fill="rgb(231,177,25)" fg:x="163" fg:w="1"/><text x="13.3634%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.1134%" y="677" width="0.0805%" height="15" fill="rgb(219,179,1)" fg:x="163" fg:w="1"/><text x="13.3634%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1134%" y="661" width="0.0805%" height="15" fill="rgb(238,219,53)" fg:x="163" fg:w="1"/><text x="13.3634%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1134%" y="645" width="0.0805%" height="15" fill="rgb(232,167,36)" fg:x="163" fg:w="1"/><text x="13.3634%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1134%" y="629" width="0.0805%" height="15" fill="rgb(244,19,51)" fg:x="163" fg:w="1"/><text x="13.3634%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="12.4698%" y="773" width="0.8045%" height="15" fill="rgb(224,6,22)" fg:x="155" fg:w="10"/><text x="12.7198%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="12.4698%" y="757" width="0.8045%" height="15" fill="rgb(224,145,5)" fg:x="155" fg:w="10"/><text x="12.7198%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="12.7916%" y="741" width="0.4827%" height="15" fill="rgb(234,130,49)" fg:x="159" fg:w="6"/><text x="13.0416%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="12.7916%" y="725" width="0.4827%" height="15" fill="rgb(254,6,2)" fg:x="159" fg:w="6"/><text x="13.0416%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="12.7916%" y="709" width="0.4827%" height="15" fill="rgb(208,96,46)" fg:x="159" fg:w="6"/><text x="13.0416%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1939%" y="693" width="0.0805%" height="15" fill="rgb(239,3,39)" fg:x="164" fg:w="1"/><text x="13.4439%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1939%" y="677" width="0.0805%" height="15" fill="rgb(233,210,1)" fg:x="164" fg:w="1"/><text x="13.4439%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1939%" y="661" width="0.0805%" height="15" fill="rgb(244,137,37)" fg:x="164" fg:w="1"/><text x="13.4439%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1939%" y="645" width="0.0805%" height="15" fill="rgb(240,136,2)" fg:x="164" fg:w="1"/><text x="13.4439%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2743%" y="725" width="0.0805%" height="15" fill="rgb(239,18,37)" fg:x="165" fg:w="1"/><text x="13.5243%" y="735.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="13.2743%" y="757" width="0.1609%" height="15" fill="rgb(218,185,22)" fg:x="165" fg:w="2"/><text x="13.5243%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.2743%" y="741" width="0.1609%" height="15" fill="rgb(225,218,4)" fg:x="165" fg:w="2"/><text x="13.5243%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.3548%" y="725" width="0.0805%" height="15" fill="rgb(230,182,32)" fg:x="166" fg:w="1"/><text x="13.6048%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.3548%" y="709" width="0.0805%" height="15" fill="rgb(242,56,43)" fg:x="166" fg:w="1"/><text x="13.6048%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.3548%" y="693" width="0.0805%" height="15" fill="rgb(233,99,24)" fg:x="166" fg:w="1"/><text x="13.6048%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3548%" y="677" width="0.0805%" height="15" fill="rgb(234,209,42)" fg:x="166" fg:w="1"/><text x="13.6048%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.2743%" y="773" width="0.2414%" height="15" fill="rgb(227,7,12)" fg:x="165" fg:w="3"/><text x="13.5243%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4352%" y="757" width="0.0805%" height="15" fill="rgb(245,203,43)" fg:x="167" fg:w="1"/><text x="13.6852%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5157%" y="757" width="0.0805%" height="15" fill="rgb(238,205,33)" fg:x="168" fg:w="1"/><text x="13.7657%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5961%" y="677" width="0.1609%" height="15" fill="rgb(231,56,7)" fg:x="169" fg:w="2"/><text x="13.8461%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5961%" y="661" width="0.1609%" height="15" fill="rgb(244,186,29)" fg:x="169" fg:w="2"/><text x="13.8461%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6766%" y="645" width="0.0805%" height="15" fill="rgb(234,111,31)" fg:x="170" fg:w="1"/><text x="13.9266%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6766%" y="629" width="0.0805%" height="15" fill="rgb(241,149,10)" fg:x="170" fg:w="1"/><text x="13.9266%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.8375%" y="581" width="0.0805%" height="15" fill="rgb(249,206,44)" fg:x="172" fg:w="1"/><text x="14.0875%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="13.5961%" y="725" width="0.4023%" height="15" fill="rgb(251,153,30)" fg:x="169" fg:w="5"/><text x="13.8461%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="13.5961%" y="709" width="0.4023%" height="15" fill="rgb(239,152,38)" fg:x="169" fg:w="5"/><text x="13.8461%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.5961%" y="693" width="0.4023%" height="15" fill="rgb(249,139,47)" fg:x="169" fg:w="5"/><text x="13.8461%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="13.7570%" y="677" width="0.2414%" height="15" fill="rgb(244,64,35)" fg:x="171" fg:w="3"/><text x="14.0070%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.7570%" y="661" width="0.2414%" height="15" fill="rgb(216,46,15)" fg:x="171" fg:w="3"/><text x="14.0070%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="13.7570%" y="645" width="0.2414%" height="15" fill="rgb(250,74,19)" fg:x="171" fg:w="3"/><text x="14.0070%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="13.7570%" y="629" width="0.2414%" height="15" fill="rgb(249,42,33)" fg:x="171" fg:w="3"/><text x="14.0070%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.8375%" y="613" width="0.1609%" height="15" fill="rgb(242,149,17)" fg:x="172" fg:w="2"/><text x="14.0875%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.8375%" y="597" width="0.1609%" height="15" fill="rgb(244,29,21)" fg:x="172" fg:w="2"/><text x="14.0875%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9179%" y="581" width="0.0805%" height="15" fill="rgb(220,130,37)" fg:x="173" fg:w="1"/><text x="14.1679%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9179%" y="565" width="0.0805%" height="15" fill="rgb(211,67,2)" fg:x="173" fg:w="1"/><text x="14.1679%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9179%" y="549" width="0.0805%" height="15" fill="rgb(235,68,52)" fg:x="173" fg:w="1"/><text x="14.1679%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9179%" y="533" width="0.0805%" height="15" fill="rgb(246,142,3)" fg:x="173" fg:w="1"/><text x="14.1679%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="13.9179%" y="517" width="0.0805%" height="15" fill="rgb(241,25,7)" fg:x="173" fg:w="1"/><text x="14.1679%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="13.9179%" y="501" width="0.0805%" height="15" fill="rgb(242,119,39)" fg:x="173" fg:w="1"/><text x="14.1679%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="13.9179%" y="485" width="0.0805%" height="15" fill="rgb(241,98,45)" fg:x="173" fg:w="1"/><text x="14.1679%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="13.9179%" y="469" width="0.0805%" height="15" fill="rgb(254,28,30)" fg:x="173" fg:w="1"/><text x="14.1679%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9984%" y="677" width="0.0805%" height="15" fill="rgb(241,142,54)" fg:x="174" fg:w="1"/><text x="14.2484%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9984%" y="661" width="0.0805%" height="15" fill="rgb(222,85,15)" fg:x="174" fg:w="1"/><text x="14.2484%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9984%" y="645" width="0.0805%" height="15" fill="rgb(210,85,47)" fg:x="174" fg:w="1"/><text x="14.2484%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9984%" y="629" width="0.0805%" height="15" fill="rgb(224,206,25)" fg:x="174" fg:w="1"/><text x="14.2484%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9984%" y="613" width="0.0805%" height="15" fill="rgb(243,201,19)" fg:x="174" fg:w="1"/><text x="14.2484%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="13.5157%" y="773" width="0.7241%" height="15" fill="rgb(236,59,4)" fg:x="168" fg:w="9"/><text x="13.7657%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="13.5961%" y="757" width="0.6436%" height="15" fill="rgb(254,179,45)" fg:x="169" fg:w="8"/><text x="13.8461%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="13.5961%" y="741" width="0.6436%" height="15" fill="rgb(226,14,10)" fg:x="169" fg:w="8"/><text x="13.8461%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.9984%" y="725" width="0.2414%" height="15" fill="rgb(244,27,41)" fg:x="174" fg:w="3"/><text x="14.2484%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="13.9984%" y="709" width="0.2414%" height="15" fill="rgb(235,35,32)" fg:x="174" fg:w="3"/><text x="14.2484%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.9984%" y="693" width="0.2414%" height="15" fill="rgb(218,68,31)" fg:x="174" fg:w="3"/><text x="14.2484%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0788%" y="677" width="0.1609%" height="15" fill="rgb(207,120,37)" fg:x="175" fg:w="2"/><text x="14.3288%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0788%" y="661" width="0.1609%" height="15" fill="rgb(227,98,0)" fg:x="175" fg:w="2"/><text x="14.3288%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0788%" y="645" width="0.1609%" height="15" fill="rgb(207,7,3)" fg:x="175" fg:w="2"/><text x="14.3288%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0788%" y="629" width="0.1609%" height="15" fill="rgb(206,98,19)" fg:x="175" fg:w="2"/><text x="14.3288%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.0788%" y="613" width="0.1609%" height="15" fill="rgb(217,5,26)" fg:x="175" fg:w="2"/><text x="14.3288%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0788%" y="597" width="0.1609%" height="15" fill="rgb(235,190,38)" fg:x="175" fg:w="2"/><text x="14.3288%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.0788%" y="581" width="0.1609%" height="15" fill="rgb(247,86,24)" fg:x="175" fg:w="2"/><text x="14.3288%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.0788%" y="565" width="0.1609%" height="15" fill="rgb(205,101,16)" fg:x="175" fg:w="2"/><text x="14.3288%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1593%" y="549" width="0.0805%" height="15" fill="rgb(246,168,33)" fg:x="176" fg:w="1"/><text x="14.4093%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1593%" y="533" width="0.0805%" height="15" fill="rgb(231,114,1)" fg:x="176" fg:w="1"/><text x="14.4093%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (51 samples, 4.10%)</title><rect x="10.2977%" y="805" width="4.1030%" height="15" fill="rgb(207,184,53)" fg:x="128" fg:w="51"/><text x="10.5477%" y="815.50">plug..</text></g><g><title>plugins_core::tools::set_container (26 samples, 2.09%)</title><rect x="12.3089%" y="789" width="2.0917%" height="15" fill="rgb(224,95,51)" fg:x="153" fg:w="26"/><text x="12.5589%" y="799.50">p..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="14.2397%" y="773" width="0.1609%" height="15" fill="rgb(212,188,45)" fg:x="177" fg:w="2"/><text x="14.4897%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.2397%" y="757" width="0.1609%" height="15" fill="rgb(223,154,38)" fg:x="177" fg:w="2"/><text x="14.4897%" y="767.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3202%" y="741" width="0.0805%" height="15" fill="rgb(251,22,52)" fg:x="178" fg:w="1"/><text x="14.5702%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3202%" y="725" width="0.0805%" height="15" fill="rgb(229,209,22)" fg:x="178" fg:w="1"/><text x="14.5702%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.3202%" y="709" width="0.0805%" height="15" fill="rgb(234,138,34)" fg:x="178" fg:w="1"/><text x="14.5702%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.3202%" y="693" width="0.0805%" height="15" fill="rgb(212,95,11)" fg:x="178" fg:w="1"/><text x="14.5702%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.3202%" y="677" width="0.0805%" height="15" fill="rgb(240,179,47)" fg:x="178" fg:w="1"/><text x="14.5702%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="14.4006%" y="757" width="0.0805%" height="15" fill="rgb(240,163,11)" fg:x="179" fg:w="1"/><text x="14.6506%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="14.4006%" y="741" width="0.0805%" height="15" fill="rgb(236,37,12)" fg:x="179" fg:w="1"/><text x="14.6506%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="14.4811%" y="757" width="0.0805%" height="15" fill="rgb(232,164,16)" fg:x="180" fg:w="1"/><text x="14.7311%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4811%" y="741" width="0.0805%" height="15" fill="rgb(244,205,15)" fg:x="180" fg:w="1"/><text x="14.7311%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4811%" y="725" width="0.0805%" height="15" fill="rgb(223,117,47)" fg:x="180" fg:w="1"/><text x="14.7311%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4811%" y="709" width="0.0805%" height="15" fill="rgb(244,107,35)" fg:x="180" fg:w="1"/><text x="14.7311%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4811%" y="693" width="0.0805%" height="15" fill="rgb(205,140,8)" fg:x="180" fg:w="1"/><text x="14.7311%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4811%" y="677" width="0.0805%" height="15" fill="rgb(228,84,46)" fg:x="180" fg:w="1"/><text x="14.7311%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4811%" y="661" width="0.0805%" height="15" fill="rgb(254,188,9)" fg:x="180" fg:w="1"/><text x="14.7311%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4811%" y="645" width="0.0805%" height="15" fill="rgb(206,112,54)" fg:x="180" fg:w="1"/><text x="14.7311%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.4811%" y="629" width="0.0805%" height="15" fill="rgb(216,84,49)" fg:x="180" fg:w="1"/><text x="14.7311%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.4811%" y="613" width="0.0805%" height="15" fill="rgb(214,194,35)" fg:x="180" fg:w="1"/><text x="14.7311%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.4811%" y="597" width="0.0805%" height="15" fill="rgb(249,28,3)" fg:x="180" fg:w="1"/><text x="14.7311%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.4811%" y="581" width="0.0805%" height="15" fill="rgb(222,56,52)" fg:x="180" fg:w="1"/><text x="14.7311%" y="591.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="14.4811%" y="565" width="0.0805%" height="15" fill="rgb(245,217,50)" fg:x="180" fg:w="1"/><text x="14.7311%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="14.4006%" y="773" width="0.2414%" height="15" fill="rgb(213,201,24)" fg:x="179" fg:w="3"/><text x="14.6506%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.5615%" y="757" width="0.0805%" height="15" fill="rgb(248,116,28)" fg:x="181" fg:w="1"/><text x="14.8115%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.5615%" y="741" width="0.0805%" height="15" fill="rgb(219,72,43)" fg:x="181" fg:w="1"/><text x="14.8115%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="725" width="0.0805%" height="15" fill="rgb(209,138,14)" fg:x="181" fg:w="1"/><text x="14.8115%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5615%" y="709" width="0.0805%" height="15" fill="rgb(222,18,33)" fg:x="181" fg:w="1"/><text x="14.8115%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="693" width="0.0805%" height="15" fill="rgb(213,199,7)" fg:x="181" fg:w="1"/><text x="14.8115%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="677" width="0.0805%" height="15" fill="rgb(250,110,10)" fg:x="181" fg:w="1"/><text x="14.8115%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="661" width="0.0805%" height="15" fill="rgb(248,123,6)" fg:x="181" fg:w="1"/><text x="14.8115%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5615%" y="645" width="0.0805%" height="15" fill="rgb(206,91,31)" fg:x="181" fg:w="1"/><text x="14.8115%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="629" width="0.0805%" height="15" fill="rgb(211,154,13)" fg:x="181" fg:w="1"/><text x="14.8115%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="613" width="0.0805%" height="15" fill="rgb(225,148,7)" fg:x="181" fg:w="1"/><text x="14.8115%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="597" width="0.0805%" height="15" fill="rgb(220,160,43)" fg:x="181" fg:w="1"/><text x="14.8115%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="14.5615%" y="581" width="0.0805%" height="15" fill="rgb(213,52,39)" fg:x="181" fg:w="1"/><text x="14.8115%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="14.5615%" y="565" width="0.0805%" height="15" fill="rgb(243,137,7)" fg:x="181" fg:w="1"/><text x="14.8115%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5615%" y="549" width="0.0805%" height="15" fill="rgb(230,79,13)" fg:x="181" fg:w="1"/><text x="14.8115%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.5615%" y="533" width="0.0805%" height="15" fill="rgb(247,105,23)" fg:x="181" fg:w="1"/><text x="14.8115%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="14.5615%" y="517" width="0.0805%" height="15" fill="rgb(223,179,41)" fg:x="181" fg:w="1"/><text x="14.8115%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="14.5615%" y="501" width="0.0805%" height="15" fill="rgb(218,9,34)" fg:x="181" fg:w="1"/><text x="14.8115%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="14.5615%" y="485" width="0.0805%" height="15" fill="rgb(222,106,8)" fg:x="181" fg:w="1"/><text x="14.8115%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="14.5615%" y="469" width="0.0805%" height="15" fill="rgb(211,220,0)" fg:x="181" fg:w="1"/><text x="14.8115%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.5615%" y="453" width="0.0805%" height="15" fill="rgb(229,52,16)" fg:x="181" fg:w="1"/><text x="14.8115%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="14.5615%" y="437" width="0.0805%" height="15" fill="rgb(212,155,18)" fg:x="181" fg:w="1"/><text x="14.8115%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="14.5615%" y="421" width="0.0805%" height="15" fill="rgb(242,21,14)" fg:x="181" fg:w="1"/><text x="14.8115%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="14.5615%" y="405" width="0.0805%" height="15" fill="rgb(222,19,48)" fg:x="181" fg:w="1"/><text x="14.8115%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.5615%" y="389" width="0.0805%" height="15" fill="rgb(232,45,27)" fg:x="181" fg:w="1"/><text x="14.8115%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="14.5615%" y="373" width="0.0805%" height="15" fill="rgb(249,103,42)" fg:x="181" fg:w="1"/><text x="14.8115%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="14.5615%" y="357" width="0.0805%" height="15" fill="rgb(246,81,33)" fg:x="181" fg:w="1"/><text x="14.8115%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="14.5615%" y="341" width="0.0805%" height="15" fill="rgb(252,33,42)" fg:x="181" fg:w="1"/><text x="14.8115%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.5615%" y="325" width="0.0805%" height="15" fill="rgb(209,212,41)" fg:x="181" fg:w="1"/><text x="14.8115%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6420%" y="661" width="0.0805%" height="15" fill="rgb(207,154,6)" fg:x="182" fg:w="1"/><text x="14.8920%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6420%" y="645" width="0.0805%" height="15" fill="rgb(223,64,47)" fg:x="182" fg:w="1"/><text x="14.8920%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7224%" y="581" width="0.0805%" height="15" fill="rgb(211,161,38)" fg:x="183" fg:w="1"/><text x="14.9724%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7224%" y="565" width="0.0805%" height="15" fill="rgb(219,138,40)" fg:x="183" fg:w="1"/><text x="14.9724%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7224%" y="549" width="0.0805%" height="15" fill="rgb(241,228,46)" fg:x="183" fg:w="1"/><text x="14.9724%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7224%" y="533" width="0.0805%" height="15" fill="rgb(223,209,38)" fg:x="183" fg:w="1"/><text x="14.9724%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7224%" y="517" width="0.0805%" height="15" fill="rgb(236,164,45)" fg:x="183" fg:w="1"/><text x="14.9724%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7224%" y="501" width="0.0805%" height="15" fill="rgb(231,15,5)" fg:x="183" fg:w="1"/><text x="14.9724%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7224%" y="485" width="0.0805%" height="15" fill="rgb(252,35,15)" fg:x="183" fg:w="1"/><text x="14.9724%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6420%" y="725" width="0.2414%" height="15" fill="rgb(248,181,18)" fg:x="182" fg:w="3"/><text x="14.8920%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6420%" y="709" width="0.2414%" height="15" fill="rgb(233,39,42)" fg:x="182" fg:w="3"/><text x="14.8920%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6420%" y="693" width="0.2414%" height="15" fill="rgb(238,110,33)" fg:x="182" fg:w="3"/><text x="14.8920%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6420%" y="677" width="0.2414%" height="15" fill="rgb(233,195,10)" fg:x="182" fg:w="3"/><text x="14.8920%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.7224%" y="661" width="0.1609%" height="15" fill="rgb(254,105,3)" fg:x="183" fg:w="2"/><text x="14.9724%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.7224%" y="645" width="0.1609%" height="15" fill="rgb(221,225,9)" fg:x="183" fg:w="2"/><text x="14.9724%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="14.7224%" y="629" width="0.1609%" height="15" fill="rgb(224,227,45)" fg:x="183" fg:w="2"/><text x="14.9724%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="14.7224%" y="613" width="0.1609%" height="15" fill="rgb(229,198,43)" fg:x="183" fg:w="2"/><text x="14.9724%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="14.7224%" y="597" width="0.1609%" height="15" fill="rgb(206,209,35)" fg:x="183" fg:w="2"/><text x="14.9724%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.8029%" y="581" width="0.0805%" height="15" fill="rgb(245,195,53)" fg:x="184" fg:w="1"/><text x="15.0529%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.8029%" y="565" width="0.0805%" height="15" fill="rgb(240,92,26)" fg:x="184" fg:w="1"/><text x="15.0529%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="14.6420%" y="773" width="0.4023%" height="15" fill="rgb(207,40,23)" fg:x="182" fg:w="5"/><text x="14.8920%" y="783.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="14.6420%" y="757" width="0.4023%" height="15" fill="rgb(223,111,35)" fg:x="182" fg:w="5"/><text x="14.8920%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="14.6420%" y="741" width="0.4023%" height="15" fill="rgb(229,147,28)" fg:x="182" fg:w="5"/><text x="14.8920%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8833%" y="725" width="0.1609%" height="15" fill="rgb(211,29,28)" fg:x="185" fg:w="2"/><text x="15.1333%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8833%" y="709" width="0.1609%" height="15" fill="rgb(228,72,33)" fg:x="185" fg:w="2"/><text x="15.1333%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9638%" y="693" width="0.0805%" height="15" fill="rgb(205,214,31)" fg:x="186" fg:w="1"/><text x="15.2138%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9638%" y="677" width="0.0805%" height="15" fill="rgb(224,111,15)" fg:x="186" fg:w="1"/><text x="15.2138%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.9638%" y="661" width="0.0805%" height="15" fill="rgb(253,21,26)" fg:x="186" fg:w="1"/><text x="15.2138%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9638%" y="645" width="0.0805%" height="15" fill="rgb(245,139,43)" fg:x="186" fg:w="1"/><text x="15.2138%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9638%" y="629" width="0.0805%" height="15" fill="rgb(252,170,7)" fg:x="186" fg:w="1"/><text x="15.2138%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9638%" y="613" width="0.0805%" height="15" fill="rgb(231,118,14)" fg:x="186" fg:w="1"/><text x="15.2138%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9638%" y="597" width="0.0805%" height="15" fill="rgb(238,83,0)" fg:x="186" fg:w="1"/><text x="15.2138%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9638%" y="581" width="0.0805%" height="15" fill="rgb(221,39,39)" fg:x="186" fg:w="1"/><text x="15.2138%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="15.0442%" y="773" width="0.0805%" height="15" fill="rgb(222,119,46)" fg:x="187" fg:w="1"/><text x="15.2942%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.0442%" y="757" width="0.0805%" height="15" fill="rgb(222,165,49)" fg:x="187" fg:w="1"/><text x="15.2942%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0442%" y="741" width="0.0805%" height="15" fill="rgb(219,113,52)" fg:x="187" fg:w="1"/><text x="15.2942%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0442%" y="725" width="0.0805%" height="15" fill="rgb(214,7,15)" fg:x="187" fg:w="1"/><text x="15.2942%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0442%" y="709" width="0.0805%" height="15" fill="rgb(235,32,4)" fg:x="187" fg:w="1"/><text x="15.2942%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0442%" y="693" width="0.0805%" height="15" fill="rgb(238,90,54)" fg:x="187" fg:w="1"/><text x="15.2942%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0442%" y="677" width="0.0805%" height="15" fill="rgb(213,208,19)" fg:x="187" fg:w="1"/><text x="15.2942%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0442%" y="661" width="0.0805%" height="15" fill="rgb(233,156,4)" fg:x="187" fg:w="1"/><text x="15.2942%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.0442%" y="645" width="0.0805%" height="15" fill="rgb(207,194,5)" fg:x="187" fg:w="1"/><text x="15.2942%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.0442%" y="629" width="0.0805%" height="15" fill="rgb(206,111,30)" fg:x="187" fg:w="1"/><text x="15.2942%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1247%" y="645" width="0.0805%" height="15" fill="rgb(243,70,54)" fg:x="188" fg:w="1"/><text x="15.3747%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1247%" y="629" width="0.0805%" height="15" fill="rgb(242,28,8)" fg:x="188" fg:w="1"/><text x="15.3747%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1247%" y="613" width="0.0805%" height="15" fill="rgb(219,106,18)" fg:x="188" fg:w="1"/><text x="15.3747%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.1247%" y="597" width="0.0805%" height="15" fill="rgb(244,222,10)" fg:x="188" fg:w="1"/><text x="15.3747%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.1247%" y="581" width="0.0805%" height="15" fill="rgb(236,179,52)" fg:x="188" fg:w="1"/><text x="15.3747%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.1247%" y="565" width="0.0805%" height="15" fill="rgb(213,23,39)" fg:x="188" fg:w="1"/><text x="15.3747%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1247%" y="549" width="0.0805%" height="15" fill="rgb(238,48,10)" fg:x="188" fg:w="1"/><text x="15.3747%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.1247%" y="533" width="0.0805%" height="15" fill="rgb(251,196,23)" fg:x="188" fg:w="1"/><text x="15.3747%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.1247%" y="517" width="0.0805%" height="15" fill="rgb(250,152,24)" fg:x="188" fg:w="1"/><text x="15.3747%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.1247%" y="501" width="0.0805%" height="15" fill="rgb(209,150,17)" fg:x="188" fg:w="1"/><text x="15.3747%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.1247%" y="485" width="0.0805%" height="15" fill="rgb(234,202,34)" fg:x="188" fg:w="1"/><text x="15.3747%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.1247%" y="469" width="0.0805%" height="15" fill="rgb(253,148,53)" fg:x="188" fg:w="1"/><text x="15.3747%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1247%" y="453" width="0.0805%" height="15" fill="rgb(218,129,16)" fg:x="188" fg:w="1"/><text x="15.3747%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.1247%" y="693" width="0.1609%" height="15" fill="rgb(216,85,19)" fg:x="188" fg:w="2"/><text x="15.3747%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.1247%" y="677" width="0.1609%" height="15" fill="rgb(235,228,7)" fg:x="188" fg:w="2"/><text x="15.3747%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.1247%" y="661" width="0.1609%" height="15" fill="rgb(245,175,0)" fg:x="188" fg:w="2"/><text x="15.3747%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2051%" y="645" width="0.0805%" height="15" fill="rgb(208,168,36)" fg:x="189" fg:w="1"/><text x="15.4551%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2051%" y="629" width="0.0805%" height="15" fill="rgb(246,171,24)" fg:x="189" fg:w="1"/><text x="15.4551%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2051%" y="613" width="0.0805%" height="15" fill="rgb(215,142,24)" fg:x="189" fg:w="1"/><text x="15.4551%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2051%" y="597" width="0.0805%" height="15" fill="rgb(250,187,7)" fg:x="189" fg:w="1"/><text x="15.4551%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2051%" y="581" width="0.0805%" height="15" fill="rgb(228,66,33)" fg:x="189" fg:w="1"/><text x="15.4551%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.2051%" y="565" width="0.0805%" height="15" fill="rgb(234,215,21)" fg:x="189" fg:w="1"/><text x="15.4551%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.2051%" y="549" width="0.0805%" height="15" fill="rgb(222,191,20)" fg:x="189" fg:w="1"/><text x="15.4551%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.2856%" y="693" width="0.0805%" height="15" fill="rgb(245,79,54)" fg:x="190" fg:w="1"/><text x="15.5356%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.2856%" y="677" width="0.0805%" height="15" fill="rgb(240,10,37)" fg:x="190" fg:w="1"/><text x="15.5356%" y="687.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="15.1247%" y="725" width="0.3218%" height="15" fill="rgb(214,192,32)" fg:x="188" fg:w="4"/><text x="15.3747%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.1247%" y="709" width="0.3218%" height="15" fill="rgb(209,36,54)" fg:x="188" fg:w="4"/><text x="15.3747%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.3660%" y="693" width="0.0805%" height="15" fill="rgb(220,10,11)" fg:x="191" fg:w="1"/><text x="15.6160%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.3660%" y="677" width="0.0805%" height="15" fill="rgb(221,106,17)" fg:x="191" fg:w="1"/><text x="15.6160%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4465%" y="693" width="0.0805%" height="15" fill="rgb(251,142,44)" fg:x="192" fg:w="1"/><text x="15.6965%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.21%)</title><rect x="14.4006%" y="805" width="1.2068%" height="15" fill="rgb(238,13,15)" fg:x="179" fg:w="15"/><text x="14.6506%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="14.4006%" y="789" width="1.2068%" height="15" fill="rgb(208,107,27)" fg:x="179" fg:w="15"/><text x="14.6506%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="15.1247%" y="773" width="0.4827%" height="15" fill="rgb(205,136,37)" fg:x="188" fg:w="6"/><text x="15.3747%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="15.1247%" y="757" width="0.4827%" height="15" fill="rgb(250,205,27)" fg:x="188" fg:w="6"/><text x="15.3747%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="15.1247%" y="741" width="0.4827%" height="15" fill="rgb(210,80,43)" fg:x="188" fg:w="6"/><text x="15.3747%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.4465%" y="725" width="0.1609%" height="15" fill="rgb(247,160,36)" fg:x="192" fg:w="2"/><text x="15.6965%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.4465%" y="709" width="0.1609%" height="15" fill="rgb(234,13,49)" fg:x="192" fg:w="2"/><text x="15.6965%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5270%" y="693" width="0.0805%" height="15" fill="rgb(234,122,0)" fg:x="193" fg:w="1"/><text x="15.7770%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.5270%" y="677" width="0.0805%" height="15" fill="rgb(207,146,38)" fg:x="193" fg:w="1"/><text x="15.7770%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5270%" y="661" width="0.0805%" height="15" fill="rgb(207,177,25)" fg:x="193" fg:w="1"/><text x="15.7770%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.5270%" y="645" width="0.0805%" height="15" fill="rgb(211,178,42)" fg:x="193" fg:w="1"/><text x="15.7770%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5270%" y="629" width="0.0805%" height="15" fill="rgb(230,69,54)" fg:x="193" fg:w="1"/><text x="15.7770%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5270%" y="613" width="0.0805%" height="15" fill="rgb(214,135,41)" fg:x="193" fg:w="1"/><text x="15.7770%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6074%" y="725" width="0.0805%" height="15" fill="rgb(237,67,25)" fg:x="194" fg:w="1"/><text x="15.8574%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6074%" y="709" width="0.0805%" height="15" fill="rgb(222,189,50)" fg:x="194" fg:w="1"/><text x="15.8574%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6074%" y="693" width="0.0805%" height="15" fill="rgb(245,148,34)" fg:x="194" fg:w="1"/><text x="15.8574%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.6074%" y="677" width="0.0805%" height="15" fill="rgb(222,29,6)" fg:x="194" fg:w="1"/><text x="15.8574%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.6074%" y="661" width="0.0805%" height="15" fill="rgb(221,189,43)" fg:x="194" fg:w="1"/><text x="15.8574%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.6074%" y="645" width="0.0805%" height="15" fill="rgb(207,36,27)" fg:x="194" fg:w="1"/><text x="15.8574%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6074%" y="629" width="0.0805%" height="15" fill="rgb(217,90,24)" fg:x="194" fg:w="1"/><text x="15.8574%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6074%" y="613" width="0.0805%" height="15" fill="rgb(224,66,35)" fg:x="194" fg:w="1"/><text x="15.8574%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.6074%" y="597" width="0.0805%" height="15" fill="rgb(221,13,50)" fg:x="194" fg:w="1"/><text x="15.8574%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.6074%" y="581" width="0.0805%" height="15" fill="rgb(236,68,49)" fg:x="194" fg:w="1"/><text x="15.8574%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.6074%" y="565" width="0.0805%" height="15" fill="rgb(229,146,28)" fg:x="194" fg:w="1"/><text x="15.8574%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.6074%" y="549" width="0.0805%" height="15" fill="rgb(225,31,38)" fg:x="194" fg:w="1"/><text x="15.8574%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6074%" y="533" width="0.0805%" height="15" fill="rgb(250,208,3)" fg:x="194" fg:w="1"/><text x="15.8574%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.6074%" y="741" width="0.1609%" height="15" fill="rgb(246,54,23)" fg:x="194" fg:w="2"/><text x="15.8574%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6879%" y="725" width="0.0805%" height="15" fill="rgb(243,76,11)" fg:x="195" fg:w="1"/><text x="15.9379%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7683%" y="741" width="0.0805%" height="15" fill="rgb(245,21,50)" fg:x="196" fg:w="1"/><text x="16.0183%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7683%" y="725" width="0.0805%" height="15" fill="rgb(228,9,43)" fg:x="196" fg:w="1"/><text x="16.0183%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7683%" y="709" width="0.0805%" height="15" fill="rgb(208,100,47)" fg:x="196" fg:w="1"/><text x="16.0183%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.7683%" y="693" width="0.0805%" height="15" fill="rgb(232,26,8)" fg:x="196" fg:w="1"/><text x="16.0183%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="15.6074%" y="805" width="0.3218%" height="15" fill="rgb(216,166,38)" fg:x="194" fg:w="4"/><text x="15.8574%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="15.6074%" y="789" width="0.3218%" height="15" fill="rgb(251,202,51)" fg:x="194" fg:w="4"/><text x="15.8574%" y="799.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="15.6074%" y="773" width="0.3218%" height="15" fill="rgb(254,216,34)" fg:x="194" fg:w="4"/><text x="15.8574%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="15.6074%" y="757" width="0.3218%" height="15" fill="rgb(251,32,27)" fg:x="194" fg:w="4"/><text x="15.8574%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8488%" y="741" width="0.0805%" height="15" fill="rgb(208,127,28)" fg:x="197" fg:w="1"/><text x="16.0988%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8488%" y="725" width="0.0805%" height="15" fill="rgb(224,137,22)" fg:x="197" fg:w="1"/><text x="16.0988%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8488%" y="709" width="0.0805%" height="15" fill="rgb(254,70,32)" fg:x="197" fg:w="1"/><text x="16.0988%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8488%" y="693" width="0.0805%" height="15" fill="rgb(229,75,37)" fg:x="197" fg:w="1"/><text x="16.0988%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.8488%" y="677" width="0.0805%" height="15" fill="rgb(252,64,23)" fg:x="197" fg:w="1"/><text x="16.0988%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8488%" y="661" width="0.0805%" height="15" fill="rgb(232,162,48)" fg:x="197" fg:w="1"/><text x="16.0988%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.8488%" y="645" width="0.0805%" height="15" fill="rgb(246,160,12)" fg:x="197" fg:w="1"/><text x="16.0988%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8488%" y="629" width="0.0805%" height="15" fill="rgb(247,166,0)" fg:x="197" fg:w="1"/><text x="16.0988%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8488%" y="613" width="0.0805%" height="15" fill="rgb(249,219,21)" fg:x="197" fg:w="1"/><text x="16.0988%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9292%" y="709" width="0.0805%" height="15" fill="rgb(205,209,3)" fg:x="198" fg:w="1"/><text x="16.1792%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9292%" y="693" width="0.0805%" height="15" fill="rgb(243,44,1)" fg:x="198" fg:w="1"/><text x="16.1792%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9292%" y="677" width="0.0805%" height="15" fill="rgb(206,159,16)" fg:x="198" fg:w="1"/><text x="16.1792%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9292%" y="661" width="0.0805%" height="15" fill="rgb(244,77,30)" fg:x="198" fg:w="1"/><text x="16.1792%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9292%" y="645" width="0.0805%" height="15" fill="rgb(218,69,12)" fg:x="198" fg:w="1"/><text x="16.1792%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.9292%" y="725" width="0.1609%" height="15" fill="rgb(212,87,7)" fg:x="198" fg:w="2"/><text x="16.1792%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0097%" y="709" width="0.0805%" height="15" fill="rgb(245,114,25)" fg:x="199" fg:w="1"/><text x="16.2597%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.0901%" y="693" width="0.0805%" height="15" fill="rgb(210,61,42)" fg:x="200" fg:w="1"/><text x="16.3401%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0901%" y="677" width="0.0805%" height="15" fill="rgb(211,52,33)" fg:x="200" fg:w="1"/><text x="16.3401%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.1706%" y="677" width="0.0805%" height="15" fill="rgb(234,58,33)" fg:x="201" fg:w="1"/><text x="16.4206%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1706%" y="661" width="0.0805%" height="15" fill="rgb(220,115,36)" fg:x="201" fg:w="1"/><text x="16.4206%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="16.0901%" y="725" width="0.2414%" height="15" fill="rgb(243,153,54)" fg:x="200" fg:w="3"/><text x="16.3401%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="16.0901%" y="709" width="0.2414%" height="15" fill="rgb(251,47,18)" fg:x="200" fg:w="3"/><text x="16.3401%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.1706%" y="693" width="0.1609%" height="15" fill="rgb(242,102,42)" fg:x="201" fg:w="2"/><text x="16.4206%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2510%" y="677" width="0.0805%" height="15" fill="rgb(234,31,38)" fg:x="202" fg:w="1"/><text x="16.5010%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2510%" y="661" width="0.0805%" height="15" fill="rgb(221,117,51)" fg:x="202" fg:w="1"/><text x="16.5010%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2510%" y="645" width="0.0805%" height="15" fill="rgb(212,20,18)" fg:x="202" fg:w="1"/><text x="16.5010%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.4119%" y="629" width="0.0805%" height="15" fill="rgb(245,133,36)" fg:x="204" fg:w="1"/><text x="16.6619%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.4119%" y="613" width="0.0805%" height="15" fill="rgb(212,6,19)" fg:x="204" fg:w="1"/><text x="16.6619%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="15.9292%" y="789" width="0.7241%" height="15" fill="rgb(218,1,36)" fg:x="198" fg:w="9"/><text x="16.1792%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.72%)</title><rect x="15.9292%" y="773" width="0.7241%" height="15" fill="rgb(246,84,54)" fg:x="198" fg:w="9"/><text x="16.1792%" y="783.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="15.9292%" y="757" width="0.7241%" height="15" fill="rgb(242,110,6)" fg:x="198" fg:w="9"/><text x="16.1792%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="15.9292%" y="741" width="0.7241%" height="15" fill="rgb(214,47,5)" fg:x="198" fg:w="9"/><text x="16.1792%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="16.3315%" y="725" width="0.3218%" height="15" fill="rgb(218,159,25)" fg:x="203" fg:w="4"/><text x="16.5815%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="16.3315%" y="709" width="0.3218%" height="15" fill="rgb(215,211,28)" fg:x="203" fg:w="4"/><text x="16.5815%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="16.3315%" y="693" width="0.3218%" height="15" fill="rgb(238,59,32)" fg:x="203" fg:w="4"/><text x="16.5815%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.4119%" y="677" width="0.2414%" height="15" fill="rgb(226,82,3)" fg:x="204" fg:w="3"/><text x="16.6619%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="16.4119%" y="661" width="0.2414%" height="15" fill="rgb(240,164,32)" fg:x="204" fg:w="3"/><text x="16.6619%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.4119%" y="645" width="0.2414%" height="15" fill="rgb(232,46,7)" fg:x="204" fg:w="3"/><text x="16.6619%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4924%" y="629" width="0.1609%" height="15" fill="rgb(229,129,53)" fg:x="205" fg:w="2"/><text x="16.7424%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4924%" y="613" width="0.1609%" height="15" fill="rgb(234,188,29)" fg:x="205" fg:w="2"/><text x="16.7424%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4924%" y="597" width="0.1609%" height="15" fill="rgb(246,141,4)" fg:x="205" fg:w="2"/><text x="16.7424%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4924%" y="581" width="0.1609%" height="15" fill="rgb(229,23,39)" fg:x="205" fg:w="2"/><text x="16.7424%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5728%" y="565" width="0.0805%" height="15" fill="rgb(206,12,3)" fg:x="206" fg:w="1"/><text x="16.8228%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6533%" y="789" width="0.0805%" height="15" fill="rgb(252,226,20)" fg:x="207" fg:w="1"/><text x="16.9033%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6533%" y="773" width="0.0805%" height="15" fill="rgb(216,123,35)" fg:x="207" fg:w="1"/><text x="16.9033%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6533%" y="757" width="0.0805%" height="15" fill="rgb(212,68,40)" fg:x="207" fg:w="1"/><text x="16.9033%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.6533%" y="741" width="0.0805%" height="15" fill="rgb(254,125,32)" fg:x="207" fg:w="1"/><text x="16.9033%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.6533%" y="725" width="0.0805%" height="15" fill="rgb(253,97,22)" fg:x="207" fg:w="1"/><text x="16.9033%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.6533%" y="709" width="0.0805%" height="15" fill="rgb(241,101,14)" fg:x="207" fg:w="1"/><text x="16.9033%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6533%" y="693" width="0.0805%" height="15" fill="rgb(238,103,29)" fg:x="207" fg:w="1"/><text x="16.9033%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.6533%" y="677" width="0.0805%" height="15" fill="rgb(233,195,47)" fg:x="207" fg:w="1"/><text x="16.9033%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.6533%" y="661" width="0.0805%" height="15" fill="rgb(246,218,30)" fg:x="207" fg:w="1"/><text x="16.9033%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.6533%" y="645" width="0.0805%" height="15" fill="rgb(219,145,47)" fg:x="207" fg:w="1"/><text x="16.9033%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.6533%" y="629" width="0.0805%" height="15" fill="rgb(243,12,26)" fg:x="207" fg:w="1"/><text x="16.9033%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.6533%" y="613" width="0.0805%" height="15" fill="rgb(214,87,16)" fg:x="207" fg:w="1"/><text x="16.9033%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6533%" y="597" width="0.0805%" height="15" fill="rgb(208,99,42)" fg:x="207" fg:w="1"/><text x="16.9033%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="16.7337%" y="789" width="0.0805%" height="15" fill="rgb(253,99,2)" fg:x="208" fg:w="1"/><text x="16.9837%" y="799.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="16.7337%" y="773" width="0.0805%" height="15" fill="rgb(220,168,23)" fg:x="208" fg:w="1"/><text x="16.9837%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7337%" y="757" width="0.0805%" height="15" fill="rgb(242,38,24)" fg:x="208" fg:w="1"/><text x="16.9837%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7337%" y="741" width="0.0805%" height="15" fill="rgb(225,182,9)" fg:x="208" fg:w="1"/><text x="16.9837%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.8142%" y="741" width="0.0805%" height="15" fill="rgb(243,178,37)" fg:x="209" fg:w="1"/><text x="17.0642%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8142%" y="725" width="0.0805%" height="15" fill="rgb(232,139,19)" fg:x="209" fg:w="1"/><text x="17.0642%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.8946%" y="709" width="0.0805%" height="15" fill="rgb(225,201,24)" fg:x="210" fg:w="1"/><text x="17.1446%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.8946%" y="693" width="0.0805%" height="15" fill="rgb(221,47,46)" fg:x="210" fg:w="1"/><text x="17.1446%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8946%" y="677" width="0.0805%" height="15" fill="rgb(249,23,13)" fg:x="210" fg:w="1"/><text x="17.1446%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.8946%" y="661" width="0.0805%" height="15" fill="rgb(219,9,5)" fg:x="210" fg:w="1"/><text x="17.1446%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.8946%" y="645" width="0.0805%" height="15" fill="rgb(254,171,16)" fg:x="210" fg:w="1"/><text x="17.1446%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="16.8946%" y="741" width="0.1609%" height="15" fill="rgb(230,171,20)" fg:x="210" fg:w="2"/><text x="17.1446%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="16.8946%" y="725" width="0.1609%" height="15" fill="rgb(210,71,41)" fg:x="210" fg:w="2"/><text x="17.1446%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="16.9751%" y="709" width="0.0805%" height="15" fill="rgb(206,173,20)" fg:x="211" fg:w="1"/><text x="17.2251%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.9751%" y="693" width="0.0805%" height="15" fill="rgb(233,88,34)" fg:x="211" fg:w="1"/><text x="17.2251%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.9751%" y="677" width="0.0805%" height="15" fill="rgb(223,209,46)" fg:x="211" fg:w="1"/><text x="17.2251%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9751%" y="661" width="0.0805%" height="15" fill="rgb(250,43,18)" fg:x="211" fg:w="1"/><text x="17.2251%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9751%" y="645" width="0.0805%" height="15" fill="rgb(208,13,10)" fg:x="211" fg:w="1"/><text x="17.2251%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="17.0555%" y="709" width="0.0805%" height="15" fill="rgb(212,200,36)" fg:x="212" fg:w="1"/><text x="17.3055%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.0555%" y="693" width="0.0805%" height="15" fill="rgb(225,90,30)" fg:x="212" fg:w="1"/><text x="17.3055%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1360%" y="597" width="0.0805%" height="15" fill="rgb(236,182,39)" fg:x="213" fg:w="1"/><text x="17.3860%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="17.0555%" y="741" width="0.2414%" height="15" fill="rgb(212,144,35)" fg:x="212" fg:w="3"/><text x="17.3055%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="17.0555%" y="725" width="0.2414%" height="15" fill="rgb(228,63,44)" fg:x="212" fg:w="3"/><text x="17.3055%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.1360%" y="709" width="0.1609%" height="15" fill="rgb(228,109,6)" fg:x="213" fg:w="2"/><text x="17.3860%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.1360%" y="693" width="0.1609%" height="15" fill="rgb(238,117,24)" fg:x="213" fg:w="2"/><text x="17.3860%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.1360%" y="677" width="0.1609%" height="15" fill="rgb(242,26,26)" fg:x="213" fg:w="2"/><text x="17.3860%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1360%" y="661" width="0.1609%" height="15" fill="rgb(221,92,48)" fg:x="213" fg:w="2"/><text x="17.3860%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1360%" y="645" width="0.1609%" height="15" fill="rgb(209,209,32)" fg:x="213" fg:w="2"/><text x="17.3860%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1360%" y="629" width="0.1609%" height="15" fill="rgb(221,70,22)" fg:x="213" fg:w="2"/><text x="17.3860%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1360%" y="613" width="0.1609%" height="15" fill="rgb(248,145,5)" fg:x="213" fg:w="2"/><text x="17.3860%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2164%" y="597" width="0.0805%" height="15" fill="rgb(226,116,26)" fg:x="214" fg:w="1"/><text x="17.4664%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.2969%" y="693" width="0.0805%" height="15" fill="rgb(244,5,17)" fg:x="215" fg:w="1"/><text x="17.5469%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.2969%" y="677" width="0.0805%" height="15" fill="rgb(252,159,33)" fg:x="215" fg:w="1"/><text x="17.5469%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2969%" y="661" width="0.0805%" height="15" fill="rgb(206,71,0)" fg:x="215" fg:w="1"/><text x="17.5469%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="17.2969%" y="709" width="0.1609%" height="15" fill="rgb(233,118,54)" fg:x="215" fg:w="2"/><text x="17.5469%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.3773%" y="693" width="0.0805%" height="15" fill="rgb(234,83,48)" fg:x="216" fg:w="1"/><text x="17.6273%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.3773%" y="677" width="0.0805%" height="15" fill="rgb(228,3,54)" fg:x="216" fg:w="1"/><text x="17.6273%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="661" width="0.0805%" height="15" fill="rgb(226,155,13)" fg:x="216" fg:w="1"/><text x="17.6273%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.3773%" y="645" width="0.0805%" height="15" fill="rgb(241,28,37)" fg:x="216" fg:w="1"/><text x="17.6273%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="629" width="0.0805%" height="15" fill="rgb(233,93,10)" fg:x="216" fg:w="1"/><text x="17.6273%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="613" width="0.0805%" height="15" fill="rgb(225,113,19)" fg:x="216" fg:w="1"/><text x="17.6273%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="597" width="0.0805%" height="15" fill="rgb(241,2,18)" fg:x="216" fg:w="1"/><text x="17.6273%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.3773%" y="581" width="0.0805%" height="15" fill="rgb(228,207,21)" fg:x="216" fg:w="1"/><text x="17.6273%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="565" width="0.0805%" height="15" fill="rgb(213,211,35)" fg:x="216" fg:w="1"/><text x="17.6273%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="549" width="0.0805%" height="15" fill="rgb(209,83,10)" fg:x="216" fg:w="1"/><text x="17.6273%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="533" width="0.0805%" height="15" fill="rgb(209,164,1)" fg:x="216" fg:w="1"/><text x="17.6273%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.3773%" y="517" width="0.0805%" height="15" fill="rgb(213,184,43)" fg:x="216" fg:w="1"/><text x="17.6273%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.3773%" y="501" width="0.0805%" height="15" fill="rgb(231,61,34)" fg:x="216" fg:w="1"/><text x="17.6273%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="17.3773%" y="485" width="0.0805%" height="15" fill="rgb(235,75,3)" fg:x="216" fg:w="1"/><text x="17.6273%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.4578%" y="565" width="0.0805%" height="15" fill="rgb(220,106,47)" fg:x="217" fg:w="1"/><text x="17.7078%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.4578%" y="549" width="0.0805%" height="15" fill="rgb(210,196,33)" fg:x="217" fg:w="1"/><text x="17.7078%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5382%" y="501" width="0.0805%" height="15" fill="rgb(229,154,42)" fg:x="218" fg:w="1"/><text x="17.7882%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5382%" y="485" width="0.0805%" height="15" fill="rgb(228,114,26)" fg:x="218" fg:w="1"/><text x="17.7882%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.4578%" y="709" width="0.2414%" height="15" fill="rgb(208,144,1)" fg:x="217" fg:w="3"/><text x="17.7078%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.4578%" y="693" width="0.2414%" height="15" fill="rgb(239,112,37)" fg:x="217" fg:w="3"/><text x="17.7078%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.4578%" y="677" width="0.2414%" height="15" fill="rgb(210,96,50)" fg:x="217" fg:w="3"/><text x="17.7078%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.4578%" y="661" width="0.2414%" height="15" fill="rgb(222,178,2)" fg:x="217" fg:w="3"/><text x="17.7078%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4578%" y="645" width="0.2414%" height="15" fill="rgb(226,74,18)" fg:x="217" fg:w="3"/><text x="17.7078%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.4578%" y="629" width="0.2414%" height="15" fill="rgb(225,67,54)" fg:x="217" fg:w="3"/><text x="17.7078%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4578%" y="613" width="0.2414%" height="15" fill="rgb(251,92,32)" fg:x="217" fg:w="3"/><text x="17.7078%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.4578%" y="597" width="0.2414%" height="15" fill="rgb(228,149,22)" fg:x="217" fg:w="3"/><text x="17.7078%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.4578%" y="581" width="0.2414%" height="15" fill="rgb(243,54,13)" fg:x="217" fg:w="3"/><text x="17.7078%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5382%" y="565" width="0.1609%" height="15" fill="rgb(243,180,28)" fg:x="218" fg:w="2"/><text x="17.7882%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5382%" y="549" width="0.1609%" height="15" fill="rgb(208,167,24)" fg:x="218" fg:w="2"/><text x="17.7882%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5382%" y="533" width="0.1609%" height="15" fill="rgb(245,73,45)" fg:x="218" fg:w="2"/><text x="17.7882%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5382%" y="517" width="0.1609%" height="15" fill="rgb(237,203,48)" fg:x="218" fg:w="2"/><text x="17.7882%" y="527.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="17.6187%" y="501" width="0.0805%" height="15" fill="rgb(211,197,16)" fg:x="219" fg:w="1"/><text x="17.8687%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6991%" y="709" width="0.0805%" height="15" fill="rgb(243,99,51)" fg:x="220" fg:w="1"/><text x="17.9491%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8600%" y="629" width="0.0805%" height="15" fill="rgb(215,123,29)" fg:x="222" fg:w="1"/><text x="18.1100%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8600%" y="613" width="0.0805%" height="15" fill="rgb(239,186,37)" fg:x="222" fg:w="1"/><text x="18.1100%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8600%" y="597" width="0.0805%" height="15" fill="rgb(252,136,39)" fg:x="222" fg:w="1"/><text x="18.1100%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8600%" y="581" width="0.0805%" height="15" fill="rgb(223,213,32)" fg:x="222" fg:w="1"/><text x="18.1100%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8600%" y="565" width="0.0805%" height="15" fill="rgb(233,115,5)" fg:x="222" fg:w="1"/><text x="18.1100%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8600%" y="549" width="0.0805%" height="15" fill="rgb(207,226,44)" fg:x="222" fg:w="1"/><text x="18.1100%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8600%" y="533" width="0.0805%" height="15" fill="rgb(208,126,0)" fg:x="222" fg:w="1"/><text x="18.1100%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.8600%" y="517" width="0.0805%" height="15" fill="rgb(244,66,21)" fg:x="222" fg:w="1"/><text x="18.1100%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="17.7796%" y="661" width="0.2414%" height="15" fill="rgb(222,97,12)" fg:x="221" fg:w="3"/><text x="18.0296%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.7796%" y="645" width="0.2414%" height="15" fill="rgb(219,213,19)" fg:x="221" fg:w="3"/><text x="18.0296%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9405%" y="629" width="0.0805%" height="15" fill="rgb(252,169,30)" fg:x="223" fg:w="1"/><text x="18.1905%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9405%" y="613" width="0.0805%" height="15" fill="rgb(206,32,51)" fg:x="223" fg:w="1"/><text x="18.1905%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9405%" y="597" width="0.0805%" height="15" fill="rgb(250,172,42)" fg:x="223" fg:w="1"/><text x="18.1905%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9405%" y="581" width="0.0805%" height="15" fill="rgb(209,34,43)" fg:x="223" fg:w="1"/><text x="18.1905%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9405%" y="565" width="0.0805%" height="15" fill="rgb(223,11,35)" fg:x="223" fg:w="1"/><text x="18.1905%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9405%" y="549" width="0.0805%" height="15" fill="rgb(251,219,26)" fg:x="223" fg:w="1"/><text x="18.1905%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.9405%" y="533" width="0.0805%" height="15" fill="rgb(231,119,3)" fg:x="223" fg:w="1"/><text x="18.1905%" y="543.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="17.7796%" y="709" width="0.3218%" height="15" fill="rgb(216,97,11)" fg:x="221" fg:w="4"/><text x="18.0296%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="17.7796%" y="693" width="0.3218%" height="15" fill="rgb(223,59,9)" fg:x="221" fg:w="4"/><text x="18.0296%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.7796%" y="677" width="0.3218%" height="15" fill="rgb(233,93,31)" fg:x="221" fg:w="4"/><text x="18.0296%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0209%" y="661" width="0.0805%" height="15" fill="rgb(239,81,33)" fg:x="224" fg:w="1"/><text x="18.2709%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0209%" y="645" width="0.0805%" height="15" fill="rgb(213,120,34)" fg:x="224" fg:w="1"/><text x="18.2709%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0209%" y="629" width="0.0805%" height="15" fill="rgb(243,49,53)" fg:x="224" fg:w="1"/><text x="18.2709%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0209%" y="613" width="0.0805%" height="15" fill="rgb(247,216,33)" fg:x="224" fg:w="1"/><text x="18.2709%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.0209%" y="597" width="0.0805%" height="15" fill="rgb(226,26,14)" fg:x="224" fg:w="1"/><text x="18.2709%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.0209%" y="581" width="0.0805%" height="15" fill="rgb(215,49,53)" fg:x="224" fg:w="1"/><text x="18.2709%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1014%" y="629" width="0.0805%" height="15" fill="rgb(245,162,40)" fg:x="225" fg:w="1"/><text x="18.3514%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1014%" y="613" width="0.0805%" height="15" fill="rgb(229,68,17)" fg:x="225" fg:w="1"/><text x="18.3514%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1014%" y="597" width="0.0805%" height="15" fill="rgb(213,182,10)" fg:x="225" fg:w="1"/><text x="18.3514%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1014%" y="581" width="0.0805%" height="15" fill="rgb(245,125,30)" fg:x="225" fg:w="1"/><text x="18.3514%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.1818%" y="629" width="0.0805%" height="15" fill="rgb(232,202,2)" fg:x="226" fg:w="1"/><text x="18.4318%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.1818%" y="613" width="0.0805%" height="15" fill="rgb(237,140,51)" fg:x="226" fg:w="1"/><text x="18.4318%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.1818%" y="597" width="0.0805%" height="15" fill="rgb(236,157,25)" fg:x="226" fg:w="1"/><text x="18.4318%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="18.1014%" y="661" width="0.2414%" height="15" fill="rgb(219,209,0)" fg:x="225" fg:w="3"/><text x="18.3514%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.1014%" y="645" width="0.2414%" height="15" fill="rgb(240,116,54)" fg:x="225" fg:w="3"/><text x="18.3514%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2623%" y="629" width="0.0805%" height="15" fill="rgb(216,10,36)" fg:x="227" fg:w="1"/><text x="18.5123%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.2623%" y="613" width="0.0805%" height="15" fill="rgb(222,72,44)" fg:x="227" fg:w="1"/><text x="18.5123%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2623%" y="597" width="0.0805%" height="15" fill="rgb(232,159,9)" fg:x="227" fg:w="1"/><text x="18.5123%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.3427%" y="629" width="0.1609%" height="15" fill="rgb(210,39,32)" fg:x="228" fg:w="2"/><text x="18.5927%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="18.3427%" y="613" width="0.1609%" height="15" fill="rgb(216,194,45)" fg:x="228" fg:w="2"/><text x="18.5927%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4232%" y="597" width="0.0805%" height="15" fill="rgb(218,18,35)" fg:x="229" fg:w="1"/><text x="18.6732%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4232%" y="581" width="0.0805%" height="15" fill="rgb(207,83,51)" fg:x="229" fg:w="1"/><text x="18.6732%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.29%)</title><rect x="17.2969%" y="725" width="1.2872%" height="15" fill="rgb(225,63,43)" fg:x="215" fg:w="16"/><text x="17.5469%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="18.1014%" y="709" width="0.4827%" height="15" fill="rgb(207,57,36)" fg:x="225" fg:w="6"/><text x="18.3514%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="18.1014%" y="693" width="0.4827%" height="15" fill="rgb(216,99,33)" fg:x="225" fg:w="6"/><text x="18.3514%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="18.1014%" y="677" width="0.4827%" height="15" fill="rgb(225,42,16)" fg:x="225" fg:w="6"/><text x="18.3514%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="18.3427%" y="661" width="0.2414%" height="15" fill="rgb(220,201,45)" fg:x="228" fg:w="3"/><text x="18.5927%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="18.3427%" y="645" width="0.2414%" height="15" fill="rgb(225,33,4)" fg:x="228" fg:w="3"/><text x="18.5927%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5036%" y="629" width="0.0805%" height="15" fill="rgb(224,33,50)" fg:x="230" fg:w="1"/><text x="18.7536%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5036%" y="613" width="0.0805%" height="15" fill="rgb(246,198,51)" fg:x="230" fg:w="1"/><text x="18.7536%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5036%" y="597" width="0.0805%" height="15" fill="rgb(205,22,4)" fg:x="230" fg:w="1"/><text x="18.7536%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.5036%" y="581" width="0.0805%" height="15" fill="rgb(206,3,8)" fg:x="230" fg:w="1"/><text x="18.7536%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.5036%" y="565" width="0.0805%" height="15" fill="rgb(251,23,15)" fg:x="230" fg:w="1"/><text x="18.7536%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="18.5036%" y="549" width="0.0805%" height="15" fill="rgb(252,88,28)" fg:x="230" fg:w="1"/><text x="18.7536%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.5841%" y="629" width="0.2414%" height="15" fill="rgb(212,127,14)" fg:x="231" fg:w="3"/><text x="18.8341%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.5841%" y="613" width="0.2414%" height="15" fill="rgb(247,145,37)" fg:x="231" fg:w="3"/><text x="18.8341%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.5841%" y="597" width="0.2414%" height="15" fill="rgb(209,117,53)" fg:x="231" fg:w="3"/><text x="18.8341%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="18.5841%" y="581" width="0.2414%" height="15" fill="rgb(212,90,42)" fg:x="231" fg:w="3"/><text x="18.8341%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7450%" y="565" width="0.0805%" height="15" fill="rgb(218,164,37)" fg:x="233" fg:w="1"/><text x="18.9950%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7450%" y="549" width="0.0805%" height="15" fill="rgb(246,65,34)" fg:x="233" fg:w="1"/><text x="18.9950%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.7450%" y="533" width="0.0805%" height="15" fill="rgb(231,100,33)" fg:x="233" fg:w="1"/><text x="18.9950%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.7450%" y="517" width="0.0805%" height="15" fill="rgb(228,126,14)" fg:x="233" fg:w="1"/><text x="18.9950%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.7450%" y="501" width="0.0805%" height="15" fill="rgb(215,173,21)" fg:x="233" fg:w="1"/><text x="18.9950%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7450%" y="485" width="0.0805%" height="15" fill="rgb(210,6,40)" fg:x="233" fg:w="1"/><text x="18.9950%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7450%" y="469" width="0.0805%" height="15" fill="rgb(212,48,18)" fg:x="233" fg:w="1"/><text x="18.9950%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.7450%" y="453" width="0.0805%" height="15" fill="rgb(230,214,11)" fg:x="233" fg:w="1"/><text x="18.9950%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.7450%" y="437" width="0.0805%" height="15" fill="rgb(254,105,39)" fg:x="233" fg:w="1"/><text x="18.9950%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.7450%" y="421" width="0.0805%" height="15" fill="rgb(245,158,5)" fg:x="233" fg:w="1"/><text x="18.9950%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.7450%" y="405" width="0.0805%" height="15" fill="rgb(249,208,11)" fg:x="233" fg:w="1"/><text x="18.9950%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7450%" y="389" width="0.0805%" height="15" fill="rgb(210,39,28)" fg:x="233" fg:w="1"/><text x="18.9950%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8254%" y="629" width="0.0805%" height="15" fill="rgb(211,56,53)" fg:x="234" fg:w="1"/><text x="19.0754%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.8254%" y="613" width="0.0805%" height="15" fill="rgb(226,201,30)" fg:x="234" fg:w="1"/><text x="19.0754%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8254%" y="597" width="0.0805%" height="15" fill="rgb(239,101,34)" fg:x="234" fg:w="1"/><text x="19.0754%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8254%" y="581" width="0.0805%" height="15" fill="rgb(226,209,5)" fg:x="234" fg:w="1"/><text x="19.0754%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.8254%" y="565" width="0.0805%" height="15" fill="rgb(250,105,47)" fg:x="234" fg:w="1"/><text x="19.0754%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="18.5841%" y="677" width="0.4023%" height="15" fill="rgb(230,72,3)" fg:x="231" fg:w="5"/><text x="18.8341%" y="687.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="18.5841%" y="661" width="0.4023%" height="15" fill="rgb(232,218,39)" fg:x="231" fg:w="5"/><text x="18.8341%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="18.5841%" y="645" width="0.4023%" height="15" fill="rgb(248,166,6)" fg:x="231" fg:w="5"/><text x="18.8341%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9059%" y="629" width="0.0805%" height="15" fill="rgb(247,89,20)" fg:x="235" fg:w="1"/><text x="19.1559%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9059%" y="613" width="0.0805%" height="15" fill="rgb(248,130,54)" fg:x="235" fg:w="1"/><text x="19.1559%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9059%" y="597" width="0.0805%" height="15" fill="rgb(234,196,4)" fg:x="235" fg:w="1"/><text x="19.1559%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9059%" y="581" width="0.0805%" height="15" fill="rgb(250,143,31)" fg:x="235" fg:w="1"/><text x="19.1559%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.9059%" y="565" width="0.0805%" height="15" fill="rgb(211,110,34)" fg:x="235" fg:w="1"/><text x="19.1559%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9059%" y="549" width="0.0805%" height="15" fill="rgb(215,124,48)" fg:x="235" fg:w="1"/><text x="19.1559%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9863%" y="629" width="0.0805%" height="15" fill="rgb(216,46,13)" fg:x="236" fg:w="1"/><text x="19.2363%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9863%" y="613" width="0.0805%" height="15" fill="rgb(205,184,25)" fg:x="236" fg:w="1"/><text x="19.2363%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9863%" y="597" width="0.0805%" height="15" fill="rgb(228,1,10)" fg:x="236" fg:w="1"/><text x="19.2363%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.9863%" y="581" width="0.0805%" height="15" fill="rgb(213,116,27)" fg:x="236" fg:w="1"/><text x="19.2363%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="18.5841%" y="709" width="0.5632%" height="15" fill="rgb(241,95,50)" fg:x="231" fg:w="7"/><text x="18.8341%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="18.5841%" y="693" width="0.5632%" height="15" fill="rgb(238,48,32)" fg:x="231" fg:w="7"/><text x="18.8341%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="18.9863%" y="677" width="0.1609%" height="15" fill="rgb(235,113,49)" fg:x="236" fg:w="2"/><text x="19.2363%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="18.9863%" y="661" width="0.1609%" height="15" fill="rgb(205,127,43)" fg:x="236" fg:w="2"/><text x="19.2363%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.9863%" y="645" width="0.1609%" height="15" fill="rgb(250,162,2)" fg:x="236" fg:w="2"/><text x="19.2363%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0668%" y="629" width="0.0805%" height="15" fill="rgb(220,13,41)" fg:x="237" fg:w="1"/><text x="19.3168%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0668%" y="613" width="0.0805%" height="15" fill="rgb(249,221,25)" fg:x="237" fg:w="1"/><text x="19.3168%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0668%" y="597" width="0.0805%" height="15" fill="rgb(215,208,19)" fg:x="237" fg:w="1"/><text x="19.3168%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0668%" y="581" width="0.0805%" height="15" fill="rgb(236,175,2)" fg:x="237" fg:w="1"/><text x="19.3168%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.0668%" y="565" width="0.0805%" height="15" fill="rgb(241,52,2)" fg:x="237" fg:w="1"/><text x="19.3168%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0668%" y="549" width="0.0805%" height="15" fill="rgb(248,140,14)" fg:x="237" fg:w="1"/><text x="19.3168%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.0668%" y="533" width="0.0805%" height="15" fill="rgb(253,22,42)" fg:x="237" fg:w="1"/><text x="19.3168%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.0668%" y="517" width="0.0805%" height="15" fill="rgb(234,61,47)" fg:x="237" fg:w="1"/><text x="19.3168%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="19.0668%" y="501" width="0.0805%" height="15" fill="rgb(208,226,15)" fg:x="237" fg:w="1"/><text x="19.3168%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (24 samples, 1.93%)</title><rect x="17.2969%" y="741" width="1.9308%" height="15" fill="rgb(217,221,4)" fg:x="215" fg:w="24"/><text x="17.5469%" y="751.50">p..</text></g><g><title>plugins_core::tools::leads_to (8 samples, 0.64%)</title><rect x="18.5841%" y="725" width="0.6436%" height="15" fill="rgb(212,174,34)" fg:x="231" fg:w="8"/><text x="18.8341%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.1472%" y="709" width="0.0805%" height="15" fill="rgb(253,83,4)" fg:x="238" fg:w="1"/><text x="19.3972%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="19.1472%" y="693" width="0.0805%" height="15" fill="rgb(250,195,49)" fg:x="238" fg:w="1"/><text x="19.3972%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.1472%" y="677" width="0.0805%" height="15" fill="rgb(241,192,25)" fg:x="238" fg:w="1"/><text x="19.3972%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="19.1472%" y="661" width="0.0805%" height="15" fill="rgb(208,124,10)" fg:x="238" fg:w="1"/><text x="19.3972%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.1472%" y="645" width="0.0805%" height="15" fill="rgb(222,33,0)" fg:x="238" fg:w="1"/><text x="19.3972%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="19.2277%" y="709" width="0.0805%" height="15" fill="rgb(234,209,28)" fg:x="239" fg:w="1"/><text x="19.4777%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.2277%" y="693" width="0.0805%" height="15" fill="rgb(224,11,23)" fg:x="239" fg:w="1"/><text x="19.4777%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2277%" y="677" width="0.0805%" height="15" fill="rgb(232,99,1)" fg:x="239" fg:w="1"/><text x="19.4777%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2277%" y="661" width="0.0805%" height="15" fill="rgb(237,95,45)" fg:x="239" fg:w="1"/><text x="19.4777%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2277%" y="645" width="0.0805%" height="15" fill="rgb(208,109,11)" fg:x="239" fg:w="1"/><text x="19.4777%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2277%" y="629" width="0.0805%" height="15" fill="rgb(216,190,48)" fg:x="239" fg:w="1"/><text x="19.4777%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2277%" y="613" width="0.0805%" height="15" fill="rgb(251,171,36)" fg:x="239" fg:w="1"/><text x="19.4777%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2277%" y="597" width="0.0805%" height="15" fill="rgb(230,62,22)" fg:x="239" fg:w="1"/><text x="19.4777%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.2277%" y="581" width="0.0805%" height="15" fill="rgb(225,114,35)" fg:x="239" fg:w="1"/><text x="19.4777%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.2277%" y="565" width="0.0805%" height="15" fill="rgb(215,118,42)" fg:x="239" fg:w="1"/><text x="19.4777%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (32 samples, 2.57%)</title><rect x="16.8142%" y="789" width="2.5744%" height="15" fill="rgb(243,119,21)" fg:x="209" fg:w="32"/><text x="17.0642%" y="799.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.57%)</title><rect x="16.8142%" y="773" width="2.5744%" height="15" fill="rgb(252,177,53)" fg:x="209" fg:w="32"/><text x="17.0642%" y="783.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (32 samples, 2.57%)</title><rect x="16.8142%" y="757" width="2.5744%" height="15" fill="rgb(237,209,29)" fg:x="209" fg:w="32"/><text x="17.0642%" y="767.50">pl..</text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="19.2277%" y="741" width="0.1609%" height="15" fill="rgb(212,65,23)" fg:x="239" fg:w="2"/><text x="19.4777%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="19.2277%" y="725" width="0.1609%" height="15" fill="rgb(230,222,46)" fg:x="239" fg:w="2"/><text x="19.4777%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.3081%" y="709" width="0.0805%" height="15" fill="rgb(215,135,32)" fg:x="240" fg:w="1"/><text x="19.5581%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.3081%" y="693" width="0.0805%" height="15" fill="rgb(246,101,22)" fg:x="240" fg:w="1"/><text x="19.5581%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3081%" y="677" width="0.0805%" height="15" fill="rgb(206,107,13)" fg:x="240" fg:w="1"/><text x="19.5581%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.3081%" y="661" width="0.0805%" height="15" fill="rgb(250,100,44)" fg:x="240" fg:w="1"/><text x="19.5581%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3081%" y="645" width="0.0805%" height="15" fill="rgb(231,147,38)" fg:x="240" fg:w="1"/><text x="19.5581%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.3081%" y="629" width="0.0805%" height="15" fill="rgb(229,8,40)" fg:x="240" fg:w="1"/><text x="19.5581%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.3081%" y="613" width="0.0805%" height="15" fill="rgb(221,135,30)" fg:x="240" fg:w="1"/><text x="19.5581%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3886%" y="757" width="0.0805%" height="15" fill="rgb(249,193,18)" fg:x="241" fg:w="1"/><text x="19.6386%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3886%" y="741" width="0.0805%" height="15" fill="rgb(209,133,39)" fg:x="241" fg:w="1"/><text x="19.6386%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.3886%" y="725" width="0.0805%" height="15" fill="rgb(232,100,14)" fg:x="241" fg:w="1"/><text x="19.6386%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.3886%" y="709" width="0.0805%" height="15" fill="rgb(224,185,1)" fg:x="241" fg:w="1"/><text x="19.6386%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.3886%" y="693" width="0.0805%" height="15" fill="rgb(223,139,8)" fg:x="241" fg:w="1"/><text x="19.6386%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3886%" y="677" width="0.0805%" height="15" fill="rgb(232,213,38)" fg:x="241" fg:w="1"/><text x="19.6386%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3886%" y="661" width="0.0805%" height="15" fill="rgb(207,94,22)" fg:x="241" fg:w="1"/><text x="19.6386%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.3886%" y="645" width="0.0805%" height="15" fill="rgb(219,183,54)" fg:x="241" fg:w="1"/><text x="19.6386%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.3886%" y="629" width="0.0805%" height="15" fill="rgb(216,185,54)" fg:x="241" fg:w="1"/><text x="19.6386%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.3886%" y="613" width="0.0805%" height="15" fill="rgb(254,217,39)" fg:x="241" fg:w="1"/><text x="19.6386%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.3886%" y="597" width="0.0805%" height="15" fill="rgb(240,178,23)" fg:x="241" fg:w="1"/><text x="19.6386%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3886%" y="581" width="0.0805%" height="15" fill="rgb(218,11,47)" fg:x="241" fg:w="1"/><text x="19.6386%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.4690%" y="741" width="0.0805%" height="15" fill="rgb(218,51,51)" fg:x="242" fg:w="1"/><text x="19.7190%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="19.3886%" y="773" width="0.2414%" height="15" fill="rgb(238,126,27)" fg:x="241" fg:w="3"/><text x="19.6386%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.4690%" y="757" width="0.1609%" height="15" fill="rgb(249,202,22)" fg:x="242" fg:w="2"/><text x="19.7190%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5495%" y="741" width="0.0805%" height="15" fill="rgb(254,195,49)" fg:x="243" fg:w="1"/><text x="19.7995%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="19.5495%" y="725" width="0.0805%" height="15" fill="rgb(208,123,14)" fg:x="243" fg:w="1"/><text x="19.7995%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.5495%" y="709" width="0.0805%" height="15" fill="rgb(224,200,8)" fg:x="243" fg:w="1"/><text x="19.7995%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.7104%" y="725" width="0.0805%" height="15" fill="rgb(217,61,36)" fg:x="245" fg:w="1"/><text x="19.9604%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.7908%" y="725" width="0.0805%" height="15" fill="rgb(206,35,45)" fg:x="246" fg:w="1"/><text x="20.0408%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="19.7908%" y="709" width="0.0805%" height="15" fill="rgb(217,65,33)" fg:x="246" fg:w="1"/><text x="20.0408%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="19.7908%" y="693" width="0.0805%" height="15" fill="rgb(222,158,48)" fg:x="246" fg:w="1"/><text x="20.0408%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7908%" y="677" width="0.0805%" height="15" fill="rgb(254,2,54)" fg:x="246" fg:w="1"/><text x="20.0408%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.7908%" y="661" width="0.0805%" height="15" fill="rgb(250,143,38)" fg:x="246" fg:w="1"/><text x="20.0408%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.7908%" y="645" width="0.0805%" height="15" fill="rgb(248,25,0)" fg:x="246" fg:w="1"/><text x="20.0408%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.7908%" y="629" width="0.0805%" height="15" fill="rgb(206,152,27)" fg:x="246" fg:w="1"/><text x="20.0408%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.7908%" y="613" width="0.0805%" height="15" fill="rgb(240,77,30)" fg:x="246" fg:w="1"/><text x="20.0408%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.7908%" y="597" width="0.0805%" height="15" fill="rgb(231,5,3)" fg:x="246" fg:w="1"/><text x="20.0408%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.7908%" y="581" width="0.0805%" height="15" fill="rgb(207,226,32)" fg:x="246" fg:w="1"/><text x="20.0408%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.7908%" y="565" width="0.0805%" height="15" fill="rgb(222,207,47)" fg:x="246" fg:w="1"/><text x="20.0408%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.7908%" y="549" width="0.0805%" height="15" fill="rgb(229,115,45)" fg:x="246" fg:w="1"/><text x="20.0408%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.7908%" y="533" width="0.0805%" height="15" fill="rgb(224,191,6)" fg:x="246" fg:w="1"/><text x="20.0408%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.7908%" y="517" width="0.0805%" height="15" fill="rgb(230,227,24)" fg:x="246" fg:w="1"/><text x="20.0408%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.7908%" y="501" width="0.0805%" height="15" fill="rgb(228,80,19)" fg:x="246" fg:w="1"/><text x="20.0408%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8713%" y="517" width="0.0805%" height="15" fill="rgb(247,229,0)" fg:x="247" fg:w="1"/><text x="20.1213%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.8713%" y="693" width="0.1609%" height="15" fill="rgb(237,194,15)" fg:x="247" fg:w="2"/><text x="20.1213%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.8713%" y="677" width="0.1609%" height="15" fill="rgb(219,203,20)" fg:x="247" fg:w="2"/><text x="20.1213%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="19.8713%" y="661" width="0.1609%" height="15" fill="rgb(234,128,8)" fg:x="247" fg:w="2"/><text x="20.1213%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="19.8713%" y="645" width="0.1609%" height="15" fill="rgb(248,202,8)" fg:x="247" fg:w="2"/><text x="20.1213%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="19.8713%" y="629" width="0.1609%" height="15" fill="rgb(206,104,37)" fg:x="247" fg:w="2"/><text x="20.1213%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="19.8713%" y="613" width="0.1609%" height="15" fill="rgb(223,8,27)" fg:x="247" fg:w="2"/><text x="20.1213%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="19.8713%" y="597" width="0.1609%" height="15" fill="rgb(216,217,28)" fg:x="247" fg:w="2"/><text x="20.1213%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="19.8713%" y="581" width="0.1609%" height="15" fill="rgb(249,199,1)" fg:x="247" fg:w="2"/><text x="20.1213%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="19.8713%" y="565" width="0.1609%" height="15" fill="rgb(240,85,17)" fg:x="247" fg:w="2"/><text x="20.1213%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="19.8713%" y="549" width="0.1609%" height="15" fill="rgb(206,108,45)" fg:x="247" fg:w="2"/><text x="20.1213%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="19.8713%" y="533" width="0.1609%" height="15" fill="rgb(245,210,41)" fg:x="247" fg:w="2"/><text x="20.1213%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="19.9517%" y="517" width="0.0805%" height="15" fill="rgb(206,13,37)" fg:x="248" fg:w="1"/><text x="20.2017%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="19.9517%" y="501" width="0.0805%" height="15" fill="rgb(250,61,18)" fg:x="248" fg:w="1"/><text x="20.2017%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1931%" y="613" width="0.0805%" height="15" fill="rgb(235,172,48)" fg:x="251" fg:w="1"/><text x="20.4431%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="20.0322%" y="677" width="0.3218%" height="15" fill="rgb(249,201,17)" fg:x="249" fg:w="4"/><text x="20.2822%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.0322%" y="661" width="0.3218%" height="15" fill="rgb(219,208,6)" fg:x="249" fg:w="4"/><text x="20.2822%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.0322%" y="645" width="0.3218%" height="15" fill="rgb(248,31,23)" fg:x="249" fg:w="4"/><text x="20.2822%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.1931%" y="629" width="0.1609%" height="15" fill="rgb(245,15,42)" fg:x="251" fg:w="2"/><text x="20.4431%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.2735%" y="613" width="0.0805%" height="15" fill="rgb(222,217,39)" fg:x="252" fg:w="1"/><text x="20.5235%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.4344%" y="661" width="0.3218%" height="15" fill="rgb(210,219,27)" fg:x="254" fg:w="4"/><text x="20.6844%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.5149%" y="645" width="0.2414%" height="15" fill="rgb(252,166,36)" fg:x="255" fg:w="3"/><text x="20.7649%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.5953%" y="629" width="0.1609%" height="15" fill="rgb(245,132,34)" fg:x="256" fg:w="2"/><text x="20.8453%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.5953%" y="613" width="0.1609%" height="15" fill="rgb(236,54,3)" fg:x="256" fg:w="2"/><text x="20.8453%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.6758%" y="597" width="0.0805%" height="15" fill="rgb(241,173,43)" fg:x="257" fg:w="1"/><text x="20.9258%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.6758%" y="581" width="0.0805%" height="15" fill="rgb(215,190,9)" fg:x="257" fg:w="1"/><text x="20.9258%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.6758%" y="565" width="0.0805%" height="15" fill="rgb(242,101,16)" fg:x="257" fg:w="1"/><text x="20.9258%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.9171%" y="597" width="0.0805%" height="15" fill="rgb(223,190,21)" fg:x="260" fg:w="1"/><text x="21.1671%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.9171%" y="645" width="0.1609%" height="15" fill="rgb(215,228,25)" fg:x="260" fg:w="2"/><text x="21.1671%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.9171%" y="629" width="0.1609%" height="15" fill="rgb(225,36,22)" fg:x="260" fg:w="2"/><text x="21.1671%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.9171%" y="613" width="0.1609%" height="15" fill="rgb(251,106,46)" fg:x="260" fg:w="2"/><text x="21.1671%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.9976%" y="597" width="0.0805%" height="15" fill="rgb(208,90,1)" fg:x="261" fg:w="1"/><text x="21.2476%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.9976%" y="581" width="0.0805%" height="15" fill="rgb(243,10,4)" fg:x="261" fg:w="1"/><text x="21.2476%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.9976%" y="565" width="0.0805%" height="15" fill="rgb(212,137,27)" fg:x="261" fg:w="1"/><text x="21.2476%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="21.0780%" y="629" width="0.1609%" height="15" fill="rgb(231,220,49)" fg:x="262" fg:w="2"/><text x="21.3280%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.1585%" y="613" width="0.0805%" height="15" fill="rgb(237,96,20)" fg:x="263" fg:w="1"/><text x="21.4085%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.1585%" y="597" width="0.0805%" height="15" fill="rgb(239,229,30)" fg:x="263" fg:w="1"/><text x="21.4085%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.1585%" y="581" width="0.0805%" height="15" fill="rgb(219,65,33)" fg:x="263" fg:w="1"/><text x="21.4085%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.3194%" y="597" width="0.0805%" height="15" fill="rgb(243,134,7)" fg:x="265" fg:w="1"/><text x="21.5694%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.3998%" y="597" width="0.2414%" height="15" fill="rgb(216,177,54)" fg:x="266" fg:w="3"/><text x="21.6498%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.3998%" y="581" width="0.2414%" height="15" fill="rgb(211,160,20)" fg:x="266" fg:w="3"/><text x="21.6498%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="21.3998%" y="565" width="0.2414%" height="15" fill="rgb(239,85,39)" fg:x="266" fg:w="3"/><text x="21.6498%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="21.3998%" y="549" width="0.2414%" height="15" fill="rgb(232,125,22)" fg:x="266" fg:w="3"/><text x="21.6498%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="21.6412%" y="581" width="0.1609%" height="15" fill="rgb(244,57,34)" fg:x="269" fg:w="2"/><text x="21.8912%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.6412%" y="565" width="0.1609%" height="15" fill="rgb(214,203,32)" fg:x="269" fg:w="2"/><text x="21.8912%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.7216%" y="549" width="0.0805%" height="15" fill="rgb(207,58,43)" fg:x="270" fg:w="1"/><text x="21.9716%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7216%" y="533" width="0.0805%" height="15" fill="rgb(215,193,15)" fg:x="270" fg:w="1"/><text x="21.9716%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="21.6412%" y="597" width="0.4827%" height="15" fill="rgb(232,15,44)" fg:x="269" fg:w="6"/><text x="21.8912%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="21.8021%" y="581" width="0.3218%" height="15" fill="rgb(212,3,48)" fg:x="271" fg:w="4"/><text x="22.0521%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.8021%" y="565" width="0.3218%" height="15" fill="rgb(218,128,7)" fg:x="271" fg:w="4"/><text x="22.0521%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.9630%" y="549" width="0.1609%" height="15" fill="rgb(226,216,39)" fg:x="273" fg:w="2"/><text x="22.2130%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.9630%" y="533" width="0.1609%" height="15" fill="rgb(243,47,51)" fg:x="273" fg:w="2"/><text x="22.2130%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.0434%" y="517" width="0.0805%" height="15" fill="rgb(241,183,40)" fg:x="274" fg:w="1"/><text x="22.2934%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.0434%" y="501" width="0.0805%" height="15" fill="rgb(231,217,32)" fg:x="274" fg:w="1"/><text x="22.2934%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.0434%" y="485" width="0.0805%" height="15" fill="rgb(229,61,38)" fg:x="274" fg:w="1"/><text x="22.2934%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="21.2389%" y="613" width="0.9654%" height="15" fill="rgb(225,210,5)" fg:x="264" fg:w="12"/><text x="21.4889%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.1239%" y="597" width="0.0805%" height="15" fill="rgb(231,79,45)" fg:x="275" fg:w="1"/><text x="22.3739%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="21.2389%" y="629" width="1.1263%" height="15" fill="rgb(224,100,7)" fg:x="264" fg:w="14"/><text x="21.4889%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.2043%" y="613" width="0.1609%" height="15" fill="rgb(241,198,18)" fg:x="276" fg:w="2"/><text x="22.4543%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="20.7562%" y="661" width="1.8504%" height="15" fill="rgb(252,97,53)" fg:x="258" fg:w="23"/><text x="21.0062%" y="671.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="21.0780%" y="645" width="1.5286%" height="15" fill="rgb(220,88,7)" fg:x="262" fg:w="19"/><text x="21.3280%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="22.3652%" y="629" width="0.2414%" height="15" fill="rgb(213,176,14)" fg:x="278" fg:w="3"/><text x="22.6152%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.4457%" y="613" width="0.1609%" height="15" fill="rgb(246,73,7)" fg:x="279" fg:w="2"/><text x="22.6957%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="22.4457%" y="597" width="0.1609%" height="15" fill="rgb(245,64,36)" fg:x="279" fg:w="2"/><text x="22.6957%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.90%)</title><rect x="20.0322%" y="693" width="2.8962%" height="15" fill="rgb(245,80,10)" fg:x="249" fg:w="36"/><text x="20.2822%" y="703.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.57%)</title><rect x="20.3540%" y="677" width="2.5744%" height="15" fill="rgb(232,107,50)" fg:x="253" fg:w="32"/><text x="20.6040%" y="687.50">se..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="22.6066%" y="661" width="0.3218%" height="15" fill="rgb(253,3,0)" fg:x="281" fg:w="4"/><text x="22.8566%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="22.6066%" y="645" width="0.3218%" height="15" fill="rgb(212,99,53)" fg:x="281" fg:w="4"/><text x="22.8566%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="22.6066%" y="629" width="0.3218%" height="15" fill="rgb(249,111,54)" fg:x="281" fg:w="4"/><text x="22.8566%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="22.7675%" y="613" width="0.1609%" height="15" fill="rgb(249,55,30)" fg:x="283" fg:w="2"/><text x="23.0175%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="22.7675%" y="597" width="0.1609%" height="15" fill="rgb(237,47,42)" fg:x="283" fg:w="2"/><text x="23.0175%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="22.7675%" y="581" width="0.1609%" height="15" fill="rgb(211,20,18)" fg:x="283" fg:w="2"/><text x="23.0175%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9284%" y="645" width="0.0805%" height="15" fill="rgb(231,203,46)" fg:x="285" fg:w="1"/><text x="23.1784%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.0893%" y="629" width="0.1609%" height="15" fill="rgb(237,142,3)" fg:x="287" fg:w="2"/><text x="23.3393%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.0893%" y="613" width="0.1609%" height="15" fill="rgb(241,107,1)" fg:x="287" fg:w="2"/><text x="23.3393%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="23.2502%" y="613" width="0.1609%" height="15" fill="rgb(229,83,13)" fg:x="289" fg:w="2"/><text x="23.5002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.2502%" y="597" width="0.1609%" height="15" fill="rgb(241,91,40)" fg:x="289" fg:w="2"/><text x="23.5002%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3307%" y="581" width="0.0805%" height="15" fill="rgb(225,3,45)" fg:x="290" fg:w="1"/><text x="23.5807%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4111%" y="597" width="0.0805%" height="15" fill="rgb(244,223,14)" fg:x="291" fg:w="1"/><text x="23.6611%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="22.9284%" y="693" width="0.7241%" height="15" fill="rgb(224,124,37)" fg:x="285" fg:w="9"/><text x="23.1784%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="22.9284%" y="677" width="0.7241%" height="15" fill="rgb(251,171,30)" fg:x="285" fg:w="9"/><text x="23.1784%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="22.9284%" y="661" width="0.7241%" height="15" fill="rgb(236,46,54)" fg:x="285" fg:w="9"/><text x="23.1784%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="23.0088%" y="645" width="0.6436%" height="15" fill="rgb(245,213,5)" fg:x="286" fg:w="8"/><text x="23.2588%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="23.2502%" y="629" width="0.4023%" height="15" fill="rgb(230,144,27)" fg:x="289" fg:w="5"/><text x="23.5002%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.4111%" y="613" width="0.2414%" height="15" fill="rgb(220,86,6)" fg:x="291" fg:w="3"/><text x="23.6611%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.4916%" y="597" width="0.1609%" height="15" fill="rgb(240,20,13)" fg:x="292" fg:w="2"/><text x="23.7416%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5720%" y="581" width="0.0805%" height="15" fill="rgb(217,89,34)" fg:x="293" fg:w="1"/><text x="23.8220%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="23.6525%" y="677" width="0.0805%" height="15" fill="rgb(229,13,5)" fg:x="294" fg:w="1"/><text x="23.9025%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="23.7329%" y="677" width="0.0805%" height="15" fill="rgb(244,67,35)" fg:x="295" fg:w="1"/><text x="23.9829%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7329%" y="661" width="0.0805%" height="15" fill="rgb(221,40,2)" fg:x="295" fg:w="1"/><text x="23.9829%" y="671.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="24.0547%" y="645" width="0.3218%" height="15" fill="rgb(237,157,21)" fg:x="299" fg:w="4"/><text x="24.3047%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.3765%" y="645" width="0.1609%" height="15" fill="rgb(222,94,11)" fg:x="303" fg:w="2"/><text x="24.6265%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.3765%" y="629" width="0.1609%" height="15" fill="rgb(249,113,6)" fg:x="303" fg:w="2"/><text x="24.6265%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.4570%" y="613" width="0.0805%" height="15" fill="rgb(238,137,36)" fg:x="304" fg:w="1"/><text x="24.7070%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="24.5374%" y="645" width="0.0805%" height="15" fill="rgb(210,102,26)" fg:x="305" fg:w="1"/><text x="24.7874%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.6983%" y="629" width="0.0805%" height="15" fill="rgb(218,30,30)" fg:x="307" fg:w="1"/><text x="24.9483%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.7788%" y="565" width="0.0805%" height="15" fill="rgb(214,67,26)" fg:x="308" fg:w="1"/><text x="25.0288%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="24.8592%" y="565" width="0.1609%" height="15" fill="rgb(251,9,53)" fg:x="309" fg:w="2"/><text x="25.1092%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.8592%" y="549" width="0.1609%" height="15" fill="rgb(228,204,25)" fg:x="309" fg:w="2"/><text x="25.1092%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9397%" y="533" width="0.0805%" height="15" fill="rgb(207,153,8)" fg:x="310" fg:w="1"/><text x="25.1897%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="24.7788%" y="597" width="0.3218%" height="15" fill="rgb(242,9,16)" fg:x="308" fg:w="4"/><text x="25.0288%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="24.7788%" y="581" width="0.3218%" height="15" fill="rgb(217,211,10)" fg:x="308" fg:w="4"/><text x="25.0288%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0201%" y="565" width="0.0805%" height="15" fill="rgb(219,228,52)" fg:x="311" fg:w="1"/><text x="25.2701%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.2615%" y="565" width="0.2414%" height="15" fill="rgb(231,92,29)" fg:x="314" fg:w="3"/><text x="25.5115%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.2615%" y="549" width="0.2414%" height="15" fill="rgb(232,8,23)" fg:x="314" fg:w="3"/><text x="25.5115%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.3419%" y="533" width="0.1609%" height="15" fill="rgb(216,211,34)" fg:x="315" fg:w="2"/><text x="25.5919%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7442%" y="469" width="0.0805%" height="15" fill="rgb(236,151,0)" fg:x="320" fg:w="1"/><text x="25.9942%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7442%" y="453" width="0.0805%" height="15" fill="rgb(209,168,3)" fg:x="320" fg:w="1"/><text x="25.9942%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="25.5028%" y="549" width="0.4827%" height="15" fill="rgb(208,129,28)" fg:x="317" fg:w="6"/><text x="25.7528%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="25.5833%" y="533" width="0.4023%" height="15" fill="rgb(229,78,22)" fg:x="318" fg:w="5"/><text x="25.8333%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="25.5833%" y="517" width="0.4023%" height="15" fill="rgb(228,187,13)" fg:x="318" fg:w="5"/><text x="25.8333%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="25.6637%" y="501" width="0.3218%" height="15" fill="rgb(240,119,24)" fg:x="319" fg:w="4"/><text x="25.9137%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="25.7442%" y="485" width="0.2414%" height="15" fill="rgb(209,194,42)" fg:x="320" fg:w="3"/><text x="25.9942%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="25.8246%" y="469" width="0.1609%" height="15" fill="rgb(247,200,46)" fg:x="321" fg:w="2"/><text x="26.0746%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="25.9051%" y="453" width="0.0805%" height="15" fill="rgb(218,76,16)" fg:x="322" fg:w="1"/><text x="26.1551%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="25.1006%" y="581" width="1.0459%" height="15" fill="rgb(225,21,48)" fg:x="312" fg:w="13"/><text x="25.3506%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="25.5028%" y="565" width="0.6436%" height="15" fill="rgb(239,223,50)" fg:x="317" fg:w="8"/><text x="25.7528%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.9855%" y="549" width="0.1609%" height="15" fill="rgb(244,45,21)" fg:x="323" fg:w="2"/><text x="26.2355%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 1.45%)</title><rect x="24.7788%" y="629" width="1.4481%" height="15" fill="rgb(232,33,43)" fg:x="308" fg:w="18"/><text x="25.0288%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.45%)</title><rect x="24.7788%" y="613" width="1.4481%" height="15" fill="rgb(209,8,3)" fg:x="308" fg:w="18"/><text x="25.0288%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.13%)</title><rect x="25.1006%" y="597" width="1.1263%" height="15" fill="rgb(214,25,53)" fg:x="312" fg:w="14"/><text x="25.3506%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1464%" y="581" width="0.0805%" height="15" fill="rgb(254,186,54)" fg:x="325" fg:w="1"/><text x="26.3964%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2269%" y="629" width="0.0805%" height="15" fill="rgb(208,174,49)" fg:x="326" fg:w="1"/><text x="26.4769%" y="639.50"></text></g><g><title>engine::session::Session::flush (88 samples, 7.08%)</title><rect x="19.3886%" y="789" width="7.0796%" height="15" fill="rgb(233,191,51)" fg:x="241" fg:w="88"/><text x="19.6386%" y="799.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (85 samples, 6.84%)</title><rect x="19.6299%" y="773" width="6.8383%" height="15" fill="rgb(222,134,10)" fg:x="244" fg:w="85"/><text x="19.8799%" y="783.50">engine::s..</text></g><g><title>engine::session::state::State::close (84 samples, 6.76%)</title><rect x="19.7104%" y="757" width="6.7578%" height="15" fill="rgb(230,226,20)" fg:x="245" fg:w="84"/><text x="19.9604%" y="767.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (84 samples, 6.76%)</title><rect x="19.7104%" y="741" width="6.7578%" height="15" fill="rgb(251,111,25)" fg:x="245" fg:w="84"/><text x="19.9604%" y="751.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (82 samples, 6.60%)</title><rect x="19.8713%" y="725" width="6.5969%" height="15" fill="rgb(224,40,46)" fg:x="247" fg:w="82"/><text x="20.1213%" y="735.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (82 samples, 6.60%)</title><rect x="19.8713%" y="709" width="6.5969%" height="15" fill="rgb(236,108,47)" fg:x="247" fg:w="82"/><text x="20.1213%" y="719.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.82%)</title><rect x="23.6525%" y="693" width="2.8158%" height="15" fill="rgb(234,93,0)" fg:x="294" fg:w="35"/><text x="23.9025%" y="703.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.65%)</title><rect x="23.8134%" y="677" width="2.6549%" height="15" fill="rgb(224,213,32)" fg:x="296" fg:w="33"/><text x="24.0634%" y="687.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.65%)</title><rect x="23.8134%" y="661" width="2.6549%" height="15" fill="rgb(251,11,48)" fg:x="296" fg:w="33"/><text x="24.0634%" y="671.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (23 samples, 1.85%)</title><rect x="24.6179%" y="645" width="1.8504%" height="15" fill="rgb(236,173,5)" fg:x="306" fg:w="23"/><text x="24.8679%" y="655.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.3073%" y="629" width="0.1609%" height="15" fill="rgb(230,95,12)" fg:x="327" fg:w="2"/><text x="26.5573%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3878%" y="613" width="0.0805%" height="15" fill="rgb(232,209,1)" fg:x="328" fg:w="1"/><text x="26.6378%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.3878%" y="597" width="0.0805%" height="15" fill="rgb(232,6,1)" fg:x="328" fg:w="1"/><text x="26.6378%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="26.4682%" y="773" width="0.1609%" height="15" fill="rgb(210,224,50)" fg:x="329" fg:w="2"/><text x="26.7182%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.5487%" y="757" width="0.0805%" height="15" fill="rgb(228,127,35)" fg:x="330" fg:w="1"/><text x="26.7987%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.5487%" y="741" width="0.0805%" height="15" fill="rgb(245,102,45)" fg:x="330" fg:w="1"/><text x="26.7987%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.5487%" y="725" width="0.0805%" height="15" fill="rgb(214,1,49)" fg:x="330" fg:w="1"/><text x="26.7987%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="26.5487%" y="709" width="0.0805%" height="15" fill="rgb(226,163,40)" fg:x="330" fg:w="1"/><text x="26.7987%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7096%" y="757" width="0.0805%" height="15" fill="rgb(239,212,28)" fg:x="332" fg:w="1"/><text x="26.9596%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.7900%" y="757" width="0.0805%" height="15" fill="rgb(220,20,13)" fg:x="333" fg:w="1"/><text x="27.0400%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.7900%" y="741" width="0.0805%" height="15" fill="rgb(210,164,35)" fg:x="333" fg:w="1"/><text x="27.0400%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.7900%" y="725" width="0.0805%" height="15" fill="rgb(248,109,41)" fg:x="333" fg:w="1"/><text x="27.0400%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7900%" y="709" width="0.0805%" height="15" fill="rgb(238,23,50)" fg:x="333" fg:w="1"/><text x="27.0400%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7900%" y="693" width="0.0805%" height="15" fill="rgb(211,48,49)" fg:x="333" fg:w="1"/><text x="27.0400%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7900%" y="677" width="0.0805%" height="15" fill="rgb(223,36,21)" fg:x="333" fg:w="1"/><text x="27.0400%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.7900%" y="661" width="0.0805%" height="15" fill="rgb(207,123,46)" fg:x="333" fg:w="1"/><text x="27.0400%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.7900%" y="645" width="0.0805%" height="15" fill="rgb(240,218,32)" fg:x="333" fg:w="1"/><text x="27.0400%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.7900%" y="629" width="0.0805%" height="15" fill="rgb(252,5,43)" fg:x="333" fg:w="1"/><text x="27.0400%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7900%" y="613" width="0.0805%" height="15" fill="rgb(252,84,19)" fg:x="333" fg:w="1"/><text x="27.0400%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7900%" y="597" width="0.0805%" height="15" fill="rgb(243,152,39)" fg:x="333" fg:w="1"/><text x="27.0400%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="26.4682%" y="789" width="0.4827%" height="15" fill="rgb(234,160,15)" fg:x="329" fg:w="6"/><text x="26.7182%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="26.6291%" y="773" width="0.3218%" height="15" fill="rgb(237,34,20)" fg:x="331" fg:w="4"/><text x="26.8791%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="26.8705%" y="757" width="0.0805%" height="15" fill="rgb(229,97,13)" fg:x="334" fg:w="1"/><text x="27.1205%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.8705%" y="741" width="0.0805%" height="15" fill="rgb(234,71,50)" fg:x="334" fg:w="1"/><text x="27.1205%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.8705%" y="725" width="0.0805%" height="15" fill="rgb(253,155,4)" fg:x="334" fg:w="1"/><text x="27.1205%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8705%" y="709" width="0.0805%" height="15" fill="rgb(222,185,37)" fg:x="334" fg:w="1"/><text x="27.1205%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8705%" y="693" width="0.0805%" height="15" fill="rgb(251,177,13)" fg:x="334" fg:w="1"/><text x="27.1205%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8705%" y="677" width="0.0805%" height="15" fill="rgb(250,179,40)" fg:x="334" fg:w="1"/><text x="27.1205%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8705%" y="661" width="0.0805%" height="15" fill="rgb(242,44,2)" fg:x="334" fg:w="1"/><text x="27.1205%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.8705%" y="645" width="0.0805%" height="15" fill="rgb(216,177,13)" fg:x="334" fg:w="1"/><text x="27.1205%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8705%" y="629" width="0.0805%" height="15" fill="rgb(216,106,43)" fg:x="334" fg:w="1"/><text x="27.1205%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="26.8705%" y="613" width="0.0805%" height="15" fill="rgb(216,183,2)" fg:x="334" fg:w="1"/><text x="27.1205%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="27.1118%" y="741" width="0.0805%" height="15" fill="rgb(249,75,3)" fg:x="337" fg:w="1"/><text x="27.3618%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="27.1118%" y="725" width="0.0805%" height="15" fill="rgb(219,67,39)" fg:x="337" fg:w="1"/><text x="27.3618%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.1118%" y="709" width="0.0805%" height="15" fill="rgb(253,228,2)" fg:x="337" fg:w="1"/><text x="27.3618%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="27.0314%" y="757" width="0.2414%" height="15" fill="rgb(235,138,27)" fg:x="336" fg:w="3"/><text x="27.2814%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="27.1923%" y="741" width="0.0805%" height="15" fill="rgb(236,97,51)" fg:x="338" fg:w="1"/><text x="27.4423%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.1923%" y="725" width="0.0805%" height="15" fill="rgb(240,80,30)" fg:x="338" fg:w="1"/><text x="27.4423%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4336%" y="645" width="0.0805%" height="15" fill="rgb(230,178,19)" fg:x="341" fg:w="1"/><text x="27.6836%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4336%" y="629" width="0.0805%" height="15" fill="rgb(210,190,27)" fg:x="341" fg:w="1"/><text x="27.6836%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.4336%" y="613" width="0.0805%" height="15" fill="rgb(222,107,31)" fg:x="341" fg:w="1"/><text x="27.6836%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.4336%" y="597" width="0.0805%" height="15" fill="rgb(216,127,34)" fg:x="341" fg:w="1"/><text x="27.6836%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.4336%" y="581" width="0.0805%" height="15" fill="rgb(234,116,52)" fg:x="341" fg:w="1"/><text x="27.6836%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4336%" y="565" width="0.0805%" height="15" fill="rgb(222,124,15)" fg:x="341" fg:w="1"/><text x="27.6836%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.4336%" y="549" width="0.0805%" height="15" fill="rgb(231,179,28)" fg:x="341" fg:w="1"/><text x="27.6836%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.4336%" y="533" width="0.0805%" height="15" fill="rgb(226,93,45)" fg:x="341" fg:w="1"/><text x="27.6836%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.4336%" y="517" width="0.0805%" height="15" fill="rgb(215,8,51)" fg:x="341" fg:w="1"/><text x="27.6836%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.4336%" y="501" width="0.0805%" height="15" fill="rgb(223,106,5)" fg:x="341" fg:w="1"/><text x="27.6836%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.4336%" y="485" width="0.0805%" height="15" fill="rgb(250,191,5)" fg:x="341" fg:w="1"/><text x="27.6836%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4336%" y="469" width="0.0805%" height="15" fill="rgb(242,132,44)" fg:x="341" fg:w="1"/><text x="27.6836%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.3532%" y="709" width="0.2414%" height="15" fill="rgb(251,152,29)" fg:x="340" fg:w="3"/><text x="27.6032%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.3532%" y="693" width="0.2414%" height="15" fill="rgb(218,179,5)" fg:x="340" fg:w="3"/><text x="27.6032%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.3532%" y="677" width="0.2414%" height="15" fill="rgb(227,67,19)" fg:x="340" fg:w="3"/><text x="27.6032%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.3532%" y="661" width="0.2414%" height="15" fill="rgb(233,119,31)" fg:x="340" fg:w="3"/><text x="27.6032%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5141%" y="645" width="0.0805%" height="15" fill="rgb(241,120,22)" fg:x="342" fg:w="1"/><text x="27.7641%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="709" width="0.0805%" height="15" fill="rgb(224,102,30)" fg:x="343" fg:w="1"/><text x="27.8445%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="693" width="0.0805%" height="15" fill="rgb(210,164,37)" fg:x="343" fg:w="1"/><text x="27.8445%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="677" width="0.0805%" height="15" fill="rgb(226,191,16)" fg:x="343" fg:w="1"/><text x="27.8445%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="661" width="0.0805%" height="15" fill="rgb(214,40,45)" fg:x="343" fg:w="1"/><text x="27.8445%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.5945%" y="645" width="0.0805%" height="15" fill="rgb(244,29,26)" fg:x="343" fg:w="1"/><text x="27.8445%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5945%" y="629" width="0.0805%" height="15" fill="rgb(216,16,5)" fg:x="343" fg:w="1"/><text x="27.8445%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="27.2727%" y="757" width="0.4827%" height="15" fill="rgb(249,76,35)" fg:x="339" fg:w="6"/><text x="27.5227%" y="767.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="27.3532%" y="741" width="0.4023%" height="15" fill="rgb(207,11,44)" fg:x="340" fg:w="5"/><text x="27.6032%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.3532%" y="725" width="0.4023%" height="15" fill="rgb(228,190,49)" fg:x="340" fg:w="5"/><text x="27.6032%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.6750%" y="709" width="0.0805%" height="15" fill="rgb(214,173,12)" fg:x="344" fg:w="1"/><text x="27.9250%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6750%" y="693" width="0.0805%" height="15" fill="rgb(218,26,35)" fg:x="344" fg:w="1"/><text x="27.9250%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="27.7554%" y="757" width="0.0805%" height="15" fill="rgb(220,200,19)" fg:x="345" fg:w="1"/><text x="28.0054%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="27.7554%" y="741" width="0.0805%" height="15" fill="rgb(239,95,49)" fg:x="345" fg:w="1"/><text x="28.0054%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8359%" y="741" width="0.0805%" height="15" fill="rgb(235,85,53)" fg:x="346" fg:w="1"/><text x="28.0859%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="27.8359%" y="757" width="0.1609%" height="15" fill="rgb(233,133,31)" fg:x="346" fg:w="2"/><text x="28.0859%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="27.9163%" y="741" width="0.0805%" height="15" fill="rgb(218,25,20)" fg:x="347" fg:w="1"/><text x="28.1663%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.9163%" y="725" width="0.0805%" height="15" fill="rgb(252,210,38)" fg:x="347" fg:w="1"/><text x="28.1663%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="27.9163%" y="709" width="0.0805%" height="15" fill="rgb(242,134,21)" fg:x="347" fg:w="1"/><text x="28.1663%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.9163%" y="693" width="0.0805%" height="15" fill="rgb(213,28,48)" fg:x="347" fg:w="1"/><text x="28.1663%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9968%" y="677" width="0.0805%" height="15" fill="rgb(250,196,2)" fg:x="348" fg:w="1"/><text x="28.2468%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9968%" y="661" width="0.0805%" height="15" fill="rgb(227,5,17)" fg:x="348" fg:w="1"/><text x="28.2468%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9968%" y="645" width="0.0805%" height="15" fill="rgb(221,226,24)" fg:x="348" fg:w="1"/><text x="28.2468%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.9968%" y="629" width="0.0805%" height="15" fill="rgb(211,5,48)" fg:x="348" fg:w="1"/><text x="28.2468%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.9968%" y="709" width="0.1609%" height="15" fill="rgb(219,150,6)" fg:x="348" fg:w="2"/><text x="28.2468%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.9968%" y="693" width="0.1609%" height="15" fill="rgb(251,46,16)" fg:x="348" fg:w="2"/><text x="28.2468%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.0772%" y="677" width="0.0805%" height="15" fill="rgb(220,204,40)" fg:x="349" fg:w="1"/><text x="28.3272%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.0772%" y="661" width="0.0805%" height="15" fill="rgb(211,85,2)" fg:x="349" fg:w="1"/><text x="28.3272%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.0772%" y="645" width="0.0805%" height="15" fill="rgb(229,17,7)" fg:x="349" fg:w="1"/><text x="28.3272%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.0772%" y="629" width="0.0805%" height="15" fill="rgb(239,72,28)" fg:x="349" fg:w="1"/><text x="28.3272%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.0772%" y="613" width="0.0805%" height="15" fill="rgb(230,47,54)" fg:x="349" fg:w="1"/><text x="28.3272%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.0772%" y="597" width="0.0805%" height="15" fill="rgb(214,50,8)" fg:x="349" fg:w="1"/><text x="28.3272%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0772%" y="581" width="0.0805%" height="15" fill="rgb(216,198,43)" fg:x="349" fg:w="1"/><text x="28.3272%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.0772%" y="565" width="0.0805%" height="15" fill="rgb(234,20,35)" fg:x="349" fg:w="1"/><text x="28.3272%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1577%" y="645" width="0.0805%" height="15" fill="rgb(254,45,19)" fg:x="350" fg:w="1"/><text x="28.4077%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.2381%" y="613" width="0.0805%" height="15" fill="rgb(219,14,44)" fg:x="351" fg:w="1"/><text x="28.4881%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.2381%" y="597" width="0.0805%" height="15" fill="rgb(217,220,26)" fg:x="351" fg:w="1"/><text x="28.4881%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.37%)</title><rect x="27.0314%" y="773" width="1.3677%" height="15" fill="rgb(213,158,28)" fg:x="336" fg:w="17"/><text x="27.2814%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="27.9968%" y="757" width="0.4023%" height="15" fill="rgb(252,51,52)" fg:x="348" fg:w="5"/><text x="28.2468%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="27.9968%" y="741" width="0.4023%" height="15" fill="rgb(246,89,16)" fg:x="348" fg:w="5"/><text x="28.2468%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="27.9968%" y="725" width="0.4023%" height="15" fill="rgb(216,158,49)" fg:x="348" fg:w="5"/><text x="28.2468%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="28.1577%" y="709" width="0.2414%" height="15" fill="rgb(236,107,19)" fg:x="350" fg:w="3"/><text x="28.4077%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="28.1577%" y="693" width="0.2414%" height="15" fill="rgb(228,185,30)" fg:x="350" fg:w="3"/><text x="28.4077%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="28.1577%" y="677" width="0.2414%" height="15" fill="rgb(246,134,8)" fg:x="350" fg:w="3"/><text x="28.4077%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="28.1577%" y="661" width="0.2414%" height="15" fill="rgb(214,143,50)" fg:x="350" fg:w="3"/><text x="28.4077%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.2381%" y="645" width="0.1609%" height="15" fill="rgb(228,75,8)" fg:x="351" fg:w="2"/><text x="28.4881%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="28.2381%" y="629" width="0.1609%" height="15" fill="rgb(207,175,4)" fg:x="351" fg:w="2"/><text x="28.4881%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3186%" y="613" width="0.0805%" height="15" fill="rgb(205,108,24)" fg:x="352" fg:w="1"/><text x="28.5686%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.3186%" y="597" width="0.0805%" height="15" fill="rgb(244,120,49)" fg:x="352" fg:w="1"/><text x="28.5686%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3186%" y="581" width="0.0805%" height="15" fill="rgb(223,47,38)" fg:x="352" fg:w="1"/><text x="28.5686%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3990%" y="709" width="0.0805%" height="15" fill="rgb(229,179,11)" fg:x="353" fg:w="1"/><text x="28.6490%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.4795%" y="709" width="0.0805%" height="15" fill="rgb(231,122,1)" fg:x="354" fg:w="1"/><text x="28.7295%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.6404%" y="661" width="0.2414%" height="15" fill="rgb(245,119,9)" fg:x="356" fg:w="3"/><text x="28.8904%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="28.6404%" y="645" width="0.2414%" height="15" fill="rgb(241,163,25)" fg:x="356" fg:w="3"/><text x="28.8904%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.7208%" y="629" width="0.1609%" height="15" fill="rgb(217,214,3)" fg:x="357" fg:w="2"/><text x="28.9708%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.7208%" y="613" width="0.1609%" height="15" fill="rgb(240,86,28)" fg:x="357" fg:w="2"/><text x="28.9708%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8817%" y="661" width="0.0805%" height="15" fill="rgb(215,47,9)" fg:x="359" fg:w="1"/><text x="29.1317%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8817%" y="645" width="0.0805%" height="15" fill="rgb(252,25,45)" fg:x="359" fg:w="1"/><text x="29.1317%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.8817%" y="629" width="0.0805%" height="15" fill="rgb(251,164,9)" fg:x="359" fg:w="1"/><text x="29.1317%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.8817%" y="613" width="0.0805%" height="15" fill="rgb(233,194,0)" fg:x="359" fg:w="1"/><text x="29.1317%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.8817%" y="597" width="0.0805%" height="15" fill="rgb(249,111,24)" fg:x="359" fg:w="1"/><text x="29.1317%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8817%" y="581" width="0.0805%" height="15" fill="rgb(250,223,3)" fg:x="359" fg:w="1"/><text x="29.1317%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.8817%" y="565" width="0.0805%" height="15" fill="rgb(236,178,37)" fg:x="359" fg:w="1"/><text x="29.1317%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.8817%" y="549" width="0.0805%" height="15" fill="rgb(241,158,50)" fg:x="359" fg:w="1"/><text x="29.1317%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.8817%" y="533" width="0.0805%" height="15" fill="rgb(213,121,41)" fg:x="359" fg:w="1"/><text x="29.1317%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.8817%" y="517" width="0.0805%" height="15" fill="rgb(240,92,3)" fg:x="359" fg:w="1"/><text x="29.1317%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.8817%" y="501" width="0.0805%" height="15" fill="rgb(205,123,3)" fg:x="359" fg:w="1"/><text x="29.1317%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8817%" y="485" width="0.0805%" height="15" fill="rgb(205,97,47)" fg:x="359" fg:w="1"/><text x="29.1317%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="28.6404%" y="677" width="0.4023%" height="15" fill="rgb(247,152,14)" fg:x="356" fg:w="5"/><text x="28.8904%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9622%" y="661" width="0.0805%" height="15" fill="rgb(248,195,53)" fg:x="360" fg:w="1"/><text x="29.2122%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0426%" y="677" width="0.0805%" height="15" fill="rgb(226,201,16)" fg:x="361" fg:w="1"/><text x="29.2926%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.0426%" y="661" width="0.0805%" height="15" fill="rgb(205,98,0)" fg:x="361" fg:w="1"/><text x="29.2926%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0426%" y="645" width="0.0805%" height="15" fill="rgb(214,191,48)" fg:x="361" fg:w="1"/><text x="29.2926%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0426%" y="629" width="0.0805%" height="15" fill="rgb(237,112,39)" fg:x="361" fg:w="1"/><text x="29.2926%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0426%" y="613" width="0.0805%" height="15" fill="rgb(247,203,27)" fg:x="361" fg:w="1"/><text x="29.2926%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="29.2035%" y="613" width="0.0805%" height="15" fill="rgb(235,124,28)" fg:x="363" fg:w="1"/><text x="29.4535%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.2840%" y="613" width="0.0805%" height="15" fill="rgb(208,207,46)" fg:x="364" fg:w="1"/><text x="29.5340%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2840%" y="597" width="0.0805%" height="15" fill="rgb(234,176,4)" fg:x="364" fg:w="1"/><text x="29.5340%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (13 samples, 1.05%)</title><rect x="28.3990%" y="725" width="1.0459%" height="15" fill="rgb(230,133,28)" fg:x="353" fg:w="13"/><text x="28.6490%" y="735.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.88%)</title><rect x="28.5599%" y="709" width="0.8850%" height="15" fill="rgb(211,137,40)" fg:x="355" fg:w="11"/><text x="28.8099%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="28.5599%" y="693" width="0.8850%" height="15" fill="rgb(254,35,13)" fg:x="355" fg:w="11"/><text x="28.8099%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="29.1231%" y="677" width="0.3218%" height="15" fill="rgb(225,49,51)" fg:x="362" fg:w="4"/><text x="29.3731%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="29.1231%" y="661" width="0.3218%" height="15" fill="rgb(251,10,15)" fg:x="362" fg:w="4"/><text x="29.3731%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.2035%" y="645" width="0.2414%" height="15" fill="rgb(228,207,15)" fg:x="363" fg:w="3"/><text x="29.4535%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.2035%" y="629" width="0.2414%" height="15" fill="rgb(241,99,19)" fg:x="363" fg:w="3"/><text x="29.4535%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.3644%" y="613" width="0.0805%" height="15" fill="rgb(207,104,49)" fg:x="365" fg:w="1"/><text x="29.6144%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3644%" y="597" width="0.0805%" height="15" fill="rgb(234,99,18)" fg:x="365" fg:w="1"/><text x="29.6144%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.3644%" y="581" width="0.0805%" height="15" fill="rgb(213,191,49)" fg:x="365" fg:w="1"/><text x="29.6144%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.3644%" y="565" width="0.0805%" height="15" fill="rgb(210,226,19)" fg:x="365" fg:w="1"/><text x="29.6144%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4449%" y="661" width="0.0805%" height="15" fill="rgb(229,97,18)" fg:x="366" fg:w="1"/><text x="29.6949%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4449%" y="645" width="0.0805%" height="15" fill="rgb(211,167,15)" fg:x="366" fg:w="1"/><text x="29.6949%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4449%" y="629" width="0.0805%" height="15" fill="rgb(210,169,34)" fg:x="366" fg:w="1"/><text x="29.6949%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.4449%" y="677" width="0.1609%" height="15" fill="rgb(241,121,31)" fg:x="366" fg:w="2"/><text x="29.6949%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5253%" y="661" width="0.0805%" height="15" fill="rgb(232,40,11)" fg:x="367" fg:w="1"/><text x="29.7753%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5253%" y="645" width="0.0805%" height="15" fill="rgb(205,86,26)" fg:x="367" fg:w="1"/><text x="29.7753%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.5253%" y="629" width="0.0805%" height="15" fill="rgb(231,126,28)" fg:x="367" fg:w="1"/><text x="29.7753%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.5253%" y="613" width="0.0805%" height="15" fill="rgb(219,221,18)" fg:x="367" fg:w="1"/><text x="29.7753%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.5253%" y="597" width="0.0805%" height="15" fill="rgb(211,40,0)" fg:x="367" fg:w="1"/><text x="29.7753%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5253%" y="581" width="0.0805%" height="15" fill="rgb(239,85,43)" fg:x="367" fg:w="1"/><text x="29.7753%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.5253%" y="565" width="0.0805%" height="15" fill="rgb(231,55,21)" fg:x="367" fg:w="1"/><text x="29.7753%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.5253%" y="549" width="0.0805%" height="15" fill="rgb(225,184,43)" fg:x="367" fg:w="1"/><text x="29.7753%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.5253%" y="533" width="0.0805%" height="15" fill="rgb(251,158,41)" fg:x="367" fg:w="1"/><text x="29.7753%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.5253%" y="517" width="0.0805%" height="15" fill="rgb(234,159,37)" fg:x="367" fg:w="1"/><text x="29.7753%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.5253%" y="501" width="0.0805%" height="15" fill="rgb(216,204,22)" fg:x="367" fg:w="1"/><text x="29.7753%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5253%" y="485" width="0.0805%" height="15" fill="rgb(214,17,3)" fg:x="367" fg:w="1"/><text x="29.7753%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.6058%" y="677" width="0.0805%" height="15" fill="rgb(212,111,17)" fg:x="368" fg:w="1"/><text x="29.8558%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.6862%" y="677" width="0.0805%" height="15" fill="rgb(221,157,24)" fg:x="369" fg:w="1"/><text x="29.9362%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.6862%" y="661" width="0.0805%" height="15" fill="rgb(252,16,13)" fg:x="369" fg:w="1"/><text x="29.9362%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.6862%" y="645" width="0.0805%" height="15" fill="rgb(221,62,2)" fg:x="369" fg:w="1"/><text x="29.9362%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6862%" y="629" width="0.0805%" height="15" fill="rgb(247,87,22)" fg:x="369" fg:w="1"/><text x="29.9362%" y="639.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="29.7667%" y="677" width="0.0805%" height="15" fill="rgb(215,73,9)" fg:x="370" fg:w="1"/><text x="30.0167%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.0080%" y="581" width="0.0805%" height="15" fill="rgb(207,175,33)" fg:x="373" fg:w="1"/><text x="30.2580%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (22 samples, 1.77%)</title><rect x="28.3990%" y="757" width="1.7699%" height="15" fill="rgb(243,129,54)" fg:x="353" fg:w="22"/><text x="28.6490%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (22 samples, 1.77%)</title><rect x="28.3990%" y="741" width="1.7699%" height="15" fill="rgb(227,119,45)" fg:x="353" fg:w="22"/><text x="28.6490%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="29.4449%" y="725" width="0.7241%" height="15" fill="rgb(205,109,36)" fg:x="366" fg:w="9"/><text x="29.6949%" y="735.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="29.4449%" y="709" width="0.7241%" height="15" fill="rgb(205,6,39)" fg:x="366" fg:w="9"/><text x="29.6949%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="29.4449%" y="693" width="0.7241%" height="15" fill="rgb(221,32,16)" fg:x="366" fg:w="9"/><text x="29.6949%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="29.8471%" y="677" width="0.3218%" height="15" fill="rgb(228,144,50)" fg:x="371" fg:w="4"/><text x="30.0971%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="29.8471%" y="661" width="0.3218%" height="15" fill="rgb(229,201,53)" fg:x="371" fg:w="4"/><text x="30.0971%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="29.9276%" y="645" width="0.2414%" height="15" fill="rgb(249,153,27)" fg:x="372" fg:w="3"/><text x="30.1776%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.9276%" y="629" width="0.2414%" height="15" fill="rgb(227,106,25)" fg:x="372" fg:w="3"/><text x="30.1776%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="29.9276%" y="613" width="0.2414%" height="15" fill="rgb(230,65,29)" fg:x="372" fg:w="3"/><text x="30.1776%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.0080%" y="597" width="0.1609%" height="15" fill="rgb(221,57,46)" fg:x="373" fg:w="2"/><text x="30.2580%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0885%" y="581" width="0.0805%" height="15" fill="rgb(229,161,17)" fg:x="374" fg:w="1"/><text x="30.3385%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.0885%" y="565" width="0.0805%" height="15" fill="rgb(222,213,11)" fg:x="374" fg:w="1"/><text x="30.3385%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.0885%" y="549" width="0.0805%" height="15" fill="rgb(235,35,13)" fg:x="374" fg:w="1"/><text x="30.3385%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="30.1689%" y="757" width="0.0805%" height="15" fill="rgb(233,158,34)" fg:x="375" fg:w="1"/><text x="30.4189%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1689%" y="741" width="0.0805%" height="15" fill="rgb(215,151,48)" fg:x="375" fg:w="1"/><text x="30.4189%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1689%" y="725" width="0.0805%" height="15" fill="rgb(229,84,14)" fg:x="375" fg:w="1"/><text x="30.4189%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1689%" y="709" width="0.0805%" height="15" fill="rgb(229,68,14)" fg:x="375" fg:w="1"/><text x="30.4189%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1689%" y="693" width="0.0805%" height="15" fill="rgb(243,106,26)" fg:x="375" fg:w="1"/><text x="30.4189%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1689%" y="677" width="0.0805%" height="15" fill="rgb(206,45,38)" fg:x="375" fg:w="1"/><text x="30.4189%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1689%" y="661" width="0.0805%" height="15" fill="rgb(226,6,15)" fg:x="375" fg:w="1"/><text x="30.4189%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1689%" y="645" width="0.0805%" height="15" fill="rgb(232,22,54)" fg:x="375" fg:w="1"/><text x="30.4189%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1689%" y="629" width="0.0805%" height="15" fill="rgb(229,222,32)" fg:x="375" fg:w="1"/><text x="30.4189%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1689%" y="613" width="0.0805%" height="15" fill="rgb(228,62,29)" fg:x="375" fg:w="1"/><text x="30.4189%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1689%" y="597" width="0.0805%" height="15" fill="rgb(251,103,34)" fg:x="375" fg:w="1"/><text x="30.4189%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1689%" y="581" width="0.0805%" height="15" fill="rgb(233,12,30)" fg:x="375" fg:w="1"/><text x="30.4189%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1689%" y="565" width="0.0805%" height="15" fill="rgb(238,52,0)" fg:x="375" fg:w="1"/><text x="30.4189%" y="575.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="30.1689%" y="549" width="0.0805%" height="15" fill="rgb(223,98,5)" fg:x="375" fg:w="1"/><text x="30.4189%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2494%" y="709" width="0.0805%" height="15" fill="rgb(228,75,37)" fg:x="376" fg:w="1"/><text x="30.4994%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.2494%" y="757" width="0.1609%" height="15" fill="rgb(205,115,49)" fg:x="376" fg:w="2"/><text x="30.4994%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="30.2494%" y="741" width="0.1609%" height="15" fill="rgb(250,154,43)" fg:x="376" fg:w="2"/><text x="30.4994%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.2494%" y="725" width="0.1609%" height="15" fill="rgb(226,43,29)" fg:x="376" fg:w="2"/><text x="30.4994%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="30.3298%" y="709" width="0.0805%" height="15" fill="rgb(249,228,39)" fg:x="377" fg:w="1"/><text x="30.5798%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="30.3298%" y="693" width="0.0805%" height="15" fill="rgb(216,79,43)" fg:x="377" fg:w="1"/><text x="30.5798%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.3298%" y="677" width="0.0805%" height="15" fill="rgb(228,95,12)" fg:x="377" fg:w="1"/><text x="30.5798%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3298%" y="661" width="0.0805%" height="15" fill="rgb(249,221,15)" fg:x="377" fg:w="1"/><text x="30.5798%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3298%" y="645" width="0.0805%" height="15" fill="rgb(233,34,13)" fg:x="377" fg:w="1"/><text x="30.5798%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5712%" y="597" width="0.0805%" height="15" fill="rgb(214,103,39)" fg:x="380" fg:w="1"/><text x="30.8212%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="30.5712%" y="581" width="0.0805%" height="15" fill="rgb(251,126,39)" fg:x="380" fg:w="1"/><text x="30.8212%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="30.5712%" y="565" width="0.0805%" height="15" fill="rgb(214,216,36)" fg:x="380" fg:w="1"/><text x="30.8212%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.5712%" y="645" width="0.1609%" height="15" fill="rgb(220,221,8)" fg:x="380" fg:w="2"/><text x="30.8212%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.5712%" y="629" width="0.1609%" height="15" fill="rgb(240,216,3)" fg:x="380" fg:w="2"/><text x="30.8212%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.5712%" y="613" width="0.1609%" height="15" fill="rgb(232,218,17)" fg:x="380" fg:w="2"/><text x="30.8212%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6516%" y="597" width="0.0805%" height="15" fill="rgb(229,163,45)" fg:x="381" fg:w="1"/><text x="30.9016%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="30.4907%" y="661" width="0.3218%" height="15" fill="rgb(231,110,42)" fg:x="379" fg:w="4"/><text x="30.7407%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7321%" y="645" width="0.0805%" height="15" fill="rgb(208,170,48)" fg:x="382" fg:w="1"/><text x="30.9821%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7321%" y="629" width="0.0805%" height="15" fill="rgb(239,116,25)" fg:x="382" fg:w="1"/><text x="30.9821%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7321%" y="613" width="0.0805%" height="15" fill="rgb(219,200,50)" fg:x="382" fg:w="1"/><text x="30.9821%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7321%" y="597" width="0.0805%" height="15" fill="rgb(245,200,0)" fg:x="382" fg:w="1"/><text x="30.9821%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7321%" y="581" width="0.0805%" height="15" fill="rgb(245,119,33)" fg:x="382" fg:w="1"/><text x="30.9821%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7321%" y="565" width="0.0805%" height="15" fill="rgb(231,125,12)" fg:x="382" fg:w="1"/><text x="30.9821%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7321%" y="549" width="0.0805%" height="15" fill="rgb(216,96,41)" fg:x="382" fg:w="1"/><text x="30.9821%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7321%" y="533" width="0.0805%" height="15" fill="rgb(248,43,45)" fg:x="382" fg:w="1"/><text x="30.9821%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7321%" y="517" width="0.0805%" height="15" fill="rgb(217,222,7)" fg:x="382" fg:w="1"/><text x="30.9821%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7321%" y="501" width="0.0805%" height="15" fill="rgb(233,28,6)" fg:x="382" fg:w="1"/><text x="30.9821%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7321%" y="485" width="0.0805%" height="15" fill="rgb(231,218,15)" fg:x="382" fg:w="1"/><text x="30.9821%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7321%" y="469" width="0.0805%" height="15" fill="rgb(226,171,48)" fg:x="382" fg:w="1"/><text x="30.9821%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="30.4907%" y="709" width="0.5632%" height="15" fill="rgb(235,201,9)" fg:x="379" fg:w="7"/><text x="30.7407%" y="719.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="30.4907%" y="693" width="0.5632%" height="15" fill="rgb(217,80,15)" fg:x="379" fg:w="7"/><text x="30.7407%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="30.4907%" y="677" width="0.5632%" height="15" fill="rgb(219,152,8)" fg:x="379" fg:w="7"/><text x="30.7407%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.8126%" y="661" width="0.2414%" height="15" fill="rgb(243,107,38)" fg:x="383" fg:w="3"/><text x="31.0626%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="30.8126%" y="645" width="0.2414%" height="15" fill="rgb(231,17,5)" fg:x="383" fg:w="3"/><text x="31.0626%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="30.8126%" y="629" width="0.2414%" height="15" fill="rgb(209,25,54)" fg:x="383" fg:w="3"/><text x="31.0626%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.8930%" y="613" width="0.1609%" height="15" fill="rgb(219,0,2)" fg:x="384" fg:w="2"/><text x="31.1430%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.9735%" y="597" width="0.0805%" height="15" fill="rgb(246,9,5)" fg:x="385" fg:w="1"/><text x="31.2235%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9735%" y="581" width="0.0805%" height="15" fill="rgb(226,159,4)" fg:x="385" fg:w="1"/><text x="31.2235%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9735%" y="565" width="0.0805%" height="15" fill="rgb(219,175,34)" fg:x="385" fg:w="1"/><text x="31.2235%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9735%" y="549" width="0.0805%" height="15" fill="rgb(236,10,46)" fg:x="385" fg:w="1"/><text x="31.2235%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0539%" y="613" width="0.1609%" height="15" fill="rgb(240,211,16)" fg:x="386" fg:w="2"/><text x="31.3039%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.0539%" y="597" width="0.1609%" height="15" fill="rgb(205,3,43)" fg:x="386" fg:w="2"/><text x="31.3039%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1344%" y="581" width="0.0805%" height="15" fill="rgb(245,7,22)" fg:x="387" fg:w="1"/><text x="31.3844%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1344%" y="565" width="0.0805%" height="15" fill="rgb(239,132,32)" fg:x="387" fg:w="1"/><text x="31.3844%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1344%" y="549" width="0.0805%" height="15" fill="rgb(228,202,34)" fg:x="387" fg:w="1"/><text x="31.3844%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1344%" y="533" width="0.0805%" height="15" fill="rgb(254,200,22)" fg:x="387" fg:w="1"/><text x="31.3844%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1344%" y="517" width="0.0805%" height="15" fill="rgb(219,10,39)" fg:x="387" fg:w="1"/><text x="31.3844%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1344%" y="501" width="0.0805%" height="15" fill="rgb(226,210,39)" fg:x="387" fg:w="1"/><text x="31.3844%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1344%" y="485" width="0.0805%" height="15" fill="rgb(208,219,16)" fg:x="387" fg:w="1"/><text x="31.3844%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1344%" y="469" width="0.0805%" height="15" fill="rgb(216,158,51)" fg:x="387" fg:w="1"/><text x="31.3844%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1344%" y="453" width="0.0805%" height="15" fill="rgb(233,14,44)" fg:x="387" fg:w="1"/><text x="31.3844%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1344%" y="437" width="0.0805%" height="15" fill="rgb(237,97,39)" fg:x="387" fg:w="1"/><text x="31.3844%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1344%" y="421" width="0.0805%" height="15" fill="rgb(218,198,43)" fg:x="387" fg:w="1"/><text x="31.3844%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1344%" y="405" width="0.0805%" height="15" fill="rgb(231,104,20)" fg:x="387" fg:w="1"/><text x="31.3844%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.0539%" y="661" width="0.2414%" height="15" fill="rgb(254,36,13)" fg:x="386" fg:w="3"/><text x="31.3039%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.0539%" y="645" width="0.2414%" height="15" fill="rgb(248,14,50)" fg:x="386" fg:w="3"/><text x="31.3039%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="31.0539%" y="629" width="0.2414%" height="15" fill="rgb(217,107,29)" fg:x="386" fg:w="3"/><text x="31.3039%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2148%" y="613" width="0.0805%" height="15" fill="rgb(251,169,33)" fg:x="388" fg:w="1"/><text x="31.4648%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.97%)</title><rect x="30.4103%" y="757" width="0.9654%" height="15" fill="rgb(217,108,32)" fg:x="378" fg:w="12"/><text x="30.6603%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (12 samples, 0.97%)</title><rect x="30.4103%" y="741" width="0.9654%" height="15" fill="rgb(219,66,42)" fg:x="378" fg:w="12"/><text x="30.6603%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="30.4103%" y="725" width="0.9654%" height="15" fill="rgb(206,180,7)" fg:x="378" fg:w="12"/><text x="30.6603%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="31.0539%" y="709" width="0.3218%" height="15" fill="rgb(208,226,31)" fg:x="386" fg:w="4"/><text x="31.3039%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="31.0539%" y="693" width="0.3218%" height="15" fill="rgb(218,26,49)" fg:x="386" fg:w="4"/><text x="31.3039%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="31.0539%" y="677" width="0.3218%" height="15" fill="rgb(233,197,48)" fg:x="386" fg:w="4"/><text x="31.3039%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="661" width="0.0805%" height="15" fill="rgb(252,181,51)" fg:x="389" fg:w="1"/><text x="31.5453%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="645" width="0.0805%" height="15" fill="rgb(253,90,19)" fg:x="389" fg:w="1"/><text x="31.5453%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="629" width="0.0805%" height="15" fill="rgb(215,171,30)" fg:x="389" fg:w="1"/><text x="31.5453%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="613" width="0.0805%" height="15" fill="rgb(214,222,9)" fg:x="389" fg:w="1"/><text x="31.5453%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="597" width="0.0805%" height="15" fill="rgb(223,3,22)" fg:x="389" fg:w="1"/><text x="31.5453%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.2953%" y="581" width="0.0805%" height="15" fill="rgb(225,196,46)" fg:x="389" fg:w="1"/><text x="31.5453%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2953%" y="565" width="0.0805%" height="15" fill="rgb(209,110,37)" fg:x="389" fg:w="1"/><text x="31.5453%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (57 samples, 4.59%)</title><rect x="26.9509%" y="789" width="4.5857%" height="15" fill="rgb(249,89,12)" fg:x="335" fg:w="57"/><text x="27.2009%" y="799.50">plugi..</text></g><g><title>plugins_core::tools::set_container (39 samples, 3.14%)</title><rect x="28.3990%" y="773" width="3.1376%" height="15" fill="rgb(226,27,33)" fg:x="353" fg:w="39"/><text x="28.6490%" y="783.50">plu..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="31.3757%" y="757" width="0.1609%" height="15" fill="rgb(213,82,22)" fg:x="390" fg:w="2"/><text x="31.6257%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.3757%" y="741" width="0.1609%" height="15" fill="rgb(248,140,0)" fg:x="390" fg:w="2"/><text x="31.6257%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="31.3757%" y="725" width="0.1609%" height="15" fill="rgb(228,106,3)" fg:x="390" fg:w="2"/><text x="31.6257%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.3757%" y="709" width="0.1609%" height="15" fill="rgb(209,23,37)" fg:x="390" fg:w="2"/><text x="31.6257%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="31.3757%" y="693" width="0.1609%" height="15" fill="rgb(241,93,50)" fg:x="390" fg:w="2"/><text x="31.6257%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.3757%" y="677" width="0.1609%" height="15" fill="rgb(253,46,43)" fg:x="390" fg:w="2"/><text x="31.6257%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.4562%" y="661" width="0.0805%" height="15" fill="rgb(226,206,43)" fg:x="391" fg:w="1"/><text x="31.7062%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.4562%" y="645" width="0.0805%" height="15" fill="rgb(217,54,7)" fg:x="391" fg:w="1"/><text x="31.7062%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="31.5366%" y="789" width="0.1609%" height="15" fill="rgb(223,5,52)" fg:x="392" fg:w="2"/><text x="31.7866%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="31.5366%" y="773" width="0.1609%" height="15" fill="rgb(206,52,46)" fg:x="392" fg:w="2"/><text x="31.7866%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="31.5366%" y="757" width="0.1609%" height="15" fill="rgb(253,136,11)" fg:x="392" fg:w="2"/><text x="31.7866%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="31.5366%" y="741" width="0.1609%" height="15" fill="rgb(208,106,33)" fg:x="392" fg:w="2"/><text x="31.7866%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.5366%" y="725" width="0.1609%" height="15" fill="rgb(206,54,4)" fg:x="392" fg:w="2"/><text x="31.7866%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5366%" y="709" width="0.1609%" height="15" fill="rgb(213,3,15)" fg:x="392" fg:w="2"/><text x="31.7866%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5366%" y="693" width="0.1609%" height="15" fill="rgb(252,211,39)" fg:x="392" fg:w="2"/><text x="31.7866%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5366%" y="677" width="0.1609%" height="15" fill="rgb(223,6,36)" fg:x="392" fg:w="2"/><text x="31.7866%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.5366%" y="661" width="0.1609%" height="15" fill="rgb(252,169,45)" fg:x="392" fg:w="2"/><text x="31.7866%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6171%" y="645" width="0.0805%" height="15" fill="rgb(212,48,26)" fg:x="393" fg:w="1"/><text x="31.8671%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6171%" y="629" width="0.0805%" height="15" fill="rgb(251,102,48)" fg:x="393" fg:w="1"/><text x="31.8671%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.6171%" y="613" width="0.0805%" height="15" fill="rgb(243,208,16)" fg:x="393" fg:w="1"/><text x="31.8671%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.6171%" y="597" width="0.0805%" height="15" fill="rgb(219,96,24)" fg:x="393" fg:w="1"/><text x="31.8671%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.6171%" y="581" width="0.0805%" height="15" fill="rgb(219,33,29)" fg:x="393" fg:w="1"/><text x="31.8671%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6171%" y="565" width="0.0805%" height="15" fill="rgb(223,176,5)" fg:x="393" fg:w="1"/><text x="31.8671%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.6171%" y="549" width="0.0805%" height="15" fill="rgb(228,140,14)" fg:x="393" fg:w="1"/><text x="31.8671%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.6171%" y="533" width="0.0805%" height="15" fill="rgb(217,179,31)" fg:x="393" fg:w="1"/><text x="31.8671%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.6171%" y="517" width="0.0805%" height="15" fill="rgb(230,9,30)" fg:x="393" fg:w="1"/><text x="31.8671%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.6171%" y="501" width="0.0805%" height="15" fill="rgb(230,136,20)" fg:x="393" fg:w="1"/><text x="31.8671%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.6171%" y="485" width="0.0805%" height="15" fill="rgb(215,210,22)" fg:x="393" fg:w="1"/><text x="31.8671%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6171%" y="469" width="0.0805%" height="15" fill="rgb(218,43,5)" fg:x="393" fg:w="1"/><text x="31.8671%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.6975%" y="757" width="0.0805%" height="15" fill="rgb(216,11,5)" fg:x="394" fg:w="1"/><text x="31.9475%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.6975%" y="741" width="0.0805%" height="15" fill="rgb(209,82,29)" fg:x="394" fg:w="1"/><text x="31.9475%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6975%" y="725" width="0.0805%" height="15" fill="rgb(244,115,12)" fg:x="394" fg:w="1"/><text x="31.9475%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.6975%" y="709" width="0.0805%" height="15" fill="rgb(222,82,18)" fg:x="394" fg:w="1"/><text x="31.9475%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.7780%" y="709" width="0.0805%" height="15" fill="rgb(249,227,8)" fg:x="395" fg:w="1"/><text x="32.0280%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.7780%" y="693" width="0.0805%" height="15" fill="rgb(253,141,45)" fg:x="395" fg:w="1"/><text x="32.0280%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.7780%" y="725" width="0.1609%" height="15" fill="rgb(234,184,4)" fg:x="395" fg:w="2"/><text x="32.0280%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8584%" y="709" width="0.0805%" height="15" fill="rgb(218,194,23)" fg:x="396" fg:w="1"/><text x="32.1084%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="31.6975%" y="789" width="0.3218%" height="15" fill="rgb(235,66,41)" fg:x="394" fg:w="4"/><text x="31.9475%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="31.6975%" y="773" width="0.3218%" height="15" fill="rgb(245,217,1)" fg:x="394" fg:w="4"/><text x="31.9475%" y="783.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.7780%" y="757" width="0.2414%" height="15" fill="rgb(229,91,1)" fg:x="395" fg:w="3"/><text x="32.0280%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="31.7780%" y="741" width="0.2414%" height="15" fill="rgb(207,101,30)" fg:x="395" fg:w="3"/><text x="32.0280%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9389%" y="725" width="0.0805%" height="15" fill="rgb(223,82,49)" fg:x="397" fg:w="1"/><text x="32.1889%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9389%" y="709" width="0.0805%" height="15" fill="rgb(218,167,17)" fg:x="397" fg:w="1"/><text x="32.1889%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9389%" y="693" width="0.0805%" height="15" fill="rgb(208,103,14)" fg:x="397" fg:w="1"/><text x="32.1889%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9389%" y="677" width="0.0805%" height="15" fill="rgb(238,20,8)" fg:x="397" fg:w="1"/><text x="32.1889%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.9389%" y="661" width="0.0805%" height="15" fill="rgb(218,80,54)" fg:x="397" fg:w="1"/><text x="32.1889%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9389%" y="645" width="0.0805%" height="15" fill="rgb(240,144,17)" fg:x="397" fg:w="1"/><text x="32.1889%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.9389%" y="629" width="0.0805%" height="15" fill="rgb(245,27,50)" fg:x="397" fg:w="1"/><text x="32.1889%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9389%" y="613" width="0.0805%" height="15" fill="rgb(251,51,7)" fg:x="397" fg:w="1"/><text x="32.1889%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="31.9389%" y="597" width="0.0805%" height="15" fill="rgb(245,217,29)" fg:x="397" fg:w="1"/><text x="32.1889%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.0193%" y="741" width="0.0805%" height="15" fill="rgb(221,176,29)" fg:x="398" fg:w="1"/><text x="32.2693%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.0193%" y="757" width="0.1609%" height="15" fill="rgb(212,180,24)" fg:x="398" fg:w="2"/><text x="32.2693%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.0998%" y="741" width="0.0805%" height="15" fill="rgb(254,24,2)" fg:x="399" fg:w="1"/><text x="32.3498%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.0998%" y="725" width="0.0805%" height="15" fill="rgb(230,100,2)" fg:x="399" fg:w="1"/><text x="32.3498%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.0998%" y="709" width="0.0805%" height="15" fill="rgb(219,142,25)" fg:x="399" fg:w="1"/><text x="32.3498%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0998%" y="693" width="0.0805%" height="15" fill="rgb(240,73,43)" fg:x="399" fg:w="1"/><text x="32.3498%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.0998%" y="677" width="0.0805%" height="15" fill="rgb(214,114,15)" fg:x="399" fg:w="1"/><text x="32.3498%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.0998%" y="661" width="0.0805%" height="15" fill="rgb(207,130,4)" fg:x="399" fg:w="1"/><text x="32.3498%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.1802%" y="709" width="0.1609%" height="15" fill="rgb(221,25,40)" fg:x="400" fg:w="2"/><text x="32.4302%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2607%" y="693" width="0.0805%" height="15" fill="rgb(241,184,7)" fg:x="401" fg:w="1"/><text x="32.5107%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.3411%" y="677" width="0.0805%" height="15" fill="rgb(235,159,4)" fg:x="402" fg:w="1"/><text x="32.5911%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.3411%" y="661" width="0.0805%" height="15" fill="rgb(214,87,48)" fg:x="402" fg:w="1"/><text x="32.5911%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="32.1802%" y="741" width="0.3218%" height="15" fill="rgb(246,198,24)" fg:x="400" fg:w="4"/><text x="32.4302%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="32.1802%" y="725" width="0.3218%" height="15" fill="rgb(209,66,40)" fg:x="400" fg:w="4"/><text x="32.4302%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.3411%" y="709" width="0.1609%" height="15" fill="rgb(233,147,39)" fg:x="402" fg:w="2"/><text x="32.5911%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3411%" y="693" width="0.1609%" height="15" fill="rgb(231,145,52)" fg:x="402" fg:w="2"/><text x="32.5911%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4216%" y="677" width="0.0805%" height="15" fill="rgb(206,20,26)" fg:x="403" fg:w="1"/><text x="32.6716%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4216%" y="661" width="0.0805%" height="15" fill="rgb(238,220,4)" fg:x="403" fg:w="1"/><text x="32.6716%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.4216%" y="645" width="0.0805%" height="15" fill="rgb(252,195,42)" fg:x="403" fg:w="1"/><text x="32.6716%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="32.1802%" y="757" width="0.4023%" height="15" fill="rgb(209,10,6)" fg:x="400" fg:w="5"/><text x="32.4302%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.5020%" y="741" width="0.0805%" height="15" fill="rgb(229,3,52)" fg:x="404" fg:w="1"/><text x="32.7520%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="725" width="0.0805%" height="15" fill="rgb(253,49,37)" fg:x="404" fg:w="1"/><text x="32.7520%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.5020%" y="709" width="0.0805%" height="15" fill="rgb(240,103,49)" fg:x="404" fg:w="1"/><text x="32.7520%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5020%" y="693" width="0.0805%" height="15" fill="rgb(250,182,30)" fg:x="404" fg:w="1"/><text x="32.7520%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.5825%" y="645" width="0.0805%" height="15" fill="rgb(248,8,30)" fg:x="405" fg:w="1"/><text x="32.8325%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5825%" y="629" width="0.0805%" height="15" fill="rgb(237,120,30)" fg:x="405" fg:w="1"/><text x="32.8325%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5825%" y="613" width="0.0805%" height="15" fill="rgb(221,146,34)" fg:x="405" fg:w="1"/><text x="32.8325%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.5825%" y="597" width="0.0805%" height="15" fill="rgb(242,55,13)" fg:x="405" fg:w="1"/><text x="32.8325%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.5825%" y="581" width="0.0805%" height="15" fill="rgb(242,112,31)" fg:x="405" fg:w="1"/><text x="32.8325%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.5825%" y="565" width="0.0805%" height="15" fill="rgb(249,192,27)" fg:x="405" fg:w="1"/><text x="32.8325%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5825%" y="549" width="0.0805%" height="15" fill="rgb(208,204,44)" fg:x="405" fg:w="1"/><text x="32.8325%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.5825%" y="533" width="0.0805%" height="15" fill="rgb(208,93,54)" fg:x="405" fg:w="1"/><text x="32.8325%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.5825%" y="517" width="0.0805%" height="15" fill="rgb(242,1,31)" fg:x="405" fg:w="1"/><text x="32.8325%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.5825%" y="501" width="0.0805%" height="15" fill="rgb(241,83,25)" fg:x="405" fg:w="1"/><text x="32.8325%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.5825%" y="485" width="0.0805%" height="15" fill="rgb(205,169,50)" fg:x="405" fg:w="1"/><text x="32.8325%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.5825%" y="469" width="0.0805%" height="15" fill="rgb(239,186,37)" fg:x="405" fg:w="1"/><text x="32.8325%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5825%" y="453" width="0.0805%" height="15" fill="rgb(205,221,10)" fg:x="405" fg:w="1"/><text x="32.8325%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5825%" y="677" width="0.1609%" height="15" fill="rgb(218,196,15)" fg:x="405" fg:w="2"/><text x="32.8325%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5825%" y="661" width="0.1609%" height="15" fill="rgb(218,196,35)" fg:x="405" fg:w="2"/><text x="32.8325%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6629%" y="645" width="0.0805%" height="15" fill="rgb(233,63,24)" fg:x="406" fg:w="1"/><text x="32.9129%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.6629%" y="629" width="0.0805%" height="15" fill="rgb(225,8,4)" fg:x="406" fg:w="1"/><text x="32.9129%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.6629%" y="613" width="0.0805%" height="15" fill="rgb(234,105,35)" fg:x="406" fg:w="1"/><text x="32.9129%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.6629%" y="597" width="0.0805%" height="15" fill="rgb(236,21,32)" fg:x="406" fg:w="1"/><text x="32.9129%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.6629%" y="581" width="0.0805%" height="15" fill="rgb(228,109,6)" fg:x="406" fg:w="1"/><text x="32.9129%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6629%" y="565" width="0.0805%" height="15" fill="rgb(229,215,31)" fg:x="406" fg:w="1"/><text x="32.9129%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.6629%" y="549" width="0.0805%" height="15" fill="rgb(221,52,54)" fg:x="406" fg:w="1"/><text x="32.9129%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.6629%" y="533" width="0.0805%" height="15" fill="rgb(252,129,43)" fg:x="406" fg:w="1"/><text x="32.9129%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="32.5825%" y="709" width="0.2414%" height="15" fill="rgb(248,183,27)" fg:x="405" fg:w="3"/><text x="32.8325%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.5825%" y="693" width="0.2414%" height="15" fill="rgb(250,0,22)" fg:x="405" fg:w="3"/><text x="32.8325%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.7434%" y="677" width="0.0805%" height="15" fill="rgb(213,166,10)" fg:x="407" fg:w="1"/><text x="32.9934%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.7434%" y="661" width="0.0805%" height="15" fill="rgb(207,163,36)" fg:x="407" fg:w="1"/><text x="32.9934%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9043%" y="629" width="0.0805%" height="15" fill="rgb(208,122,22)" fg:x="409" fg:w="1"/><text x="33.1543%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9043%" y="613" width="0.0805%" height="15" fill="rgb(207,104,49)" fg:x="409" fg:w="1"/><text x="33.1543%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9043%" y="597" width="0.0805%" height="15" fill="rgb(248,211,50)" fg:x="409" fg:w="1"/><text x="33.1543%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.9043%" y="645" width="0.1609%" height="15" fill="rgb(217,13,45)" fg:x="409" fg:w="2"/><text x="33.1543%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9847%" y="629" width="0.0805%" height="15" fill="rgb(211,216,49)" fg:x="410" fg:w="1"/><text x="33.2347%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.9043%" y="677" width="0.2414%" height="15" fill="rgb(221,58,53)" fg:x="409" fg:w="3"/><text x="33.1543%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.9043%" y="661" width="0.2414%" height="15" fill="rgb(220,112,41)" fg:x="409" fg:w="3"/><text x="33.1543%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0652%" y="645" width="0.0805%" height="15" fill="rgb(236,38,28)" fg:x="411" fg:w="1"/><text x="33.3152%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.1456%" y="677" width="0.0805%" height="15" fill="rgb(227,195,22)" fg:x="412" fg:w="1"/><text x="33.3956%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.1456%" y="661" width="0.0805%" height="15" fill="rgb(214,55,33)" fg:x="412" fg:w="1"/><text x="33.3956%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.1456%" y="645" width="0.0805%" height="15" fill="rgb(248,80,13)" fg:x="412" fg:w="1"/><text x="33.3956%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1456%" y="629" width="0.0805%" height="15" fill="rgb(238,52,6)" fg:x="412" fg:w="1"/><text x="33.3956%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1456%" y="613" width="0.0805%" height="15" fill="rgb(224,198,47)" fg:x="412" fg:w="1"/><text x="33.3956%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.2261%" y="677" width="0.0805%" height="15" fill="rgb(233,171,20)" fg:x="413" fg:w="1"/><text x="33.4761%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (11 samples, 0.88%)</title><rect x="32.5825%" y="741" width="0.8850%" height="15" fill="rgb(241,30,25)" fg:x="405" fg:w="11"/><text x="32.8325%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (11 samples, 0.88%)</title><rect x="32.5825%" y="725" width="0.8850%" height="15" fill="rgb(207,171,38)" fg:x="405" fg:w="11"/><text x="32.8325%" y="735.50"></text></g><g><title>kernel::model::props::save_props (8 samples, 0.64%)</title><rect x="32.8238%" y="709" width="0.6436%" height="15" fill="rgb(234,70,1)" fg:x="408" fg:w="8"/><text x="33.0738%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="32.8238%" y="693" width="0.6436%" height="15" fill="rgb(232,178,18)" fg:x="408" fg:w="8"/><text x="33.0738%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="33.3065%" y="677" width="0.1609%" height="15" fill="rgb(241,78,40)" fg:x="414" fg:w="2"/><text x="33.5565%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.3065%" y="661" width="0.1609%" height="15" fill="rgb(222,35,25)" fg:x="414" fg:w="2"/><text x="33.5565%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="33.3065%" y="645" width="0.1609%" height="15" fill="rgb(207,92,16)" fg:x="414" fg:w="2"/><text x="33.5565%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.3065%" y="629" width="0.1609%" height="15" fill="rgb(216,59,51)" fg:x="414" fg:w="2"/><text x="33.5565%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="33.3065%" y="613" width="0.1609%" height="15" fill="rgb(213,80,28)" fg:x="414" fg:w="2"/><text x="33.5565%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="33.3065%" y="597" width="0.1609%" height="15" fill="rgb(220,93,7)" fg:x="414" fg:w="2"/><text x="33.5565%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (19 samples, 1.53%)</title><rect x="32.0193%" y="773" width="1.5286%" height="15" fill="rgb(225,24,44)" fg:x="398" fg:w="19"/><text x="32.2693%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (12 samples, 0.97%)</title><rect x="32.5825%" y="757" width="0.9654%" height="15" fill="rgb(243,74,40)" fg:x="405" fg:w="12"/><text x="32.8325%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="33.4674%" y="741" width="0.0805%" height="15" fill="rgb(228,39,7)" fg:x="416" fg:w="1"/><text x="33.7174%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4674%" y="725" width="0.0805%" height="15" fill="rgb(227,79,8)" fg:x="416" fg:w="1"/><text x="33.7174%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4674%" y="709" width="0.0805%" height="15" fill="rgb(236,58,11)" fg:x="416" fg:w="1"/><text x="33.7174%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.5479%" y="677" width="0.1609%" height="15" fill="rgb(249,63,35)" fg:x="417" fg:w="2"/><text x="33.7979%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6283%" y="661" width="0.0805%" height="15" fill="rgb(252,114,16)" fg:x="418" fg:w="1"/><text x="33.8783%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6283%" y="645" width="0.0805%" height="15" fill="rgb(254,151,24)" fg:x="418" fg:w="1"/><text x="33.8783%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6283%" y="629" width="0.0805%" height="15" fill="rgb(253,54,39)" fg:x="418" fg:w="1"/><text x="33.8783%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="677" width="0.0805%" height="15" fill="rgb(243,25,45)" fg:x="419" fg:w="1"/><text x="33.9588%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="661" width="0.0805%" height="15" fill="rgb(234,134,9)" fg:x="419" fg:w="1"/><text x="33.9588%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="645" width="0.0805%" height="15" fill="rgb(227,166,31)" fg:x="419" fg:w="1"/><text x="33.9588%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="629" width="0.0805%" height="15" fill="rgb(245,143,41)" fg:x="419" fg:w="1"/><text x="33.9588%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="613" width="0.0805%" height="15" fill="rgb(238,181,32)" fg:x="419" fg:w="1"/><text x="33.9588%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7088%" y="597" width="0.0805%" height="15" fill="rgb(224,113,18)" fg:x="419" fg:w="1"/><text x="33.9588%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="33.5479%" y="725" width="0.3218%" height="15" fill="rgb(240,229,28)" fg:x="417" fg:w="4"/><text x="33.7979%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="33.5479%" y="709" width="0.3218%" height="15" fill="rgb(250,185,3)" fg:x="417" fg:w="4"/><text x="33.7979%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="33.5479%" y="693" width="0.3218%" height="15" fill="rgb(212,59,25)" fg:x="417" fg:w="4"/><text x="33.7979%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7892%" y="677" width="0.0805%" height="15" fill="rgb(221,87,20)" fg:x="420" fg:w="1"/><text x="34.0392%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7892%" y="661" width="0.0805%" height="15" fill="rgb(213,74,28)" fg:x="420" fg:w="1"/><text x="34.0392%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7892%" y="645" width="0.0805%" height="15" fill="rgb(224,132,34)" fg:x="420" fg:w="1"/><text x="34.0392%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7892%" y="629" width="0.0805%" height="15" fill="rgb(222,101,24)" fg:x="420" fg:w="1"/><text x="34.0392%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.7892%" y="613" width="0.0805%" height="15" fill="rgb(254,142,4)" fg:x="420" fg:w="1"/><text x="34.0392%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7892%" y="597" width="0.0805%" height="15" fill="rgb(230,229,49)" fg:x="420" fg:w="1"/><text x="34.0392%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7892%" y="581" width="0.0805%" height="15" fill="rgb(238,70,47)" fg:x="420" fg:w="1"/><text x="34.0392%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="33.5479%" y="757" width="0.4827%" height="15" fill="rgb(231,160,17)" fg:x="417" fg:w="6"/><text x="33.7979%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="33.5479%" y="741" width="0.4827%" height="15" fill="rgb(218,68,53)" fg:x="417" fg:w="6"/><text x="33.7979%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="33.8697%" y="725" width="0.1609%" height="15" fill="rgb(236,111,10)" fg:x="421" fg:w="2"/><text x="34.1197%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="33.8697%" y="709" width="0.1609%" height="15" fill="rgb(224,34,41)" fg:x="421" fg:w="2"/><text x="34.1197%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="33.8697%" y="693" width="0.1609%" height="15" fill="rgb(241,118,19)" fg:x="421" fg:w="2"/><text x="34.1197%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9501%" y="677" width="0.0805%" height="15" fill="rgb(238,129,25)" fg:x="422" fg:w="1"/><text x="34.2001%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.9501%" y="661" width="0.0805%" height="15" fill="rgb(238,22,31)" fg:x="422" fg:w="1"/><text x="34.2001%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.9501%" y="645" width="0.0805%" height="15" fill="rgb(222,174,48)" fg:x="422" fg:w="1"/><text x="34.2001%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="34.0306%" y="757" width="0.1609%" height="15" fill="rgb(206,152,40)" fg:x="423" fg:w="2"/><text x="34.2806%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.1110%" y="741" width="0.0805%" height="15" fill="rgb(218,99,54)" fg:x="424" fg:w="1"/><text x="34.3610%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.1110%" y="725" width="0.0805%" height="15" fill="rgb(220,174,26)" fg:x="424" fg:w="1"/><text x="34.3610%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1915%" y="741" width="0.0805%" height="15" fill="rgb(245,116,9)" fg:x="425" fg:w="1"/><text x="34.4415%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2719%" y="741" width="0.0805%" height="15" fill="rgb(209,72,35)" fg:x="426" fg:w="1"/><text x="34.5219%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.2719%" y="725" width="0.0805%" height="15" fill="rgb(226,126,21)" fg:x="426" fg:w="1"/><text x="34.5219%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="34.2719%" y="709" width="0.0805%" height="15" fill="rgb(227,192,1)" fg:x="426" fg:w="1"/><text x="34.5219%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="34.1915%" y="757" width="0.2414%" height="15" fill="rgb(237,180,29)" fg:x="425" fg:w="3"/><text x="34.4415%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="34.3524%" y="741" width="0.0805%" height="15" fill="rgb(230,197,35)" fg:x="427" fg:w="1"/><text x="34.6024%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.3524%" y="725" width="0.0805%" height="15" fill="rgb(246,193,31)" fg:x="427" fg:w="1"/><text x="34.6024%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.3524%" y="709" width="0.0805%" height="15" fill="rgb(241,36,4)" fg:x="427" fg:w="1"/><text x="34.6024%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="34.3524%" y="693" width="0.0805%" height="15" fill="rgb(241,130,17)" fg:x="427" fg:w="1"/><text x="34.6024%" y="703.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="34.3524%" y="677" width="0.0805%" height="15" fill="rgb(206,137,32)" fg:x="427" fg:w="1"/><text x="34.6024%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.3524%" y="661" width="0.0805%" height="15" fill="rgb(237,228,51)" fg:x="427" fg:w="1"/><text x="34.6024%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5133%" y="661" width="0.0805%" height="15" fill="rgb(243,6,42)" fg:x="429" fg:w="1"/><text x="34.7633%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5133%" y="645" width="0.0805%" height="15" fill="rgb(251,74,28)" fg:x="429" fg:w="1"/><text x="34.7633%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5133%" y="629" width="0.0805%" height="15" fill="rgb(218,20,49)" fg:x="429" fg:w="1"/><text x="34.7633%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5133%" y="613" width="0.0805%" height="15" fill="rgb(238,28,14)" fg:x="429" fg:w="1"/><text x="34.7633%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5133%" y="597" width="0.0805%" height="15" fill="rgb(229,40,46)" fg:x="429" fg:w="1"/><text x="34.7633%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5133%" y="581" width="0.0805%" height="15" fill="rgb(244,195,20)" fg:x="429" fg:w="1"/><text x="34.7633%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5133%" y="565" width="0.0805%" height="15" fill="rgb(253,56,35)" fg:x="429" fg:w="1"/><text x="34.7633%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5133%" y="549" width="0.0805%" height="15" fill="rgb(210,149,44)" fg:x="429" fg:w="1"/><text x="34.7633%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5133%" y="533" width="0.0805%" height="15" fill="rgb(240,135,12)" fg:x="429" fg:w="1"/><text x="34.7633%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5133%" y="517" width="0.0805%" height="15" fill="rgb(251,24,50)" fg:x="429" fg:w="1"/><text x="34.7633%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5133%" y="501" width="0.0805%" height="15" fill="rgb(243,200,47)" fg:x="429" fg:w="1"/><text x="34.7633%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5133%" y="485" width="0.0805%" height="15" fill="rgb(224,166,26)" fg:x="429" fg:w="1"/><text x="34.7633%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5133%" y="469" width="0.0805%" height="15" fill="rgb(233,0,47)" fg:x="429" fg:w="1"/><text x="34.7633%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5133%" y="453" width="0.0805%" height="15" fill="rgb(253,80,5)" fg:x="429" fg:w="1"/><text x="34.7633%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5133%" y="437" width="0.0805%" height="15" fill="rgb(214,133,25)" fg:x="429" fg:w="1"/><text x="34.7633%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5937%" y="565" width="0.0805%" height="15" fill="rgb(209,27,14)" fg:x="430" fg:w="1"/><text x="34.8437%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="34.5937%" y="549" width="0.0805%" height="15" fill="rgb(219,102,51)" fg:x="430" fg:w="1"/><text x="34.8437%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="34.4328%" y="709" width="0.3218%" height="15" fill="rgb(237,18,16)" fg:x="428" fg:w="4"/><text x="34.6828%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="34.5133%" y="693" width="0.2414%" height="15" fill="rgb(241,85,17)" fg:x="429" fg:w="3"/><text x="34.7633%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="34.5133%" y="677" width="0.2414%" height="15" fill="rgb(236,90,42)" fg:x="429" fg:w="3"/><text x="34.7633%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.5937%" y="661" width="0.1609%" height="15" fill="rgb(249,57,21)" fg:x="430" fg:w="2"/><text x="34.8437%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.5937%" y="645" width="0.1609%" height="15" fill="rgb(243,12,36)" fg:x="430" fg:w="2"/><text x="34.8437%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.5937%" y="629" width="0.1609%" height="15" fill="rgb(253,128,47)" fg:x="430" fg:w="2"/><text x="34.8437%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.5937%" y="613" width="0.1609%" height="15" fill="rgb(207,33,20)" fg:x="430" fg:w="2"/><text x="34.8437%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="34.5937%" y="597" width="0.1609%" height="15" fill="rgb(233,215,35)" fg:x="430" fg:w="2"/><text x="34.8437%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.5937%" y="581" width="0.1609%" height="15" fill="rgb(249,188,52)" fg:x="430" fg:w="2"/><text x="34.8437%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6742%" y="565" width="0.0805%" height="15" fill="rgb(225,12,32)" fg:x="431" fg:w="1"/><text x="34.9242%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6742%" y="549" width="0.0805%" height="15" fill="rgb(247,98,14)" fg:x="431" fg:w="1"/><text x="34.9242%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6742%" y="533" width="0.0805%" height="15" fill="rgb(247,219,48)" fg:x="431" fg:w="1"/><text x="34.9242%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6742%" y="517" width="0.0805%" height="15" fill="rgb(253,60,48)" fg:x="431" fg:w="1"/><text x="34.9242%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="34.6742%" y="501" width="0.0805%" height="15" fill="rgb(245,15,52)" fg:x="431" fg:w="1"/><text x="34.9242%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="34.6742%" y="485" width="0.0805%" height="15" fill="rgb(220,133,28)" fg:x="431" fg:w="1"/><text x="34.9242%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="34.6742%" y="469" width="0.0805%" height="15" fill="rgb(217,180,4)" fg:x="431" fg:w="1"/><text x="34.9242%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="34.6742%" y="453" width="0.0805%" height="15" fill="rgb(251,24,1)" fg:x="431" fg:w="1"/><text x="34.9242%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.7546%" y="597" width="0.0805%" height="15" fill="rgb(212,185,49)" fg:x="432" fg:w="1"/><text x="35.0046%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7546%" y="581" width="0.0805%" height="15" fill="rgb(215,175,22)" fg:x="432" fg:w="1"/><text x="35.0046%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7546%" y="645" width="0.1609%" height="15" fill="rgb(250,205,14)" fg:x="432" fg:w="2"/><text x="35.0046%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7546%" y="629" width="0.1609%" height="15" fill="rgb(225,211,22)" fg:x="432" fg:w="2"/><text x="35.0046%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.7546%" y="613" width="0.1609%" height="15" fill="rgb(251,179,42)" fg:x="432" fg:w="2"/><text x="35.0046%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8351%" y="597" width="0.0805%" height="15" fill="rgb(208,216,51)" fg:x="433" fg:w="1"/><text x="35.0851%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8351%" y="581" width="0.0805%" height="15" fill="rgb(235,36,11)" fg:x="433" fg:w="1"/><text x="35.0851%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8351%" y="565" width="0.0805%" height="15" fill="rgb(213,189,28)" fg:x="433" fg:w="1"/><text x="35.0851%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8351%" y="549" width="0.0805%" height="15" fill="rgb(227,203,42)" fg:x="433" fg:w="1"/><text x="35.0851%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8351%" y="533" width="0.0805%" height="15" fill="rgb(244,72,36)" fg:x="433" fg:w="1"/><text x="35.0851%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8351%" y="517" width="0.0805%" height="15" fill="rgb(213,53,17)" fg:x="433" fg:w="1"/><text x="35.0851%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8351%" y="501" width="0.0805%" height="15" fill="rgb(207,167,3)" fg:x="433" fg:w="1"/><text x="35.0851%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8351%" y="485" width="0.0805%" height="15" fill="rgb(216,98,30)" fg:x="433" fg:w="1"/><text x="35.0851%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8351%" y="469" width="0.0805%" height="15" fill="rgb(236,123,15)" fg:x="433" fg:w="1"/><text x="35.0851%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8351%" y="453" width="0.0805%" height="15" fill="rgb(248,81,50)" fg:x="433" fg:w="1"/><text x="35.0851%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8351%" y="437" width="0.0805%" height="15" fill="rgb(214,120,4)" fg:x="433" fg:w="1"/><text x="35.0851%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8351%" y="421" width="0.0805%" height="15" fill="rgb(208,179,34)" fg:x="433" fg:w="1"/><text x="35.0851%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.7546%" y="661" width="0.2414%" height="15" fill="rgb(227,140,7)" fg:x="432" fg:w="3"/><text x="35.0046%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9155%" y="645" width="0.0805%" height="15" fill="rgb(214,22,6)" fg:x="434" fg:w="1"/><text x="35.1655%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9155%" y="629" width="0.0805%" height="15" fill="rgb(207,137,27)" fg:x="434" fg:w="1"/><text x="35.1655%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9155%" y="613" width="0.0805%" height="15" fill="rgb(210,8,46)" fg:x="434" fg:w="1"/><text x="35.1655%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9155%" y="597" width="0.0805%" height="15" fill="rgb(240,16,54)" fg:x="434" fg:w="1"/><text x="35.1655%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9155%" y="581" width="0.0805%" height="15" fill="rgb(211,209,29)" fg:x="434" fg:w="1"/><text x="35.1655%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9155%" y="565" width="0.0805%" height="15" fill="rgb(226,228,24)" fg:x="434" fg:w="1"/><text x="35.1655%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9155%" y="549" width="0.0805%" height="15" fill="rgb(222,84,9)" fg:x="434" fg:w="1"/><text x="35.1655%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9155%" y="533" width="0.0805%" height="15" fill="rgb(234,203,30)" fg:x="434" fg:w="1"/><text x="35.1655%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9155%" y="517" width="0.0805%" height="15" fill="rgb(238,109,14)" fg:x="434" fg:w="1"/><text x="35.1655%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9155%" y="501" width="0.0805%" height="15" fill="rgb(233,206,34)" fg:x="434" fg:w="1"/><text x="35.1655%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9155%" y="485" width="0.0805%" height="15" fill="rgb(220,167,47)" fg:x="434" fg:w="1"/><text x="35.1655%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (238 samples, 19.15%)</title><rect x="15.9292%" y="805" width="19.1472%" height="15" fill="rgb(238,105,10)" fg:x="198" fg:w="238"/><text x="16.1792%" y="815.50">plugins_core::build::BuildSurr..</text></g><g><title>plugins_core::build::Build::occupying (38 samples, 3.06%)</title><rect x="32.0193%" y="789" width="3.0571%" height="15" fill="rgb(213,227,17)" fg:x="398" fg:w="38"/><text x="32.2693%" y="799.50">plu..</text></g><g><title>plugins_core::tools::set_occupying (19 samples, 1.53%)</title><rect x="33.5479%" y="773" width="1.5286%" height="15" fill="rgb(217,132,38)" fg:x="417" fg:w="19"/><text x="33.7979%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="34.4328%" y="757" width="0.6436%" height="15" fill="rgb(242,146,4)" fg:x="428" fg:w="8"/><text x="34.6828%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="34.4328%" y="741" width="0.6436%" height="15" fill="rgb(212,61,9)" fg:x="428" fg:w="8"/><text x="34.6828%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="34.4328%" y="725" width="0.6436%" height="15" fill="rgb(247,126,22)" fg:x="428" fg:w="8"/><text x="34.6828%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="34.7546%" y="709" width="0.3218%" height="15" fill="rgb(220,196,2)" fg:x="432" fg:w="4"/><text x="35.0046%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="34.7546%" y="693" width="0.3218%" height="15" fill="rgb(208,46,4)" fg:x="432" fg:w="4"/><text x="35.0046%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.7546%" y="677" width="0.3218%" height="15" fill="rgb(252,104,46)" fg:x="432" fg:w="4"/><text x="35.0046%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9960%" y="661" width="0.0805%" height="15" fill="rgb(237,152,48)" fg:x="435" fg:w="1"/><text x="35.2460%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9960%" y="645" width="0.0805%" height="15" fill="rgb(221,59,37)" fg:x="435" fg:w="1"/><text x="35.2460%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9960%" y="629" width="0.0805%" height="15" fill="rgb(209,202,51)" fg:x="435" fg:w="1"/><text x="35.2460%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9960%" y="613" width="0.0805%" height="15" fill="rgb(228,81,30)" fg:x="435" fg:w="1"/><text x="35.2460%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.9960%" y="597" width="0.0805%" height="15" fill="rgb(227,42,39)" fg:x="435" fg:w="1"/><text x="35.2460%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9960%" y="581" width="0.0805%" height="15" fill="rgb(221,26,2)" fg:x="435" fg:w="1"/><text x="35.2460%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9960%" y="565" width="0.0805%" height="15" fill="rgb(254,61,31)" fg:x="435" fg:w="1"/><text x="35.2460%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9960%" y="549" width="0.0805%" height="15" fill="rgb(222,173,38)" fg:x="435" fg:w="1"/><text x="35.2460%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9960%" y="533" width="0.0805%" height="15" fill="rgb(218,50,12)" fg:x="435" fg:w="1"/><text x="35.2460%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9960%" y="517" width="0.0805%" height="15" fill="rgb(223,88,40)" fg:x="435" fg:w="1"/><text x="35.2460%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.9960%" y="501" width="0.0805%" height="15" fill="rgb(237,54,19)" fg:x="435" fg:w="1"/><text x="35.2460%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9960%" y="485" width="0.0805%" height="15" fill="rgb(251,129,25)" fg:x="435" fg:w="1"/><text x="35.2460%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="35.1569%" y="773" width="0.0805%" height="15" fill="rgb(238,97,19)" fg:x="437" fg:w="1"/><text x="35.4069%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="35.1569%" y="757" width="0.0805%" height="15" fill="rgb(240,169,18)" fg:x="437" fg:w="1"/><text x="35.4069%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1569%" y="741" width="0.0805%" height="15" fill="rgb(230,187,49)" fg:x="437" fg:w="1"/><text x="35.4069%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1569%" y="725" width="0.0805%" height="15" fill="rgb(209,44,26)" fg:x="437" fg:w="1"/><text x="35.4069%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="35.1569%" y="709" width="0.0805%" height="15" fill="rgb(244,0,6)" fg:x="437" fg:w="1"/><text x="35.4069%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.1569%" y="693" width="0.0805%" height="15" fill="rgb(248,18,21)" fg:x="437" fg:w="1"/><text x="35.4069%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="35.1569%" y="677" width="0.0805%" height="15" fill="rgb(245,180,19)" fg:x="437" fg:w="1"/><text x="35.4069%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="35.0764%" y="805" width="0.2414%" height="15" fill="rgb(252,118,36)" fg:x="436" fg:w="3"/><text x="35.3264%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="35.1569%" y="789" width="0.1609%" height="15" fill="rgb(210,224,19)" fg:x="437" fg:w="2"/><text x="35.4069%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="35.2373%" y="773" width="0.0805%" height="15" fill="rgb(218,30,24)" fg:x="438" fg:w="1"/><text x="35.4873%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="35.2373%" y="757" width="0.0805%" height="15" fill="rgb(219,75,50)" fg:x="438" fg:w="1"/><text x="35.4873%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.2373%" y="741" width="0.0805%" height="15" fill="rgb(234,72,50)" fg:x="438" fg:w="1"/><text x="35.4873%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.2373%" y="725" width="0.0805%" height="15" fill="rgb(219,100,48)" fg:x="438" fg:w="1"/><text x="35.4873%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2373%" y="709" width="0.0805%" height="15" fill="rgb(253,5,41)" fg:x="438" fg:w="1"/><text x="35.4873%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3178%" y="549" width="0.0805%" height="15" fill="rgb(247,181,11)" fg:x="439" fg:w="1"/><text x="35.5678%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3178%" y="533" width="0.0805%" height="15" fill="rgb(222,223,25)" fg:x="439" fg:w="1"/><text x="35.5678%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.3178%" y="517" width="0.0805%" height="15" fill="rgb(214,198,28)" fg:x="439" fg:w="1"/><text x="35.5678%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.3178%" y="501" width="0.0805%" height="15" fill="rgb(230,46,43)" fg:x="439" fg:w="1"/><text x="35.5678%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.3178%" y="485" width="0.0805%" height="15" fill="rgb(233,65,53)" fg:x="439" fg:w="1"/><text x="35.5678%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.3178%" y="469" width="0.0805%" height="15" fill="rgb(221,121,27)" fg:x="439" fg:w="1"/><text x="35.5678%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3178%" y="453" width="0.0805%" height="15" fill="rgb(247,70,47)" fg:x="439" fg:w="1"/><text x="35.5678%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3178%" y="437" width="0.0805%" height="15" fill="rgb(228,85,35)" fg:x="439" fg:w="1"/><text x="35.5678%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.3178%" y="421" width="0.0805%" height="15" fill="rgb(209,50,18)" fg:x="439" fg:w="1"/><text x="35.5678%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.3178%" y="405" width="0.0805%" height="15" fill="rgb(250,19,35)" fg:x="439" fg:w="1"/><text x="35.5678%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.3178%" y="389" width="0.0805%" height="15" fill="rgb(253,107,29)" fg:x="439" fg:w="1"/><text x="35.5678%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3178%" y="373" width="0.0805%" height="15" fill="rgb(252,179,29)" fg:x="439" fg:w="1"/><text x="35.5678%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="35.3178%" y="757" width="0.1609%" height="15" fill="rgb(238,194,6)" fg:x="439" fg:w="2"/><text x="35.5678%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="35.3178%" y="741" width="0.1609%" height="15" fill="rgb(238,164,29)" fg:x="439" fg:w="2"/><text x="35.5678%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="35.3178%" y="725" width="0.1609%" height="15" fill="rgb(224,25,9)" fg:x="439" fg:w="2"/><text x="35.5678%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="709" width="0.1609%" height="15" fill="rgb(244,153,23)" fg:x="439" fg:w="2"/><text x="35.5678%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.3178%" y="693" width="0.1609%" height="15" fill="rgb(212,203,14)" fg:x="439" fg:w="2"/><text x="35.5678%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="677" width="0.1609%" height="15" fill="rgb(220,164,20)" fg:x="439" fg:w="2"/><text x="35.5678%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="661" width="0.1609%" height="15" fill="rgb(222,203,48)" fg:x="439" fg:w="2"/><text x="35.5678%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="645" width="0.1609%" height="15" fill="rgb(215,159,22)" fg:x="439" fg:w="2"/><text x="35.5678%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.3178%" y="629" width="0.1609%" height="15" fill="rgb(216,183,47)" fg:x="439" fg:w="2"/><text x="35.5678%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="613" width="0.1609%" height="15" fill="rgb(229,195,25)" fg:x="439" fg:w="2"/><text x="35.5678%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="597" width="0.1609%" height="15" fill="rgb(224,132,51)" fg:x="439" fg:w="2"/><text x="35.5678%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="35.3178%" y="581" width="0.1609%" height="15" fill="rgb(240,63,7)" fg:x="439" fg:w="2"/><text x="35.5678%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="35.3178%" y="565" width="0.1609%" height="15" fill="rgb(249,182,41)" fg:x="439" fg:w="2"/><text x="35.5678%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3982%" y="549" width="0.0805%" height="15" fill="rgb(243,47,26)" fg:x="440" fg:w="1"/><text x="35.6482%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3982%" y="533" width="0.0805%" height="15" fill="rgb(233,48,2)" fg:x="440" fg:w="1"/><text x="35.6482%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3982%" y="517" width="0.0805%" height="15" fill="rgb(244,165,34)" fg:x="440" fg:w="1"/><text x="35.6482%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.3982%" y="501" width="0.0805%" height="15" fill="rgb(207,89,7)" fg:x="440" fg:w="1"/><text x="35.6482%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.3982%" y="485" width="0.0805%" height="15" fill="rgb(244,117,36)" fg:x="440" fg:w="1"/><text x="35.6482%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.3982%" y="469" width="0.0805%" height="15" fill="rgb(226,144,34)" fg:x="440" fg:w="1"/><text x="35.6482%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.3982%" y="453" width="0.0805%" height="15" fill="rgb(213,23,19)" fg:x="440" fg:w="1"/><text x="35.6482%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3982%" y="437" width="0.0805%" height="15" fill="rgb(217,75,12)" fg:x="440" fg:w="1"/><text x="35.6482%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3982%" y="421" width="0.0805%" height="15" fill="rgb(224,159,17)" fg:x="440" fg:w="1"/><text x="35.6482%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.3982%" y="405" width="0.0805%" height="15" fill="rgb(217,118,1)" fg:x="440" fg:w="1"/><text x="35.6482%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.3982%" y="389" width="0.0805%" height="15" fill="rgb(232,180,48)" fg:x="440" fg:w="1"/><text x="35.6482%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.3982%" y="373" width="0.0805%" height="15" fill="rgb(230,27,33)" fg:x="440" fg:w="1"/><text x="35.6482%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.3982%" y="357" width="0.0805%" height="15" fill="rgb(205,31,21)" fg:x="440" fg:w="1"/><text x="35.6482%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.3982%" y="341" width="0.0805%" height="15" fill="rgb(253,59,4)" fg:x="440" fg:w="1"/><text x="35.6482%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.3982%" y="325" width="0.0805%" height="15" fill="rgb(224,201,9)" fg:x="440" fg:w="1"/><text x="35.6482%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.3982%" y="309" width="0.0805%" height="15" fill="rgb(229,206,30)" fg:x="440" fg:w="1"/><text x="35.6482%" y="319.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="35.4787%" y="757" width="0.1609%" height="15" fill="rgb(212,67,47)" fg:x="441" fg:w="2"/><text x="35.7287%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="35.4787%" y="741" width="0.1609%" height="15" fill="rgb(211,96,50)" fg:x="441" fg:w="2"/><text x="35.7287%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="35.5591%" y="725" width="0.0805%" height="15" fill="rgb(252,114,18)" fg:x="442" fg:w="1"/><text x="35.8091%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.5591%" y="709" width="0.0805%" height="15" fill="rgb(223,58,37)" fg:x="442" fg:w="1"/><text x="35.8091%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="35.5591%" y="693" width="0.0805%" height="15" fill="rgb(237,70,4)" fg:x="442" fg:w="1"/><text x="35.8091%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.5591%" y="677" width="0.0805%" height="15" fill="rgb(244,85,46)" fg:x="442" fg:w="1"/><text x="35.8091%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6396%" y="677" width="0.0805%" height="15" fill="rgb(223,39,52)" fg:x="443" fg:w="1"/><text x="35.8896%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6396%" y="661" width="0.0805%" height="15" fill="rgb(218,200,14)" fg:x="443" fg:w="1"/><text x="35.8896%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6396%" y="645" width="0.0805%" height="15" fill="rgb(208,171,16)" fg:x="443" fg:w="1"/><text x="35.8896%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.6396%" y="629" width="0.0805%" height="15" fill="rgb(234,200,18)" fg:x="443" fg:w="1"/><text x="35.8896%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6396%" y="613" width="0.0805%" height="15" fill="rgb(228,45,11)" fg:x="443" fg:w="1"/><text x="35.8896%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.6396%" y="597" width="0.0805%" height="15" fill="rgb(237,182,11)" fg:x="443" fg:w="1"/><text x="35.8896%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.6396%" y="581" width="0.0805%" height="15" fill="rgb(241,175,49)" fg:x="443" fg:w="1"/><text x="35.8896%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.6396%" y="565" width="0.0805%" height="15" fill="rgb(247,38,35)" fg:x="443" fg:w="1"/><text x="35.8896%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.6396%" y="549" width="0.0805%" height="15" fill="rgb(228,39,49)" fg:x="443" fg:w="1"/><text x="35.8896%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="35.6396%" y="741" width="0.1609%" height="15" fill="rgb(226,101,26)" fg:x="443" fg:w="2"/><text x="35.8896%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="35.6396%" y="725" width="0.1609%" height="15" fill="rgb(206,141,19)" fg:x="443" fg:w="2"/><text x="35.8896%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="35.6396%" y="709" width="0.1609%" height="15" fill="rgb(211,200,13)" fg:x="443" fg:w="2"/><text x="35.8896%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.6396%" y="693" width="0.1609%" height="15" fill="rgb(241,121,6)" fg:x="443" fg:w="2"/><text x="35.8896%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.7200%" y="677" width="0.0805%" height="15" fill="rgb(234,221,29)" fg:x="444" fg:w="1"/><text x="35.9700%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="35.3178%" y="773" width="0.5632%" height="15" fill="rgb(229,136,5)" fg:x="439" fg:w="7"/><text x="35.5678%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="35.6396%" y="757" width="0.2414%" height="15" fill="rgb(238,36,11)" fg:x="443" fg:w="3"/><text x="35.8896%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="35.8005%" y="741" width="0.0805%" height="15" fill="rgb(251,55,41)" fg:x="445" fg:w="1"/><text x="36.0505%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="35.8809%" y="773" width="0.0805%" height="15" fill="rgb(242,34,40)" fg:x="446" fg:w="1"/><text x="36.1309%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="35.8809%" y="757" width="0.0805%" height="15" fill="rgb(215,42,17)" fg:x="446" fg:w="1"/><text x="36.1309%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="35.8809%" y="741" width="0.0805%" height="15" fill="rgb(207,44,46)" fg:x="446" fg:w="1"/><text x="36.1309%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="35.8809%" y="725" width="0.0805%" height="15" fill="rgb(211,206,28)" fg:x="446" fg:w="1"/><text x="36.1309%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="35.8809%" y="709" width="0.0805%" height="15" fill="rgb(237,167,16)" fg:x="446" fg:w="1"/><text x="36.1309%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.8809%" y="693" width="0.0805%" height="15" fill="rgb(233,66,6)" fg:x="446" fg:w="1"/><text x="36.1309%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8809%" y="677" width="0.0805%" height="15" fill="rgb(246,123,29)" fg:x="446" fg:w="1"/><text x="36.1309%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.80%)</title><rect x="35.3178%" y="805" width="0.8045%" height="15" fill="rgb(209,62,40)" fg:x="439" fg:w="10"/><text x="35.5678%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="35.3178%" y="789" width="0.8045%" height="15" fill="rgb(218,4,25)" fg:x="439" fg:w="10"/><text x="35.5678%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="35.9614%" y="773" width="0.1609%" height="15" fill="rgb(253,91,49)" fg:x="447" fg:w="2"/><text x="36.2114%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="36.0418%" y="757" width="0.0805%" height="15" fill="rgb(228,155,29)" fg:x="448" fg:w="1"/><text x="36.2918%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="36.0418%" y="741" width="0.0805%" height="15" fill="rgb(243,57,37)" fg:x="448" fg:w="1"/><text x="36.2918%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.0418%" y="725" width="0.0805%" height="15" fill="rgb(244,167,17)" fg:x="448" fg:w="1"/><text x="36.2918%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0418%" y="709" width="0.0805%" height="15" fill="rgb(207,181,38)" fg:x="448" fg:w="1"/><text x="36.2918%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0418%" y="693" width="0.0805%" height="15" fill="rgb(211,8,23)" fg:x="448" fg:w="1"/><text x="36.2918%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0418%" y="677" width="0.0805%" height="15" fill="rgb(235,11,44)" fg:x="448" fg:w="1"/><text x="36.2918%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0418%" y="661" width="0.0805%" height="15" fill="rgb(248,18,52)" fg:x="448" fg:w="1"/><text x="36.2918%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.0418%" y="645" width="0.0805%" height="15" fill="rgb(208,4,7)" fg:x="448" fg:w="1"/><text x="36.2918%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0418%" y="629" width="0.0805%" height="15" fill="rgb(240,17,39)" fg:x="448" fg:w="1"/><text x="36.2918%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0418%" y="613" width="0.0805%" height="15" fill="rgb(207,170,3)" fg:x="448" fg:w="1"/><text x="36.2918%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.1223%" y="725" width="0.0805%" height="15" fill="rgb(236,100,52)" fg:x="449" fg:w="1"/><text x="36.3723%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1223%" y="709" width="0.0805%" height="15" fill="rgb(246,78,51)" fg:x="449" fg:w="1"/><text x="36.3723%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="36.1223%" y="773" width="0.2414%" height="15" fill="rgb(211,17,15)" fg:x="449" fg:w="3"/><text x="36.3723%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="36.1223%" y="757" width="0.2414%" height="15" fill="rgb(209,59,46)" fg:x="449" fg:w="3"/><text x="36.3723%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.1223%" y="741" width="0.2414%" height="15" fill="rgb(210,92,25)" fg:x="449" fg:w="3"/><text x="36.3723%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.2027%" y="725" width="0.1609%" height="15" fill="rgb(238,174,52)" fg:x="450" fg:w="2"/><text x="36.4527%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.2027%" y="709" width="0.1609%" height="15" fill="rgb(230,73,7)" fg:x="450" fg:w="2"/><text x="36.4527%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.2832%" y="693" width="0.0805%" height="15" fill="rgb(243,124,40)" fg:x="451" fg:w="1"/><text x="36.5332%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.2832%" y="677" width="0.0805%" height="15" fill="rgb(244,170,11)" fg:x="451" fg:w="1"/><text x="36.5332%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.2832%" y="661" width="0.0805%" height="15" fill="rgb(207,114,54)" fg:x="451" fg:w="1"/><text x="36.5332%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.4441%" y="693" width="0.0805%" height="15" fill="rgb(205,42,20)" fg:x="453" fg:w="1"/><text x="36.6941%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.4441%" y="677" width="0.0805%" height="15" fill="rgb(230,30,28)" fg:x="453" fg:w="1"/><text x="36.6941%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="36.4441%" y="725" width="0.2414%" height="15" fill="rgb(205,73,54)" fg:x="453" fg:w="3"/><text x="36.6941%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="36.4441%" y="709" width="0.2414%" height="15" fill="rgb(254,227,23)" fg:x="453" fg:w="3"/><text x="36.6941%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.5245%" y="693" width="0.1609%" height="15" fill="rgb(228,202,34)" fg:x="454" fg:w="2"/><text x="36.7745%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.5245%" y="677" width="0.1609%" height="15" fill="rgb(222,225,37)" fg:x="454" fg:w="2"/><text x="36.7745%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.5245%" y="661" width="0.1609%" height="15" fill="rgb(221,14,54)" fg:x="454" fg:w="2"/><text x="36.7745%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.5245%" y="645" width="0.1609%" height="15" fill="rgb(254,102,2)" fg:x="454" fg:w="2"/><text x="36.7745%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="36.5245%" y="629" width="0.1609%" height="15" fill="rgb(232,104,17)" fg:x="454" fg:w="2"/><text x="36.7745%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.5245%" y="613" width="0.1609%" height="15" fill="rgb(250,220,14)" fg:x="454" fg:w="2"/><text x="36.7745%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5245%" y="597" width="0.1609%" height="15" fill="rgb(241,158,9)" fg:x="454" fg:w="2"/><text x="36.7745%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.6050%" y="581" width="0.0805%" height="15" fill="rgb(246,9,43)" fg:x="455" fg:w="1"/><text x="36.8550%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="36.3636%" y="757" width="0.4023%" height="15" fill="rgb(206,73,33)" fg:x="452" fg:w="5"/><text x="36.6136%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="36.4441%" y="741" width="0.3218%" height="15" fill="rgb(222,79,8)" fg:x="453" fg:w="4"/><text x="36.6941%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="36.6854%" y="725" width="0.0805%" height="15" fill="rgb(234,8,54)" fg:x="456" fg:w="1"/><text x="36.9354%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="36.6854%" y="709" width="0.0805%" height="15" fill="rgb(209,134,38)" fg:x="456" fg:w="1"/><text x="36.9354%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="36.6854%" y="693" width="0.0805%" height="15" fill="rgb(230,127,29)" fg:x="456" fg:w="1"/><text x="36.9354%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6854%" y="677" width="0.0805%" height="15" fill="rgb(242,44,41)" fg:x="456" fg:w="1"/><text x="36.9354%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="36.6854%" y="661" width="0.0805%" height="15" fill="rgb(222,56,43)" fg:x="456" fg:w="1"/><text x="36.9354%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6854%" y="645" width="0.0805%" height="15" fill="rgb(238,39,47)" fg:x="456" fg:w="1"/><text x="36.9354%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="36.6854%" y="629" width="0.0805%" height="15" fill="rgb(226,79,43)" fg:x="456" fg:w="1"/><text x="36.9354%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="36.6854%" y="613" width="0.0805%" height="15" fill="rgb(242,105,53)" fg:x="456" fg:w="1"/><text x="36.9354%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6854%" y="597" width="0.0805%" height="15" fill="rgb(251,132,46)" fg:x="456" fg:w="1"/><text x="36.9354%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.6854%" y="581" width="0.0805%" height="15" fill="rgb(231,77,14)" fg:x="456" fg:w="1"/><text x="36.9354%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.6854%" y="565" width="0.0805%" height="15" fill="rgb(240,135,9)" fg:x="456" fg:w="1"/><text x="36.9354%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6854%" y="549" width="0.0805%" height="15" fill="rgb(248,109,14)" fg:x="456" fg:w="1"/><text x="36.9354%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="36.1223%" y="789" width="0.8045%" height="15" fill="rgb(227,146,52)" fg:x="449" fg:w="10"/><text x="36.3723%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="36.3636%" y="773" width="0.5632%" height="15" fill="rgb(232,54,3)" fg:x="452" fg:w="7"/><text x="36.6136%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="36.7659%" y="757" width="0.1609%" height="15" fill="rgb(229,201,43)" fg:x="457" fg:w="2"/><text x="37.0159%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8463%" y="741" width="0.0805%" height="15" fill="rgb(252,161,33)" fg:x="458" fg:w="1"/><text x="37.0963%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8463%" y="725" width="0.0805%" height="15" fill="rgb(226,146,40)" fg:x="458" fg:w="1"/><text x="37.0963%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="36.8463%" y="709" width="0.0805%" height="15" fill="rgb(219,47,25)" fg:x="458" fg:w="1"/><text x="37.0963%" y="719.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="37.0072%" y="757" width="0.0805%" height="15" fill="rgb(250,135,13)" fg:x="460" fg:w="1"/><text x="37.2572%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0072%" y="741" width="0.0805%" height="15" fill="rgb(219,229,18)" fg:x="460" fg:w="1"/><text x="37.2572%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0072%" y="725" width="0.0805%" height="15" fill="rgb(217,152,27)" fg:x="460" fg:w="1"/><text x="37.2572%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="37.0072%" y="709" width="0.0805%" height="15" fill="rgb(225,71,47)" fg:x="460" fg:w="1"/><text x="37.2572%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="37.0877%" y="757" width="0.0805%" height="15" fill="rgb(220,139,14)" fg:x="461" fg:w="1"/><text x="37.3377%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.0877%" y="741" width="0.0805%" height="15" fill="rgb(247,54,32)" fg:x="461" fg:w="1"/><text x="37.3377%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.0877%" y="725" width="0.0805%" height="15" fill="rgb(252,131,39)" fg:x="461" fg:w="1"/><text x="37.3377%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.0877%" y="709" width="0.0805%" height="15" fill="rgb(210,108,39)" fg:x="461" fg:w="1"/><text x="37.3377%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.1681%" y="725" width="0.0805%" height="15" fill="rgb(205,23,29)" fg:x="462" fg:w="1"/><text x="37.4181%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.2486%" y="725" width="0.0805%" height="15" fill="rgb(246,139,46)" fg:x="463" fg:w="1"/><text x="37.4986%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.2486%" y="709" width="0.0805%" height="15" fill="rgb(250,81,26)" fg:x="463" fg:w="1"/><text x="37.4986%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.2486%" y="693" width="0.0805%" height="15" fill="rgb(214,104,7)" fg:x="463" fg:w="1"/><text x="37.4986%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.48%)</title><rect x="36.9268%" y="789" width="0.4827%" height="15" fill="rgb(233,189,8)" fg:x="459" fg:w="6"/><text x="37.1768%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.40%)</title><rect x="37.0072%" y="773" width="0.4023%" height="15" fill="rgb(228,141,17)" fg:x="460" fg:w="5"/><text x="37.2572%" y="783.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="37.1681%" y="757" width="0.2414%" height="15" fill="rgb(247,157,1)" fg:x="462" fg:w="3"/><text x="37.4181%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="37.1681%" y="741" width="0.2414%" height="15" fill="rgb(249,225,5)" fg:x="462" fg:w="3"/><text x="37.4181%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.3290%" y="725" width="0.0805%" height="15" fill="rgb(242,55,13)" fg:x="464" fg:w="1"/><text x="37.5790%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.3290%" y="709" width="0.0805%" height="15" fill="rgb(230,49,50)" fg:x="464" fg:w="1"/><text x="37.5790%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3290%" y="693" width="0.0805%" height="15" fill="rgb(241,111,38)" fg:x="464" fg:w="1"/><text x="37.5790%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4095%" y="757" width="0.0805%" height="15" fill="rgb(252,155,4)" fg:x="465" fg:w="1"/><text x="37.6595%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="37.4095%" y="773" width="0.1609%" height="15" fill="rgb(212,69,32)" fg:x="465" fg:w="2"/><text x="37.6595%" y="783.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="37.4899%" y="757" width="0.0805%" height="15" fill="rgb(243,107,47)" fg:x="466" fg:w="1"/><text x="37.7399%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="37.4899%" y="741" width="0.0805%" height="15" fill="rgb(247,130,12)" fg:x="466" fg:w="1"/><text x="37.7399%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.4899%" y="725" width="0.0805%" height="15" fill="rgb(233,74,16)" fg:x="466" fg:w="1"/><text x="37.7399%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="37.4899%" y="709" width="0.0805%" height="15" fill="rgb(208,58,18)" fg:x="466" fg:w="1"/><text x="37.7399%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.4899%" y="693" width="0.0805%" height="15" fill="rgb(242,225,1)" fg:x="466" fg:w="1"/><text x="37.7399%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4899%" y="677" width="0.0805%" height="15" fill="rgb(249,39,40)" fg:x="466" fg:w="1"/><text x="37.7399%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.5704%" y="693" width="0.0805%" height="15" fill="rgb(207,72,44)" fg:x="467" fg:w="1"/><text x="37.8204%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="37.5704%" y="741" width="0.1609%" height="15" fill="rgb(215,193,12)" fg:x="467" fg:w="2"/><text x="37.8204%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.5704%" y="725" width="0.1609%" height="15" fill="rgb(248,41,39)" fg:x="467" fg:w="2"/><text x="37.8204%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.5704%" y="709" width="0.1609%" height="15" fill="rgb(253,85,4)" fg:x="467" fg:w="2"/><text x="37.8204%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6508%" y="693" width="0.0805%" height="15" fill="rgb(243,70,31)" fg:x="468" fg:w="1"/><text x="37.9008%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6508%" y="677" width="0.0805%" height="15" fill="rgb(253,195,26)" fg:x="468" fg:w="1"/><text x="37.9008%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6508%" y="661" width="0.0805%" height="15" fill="rgb(243,42,11)" fg:x="468" fg:w="1"/><text x="37.9008%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6508%" y="645" width="0.0805%" height="15" fill="rgb(239,66,17)" fg:x="468" fg:w="1"/><text x="37.9008%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.6508%" y="629" width="0.0805%" height="15" fill="rgb(217,132,21)" fg:x="468" fg:w="1"/><text x="37.9008%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.6508%" y="613" width="0.0805%" height="15" fill="rgb(252,202,21)" fg:x="468" fg:w="1"/><text x="37.9008%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.7313%" y="693" width="0.0805%" height="15" fill="rgb(233,98,36)" fg:x="469" fg:w="1"/><text x="37.9813%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7313%" y="677" width="0.0805%" height="15" fill="rgb(216,153,54)" fg:x="469" fg:w="1"/><text x="37.9813%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.7313%" y="661" width="0.0805%" height="15" fill="rgb(250,99,7)" fg:x="469" fg:w="1"/><text x="37.9813%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.7313%" y="645" width="0.0805%" height="15" fill="rgb(207,56,50)" fg:x="469" fg:w="1"/><text x="37.9813%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.7313%" y="629" width="0.0805%" height="15" fill="rgb(244,61,34)" fg:x="469" fg:w="1"/><text x="37.9813%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.7313%" y="613" width="0.0805%" height="15" fill="rgb(241,50,38)" fg:x="469" fg:w="1"/><text x="37.9813%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7313%" y="597" width="0.0805%" height="15" fill="rgb(212,166,30)" fg:x="469" fg:w="1"/><text x="37.9813%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.7313%" y="581" width="0.0805%" height="15" fill="rgb(249,127,32)" fg:x="469" fg:w="1"/><text x="37.9813%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.7313%" y="565" width="0.0805%" height="15" fill="rgb(209,103,0)" fg:x="469" fg:w="1"/><text x="37.9813%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.7313%" y="549" width="0.0805%" height="15" fill="rgb(238,209,51)" fg:x="469" fg:w="1"/><text x="37.9813%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.7313%" y="533" width="0.0805%" height="15" fill="rgb(237,56,23)" fg:x="469" fg:w="1"/><text x="37.9813%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.7313%" y="517" width="0.0805%" height="15" fill="rgb(215,153,46)" fg:x="469" fg:w="1"/><text x="37.9813%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.7313%" y="501" width="0.0805%" height="15" fill="rgb(224,49,31)" fg:x="469" fg:w="1"/><text x="37.9813%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (406 samples, 32.66%)</title><rect x="5.2293%" y="821" width="32.6629%" height="15" fill="rgb(250,18,42)" fg:x="65" fg:w="406"/><text x="5.4793%" y="831.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::p..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (22 samples, 1.77%)</title><rect x="36.1223%" y="805" width="1.7699%" height="15" fill="rgb(215,176,39)" fg:x="449" fg:w="22"/><text x="36.3723%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="37.4095%" y="789" width="0.4827%" height="15" fill="rgb(223,77,29)" fg:x="465" fg:w="6"/><text x="37.6595%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new (4 samples, 0.32%)</title><rect x="37.5704%" y="773" width="0.3218%" height="15" fill="rgb(234,94,52)" fg:x="467" fg:w="4"/><text x="37.8204%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="37.5704%" y="757" width="0.3218%" height="15" fill="rgb(220,154,50)" fg:x="467" fg:w="4"/><text x="37.8204%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="37.7313%" y="741" width="0.1609%" height="15" fill="rgb(212,11,10)" fg:x="469" fg:w="2"/><text x="37.9813%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="37.7313%" y="725" width="0.1609%" height="15" fill="rgb(205,166,19)" fg:x="469" fg:w="2"/><text x="37.9813%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="37.7313%" y="709" width="0.1609%" height="15" fill="rgb(244,198,16)" fg:x="469" fg:w="2"/><text x="37.9813%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.8117%" y="693" width="0.0805%" height="15" fill="rgb(219,69,12)" fg:x="470" fg:w="1"/><text x="38.0617%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8117%" y="677" width="0.0805%" height="15" fill="rgb(245,30,7)" fg:x="470" fg:w="1"/><text x="38.0617%" y="687.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="37.8117%" y="661" width="0.0805%" height="15" fill="rgb(218,221,48)" fg:x="470" fg:w="1"/><text x="38.0617%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="37.9726%" y="805" width="0.1609%" height="15" fill="rgb(216,66,15)" fg:x="472" fg:w="2"/><text x="38.2226%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.0531%" y="789" width="0.0805%" height="15" fill="rgb(226,122,50)" fg:x="473" fg:w="1"/><text x="38.3031%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.0531%" y="773" width="0.0805%" height="15" fill="rgb(239,156,16)" fg:x="473" fg:w="1"/><text x="38.3031%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.0531%" y="757" width="0.0805%" height="15" fill="rgb(224,27,38)" fg:x="473" fg:w="1"/><text x="38.3031%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.0531%" y="741" width="0.0805%" height="15" fill="rgb(224,39,27)" fg:x="473" fg:w="1"/><text x="38.3031%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="38.0531%" y="725" width="0.0805%" height="15" fill="rgb(215,92,29)" fg:x="473" fg:w="1"/><text x="38.3031%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="38.0531%" y="709" width="0.0805%" height="15" fill="rgb(207,159,16)" fg:x="473" fg:w="1"/><text x="38.3031%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.0531%" y="693" width="0.0805%" height="15" fill="rgb(238,163,47)" fg:x="473" fg:w="1"/><text x="38.3031%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.0531%" y="677" width="0.0805%" height="15" fill="rgb(219,91,49)" fg:x="473" fg:w="1"/><text x="38.3031%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="38.1335%" y="773" width="0.2414%" height="15" fill="rgb(227,167,31)" fg:x="474" fg:w="3"/><text x="38.3835%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="38.2140%" y="757" width="0.1609%" height="15" fill="rgb(234,80,54)" fg:x="475" fg:w="2"/><text x="38.4640%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="38.2140%" y="741" width="0.1609%" height="15" fill="rgb(212,114,2)" fg:x="475" fg:w="2"/><text x="38.4640%" y="751.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="38.2140%" y="725" width="0.1609%" height="15" fill="rgb(234,50,24)" fg:x="475" fg:w="2"/><text x="38.4640%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.3749%" y="773" width="0.0805%" height="15" fill="rgb(221,68,8)" fg:x="477" fg:w="1"/><text x="38.6249%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="38.3749%" y="757" width="0.0805%" height="15" fill="rgb(254,180,31)" fg:x="477" fg:w="1"/><text x="38.6249%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="38.3749%" y="741" width="0.0805%" height="15" fill="rgb(247,130,50)" fg:x="477" fg:w="1"/><text x="38.6249%" y="751.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="38.3749%" y="725" width="0.0805%" height="15" fill="rgb(211,109,4)" fg:x="477" fg:w="1"/><text x="38.6249%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.6163%" y="661" width="0.0805%" height="15" fill="rgb(238,50,21)" fg:x="480" fg:w="1"/><text x="38.8663%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="38.4553%" y="709" width="0.3218%" height="15" fill="rgb(225,57,45)" fg:x="478" fg:w="4"/><text x="38.7053%" y="719.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="38.4553%" y="693" width="0.3218%" height="15" fill="rgb(209,196,50)" fg:x="478" fg:w="4"/><text x="38.7053%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="38.4553%" y="677" width="0.3218%" height="15" fill="rgb(242,140,13)" fg:x="478" fg:w="4"/><text x="38.7053%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="38.6967%" y="661" width="0.0805%" height="15" fill="rgb(217,111,7)" fg:x="481" fg:w="1"/><text x="38.9467%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="38.4553%" y="725" width="0.4023%" height="15" fill="rgb(253,193,51)" fg:x="478" fg:w="5"/><text x="38.7053%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.7772%" y="709" width="0.0805%" height="15" fill="rgb(252,70,29)" fg:x="482" fg:w="1"/><text x="39.0272%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.7772%" y="693" width="0.0805%" height="15" fill="rgb(232,127,12)" fg:x="482" fg:w="1"/><text x="39.0272%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.7772%" y="677" width="0.0805%" height="15" fill="rgb(211,180,21)" fg:x="482" fg:w="1"/><text x="39.0272%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="38.9381%" y="709" width="0.2414%" height="15" fill="rgb(229,72,13)" fg:x="484" fg:w="3"/><text x="39.1881%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.0185%" y="693" width="0.1609%" height="15" fill="rgb(240,211,49)" fg:x="485" fg:w="2"/><text x="39.2685%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.0990%" y="677" width="0.0805%" height="15" fill="rgb(219,149,40)" fg:x="486" fg:w="1"/><text x="39.3490%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="39.2599%" y="693" width="0.0805%" height="15" fill="rgb(210,127,46)" fg:x="488" fg:w="1"/><text x="39.5099%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="39.2599%" y="677" width="0.0805%" height="15" fill="rgb(220,106,7)" fg:x="488" fg:w="1"/><text x="39.5099%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="39.2599%" y="661" width="0.0805%" height="15" fill="rgb(249,31,22)" fg:x="488" fg:w="1"/><text x="39.5099%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.2599%" y="645" width="0.0805%" height="15" fill="rgb(253,1,49)" fg:x="488" fg:w="1"/><text x="39.5099%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="39.3403%" y="693" width="0.4023%" height="15" fill="rgb(227,144,33)" fg:x="489" fg:w="5"/><text x="39.5903%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="39.5817%" y="677" width="0.1609%" height="15" fill="rgb(249,163,44)" fg:x="492" fg:w="2"/><text x="39.8317%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="39.5817%" y="661" width="0.1609%" height="15" fill="rgb(234,15,39)" fg:x="492" fg:w="2"/><text x="39.8317%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.6621%" y="645" width="0.0805%" height="15" fill="rgb(207,66,16)" fg:x="493" fg:w="1"/><text x="39.9121%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="39.9035%" y="661" width="0.0805%" height="15" fill="rgb(233,112,24)" fg:x="496" fg:w="1"/><text x="40.1535%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.9035%" y="645" width="0.0805%" height="15" fill="rgb(230,90,22)" fg:x="496" fg:w="1"/><text x="40.1535%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="39.9839%" y="645" width="0.0805%" height="15" fill="rgb(229,61,13)" fg:x="497" fg:w="1"/><text x="40.2339%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.1448%" y="629" width="0.0805%" height="15" fill="rgb(225,57,24)" fg:x="499" fg:w="1"/><text x="40.3948%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="40.1448%" y="613" width="0.0805%" height="15" fill="rgb(208,169,48)" fg:x="499" fg:w="1"/><text x="40.3948%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.1448%" y="597" width="0.0805%" height="15" fill="rgb(244,218,51)" fg:x="499" fg:w="1"/><text x="40.3948%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.1448%" y="581" width="0.0805%" height="15" fill="rgb(214,148,10)" fg:x="499" fg:w="1"/><text x="40.3948%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="40.2253%" y="629" width="0.2414%" height="15" fill="rgb(225,174,27)" fg:x="500" fg:w="3"/><text x="40.4753%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="40.2253%" y="613" width="0.2414%" height="15" fill="rgb(230,96,26)" fg:x="500" fg:w="3"/><text x="40.4753%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="40.2253%" y="597" width="0.2414%" height="15" fill="rgb(232,10,30)" fg:x="500" fg:w="3"/><text x="40.4753%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="40.2253%" y="581" width="0.2414%" height="15" fill="rgb(222,8,50)" fg:x="500" fg:w="3"/><text x="40.4753%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="40.2253%" y="565" width="0.2414%" height="15" fill="rgb(213,81,27)" fg:x="500" fg:w="3"/><text x="40.4753%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="40.2253%" y="549" width="0.2414%" height="15" fill="rgb(245,50,10)" fg:x="500" fg:w="3"/><text x="40.4753%" y="559.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="40.2253%" y="533" width="0.2414%" height="15" fill="rgb(216,100,18)" fg:x="500" fg:w="3"/><text x="40.4753%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="40.0644%" y="645" width="0.5632%" height="15" fill="rgb(236,147,54)" fg:x="498" fg:w="7"/><text x="40.3144%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.4666%" y="629" width="0.1609%" height="15" fill="rgb(205,143,26)" fg:x="503" fg:w="2"/><text x="40.7166%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="40.5471%" y="613" width="0.0805%" height="15" fill="rgb(236,26,9)" fg:x="504" fg:w="1"/><text x="40.7971%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="39.8230%" y="677" width="1.0459%" height="15" fill="rgb(221,165,53)" fg:x="495" fg:w="13"/><text x="40.0730%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="39.9839%" y="661" width="0.8850%" height="15" fill="rgb(214,110,17)" fg:x="497" fg:w="11"/><text x="40.2339%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="40.6275%" y="645" width="0.2414%" height="15" fill="rgb(237,197,12)" fg:x="505" fg:w="3"/><text x="40.8775%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="40.7080%" y="629" width="0.1609%" height="15" fill="rgb(205,84,17)" fg:x="506" fg:w="2"/><text x="40.9580%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="40.7080%" y="613" width="0.1609%" height="15" fill="rgb(237,18,45)" fg:x="506" fg:w="2"/><text x="40.9580%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.7884%" y="597" width="0.0805%" height="15" fill="rgb(221,87,14)" fg:x="507" fg:w="1"/><text x="41.0384%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.7884%" y="581" width="0.0805%" height="15" fill="rgb(238,186,15)" fg:x="507" fg:w="1"/><text x="41.0384%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.7884%" y="565" width="0.0805%" height="15" fill="rgb(208,115,11)" fg:x="507" fg:w="1"/><text x="41.0384%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="39.7426%" y="693" width="1.2872%" height="15" fill="rgb(254,175,0)" fg:x="494" fg:w="16"/><text x="39.9926%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="40.8689%" y="677" width="0.1609%" height="15" fill="rgb(227,24,42)" fg:x="508" fg:w="2"/><text x="41.1189%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="40.8689%" y="661" width="0.1609%" height="15" fill="rgb(223,211,37)" fg:x="508" fg:w="2"/><text x="41.1189%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="40.8689%" y="645" width="0.1609%" height="15" fill="rgb(235,49,27)" fg:x="508" fg:w="2"/><text x="41.1189%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="39.1794%" y="709" width="1.9308%" height="15" fill="rgb(254,97,51)" fg:x="487" fg:w="24"/><text x="39.4294%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.0298%" y="693" width="0.0805%" height="15" fill="rgb(249,51,40)" fg:x="510" fg:w="1"/><text x="41.2798%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.41%)</title><rect x="38.8576%" y="725" width="2.4135%" height="15" fill="rgb(210,128,45)" fg:x="483" fg:w="30"/><text x="39.1076%" y="735.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="41.1102%" y="709" width="0.1609%" height="15" fill="rgb(224,137,50)" fg:x="511" fg:w="2"/><text x="41.3602%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.90%)</title><rect x="38.4553%" y="741" width="2.8962%" height="15" fill="rgb(242,15,9)" fg:x="478" fg:w="36"/><text x="38.7053%" y="751.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.2711%" y="725" width="0.0805%" height="15" fill="rgb(233,187,41)" fg:x="513" fg:w="1"/><text x="41.5211%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.2711%" y="709" width="0.0805%" height="15" fill="rgb(227,2,29)" fg:x="513" fg:w="1"/><text x="41.5211%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.5125%" y="709" width="0.0805%" height="15" fill="rgb(222,70,3)" fg:x="516" fg:w="1"/><text x="41.7625%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8343%" y="693" width="0.0805%" height="15" fill="rgb(213,11,42)" fg:x="520" fg:w="1"/><text x="42.0843%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.9147%" y="693" width="0.1609%" height="15" fill="rgb(225,150,9)" fg:x="521" fg:w="2"/><text x="42.1647%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9952%" y="677" width="0.0805%" height="15" fill="rgb(230,162,45)" fg:x="522" fg:w="1"/><text x="42.2452%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.0756%" y="661" width="0.0805%" height="15" fill="rgb(222,14,52)" fg:x="523" fg:w="1"/><text x="42.3256%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0756%" y="645" width="0.0805%" height="15" fill="rgb(254,198,14)" fg:x="523" fg:w="1"/><text x="42.3256%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="42.1561%" y="661" width="0.0805%" height="15" fill="rgb(220,217,30)" fg:x="524" fg:w="1"/><text x="42.4061%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3170%" y="629" width="0.0805%" height="15" fill="rgb(215,146,41)" fg:x="526" fg:w="1"/><text x="42.5670%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.3974%" y="629" width="0.0805%" height="15" fill="rgb(217,27,36)" fg:x="527" fg:w="1"/><text x="42.6474%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.3974%" y="613" width="0.0805%" height="15" fill="rgb(219,218,39)" fg:x="527" fg:w="1"/><text x="42.6474%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="41.3516%" y="741" width="1.2068%" height="15" fill="rgb(219,4,42)" fg:x="514" fg:w="15"/><text x="41.6016%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="41.3516%" y="725" width="1.2068%" height="15" fill="rgb(249,119,36)" fg:x="514" fg:w="15"/><text x="41.6016%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="41.5929%" y="709" width="0.9654%" height="15" fill="rgb(209,23,33)" fg:x="517" fg:w="12"/><text x="41.8429%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="42.0756%" y="693" width="0.4827%" height="15" fill="rgb(211,10,0)" fg:x="523" fg:w="6"/><text x="42.3256%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="42.0756%" y="677" width="0.4827%" height="15" fill="rgb(208,99,37)" fg:x="523" fg:w="6"/><text x="42.3256%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="42.2365%" y="661" width="0.3218%" height="15" fill="rgb(213,132,31)" fg:x="525" fg:w="4"/><text x="42.4865%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="42.3170%" y="645" width="0.2414%" height="15" fill="rgb(243,129,40)" fg:x="526" fg:w="3"/><text x="42.5670%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.4779%" y="629" width="0.0805%" height="15" fill="rgb(210,66,33)" fg:x="528" fg:w="1"/><text x="42.7279%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.4779%" y="613" width="0.0805%" height="15" fill="rgb(209,189,4)" fg:x="528" fg:w="1"/><text x="42.7279%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.6388%" y="709" width="0.1609%" height="15" fill="rgb(214,107,37)" fg:x="530" fg:w="2"/><text x="42.8888%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.7997%" y="677" width="0.1609%" height="15" fill="rgb(245,88,54)" fg:x="532" fg:w="2"/><text x="43.0497%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.9606%" y="677" width="0.0805%" height="15" fill="rgb(205,146,20)" fg:x="534" fg:w="1"/><text x="43.2106%" y="687.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.2019%" y="661" width="0.2414%" height="15" fill="rgb(220,161,25)" fg:x="537" fg:w="3"/><text x="43.4519%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="43.4433%" y="661" width="0.1609%" height="15" fill="rgb(215,152,15)" fg:x="540" fg:w="2"/><text x="43.6933%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.5237%" y="645" width="0.0805%" height="15" fill="rgb(233,192,44)" fg:x="541" fg:w="1"/><text x="43.7737%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.6042%" y="645" width="0.1609%" height="15" fill="rgb(240,170,46)" fg:x="542" fg:w="2"/><text x="43.8542%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="43.7651%" y="645" width="0.1609%" height="15" fill="rgb(207,104,33)" fg:x="544" fg:w="2"/><text x="44.0151%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.9260%" y="629" width="0.0805%" height="15" fill="rgb(219,21,39)" fg:x="546" fg:w="1"/><text x="44.1760%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.9260%" y="613" width="0.0805%" height="15" fill="rgb(214,133,29)" fg:x="546" fg:w="1"/><text x="44.1760%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0064%" y="597" width="0.0805%" height="15" fill="rgb(226,93,6)" fg:x="547" fg:w="1"/><text x="44.2564%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="44.0064%" y="629" width="0.2414%" height="15" fill="rgb(252,222,34)" fg:x="547" fg:w="3"/><text x="44.2564%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="44.0064%" y="613" width="0.2414%" height="15" fill="rgb(252,92,48)" fg:x="547" fg:w="3"/><text x="44.2564%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.0869%" y="597" width="0.1609%" height="15" fill="rgb(245,223,24)" fg:x="548" fg:w="2"/><text x="44.3369%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1673%" y="581" width="0.0805%" height="15" fill="rgb(205,176,3)" fg:x="549" fg:w="1"/><text x="44.4173%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.2478%" y="613" width="0.0805%" height="15" fill="rgb(235,151,15)" fg:x="550" fg:w="1"/><text x="44.4978%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.3282%" y="597" width="0.1609%" height="15" fill="rgb(237,209,11)" fg:x="551" fg:w="2"/><text x="44.5782%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.3282%" y="581" width="0.1609%" height="15" fill="rgb(243,227,24)" fg:x="551" fg:w="2"/><text x="44.5782%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.5696%" y="581" width="0.1609%" height="15" fill="rgb(239,193,16)" fg:x="554" fg:w="2"/><text x="44.8196%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (26 samples, 2.09%)</title><rect x="42.7997%" y="709" width="2.0917%" height="15" fill="rgb(231,27,9)" fg:x="532" fg:w="26"/><text x="43.0497%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (26 samples, 2.09%)</title><rect x="42.7997%" y="693" width="2.0917%" height="15" fill="rgb(219,169,10)" fg:x="532" fg:w="26"/><text x="43.0497%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.85%)</title><rect x="43.0410%" y="677" width="1.8504%" height="15" fill="rgb(244,229,43)" fg:x="535" fg:w="23"/><text x="43.2910%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.29%)</title><rect x="43.6042%" y="661" width="1.2872%" height="15" fill="rgb(254,38,20)" fg:x="542" fg:w="16"/><text x="43.8542%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="43.9260%" y="645" width="0.9654%" height="15" fill="rgb(250,47,30)" fg:x="546" fg:w="12"/><text x="44.1760%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="44.2478%" y="629" width="0.6436%" height="15" fill="rgb(224,124,36)" fg:x="550" fg:w="8"/><text x="44.4978%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="44.3282%" y="613" width="0.5632%" height="15" fill="rgb(246,68,51)" fg:x="551" fg:w="7"/><text x="44.5782%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="44.4891%" y="597" width="0.4023%" height="15" fill="rgb(253,43,49)" fg:x="553" fg:w="5"/><text x="44.7391%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.7305%" y="581" width="0.1609%" height="15" fill="rgb(219,54,36)" fg:x="556" fg:w="2"/><text x="44.9805%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="45.1327%" y="645" width="0.1609%" height="15" fill="rgb(227,133,34)" fg:x="561" fg:w="2"/><text x="45.3827%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="45.1327%" y="629" width="0.1609%" height="15" fill="rgb(247,227,15)" fg:x="561" fg:w="2"/><text x="45.3827%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="45.1327%" y="613" width="0.1609%" height="15" fill="rgb(229,96,14)" fg:x="561" fg:w="2"/><text x="45.3827%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.2132%" y="597" width="0.0805%" height="15" fill="rgb(220,79,17)" fg:x="562" fg:w="1"/><text x="45.4632%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="45.0523%" y="661" width="0.3218%" height="15" fill="rgb(205,131,53)" fg:x="560" fg:w="4"/><text x="45.3023%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.2936%" y="645" width="0.0805%" height="15" fill="rgb(209,50,29)" fg:x="563" fg:w="1"/><text x="45.5436%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (37 samples, 2.98%)</title><rect x="42.6388%" y="725" width="2.9767%" height="15" fill="rgb(245,86,46)" fg:x="530" fg:w="37"/><text x="42.8888%" y="735.50">&lt;ke..</text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="44.8914%" y="709" width="0.7241%" height="15" fill="rgb(235,66,46)" fg:x="558" fg:w="9"/><text x="45.1414%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="44.8914%" y="693" width="0.7241%" height="15" fill="rgb(232,148,31)" fg:x="558" fg:w="9"/><text x="45.1414%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="44.8914%" y="677" width="0.7241%" height="15" fill="rgb(217,149,8)" fg:x="558" fg:w="9"/><text x="45.1414%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="45.3741%" y="661" width="0.2414%" height="15" fill="rgb(209,183,11)" fg:x="564" fg:w="3"/><text x="45.6241%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="45.6154%" y="725" width="0.2414%" height="15" fill="rgb(208,55,20)" fg:x="567" fg:w="3"/><text x="45.8654%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.6959%" y="709" width="0.1609%" height="15" fill="rgb(218,39,14)" fg:x="568" fg:w="2"/><text x="45.9459%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.8568%" y="693" width="0.1609%" height="15" fill="rgb(216,169,33)" fg:x="570" fg:w="2"/><text x="46.1068%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.64%)</title><rect x="46.0177%" y="693" width="0.6436%" height="15" fill="rgb(233,80,24)" fg:x="572" fg:w="8"/><text x="46.2677%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.3395%" y="677" width="0.3218%" height="15" fill="rgb(213,179,31)" fg:x="576" fg:w="4"/><text x="46.5895%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="46.5004%" y="661" width="0.1609%" height="15" fill="rgb(209,19,5)" fg:x="578" fg:w="2"/><text x="46.7504%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="46.6613%" y="693" width="0.0805%" height="15" fill="rgb(219,18,35)" fg:x="580" fg:w="1"/><text x="46.9113%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="46.6613%" y="677" width="0.0805%" height="15" fill="rgb(209,169,16)" fg:x="580" fg:w="1"/><text x="46.9113%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6613%" y="661" width="0.0805%" height="15" fill="rgb(245,90,51)" fg:x="580" fg:w="1"/><text x="46.9113%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="46.7418%" y="693" width="0.1609%" height="15" fill="rgb(220,99,45)" fg:x="581" fg:w="2"/><text x="46.9918%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="46.7418%" y="677" width="0.1609%" height="15" fill="rgb(249,89,25)" fg:x="581" fg:w="2"/><text x="46.9918%" y="687.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="46.8222%" y="661" width="0.0805%" height="15" fill="rgb(239,193,0)" fg:x="582" fg:w="1"/><text x="47.0722%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.8222%" y="645" width="0.0805%" height="15" fill="rgb(231,126,1)" fg:x="582" fg:w="1"/><text x="47.0722%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="46.9027%" y="677" width="0.0805%" height="15" fill="rgb(243,166,3)" fg:x="583" fg:w="1"/><text x="47.1527%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9831%" y="661" width="0.0805%" height="15" fill="rgb(223,22,34)" fg:x="584" fg:w="1"/><text x="47.2331%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="46.9027%" y="693" width="0.4827%" height="15" fill="rgb(251,52,51)" fg:x="583" fg:w="6"/><text x="47.1527%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="46.9831%" y="677" width="0.4023%" height="15" fill="rgb(221,165,28)" fg:x="584" fg:w="5"/><text x="47.2331%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.0636%" y="661" width="0.3218%" height="15" fill="rgb(218,121,47)" fg:x="585" fg:w="4"/><text x="47.3136%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.3049%" y="645" width="0.0805%" height="15" fill="rgb(209,120,9)" fg:x="588" fg:w="1"/><text x="47.5549%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="47.8681%" y="661" width="0.1609%" height="15" fill="rgb(236,68,12)" fg:x="595" fg:w="2"/><text x="48.1181%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.0290%" y="645" width="0.3218%" height="15" fill="rgb(225,194,26)" fg:x="597" fg:w="4"/><text x="48.2790%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.1899%" y="629" width="0.1609%" height="15" fill="rgb(231,84,39)" fg:x="599" fg:w="2"/><text x="48.4399%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.2703%" y="613" width="0.0805%" height="15" fill="rgb(210,11,45)" fg:x="600" fg:w="1"/><text x="48.5203%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="48.3508%" y="597" width="0.4023%" height="15" fill="rgb(224,54,52)" fg:x="601" fg:w="5"/><text x="48.6008%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.5921%" y="581" width="0.1609%" height="15" fill="rgb(238,102,14)" fg:x="604" fg:w="2"/><text x="48.8421%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6726%" y="565" width="0.0805%" height="15" fill="rgb(243,160,52)" fg:x="605" fg:w="1"/><text x="48.9226%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="48.3508%" y="645" width="0.4827%" height="15" fill="rgb(216,114,19)" fg:x="601" fg:w="6"/><text x="48.6008%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="48.3508%" y="629" width="0.4827%" height="15" fill="rgb(244,166,37)" fg:x="601" fg:w="6"/><text x="48.6008%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="48.3508%" y="613" width="0.4827%" height="15" fill="rgb(246,29,44)" fg:x="601" fg:w="6"/><text x="48.6008%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="48.7530%" y="597" width="0.0805%" height="15" fill="rgb(215,56,53)" fg:x="606" fg:w="1"/><text x="49.0030%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7530%" y="581" width="0.0805%" height="15" fill="rgb(217,60,2)" fg:x="606" fg:w="1"/><text x="49.0030%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1553%" y="581" width="0.0805%" height="15" fill="rgb(207,26,24)" fg:x="611" fg:w="1"/><text x="49.4053%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="48.9944%" y="613" width="0.3218%" height="15" fill="rgb(252,210,15)" fg:x="609" fg:w="4"/><text x="49.2444%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.0748%" y="597" width="0.2414%" height="15" fill="rgb(253,209,26)" fg:x="610" fg:w="3"/><text x="49.3248%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.2357%" y="581" width="0.0805%" height="15" fill="rgb(238,170,14)" fg:x="612" fg:w="1"/><text x="49.4857%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="49.3162%" y="613" width="0.0805%" height="15" fill="rgb(216,178,15)" fg:x="613" fg:w="1"/><text x="49.5662%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.4771%" y="597" width="0.0805%" height="15" fill="rgb(250,197,2)" fg:x="615" fg:w="1"/><text x="49.7271%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5575%" y="581" width="0.0805%" height="15" fill="rgb(212,70,42)" fg:x="616" fg:w="1"/><text x="49.8075%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5575%" y="565" width="0.0805%" height="15" fill="rgb(227,213,9)" fg:x="616" fg:w="1"/><text x="49.8075%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.7184%" y="565" width="0.0805%" height="15" fill="rgb(245,99,25)" fg:x="618" fg:w="1"/><text x="49.9684%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="49.7989%" y="565" width="0.0805%" height="15" fill="rgb(250,82,29)" fg:x="619" fg:w="1"/><text x="50.0489%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="50.0402%" y="533" width="0.0805%" height="15" fill="rgb(241,226,54)" fg:x="622" fg:w="1"/><text x="50.2902%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.1207%" y="517" width="0.1609%" height="15" fill="rgb(221,99,41)" fg:x="623" fg:w="2"/><text x="50.3707%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2011%" y="501" width="0.0805%" height="15" fill="rgb(213,90,21)" fg:x="624" fg:w="1"/><text x="50.4511%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2011%" y="485" width="0.0805%" height="15" fill="rgb(205,208,24)" fg:x="624" fg:w="1"/><text x="50.4511%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="49.5575%" y="597" width="0.8850%" height="15" fill="rgb(246,31,12)" fg:x="616" fg:w="11"/><text x="49.8075%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="49.6380%" y="581" width="0.8045%" height="15" fill="rgb(213,154,6)" fg:x="617" fg:w="10"/><text x="49.8880%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="49.8793%" y="565" width="0.5632%" height="15" fill="rgb(222,163,29)" fg:x="620" fg:w="7"/><text x="50.1293%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="49.9598%" y="549" width="0.4827%" height="15" fill="rgb(227,201,8)" fg:x="621" fg:w="6"/><text x="50.2098%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="50.1207%" y="533" width="0.3218%" height="15" fill="rgb(233,9,32)" fg:x="623" fg:w="4"/><text x="50.3707%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="50.2816%" y="517" width="0.1609%" height="15" fill="rgb(217,54,24)" fg:x="625" fg:w="2"/><text x="50.5316%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="50.3620%" y="501" width="0.0805%" height="15" fill="rgb(235,192,0)" fg:x="626" fg:w="1"/><text x="50.6120%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.53%)</title><rect x="48.9944%" y="629" width="1.5286%" height="15" fill="rgb(235,45,9)" fg:x="609" fg:w="19"/><text x="49.2444%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.13%)</title><rect x="49.3966%" y="613" width="1.1263%" height="15" fill="rgb(246,42,40)" fg:x="614" fg:w="14"/><text x="49.6466%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4425%" y="597" width="0.0805%" height="15" fill="rgb(248,111,24)" fg:x="627" fg:w="1"/><text x="50.6925%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.74%)</title><rect x="48.0290%" y="661" width="2.7353%" height="15" fill="rgb(249,65,22)" fg:x="597" fg:w="34"/><text x="48.2790%" y="671.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 1.93%)</title><rect x="48.8335%" y="645" width="1.9308%" height="15" fill="rgb(238,111,51)" fg:x="607" fg:w="24"/><text x="49.0835%" y="655.50">s..</text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="50.5229%" y="629" width="0.2414%" height="15" fill="rgb(250,118,22)" fg:x="628" fg:w="3"/><text x="50.7729%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (44 samples, 3.54%)</title><rect x="47.4658%" y="677" width="3.5398%" height="15" fill="rgb(234,84,26)" fg:x="590" fg:w="44"/><text x="47.7158%" y="687.50">&lt;se..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="50.7643%" y="661" width="0.2414%" height="15" fill="rgb(243,172,12)" fg:x="631" fg:w="3"/><text x="51.0143%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.8447%" y="645" width="0.1609%" height="15" fill="rgb(236,150,49)" fg:x="632" fg:w="2"/><text x="51.0947%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (65 samples, 5.23%)</title><rect x="45.8568%" y="725" width="5.2293%" height="15" fill="rgb(225,197,26)" fg:x="570" fg:w="65"/><text x="46.1068%" y="735.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (65 samples, 5.23%)</title><rect x="45.8568%" y="709" width="5.2293%" height="15" fill="rgb(214,17,42)" fg:x="570" fg:w="65"/><text x="46.1068%" y="719.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (46 samples, 3.70%)</title><rect x="47.3854%" y="693" width="3.7007%" height="15" fill="rgb(224,165,40)" fg:x="589" fg:w="46"/><text x="47.6354%" y="703.50">serd..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0056%" y="677" width="0.0805%" height="15" fill="rgb(246,100,4)" fg:x="634" fg:w="1"/><text x="51.2556%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.6492%" y="549" width="0.0805%" height="15" fill="rgb(222,103,0)" fg:x="642" fg:w="1"/><text x="51.8992%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.6492%" y="533" width="0.0805%" height="15" fill="rgb(227,189,26)" fg:x="642" fg:w="1"/><text x="51.8992%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="51.6492%" y="581" width="0.3218%" height="15" fill="rgb(214,202,17)" fg:x="642" fg:w="4"/><text x="51.8992%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="51.6492%" y="565" width="0.3218%" height="15" fill="rgb(229,111,3)" fg:x="642" fg:w="4"/><text x="51.8992%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="51.7297%" y="549" width="0.2414%" height="15" fill="rgb(229,172,15)" fg:x="643" fg:w="3"/><text x="51.9797%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.8906%" y="533" width="0.0805%" height="15" fill="rgb(230,224,35)" fg:x="645" fg:w="1"/><text x="52.1406%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.1319%" y="485" width="0.1609%" height="15" fill="rgb(251,141,6)" fg:x="648" fg:w="2"/><text x="52.3819%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.2124%" y="469" width="0.0805%" height="15" fill="rgb(225,208,6)" fg:x="649" fg:w="1"/><text x="52.4624%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.2124%" y="453" width="0.0805%" height="15" fill="rgb(246,181,16)" fg:x="649" fg:w="1"/><text x="52.4624%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2124%" y="437" width="0.0805%" height="15" fill="rgb(227,129,36)" fg:x="649" fg:w="1"/><text x="52.4624%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2928%" y="485" width="0.0805%" height="15" fill="rgb(248,117,24)" fg:x="650" fg:w="1"/><text x="52.5428%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="52.1319%" y="501" width="0.3218%" height="15" fill="rgb(214,185,35)" fg:x="648" fg:w="4"/><text x="52.3819%" y="511.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="52.3733%" y="485" width="0.0805%" height="15" fill="rgb(236,150,34)" fg:x="651" fg:w="1"/><text x="52.6233%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.4537%" y="501" width="0.0805%" height="15" fill="rgb(243,228,27)" fg:x="652" fg:w="1"/><text x="52.7037%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.4537%" y="485" width="0.0805%" height="15" fill="rgb(245,77,44)" fg:x="652" fg:w="1"/><text x="52.7037%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="51.9710%" y="565" width="0.6436%" height="15" fill="rgb(235,214,42)" fg:x="646" fg:w="8"/><text x="52.2210%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="52.0515%" y="549" width="0.5632%" height="15" fill="rgb(221,74,3)" fg:x="647" fg:w="7"/><text x="52.3015%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="52.1319%" y="533" width="0.4827%" height="15" fill="rgb(206,121,29)" fg:x="648" fg:w="6"/><text x="52.3819%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="52.1319%" y="517" width="0.4827%" height="15" fill="rgb(249,131,53)" fg:x="648" fg:w="6"/><text x="52.3819%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.5342%" y="501" width="0.0805%" height="15" fill="rgb(236,170,29)" fg:x="653" fg:w="1"/><text x="52.7842%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.5342%" y="485" width="0.0805%" height="15" fill="rgb(247,96,15)" fg:x="653" fg:w="1"/><text x="52.7842%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.6146%" y="565" width="0.0805%" height="15" fill="rgb(211,210,7)" fg:x="654" fg:w="1"/><text x="52.8646%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.6146%" y="549" width="0.0805%" height="15" fill="rgb(240,88,50)" fg:x="654" fg:w="1"/><text x="52.8646%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="51.5688%" y="597" width="1.2068%" height="15" fill="rgb(209,229,26)" fg:x="641" fg:w="15"/><text x="51.8188%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="51.9710%" y="581" width="0.8045%" height="15" fill="rgb(210,68,23)" fg:x="646" fg:w="10"/><text x="52.2210%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6951%" y="565" width="0.0805%" height="15" fill="rgb(229,180,13)" fg:x="655" fg:w="1"/><text x="52.9451%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6951%" y="549" width="0.0805%" height="15" fill="rgb(236,53,44)" fg:x="655" fg:w="1"/><text x="52.9451%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.7755%" y="597" width="0.1609%" height="15" fill="rgb(244,214,29)" fg:x="656" fg:w="2"/><text x="53.0255%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.8560%" y="581" width="0.0805%" height="15" fill="rgb(220,75,29)" fg:x="657" fg:w="1"/><text x="53.1060%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9364%" y="565" width="0.0805%" height="15" fill="rgb(214,183,37)" fg:x="658" fg:w="1"/><text x="53.1864%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.77%)</title><rect x="51.3274%" y="629" width="1.7699%" height="15" fill="rgb(239,117,29)" fg:x="638" fg:w="22"/><text x="51.5774%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21 samples, 1.69%)</title><rect x="51.4079%" y="613" width="1.6895%" height="15" fill="rgb(237,171,35)" fg:x="639" fg:w="21"/><text x="51.6579%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.9364%" y="597" width="0.1609%" height="15" fill="rgb(229,178,53)" fg:x="658" fg:w="2"/><text x="53.1864%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="52.9364%" y="581" width="0.1609%" height="15" fill="rgb(210,102,19)" fg:x="658" fg:w="2"/><text x="53.1864%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.0169%" y="565" width="0.0805%" height="15" fill="rgb(235,127,22)" fg:x="659" fg:w="1"/><text x="53.2669%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="53.0973%" y="629" width="0.2414%" height="15" fill="rgb(244,31,31)" fg:x="660" fg:w="3"/><text x="53.3473%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="53.1778%" y="613" width="0.1609%" height="15" fill="rgb(231,43,21)" fg:x="661" fg:w="2"/><text x="53.4278%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.49%)</title><rect x="51.1665%" y="661" width="2.4940%" height="15" fill="rgb(217,131,35)" fg:x="636" fg:w="31"/><text x="51.4165%" y="671.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.49%)</title><rect x="51.1665%" y="645" width="2.4940%" height="15" fill="rgb(221,149,4)" fg:x="636" fg:w="31"/><text x="51.4165%" y="655.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="53.3387%" y="629" width="0.3218%" height="15" fill="rgb(232,170,28)" fg:x="663" fg:w="4"/><text x="53.5887%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="53.3387%" y="613" width="0.3218%" height="15" fill="rgb(238,56,10)" fg:x="663" fg:w="4"/><text x="53.5887%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.4996%" y="597" width="0.1609%" height="15" fill="rgb(235,196,14)" fg:x="665" fg:w="2"/><text x="53.7496%" y="607.50"></text></g><g><title>engine::session::state::State::close (197 samples, 15.85%)</title><rect x="38.1335%" y="805" width="15.8488%" height="15" fill="rgb(216,45,48)" fg:x="474" fg:w="197"/><text x="38.3835%" y="815.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (197 samples, 15.85%)</title><rect x="38.1335%" y="789" width="15.8488%" height="15" fill="rgb(238,213,17)" fg:x="474" fg:w="197"/><text x="38.3835%" y="799.50">engine::session::state::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (193 samples, 15.53%)</title><rect x="38.4553%" y="773" width="15.5270%" height="15" fill="rgb(212,13,2)" fg:x="478" fg:w="193"/><text x="38.7053%" y="783.50">engine::session::interna..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (193 samples, 15.53%)</title><rect x="38.4553%" y="757" width="15.5270%" height="15" fill="rgb(240,114,20)" fg:x="478" fg:w="193"/><text x="38.7053%" y="767.50">engine::session::state::..</text></g><g><title>kernel::model::any_entity_changes (142 samples, 11.42%)</title><rect x="42.5583%" y="741" width="11.4240%" height="15" fill="rgb(228,41,40)" fg:x="529" fg:w="142"/><text x="42.8083%" y="751.50">kernel::model::an..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (36 samples, 2.90%)</title><rect x="51.0861%" y="725" width="2.8962%" height="15" fill="rgb(244,132,35)" fg:x="635" fg:w="36"/><text x="51.3361%" y="735.50">se..</text></g><g><title>serde_json::de::from_trait (36 samples, 2.90%)</title><rect x="51.0861%" y="709" width="2.8962%" height="15" fill="rgb(253,189,4)" fg:x="635" fg:w="36"/><text x="51.3361%" y="719.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.90%)</title><rect x="51.0861%" y="693" width="2.8962%" height="15" fill="rgb(224,37,19)" fg:x="635" fg:w="36"/><text x="51.3361%" y="703.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (36 samples, 2.90%)</title><rect x="51.0861%" y="677" width="2.8962%" height="15" fill="rgb(235,223,18)" fg:x="635" fg:w="36"/><text x="51.3361%" y="687.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="53.6605%" y="661" width="0.3218%" height="15" fill="rgb(235,163,25)" fg:x="667" fg:w="4"/><text x="53.9105%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.8214%" y="645" width="0.1609%" height="15" fill="rgb(217,145,28)" fg:x="669" fg:w="2"/><text x="54.0714%" y="655.50"></text></g><g><title>engine::session::Session::close (201 samples, 16.17%)</title><rect x="37.8922%" y="821" width="16.1706%" height="15" fill="rgb(223,223,32)" fg:x="471" fg:w="201"/><text x="38.1422%" y="831.50">engine::session::Session:..</text></g><g><title>engine::session::state::State::size (1 samples, 0.08%)</title><rect x="53.9823%" y="805" width="0.0805%" height="15" fill="rgb(227,189,39)" fg:x="671" fg:w="1"/><text x="54.2323%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="54.0628%" y="741" width="0.0805%" height="15" fill="rgb(248,10,22)" fg:x="672" fg:w="1"/><text x="54.3128%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.1432%" y="709" width="0.0805%" height="15" fill="rgb(248,46,39)" fg:x="673" fg:w="1"/><text x="54.3932%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.2237%" y="693" width="0.0805%" height="15" fill="rgb(248,113,48)" fg:x="674" fg:w="1"/><text x="54.4737%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2237%" y="677" width="0.0805%" height="15" fill="rgb(245,16,25)" fg:x="674" fg:w="1"/><text x="54.4737%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="54.3041%" y="629" width="0.0805%" height="15" fill="rgb(249,152,16)" fg:x="675" fg:w="1"/><text x="54.5541%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3041%" y="613" width="0.0805%" height="15" fill="rgb(250,16,1)" fg:x="675" fg:w="1"/><text x="54.5541%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3041%" y="597" width="0.0805%" height="15" fill="rgb(249,138,3)" fg:x="675" fg:w="1"/><text x="54.5541%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.3041%" y="581" width="0.0805%" height="15" fill="rgb(227,71,41)" fg:x="675" fg:w="1"/><text x="54.5541%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.3041%" y="565" width="0.0805%" height="15" fill="rgb(209,184,23)" fg:x="675" fg:w="1"/><text x="54.5541%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.3041%" y="549" width="0.0805%" height="15" fill="rgb(223,215,31)" fg:x="675" fg:w="1"/><text x="54.5541%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3041%" y="533" width="0.0805%" height="15" fill="rgb(210,146,28)" fg:x="675" fg:w="1"/><text x="54.5541%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3041%" y="517" width="0.0805%" height="15" fill="rgb(209,183,41)" fg:x="675" fg:w="1"/><text x="54.5541%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.3041%" y="501" width="0.0805%" height="15" fill="rgb(209,224,45)" fg:x="675" fg:w="1"/><text x="54.5541%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.3041%" y="485" width="0.0805%" height="15" fill="rgb(224,209,51)" fg:x="675" fg:w="1"/><text x="54.5541%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.3041%" y="469" width="0.0805%" height="15" fill="rgb(223,17,39)" fg:x="675" fg:w="1"/><text x="54.5541%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.3041%" y="453" width="0.0805%" height="15" fill="rgb(234,204,37)" fg:x="675" fg:w="1"/><text x="54.5541%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3041%" y="437" width="0.0805%" height="15" fill="rgb(236,120,5)" fg:x="675" fg:w="1"/><text x="54.5541%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3846%" y="437" width="0.0805%" height="15" fill="rgb(248,97,27)" fg:x="676" fg:w="1"/><text x="54.6346%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="54.3846%" y="581" width="0.1609%" height="15" fill="rgb(240,66,17)" fg:x="676" fg:w="2"/><text x="54.6346%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="54.3846%" y="565" width="0.1609%" height="15" fill="rgb(210,79,3)" fg:x="676" fg:w="2"/><text x="54.6346%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.3846%" y="549" width="0.1609%" height="15" fill="rgb(214,176,27)" fg:x="676" fg:w="2"/><text x="54.6346%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.3846%" y="533" width="0.1609%" height="15" fill="rgb(235,185,3)" fg:x="676" fg:w="2"/><text x="54.6346%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.3846%" y="517" width="0.1609%" height="15" fill="rgb(227,24,12)" fg:x="676" fg:w="2"/><text x="54.6346%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.3846%" y="501" width="0.1609%" height="15" fill="rgb(252,169,48)" fg:x="676" fg:w="2"/><text x="54.6346%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.3846%" y="485" width="0.1609%" height="15" fill="rgb(212,65,1)" fg:x="676" fg:w="2"/><text x="54.6346%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.3846%" y="469" width="0.1609%" height="15" fill="rgb(242,39,24)" fg:x="676" fg:w="2"/><text x="54.6346%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.3846%" y="453" width="0.1609%" height="15" fill="rgb(249,32,23)" fg:x="676" fg:w="2"/><text x="54.6346%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.4650%" y="437" width="0.0805%" height="15" fill="rgb(251,195,23)" fg:x="677" fg:w="1"/><text x="54.7150%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4650%" y="421" width="0.0805%" height="15" fill="rgb(236,174,8)" fg:x="677" fg:w="1"/><text x="54.7150%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.4650%" y="405" width="0.0805%" height="15" fill="rgb(220,197,8)" fg:x="677" fg:w="1"/><text x="54.7150%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4650%" y="389" width="0.0805%" height="15" fill="rgb(240,108,37)" fg:x="677" fg:w="1"/><text x="54.7150%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="54.4650%" y="373" width="0.0805%" height="15" fill="rgb(232,176,24)" fg:x="677" fg:w="1"/><text x="54.7150%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.4650%" y="357" width="0.0805%" height="15" fill="rgb(243,35,29)" fg:x="677" fg:w="1"/><text x="54.7150%" y="367.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="54.4650%" y="341" width="0.0805%" height="15" fill="rgb(210,37,18)" fg:x="677" fg:w="1"/><text x="54.7150%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="54.3846%" y="613" width="0.2414%" height="15" fill="rgb(224,184,40)" fg:x="676" fg:w="3"/><text x="54.6346%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="54.3846%" y="597" width="0.2414%" height="15" fill="rgb(236,39,29)" fg:x="676" fg:w="3"/><text x="54.6346%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="54.5455%" y="581" width="0.0805%" height="15" fill="rgb(232,48,39)" fg:x="678" fg:w="1"/><text x="54.7955%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="54.5455%" y="565" width="0.0805%" height="15" fill="rgb(236,34,42)" fg:x="678" fg:w="1"/><text x="54.7955%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.5455%" y="549" width="0.0805%" height="15" fill="rgb(243,106,37)" fg:x="678" fg:w="1"/><text x="54.7955%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.6259%" y="533" width="0.0805%" height="15" fill="rgb(218,96,6)" fg:x="679" fg:w="1"/><text x="54.8759%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.6259%" y="549" width="0.1609%" height="15" fill="rgb(235,130,12)" fg:x="679" fg:w="2"/><text x="54.8759%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7064%" y="533" width="0.0805%" height="15" fill="rgb(231,95,0)" fg:x="680" fg:w="1"/><text x="54.9564%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.8673%" y="517" width="0.0805%" height="15" fill="rgb(228,12,23)" fg:x="682" fg:w="1"/><text x="55.1173%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.8673%" y="501" width="0.0805%" height="15" fill="rgb(216,12,1)" fg:x="682" fg:w="1"/><text x="55.1173%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="55.0282%" y="501" width="0.0805%" height="15" fill="rgb(219,59,3)" fg:x="684" fg:w="1"/><text x="55.2782%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.1086%" y="469" width="0.0805%" height="15" fill="rgb(215,208,46)" fg:x="685" fg:w="1"/><text x="55.3586%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.1086%" y="453" width="0.0805%" height="15" fill="rgb(254,224,29)" fg:x="685" fg:w="1"/><text x="55.3586%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.1086%" y="437" width="0.0805%" height="15" fill="rgb(232,14,29)" fg:x="685" fg:w="1"/><text x="55.3586%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.1086%" y="421" width="0.0805%" height="15" fill="rgb(208,45,52)" fg:x="685" fg:w="1"/><text x="55.3586%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.1086%" y="405" width="0.0805%" height="15" fill="rgb(234,191,28)" fg:x="685" fg:w="1"/><text x="55.3586%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.1086%" y="389" width="0.0805%" height="15" fill="rgb(244,67,43)" fg:x="685" fg:w="1"/><text x="55.3586%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1086%" y="373" width="0.0805%" height="15" fill="rgb(236,189,24)" fg:x="685" fg:w="1"/><text x="55.3586%" y="383.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="54.6259%" y="597" width="0.7241%" height="15" fill="rgb(239,214,33)" fg:x="679" fg:w="9"/><text x="54.8759%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="54.6259%" y="581" width="0.7241%" height="15" fill="rgb(226,176,41)" fg:x="679" fg:w="9"/><text x="54.8759%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="54.6259%" y="565" width="0.7241%" height="15" fill="rgb(248,47,8)" fg:x="679" fg:w="9"/><text x="54.8759%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="54.7868%" y="549" width="0.5632%" height="15" fill="rgb(218,81,44)" fg:x="681" fg:w="7"/><text x="55.0368%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="54.7868%" y="533" width="0.5632%" height="15" fill="rgb(213,98,6)" fg:x="681" fg:w="7"/><text x="55.0368%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="54.9477%" y="517" width="0.4023%" height="15" fill="rgb(222,85,22)" fg:x="683" fg:w="5"/><text x="55.1977%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.1086%" y="501" width="0.2414%" height="15" fill="rgb(239,46,39)" fg:x="685" fg:w="3"/><text x="55.3586%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.1086%" y="485" width="0.2414%" height="15" fill="rgb(237,12,29)" fg:x="685" fg:w="3"/><text x="55.3586%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.1891%" y="469" width="0.1609%" height="15" fill="rgb(214,77,8)" fg:x="686" fg:w="2"/><text x="55.4391%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.1891%" y="453" width="0.1609%" height="15" fill="rgb(217,168,37)" fg:x="686" fg:w="2"/><text x="55.4391%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.2695%" y="437" width="0.0805%" height="15" fill="rgb(221,217,23)" fg:x="687" fg:w="1"/><text x="55.5195%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2695%" y="421" width="0.0805%" height="15" fill="rgb(243,229,36)" fg:x="687" fg:w="1"/><text x="55.5195%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="55.3500%" y="565" width="0.0805%" height="15" fill="rgb(251,163,40)" fg:x="688" fg:w="1"/><text x="55.6000%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="55.5109%" y="421" width="0.0805%" height="15" fill="rgb(237,222,12)" fg:x="690" fg:w="1"/><text x="55.7609%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.37%)</title><rect x="54.3041%" y="661" width="1.3677%" height="15" fill="rgb(248,132,6)" fg:x="675" fg:w="17"/><text x="54.5541%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.37%)</title><rect x="54.3041%" y="645" width="1.3677%" height="15" fill="rgb(227,167,50)" fg:x="675" fg:w="17"/><text x="54.5541%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.29%)</title><rect x="54.3846%" y="629" width="1.2872%" height="15" fill="rgb(242,84,37)" fg:x="676" fg:w="16"/><text x="54.6346%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.05%)</title><rect x="54.6259%" y="613" width="1.0459%" height="15" fill="rgb(212,4,50)" fg:x="679" fg:w="13"/><text x="54.8759%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.3500%" y="597" width="0.3218%" height="15" fill="rgb(230,228,32)" fg:x="688" fg:w="4"/><text x="55.6000%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.3500%" y="581" width="0.3218%" height="15" fill="rgb(248,217,23)" fg:x="688" fg:w="4"/><text x="55.6000%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="55.4304%" y="565" width="0.2414%" height="15" fill="rgb(238,197,32)" fg:x="689" fg:w="3"/><text x="55.6804%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.4304%" y="549" width="0.2414%" height="15" fill="rgb(236,106,1)" fg:x="689" fg:w="3"/><text x="55.6804%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="55.4304%" y="533" width="0.2414%" height="15" fill="rgb(219,228,13)" fg:x="689" fg:w="3"/><text x="55.6804%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="55.4304%" y="517" width="0.2414%" height="15" fill="rgb(238,30,35)" fg:x="689" fg:w="3"/><text x="55.6804%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.4304%" y="501" width="0.2414%" height="15" fill="rgb(236,70,23)" fg:x="689" fg:w="3"/><text x="55.6804%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="55.4304%" y="485" width="0.2414%" height="15" fill="rgb(249,104,48)" fg:x="689" fg:w="3"/><text x="55.6804%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.5109%" y="469" width="0.1609%" height="15" fill="rgb(254,117,50)" fg:x="690" fg:w="2"/><text x="55.7609%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.5109%" y="453" width="0.1609%" height="15" fill="rgb(223,152,4)" fg:x="690" fg:w="2"/><text x="55.7609%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.5109%" y="437" width="0.1609%" height="15" fill="rgb(245,6,2)" fg:x="690" fg:w="2"/><text x="55.7609%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.5913%" y="421" width="0.0805%" height="15" fill="rgb(249,150,24)" fg:x="691" fg:w="1"/><text x="55.8413%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.5913%" y="405" width="0.0805%" height="15" fill="rgb(228,185,42)" fg:x="691" fg:w="1"/><text x="55.8413%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5913%" y="389" width="0.0805%" height="15" fill="rgb(226,39,33)" fg:x="691" fg:w="1"/><text x="55.8413%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.6718%" y="661" width="0.0805%" height="15" fill="rgb(221,166,19)" fg:x="692" fg:w="1"/><text x="55.9218%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.6718%" y="645" width="0.0805%" height="15" fill="rgb(209,109,2)" fg:x="692" fg:w="1"/><text x="55.9218%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.6718%" y="629" width="0.0805%" height="15" fill="rgb(252,216,26)" fg:x="692" fg:w="1"/><text x="55.9218%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="55.7522%" y="661" width="0.1609%" height="15" fill="rgb(227,173,36)" fg:x="693" fg:w="2"/><text x="56.0022%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.7522%" y="645" width="0.1609%" height="15" fill="rgb(209,90,7)" fg:x="693" fg:w="2"/><text x="56.0022%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.9131%" y="629" width="0.0805%" height="15" fill="rgb(250,194,11)" fg:x="695" fg:w="1"/><text x="56.1631%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (24 samples, 1.93%)</title><rect x="54.2237%" y="709" width="1.9308%" height="15" fill="rgb(220,72,50)" fg:x="674" fg:w="24"/><text x="54.4737%" y="719.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.85%)</title><rect x="54.3041%" y="693" width="1.8504%" height="15" fill="rgb(222,106,48)" fg:x="675" fg:w="23"/><text x="54.5541%" y="703.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.85%)</title><rect x="54.3041%" y="677" width="1.8504%" height="15" fill="rgb(216,220,45)" fg:x="675" fg:w="23"/><text x="54.5541%" y="687.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.9131%" y="661" width="0.2414%" height="15" fill="rgb(234,112,18)" fg:x="695" fg:w="3"/><text x="56.1631%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.9131%" y="645" width="0.2414%" height="15" fill="rgb(206,179,9)" fg:x="695" fg:w="3"/><text x="56.1631%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.9936%" y="629" width="0.1609%" height="15" fill="rgb(215,115,40)" fg:x="696" fg:w="2"/><text x="56.2436%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.9936%" y="613" width="0.1609%" height="15" fill="rgb(222,69,34)" fg:x="696" fg:w="2"/><text x="56.2436%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.1545%" y="469" width="0.0805%" height="15" fill="rgb(209,161,10)" fg:x="698" fg:w="1"/><text x="56.4045%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.1545%" y="453" width="0.0805%" height="15" fill="rgb(217,6,38)" fg:x="698" fg:w="1"/><text x="56.4045%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.1545%" y="437" width="0.0805%" height="15" fill="rgb(229,229,48)" fg:x="698" fg:w="1"/><text x="56.4045%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.1545%" y="421" width="0.0805%" height="15" fill="rgb(225,21,28)" fg:x="698" fg:w="1"/><text x="56.4045%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.1545%" y="405" width="0.0805%" height="15" fill="rgb(206,33,13)" fg:x="698" fg:w="1"/><text x="56.4045%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.1545%" y="389" width="0.0805%" height="15" fill="rgb(242,178,17)" fg:x="698" fg:w="1"/><text x="56.4045%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.1545%" y="373" width="0.0805%" height="15" fill="rgb(220,162,5)" fg:x="698" fg:w="1"/><text x="56.4045%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.1545%" y="357" width="0.0805%" height="15" fill="rgb(210,33,43)" fg:x="698" fg:w="1"/><text x="56.4045%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="56.1545%" y="341" width="0.0805%" height="15" fill="rgb(216,116,54)" fg:x="698" fg:w="1"/><text x="56.4045%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="56.1545%" y="325" width="0.0805%" height="15" fill="rgb(249,92,24)" fg:x="698" fg:w="1"/><text x="56.4045%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.1545%" y="309" width="0.0805%" height="15" fill="rgb(231,189,14)" fg:x="698" fg:w="1"/><text x="56.4045%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1545%" y="293" width="0.0805%" height="15" fill="rgb(230,8,41)" fg:x="698" fg:w="1"/><text x="56.4045%" y="303.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="56.1545%" y="693" width="0.1609%" height="15" fill="rgb(249,7,27)" fg:x="698" fg:w="2"/><text x="56.4045%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="56.1545%" y="677" width="0.1609%" height="15" fill="rgb(232,86,5)" fg:x="698" fg:w="2"/><text x="56.4045%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="56.1545%" y="661" width="0.1609%" height="15" fill="rgb(224,175,18)" fg:x="698" fg:w="2"/><text x="56.4045%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="56.1545%" y="645" width="0.1609%" height="15" fill="rgb(220,129,12)" fg:x="698" fg:w="2"/><text x="56.4045%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="629" width="0.1609%" height="15" fill="rgb(210,19,36)" fg:x="698" fg:w="2"/><text x="56.4045%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.1545%" y="613" width="0.1609%" height="15" fill="rgb(219,96,14)" fg:x="698" fg:w="2"/><text x="56.4045%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="597" width="0.1609%" height="15" fill="rgb(249,106,1)" fg:x="698" fg:w="2"/><text x="56.4045%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="581" width="0.1609%" height="15" fill="rgb(249,155,20)" fg:x="698" fg:w="2"/><text x="56.4045%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="565" width="0.1609%" height="15" fill="rgb(244,168,9)" fg:x="698" fg:w="2"/><text x="56.4045%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.1545%" y="549" width="0.1609%" height="15" fill="rgb(216,23,50)" fg:x="698" fg:w="2"/><text x="56.4045%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="533" width="0.1609%" height="15" fill="rgb(224,219,20)" fg:x="698" fg:w="2"/><text x="56.4045%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="517" width="0.1609%" height="15" fill="rgb(222,156,15)" fg:x="698" fg:w="2"/><text x="56.4045%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="56.1545%" y="501" width="0.1609%" height="15" fill="rgb(231,97,17)" fg:x="698" fg:w="2"/><text x="56.4045%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="56.1545%" y="485" width="0.1609%" height="15" fill="rgb(218,70,48)" fg:x="698" fg:w="2"/><text x="56.4045%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.2349%" y="469" width="0.0805%" height="15" fill="rgb(212,196,52)" fg:x="699" fg:w="1"/><text x="56.4849%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.2349%" y="453" width="0.0805%" height="15" fill="rgb(243,203,18)" fg:x="699" fg:w="1"/><text x="56.4849%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.2349%" y="437" width="0.0805%" height="15" fill="rgb(252,125,41)" fg:x="699" fg:w="1"/><text x="56.4849%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.2349%" y="421" width="0.0805%" height="15" fill="rgb(223,180,33)" fg:x="699" fg:w="1"/><text x="56.4849%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.2349%" y="405" width="0.0805%" height="15" fill="rgb(254,159,46)" fg:x="699" fg:w="1"/><text x="56.4849%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.2349%" y="389" width="0.0805%" height="15" fill="rgb(254,38,10)" fg:x="699" fg:w="1"/><text x="56.4849%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.2349%" y="373" width="0.0805%" height="15" fill="rgb(208,217,32)" fg:x="699" fg:w="1"/><text x="56.4849%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.2349%" y="357" width="0.0805%" height="15" fill="rgb(221,120,13)" fg:x="699" fg:w="1"/><text x="56.4849%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.2349%" y="341" width="0.0805%" height="15" fill="rgb(246,54,52)" fg:x="699" fg:w="1"/><text x="56.4849%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.2349%" y="325" width="0.0805%" height="15" fill="rgb(242,34,25)" fg:x="699" fg:w="1"/><text x="56.4849%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.2349%" y="309" width="0.0805%" height="15" fill="rgb(247,209,9)" fg:x="699" fg:w="1"/><text x="56.4849%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.2349%" y="293" width="0.0805%" height="15" fill="rgb(228,71,26)" fg:x="699" fg:w="1"/><text x="56.4849%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="56.2349%" y="277" width="0.0805%" height="15" fill="rgb(222,145,49)" fg:x="699" fg:w="1"/><text x="56.4849%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="56.2349%" y="261" width="0.0805%" height="15" fill="rgb(218,121,17)" fg:x="699" fg:w="1"/><text x="56.4849%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="56.2349%" y="245" width="0.0805%" height="15" fill="rgb(244,50,7)" fg:x="699" fg:w="1"/><text x="56.4849%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="56.2349%" y="229" width="0.0805%" height="15" fill="rgb(246,229,37)" fg:x="699" fg:w="1"/><text x="56.4849%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="56.2349%" y="213" width="0.0805%" height="15" fill="rgb(225,18,5)" fg:x="699" fg:w="1"/><text x="56.4849%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="56.2349%" y="197" width="0.0805%" height="15" fill="rgb(213,204,8)" fg:x="699" fg:w="1"/><text x="56.4849%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="56.2349%" y="181" width="0.0805%" height="15" fill="rgb(238,103,6)" fg:x="699" fg:w="1"/><text x="56.4849%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="56.2349%" y="165" width="0.0805%" height="15" fill="rgb(222,25,35)" fg:x="699" fg:w="1"/><text x="56.4849%" y="175.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="56.1545%" y="709" width="0.2414%" height="15" fill="rgb(213,203,35)" fg:x="698" fg:w="3"/><text x="56.4045%" y="719.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="56.3154%" y="693" width="0.0805%" height="15" fill="rgb(221,79,53)" fg:x="700" fg:w="1"/><text x="56.5654%" y="703.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (29 samples, 2.33%)</title><rect x="54.1432%" y="725" width="2.3331%" height="15" fill="rgb(243,200,35)" fg:x="673" fg:w="29"/><text x="54.3932%" y="735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.3958%" y="709" width="0.0805%" height="15" fill="rgb(248,60,25)" fg:x="701" fg:w="1"/><text x="56.6458%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="56.3958%" y="693" width="0.0805%" height="15" fill="rgb(227,53,46)" fg:x="701" fg:w="1"/><text x="56.6458%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.3958%" y="677" width="0.0805%" height="15" fill="rgb(216,120,32)" fg:x="701" fg:w="1"/><text x="56.6458%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6372%" y="581" width="0.0805%" height="15" fill="rgb(220,134,1)" fg:x="704" fg:w="1"/><text x="56.8872%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.7176%" y="581" width="0.0805%" height="15" fill="rgb(237,168,5)" fg:x="705" fg:w="1"/><text x="56.9676%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.7176%" y="565" width="0.0805%" height="15" fill="rgb(231,100,33)" fg:x="705" fg:w="1"/><text x="56.9676%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7176%" y="549" width="0.0805%" height="15" fill="rgb(236,177,47)" fg:x="705" fg:w="1"/><text x="56.9676%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="56.7981%" y="581" width="0.0805%" height="15" fill="rgb(235,7,49)" fg:x="706" fg:w="1"/><text x="57.0481%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7981%" y="565" width="0.0805%" height="15" fill="rgb(232,119,22)" fg:x="706" fg:w="1"/><text x="57.0481%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7981%" y="549" width="0.0805%" height="15" fill="rgb(254,73,53)" fg:x="706" fg:w="1"/><text x="57.0481%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7981%" y="533" width="0.0805%" height="15" fill="rgb(251,35,20)" fg:x="706" fg:w="1"/><text x="57.0481%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7981%" y="517" width="0.0805%" height="15" fill="rgb(241,119,20)" fg:x="706" fg:w="1"/><text x="57.0481%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7981%" y="501" width="0.0805%" height="15" fill="rgb(207,102,14)" fg:x="706" fg:w="1"/><text x="57.0481%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7981%" y="485" width="0.0805%" height="15" fill="rgb(248,201,50)" fg:x="706" fg:w="1"/><text x="57.0481%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7981%" y="469" width="0.0805%" height="15" fill="rgb(222,185,44)" fg:x="706" fg:w="1"/><text x="57.0481%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7981%" y="453" width="0.0805%" height="15" fill="rgb(218,107,18)" fg:x="706" fg:w="1"/><text x="57.0481%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7981%" y="437" width="0.0805%" height="15" fill="rgb(237,177,39)" fg:x="706" fg:w="1"/><text x="57.0481%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7981%" y="421" width="0.0805%" height="15" fill="rgb(246,69,6)" fg:x="706" fg:w="1"/><text x="57.0481%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7981%" y="405" width="0.0805%" height="15" fill="rgb(234,208,37)" fg:x="706" fg:w="1"/><text x="57.0481%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7981%" y="389" width="0.0805%" height="15" fill="rgb(225,4,6)" fg:x="706" fg:w="1"/><text x="57.0481%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7981%" y="373" width="0.0805%" height="15" fill="rgb(233,45,0)" fg:x="706" fg:w="1"/><text x="57.0481%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8785%" y="501" width="0.0805%" height="15" fill="rgb(226,136,5)" fg:x="707" fg:w="1"/><text x="57.1285%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8785%" y="485" width="0.0805%" height="15" fill="rgb(211,91,47)" fg:x="707" fg:w="1"/><text x="57.1285%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8785%" y="469" width="0.0805%" height="15" fill="rgb(242,88,51)" fg:x="707" fg:w="1"/><text x="57.1285%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8785%" y="453" width="0.0805%" height="15" fill="rgb(230,91,28)" fg:x="707" fg:w="1"/><text x="57.1285%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1199%" y="405" width="0.0805%" height="15" fill="rgb(254,186,29)" fg:x="710" fg:w="1"/><text x="57.3699%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="56.8785%" y="549" width="0.5632%" height="15" fill="rgb(238,6,4)" fg:x="707" fg:w="7"/><text x="57.1285%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="56.8785%" y="533" width="0.5632%" height="15" fill="rgb(221,151,16)" fg:x="707" fg:w="7"/><text x="57.1285%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="56.8785%" y="517" width="0.5632%" height="15" fill="rgb(251,143,52)" fg:x="707" fg:w="7"/><text x="57.1285%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="56.9590%" y="501" width="0.4827%" height="15" fill="rgb(206,90,15)" fg:x="708" fg:w="6"/><text x="57.2090%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="56.9590%" y="485" width="0.4827%" height="15" fill="rgb(218,35,8)" fg:x="708" fg:w="6"/><text x="57.2090%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="56.9590%" y="469" width="0.4827%" height="15" fill="rgb(239,215,6)" fg:x="708" fg:w="6"/><text x="57.2090%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="56.9590%" y="453" width="0.4827%" height="15" fill="rgb(245,116,39)" fg:x="708" fg:w="6"/><text x="57.2090%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="57.0394%" y="437" width="0.4023%" height="15" fill="rgb(242,65,28)" fg:x="709" fg:w="5"/><text x="57.2894%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="57.0394%" y="421" width="0.4023%" height="15" fill="rgb(252,132,53)" fg:x="709" fg:w="5"/><text x="57.2894%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.2003%" y="405" width="0.2414%" height="15" fill="rgb(224,159,50)" fg:x="711" fg:w="3"/><text x="57.4503%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.2003%" y="389" width="0.2414%" height="15" fill="rgb(224,93,4)" fg:x="711" fg:w="3"/><text x="57.4503%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2808%" y="373" width="0.1609%" height="15" fill="rgb(208,81,34)" fg:x="712" fg:w="2"/><text x="57.5308%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2808%" y="357" width="0.1609%" height="15" fill="rgb(233,92,54)" fg:x="712" fg:w="2"/><text x="57.5308%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.3612%" y="341" width="0.0805%" height="15" fill="rgb(237,21,14)" fg:x="713" fg:w="1"/><text x="57.6112%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.3612%" y="325" width="0.0805%" height="15" fill="rgb(249,128,51)" fg:x="713" fg:w="1"/><text x="57.6112%" y="335.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="57.3612%" y="309" width="0.0805%" height="15" fill="rgb(223,129,24)" fg:x="713" fg:w="1"/><text x="57.6112%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4417%" y="533" width="0.0805%" height="15" fill="rgb(231,168,25)" fg:x="714" fg:w="1"/><text x="57.6917%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="57.5221%" y="533" width="0.0805%" height="15" fill="rgb(224,39,20)" fg:x="715" fg:w="1"/><text x="57.7721%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.5221%" y="517" width="0.0805%" height="15" fill="rgb(225,152,53)" fg:x="715" fg:w="1"/><text x="57.7721%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.6026%" y="453" width="0.3218%" height="15" fill="rgb(252,17,24)" fg:x="716" fg:w="4"/><text x="57.8526%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.7635%" y="437" width="0.1609%" height="15" fill="rgb(250,114,30)" fg:x="718" fg:w="2"/><text x="58.0135%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.7635%" y="421" width="0.1609%" height="15" fill="rgb(229,5,4)" fg:x="718" fg:w="2"/><text x="58.0135%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.7635%" y="405" width="0.1609%" height="15" fill="rgb(225,176,49)" fg:x="718" fg:w="2"/><text x="58.0135%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.7635%" y="389" width="0.1609%" height="15" fill="rgb(224,221,49)" fg:x="718" fg:w="2"/><text x="58.0135%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.7635%" y="373" width="0.1609%" height="15" fill="rgb(253,169,27)" fg:x="718" fg:w="2"/><text x="58.0135%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.7635%" y="357" width="0.1609%" height="15" fill="rgb(211,206,16)" fg:x="718" fg:w="2"/><text x="58.0135%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.7635%" y="341" width="0.1609%" height="15" fill="rgb(244,87,35)" fg:x="718" fg:w="2"/><text x="58.0135%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.7635%" y="325" width="0.1609%" height="15" fill="rgb(246,28,10)" fg:x="718" fg:w="2"/><text x="58.0135%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.7635%" y="309" width="0.1609%" height="15" fill="rgb(229,12,44)" fg:x="718" fg:w="2"/><text x="58.0135%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.7635%" y="293" width="0.1609%" height="15" fill="rgb(210,145,37)" fg:x="718" fg:w="2"/><text x="58.0135%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.7635%" y="277" width="0.1609%" height="15" fill="rgb(227,112,52)" fg:x="718" fg:w="2"/><text x="58.0135%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.7635%" y="261" width="0.1609%" height="15" fill="rgb(238,155,34)" fg:x="718" fg:w="2"/><text x="58.0135%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.6026%" y="501" width="0.4023%" height="15" fill="rgb(239,226,36)" fg:x="716" fg:w="5"/><text x="57.8526%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.6026%" y="485" width="0.4023%" height="15" fill="rgb(230,16,23)" fg:x="716" fg:w="5"/><text x="57.8526%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.6026%" y="469" width="0.4023%" height="15" fill="rgb(236,171,36)" fg:x="716" fg:w="5"/><text x="57.8526%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9244%" y="453" width="0.0805%" height="15" fill="rgb(221,22,14)" fg:x="720" fg:w="1"/><text x="58.1744%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9244%" y="437" width="0.0805%" height="15" fill="rgb(242,43,11)" fg:x="720" fg:w="1"/><text x="58.1744%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9244%" y="421" width="0.0805%" height="15" fill="rgb(232,69,23)" fg:x="720" fg:w="1"/><text x="58.1744%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9244%" y="405" width="0.0805%" height="15" fill="rgb(216,180,54)" fg:x="720" fg:w="1"/><text x="58.1744%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9244%" y="389" width="0.0805%" height="15" fill="rgb(216,5,24)" fg:x="720" fg:w="1"/><text x="58.1744%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9244%" y="373" width="0.0805%" height="15" fill="rgb(225,89,9)" fg:x="720" fg:w="1"/><text x="58.1744%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9244%" y="357" width="0.0805%" height="15" fill="rgb(243,75,33)" fg:x="720" fg:w="1"/><text x="58.1744%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.9244%" y="341" width="0.0805%" height="15" fill="rgb(247,141,45)" fg:x="720" fg:w="1"/><text x="58.1744%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.9244%" y="325" width="0.0805%" height="15" fill="rgb(232,177,36)" fg:x="720" fg:w="1"/><text x="58.1744%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.9244%" y="309" width="0.0805%" height="15" fill="rgb(219,125,36)" fg:x="720" fg:w="1"/><text x="58.1744%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.9244%" y="293" width="0.0805%" height="15" fill="rgb(227,94,9)" fg:x="720" fg:w="1"/><text x="58.1744%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9244%" y="277" width="0.0805%" height="15" fill="rgb(240,34,52)" fg:x="720" fg:w="1"/><text x="58.1744%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.0048%" y="469" width="0.0805%" height="15" fill="rgb(216,45,12)" fg:x="721" fg:w="1"/><text x="58.2548%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0048%" y="453" width="0.0805%" height="15" fill="rgb(246,21,19)" fg:x="721" fg:w="1"/><text x="58.2548%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2462%" y="437" width="0.0805%" height="15" fill="rgb(213,98,42)" fg:x="724" fg:w="1"/><text x="58.4962%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.3266%" y="405" width="0.1609%" height="15" fill="rgb(250,136,47)" fg:x="725" fg:w="2"/><text x="58.5766%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.4071%" y="389" width="0.0805%" height="15" fill="rgb(251,124,27)" fg:x="726" fg:w="1"/><text x="58.6571%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.5680%" y="373" width="0.0805%" height="15" fill="rgb(229,180,14)" fg:x="728" fg:w="1"/><text x="58.8180%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.5680%" y="357" width="0.0805%" height="15" fill="rgb(245,216,25)" fg:x="728" fg:w="1"/><text x="58.8180%" y="367.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (25 samples, 2.01%)</title><rect x="56.8785%" y="565" width="2.0113%" height="15" fill="rgb(251,43,5)" fg:x="707" fg:w="25"/><text x="57.1285%" y="575.50">&lt;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (18 samples, 1.45%)</title><rect x="57.4417%" y="549" width="1.4481%" height="15" fill="rgb(250,128,24)" fg:x="714" fg:w="18"/><text x="57.6917%" y="559.50"></text></g><g><title>kernel::model::props::load_props (16 samples, 1.29%)</title><rect x="57.6026%" y="533" width="1.2872%" height="15" fill="rgb(217,117,27)" fg:x="716" fg:w="16"/><text x="57.8526%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.29%)</title><rect x="57.6026%" y="517" width="1.2872%" height="15" fill="rgb(245,147,4)" fg:x="716" fg:w="16"/><text x="57.8526%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="58.0048%" y="501" width="0.8850%" height="15" fill="rgb(242,201,35)" fg:x="721" fg:w="11"/><text x="58.2548%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="58.0048%" y="485" width="0.8850%" height="15" fill="rgb(218,181,1)" fg:x="721" fg:w="11"/><text x="58.2548%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="58.0853%" y="469" width="0.8045%" height="15" fill="rgb(222,6,29)" fg:x="722" fg:w="10"/><text x="58.3353%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="58.1657%" y="453" width="0.7241%" height="15" fill="rgb(208,186,3)" fg:x="723" fg:w="9"/><text x="58.4157%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="58.3266%" y="437" width="0.5632%" height="15" fill="rgb(216,36,26)" fg:x="725" fg:w="7"/><text x="58.5766%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.3266%" y="421" width="0.5632%" height="15" fill="rgb(248,201,23)" fg:x="725" fg:w="7"/><text x="58.5766%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="58.4875%" y="405" width="0.4023%" height="15" fill="rgb(251,170,31)" fg:x="727" fg:w="5"/><text x="58.7375%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="58.4875%" y="389" width="0.4023%" height="15" fill="rgb(207,110,25)" fg:x="727" fg:w="5"/><text x="58.7375%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.6484%" y="373" width="0.2414%" height="15" fill="rgb(250,54,15)" fg:x="729" fg:w="3"/><text x="58.8984%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.7289%" y="357" width="0.1609%" height="15" fill="rgb(227,68,33)" fg:x="730" fg:w="2"/><text x="58.9789%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.8898%" y="565" width="0.0805%" height="15" fill="rgb(238,34,41)" fg:x="732" fg:w="1"/><text x="59.1398%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="59.0507%" y="533" width="0.0805%" height="15" fill="rgb(220,11,15)" fg:x="734" fg:w="1"/><text x="59.3007%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="59.1311%" y="325" width="0.0805%" height="15" fill="rgb(246,111,35)" fg:x="735" fg:w="1"/><text x="59.3811%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="59.1311%" y="309" width="0.0805%" height="15" fill="rgb(209,88,53)" fg:x="735" fg:w="1"/><text x="59.3811%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.1311%" y="293" width="0.0805%" height="15" fill="rgb(231,185,47)" fg:x="735" fg:w="1"/><text x="59.3811%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="59.1311%" y="277" width="0.0805%" height="15" fill="rgb(233,154,1)" fg:x="735" fg:w="1"/><text x="59.3811%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.1311%" y="261" width="0.0805%" height="15" fill="rgb(225,15,46)" fg:x="735" fg:w="1"/><text x="59.3811%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.1311%" y="245" width="0.0805%" height="15" fill="rgb(211,135,41)" fg:x="735" fg:w="1"/><text x="59.3811%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.1311%" y="229" width="0.0805%" height="15" fill="rgb(208,54,0)" fg:x="735" fg:w="1"/><text x="59.3811%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.1311%" y="213" width="0.0805%" height="15" fill="rgb(244,136,14)" fg:x="735" fg:w="1"/><text x="59.3811%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.1311%" y="197" width="0.0805%" height="15" fill="rgb(241,56,14)" fg:x="735" fg:w="1"/><text x="59.3811%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.1311%" y="181" width="0.0805%" height="15" fill="rgb(205,80,24)" fg:x="735" fg:w="1"/><text x="59.3811%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.1311%" y="165" width="0.0805%" height="15" fill="rgb(220,57,4)" fg:x="735" fg:w="1"/><text x="59.3811%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.1311%" y="149" width="0.0805%" height="15" fill="rgb(226,193,50)" fg:x="735" fg:w="1"/><text x="59.3811%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.1311%" y="133" width="0.0805%" height="15" fill="rgb(231,168,22)" fg:x="735" fg:w="1"/><text x="59.3811%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.1311%" y="117" width="0.0805%" height="15" fill="rgb(254,215,14)" fg:x="735" fg:w="1"/><text x="59.3811%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="59.1311%" y="101" width="0.0805%" height="15" fill="rgb(211,115,16)" fg:x="735" fg:w="1"/><text x="59.3811%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="59.1311%" y="85" width="0.0805%" height="15" fill="rgb(236,210,16)" fg:x="735" fg:w="1"/><text x="59.3811%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="59.1311%" y="69" width="0.0805%" height="15" fill="rgb(221,94,12)" fg:x="735" fg:w="1"/><text x="59.3811%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="59.1311%" y="53" width="0.0805%" height="15" fill="rgb(235,218,49)" fg:x="735" fg:w="1"/><text x="59.3811%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="59.1311%" y="37" width="0.0805%" height="15" fill="rgb(217,114,14)" fg:x="735" fg:w="1"/><text x="59.3811%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="58.9702%" y="565" width="0.4023%" height="15" fill="rgb(216,145,22)" fg:x="733" fg:w="5"/><text x="59.2202%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="59.0507%" y="549" width="0.3218%" height="15" fill="rgb(217,112,39)" fg:x="734" fg:w="4"/><text x="59.3007%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="59.1311%" y="533" width="0.2414%" height="15" fill="rgb(225,85,32)" fg:x="735" fg:w="3"/><text x="59.3811%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="59.1311%" y="517" width="0.2414%" height="15" fill="rgb(245,209,47)" fg:x="735" fg:w="3"/><text x="59.3811%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="501" width="0.2414%" height="15" fill="rgb(218,220,15)" fg:x="735" fg:w="3"/><text x="59.3811%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="59.1311%" y="485" width="0.2414%" height="15" fill="rgb(222,202,31)" fg:x="735" fg:w="3"/><text x="59.3811%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="469" width="0.2414%" height="15" fill="rgb(243,203,4)" fg:x="735" fg:w="3"/><text x="59.3811%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="453" width="0.2414%" height="15" fill="rgb(237,92,17)" fg:x="735" fg:w="3"/><text x="59.3811%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="437" width="0.2414%" height="15" fill="rgb(231,119,7)" fg:x="735" fg:w="3"/><text x="59.3811%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="59.1311%" y="421" width="0.2414%" height="15" fill="rgb(237,82,41)" fg:x="735" fg:w="3"/><text x="59.3811%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="405" width="0.2414%" height="15" fill="rgb(226,81,48)" fg:x="735" fg:w="3"/><text x="59.3811%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="389" width="0.2414%" height="15" fill="rgb(234,70,51)" fg:x="735" fg:w="3"/><text x="59.3811%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="373" width="0.2414%" height="15" fill="rgb(251,86,4)" fg:x="735" fg:w="3"/><text x="59.3811%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="59.1311%" y="357" width="0.2414%" height="15" fill="rgb(244,144,28)" fg:x="735" fg:w="3"/><text x="59.3811%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="59.1311%" y="341" width="0.2414%" height="15" fill="rgb(232,161,39)" fg:x="735" fg:w="3"/><text x="59.3811%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.2116%" y="325" width="0.1609%" height="15" fill="rgb(247,34,51)" fg:x="736" fg:w="2"/><text x="59.4616%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.2116%" y="309" width="0.1609%" height="15" fill="rgb(225,132,2)" fg:x="736" fg:w="2"/><text x="59.4616%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="59.2116%" y="293" width="0.1609%" height="15" fill="rgb(209,159,44)" fg:x="736" fg:w="2"/><text x="59.4616%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="59.2116%" y="277" width="0.1609%" height="15" fill="rgb(251,214,1)" fg:x="736" fg:w="2"/><text x="59.4616%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="59.2116%" y="261" width="0.1609%" height="15" fill="rgb(247,84,47)" fg:x="736" fg:w="2"/><text x="59.4616%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="59.2116%" y="245" width="0.1609%" height="15" fill="rgb(240,111,43)" fg:x="736" fg:w="2"/><text x="59.4616%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.2116%" y="229" width="0.1609%" height="15" fill="rgb(215,214,35)" fg:x="736" fg:w="2"/><text x="59.4616%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.2116%" y="213" width="0.1609%" height="15" fill="rgb(248,207,23)" fg:x="736" fg:w="2"/><text x="59.4616%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="59.2116%" y="197" width="0.1609%" height="15" fill="rgb(214,186,4)" fg:x="736" fg:w="2"/><text x="59.4616%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="59.2116%" y="181" width="0.1609%" height="15" fill="rgb(220,133,22)" fg:x="736" fg:w="2"/><text x="59.4616%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="59.2116%" y="165" width="0.1609%" height="15" fill="rgb(239,134,19)" fg:x="736" fg:w="2"/><text x="59.4616%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="59.2116%" y="149" width="0.1609%" height="15" fill="rgb(250,140,9)" fg:x="736" fg:w="2"/><text x="59.4616%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="59.2116%" y="133" width="0.1609%" height="15" fill="rgb(225,59,14)" fg:x="736" fg:w="2"/><text x="59.4616%" y="143.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="59.2116%" y="117" width="0.1609%" height="15" fill="rgb(214,152,51)" fg:x="736" fg:w="2"/><text x="59.4616%" y="127.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="59.2116%" y="101" width="0.1609%" height="15" fill="rgb(251,227,43)" fg:x="736" fg:w="2"/><text x="59.4616%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3725%" y="565" width="0.0805%" height="15" fill="rgb(241,96,17)" fg:x="738" fg:w="1"/><text x="59.6225%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5334%" y="389" width="0.0805%" height="15" fill="rgb(234,198,43)" fg:x="740" fg:w="1"/><text x="59.7834%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5334%" y="373" width="0.0805%" height="15" fill="rgb(220,108,29)" fg:x="740" fg:w="1"/><text x="59.7834%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5334%" y="357" width="0.0805%" height="15" fill="rgb(226,163,33)" fg:x="740" fg:w="1"/><text x="59.7834%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5334%" y="341" width="0.0805%" height="15" fill="rgb(205,194,45)" fg:x="740" fg:w="1"/><text x="59.7834%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5334%" y="325" width="0.0805%" height="15" fill="rgb(206,143,44)" fg:x="740" fg:w="1"/><text x="59.7834%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5334%" y="309" width="0.0805%" height="15" fill="rgb(236,136,36)" fg:x="740" fg:w="1"/><text x="59.7834%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5334%" y="293" width="0.0805%" height="15" fill="rgb(249,172,42)" fg:x="740" fg:w="1"/><text x="59.7834%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="59.4529%" y="533" width="0.2414%" height="15" fill="rgb(216,139,23)" fg:x="739" fg:w="3"/><text x="59.7029%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.4529%" y="517" width="0.2414%" height="15" fill="rgb(207,166,20)" fg:x="739" fg:w="3"/><text x="59.7029%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5334%" y="501" width="0.1609%" height="15" fill="rgb(210,209,22)" fg:x="740" fg:w="2"/><text x="59.7834%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5334%" y="485" width="0.1609%" height="15" fill="rgb(232,118,20)" fg:x="740" fg:w="2"/><text x="59.7834%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5334%" y="469" width="0.1609%" height="15" fill="rgb(238,113,42)" fg:x="740" fg:w="2"/><text x="59.7834%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.5334%" y="453" width="0.1609%" height="15" fill="rgb(231,42,5)" fg:x="740" fg:w="2"/><text x="59.7834%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.5334%" y="437" width="0.1609%" height="15" fill="rgb(243,166,24)" fg:x="740" fg:w="2"/><text x="59.7834%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.5334%" y="421" width="0.1609%" height="15" fill="rgb(237,226,12)" fg:x="740" fg:w="2"/><text x="59.7834%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.5334%" y="405" width="0.1609%" height="15" fill="rgb(229,133,24)" fg:x="740" fg:w="2"/><text x="59.7834%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.6138%" y="389" width="0.0805%" height="15" fill="rgb(238,33,43)" fg:x="741" fg:w="1"/><text x="59.8638%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.6138%" y="373" width="0.0805%" height="15" fill="rgb(227,59,38)" fg:x="741" fg:w="1"/><text x="59.8638%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="59.6943%" y="389" width="0.0805%" height="15" fill="rgb(230,97,0)" fg:x="742" fg:w="1"/><text x="59.9443%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.6943%" y="373" width="0.0805%" height="15" fill="rgb(250,173,50)" fg:x="742" fg:w="1"/><text x="59.9443%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.6943%" y="357" width="0.0805%" height="15" fill="rgb(240,15,50)" fg:x="742" fg:w="1"/><text x="59.9443%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6943%" y="341" width="0.0805%" height="15" fill="rgb(221,93,22)" fg:x="742" fg:w="1"/><text x="59.9443%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6943%" y="325" width="0.0805%" height="15" fill="rgb(245,180,53)" fg:x="742" fg:w="1"/><text x="59.9443%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6943%" y="309" width="0.0805%" height="15" fill="rgb(231,88,51)" fg:x="742" fg:w="1"/><text x="59.9443%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6943%" y="293" width="0.0805%" height="15" fill="rgb(240,58,21)" fg:x="742" fg:w="1"/><text x="59.9443%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7747%" y="373" width="0.0805%" height="15" fill="rgb(237,21,10)" fg:x="743" fg:w="1"/><text x="60.0247%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="59.6943%" y="421" width="0.2414%" height="15" fill="rgb(218,43,11)" fg:x="742" fg:w="3"/><text x="59.9443%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="59.6943%" y="405" width="0.2414%" height="15" fill="rgb(218,221,29)" fg:x="742" fg:w="3"/><text x="59.9443%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="59.7747%" y="389" width="0.1609%" height="15" fill="rgb(214,118,42)" fg:x="743" fg:w="2"/><text x="60.0247%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.8552%" y="373" width="0.0805%" height="15" fill="rgb(251,200,26)" fg:x="744" fg:w="1"/><text x="60.1052%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.8552%" y="357" width="0.0805%" height="15" fill="rgb(237,101,39)" fg:x="744" fg:w="1"/><text x="60.1052%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.8552%" y="341" width="0.0805%" height="15" fill="rgb(251,117,11)" fg:x="744" fg:w="1"/><text x="60.1052%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.8552%" y="325" width="0.0805%" height="15" fill="rgb(216,223,23)" fg:x="744" fg:w="1"/><text x="60.1052%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.8552%" y="309" width="0.0805%" height="15" fill="rgb(251,54,12)" fg:x="744" fg:w="1"/><text x="60.1052%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.8552%" y="293" width="0.0805%" height="15" fill="rgb(254,176,54)" fg:x="744" fg:w="1"/><text x="60.1052%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9356%" y="293" width="0.0805%" height="15" fill="rgb(210,32,8)" fg:x="745" fg:w="1"/><text x="60.1856%" y="303.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="59.9356%" y="405" width="0.1609%" height="15" fill="rgb(235,52,38)" fg:x="745" fg:w="2"/><text x="60.1856%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.9356%" y="389" width="0.1609%" height="15" fill="rgb(231,4,44)" fg:x="745" fg:w="2"/><text x="60.1856%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9356%" y="373" width="0.1609%" height="15" fill="rgb(249,2,32)" fg:x="745" fg:w="2"/><text x="60.1856%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.9356%" y="357" width="0.1609%" height="15" fill="rgb(224,65,26)" fg:x="745" fg:w="2"/><text x="60.1856%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9356%" y="341" width="0.1609%" height="15" fill="rgb(250,73,40)" fg:x="745" fg:w="2"/><text x="60.1856%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.9356%" y="325" width="0.1609%" height="15" fill="rgb(253,177,16)" fg:x="745" fg:w="2"/><text x="60.1856%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.9356%" y="309" width="0.1609%" height="15" fill="rgb(217,32,34)" fg:x="745" fg:w="2"/><text x="60.1856%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.0161%" y="293" width="0.0805%" height="15" fill="rgb(212,7,10)" fg:x="746" fg:w="1"/><text x="60.2661%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0161%" y="277" width="0.0805%" height="15" fill="rgb(245,89,8)" fg:x="746" fg:w="1"/><text x="60.2661%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.0161%" y="261" width="0.0805%" height="15" fill="rgb(237,16,53)" fg:x="746" fg:w="1"/><text x="60.2661%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1770%" y="261" width="0.0805%" height="15" fill="rgb(250,204,30)" fg:x="748" fg:w="1"/><text x="60.4270%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1770%" y="245" width="0.0805%" height="15" fill="rgb(208,77,27)" fg:x="748" fg:w="1"/><text x="60.4270%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.1770%" y="229" width="0.0805%" height="15" fill="rgb(250,204,28)" fg:x="748" fg:w="1"/><text x="60.4270%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.1770%" y="213" width="0.0805%" height="15" fill="rgb(244,63,21)" fg:x="748" fg:w="1"/><text x="60.4270%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.1770%" y="197" width="0.0805%" height="15" fill="rgb(236,85,44)" fg:x="748" fg:w="1"/><text x="60.4270%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.1770%" y="325" width="0.1609%" height="15" fill="rgb(215,98,4)" fg:x="748" fg:w="2"/><text x="60.4270%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.1770%" y="309" width="0.1609%" height="15" fill="rgb(235,38,11)" fg:x="748" fg:w="2"/><text x="60.4270%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.1770%" y="293" width="0.1609%" height="15" fill="rgb(254,186,25)" fg:x="748" fg:w="2"/><text x="60.4270%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.1770%" y="277" width="0.1609%" height="15" fill="rgb(225,55,31)" fg:x="748" fg:w="2"/><text x="60.4270%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.2574%" y="261" width="0.0805%" height="15" fill="rgb(211,15,21)" fg:x="749" fg:w="1"/><text x="60.5074%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="60.3379%" y="325" width="0.0805%" height="15" fill="rgb(215,187,41)" fg:x="750" fg:w="1"/><text x="60.5879%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.3379%" y="309" width="0.0805%" height="15" fill="rgb(248,69,32)" fg:x="750" fg:w="1"/><text x="60.5879%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.3379%" y="293" width="0.0805%" height="15" fill="rgb(252,102,52)" fg:x="750" fg:w="1"/><text x="60.5879%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.4183%" y="261" width="0.0805%" height="15" fill="rgb(253,140,32)" fg:x="751" fg:w="1"/><text x="60.6683%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.4183%" y="245" width="0.0805%" height="15" fill="rgb(216,56,42)" fg:x="751" fg:w="1"/><text x="60.6683%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.4183%" y="229" width="0.0805%" height="15" fill="rgb(216,184,14)" fg:x="751" fg:w="1"/><text x="60.6683%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.4183%" y="213" width="0.0805%" height="15" fill="rgb(237,187,27)" fg:x="751" fg:w="1"/><text x="60.6683%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="60.4183%" y="277" width="0.1609%" height="15" fill="rgb(219,65,3)" fg:x="751" fg:w="2"/><text x="60.6683%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4988%" y="261" width="0.0805%" height="15" fill="rgb(245,83,25)" fg:x="752" fg:w="1"/><text x="60.7488%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6597%" y="197" width="0.0805%" height="15" fill="rgb(214,205,45)" fg:x="754" fg:w="1"/><text x="60.9097%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="59.9356%" y="421" width="0.8850%" height="15" fill="rgb(241,20,18)" fg:x="745" fg:w="11"/><text x="60.1856%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="60.0965%" y="405" width="0.7241%" height="15" fill="rgb(232,163,23)" fg:x="747" fg:w="9"/><text x="60.3465%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="60.0965%" y="389" width="0.7241%" height="15" fill="rgb(214,5,46)" fg:x="747" fg:w="9"/><text x="60.3465%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="60.0965%" y="373" width="0.7241%" height="15" fill="rgb(229,78,17)" fg:x="747" fg:w="9"/><text x="60.3465%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="60.0965%" y="357" width="0.7241%" height="15" fill="rgb(248,89,10)" fg:x="747" fg:w="9"/><text x="60.3465%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="60.0965%" y="341" width="0.7241%" height="15" fill="rgb(248,54,15)" fg:x="747" fg:w="9"/><text x="60.3465%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="60.4183%" y="325" width="0.4023%" height="15" fill="rgb(223,116,6)" fg:x="751" fg:w="5"/><text x="60.6683%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.4183%" y="309" width="0.4023%" height="15" fill="rgb(205,125,38)" fg:x="751" fg:w="5"/><text x="60.6683%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="60.4183%" y="293" width="0.4023%" height="15" fill="rgb(251,78,38)" fg:x="751" fg:w="5"/><text x="60.6683%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.5792%" y="277" width="0.2414%" height="15" fill="rgb(253,78,28)" fg:x="753" fg:w="3"/><text x="60.8292%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.5792%" y="261" width="0.2414%" height="15" fill="rgb(209,120,3)" fg:x="753" fg:w="3"/><text x="60.8292%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="60.6597%" y="245" width="0.1609%" height="15" fill="rgb(238,229,9)" fg:x="754" fg:w="2"/><text x="60.9097%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.6597%" y="229" width="0.1609%" height="15" fill="rgb(253,159,18)" fg:x="754" fg:w="2"/><text x="60.9097%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.6597%" y="213" width="0.1609%" height="15" fill="rgb(244,42,34)" fg:x="754" fg:w="2"/><text x="60.9097%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.7401%" y="197" width="0.0805%" height="15" fill="rgb(224,8,7)" fg:x="755" fg:w="1"/><text x="60.9901%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.7401%" y="181" width="0.0805%" height="15" fill="rgb(210,201,45)" fg:x="755" fg:w="1"/><text x="60.9901%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.7401%" y="165" width="0.0805%" height="15" fill="rgb(252,185,21)" fg:x="755" fg:w="1"/><text x="60.9901%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="60.8206%" y="421" width="0.0805%" height="15" fill="rgb(223,131,1)" fg:x="756" fg:w="1"/><text x="61.0706%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.8206%" y="405" width="0.0805%" height="15" fill="rgb(245,141,16)" fg:x="756" fg:w="1"/><text x="61.0706%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.8206%" y="389" width="0.0805%" height="15" fill="rgb(229,55,45)" fg:x="756" fg:w="1"/><text x="61.0706%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8206%" y="373" width="0.0805%" height="15" fill="rgb(208,92,15)" fg:x="756" fg:w="1"/><text x="61.0706%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8206%" y="357" width="0.0805%" height="15" fill="rgb(234,185,47)" fg:x="756" fg:w="1"/><text x="61.0706%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8206%" y="341" width="0.0805%" height="15" fill="rgb(253,104,50)" fg:x="756" fg:w="1"/><text x="61.0706%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8206%" y="325" width="0.0805%" height="15" fill="rgb(205,70,7)" fg:x="756" fg:w="1"/><text x="61.0706%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.8206%" y="309" width="0.0805%" height="15" fill="rgb(240,178,43)" fg:x="756" fg:w="1"/><text x="61.0706%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8206%" y="293" width="0.0805%" height="15" fill="rgb(214,112,2)" fg:x="756" fg:w="1"/><text x="61.0706%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8206%" y="277" width="0.0805%" height="15" fill="rgb(206,46,17)" fg:x="756" fg:w="1"/><text x="61.0706%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8206%" y="261" width="0.0805%" height="15" fill="rgb(225,220,16)" fg:x="756" fg:w="1"/><text x="61.0706%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.8206%" y="245" width="0.0805%" height="15" fill="rgb(238,65,40)" fg:x="756" fg:w="1"/><text x="61.0706%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.8206%" y="229" width="0.0805%" height="15" fill="rgb(230,151,21)" fg:x="756" fg:w="1"/><text x="61.0706%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.8206%" y="213" width="0.0805%" height="15" fill="rgb(218,58,49)" fg:x="756" fg:w="1"/><text x="61.0706%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.45%)</title><rect x="59.6943%" y="437" width="1.4481%" height="15" fill="rgb(219,179,14)" fg:x="742" fg:w="18"/><text x="59.9443%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="60.9010%" y="421" width="0.2414%" height="15" fill="rgb(223,72,1)" fg:x="757" fg:w="3"/><text x="61.1510%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.9010%" y="405" width="0.2414%" height="15" fill="rgb(238,126,10)" fg:x="757" fg:w="3"/><text x="61.1510%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="60.9010%" y="389" width="0.2414%" height="15" fill="rgb(224,206,38)" fg:x="757" fg:w="3"/><text x="61.1510%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="60.9010%" y="373" width="0.2414%" height="15" fill="rgb(212,201,54)" fg:x="757" fg:w="3"/><text x="61.1510%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.9010%" y="357" width="0.2414%" height="15" fill="rgb(218,154,48)" fg:x="757" fg:w="3"/><text x="61.1510%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.53%)</title><rect x="59.6943%" y="517" width="1.5286%" height="15" fill="rgb(232,93,24)" fg:x="742" fg:w="19"/><text x="59.9443%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.53%)</title><rect x="59.6943%" y="501" width="1.5286%" height="15" fill="rgb(245,30,21)" fg:x="742" fg:w="19"/><text x="59.9443%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 1.53%)</title><rect x="59.6943%" y="485" width="1.5286%" height="15" fill="rgb(242,148,29)" fg:x="742" fg:w="19"/><text x="59.9443%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (19 samples, 1.53%)</title><rect x="59.6943%" y="469" width="1.5286%" height="15" fill="rgb(244,153,54)" fg:x="742" fg:w="19"/><text x="59.9443%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.53%)</title><rect x="59.6943%" y="453" width="1.5286%" height="15" fill="rgb(252,87,22)" fg:x="742" fg:w="19"/><text x="59.9443%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.1424%" y="437" width="0.0805%" height="15" fill="rgb(210,51,29)" fg:x="760" fg:w="1"/><text x="61.3924%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1424%" y="421" width="0.0805%" height="15" fill="rgb(242,136,47)" fg:x="760" fg:w="1"/><text x="61.3924%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1424%" y="405" width="0.0805%" height="15" fill="rgb(238,68,4)" fg:x="760" fg:w="1"/><text x="61.3924%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1424%" y="389" width="0.0805%" height="15" fill="rgb(242,161,30)" fg:x="760" fg:w="1"/><text x="61.3924%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.1424%" y="373" width="0.0805%" height="15" fill="rgb(218,58,44)" fg:x="760" fg:w="1"/><text x="61.3924%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.1424%" y="357" width="0.0805%" height="15" fill="rgb(252,125,32)" fg:x="760" fg:w="1"/><text x="61.3924%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.1424%" y="341" width="0.0805%" height="15" fill="rgb(219,178,0)" fg:x="760" fg:w="1"/><text x="61.3924%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1424%" y="325" width="0.0805%" height="15" fill="rgb(213,152,7)" fg:x="760" fg:w="1"/><text x="61.3924%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1424%" y="309" width="0.0805%" height="15" fill="rgb(249,109,34)" fg:x="760" fg:w="1"/><text x="61.3924%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.1424%" y="293" width="0.0805%" height="15" fill="rgb(232,96,21)" fg:x="760" fg:w="1"/><text x="61.3924%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.1424%" y="277" width="0.0805%" height="15" fill="rgb(228,27,39)" fg:x="760" fg:w="1"/><text x="61.3924%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.1424%" y="261" width="0.0805%" height="15" fill="rgb(211,182,52)" fg:x="760" fg:w="1"/><text x="61.3924%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.1424%" y="245" width="0.0805%" height="15" fill="rgb(234,178,38)" fg:x="760" fg:w="1"/><text x="61.3924%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (20 samples, 1.61%)</title><rect x="59.6943%" y="533" width="1.6090%" height="15" fill="rgb(221,111,3)" fg:x="742" fg:w="20"/><text x="59.9443%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.2228%" y="517" width="0.0805%" height="15" fill="rgb(228,175,21)" fg:x="761" fg:w="1"/><text x="61.4728%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="61.3033%" y="533" width="0.1609%" height="15" fill="rgb(228,174,43)" fg:x="762" fg:w="2"/><text x="61.5533%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="61.3033%" y="517" width="0.1609%" height="15" fill="rgb(211,191,0)" fg:x="762" fg:w="2"/><text x="61.5533%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3837%" y="501" width="0.0805%" height="15" fill="rgb(253,117,3)" fg:x="763" fg:w="1"/><text x="61.6337%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="61.4642%" y="533" width="0.0805%" height="15" fill="rgb(241,127,19)" fg:x="764" fg:w="1"/><text x="61.7142%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.7056%" y="501" width="0.0805%" height="15" fill="rgb(218,103,12)" fg:x="767" fg:w="1"/><text x="61.9556%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7056%" y="485" width="0.0805%" height="15" fill="rgb(236,214,43)" fg:x="767" fg:w="1"/><text x="61.9556%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (4 samples, 0.32%)</title><rect x="61.5447%" y="533" width="0.3218%" height="15" fill="rgb(244,144,19)" fg:x="765" fg:w="4"/><text x="61.7947%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.5447%" y="517" width="0.3218%" height="15" fill="rgb(246,188,10)" fg:x="765" fg:w="4"/><text x="61.7947%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.7860%" y="501" width="0.0805%" height="15" fill="rgb(212,193,33)" fg:x="768" fg:w="1"/><text x="62.0360%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.7860%" y="485" width="0.0805%" height="15" fill="rgb(241,51,29)" fg:x="768" fg:w="1"/><text x="62.0360%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.7860%" y="469" width="0.0805%" height="15" fill="rgb(211,58,19)" fg:x="768" fg:w="1"/><text x="62.0360%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.7860%" y="453" width="0.0805%" height="15" fill="rgb(229,111,26)" fg:x="768" fg:w="1"/><text x="62.0360%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7860%" y="437" width="0.0805%" height="15" fill="rgb(213,115,40)" fg:x="768" fg:w="1"/><text x="62.0360%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.9469%" y="501" width="0.0805%" height="15" fill="rgb(209,56,44)" fg:x="770" fg:w="1"/><text x="62.1969%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.9469%" y="485" width="0.0805%" height="15" fill="rgb(230,108,32)" fg:x="770" fg:w="1"/><text x="62.1969%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.9469%" y="469" width="0.0805%" height="15" fill="rgb(216,165,31)" fg:x="770" fg:w="1"/><text x="62.1969%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9469%" y="453" width="0.0805%" height="15" fill="rgb(218,122,21)" fg:x="770" fg:w="1"/><text x="62.1969%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9469%" y="437" width="0.0805%" height="15" fill="rgb(223,224,47)" fg:x="770" fg:w="1"/><text x="62.1969%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (100 samples, 8.05%)</title><rect x="54.0628%" y="789" width="8.0451%" height="15" fill="rgb(238,102,44)" fg:x="672" fg:w="100"/><text x="54.3128%" y="799.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::apply_middleware (100 samples, 8.05%)</title><rect x="54.0628%" y="773" width="8.0451%" height="15" fill="rgb(236,46,40)" fg:x="672" fg:w="100"/><text x="54.3128%" y="783.50">kernel::plu..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (100 samples, 8.05%)</title><rect x="54.0628%" y="757" width="8.0451%" height="15" fill="rgb(247,202,50)" fg:x="672" fg:w="100"/><text x="54.3128%" y="767.50">kernel::plu..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (99 samples, 7.96%)</title><rect x="54.1432%" y="741" width="7.9646%" height="15" fill="rgb(209,99,20)" fg:x="673" fg:w="99"/><text x="54.3932%" y="751.50">&lt;engine::se..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.63%)</title><rect x="56.4763%" y="725" width="5.6315%" height="15" fill="rgb(252,27,34)" fg:x="702" fg:w="70"/><text x="56.7263%" y="735.50">kernel:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (70 samples, 5.63%)</title><rect x="56.4763%" y="709" width="5.6315%" height="15" fill="rgb(215,206,23)" fg:x="702" fg:w="70"/><text x="56.7263%" y="719.50">&lt;plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.63%)</title><rect x="56.4763%" y="693" width="5.6315%" height="15" fill="rgb(212,135,36)" fg:x="702" fg:w="70"/><text x="56.7263%" y="703.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (70 samples, 5.63%)</title><rect x="56.4763%" y="677" width="5.6315%" height="15" fill="rgb(240,189,1)" fg:x="702" fg:w="70"/><text x="56.7263%" y="687.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.63%)</title><rect x="56.4763%" y="661" width="5.6315%" height="15" fill="rgb(242,56,20)" fg:x="702" fg:w="70"/><text x="56.7263%" y="671.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (69 samples, 5.55%)</title><rect x="56.5567%" y="645" width="5.5511%" height="15" fill="rgb(247,132,33)" fg:x="703" fg:w="69"/><text x="56.8067%" y="655.50">core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 5.47%)</title><rect x="56.6372%" y="629" width="5.4706%" height="15" fill="rgb(208,149,11)" fg:x="704" fg:w="68"/><text x="56.8872%" y="639.50">&lt;alloc:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (68 samples, 5.47%)</title><rect x="56.6372%" y="613" width="5.4706%" height="15" fill="rgb(211,33,11)" fg:x="704" fg:w="68"/><text x="56.8872%" y="623.50">&lt;engine..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (68 samples, 5.47%)</title><rect x="56.6372%" y="597" width="5.4706%" height="15" fill="rgb(221,29,38)" fg:x="704" fg:w="68"/><text x="56.8872%" y="607.50">&lt;plugin..</text></g><g><title>plugins_core::looking::model::new_area_observation (65 samples, 5.23%)</title><rect x="56.8785%" y="581" width="5.2293%" height="15" fill="rgb(206,182,49)" fg:x="707" fg:w="65"/><text x="57.1285%" y="591.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.65%)</title><rect x="59.4529%" y="565" width="2.6549%" height="15" fill="rgb(216,140,1)" fg:x="739" fg:w="33"/><text x="59.7029%" y="575.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.65%)</title><rect x="59.4529%" y="549" width="2.6549%" height="15" fill="rgb(232,57,40)" fg:x="739" fg:w="33"/><text x="59.7029%" y="559.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="61.8665%" y="533" width="0.2414%" height="15" fill="rgb(224,186,18)" fg:x="769" fg:w="3"/><text x="62.1165%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.8665%" y="517" width="0.2414%" height="15" fill="rgb(215,121,11)" fg:x="769" fg:w="3"/><text x="62.1165%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0274%" y="501" width="0.0805%" height="15" fill="rgb(245,147,10)" fg:x="771" fg:w="1"/><text x="62.2774%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0274%" y="485" width="0.0805%" height="15" fill="rgb(238,153,13)" fg:x="771" fg:w="1"/><text x="62.2774%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.0274%" y="469" width="0.0805%" height="15" fill="rgb(233,108,0)" fg:x="771" fg:w="1"/><text x="62.2774%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.0274%" y="453" width="0.0805%" height="15" fill="rgb(212,157,17)" fg:x="771" fg:w="1"/><text x="62.2774%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.0274%" y="437" width="0.0805%" height="15" fill="rgb(225,213,38)" fg:x="771" fg:w="1"/><text x="62.2774%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="62.2687%" y="693" width="0.0805%" height="15" fill="rgb(248,16,11)" fg:x="774" fg:w="1"/><text x="62.5187%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.2687%" y="677" width="0.0805%" height="15" fill="rgb(241,33,4)" fg:x="774" fg:w="1"/><text x="62.5187%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.2687%" y="661" width="0.0805%" height="15" fill="rgb(222,26,43)" fg:x="774" fg:w="1"/><text x="62.5187%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.3492%" y="661" width="0.1609%" height="15" fill="rgb(243,29,36)" fg:x="775" fg:w="2"/><text x="62.5992%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.4296%" y="645" width="0.0805%" height="15" fill="rgb(241,9,27)" fg:x="776" fg:w="1"/><text x="62.6796%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.4296%" y="629" width="0.0805%" height="15" fill="rgb(205,117,26)" fg:x="776" fg:w="1"/><text x="62.6796%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.4296%" y="613" width="0.0805%" height="15" fill="rgb(209,80,39)" fg:x="776" fg:w="1"/><text x="62.6796%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="62.2687%" y="709" width="0.6436%" height="15" fill="rgb(239,155,6)" fg:x="774" fg:w="8"/><text x="62.5187%" y="719.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="62.3492%" y="693" width="0.5632%" height="15" fill="rgb(212,104,12)" fg:x="775" fg:w="7"/><text x="62.5992%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="62.3492%" y="677" width="0.5632%" height="15" fill="rgb(234,204,3)" fg:x="775" fg:w="7"/><text x="62.5992%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.5101%" y="661" width="0.4023%" height="15" fill="rgb(251,218,7)" fg:x="777" fg:w="5"/><text x="62.7601%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.5101%" y="645" width="0.4023%" height="15" fill="rgb(221,81,32)" fg:x="777" fg:w="5"/><text x="62.7601%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.5101%" y="629" width="0.4023%" height="15" fill="rgb(214,152,26)" fg:x="777" fg:w="5"/><text x="62.7601%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.5101%" y="613" width="0.4023%" height="15" fill="rgb(223,22,3)" fg:x="777" fg:w="5"/><text x="62.7601%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="62.5905%" y="597" width="0.3218%" height="15" fill="rgb(207,174,7)" fg:x="778" fg:w="4"/><text x="62.8405%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.5905%" y="581" width="0.3218%" height="15" fill="rgb(224,19,52)" fg:x="778" fg:w="4"/><text x="62.8405%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.6710%" y="565" width="0.2414%" height="15" fill="rgb(228,24,14)" fg:x="779" fg:w="3"/><text x="62.9210%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.6710%" y="549" width="0.2414%" height="15" fill="rgb(230,153,43)" fg:x="779" fg:w="3"/><text x="62.9210%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.6710%" y="533" width="0.2414%" height="15" fill="rgb(231,106,12)" fg:x="779" fg:w="3"/><text x="62.9210%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.7514%" y="517" width="0.1609%" height="15" fill="rgb(215,92,2)" fg:x="780" fg:w="2"/><text x="63.0014%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="62.7514%" y="501" width="0.1609%" height="15" fill="rgb(249,143,25)" fg:x="780" fg:w="2"/><text x="63.0014%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.8319%" y="485" width="0.0805%" height="15" fill="rgb(252,7,35)" fg:x="781" fg:w="1"/><text x="63.0819%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="62.8319%" y="469" width="0.0805%" height="15" fill="rgb(216,69,40)" fg:x="781" fg:w="1"/><text x="63.0819%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9123%" y="661" width="0.0805%" height="15" fill="rgb(240,36,33)" fg:x="782" fg:w="1"/><text x="63.1623%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9123%" y="645" width="0.0805%" height="15" fill="rgb(231,128,14)" fg:x="782" fg:w="1"/><text x="63.1623%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9123%" y="629" width="0.0805%" height="15" fill="rgb(245,143,14)" fg:x="782" fg:w="1"/><text x="63.1623%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9123%" y="613" width="0.0805%" height="15" fill="rgb(222,130,28)" fg:x="782" fg:w="1"/><text x="63.1623%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (12 samples, 0.97%)</title><rect x="62.1883%" y="741" width="0.9654%" height="15" fill="rgb(212,10,48)" fg:x="773" fg:w="12"/><text x="62.4383%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="62.1883%" y="725" width="0.9654%" height="15" fill="rgb(254,118,45)" fg:x="773" fg:w="12"/><text x="62.4383%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="62.9123%" y="709" width="0.2414%" height="15" fill="rgb(228,6,45)" fg:x="782" fg:w="3"/><text x="63.1623%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.9123%" y="693" width="0.2414%" height="15" fill="rgb(241,18,35)" fg:x="782" fg:w="3"/><text x="63.1623%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.9123%" y="677" width="0.2414%" height="15" fill="rgb(227,214,53)" fg:x="782" fg:w="3"/><text x="63.1623%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.9928%" y="661" width="0.1609%" height="15" fill="rgb(224,107,51)" fg:x="783" fg:w="2"/><text x="63.2428%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0732%" y="645" width="0.0805%" height="15" fill="rgb(248,60,28)" fg:x="784" fg:w="1"/><text x="63.3232%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.0732%" y="629" width="0.0805%" height="15" fill="rgb(249,101,23)" fg:x="784" fg:w="1"/><text x="63.3232%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.3146%" y="677" width="0.0805%" height="15" fill="rgb(228,51,19)" fg:x="787" fg:w="1"/><text x="63.5646%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.3146%" y="661" width="0.0805%" height="15" fill="rgb(213,20,6)" fg:x="787" fg:w="1"/><text x="63.5646%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3950%" y="677" width="0.0805%" height="15" fill="rgb(212,124,10)" fg:x="788" fg:w="1"/><text x="63.6450%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.4755%" y="645" width="0.0805%" height="15" fill="rgb(248,3,40)" fg:x="789" fg:w="1"/><text x="63.7255%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.4755%" y="629" width="0.0805%" height="15" fill="rgb(223,178,23)" fg:x="789" fg:w="1"/><text x="63.7255%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.5559%" y="645" width="0.0805%" height="15" fill="rgb(240,132,45)" fg:x="790" fg:w="1"/><text x="63.8059%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6364%" y="613" width="0.0805%" height="15" fill="rgb(245,164,36)" fg:x="791" fg:w="1"/><text x="63.8864%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.6364%" y="597" width="0.0805%" height="15" fill="rgb(231,188,53)" fg:x="791" fg:w="1"/><text x="63.8864%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="63.7973%" y="549" width="0.1609%" height="15" fill="rgb(237,198,39)" fg:x="793" fg:w="2"/><text x="64.0473%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.7973%" y="533" width="0.1609%" height="15" fill="rgb(223,120,35)" fg:x="793" fg:w="2"/><text x="64.0473%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="63.7168%" y="597" width="0.3218%" height="15" fill="rgb(253,107,49)" fg:x="792" fg:w="4"/><text x="63.9668%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="63.7973%" y="581" width="0.2414%" height="15" fill="rgb(216,44,31)" fg:x="793" fg:w="3"/><text x="64.0473%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="63.7973%" y="565" width="0.2414%" height="15" fill="rgb(253,87,21)" fg:x="793" fg:w="3"/><text x="64.0473%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9582%" y="549" width="0.0805%" height="15" fill="rgb(226,18,2)" fg:x="795" fg:w="1"/><text x="64.2082%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9582%" y="533" width="0.0805%" height="15" fill="rgb(216,8,46)" fg:x="795" fg:w="1"/><text x="64.2082%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9582%" y="517" width="0.0805%" height="15" fill="rgb(226,140,39)" fg:x="795" fg:w="1"/><text x="64.2082%" y="527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="64.0386%" y="597" width="0.0805%" height="15" fill="rgb(221,194,54)" fg:x="796" fg:w="1"/><text x="64.2886%" y="607.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="63.2341%" y="725" width="0.9654%" height="15" fill="rgb(213,92,11)" fg:x="786" fg:w="12"/><text x="63.4841%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.97%)</title><rect x="63.2341%" y="709" width="0.9654%" height="15" fill="rgb(229,162,46)" fg:x="786" fg:w="12"/><text x="63.4841%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="63.2341%" y="693" width="0.9654%" height="15" fill="rgb(214,111,36)" fg:x="786" fg:w="12"/><text x="63.4841%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="63.4755%" y="677" width="0.7241%" height="15" fill="rgb(207,6,21)" fg:x="789" fg:w="9"/><text x="63.7255%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="63.4755%" y="661" width="0.7241%" height="15" fill="rgb(213,127,38)" fg:x="789" fg:w="9"/><text x="63.7255%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="63.6364%" y="645" width="0.5632%" height="15" fill="rgb(238,118,32)" fg:x="791" fg:w="7"/><text x="63.8864%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="63.6364%" y="629" width="0.5632%" height="15" fill="rgb(240,139,39)" fg:x="791" fg:w="7"/><text x="63.8864%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="63.7168%" y="613" width="0.4827%" height="15" fill="rgb(235,10,37)" fg:x="792" fg:w="6"/><text x="63.9668%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.1191%" y="597" width="0.0805%" height="15" fill="rgb(249,171,38)" fg:x="797" fg:w="1"/><text x="64.3691%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.1191%" y="581" width="0.0805%" height="15" fill="rgb(242,144,32)" fg:x="797" fg:w="1"/><text x="64.3691%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.1191%" y="565" width="0.0805%" height="15" fill="rgb(217,117,21)" fg:x="797" fg:w="1"/><text x="64.3691%" y="575.50"></text></g><g><title>serde_json::read::StrRead::new (1 samples, 0.08%)</title><rect x="64.1995%" y="725" width="0.0805%" height="15" fill="rgb(249,87,1)" fg:x="798" fg:w="1"/><text x="64.4495%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3604%" y="693" width="0.0805%" height="15" fill="rgb(248,196,48)" fg:x="800" fg:w="1"/><text x="64.6104%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.4409%" y="661" width="0.0805%" height="15" fill="rgb(251,206,33)" fg:x="801" fg:w="1"/><text x="64.6909%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.4409%" y="645" width="0.0805%" height="15" fill="rgb(232,141,28)" fg:x="801" fg:w="1"/><text x="64.6909%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4409%" y="629" width="0.0805%" height="15" fill="rgb(209,167,14)" fg:x="801" fg:w="1"/><text x="64.6909%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5213%" y="661" width="0.0805%" height="15" fill="rgb(225,11,50)" fg:x="802" fg:w="1"/><text x="64.7713%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.5213%" y="645" width="0.0805%" height="15" fill="rgb(209,50,20)" fg:x="802" fg:w="1"/><text x="64.7713%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.5213%" y="629" width="0.0805%" height="15" fill="rgb(212,17,46)" fg:x="802" fg:w="1"/><text x="64.7713%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.6018%" y="645" width="0.1609%" height="15" fill="rgb(216,101,39)" fg:x="803" fg:w="2"/><text x="64.8518%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.6018%" y="629" width="0.1609%" height="15" fill="rgb(212,228,48)" fg:x="803" fg:w="2"/><text x="64.8518%" y="639.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.6822%" y="613" width="0.0805%" height="15" fill="rgb(250,6,50)" fg:x="804" fg:w="1"/><text x="64.9322%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.6822%" y="597" width="0.0805%" height="15" fill="rgb(250,160,48)" fg:x="804" fg:w="1"/><text x="64.9322%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.6822%" y="581" width="0.0805%" height="15" fill="rgb(244,216,33)" fg:x="804" fg:w="1"/><text x="64.9322%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="64.7627%" y="645" width="0.3218%" height="15" fill="rgb(207,157,5)" fg:x="805" fg:w="4"/><text x="65.0127%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="64.7627%" y="629" width="0.3218%" height="15" fill="rgb(228,199,8)" fg:x="805" fg:w="4"/><text x="65.0127%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.8431%" y="613" width="0.2414%" height="15" fill="rgb(227,80,20)" fg:x="806" fg:w="3"/><text x="65.0931%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.8431%" y="597" width="0.2414%" height="15" fill="rgb(222,9,33)" fg:x="806" fg:w="3"/><text x="65.0931%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.9236%" y="581" width="0.1609%" height="15" fill="rgb(239,44,28)" fg:x="807" fg:w="2"/><text x="65.1736%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.9236%" y="565" width="0.1609%" height="15" fill="rgb(249,187,43)" fg:x="807" fg:w="2"/><text x="65.1736%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.9236%" y="549" width="0.1609%" height="15" fill="rgb(216,141,28)" fg:x="807" fg:w="2"/><text x="65.1736%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.0845%" y="613" width="0.0805%" height="15" fill="rgb(230,154,53)" fg:x="809" fg:w="1"/><text x="65.3345%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.1649%" y="597" width="0.0805%" height="15" fill="rgb(227,82,4)" fg:x="810" fg:w="1"/><text x="65.4149%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.1649%" y="581" width="0.0805%" height="15" fill="rgb(220,107,16)" fg:x="810" fg:w="1"/><text x="65.4149%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1649%" y="565" width="0.0805%" height="15" fill="rgb(207,187,2)" fg:x="810" fg:w="1"/><text x="65.4149%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.2454%" y="565" width="0.0805%" height="15" fill="rgb(210,162,52)" fg:x="811" fg:w="1"/><text x="65.4954%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.97%)</title><rect x="64.4409%" y="693" width="0.9654%" height="15" fill="rgb(217,216,49)" fg:x="801" fg:w="12"/><text x="64.6909%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.97%)</title><rect x="64.4409%" y="677" width="0.9654%" height="15" fill="rgb(218,146,49)" fg:x="801" fg:w="12"/><text x="64.6909%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (10 samples, 0.80%)</title><rect x="64.6018%" y="661" width="0.8045%" height="15" fill="rgb(216,55,40)" fg:x="803" fg:w="10"/><text x="64.8518%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.0845%" y="645" width="0.3218%" height="15" fill="rgb(208,196,21)" fg:x="809" fg:w="4"/><text x="65.3345%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="65.0845%" y="629" width="0.3218%" height="15" fill="rgb(242,117,42)" fg:x="809" fg:w="4"/><text x="65.3345%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="65.1649%" y="613" width="0.2414%" height="15" fill="rgb(210,11,23)" fg:x="810" fg:w="3"/><text x="65.4149%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.2454%" y="597" width="0.1609%" height="15" fill="rgb(217,110,2)" fg:x="811" fg:w="2"/><text x="65.4954%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.2454%" y="581" width="0.1609%" height="15" fill="rgb(229,77,54)" fg:x="811" fg:w="2"/><text x="65.4954%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.3258%" y="565" width="0.0805%" height="15" fill="rgb(218,53,16)" fg:x="812" fg:w="1"/><text x="65.5758%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3258%" y="549" width="0.0805%" height="15" fill="rgb(215,38,13)" fg:x="812" fg:w="1"/><text x="65.5758%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3258%" y="533" width="0.0805%" height="15" fill="rgb(235,42,18)" fg:x="812" fg:w="1"/><text x="65.5758%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="65.3258%" y="517" width="0.0805%" height="15" fill="rgb(219,66,54)" fg:x="812" fg:w="1"/><text x="65.5758%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3258%" y="501" width="0.0805%" height="15" fill="rgb(222,205,4)" fg:x="812" fg:w="1"/><text x="65.5758%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="65.3258%" y="485" width="0.0805%" height="15" fill="rgb(227,213,46)" fg:x="812" fg:w="1"/><text x="65.5758%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.3258%" y="469" width="0.0805%" height="15" fill="rgb(250,145,42)" fg:x="812" fg:w="1"/><text x="65.5758%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3258%" y="453" width="0.0805%" height="15" fill="rgb(219,15,2)" fg:x="812" fg:w="1"/><text x="65.5758%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (29 samples, 2.33%)</title><rect x="63.1537%" y="741" width="2.3331%" height="15" fill="rgb(231,181,52)" fg:x="785" fg:w="29"/><text x="63.4037%" y="751.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.21%)</title><rect x="64.2800%" y="725" width="1.2068%" height="15" fill="rgb(235,1,42)" fg:x="799" fg:w="15"/><text x="64.5300%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="64.3604%" y="709" width="1.1263%" height="15" fill="rgb(249,88,27)" fg:x="800" fg:w="14"/><text x="64.6104%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.4063%" y="693" width="0.0805%" height="15" fill="rgb(235,145,16)" fg:x="813" fg:w="1"/><text x="65.6563%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4063%" y="677" width="0.0805%" height="15" fill="rgb(237,114,19)" fg:x="813" fg:w="1"/><text x="65.6563%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.4063%" y="661" width="0.0805%" height="15" fill="rgb(238,51,50)" fg:x="813" fg:w="1"/><text x="65.6563%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4867%" y="693" width="0.0805%" height="15" fill="rgb(205,194,25)" fg:x="814" fg:w="1"/><text x="65.7367%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4867%" y="677" width="0.0805%" height="15" fill="rgb(215,203,17)" fg:x="814" fg:w="1"/><text x="65.7367%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4867%" y="661" width="0.0805%" height="15" fill="rgb(233,112,49)" fg:x="814" fg:w="1"/><text x="65.7367%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4867%" y="645" width="0.0805%" height="15" fill="rgb(241,130,26)" fg:x="814" fg:w="1"/><text x="65.7367%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4867%" y="629" width="0.0805%" height="15" fill="rgb(252,223,19)" fg:x="814" fg:w="1"/><text x="65.7367%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4867%" y="613" width="0.0805%" height="15" fill="rgb(211,95,25)" fg:x="814" fg:w="1"/><text x="65.7367%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4867%" y="597" width="0.0805%" height="15" fill="rgb(251,182,27)" fg:x="814" fg:w="1"/><text x="65.7367%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4867%" y="581" width="0.0805%" height="15" fill="rgb(238,24,4)" fg:x="814" fg:w="1"/><text x="65.7367%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4867%" y="565" width="0.0805%" height="15" fill="rgb(224,220,25)" fg:x="814" fg:w="1"/><text x="65.7367%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4867%" y="549" width="0.0805%" height="15" fill="rgb(239,133,26)" fg:x="814" fg:w="1"/><text x="65.7367%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4867%" y="533" width="0.0805%" height="15" fill="rgb(211,94,48)" fg:x="814" fg:w="1"/><text x="65.7367%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.4867%" y="517" width="0.0805%" height="15" fill="rgb(239,87,6)" fg:x="814" fg:w="1"/><text x="65.7367%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.4867%" y="501" width="0.0805%" height="15" fill="rgb(227,62,0)" fg:x="814" fg:w="1"/><text x="65.7367%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.4867%" y="485" width="0.0805%" height="15" fill="rgb(211,226,4)" fg:x="814" fg:w="1"/><text x="65.7367%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.4867%" y="469" width="0.0805%" height="15" fill="rgb(253,38,52)" fg:x="814" fg:w="1"/><text x="65.7367%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="65.7281%" y="661" width="0.2414%" height="15" fill="rgb(229,126,40)" fg:x="817" fg:w="3"/><text x="65.9781%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="65.7281%" y="645" width="0.2414%" height="15" fill="rgb(229,165,44)" fg:x="817" fg:w="3"/><text x="65.9781%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="65.4867%" y="741" width="0.5632%" height="15" fill="rgb(247,95,47)" fg:x="814" fg:w="7"/><text x="65.7367%" y="751.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="65.4867%" y="725" width="0.5632%" height="15" fill="rgb(216,140,30)" fg:x="814" fg:w="7"/><text x="65.7367%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="65.4867%" y="709" width="0.5632%" height="15" fill="rgb(246,214,8)" fg:x="814" fg:w="7"/><text x="65.7367%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="65.5672%" y="693" width="0.4827%" height="15" fill="rgb(227,224,15)" fg:x="815" fg:w="6"/><text x="65.8172%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="65.5672%" y="677" width="0.4827%" height="15" fill="rgb(233,175,4)" fg:x="815" fg:w="6"/><text x="65.8172%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.9694%" y="661" width="0.0805%" height="15" fill="rgb(221,66,45)" fg:x="820" fg:w="1"/><text x="66.2194%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9694%" y="645" width="0.0805%" height="15" fill="rgb(221,178,18)" fg:x="820" fg:w="1"/><text x="66.2194%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.9694%" y="629" width="0.0805%" height="15" fill="rgb(213,81,29)" fg:x="820" fg:w="1"/><text x="66.2194%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9694%" y="613" width="0.0805%" height="15" fill="rgb(220,89,49)" fg:x="820" fg:w="1"/><text x="66.2194%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.9694%" y="597" width="0.0805%" height="15" fill="rgb(227,60,33)" fg:x="820" fg:w="1"/><text x="66.2194%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.9694%" y="581" width="0.0805%" height="15" fill="rgb(205,113,12)" fg:x="820" fg:w="1"/><text x="66.2194%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (49 samples, 3.94%)</title><rect x="62.1883%" y="773" width="3.9421%" height="15" fill="rgb(211,32,1)" fg:x="773" fg:w="49"/><text x="62.4383%" y="783.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (49 samples, 3.94%)</title><rect x="62.1883%" y="757" width="3.9421%" height="15" fill="rgb(246,2,12)" fg:x="773" fg:w="49"/><text x="62.4383%" y="767.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="66.0499%" y="741" width="0.0805%" height="15" fill="rgb(243,37,27)" fg:x="821" fg:w="1"/><text x="66.2999%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.0499%" y="725" width="0.0805%" height="15" fill="rgb(248,211,31)" fg:x="821" fg:w="1"/><text x="66.2999%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.0499%" y="709" width="0.0805%" height="15" fill="rgb(242,146,47)" fg:x="821" fg:w="1"/><text x="66.2999%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.2108%" y="581" width="0.0805%" height="15" fill="rgb(206,70,20)" fg:x="823" fg:w="1"/><text x="66.4608%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.2108%" y="565" width="0.0805%" height="15" fill="rgb(215,10,51)" fg:x="823" fg:w="1"/><text x="66.4608%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.2108%" y="549" width="0.0805%" height="15" fill="rgb(243,178,53)" fg:x="823" fg:w="1"/><text x="66.4608%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.2108%" y="533" width="0.0805%" height="15" fill="rgb(233,221,20)" fg:x="823" fg:w="1"/><text x="66.4608%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.2108%" y="517" width="0.0805%" height="15" fill="rgb(218,95,35)" fg:x="823" fg:w="1"/><text x="66.4608%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.2108%" y="501" width="0.0805%" height="15" fill="rgb(229,13,5)" fg:x="823" fg:w="1"/><text x="66.4608%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.2108%" y="485" width="0.0805%" height="15" fill="rgb(252,164,30)" fg:x="823" fg:w="1"/><text x="66.4608%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.2108%" y="469" width="0.0805%" height="15" fill="rgb(232,68,36)" fg:x="823" fg:w="1"/><text x="66.4608%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.2108%" y="453" width="0.0805%" height="15" fill="rgb(219,59,54)" fg:x="823" fg:w="1"/><text x="66.4608%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.2108%" y="437" width="0.0805%" height="15" fill="rgb(250,92,33)" fg:x="823" fg:w="1"/><text x="66.4608%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.2108%" y="421" width="0.0805%" height="15" fill="rgb(229,162,54)" fg:x="823" fg:w="1"/><text x="66.4608%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2108%" y="405" width="0.0805%" height="15" fill="rgb(244,114,52)" fg:x="823" fg:w="1"/><text x="66.4608%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.2912%" y="565" width="0.0805%" height="15" fill="rgb(212,211,43)" fg:x="824" fg:w="1"/><text x="66.5412%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (54 samples, 4.34%)</title><rect x="62.1078%" y="789" width="4.3443%" height="15" fill="rgb(226,147,8)" fg:x="772" fg:w="54"/><text x="62.3578%" y="799.50">&lt;engi..</text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="66.1303%" y="773" width="0.3218%" height="15" fill="rgb(226,23,13)" fg:x="822" fg:w="4"/><text x="66.3803%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="66.2108%" y="757" width="0.2414%" height="15" fill="rgb(240,63,4)" fg:x="823" fg:w="3"/><text x="66.4608%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="741" width="0.2414%" height="15" fill="rgb(221,1,32)" fg:x="823" fg:w="3"/><text x="66.4608%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="66.2108%" y="725" width="0.2414%" height="15" fill="rgb(242,117,10)" fg:x="823" fg:w="3"/><text x="66.4608%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="709" width="0.2414%" height="15" fill="rgb(249,172,44)" fg:x="823" fg:w="3"/><text x="66.4608%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="693" width="0.2414%" height="15" fill="rgb(244,46,45)" fg:x="823" fg:w="3"/><text x="66.4608%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="677" width="0.2414%" height="15" fill="rgb(206,43,17)" fg:x="823" fg:w="3"/><text x="66.4608%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="66.2108%" y="661" width="0.2414%" height="15" fill="rgb(239,218,39)" fg:x="823" fg:w="3"/><text x="66.4608%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="645" width="0.2414%" height="15" fill="rgb(208,169,54)" fg:x="823" fg:w="3"/><text x="66.4608%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="629" width="0.2414%" height="15" fill="rgb(247,25,42)" fg:x="823" fg:w="3"/><text x="66.4608%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="66.2108%" y="613" width="0.2414%" height="15" fill="rgb(226,23,31)" fg:x="823" fg:w="3"/><text x="66.4608%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="66.2108%" y="597" width="0.2414%" height="15" fill="rgb(247,16,28)" fg:x="823" fg:w="3"/><text x="66.4608%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.2912%" y="581" width="0.1609%" height="15" fill="rgb(231,147,38)" fg:x="824" fg:w="2"/><text x="66.5412%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3717%" y="565" width="0.0805%" height="15" fill="rgb(253,81,48)" fg:x="825" fg:w="1"/><text x="66.6217%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.3717%" y="549" width="0.0805%" height="15" fill="rgb(249,222,43)" fg:x="825" fg:w="1"/><text x="66.6217%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.3717%" y="533" width="0.0805%" height="15" fill="rgb(221,3,27)" fg:x="825" fg:w="1"/><text x="66.6217%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.3717%" y="517" width="0.0805%" height="15" fill="rgb(228,180,5)" fg:x="825" fg:w="1"/><text x="66.6217%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.3717%" y="501" width="0.0805%" height="15" fill="rgb(227,131,42)" fg:x="825" fg:w="1"/><text x="66.6217%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.3717%" y="485" width="0.0805%" height="15" fill="rgb(212,3,39)" fg:x="825" fg:w="1"/><text x="66.6217%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.3717%" y="469" width="0.0805%" height="15" fill="rgb(226,45,5)" fg:x="825" fg:w="1"/><text x="66.6217%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4521%" y="693" width="0.0805%" height="15" fill="rgb(215,167,45)" fg:x="826" fg:w="1"/><text x="66.7021%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5326%" y="693" width="0.0805%" height="15" fill="rgb(250,218,53)" fg:x="827" fg:w="1"/><text x="66.7826%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.5326%" y="677" width="0.0805%" height="15" fill="rgb(207,140,0)" fg:x="827" fg:w="1"/><text x="66.7826%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.5326%" y="661" width="0.0805%" height="15" fill="rgb(238,133,51)" fg:x="827" fg:w="1"/><text x="66.7826%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.5326%" y="645" width="0.0805%" height="15" fill="rgb(218,203,53)" fg:x="827" fg:w="1"/><text x="66.7826%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.5326%" y="629" width="0.0805%" height="15" fill="rgb(226,184,25)" fg:x="827" fg:w="1"/><text x="66.7826%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.5326%" y="613" width="0.0805%" height="15" fill="rgb(231,121,21)" fg:x="827" fg:w="1"/><text x="66.7826%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.5326%" y="597" width="0.0805%" height="15" fill="rgb(251,14,34)" fg:x="827" fg:w="1"/><text x="66.7826%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.4521%" y="725" width="0.2414%" height="15" fill="rgb(249,193,11)" fg:x="826" fg:w="3"/><text x="66.7021%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.4521%" y="709" width="0.2414%" height="15" fill="rgb(220,172,37)" fg:x="826" fg:w="3"/><text x="66.7021%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6130%" y="693" width="0.0805%" height="15" fill="rgb(231,229,43)" fg:x="828" fg:w="1"/><text x="66.8630%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="66.4521%" y="789" width="0.4023%" height="15" fill="rgb(250,161,5)" fg:x="826" fg:w="5"/><text x="66.7021%" y="799.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="66.4521%" y="773" width="0.4023%" height="15" fill="rgb(218,225,18)" fg:x="826" fg:w="5"/><text x="66.7021%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="66.4521%" y="757" width="0.4023%" height="15" fill="rgb(245,45,42)" fg:x="826" fg:w="5"/><text x="66.7021%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="66.4521%" y="741" width="0.4023%" height="15" fill="rgb(211,115,1)" fg:x="826" fg:w="5"/><text x="66.7021%" y="751.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.6935%" y="725" width="0.1609%" height="15" fill="rgb(248,133,52)" fg:x="829" fg:w="2"/><text x="66.9435%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6935%" y="709" width="0.1609%" height="15" fill="rgb(238,100,21)" fg:x="829" fg:w="2"/><text x="66.9435%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="66.7739%" y="693" width="0.0805%" height="15" fill="rgb(247,144,11)" fg:x="830" fg:w="1"/><text x="67.0239%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7739%" y="677" width="0.0805%" height="15" fill="rgb(206,164,16)" fg:x="830" fg:w="1"/><text x="67.0239%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.7739%" y="661" width="0.0805%" height="15" fill="rgb(222,34,3)" fg:x="830" fg:w="1"/><text x="67.0239%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.7739%" y="645" width="0.0805%" height="15" fill="rgb(248,82,4)" fg:x="830" fg:w="1"/><text x="67.0239%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.7739%" y="629" width="0.0805%" height="15" fill="rgb(228,81,46)" fg:x="830" fg:w="1"/><text x="67.0239%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (832 samples, 66.93%)</title><rect x="0.0000%" y="869" width="66.9348%" height="15" fill="rgb(227,67,47)" fg:x="0" fg:w="832"/><text x="0.2500%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (832 samples, 66.93%)</title><rect x="0.0000%" y="853" width="66.9348%" height="15" fill="rgb(215,93,53)" fg:x="0" fg:w="832"/><text x="0.2500%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (831 samples, 66.85%)</title><rect x="0.0805%" y="837" width="66.8544%" height="15" fill="rgb(248,194,39)" fg:x="1" fg:w="831"/><text x="0.3305%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (160 samples, 12.87%)</title><rect x="54.0628%" y="821" width="12.8721%" height="15" fill="rgb(215,5,19)" fg:x="672" fg:w="160"/><text x="54.3128%" y="831.50">engine::session::Se..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (160 samples, 12.87%)</title><rect x="54.0628%" y="805" width="12.8721%" height="15" fill="rgb(226,215,51)" fg:x="672" fg:w="160"/><text x="54.3128%" y="815.50">engine::session::Se..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8544%" y="789" width="0.0805%" height="15" fill="rgb(225,56,26)" fg:x="831" fg:w="1"/><text x="67.1044%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="67.0153%" y="805" width="0.0805%" height="15" fill="rgb(222,75,29)" fg:x="833" fg:w="1"/><text x="67.2653%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.0153%" y="789" width="0.0805%" height="15" fill="rgb(236,139,6)" fg:x="833" fg:w="1"/><text x="67.2653%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0153%" y="773" width="0.0805%" height="15" fill="rgb(223,137,36)" fg:x="833" fg:w="1"/><text x="67.2653%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0957%" y="773" width="0.0805%" height="15" fill="rgb(226,99,2)" fg:x="834" fg:w="1"/><text x="67.3457%" y="783.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.1762%" y="709" width="0.1609%" height="15" fill="rgb(206,133,23)" fg:x="835" fg:w="2"/><text x="67.4262%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.1762%" y="693" width="0.1609%" height="15" fill="rgb(243,173,15)" fg:x="835" fg:w="2"/><text x="67.4262%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3371%" y="693" width="0.0805%" height="15" fill="rgb(228,69,28)" fg:x="837" fg:w="1"/><text x="67.5871%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.4175%" y="693" width="0.1609%" height="15" fill="rgb(212,51,22)" fg:x="838" fg:w="2"/><text x="67.6675%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4980%" y="677" width="0.0805%" height="15" fill="rgb(227,113,0)" fg:x="839" fg:w="1"/><text x="67.7480%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="67.1762%" y="757" width="0.5632%" height="15" fill="rgb(252,84,27)" fg:x="835" fg:w="7"/><text x="67.4262%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="67.1762%" y="741" width="0.5632%" height="15" fill="rgb(223,145,39)" fg:x="835" fg:w="7"/><text x="67.4262%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="67.1762%" y="725" width="0.5632%" height="15" fill="rgb(239,219,30)" fg:x="835" fg:w="7"/><text x="67.4262%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="67.3371%" y="709" width="0.4023%" height="15" fill="rgb(224,196,39)" fg:x="837" fg:w="5"/><text x="67.5871%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.5784%" y="693" width="0.1609%" height="15" fill="rgb(205,35,43)" fg:x="840" fg:w="2"/><text x="67.8284%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.6589%" y="677" width="0.0805%" height="15" fill="rgb(228,201,21)" fg:x="841" fg:w="1"/><text x="67.9089%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.6589%" y="661" width="0.0805%" height="15" fill="rgb(237,118,16)" fg:x="841" fg:w="1"/><text x="67.9089%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6589%" y="645" width="0.0805%" height="15" fill="rgb(241,17,19)" fg:x="841" fg:w="1"/><text x="67.9089%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="67.0153%" y="821" width="0.8045%" height="15" fill="rgb(214,10,25)" fg:x="833" fg:w="10"/><text x="67.2653%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="67.0957%" y="805" width="0.7241%" height="15" fill="rgb(238,37,29)" fg:x="834" fg:w="9"/><text x="67.3457%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="67.0957%" y="789" width="0.7241%" height="15" fill="rgb(253,83,25)" fg:x="834" fg:w="9"/><text x="67.3457%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (8 samples, 0.64%)</title><rect x="67.1762%" y="773" width="0.6436%" height="15" fill="rgb(234,192,12)" fg:x="835" fg:w="8"/><text x="67.4262%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="67.7393%" y="757" width="0.0805%" height="15" fill="rgb(241,216,45)" fg:x="842" fg:w="1"/><text x="67.9893%" y="767.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (2 samples, 0.16%)</title><rect x="67.8198%" y="773" width="0.1609%" height="15" fill="rgb(242,22,33)" fg:x="843" fg:w="2"/><text x="68.0698%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9002%" y="757" width="0.0805%" height="15" fill="rgb(231,105,49)" fg:x="844" fg:w="1"/><text x="68.1502%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.9807%" y="757" width="0.0805%" height="15" fill="rgb(218,204,15)" fg:x="845" fg:w="1"/><text x="68.2307%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.9807%" y="741" width="0.0805%" height="15" fill="rgb(235,138,41)" fg:x="845" fg:w="1"/><text x="68.2307%" y="751.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="67.9807%" y="725" width="0.0805%" height="15" fill="rgb(246,0,9)" fg:x="845" fg:w="1"/><text x="68.2307%" y="735.50"></text></g><g><title>&lt;alloc::ffi::c_str::NulError as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="68.0611%" y="709" width="0.0805%" height="15" fill="rgb(210,74,4)" fg:x="846" fg:w="1"/><text x="68.3111%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1416%" y="709" width="0.0805%" height="15" fill="rgb(250,60,41)" fg:x="847" fg:w="1"/><text x="68.3916%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="68.0611%" y="757" width="0.4023%" height="15" fill="rgb(220,115,12)" fg:x="846" fg:w="5"/><text x="68.3111%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="68.0611%" y="741" width="0.4023%" height="15" fill="rgb(237,100,13)" fg:x="846" fg:w="5"/><text x="68.3111%" y="751.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="68.0611%" y="725" width="0.4023%" height="15" fill="rgb(213,55,26)" fg:x="846" fg:w="5"/><text x="68.3111%" y="735.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="68.2220%" y="709" width="0.2414%" height="15" fill="rgb(216,17,4)" fg:x="848" fg:w="3"/><text x="68.4720%" y="719.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="68.2220%" y="693" width="0.2414%" height="15" fill="rgb(220,153,47)" fg:x="848" fg:w="3"/><text x="68.4720%" y="703.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="68.2220%" y="677" width="0.2414%" height="15" fill="rgb(215,131,9)" fg:x="848" fg:w="3"/><text x="68.4720%" y="687.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="68.2220%" y="661" width="0.2414%" height="15" fill="rgb(233,46,42)" fg:x="848" fg:w="3"/><text x="68.4720%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="68.2220%" y="645" width="0.2414%" height="15" fill="rgb(226,86,7)" fg:x="848" fg:w="3"/><text x="68.4720%" y="655.50"></text></g><g><title>engine::session::Session::initialize (8 samples, 0.64%)</title><rect x="67.9807%" y="773" width="0.6436%" height="15" fill="rgb(239,226,21)" fg:x="845" fg:w="8"/><text x="68.2307%" y="783.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="68.4634%" y="757" width="0.1609%" height="15" fill="rgb(244,137,22)" fg:x="851" fg:w="2"/><text x="68.7134%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.4634%" y="741" width="0.1609%" height="15" fill="rgb(211,139,35)" fg:x="851" fg:w="2"/><text x="68.7134%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="68.4634%" y="725" width="0.1609%" height="15" fill="rgb(214,62,50)" fg:x="851" fg:w="2"/><text x="68.7134%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="68.4634%" y="709" width="0.1609%" height="15" fill="rgb(212,113,44)" fg:x="851" fg:w="2"/><text x="68.7134%" y="719.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="68.4634%" y="693" width="0.1609%" height="15" fill="rgb(226,150,43)" fg:x="851" fg:w="2"/><text x="68.7134%" y="703.50"></text></g><g><title>&lt;plugins_core::memory::MemoryPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="68.6243%" y="741" width="0.0805%" height="15" fill="rgb(250,71,37)" fg:x="853" fg:w="1"/><text x="68.8743%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (13 samples, 1.05%)</title><rect x="67.8198%" y="821" width="1.0459%" height="15" fill="rgb(219,76,19)" fg:x="843" fg:w="13"/><text x="68.0698%" y="831.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (13 samples, 1.05%)</title><rect x="67.8198%" y="805" width="1.0459%" height="15" fill="rgb(250,39,11)" fg:x="843" fg:w="13"/><text x="68.0698%" y="815.50"></text></g><g><title>engine::session::Session::new (13 samples, 1.05%)</title><rect x="67.8198%" y="789" width="1.0459%" height="15" fill="rgb(230,64,31)" fg:x="843" fg:w="13"/><text x="68.0698%" y="799.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="68.6243%" y="773" width="0.2414%" height="15" fill="rgb(208,222,23)" fg:x="853" fg:w="3"/><text x="68.8743%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="68.6243%" y="757" width="0.2414%" height="15" fill="rgb(227,125,18)" fg:x="853" fg:w="3"/><text x="68.8743%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="68.7047%" y="741" width="0.1609%" height="15" fill="rgb(234,210,9)" fg:x="854" fg:w="2"/><text x="68.9547%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.7852%" y="725" width="0.0805%" height="15" fill="rgb(217,127,24)" fg:x="855" fg:w="1"/><text x="69.0352%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.9461%" y="805" width="0.1609%" height="15" fill="rgb(239,141,48)" fg:x="857" fg:w="2"/><text x="69.1961%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0265%" y="789" width="0.0805%" height="15" fill="rgb(227,109,8)" fg:x="858" fg:w="1"/><text x="69.2765%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="69.1070%" y="805" width="0.0805%" height="15" fill="rgb(235,184,23)" fg:x="859" fg:w="1"/><text x="69.3570%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1070%" y="789" width="0.0805%" height="15" fill="rgb(227,226,48)" fg:x="859" fg:w="1"/><text x="69.3570%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="69.1874%" y="789" width="0.0805%" height="15" fill="rgb(206,150,11)" fg:x="860" fg:w="1"/><text x="69.4374%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1874%" y="773" width="0.0805%" height="15" fill="rgb(254,2,33)" fg:x="860" fg:w="1"/><text x="69.4374%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.2679%" y="709" width="0.0805%" height="15" fill="rgb(243,160,20)" fg:x="861" fg:w="1"/><text x="69.5179%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="69.3484%" y="693" width="0.3218%" height="15" fill="rgb(218,208,30)" fg:x="862" fg:w="4"/><text x="69.5984%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="69.4288%" y="677" width="0.2414%" height="15" fill="rgb(224,120,49)" fg:x="863" fg:w="3"/><text x="69.6788%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.5093%" y="661" width="0.1609%" height="15" fill="rgb(246,12,2)" fg:x="864" fg:w="2"/><text x="69.7593%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="69.5093%" y="645" width="0.1609%" height="15" fill="rgb(236,117,3)" fg:x="864" fg:w="2"/><text x="69.7593%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="69.3484%" y="709" width="0.4023%" height="15" fill="rgb(216,128,52)" fg:x="862" fg:w="5"/><text x="69.5984%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.6702%" y="693" width="0.0805%" height="15" fill="rgb(246,145,19)" fg:x="866" fg:w="1"/><text x="69.9202%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="69.8311%" y="693" width="0.3218%" height="15" fill="rgb(222,11,46)" fg:x="868" fg:w="4"/><text x="70.0811%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="69.9115%" y="677" width="0.2414%" height="15" fill="rgb(245,82,36)" fg:x="869" fg:w="3"/><text x="70.1615%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.9920%" y="661" width="0.1609%" height="15" fill="rgb(250,73,51)" fg:x="870" fg:w="2"/><text x="70.2420%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="69.9920%" y="645" width="0.1609%" height="15" fill="rgb(221,189,23)" fg:x="870" fg:w="2"/><text x="70.2420%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.0724%" y="629" width="0.0805%" height="15" fill="rgb(210,33,7)" fg:x="871" fg:w="1"/><text x="70.3224%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.0724%" y="613" width="0.0805%" height="15" fill="rgb(210,107,22)" fg:x="871" fg:w="1"/><text x="70.3224%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.0724%" y="597" width="0.0805%" height="15" fill="rgb(222,116,37)" fg:x="871" fg:w="1"/><text x="70.3224%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.3138%" y="629" width="0.1609%" height="15" fill="rgb(254,17,48)" fg:x="874" fg:w="2"/><text x="70.5638%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.3942%" y="613" width="0.0805%" height="15" fill="rgb(224,36,32)" fg:x="875" fg:w="1"/><text x="70.6442%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.3942%" y="597" width="0.0805%" height="15" fill="rgb(232,90,46)" fg:x="875" fg:w="1"/><text x="70.6442%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.3942%" y="581" width="0.0805%" height="15" fill="rgb(241,66,40)" fg:x="875" fg:w="1"/><text x="70.6442%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="70.1529%" y="677" width="0.4023%" height="15" fill="rgb(249,184,29)" fg:x="872" fg:w="5"/><text x="70.4029%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="70.1529%" y="661" width="0.4023%" height="15" fill="rgb(231,181,1)" fg:x="872" fg:w="5"/><text x="70.4029%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="70.2333%" y="645" width="0.3218%" height="15" fill="rgb(224,94,2)" fg:x="873" fg:w="4"/><text x="70.4833%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.4747%" y="629" width="0.0805%" height="15" fill="rgb(229,170,15)" fg:x="876" fg:w="1"/><text x="70.7247%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.5551%" y="677" width="0.1609%" height="15" fill="rgb(240,127,35)" fg:x="877" fg:w="2"/><text x="70.8051%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="70.5551%" y="661" width="0.1609%" height="15" fill="rgb(248,196,34)" fg:x="877" fg:w="2"/><text x="70.8051%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="70.5551%" y="645" width="0.1609%" height="15" fill="rgb(236,137,7)" fg:x="877" fg:w="2"/><text x="70.8051%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="70.5551%" y="629" width="0.1609%" height="15" fill="rgb(235,127,16)" fg:x="877" fg:w="2"/><text x="70.8051%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.6356%" y="613" width="0.0805%" height="15" fill="rgb(250,192,54)" fg:x="878" fg:w="1"/><text x="70.8856%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.6356%" y="597" width="0.0805%" height="15" fill="rgb(218,98,20)" fg:x="878" fg:w="1"/><text x="70.8856%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.6356%" y="581" width="0.0805%" height="15" fill="rgb(230,176,47)" fg:x="878" fg:w="1"/><text x="70.8856%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="70.8769%" y="661" width="0.2414%" height="15" fill="rgb(244,2,33)" fg:x="881" fg:w="3"/><text x="71.1269%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="70.8769%" y="645" width="0.2414%" height="15" fill="rgb(231,100,17)" fg:x="881" fg:w="3"/><text x="71.1269%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.1183%" y="645" width="0.0805%" height="15" fill="rgb(245,23,12)" fg:x="884" fg:w="1"/><text x="71.3683%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="70.1529%" y="693" width="1.5286%" height="15" fill="rgb(249,55,22)" fg:x="872" fg:w="19"/><text x="70.4029%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="70.7160%" y="677" width="0.9654%" height="15" fill="rgb(207,134,9)" fg:x="879" fg:w="12"/><text x="70.9660%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="71.1183%" y="661" width="0.5632%" height="15" fill="rgb(218,134,0)" fg:x="884" fg:w="7"/><text x="71.3683%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="71.1987%" y="645" width="0.4827%" height="15" fill="rgb(213,212,33)" fg:x="885" fg:w="6"/><text x="71.4487%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="71.1987%" y="629" width="0.4827%" height="15" fill="rgb(252,106,18)" fg:x="885" fg:w="6"/><text x="71.4487%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="71.1987%" y="613" width="0.4827%" height="15" fill="rgb(208,126,42)" fg:x="885" fg:w="6"/><text x="71.4487%" y="623.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="71.1987%" y="597" width="0.4827%" height="15" fill="rgb(246,175,29)" fg:x="885" fg:w="6"/><text x="71.4487%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="71.2792%" y="581" width="0.4023%" height="15" fill="rgb(215,13,50)" fg:x="886" fg:w="5"/><text x="71.5292%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="71.2792%" y="565" width="0.4023%" height="15" fill="rgb(216,172,15)" fg:x="886" fg:w="5"/><text x="71.5292%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="71.2792%" y="549" width="0.4023%" height="15" fill="rgb(212,103,13)" fg:x="886" fg:w="5"/><text x="71.5292%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="71.2792%" y="533" width="0.4023%" height="15" fill="rgb(231,171,36)" fg:x="886" fg:w="5"/><text x="71.5292%" y="543.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="71.2792%" y="517" width="0.4023%" height="15" fill="rgb(250,123,20)" fg:x="886" fg:w="5"/><text x="71.5292%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.65%)</title><rect x="69.2679%" y="725" width="2.6549%" height="15" fill="rgb(212,53,50)" fg:x="861" fg:w="33"/><text x="69.5179%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.17%)</title><rect x="69.7506%" y="709" width="2.1722%" height="15" fill="rgb(243,54,12)" fg:x="867" fg:w="27"/><text x="70.0006%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="71.6814%" y="693" width="0.2414%" height="15" fill="rgb(234,101,34)" fg:x="891" fg:w="3"/><text x="71.9314%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="71.6814%" y="677" width="0.2414%" height="15" fill="rgb(254,67,22)" fg:x="891" fg:w="3"/><text x="71.9314%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="71.7619%" y="661" width="0.1609%" height="15" fill="rgb(250,35,47)" fg:x="892" fg:w="2"/><text x="72.0119%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="72.0032%" y="677" width="0.1609%" height="15" fill="rgb(226,126,38)" fg:x="895" fg:w="2"/><text x="72.2532%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0837%" y="661" width="0.0805%" height="15" fill="rgb(216,138,53)" fg:x="896" fg:w="1"/><text x="72.3337%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2446%" y="661" width="0.0805%" height="15" fill="rgb(246,199,43)" fg:x="898" fg:w="1"/><text x="72.4946%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.3250%" y="645" width="0.0805%" height="15" fill="rgb(232,125,11)" fg:x="899" fg:w="1"/><text x="72.5750%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.3250%" y="629" width="0.0805%" height="15" fill="rgb(218,219,45)" fg:x="899" fg:w="1"/><text x="72.5750%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3250%" y="613" width="0.0805%" height="15" fill="rgb(216,102,54)" fg:x="899" fg:w="1"/><text x="72.5750%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.4055%" y="629" width="0.0805%" height="15" fill="rgb(250,228,7)" fg:x="900" fg:w="1"/><text x="72.6555%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4055%" y="613" width="0.0805%" height="15" fill="rgb(226,125,25)" fg:x="900" fg:w="1"/><text x="72.6555%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="71.9228%" y="725" width="0.6436%" height="15" fill="rgb(224,165,27)" fg:x="894" fg:w="8"/><text x="72.1728%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="71.9228%" y="709" width="0.6436%" height="15" fill="rgb(233,86,3)" fg:x="894" fg:w="8"/><text x="72.1728%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="71.9228%" y="693" width="0.6436%" height="15" fill="rgb(228,116,20)" fg:x="894" fg:w="8"/><text x="72.1728%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="72.1641%" y="677" width="0.4023%" height="15" fill="rgb(209,192,17)" fg:x="897" fg:w="5"/><text x="72.4141%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.3250%" y="661" width="0.2414%" height="15" fill="rgb(224,88,34)" fg:x="899" fg:w="3"/><text x="72.5750%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.4055%" y="645" width="0.1609%" height="15" fill="rgb(233,38,6)" fg:x="900" fg:w="2"/><text x="72.6555%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.4859%" y="629" width="0.0805%" height="15" fill="rgb(212,59,30)" fg:x="901" fg:w="1"/><text x="72.7359%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4859%" y="613" width="0.0805%" height="15" fill="rgb(213,80,3)" fg:x="901" fg:w="1"/><text x="72.7359%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6468%" y="677" width="0.0805%" height="15" fill="rgb(251,178,7)" fg:x="903" fg:w="1"/><text x="72.8968%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7273%" y="677" width="0.0805%" height="15" fill="rgb(213,154,26)" fg:x="904" fg:w="1"/><text x="72.9773%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7273%" y="661" width="0.0805%" height="15" fill="rgb(238,165,49)" fg:x="904" fg:w="1"/><text x="72.9773%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.7273%" y="645" width="0.0805%" height="15" fill="rgb(248,91,46)" fg:x="904" fg:w="1"/><text x="72.9773%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="72.8077%" y="677" width="0.0805%" height="15" fill="rgb(244,21,52)" fg:x="905" fg:w="1"/><text x="73.0577%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.8077%" y="661" width="0.0805%" height="15" fill="rgb(247,122,20)" fg:x="905" fg:w="1"/><text x="73.0577%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8077%" y="645" width="0.0805%" height="15" fill="rgb(218,27,9)" fg:x="905" fg:w="1"/><text x="73.0577%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8077%" y="629" width="0.0805%" height="15" fill="rgb(246,7,6)" fg:x="905" fg:w="1"/><text x="73.0577%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8077%" y="613" width="0.0805%" height="15" fill="rgb(227,135,54)" fg:x="905" fg:w="1"/><text x="73.0577%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="72.8882%" y="661" width="0.0805%" height="15" fill="rgb(247,14,11)" fg:x="906" fg:w="1"/><text x="73.1382%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.0491%" y="645" width="0.0805%" height="15" fill="rgb(206,149,34)" fg:x="908" fg:w="1"/><text x="73.2991%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.1295%" y="629" width="0.0805%" height="15" fill="rgb(227,228,4)" fg:x="909" fg:w="1"/><text x="73.3795%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.1295%" y="613" width="0.0805%" height="15" fill="rgb(238,218,28)" fg:x="909" fg:w="1"/><text x="73.3795%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.1295%" y="597" width="0.0805%" height="15" fill="rgb(252,86,40)" fg:x="909" fg:w="1"/><text x="73.3795%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.1295%" y="581" width="0.0805%" height="15" fill="rgb(251,225,11)" fg:x="909" fg:w="1"/><text x="73.3795%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2904%" y="597" width="0.0805%" height="15" fill="rgb(206,46,49)" fg:x="911" fg:w="1"/><text x="73.5404%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.3709%" y="533" width="0.1609%" height="15" fill="rgb(245,128,24)" fg:x="912" fg:w="2"/><text x="73.6209%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4513%" y="517" width="0.0805%" height="15" fill="rgb(219,177,34)" fg:x="913" fg:w="1"/><text x="73.7013%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="73.3709%" y="549" width="0.3218%" height="15" fill="rgb(218,60,48)" fg:x="912" fg:w="4"/><text x="73.6209%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="73.5318%" y="533" width="0.1609%" height="15" fill="rgb(221,11,5)" fg:x="914" fg:w="2"/><text x="73.7818%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="73.5318%" y="517" width="0.1609%" height="15" fill="rgb(220,148,13)" fg:x="914" fg:w="2"/><text x="73.7818%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6122%" y="501" width="0.0805%" height="15" fill="rgb(210,16,3)" fg:x="915" fg:w="1"/><text x="73.8622%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6122%" y="485" width="0.0805%" height="15" fill="rgb(236,80,2)" fg:x="915" fg:w="1"/><text x="73.8622%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6122%" y="469" width="0.0805%" height="15" fill="rgb(239,129,19)" fg:x="915" fg:w="1"/><text x="73.8622%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="73.1295%" y="645" width="0.6436%" height="15" fill="rgb(220,106,35)" fg:x="909" fg:w="8"/><text x="73.3795%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="73.2100%" y="629" width="0.5632%" height="15" fill="rgb(252,139,45)" fg:x="910" fg:w="7"/><text x="73.4600%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="73.2904%" y="613" width="0.4827%" height="15" fill="rgb(229,8,36)" fg:x="911" fg:w="6"/><text x="73.5404%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="73.3709%" y="597" width="0.4023%" height="15" fill="rgb(230,126,33)" fg:x="912" fg:w="5"/><text x="73.6209%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="73.3709%" y="581" width="0.4023%" height="15" fill="rgb(239,140,21)" fg:x="912" fg:w="5"/><text x="73.6209%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="73.3709%" y="565" width="0.4023%" height="15" fill="rgb(254,104,9)" fg:x="912" fg:w="5"/><text x="73.6209%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.6927%" y="549" width="0.0805%" height="15" fill="rgb(239,52,14)" fg:x="916" fg:w="1"/><text x="73.9427%" y="559.50"></text></g><g><title>engine::session::Session::flush (58 samples, 4.67%)</title><rect x="69.1874%" y="805" width="4.6661%" height="15" fill="rgb(208,227,44)" fg:x="860" fg:w="58"/><text x="69.4374%" y="815.50">engin..</text></g><g><title>engine::session::state::State::close (57 samples, 4.59%)</title><rect x="69.2679%" y="789" width="4.5857%" height="15" fill="rgb(246,18,19)" fg:x="861" fg:w="57"/><text x="69.5179%" y="799.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.59%)</title><rect x="69.2679%" y="773" width="4.5857%" height="15" fill="rgb(235,228,25)" fg:x="861" fg:w="57"/><text x="69.5179%" y="783.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (57 samples, 4.59%)</title><rect x="69.2679%" y="757" width="4.5857%" height="15" fill="rgb(240,156,20)" fg:x="861" fg:w="57"/><text x="69.5179%" y="767.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (57 samples, 4.59%)</title><rect x="69.2679%" y="741" width="4.5857%" height="15" fill="rgb(224,8,20)" fg:x="861" fg:w="57"/><text x="69.5179%" y="751.50">engin..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.29%)</title><rect x="72.5664%" y="725" width="1.2872%" height="15" fill="rgb(214,12,52)" fg:x="902" fg:w="16"/><text x="72.8164%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.29%)</title><rect x="72.5664%" y="709" width="1.2872%" height="15" fill="rgb(211,220,47)" fg:x="902" fg:w="16"/><text x="72.8164%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="72.6468%" y="693" width="1.2068%" height="15" fill="rgb(250,173,5)" fg:x="903" fg:w="15"/><text x="72.8968%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.97%)</title><rect x="72.8882%" y="677" width="0.9654%" height="15" fill="rgb(250,125,52)" fg:x="906" fg:w="12"/><text x="73.1382%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="72.9686%" y="661" width="0.8850%" height="15" fill="rgb(209,133,18)" fg:x="907" fg:w="11"/><text x="73.2186%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="73.7731%" y="645" width="0.0805%" height="15" fill="rgb(216,173,22)" fg:x="917" fg:w="1"/><text x="74.0231%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7731%" y="629" width="0.0805%" height="15" fill="rgb(205,3,22)" fg:x="917" fg:w="1"/><text x="74.0231%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.8536%" y="773" width="0.0805%" height="15" fill="rgb(248,22,20)" fg:x="918" fg:w="1"/><text x="74.1036%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.8536%" y="757" width="0.0805%" height="15" fill="rgb(233,6,29)" fg:x="918" fg:w="1"/><text x="74.1036%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.8536%" y="741" width="0.0805%" height="15" fill="rgb(240,22,54)" fg:x="918" fg:w="1"/><text x="74.1036%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8536%" y="725" width="0.0805%" height="15" fill="rgb(231,133,32)" fg:x="918" fg:w="1"/><text x="74.1036%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8536%" y="709" width="0.0805%" height="15" fill="rgb(248,193,4)" fg:x="918" fg:w="1"/><text x="74.1036%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.9340%" y="725" width="0.0805%" height="15" fill="rgb(211,178,46)" fg:x="919" fg:w="1"/><text x="74.1840%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.9340%" y="709" width="0.0805%" height="15" fill="rgb(224,5,42)" fg:x="919" fg:w="1"/><text x="74.1840%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.9340%" y="693" width="0.0805%" height="15" fill="rgb(239,176,25)" fg:x="919" fg:w="1"/><text x="74.1840%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.9340%" y="677" width="0.0805%" height="15" fill="rgb(245,187,50)" fg:x="919" fg:w="1"/><text x="74.1840%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="73.9340%" y="757" width="0.1609%" height="15" fill="rgb(248,24,15)" fg:x="919" fg:w="2"/><text x="74.1840%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="73.9340%" y="741" width="0.1609%" height="15" fill="rgb(205,166,13)" fg:x="919" fg:w="2"/><text x="74.1840%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="74.0145%" y="725" width="0.0805%" height="15" fill="rgb(208,114,23)" fg:x="920" fg:w="1"/><text x="74.2645%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.0145%" y="709" width="0.0805%" height="15" fill="rgb(239,127,18)" fg:x="920" fg:w="1"/><text x="74.2645%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0145%" y="693" width="0.0805%" height="15" fill="rgb(219,154,28)" fg:x="920" fg:w="1"/><text x="74.2645%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.0145%" y="677" width="0.0805%" height="15" fill="rgb(225,157,23)" fg:x="920" fg:w="1"/><text x="74.2645%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0145%" y="661" width="0.0805%" height="15" fill="rgb(219,8,6)" fg:x="920" fg:w="1"/><text x="74.2645%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0145%" y="645" width="0.0805%" height="15" fill="rgb(212,47,6)" fg:x="920" fg:w="1"/><text x="74.2645%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="73.8536%" y="789" width="0.4827%" height="15" fill="rgb(224,190,4)" fg:x="918" fg:w="6"/><text x="74.1036%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="73.9340%" y="773" width="0.4023%" height="15" fill="rgb(239,183,29)" fg:x="919" fg:w="5"/><text x="74.1840%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="74.0949%" y="757" width="0.2414%" height="15" fill="rgb(213,57,7)" fg:x="921" fg:w="3"/><text x="74.3449%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="74.0949%" y="741" width="0.2414%" height="15" fill="rgb(216,148,1)" fg:x="921" fg:w="3"/><text x="74.3449%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="74.0949%" y="725" width="0.2414%" height="15" fill="rgb(236,182,29)" fg:x="921" fg:w="3"/><text x="74.3449%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="74.0949%" y="709" width="0.2414%" height="15" fill="rgb(244,120,48)" fg:x="921" fg:w="3"/><text x="74.3449%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="74.0949%" y="693" width="0.2414%" height="15" fill="rgb(206,71,34)" fg:x="921" fg:w="3"/><text x="74.3449%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3363%" y="693" width="0.0805%" height="15" fill="rgb(242,32,6)" fg:x="924" fg:w="1"/><text x="74.5863%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3363%" y="677" width="0.0805%" height="15" fill="rgb(241,35,3)" fg:x="924" fg:w="1"/><text x="74.5863%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3363%" y="661" width="0.0805%" height="15" fill="rgb(222,62,19)" fg:x="924" fg:w="1"/><text x="74.5863%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3363%" y="645" width="0.0805%" height="15" fill="rgb(223,110,41)" fg:x="924" fg:w="1"/><text x="74.5863%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3363%" y="629" width="0.0805%" height="15" fill="rgb(208,224,4)" fg:x="924" fg:w="1"/><text x="74.5863%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3363%" y="613" width="0.0805%" height="15" fill="rgb(241,137,19)" fg:x="924" fg:w="1"/><text x="74.5863%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3363%" y="597" width="0.0805%" height="15" fill="rgb(244,24,17)" fg:x="924" fg:w="1"/><text x="74.5863%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3363%" y="581" width="0.0805%" height="15" fill="rgb(245,178,49)" fg:x="924" fg:w="1"/><text x="74.5863%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3363%" y="565" width="0.0805%" height="15" fill="rgb(219,160,38)" fg:x="924" fg:w="1"/><text x="74.5863%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3363%" y="549" width="0.0805%" height="15" fill="rgb(228,137,14)" fg:x="924" fg:w="1"/><text x="74.5863%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.3363%" y="533" width="0.0805%" height="15" fill="rgb(237,134,11)" fg:x="924" fg:w="1"/><text x="74.5863%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.3363%" y="517" width="0.0805%" height="15" fill="rgb(211,126,44)" fg:x="924" fg:w="1"/><text x="74.5863%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.4167%" y="693" width="0.0805%" height="15" fill="rgb(226,171,33)" fg:x="925" fg:w="1"/><text x="74.6667%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.4167%" y="677" width="0.0805%" height="15" fill="rgb(253,99,13)" fg:x="925" fg:w="1"/><text x="74.6667%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.4167%" y="661" width="0.0805%" height="15" fill="rgb(244,48,7)" fg:x="925" fg:w="1"/><text x="74.6667%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.4167%" y="645" width="0.0805%" height="15" fill="rgb(244,217,54)" fg:x="925" fg:w="1"/><text x="74.6667%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.4167%" y="629" width="0.0805%" height="15" fill="rgb(224,15,18)" fg:x="925" fg:w="1"/><text x="74.6667%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.4167%" y="613" width="0.0805%" height="15" fill="rgb(244,99,12)" fg:x="925" fg:w="1"/><text x="74.6667%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.4167%" y="597" width="0.0805%" height="15" fill="rgb(233,226,8)" fg:x="925" fg:w="1"/><text x="74.6667%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="74.3363%" y="773" width="0.2414%" height="15" fill="rgb(229,211,3)" fg:x="924" fg:w="3"/><text x="74.5863%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="74.3363%" y="757" width="0.2414%" height="15" fill="rgb(216,140,21)" fg:x="924" fg:w="3"/><text x="74.5863%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="74.3363%" y="741" width="0.2414%" height="15" fill="rgb(234,122,30)" fg:x="924" fg:w="3"/><text x="74.5863%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.3363%" y="725" width="0.2414%" height="15" fill="rgb(236,25,46)" fg:x="924" fg:w="3"/><text x="74.5863%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.3363%" y="709" width="0.2414%" height="15" fill="rgb(217,52,54)" fg:x="924" fg:w="3"/><text x="74.5863%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4972%" y="693" width="0.0805%" height="15" fill="rgb(222,29,26)" fg:x="926" fg:w="1"/><text x="74.7472%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4972%" y="677" width="0.0805%" height="15" fill="rgb(216,177,29)" fg:x="926" fg:w="1"/><text x="74.7472%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.4972%" y="661" width="0.0805%" height="15" fill="rgb(247,136,51)" fg:x="926" fg:w="1"/><text x="74.7472%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4972%" y="645" width="0.0805%" height="15" fill="rgb(231,47,47)" fg:x="926" fg:w="1"/><text x="74.7472%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.4972%" y="629" width="0.0805%" height="15" fill="rgb(211,192,36)" fg:x="926" fg:w="1"/><text x="74.7472%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.4972%" y="613" width="0.0805%" height="15" fill="rgb(229,156,32)" fg:x="926" fg:w="1"/><text x="74.7472%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.4972%" y="597" width="0.0805%" height="15" fill="rgb(248,213,20)" fg:x="926" fg:w="1"/><text x="74.7472%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="74.5776%" y="693" width="0.0805%" height="15" fill="rgb(217,64,7)" fg:x="927" fg:w="1"/><text x="74.8276%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="74.5776%" y="773" width="0.2414%" height="15" fill="rgb(232,142,8)" fg:x="927" fg:w="3"/><text x="74.8276%" y="783.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="74.5776%" y="757" width="0.2414%" height="15" fill="rgb(224,92,44)" fg:x="927" fg:w="3"/><text x="74.8276%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="74.5776%" y="741" width="0.2414%" height="15" fill="rgb(214,169,17)" fg:x="927" fg:w="3"/><text x="74.8276%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="74.5776%" y="725" width="0.2414%" height="15" fill="rgb(210,59,37)" fg:x="927" fg:w="3"/><text x="74.8276%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="74.5776%" y="709" width="0.2414%" height="15" fill="rgb(214,116,48)" fg:x="927" fg:w="3"/><text x="74.8276%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.6581%" y="693" width="0.1609%" height="15" fill="rgb(244,191,6)" fg:x="928" fg:w="2"/><text x="74.9081%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.6581%" y="677" width="0.1609%" height="15" fill="rgb(241,50,52)" fg:x="928" fg:w="2"/><text x="74.9081%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7385%" y="661" width="0.0805%" height="15" fill="rgb(236,75,39)" fg:x="929" fg:w="1"/><text x="74.9885%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.8190%" y="725" width="0.0805%" height="15" fill="rgb(236,99,0)" fg:x="930" fg:w="1"/><text x="75.0690%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.8190%" y="709" width="0.0805%" height="15" fill="rgb(207,202,15)" fg:x="930" fg:w="1"/><text x="75.0690%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.8190%" y="693" width="0.0805%" height="15" fill="rgb(233,207,14)" fg:x="930" fg:w="1"/><text x="75.0690%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8190%" y="677" width="0.0805%" height="15" fill="rgb(226,27,51)" fg:x="930" fg:w="1"/><text x="75.0690%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8190%" y="661" width="0.0805%" height="15" fill="rgb(206,104,42)" fg:x="930" fg:w="1"/><text x="75.0690%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8190%" y="645" width="0.0805%" height="15" fill="rgb(212,225,4)" fg:x="930" fg:w="1"/><text x="75.0690%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8190%" y="629" width="0.0805%" height="15" fill="rgb(233,96,42)" fg:x="930" fg:w="1"/><text x="75.0690%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8190%" y="613" width="0.0805%" height="15" fill="rgb(229,21,32)" fg:x="930" fg:w="1"/><text x="75.0690%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8190%" y="597" width="0.0805%" height="15" fill="rgb(226,216,24)" fg:x="930" fg:w="1"/><text x="75.0690%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8190%" y="581" width="0.0805%" height="15" fill="rgb(221,163,17)" fg:x="930" fg:w="1"/><text x="75.0690%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8190%" y="565" width="0.0805%" height="15" fill="rgb(216,216,42)" fg:x="930" fg:w="1"/><text x="75.0690%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8190%" y="549" width="0.0805%" height="15" fill="rgb(240,118,7)" fg:x="930" fg:w="1"/><text x="75.0690%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8190%" y="533" width="0.0805%" height="15" fill="rgb(221,67,37)" fg:x="930" fg:w="1"/><text x="75.0690%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8190%" y="517" width="0.0805%" height="15" fill="rgb(241,32,44)" fg:x="930" fg:w="1"/><text x="75.0690%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8190%" y="501" width="0.0805%" height="15" fill="rgb(235,204,43)" fg:x="930" fg:w="1"/><text x="75.0690%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8190%" y="485" width="0.0805%" height="15" fill="rgb(213,116,10)" fg:x="930" fg:w="1"/><text x="75.0690%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8190%" y="469" width="0.0805%" height="15" fill="rgb(239,15,48)" fg:x="930" fg:w="1"/><text x="75.0690%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8190%" y="453" width="0.0805%" height="15" fill="rgb(207,123,36)" fg:x="930" fg:w="1"/><text x="75.0690%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8190%" y="437" width="0.0805%" height="15" fill="rgb(209,103,30)" fg:x="930" fg:w="1"/><text x="75.0690%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.13%)</title><rect x="73.8536%" y="805" width="1.1263%" height="15" fill="rgb(238,100,19)" fg:x="918" fg:w="14"/><text x="74.1036%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="74.3363%" y="789" width="0.6436%" height="15" fill="rgb(244,30,14)" fg:x="924" fg:w="8"/><text x="74.5863%" y="799.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="74.8190%" y="773" width="0.1609%" height="15" fill="rgb(249,174,6)" fg:x="930" fg:w="2"/><text x="75.0690%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="74.8190%" y="757" width="0.1609%" height="15" fill="rgb(235,213,41)" fg:x="930" fg:w="2"/><text x="75.0690%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="74.8190%" y="741" width="0.1609%" height="15" fill="rgb(213,118,6)" fg:x="930" fg:w="2"/><text x="75.0690%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.8994%" y="725" width="0.0805%" height="15" fill="rgb(235,44,51)" fg:x="931" fg:w="1"/><text x="75.1494%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.8994%" y="709" width="0.0805%" height="15" fill="rgb(217,9,53)" fg:x="931" fg:w="1"/><text x="75.1494%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.8994%" y="693" width="0.0805%" height="15" fill="rgb(237,172,34)" fg:x="931" fg:w="1"/><text x="75.1494%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8994%" y="677" width="0.0805%" height="15" fill="rgb(206,206,11)" fg:x="931" fg:w="1"/><text x="75.1494%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8994%" y="661" width="0.0805%" height="15" fill="rgb(214,149,29)" fg:x="931" fg:w="1"/><text x="75.1494%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8994%" y="645" width="0.0805%" height="15" fill="rgb(208,123,3)" fg:x="931" fg:w="1"/><text x="75.1494%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8994%" y="629" width="0.0805%" height="15" fill="rgb(229,126,4)" fg:x="931" fg:w="1"/><text x="75.1494%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="74.9799%" y="773" width="0.1609%" height="15" fill="rgb(222,92,36)" fg:x="932" fg:w="2"/><text x="75.2299%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="74.9799%" y="757" width="0.1609%" height="15" fill="rgb(216,39,41)" fg:x="932" fg:w="2"/><text x="75.2299%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="74.9799%" y="741" width="0.1609%" height="15" fill="rgb(253,127,28)" fg:x="932" fg:w="2"/><text x="75.2299%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="725" width="0.1609%" height="15" fill="rgb(249,152,51)" fg:x="932" fg:w="2"/><text x="75.2299%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="74.9799%" y="709" width="0.1609%" height="15" fill="rgb(209,123,42)" fg:x="932" fg:w="2"/><text x="75.2299%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="693" width="0.1609%" height="15" fill="rgb(241,118,22)" fg:x="932" fg:w="2"/><text x="75.2299%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="677" width="0.1609%" height="15" fill="rgb(208,25,7)" fg:x="932" fg:w="2"/><text x="75.2299%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="661" width="0.1609%" height="15" fill="rgb(243,144,39)" fg:x="932" fg:w="2"/><text x="75.2299%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="74.9799%" y="645" width="0.1609%" height="15" fill="rgb(250,50,5)" fg:x="932" fg:w="2"/><text x="75.2299%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="629" width="0.1609%" height="15" fill="rgb(207,67,11)" fg:x="932" fg:w="2"/><text x="75.2299%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="74.9799%" y="613" width="0.1609%" height="15" fill="rgb(245,204,40)" fg:x="932" fg:w="2"/><text x="75.2299%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="74.9799%" y="597" width="0.1609%" height="15" fill="rgb(238,228,24)" fg:x="932" fg:w="2"/><text x="75.2299%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1408%" y="725" width="0.0805%" height="15" fill="rgb(217,116,22)" fg:x="934" fg:w="1"/><text x="75.3908%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1408%" y="709" width="0.0805%" height="15" fill="rgb(234,98,12)" fg:x="934" fg:w="1"/><text x="75.3908%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1408%" y="693" width="0.0805%" height="15" fill="rgb(242,170,50)" fg:x="934" fg:w="1"/><text x="75.3908%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1408%" y="677" width="0.0805%" height="15" fill="rgb(235,7,5)" fg:x="934" fg:w="1"/><text x="75.3908%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.1408%" y="661" width="0.0805%" height="15" fill="rgb(241,114,28)" fg:x="934" fg:w="1"/><text x="75.3908%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.1408%" y="645" width="0.0805%" height="15" fill="rgb(246,112,42)" fg:x="934" fg:w="1"/><text x="75.3908%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.1408%" y="629" width="0.0805%" height="15" fill="rgb(248,228,14)" fg:x="934" fg:w="1"/><text x="75.3908%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.1408%" y="613" width="0.0805%" height="15" fill="rgb(208,133,18)" fg:x="934" fg:w="1"/><text x="75.3908%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.1408%" y="597" width="0.0805%" height="15" fill="rgb(207,35,49)" fg:x="934" fg:w="1"/><text x="75.3908%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="75.1408%" y="581" width="0.0805%" height="15" fill="rgb(205,68,36)" fg:x="934" fg:w="1"/><text x="75.3908%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="75.1408%" y="565" width="0.0805%" height="15" fill="rgb(245,62,40)" fg:x="934" fg:w="1"/><text x="75.3908%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.2212%" y="565" width="0.0805%" height="15" fill="rgb(228,27,24)" fg:x="935" fg:w="1"/><text x="75.4712%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.1408%" y="773" width="0.2414%" height="15" fill="rgb(253,19,12)" fg:x="934" fg:w="3"/><text x="75.3908%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="75.1408%" y="757" width="0.2414%" height="15" fill="rgb(232,28,20)" fg:x="934" fg:w="3"/><text x="75.3908%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.1408%" y="741" width="0.2414%" height="15" fill="rgb(218,35,51)" fg:x="934" fg:w="3"/><text x="75.3908%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2212%" y="725" width="0.1609%" height="15" fill="rgb(212,90,40)" fg:x="935" fg:w="2"/><text x="75.4712%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2212%" y="709" width="0.1609%" height="15" fill="rgb(220,172,12)" fg:x="935" fg:w="2"/><text x="75.4712%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2212%" y="693" width="0.1609%" height="15" fill="rgb(226,159,20)" fg:x="935" fg:w="2"/><text x="75.4712%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2212%" y="677" width="0.1609%" height="15" fill="rgb(234,205,16)" fg:x="935" fg:w="2"/><text x="75.4712%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.2212%" y="661" width="0.1609%" height="15" fill="rgb(207,9,39)" fg:x="935" fg:w="2"/><text x="75.4712%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2212%" y="645" width="0.1609%" height="15" fill="rgb(249,143,15)" fg:x="935" fg:w="2"/><text x="75.4712%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2212%" y="629" width="0.1609%" height="15" fill="rgb(253,133,29)" fg:x="935" fg:w="2"/><text x="75.4712%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2212%" y="613" width="0.1609%" height="15" fill="rgb(221,187,0)" fg:x="935" fg:w="2"/><text x="75.4712%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.2212%" y="597" width="0.1609%" height="15" fill="rgb(205,204,26)" fg:x="935" fg:w="2"/><text x="75.4712%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.2212%" y="581" width="0.1609%" height="15" fill="rgb(224,68,54)" fg:x="935" fg:w="2"/><text x="75.4712%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.3017%" y="565" width="0.0805%" height="15" fill="rgb(209,67,4)" fg:x="936" fg:w="1"/><text x="75.5517%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.3017%" y="549" width="0.0805%" height="15" fill="rgb(228,229,18)" fg:x="936" fg:w="1"/><text x="75.5517%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="75.3821%" y="773" width="0.1609%" height="15" fill="rgb(231,89,13)" fg:x="937" fg:w="2"/><text x="75.6321%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="75.3821%" y="757" width="0.1609%" height="15" fill="rgb(210,182,18)" fg:x="937" fg:w="2"/><text x="75.6321%" y="767.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3821%" y="741" width="0.1609%" height="15" fill="rgb(240,105,2)" fg:x="937" fg:w="2"/><text x="75.6321%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.3821%" y="725" width="0.1609%" height="15" fill="rgb(207,170,50)" fg:x="937" fg:w="2"/><text x="75.6321%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4626%" y="709" width="0.0805%" height="15" fill="rgb(232,133,24)" fg:x="938" fg:w="1"/><text x="75.7126%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4626%" y="693" width="0.0805%" height="15" fill="rgb(235,166,27)" fg:x="938" fg:w="1"/><text x="75.7126%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5430%" y="629" width="0.0805%" height="15" fill="rgb(209,19,13)" fg:x="939" fg:w="1"/><text x="75.7930%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5430%" y="613" width="0.0805%" height="15" fill="rgb(226,79,39)" fg:x="939" fg:w="1"/><text x="75.7930%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="74.9799%" y="805" width="0.7241%" height="15" fill="rgb(222,163,10)" fg:x="932" fg:w="9"/><text x="75.2299%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="74.9799%" y="789" width="0.7241%" height="15" fill="rgb(214,44,19)" fg:x="932" fg:w="9"/><text x="75.2299%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="75.5430%" y="773" width="0.1609%" height="15" fill="rgb(210,217,13)" fg:x="939" fg:w="2"/><text x="75.7930%" y="783.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="75.5430%" y="757" width="0.1609%" height="15" fill="rgb(237,61,54)" fg:x="939" fg:w="2"/><text x="75.7930%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="75.5430%" y="741" width="0.1609%" height="15" fill="rgb(226,184,24)" fg:x="939" fg:w="2"/><text x="75.7930%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.5430%" y="725" width="0.1609%" height="15" fill="rgb(223,226,4)" fg:x="939" fg:w="2"/><text x="75.7930%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.5430%" y="709" width="0.1609%" height="15" fill="rgb(210,26,41)" fg:x="939" fg:w="2"/><text x="75.7930%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5430%" y="693" width="0.1609%" height="15" fill="rgb(220,221,6)" fg:x="939" fg:w="2"/><text x="75.7930%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5430%" y="677" width="0.1609%" height="15" fill="rgb(225,89,49)" fg:x="939" fg:w="2"/><text x="75.7930%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5430%" y="661" width="0.1609%" height="15" fill="rgb(218,70,45)" fg:x="939" fg:w="2"/><text x="75.7930%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5430%" y="645" width="0.1609%" height="15" fill="rgb(238,166,21)" fg:x="939" fg:w="2"/><text x="75.7930%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.6235%" y="629" width="0.0805%" height="15" fill="rgb(224,141,44)" fg:x="940" fg:w="1"/><text x="75.8735%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6235%" y="613" width="0.0805%" height="15" fill="rgb(230,12,49)" fg:x="940" fg:w="1"/><text x="75.8735%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.7039%" y="773" width="0.0805%" height="15" fill="rgb(212,174,12)" fg:x="941" fg:w="1"/><text x="75.9539%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.7039%" y="757" width="0.0805%" height="15" fill="rgb(246,67,9)" fg:x="941" fg:w="1"/><text x="75.9539%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.7039%" y="741" width="0.0805%" height="15" fill="rgb(239,35,23)" fg:x="941" fg:w="1"/><text x="75.9539%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="75.7039%" y="805" width="0.2414%" height="15" fill="rgb(211,167,0)" fg:x="941" fg:w="3"/><text x="75.9539%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="75.7039%" y="789" width="0.2414%" height="15" fill="rgb(225,119,45)" fg:x="941" fg:w="3"/><text x="75.9539%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="75.7844%" y="773" width="0.1609%" height="15" fill="rgb(210,162,6)" fg:x="942" fg:w="2"/><text x="76.0344%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.8648%" y="757" width="0.0805%" height="15" fill="rgb(208,118,35)" fg:x="943" fg:w="1"/><text x="76.1148%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8648%" y="741" width="0.0805%" height="15" fill="rgb(239,4,53)" fg:x="943" fg:w="1"/><text x="76.1148%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8648%" y="725" width="0.0805%" height="15" fill="rgb(213,130,21)" fg:x="943" fg:w="1"/><text x="76.1148%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8648%" y="709" width="0.0805%" height="15" fill="rgb(235,148,0)" fg:x="943" fg:w="1"/><text x="76.1148%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8648%" y="693" width="0.0805%" height="15" fill="rgb(244,224,18)" fg:x="943" fg:w="1"/><text x="76.1148%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.8648%" y="677" width="0.0805%" height="15" fill="rgb(211,214,4)" fg:x="943" fg:w="1"/><text x="76.1148%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9453%" y="709" width="0.0805%" height="15" fill="rgb(206,119,25)" fg:x="944" fg:w="1"/><text x="76.1953%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9453%" y="693" width="0.0805%" height="15" fill="rgb(243,93,47)" fg:x="944" fg:w="1"/><text x="76.1953%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9453%" y="677" width="0.0805%" height="15" fill="rgb(224,194,6)" fg:x="944" fg:w="1"/><text x="76.1953%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="75.9453%" y="789" width="0.1609%" height="15" fill="rgb(243,229,6)" fg:x="944" fg:w="2"/><text x="76.1953%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.9453%" y="773" width="0.1609%" height="15" fill="rgb(207,23,50)" fg:x="944" fg:w="2"/><text x="76.1953%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.9453%" y="757" width="0.1609%" height="15" fill="rgb(253,192,32)" fg:x="944" fg:w="2"/><text x="76.1953%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.9453%" y="741" width="0.1609%" height="15" fill="rgb(213,21,6)" fg:x="944" fg:w="2"/><text x="76.1953%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.9453%" y="725" width="0.1609%" height="15" fill="rgb(243,151,13)" fg:x="944" fg:w="2"/><text x="76.1953%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0257%" y="709" width="0.0805%" height="15" fill="rgb(233,165,41)" fg:x="945" fg:w="1"/><text x="76.2757%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0257%" y="693" width="0.0805%" height="15" fill="rgb(246,176,45)" fg:x="945" fg:w="1"/><text x="76.2757%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.0257%" y="677" width="0.0805%" height="15" fill="rgb(217,170,52)" fg:x="945" fg:w="1"/><text x="76.2757%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.0257%" y="661" width="0.0805%" height="15" fill="rgb(214,203,54)" fg:x="945" fg:w="1"/><text x="76.2757%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.0257%" y="645" width="0.0805%" height="15" fill="rgb(248,215,49)" fg:x="945" fg:w="1"/><text x="76.2757%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.0257%" y="629" width="0.0805%" height="15" fill="rgb(208,46,10)" fg:x="945" fg:w="1"/><text x="76.2757%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.0257%" y="613" width="0.0805%" height="15" fill="rgb(254,5,31)" fg:x="945" fg:w="1"/><text x="76.2757%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="76.1062%" y="725" width="0.0805%" height="15" fill="rgb(222,104,33)" fg:x="946" fg:w="1"/><text x="76.3562%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="76.1062%" y="709" width="0.0805%" height="15" fill="rgb(248,49,16)" fg:x="946" fg:w="1"/><text x="76.3562%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.1062%" y="693" width="0.0805%" height="15" fill="rgb(232,198,41)" fg:x="946" fg:w="1"/><text x="76.3562%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="76.1062%" y="741" width="0.1609%" height="15" fill="rgb(214,125,3)" fg:x="946" fg:w="2"/><text x="76.3562%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="76.1866%" y="725" width="0.0805%" height="15" fill="rgb(229,220,28)" fg:x="947" fg:w="1"/><text x="76.4366%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.1866%" y="709" width="0.0805%" height="15" fill="rgb(222,64,37)" fg:x="947" fg:w="1"/><text x="76.4366%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.1866%" y="693" width="0.0805%" height="15" fill="rgb(249,184,13)" fg:x="947" fg:w="1"/><text x="76.4366%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.1866%" y="677" width="0.0805%" height="15" fill="rgb(252,176,6)" fg:x="947" fg:w="1"/><text x="76.4366%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.1866%" y="661" width="0.0805%" height="15" fill="rgb(228,153,7)" fg:x="947" fg:w="1"/><text x="76.4366%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.1866%" y="645" width="0.0805%" height="15" fill="rgb(242,193,5)" fg:x="947" fg:w="1"/><text x="76.4366%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.1866%" y="629" width="0.0805%" height="15" fill="rgb(232,140,9)" fg:x="947" fg:w="1"/><text x="76.4366%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.1866%" y="613" width="0.0805%" height="15" fill="rgb(213,222,16)" fg:x="947" fg:w="1"/><text x="76.4366%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.1866%" y="597" width="0.0805%" height="15" fill="rgb(222,75,50)" fg:x="947" fg:w="1"/><text x="76.4366%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.1866%" y="581" width="0.0805%" height="15" fill="rgb(205,180,2)" fg:x="947" fg:w="1"/><text x="76.4366%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.1866%" y="565" width="0.0805%" height="15" fill="rgb(216,34,7)" fg:x="947" fg:w="1"/><text x="76.4366%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.1866%" y="549" width="0.0805%" height="15" fill="rgb(253,16,32)" fg:x="947" fg:w="1"/><text x="76.4366%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1866%" y="533" width="0.0805%" height="15" fill="rgb(208,97,28)" fg:x="947" fg:w="1"/><text x="76.4366%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2671%" y="597" width="0.0805%" height="15" fill="rgb(225,92,11)" fg:x="948" fg:w="1"/><text x="76.5171%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="76.2671%" y="741" width="0.1609%" height="15" fill="rgb(243,38,12)" fg:x="948" fg:w="2"/><text x="76.5171%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="76.2671%" y="725" width="0.1609%" height="15" fill="rgb(208,139,16)" fg:x="948" fg:w="2"/><text x="76.5171%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.2671%" y="709" width="0.1609%" height="15" fill="rgb(227,24,9)" fg:x="948" fg:w="2"/><text x="76.5171%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.2671%" y="693" width="0.1609%" height="15" fill="rgb(206,62,11)" fg:x="948" fg:w="2"/><text x="76.5171%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.2671%" y="677" width="0.1609%" height="15" fill="rgb(228,134,27)" fg:x="948" fg:w="2"/><text x="76.5171%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.2671%" y="661" width="0.1609%" height="15" fill="rgb(205,55,33)" fg:x="948" fg:w="2"/><text x="76.5171%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.2671%" y="645" width="0.1609%" height="15" fill="rgb(243,75,43)" fg:x="948" fg:w="2"/><text x="76.5171%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.2671%" y="629" width="0.1609%" height="15" fill="rgb(223,27,42)" fg:x="948" fg:w="2"/><text x="76.5171%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.2671%" y="613" width="0.1609%" height="15" fill="rgb(232,189,33)" fg:x="948" fg:w="2"/><text x="76.5171%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3475%" y="597" width="0.0805%" height="15" fill="rgb(210,9,39)" fg:x="949" fg:w="1"/><text x="76.5975%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3475%" y="581" width="0.0805%" height="15" fill="rgb(242,85,26)" fg:x="949" fg:w="1"/><text x="76.5975%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.3475%" y="565" width="0.0805%" height="15" fill="rgb(248,44,4)" fg:x="949" fg:w="1"/><text x="76.5975%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.3475%" y="549" width="0.0805%" height="15" fill="rgb(250,96,46)" fg:x="949" fg:w="1"/><text x="76.5975%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.3475%" y="533" width="0.0805%" height="15" fill="rgb(229,116,26)" fg:x="949" fg:w="1"/><text x="76.5975%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3475%" y="517" width="0.0805%" height="15" fill="rgb(246,94,34)" fg:x="949" fg:w="1"/><text x="76.5975%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3475%" y="501" width="0.0805%" height="15" fill="rgb(251,73,21)" fg:x="949" fg:w="1"/><text x="76.5975%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.3475%" y="485" width="0.0805%" height="15" fill="rgb(254,121,25)" fg:x="949" fg:w="1"/><text x="76.5975%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.3475%" y="469" width="0.0805%" height="15" fill="rgb(215,161,49)" fg:x="949" fg:w="1"/><text x="76.5975%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.3475%" y="453" width="0.0805%" height="15" fill="rgb(221,43,13)" fg:x="949" fg:w="1"/><text x="76.5975%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.3475%" y="437" width="0.0805%" height="15" fill="rgb(249,5,37)" fg:x="949" fg:w="1"/><text x="76.5975%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3475%" y="421" width="0.0805%" height="15" fill="rgb(226,25,44)" fg:x="949" fg:w="1"/><text x="76.5975%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="661" width="0.0805%" height="15" fill="rgb(238,189,16)" fg:x="951" fg:w="1"/><text x="76.7584%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5084%" y="645" width="0.0805%" height="15" fill="rgb(251,186,8)" fg:x="951" fg:w="1"/><text x="76.7584%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5084%" y="629" width="0.0805%" height="15" fill="rgb(254,34,31)" fg:x="951" fg:w="1"/><text x="76.7584%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5084%" y="613" width="0.0805%" height="15" fill="rgb(225,215,27)" fg:x="951" fg:w="1"/><text x="76.7584%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.5084%" y="597" width="0.0805%" height="15" fill="rgb(221,192,48)" fg:x="951" fg:w="1"/><text x="76.7584%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.5084%" y="581" width="0.0805%" height="15" fill="rgb(219,137,20)" fg:x="951" fg:w="1"/><text x="76.7584%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.5084%" y="565" width="0.0805%" height="15" fill="rgb(219,84,11)" fg:x="951" fg:w="1"/><text x="76.7584%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.5084%" y="549" width="0.0805%" height="15" fill="rgb(224,10,23)" fg:x="951" fg:w="1"/><text x="76.7584%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.5084%" y="533" width="0.0805%" height="15" fill="rgb(248,22,39)" fg:x="951" fg:w="1"/><text x="76.7584%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.5084%" y="709" width="0.1609%" height="15" fill="rgb(212,154,20)" fg:x="951" fg:w="2"/><text x="76.7584%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.5084%" y="693" width="0.1609%" height="15" fill="rgb(236,199,50)" fg:x="951" fg:w="2"/><text x="76.7584%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.5084%" y="677" width="0.1609%" height="15" fill="rgb(211,9,17)" fg:x="951" fg:w="2"/><text x="76.7584%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5889%" y="661" width="0.0805%" height="15" fill="rgb(243,216,36)" fg:x="952" fg:w="1"/><text x="76.8389%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5889%" y="645" width="0.0805%" height="15" fill="rgb(250,2,10)" fg:x="952" fg:w="1"/><text x="76.8389%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.5889%" y="629" width="0.0805%" height="15" fill="rgb(226,50,48)" fg:x="952" fg:w="1"/><text x="76.8389%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.5889%" y="613" width="0.0805%" height="15" fill="rgb(243,81,16)" fg:x="952" fg:w="1"/><text x="76.8389%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.6693%" y="709" width="0.0805%" height="15" fill="rgb(250,14,2)" fg:x="953" fg:w="1"/><text x="76.9193%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.6693%" y="693" width="0.0805%" height="15" fill="rgb(233,135,29)" fg:x="953" fg:w="1"/><text x="76.9193%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.6693%" y="677" width="0.0805%" height="15" fill="rgb(224,64,43)" fg:x="953" fg:w="1"/><text x="76.9193%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="76.6693%" y="661" width="0.0805%" height="15" fill="rgb(238,84,13)" fg:x="953" fg:w="1"/><text x="76.9193%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="629" width="0.0805%" height="15" fill="rgb(253,48,26)" fg:x="955" fg:w="1"/><text x="77.0802%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="613" width="0.0805%" height="15" fill="rgb(205,223,31)" fg:x="955" fg:w="1"/><text x="77.0802%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8302%" y="597" width="0.0805%" height="15" fill="rgb(221,41,32)" fg:x="955" fg:w="1"/><text x="77.0802%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8302%" y="581" width="0.0805%" height="15" fill="rgb(213,158,31)" fg:x="955" fg:w="1"/><text x="77.0802%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.8302%" y="661" width="0.1609%" height="15" fill="rgb(245,126,43)" fg:x="955" fg:w="2"/><text x="77.0802%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.8302%" y="645" width="0.1609%" height="15" fill="rgb(227,7,22)" fg:x="955" fg:w="2"/><text x="77.0802%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="629" width="0.0805%" height="15" fill="rgb(252,90,44)" fg:x="956" fg:w="1"/><text x="77.1607%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="613" width="0.0805%" height="15" fill="rgb(253,91,0)" fg:x="956" fg:w="1"/><text x="77.1607%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9107%" y="597" width="0.0805%" height="15" fill="rgb(252,175,49)" fg:x="956" fg:w="1"/><text x="77.1607%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.9107%" y="581" width="0.0805%" height="15" fill="rgb(246,150,1)" fg:x="956" fg:w="1"/><text x="77.1607%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9912%" y="629" width="0.0805%" height="15" fill="rgb(241,192,25)" fg:x="957" fg:w="1"/><text x="77.2412%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.9912%" y="613" width="0.0805%" height="15" fill="rgb(239,187,11)" fg:x="957" fg:w="1"/><text x="77.2412%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.9912%" y="597" width="0.0805%" height="15" fill="rgb(218,202,51)" fg:x="957" fg:w="1"/><text x="77.2412%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9912%" y="581" width="0.0805%" height="15" fill="rgb(225,176,8)" fg:x="957" fg:w="1"/><text x="77.2412%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0716%" y="597" width="0.0805%" height="15" fill="rgb(219,122,41)" fg:x="958" fg:w="1"/><text x="77.3216%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1521%" y="533" width="0.0805%" height="15" fill="rgb(248,140,20)" fg:x="959" fg:w="1"/><text x="77.4021%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="77.1521%" y="517" width="0.0805%" height="15" fill="rgb(245,41,37)" fg:x="959" fg:w="1"/><text x="77.4021%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.1521%" y="501" width="0.0805%" height="15" fill="rgb(235,82,39)" fg:x="959" fg:w="1"/><text x="77.4021%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.1521%" y="485" width="0.0805%" height="15" fill="rgb(230,108,42)" fg:x="959" fg:w="1"/><text x="77.4021%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="77.1521%" y="469" width="0.0805%" height="15" fill="rgb(215,150,50)" fg:x="959" fg:w="1"/><text x="77.4021%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="76.7498%" y="709" width="0.5632%" height="15" fill="rgb(233,212,5)" fg:x="954" fg:w="7"/><text x="76.9998%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="76.7498%" y="693" width="0.5632%" height="15" fill="rgb(245,80,22)" fg:x="954" fg:w="7"/><text x="76.9998%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="76.7498%" y="677" width="0.5632%" height="15" fill="rgb(238,129,16)" fg:x="954" fg:w="7"/><text x="76.9998%" y="687.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="76.9912%" y="661" width="0.3218%" height="15" fill="rgb(240,19,0)" fg:x="957" fg:w="4"/><text x="77.2412%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="76.9912%" y="645" width="0.3218%" height="15" fill="rgb(232,42,35)" fg:x="957" fg:w="4"/><text x="77.2412%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="77.0716%" y="629" width="0.2414%" height="15" fill="rgb(223,130,24)" fg:x="958" fg:w="3"/><text x="77.3216%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="77.0716%" y="613" width="0.2414%" height="15" fill="rgb(237,16,22)" fg:x="958" fg:w="3"/><text x="77.3216%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="77.1521%" y="597" width="0.1609%" height="15" fill="rgb(248,192,20)" fg:x="959" fg:w="2"/><text x="77.4021%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.1521%" y="581" width="0.1609%" height="15" fill="rgb(233,167,2)" fg:x="959" fg:w="2"/><text x="77.4021%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="77.1521%" y="565" width="0.1609%" height="15" fill="rgb(252,71,44)" fg:x="959" fg:w="2"/><text x="77.4021%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="77.1521%" y="549" width="0.1609%" height="15" fill="rgb(238,37,47)" fg:x="959" fg:w="2"/><text x="77.4021%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2325%" y="533" width="0.0805%" height="15" fill="rgb(214,202,54)" fg:x="960" fg:w="1"/><text x="77.4825%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="76.5084%" y="725" width="0.8850%" height="15" fill="rgb(254,165,40)" fg:x="951" fg:w="11"/><text x="76.7584%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="77.3130%" y="709" width="0.0805%" height="15" fill="rgb(246,173,38)" fg:x="961" fg:w="1"/><text x="77.5630%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3130%" y="693" width="0.0805%" height="15" fill="rgb(215,3,27)" fg:x="961" fg:w="1"/><text x="77.5630%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3130%" y="677" width="0.0805%" height="15" fill="rgb(239,169,51)" fg:x="961" fg:w="1"/><text x="77.5630%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.3130%" y="661" width="0.0805%" height="15" fill="rgb(212,5,25)" fg:x="961" fg:w="1"/><text x="77.5630%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.3130%" y="645" width="0.0805%" height="15" fill="rgb(243,45,17)" fg:x="961" fg:w="1"/><text x="77.5630%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.3130%" y="629" width="0.0805%" height="15" fill="rgb(242,97,9)" fg:x="961" fg:w="1"/><text x="77.5630%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.3934%" y="709" width="0.0805%" height="15" fill="rgb(228,71,31)" fg:x="962" fg:w="1"/><text x="77.6434%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.3934%" y="693" width="0.0805%" height="15" fill="rgb(252,184,16)" fg:x="962" fg:w="1"/><text x="77.6434%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.3934%" y="677" width="0.0805%" height="15" fill="rgb(236,169,46)" fg:x="962" fg:w="1"/><text x="77.6434%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.3934%" y="661" width="0.0805%" height="15" fill="rgb(207,17,47)" fg:x="962" fg:w="1"/><text x="77.6434%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3934%" y="645" width="0.0805%" height="15" fill="rgb(206,201,28)" fg:x="962" fg:w="1"/><text x="77.6434%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (15 samples, 1.21%)</title><rect x="76.4280%" y="741" width="1.2068%" height="15" fill="rgb(224,184,23)" fg:x="950" fg:w="15"/><text x="76.6780%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="77.3934%" y="725" width="0.2414%" height="15" fill="rgb(208,139,48)" fg:x="962" fg:w="3"/><text x="77.6434%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="77.4739%" y="709" width="0.1609%" height="15" fill="rgb(208,130,10)" fg:x="963" fg:w="2"/><text x="77.7239%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="77.4739%" y="693" width="0.1609%" height="15" fill="rgb(211,213,45)" fg:x="963" fg:w="2"/><text x="77.7239%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.4739%" y="677" width="0.1609%" height="15" fill="rgb(235,100,30)" fg:x="963" fg:w="2"/><text x="77.7239%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="77.4739%" y="661" width="0.1609%" height="15" fill="rgb(206,144,31)" fg:x="963" fg:w="2"/><text x="77.7239%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.4739%" y="645" width="0.1609%" height="15" fill="rgb(224,200,26)" fg:x="963" fg:w="2"/><text x="77.7239%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5543%" y="629" width="0.0805%" height="15" fill="rgb(247,104,53)" fg:x="964" fg:w="1"/><text x="77.8043%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.61%)</title><rect x="76.1062%" y="789" width="1.6090%" height="15" fill="rgb(220,14,17)" fg:x="946" fg:w="20"/><text x="76.3562%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.61%)</title><rect x="76.1062%" y="773" width="1.6090%" height="15" fill="rgb(230,140,40)" fg:x="946" fg:w="20"/><text x="76.3562%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="76.1062%" y="757" width="1.6090%" height="15" fill="rgb(229,2,41)" fg:x="946" fg:w="20"/><text x="76.3562%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="77.6348%" y="741" width="0.0805%" height="15" fill="rgb(232,89,16)" fg:x="965" fg:w="1"/><text x="77.8848%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="77.6348%" y="725" width="0.0805%" height="15" fill="rgb(247,59,52)" fg:x="965" fg:w="1"/><text x="77.8848%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.6348%" y="709" width="0.0805%" height="15" fill="rgb(226,110,21)" fg:x="965" fg:w="1"/><text x="77.8848%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.6348%" y="693" width="0.0805%" height="15" fill="rgb(224,176,43)" fg:x="965" fg:w="1"/><text x="77.8848%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6348%" y="677" width="0.0805%" height="15" fill="rgb(221,73,6)" fg:x="965" fg:w="1"/><text x="77.8848%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6348%" y="661" width="0.0805%" height="15" fill="rgb(232,78,19)" fg:x="965" fg:w="1"/><text x="77.8848%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6348%" y="645" width="0.0805%" height="15" fill="rgb(233,112,48)" fg:x="965" fg:w="1"/><text x="77.8848%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6348%" y="629" width="0.0805%" height="15" fill="rgb(243,131,47)" fg:x="965" fg:w="1"/><text x="77.8848%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.6348%" y="613" width="0.0805%" height="15" fill="rgb(226,51,1)" fg:x="965" fg:w="1"/><text x="77.8848%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6348%" y="597" width="0.0805%" height="15" fill="rgb(247,58,7)" fg:x="965" fg:w="1"/><text x="77.8848%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6348%" y="581" width="0.0805%" height="15" fill="rgb(209,7,32)" fg:x="965" fg:w="1"/><text x="77.8848%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6348%" y="565" width="0.0805%" height="15" fill="rgb(209,39,41)" fg:x="965" fg:w="1"/><text x="77.8848%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.6348%" y="549" width="0.0805%" height="15" fill="rgb(226,182,46)" fg:x="965" fg:w="1"/><text x="77.8848%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6348%" y="533" width="0.0805%" height="15" fill="rgb(230,219,10)" fg:x="965" fg:w="1"/><text x="77.8848%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="77.7152%" y="789" width="0.0805%" height="15" fill="rgb(227,175,30)" fg:x="966" fg:w="1"/><text x="77.9652%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="77.7152%" y="773" width="0.0805%" height="15" fill="rgb(217,2,50)" fg:x="966" fg:w="1"/><text x="77.9652%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7957%" y="757" width="0.0805%" height="15" fill="rgb(229,160,0)" fg:x="967" fg:w="1"/><text x="78.0457%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="77.7957%" y="773" width="0.1609%" height="15" fill="rgb(207,78,37)" fg:x="967" fg:w="2"/><text x="78.0457%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.8761%" y="757" width="0.0805%" height="15" fill="rgb(225,57,0)" fg:x="968" fg:w="1"/><text x="78.1261%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.8761%" y="741" width="0.0805%" height="15" fill="rgb(232,154,2)" fg:x="968" fg:w="1"/><text x="78.1261%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="77.9566%" y="725" width="0.2414%" height="15" fill="rgb(241,212,25)" fg:x="969" fg:w="3"/><text x="78.2066%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="77.9566%" y="709" width="0.2414%" height="15" fill="rgb(226,69,20)" fg:x="969" fg:w="3"/><text x="78.2066%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="78.0370%" y="693" width="0.1609%" height="15" fill="rgb(247,184,54)" fg:x="970" fg:w="2"/><text x="78.2870%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.1175%" y="677" width="0.0805%" height="15" fill="rgb(210,145,0)" fg:x="971" fg:w="1"/><text x="78.3675%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.1175%" y="661" width="0.0805%" height="15" fill="rgb(253,82,12)" fg:x="971" fg:w="1"/><text x="78.3675%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.1979%" y="661" width="0.0805%" height="15" fill="rgb(245,42,11)" fg:x="972" fg:w="1"/><text x="78.4479%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.1979%" y="645" width="0.0805%" height="15" fill="rgb(219,147,32)" fg:x="972" fg:w="1"/><text x="78.4479%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.1979%" y="629" width="0.0805%" height="15" fill="rgb(246,12,7)" fg:x="972" fg:w="1"/><text x="78.4479%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1979%" y="613" width="0.0805%" height="15" fill="rgb(243,50,9)" fg:x="972" fg:w="1"/><text x="78.4479%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.2784%" y="629" width="0.0805%" height="15" fill="rgb(219,149,6)" fg:x="973" fg:w="1"/><text x="78.5284%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.2784%" y="613" width="0.0805%" height="15" fill="rgb(241,51,42)" fg:x="973" fg:w="1"/><text x="78.5284%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.4393%" y="597" width="0.0805%" height="15" fill="rgb(226,128,27)" fg:x="975" fg:w="1"/><text x="78.6893%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.4393%" y="581" width="0.0805%" height="15" fill="rgb(244,144,4)" fg:x="975" fg:w="1"/><text x="78.6893%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.4393%" y="565" width="0.0805%" height="15" fill="rgb(221,4,13)" fg:x="975" fg:w="1"/><text x="78.6893%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4393%" y="549" width="0.0805%" height="15" fill="rgb(208,170,28)" fg:x="975" fg:w="1"/><text x="78.6893%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="78.3588%" y="629" width="0.4023%" height="15" fill="rgb(226,131,13)" fg:x="974" fg:w="5"/><text x="78.6088%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="78.3588%" y="613" width="0.4023%" height="15" fill="rgb(215,72,41)" fg:x="974" fg:w="5"/><text x="78.6088%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.5197%" y="597" width="0.2414%" height="15" fill="rgb(243,108,20)" fg:x="976" fg:w="3"/><text x="78.7697%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="78.5197%" y="581" width="0.2414%" height="15" fill="rgb(230,189,17)" fg:x="976" fg:w="3"/><text x="78.7697%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.5197%" y="565" width="0.2414%" height="15" fill="rgb(220,50,17)" fg:x="976" fg:w="3"/><text x="78.7697%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="78.5197%" y="549" width="0.2414%" height="15" fill="rgb(248,152,48)" fg:x="976" fg:w="3"/><text x="78.7697%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="78.5197%" y="533" width="0.2414%" height="15" fill="rgb(244,91,11)" fg:x="976" fg:w="3"/><text x="78.7697%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="78.5197%" y="517" width="0.2414%" height="15" fill="rgb(220,157,5)" fg:x="976" fg:w="3"/><text x="78.7697%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="78.5197%" y="501" width="0.2414%" height="15" fill="rgb(253,137,8)" fg:x="976" fg:w="3"/><text x="78.7697%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="78.5197%" y="485" width="0.2414%" height="15" fill="rgb(217,137,51)" fg:x="976" fg:w="3"/><text x="78.7697%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="78.2784%" y="661" width="0.7241%" height="15" fill="rgb(218,209,53)" fg:x="973" fg:w="9"/><text x="78.5284%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="78.2784%" y="645" width="0.7241%" height="15" fill="rgb(249,137,25)" fg:x="973" fg:w="9"/><text x="78.5284%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="78.7611%" y="629" width="0.2414%" height="15" fill="rgb(239,155,26)" fg:x="979" fg:w="3"/><text x="79.0111%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.8415%" y="613" width="0.1609%" height="15" fill="rgb(227,85,46)" fg:x="980" fg:w="2"/><text x="79.0915%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="78.1979%" y="693" width="0.9654%" height="15" fill="rgb(251,107,43)" fg:x="972" fg:w="12"/><text x="78.4479%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="78.1979%" y="677" width="0.9654%" height="15" fill="rgb(234,170,33)" fg:x="972" fg:w="12"/><text x="78.4479%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.0024%" y="661" width="0.1609%" height="15" fill="rgb(206,29,35)" fg:x="982" fg:w="2"/><text x="79.2524%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.0024%" y="645" width="0.1609%" height="15" fill="rgb(227,138,25)" fg:x="982" fg:w="2"/><text x="79.2524%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.0829%" y="629" width="0.0805%" height="15" fill="rgb(249,131,35)" fg:x="983" fg:w="1"/><text x="79.3329%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1633%" y="629" width="0.0805%" height="15" fill="rgb(239,6,40)" fg:x="984" fg:w="1"/><text x="79.4133%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1633%" y="613" width="0.0805%" height="15" fill="rgb(246,136,47)" fg:x="984" fg:w="1"/><text x="79.4133%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.1633%" y="693" width="0.1609%" height="15" fill="rgb(253,58,26)" fg:x="984" fg:w="2"/><text x="79.4133%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="79.1633%" y="677" width="0.1609%" height="15" fill="rgb(237,141,10)" fg:x="984" fg:w="2"/><text x="79.4133%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.1633%" y="661" width="0.1609%" height="15" fill="rgb(234,156,12)" fg:x="984" fg:w="2"/><text x="79.4133%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.1633%" y="645" width="0.1609%" height="15" fill="rgb(243,224,36)" fg:x="984" fg:w="2"/><text x="79.4133%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2438%" y="629" width="0.0805%" height="15" fill="rgb(205,229,51)" fg:x="985" fg:w="1"/><text x="79.4938%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.2438%" y="613" width="0.0805%" height="15" fill="rgb(223,189,4)" fg:x="985" fg:w="1"/><text x="79.4938%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.2438%" y="597" width="0.0805%" height="15" fill="rgb(249,167,54)" fg:x="985" fg:w="1"/><text x="79.4938%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="79.3242%" y="693" width="0.0805%" height="15" fill="rgb(218,34,28)" fg:x="986" fg:w="1"/><text x="79.5742%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.5656%" y="645" width="0.1609%" height="15" fill="rgb(232,109,42)" fg:x="989" fg:w="2"/><text x="79.8156%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.5656%" y="629" width="0.1609%" height="15" fill="rgb(248,214,46)" fg:x="989" fg:w="2"/><text x="79.8156%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.7265%" y="565" width="0.0805%" height="15" fill="rgb(244,216,40)" fg:x="991" fg:w="1"/><text x="79.9765%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.7265%" y="597" width="0.1609%" height="15" fill="rgb(231,226,31)" fg:x="991" fg:w="2"/><text x="79.9765%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.7265%" y="581" width="0.1609%" height="15" fill="rgb(238,38,43)" fg:x="991" fg:w="2"/><text x="79.9765%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.8069%" y="565" width="0.0805%" height="15" fill="rgb(208,88,43)" fg:x="992" fg:w="1"/><text x="80.0569%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.8874%" y="597" width="0.0805%" height="15" fill="rgb(205,136,37)" fg:x="993" fg:w="1"/><text x="80.1374%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8874%" y="581" width="0.0805%" height="15" fill="rgb(237,34,14)" fg:x="993" fg:w="1"/><text x="80.1374%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.8874%" y="565" width="0.0805%" height="15" fill="rgb(236,193,44)" fg:x="993" fg:w="1"/><text x="80.1374%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0483%" y="565" width="0.0805%" height="15" fill="rgb(231,48,10)" fg:x="995" fg:w="1"/><text x="80.2983%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.0483%" y="581" width="0.1609%" height="15" fill="rgb(213,141,34)" fg:x="995" fg:w="2"/><text x="80.2983%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1287%" y="565" width="0.0805%" height="15" fill="rgb(249,130,34)" fg:x="996" fg:w="1"/><text x="80.3787%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.1287%" y="549" width="0.0805%" height="15" fill="rgb(219,42,41)" fg:x="996" fg:w="1"/><text x="80.3787%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1287%" y="533" width="0.0805%" height="15" fill="rgb(224,100,54)" fg:x="996" fg:w="1"/><text x="80.3787%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.1287%" y="517" width="0.0805%" height="15" fill="rgb(229,200,27)" fg:x="996" fg:w="1"/><text x="80.3787%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="79.7265%" y="613" width="0.5632%" height="15" fill="rgb(217,118,10)" fg:x="991" fg:w="7"/><text x="79.9765%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="79.9678%" y="597" width="0.3218%" height="15" fill="rgb(206,22,3)" fg:x="994" fg:w="4"/><text x="80.2178%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2092%" y="581" width="0.0805%" height="15" fill="rgb(232,163,46)" fg:x="997" fg:w="1"/><text x="80.4592%" y="591.50"></text></g><g><title>engine::session::Session::flush (32 samples, 2.57%)</title><rect x="77.7957%" y="789" width="2.5744%" height="15" fill="rgb(206,95,13)" fg:x="967" fg:w="32"/><text x="78.0457%" y="799.50">en..</text></g><g><title>engine::session::Session::save_changes (30 samples, 2.41%)</title><rect x="77.9566%" y="773" width="2.4135%" height="15" fill="rgb(253,154,18)" fg:x="969" fg:w="30"/><text x="78.2066%" y="783.50">en..</text></g><g><title>engine::session::state::State::close (30 samples, 2.41%)</title><rect x="77.9566%" y="757" width="2.4135%" height="15" fill="rgb(219,32,23)" fg:x="969" fg:w="30"/><text x="78.2066%" y="767.50">en..</text></g><g><title>engine::session::state::State::flush_entities (30 samples, 2.41%)</title><rect x="77.9566%" y="741" width="2.4135%" height="15" fill="rgb(230,191,45)" fg:x="969" fg:w="30"/><text x="78.2066%" y="751.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (27 samples, 2.17%)</title><rect x="78.1979%" y="725" width="2.1722%" height="15" fill="rgb(229,64,36)" fg:x="972" fg:w="27"/><text x="78.4479%" y="735.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.17%)</title><rect x="78.1979%" y="709" width="2.1722%" height="15" fill="rgb(205,129,25)" fg:x="972" fg:w="27"/><text x="78.4479%" y="719.50">e..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.97%)</title><rect x="79.4047%" y="693" width="0.9654%" height="15" fill="rgb(254,112,7)" fg:x="987" fg:w="12"/><text x="79.6547%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="79.4047%" y="677" width="0.9654%" height="15" fill="rgb(226,53,48)" fg:x="987" fg:w="12"/><text x="79.6547%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="79.4851%" y="661" width="0.8850%" height="15" fill="rgb(214,153,38)" fg:x="988" fg:w="11"/><text x="79.7351%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="79.7265%" y="645" width="0.6436%" height="15" fill="rgb(243,101,7)" fg:x="991" fg:w="8"/><text x="79.9765%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="79.7265%" y="629" width="0.6436%" height="15" fill="rgb(240,140,22)" fg:x="991" fg:w="8"/><text x="79.9765%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.2896%" y="613" width="0.0805%" height="15" fill="rgb(235,114,2)" fg:x="998" fg:w="1"/><text x="80.5396%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2896%" y="597" width="0.0805%" height="15" fill="rgb(242,59,12)" fg:x="998" fg:w="1"/><text x="80.5396%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="80.3701%" y="789" width="0.0805%" height="15" fill="rgb(252,134,9)" fg:x="999" fg:w="1"/><text x="80.6201%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.3701%" y="773" width="0.0805%" height="15" fill="rgb(236,4,44)" fg:x="999" fg:w="1"/><text x="80.6201%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.3701%" y="757" width="0.0805%" height="15" fill="rgb(254,172,41)" fg:x="999" fg:w="1"/><text x="80.6201%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="80.4505%" y="741" width="0.0805%" height="15" fill="rgb(244,63,20)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4505%" y="725" width="0.0805%" height="15" fill="rgb(250,73,31)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5310%" y="709" width="0.0805%" height="15" fill="rgb(241,38,36)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5310%" y="693" width="0.0805%" height="15" fill="rgb(245,211,2)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5310%" y="677" width="0.0805%" height="15" fill="rgb(206,120,28)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.5310%" y="661" width="0.0805%" height="15" fill="rgb(211,59,34)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.5310%" y="645" width="0.0805%" height="15" fill="rgb(233,168,5)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="80.4505%" y="757" width="0.2414%" height="15" fill="rgb(234,33,13)" fg:x="1000" fg:w="3"/><text x="80.7005%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.5310%" y="741" width="0.1609%" height="15" fill="rgb(231,150,26)" fg:x="1001" fg:w="2"/><text x="80.7810%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.5310%" y="725" width="0.1609%" height="15" fill="rgb(217,191,4)" fg:x="1001" fg:w="2"/><text x="80.7810%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.6114%" y="709" width="0.0805%" height="15" fill="rgb(246,198,38)" fg:x="1002" fg:w="1"/><text x="80.8614%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.6114%" y="693" width="0.0805%" height="15" fill="rgb(245,64,37)" fg:x="1002" fg:w="1"/><text x="80.8614%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.6114%" y="677" width="0.0805%" height="15" fill="rgb(250,30,36)" fg:x="1002" fg:w="1"/><text x="80.8614%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6919%" y="709" width="0.0805%" height="15" fill="rgb(217,86,53)" fg:x="1003" fg:w="1"/><text x="80.9419%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.6919%" y="693" width="0.0805%" height="15" fill="rgb(228,157,16)" fg:x="1003" fg:w="1"/><text x="80.9419%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6919%" y="677" width="0.0805%" height="15" fill="rgb(217,59,31)" fg:x="1003" fg:w="1"/><text x="80.9419%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="80.6919%" y="757" width="0.1609%" height="15" fill="rgb(237,138,41)" fg:x="1003" fg:w="2"/><text x="80.9419%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="80.6919%" y="741" width="0.1609%" height="15" fill="rgb(227,91,49)" fg:x="1003" fg:w="2"/><text x="80.9419%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.6919%" y="725" width="0.1609%" height="15" fill="rgb(247,21,44)" fg:x="1003" fg:w="2"/><text x="80.9419%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="80.7723%" y="709" width="0.0805%" height="15" fill="rgb(219,210,51)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.7723%" y="693" width="0.0805%" height="15" fill="rgb(209,140,6)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.7723%" y="677" width="0.0805%" height="15" fill="rgb(221,188,24)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="80.8528%" y="741" width="0.1609%" height="15" fill="rgb(232,154,20)" fg:x="1005" fg:w="2"/><text x="81.1028%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="80.8528%" y="725" width="0.1609%" height="15" fill="rgb(244,137,50)" fg:x="1005" fg:w="2"/><text x="81.1028%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="80.8528%" y="709" width="0.1609%" height="15" fill="rgb(225,185,43)" fg:x="1005" fg:w="2"/><text x="81.1028%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.8528%" y="693" width="0.1609%" height="15" fill="rgb(213,205,38)" fg:x="1005" fg:w="2"/><text x="81.1028%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9332%" y="677" width="0.0805%" height="15" fill="rgb(236,73,12)" fg:x="1006" fg:w="1"/><text x="81.1832%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.9332%" y="661" width="0.0805%" height="15" fill="rgb(235,219,13)" fg:x="1006" fg:w="1"/><text x="81.1832%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9332%" y="645" width="0.0805%" height="15" fill="rgb(218,59,36)" fg:x="1006" fg:w="1"/><text x="81.1832%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="80.4505%" y="773" width="0.6436%" height="15" fill="rgb(205,110,39)" fg:x="1000" fg:w="8"/><text x="80.7005%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="80.8528%" y="757" width="0.2414%" height="15" fill="rgb(218,206,42)" fg:x="1005" fg:w="3"/><text x="81.1028%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="81.0137%" y="741" width="0.0805%" height="15" fill="rgb(248,125,24)" fg:x="1007" fg:w="1"/><text x="81.2637%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1746%" y="677" width="0.0805%" height="15" fill="rgb(242,28,27)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1746%" y="661" width="0.0805%" height="15" fill="rgb(216,228,15)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1746%" y="645" width="0.0805%" height="15" fill="rgb(235,116,46)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.1746%" y="629" width="0.0805%" height="15" fill="rgb(224,18,32)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1746%" y="613" width="0.0805%" height="15" fill="rgb(252,5,12)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.1746%" y="597" width="0.0805%" height="15" fill="rgb(251,36,5)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.1746%" y="581" width="0.0805%" height="15" fill="rgb(217,53,14)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.1746%" y="565" width="0.0805%" height="15" fill="rgb(215,86,45)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.1746%" y="549" width="0.0805%" height="15" fill="rgb(242,169,11)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1746%" y="533" width="0.0805%" height="15" fill="rgb(211,213,45)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.1746%" y="517" width="0.0805%" height="15" fill="rgb(205,88,11)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.1746%" y="501" width="0.0805%" height="15" fill="rgb(252,69,26)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.1746%" y="485" width="0.0805%" height="15" fill="rgb(246,123,37)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.1746%" y="469" width="0.0805%" height="15" fill="rgb(212,205,5)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.1746%" y="453" width="0.0805%" height="15" fill="rgb(253,148,0)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1746%" y="437" width="0.0805%" height="15" fill="rgb(239,22,4)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.0941%" y="725" width="0.2414%" height="15" fill="rgb(226,26,53)" fg:x="1008" fg:w="3"/><text x="81.3441%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.0941%" y="709" width="0.2414%" height="15" fill="rgb(225,229,45)" fg:x="1008" fg:w="3"/><text x="81.3441%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.0941%" y="693" width="0.2414%" height="15" fill="rgb(220,60,37)" fg:x="1008" fg:w="3"/><text x="81.3441%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2550%" y="677" width="0.0805%" height="15" fill="rgb(217,180,35)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2550%" y="661" width="0.0805%" height="15" fill="rgb(229,7,53)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2550%" y="645" width="0.0805%" height="15" fill="rgb(254,137,3)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2550%" y="629" width="0.0805%" height="15" fill="rgb(215,140,41)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.2550%" y="613" width="0.0805%" height="15" fill="rgb(250,80,15)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2550%" y="597" width="0.0805%" height="15" fill="rgb(252,191,6)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2550%" y="581" width="0.0805%" height="15" fill="rgb(246,217,18)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2550%" y="565" width="0.0805%" height="15" fill="rgb(223,93,7)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.2550%" y="549" width="0.0805%" height="15" fill="rgb(225,55,52)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.2550%" y="533" width="0.0805%" height="15" fill="rgb(240,31,24)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="81.2550%" y="517" width="0.0805%" height="15" fill="rgb(205,56,52)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="81.2550%" y="501" width="0.0805%" height="15" fill="rgb(246,146,12)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3355%" y="709" width="0.0805%" height="15" fill="rgb(239,84,36)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4159%" y="677" width="0.0805%" height="15" fill="rgb(207,41,40)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4159%" y="661" width="0.0805%" height="15" fill="rgb(241,179,25)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4159%" y="645" width="0.0805%" height="15" fill="rgb(210,0,34)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4159%" y="629" width="0.0805%" height="15" fill="rgb(225,217,29)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.4159%" y="613" width="0.0805%" height="15" fill="rgb(216,191,38)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.4159%" y="597" width="0.0805%" height="15" fill="rgb(232,140,52)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.4159%" y="581" width="0.0805%" height="15" fill="rgb(223,158,51)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.4159%" y="565" width="0.0805%" height="15" fill="rgb(235,29,51)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.4159%" y="549" width="0.0805%" height="15" fill="rgb(215,181,18)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4964%" y="677" width="0.0805%" height="15" fill="rgb(227,125,34)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.4964%" y="661" width="0.0805%" height="15" fill="rgb(230,197,49)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4964%" y="645" width="0.0805%" height="15" fill="rgb(239,141,16)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.4964%" y="629" width="0.0805%" height="15" fill="rgb(225,105,43)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.4964%" y="613" width="0.0805%" height="15" fill="rgb(214,131,14)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4964%" y="597" width="0.0805%" height="15" fill="rgb(229,177,11)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="81.0941%" y="757" width="0.5632%" height="15" fill="rgb(231,180,14)" fg:x="1008" fg:w="7"/><text x="81.3441%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="81.0941%" y="741" width="0.5632%" height="15" fill="rgb(232,88,2)" fg:x="1008" fg:w="7"/><text x="81.3441%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="81.3355%" y="725" width="0.3218%" height="15" fill="rgb(205,220,8)" fg:x="1011" fg:w="4"/><text x="81.5855%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="81.4159%" y="709" width="0.2414%" height="15" fill="rgb(225,23,53)" fg:x="1012" fg:w="3"/><text x="81.6659%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.4159%" y="693" width="0.2414%" height="15" fill="rgb(213,62,29)" fg:x="1012" fg:w="3"/><text x="81.6659%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5768%" y="677" width="0.0805%" height="15" fill="rgb(227,75,7)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5768%" y="661" width="0.0805%" height="15" fill="rgb(207,105,14)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5768%" y="645" width="0.0805%" height="15" fill="rgb(245,62,29)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5768%" y="629" width="0.0805%" height="15" fill="rgb(236,202,4)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.5768%" y="613" width="0.0805%" height="15" fill="rgb(250,67,1)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5768%" y="597" width="0.0805%" height="15" fill="rgb(253,115,44)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5768%" y="581" width="0.0805%" height="15" fill="rgb(251,139,18)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5768%" y="565" width="0.0805%" height="15" fill="rgb(218,22,32)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.5768%" y="549" width="0.0805%" height="15" fill="rgb(243,53,5)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.5768%" y="533" width="0.0805%" height="15" fill="rgb(227,56,16)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.6573%" y="757" width="0.0805%" height="15" fill="rgb(245,53,0)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.7377%" y="757" width="0.0805%" height="15" fill="rgb(216,170,35)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7377%" y="741" width="0.0805%" height="15" fill="rgb(211,200,8)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7377%" y="725" width="0.0805%" height="15" fill="rgb(228,204,44)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.7377%" y="709" width="0.0805%" height="15" fill="rgb(214,121,17)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7377%" y="693" width="0.0805%" height="15" fill="rgb(233,64,38)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8986%" y="709" width="0.0805%" height="15" fill="rgb(253,54,19)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.8986%" y="693" width="0.0805%" height="15" fill="rgb(253,94,18)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8986%" y="677" width="0.0805%" height="15" fill="rgb(227,57,52)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8986%" y="661" width="0.0805%" height="15" fill="rgb(230,228,50)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8986%" y="645" width="0.0805%" height="15" fill="rgb(217,205,27)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8986%" y="629" width="0.0805%" height="15" fill="rgb(252,71,50)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8986%" y="613" width="0.0805%" height="15" fill="rgb(209,86,4)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.8986%" y="597" width="0.0805%" height="15" fill="rgb(229,94,0)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8986%" y="581" width="0.0805%" height="15" fill="rgb(252,223,21)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.8986%" y="565" width="0.0805%" height="15" fill="rgb(230,210,4)" fg:x="1018" fg:w="1"/><text x="82.1486%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.0595%" y="661" width="0.0805%" height="15" fill="rgb(240,149,38)" fg:x="1020" fg:w="1"/><text x="82.3095%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.1400%" y="581" width="0.0805%" height="15" fill="rgb(254,105,20)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1400%" y="565" width="0.0805%" height="15" fill="rgb(253,87,46)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2204%" y="565" width="0.0805%" height="15" fill="rgb(253,116,33)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.1400%" y="661" width="0.2414%" height="15" fill="rgb(229,198,5)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="82.1400%" y="645" width="0.2414%" height="15" fill="rgb(242,38,37)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.1400%" y="629" width="0.2414%" height="15" fill="rgb(242,69,53)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.1400%" y="613" width="0.2414%" height="15" fill="rgb(249,80,16)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.1400%" y="597" width="0.2414%" height="15" fill="rgb(206,128,11)" fg:x="1021" fg:w="3"/><text x="82.3900%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.2204%" y="581" width="0.1609%" height="15" fill="rgb(212,35,20)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3009%" y="565" width="0.0805%" height="15" fill="rgb(236,79,13)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3009%" y="549" width="0.0805%" height="15" fill="rgb(233,123,3)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="81.8182%" y="757" width="0.7241%" height="15" fill="rgb(214,93,52)" fg:x="1017" fg:w="9"/><text x="82.0682%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="81.8986%" y="741" width="0.6436%" height="15" fill="rgb(251,37,40)" fg:x="1018" fg:w="8"/><text x="82.1486%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="81.8986%" y="725" width="0.6436%" height="15" fill="rgb(227,80,54)" fg:x="1018" fg:w="8"/><text x="82.1486%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="81.9791%" y="709" width="0.5632%" height="15" fill="rgb(254,48,11)" fg:x="1019" fg:w="7"/><text x="82.2291%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="82.0595%" y="693" width="0.4827%" height="15" fill="rgb(235,193,26)" fg:x="1020" fg:w="6"/><text x="82.3095%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="82.0595%" y="677" width="0.4827%" height="15" fill="rgb(229,99,21)" fg:x="1020" fg:w="6"/><text x="82.3095%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.3813%" y="661" width="0.1609%" height="15" fill="rgb(211,140,41)" fg:x="1024" fg:w="2"/><text x="82.6313%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.3813%" y="645" width="0.1609%" height="15" fill="rgb(240,227,30)" fg:x="1024" fg:w="2"/><text x="82.6313%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4618%" y="629" width="0.0805%" height="15" fill="rgb(215,224,45)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4618%" y="613" width="0.0805%" height="15" fill="rgb(206,123,31)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (27 samples, 2.17%)</title><rect x="80.4505%" y="789" width="2.1722%" height="15" fill="rgb(210,138,16)" fg:x="1000" fg:w="27"/><text x="80.7005%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_container (19 samples, 1.53%)</title><rect x="81.0941%" y="773" width="1.5286%" height="15" fill="rgb(228,57,28)" fg:x="1008" fg:w="19"/><text x="81.3441%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="82.5422%" y="757" width="0.0805%" height="15" fill="rgb(242,170,10)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5422%" y="741" width="0.0805%" height="15" fill="rgb(228,214,39)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.5422%" y="725" width="0.0805%" height="15" fill="rgb(218,179,33)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5422%" y="709" width="0.0805%" height="15" fill="rgb(235,193,39)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.6227%" y="709" width="0.1609%" height="15" fill="rgb(219,221,36)" fg:x="1027" fg:w="2"/><text x="82.8727%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7031%" y="693" width="0.0805%" height="15" fill="rgb(248,218,19)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7031%" y="677" width="0.0805%" height="15" fill="rgb(205,50,9)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="82.6227%" y="789" width="0.2414%" height="15" fill="rgb(238,81,28)" fg:x="1027" fg:w="3"/><text x="82.8727%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.6227%" y="773" width="0.2414%" height="15" fill="rgb(235,110,19)" fg:x="1027" fg:w="3"/><text x="82.8727%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="82.6227%" y="757" width="0.2414%" height="15" fill="rgb(214,7,14)" fg:x="1027" fg:w="3"/><text x="82.8727%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="82.6227%" y="741" width="0.2414%" height="15" fill="rgb(211,77,3)" fg:x="1027" fg:w="3"/><text x="82.8727%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="82.6227%" y="725" width="0.2414%" height="15" fill="rgb(229,5,9)" fg:x="1027" fg:w="3"/><text x="82.8727%" y="735.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="82.7836%" y="709" width="0.0805%" height="15" fill="rgb(225,90,11)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="719.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="82.8640%" y="757" width="0.0805%" height="15" fill="rgb(242,56,8)" fg:x="1030" fg:w="1"/><text x="83.1140%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9445%" y="757" width="0.0805%" height="15" fill="rgb(249,212,39)" fg:x="1031" fg:w="1"/><text x="83.1945%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9445%" y="741" width="0.0805%" height="15" fill="rgb(236,90,9)" fg:x="1031" fg:w="1"/><text x="83.1945%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.9445%" y="725" width="0.0805%" height="15" fill="rgb(206,88,35)" fg:x="1031" fg:w="1"/><text x="83.1945%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="82.8640%" y="789" width="0.2414%" height="15" fill="rgb(205,126,30)" fg:x="1030" fg:w="3"/><text x="83.1140%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="82.8640%" y="773" width="0.2414%" height="15" fill="rgb(230,176,12)" fg:x="1030" fg:w="3"/><text x="83.1140%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.0249%" y="757" width="0.0805%" height="15" fill="rgb(243,19,9)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.0249%" y="741" width="0.0805%" height="15" fill="rgb(245,171,17)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0249%" y="725" width="0.0805%" height="15" fill="rgb(227,52,21)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0249%" y="709" width="0.0805%" height="15" fill="rgb(238,69,14)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0249%" y="693" width="0.0805%" height="15" fill="rgb(241,156,39)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0249%" y="677" width="0.0805%" height="15" fill="rgb(212,227,28)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0249%" y="661" width="0.0805%" height="15" fill="rgb(209,118,27)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0249%" y="645" width="0.0805%" height="15" fill="rgb(226,102,5)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0249%" y="629" width="0.0805%" height="15" fill="rgb(223,34,3)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.1858%" y="757" width="0.0805%" height="15" fill="rgb(221,81,38)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.1858%" y="741" width="0.0805%" height="15" fill="rgb(236,219,28)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1858%" y="725" width="0.0805%" height="15" fill="rgb(213,200,14)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2663%" y="677" width="0.0805%" height="15" fill="rgb(240,33,19)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.2663%" y="661" width="0.0805%" height="15" fill="rgb(233,113,27)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2663%" y="645" width="0.0805%" height="15" fill="rgb(220,221,18)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.2663%" y="741" width="0.1609%" height="15" fill="rgb(238,92,8)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="83.2663%" y="725" width="0.1609%" height="15" fill="rgb(222,164,16)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="83.2663%" y="709" width="0.1609%" height="15" fill="rgb(241,119,3)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="83.2663%" y="693" width="0.1609%" height="15" fill="rgb(241,44,8)" fg:x="1035" fg:w="2"/><text x="83.5163%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="677" width="0.0805%" height="15" fill="rgb(230,36,40)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="661" width="0.0805%" height="15" fill="rgb(243,16,36)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="645" width="0.0805%" height="15" fill="rgb(231,4,26)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="629" width="0.0805%" height="15" fill="rgb(240,9,31)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="613" width="0.0805%" height="15" fill="rgb(207,173,15)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.3467%" y="597" width="0.0805%" height="15" fill="rgb(224,192,53)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="83.1858%" y="773" width="0.3218%" height="15" fill="rgb(223,67,28)" fg:x="1034" fg:w="4"/><text x="83.4358%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="83.2663%" y="757" width="0.2414%" height="15" fill="rgb(211,20,47)" fg:x="1035" fg:w="3"/><text x="83.5163%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.4272%" y="741" width="0.0805%" height="15" fill="rgb(240,228,2)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5881%" y="677" width="0.0805%" height="15" fill="rgb(248,151,12)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5881%" y="661" width="0.0805%" height="15" fill="rgb(244,8,39)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5881%" y="645" width="0.0805%" height="15" fill="rgb(222,26,8)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5881%" y="629" width="0.0805%" height="15" fill="rgb(213,106,44)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5881%" y="613" width="0.0805%" height="15" fill="rgb(214,129,20)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.5881%" y="597" width="0.0805%" height="15" fill="rgb(212,32,13)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.5881%" y="581" width="0.0805%" height="15" fill="rgb(208,168,33)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.5881%" y="565" width="0.0805%" height="15" fill="rgb(231,207,8)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.5881%" y="549" width="0.0805%" height="15" fill="rgb(235,219,23)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5881%" y="533" width="0.0805%" height="15" fill="rgb(226,216,26)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5881%" y="517" width="0.0805%" height="15" fill="rgb(239,137,16)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.5881%" y="725" width="0.1609%" height="15" fill="rgb(207,12,36)" fg:x="1039" fg:w="2"/><text x="83.8381%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.5881%" y="709" width="0.1609%" height="15" fill="rgb(210,214,24)" fg:x="1039" fg:w="2"/><text x="83.8381%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.5881%" y="693" width="0.1609%" height="15" fill="rgb(206,56,30)" fg:x="1039" fg:w="2"/><text x="83.8381%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6685%" y="677" width="0.0805%" height="15" fill="rgb(228,143,26)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6685%" y="661" width="0.0805%" height="15" fill="rgb(216,218,46)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6685%" y="645" width="0.0805%" height="15" fill="rgb(206,6,19)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6685%" y="629" width="0.0805%" height="15" fill="rgb(239,177,51)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.6685%" y="613" width="0.0805%" height="15" fill="rgb(216,55,25)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6685%" y="597" width="0.0805%" height="15" fill="rgb(231,163,29)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.6685%" y="581" width="0.0805%" height="15" fill="rgb(232,149,50)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8294%" y="613" width="0.0805%" height="15" fill="rgb(223,142,48)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8294%" y="597" width="0.0805%" height="15" fill="rgb(245,83,23)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.8294%" y="581" width="0.0805%" height="15" fill="rgb(224,63,2)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.8294%" y="565" width="0.0805%" height="15" fill="rgb(218,65,53)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.8294%" y="549" width="0.0805%" height="15" fill="rgb(221,84,29)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.8294%" y="533" width="0.0805%" height="15" fill="rgb(234,0,32)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8294%" y="517" width="0.0805%" height="15" fill="rgb(206,20,16)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.8294%" y="501" width="0.0805%" height="15" fill="rgb(244,172,18)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.8294%" y="485" width="0.0805%" height="15" fill="rgb(254,133,1)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.8294%" y="469" width="0.0805%" height="15" fill="rgb(222,206,41)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.8294%" y="453" width="0.0805%" height="15" fill="rgb(212,3,42)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.8294%" y="437" width="0.0805%" height="15" fill="rgb(241,11,4)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8294%" y="421" width="0.0805%" height="15" fill="rgb(205,19,26)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.7490%" y="677" width="0.2414%" height="15" fill="rgb(210,179,32)" fg:x="1041" fg:w="3"/><text x="83.9990%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.7490%" y="661" width="0.2414%" height="15" fill="rgb(227,116,49)" fg:x="1041" fg:w="3"/><text x="83.9990%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.7490%" y="645" width="0.2414%" height="15" fill="rgb(211,146,6)" fg:x="1041" fg:w="3"/><text x="83.9990%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.7490%" y="629" width="0.2414%" height="15" fill="rgb(219,44,39)" fg:x="1041" fg:w="3"/><text x="83.9990%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="83.9099%" y="613" width="0.0805%" height="15" fill="rgb(234,128,11)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="83.9099%" y="597" width="0.0805%" height="15" fill="rgb(220,183,53)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="677" width="0.0805%" height="15" fill="rgb(213,219,32)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="661" width="0.0805%" height="15" fill="rgb(232,156,16)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="645" width="0.0805%" height="15" fill="rgb(246,135,34)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="629" width="0.0805%" height="15" fill="rgb(241,99,0)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="613" width="0.0805%" height="15" fill="rgb(222,103,45)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.9903%" y="597" width="0.0805%" height="15" fill="rgb(212,57,4)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="83.5881%" y="757" width="0.5632%" height="15" fill="rgb(215,68,47)" fg:x="1039" fg:w="7"/><text x="83.8381%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="83.5881%" y="741" width="0.5632%" height="15" fill="rgb(230,84,2)" fg:x="1039" fg:w="7"/><text x="83.8381%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="83.7490%" y="725" width="0.4023%" height="15" fill="rgb(220,102,14)" fg:x="1041" fg:w="5"/><text x="83.9990%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="83.7490%" y="709" width="0.4023%" height="15" fill="rgb(240,10,32)" fg:x="1041" fg:w="5"/><text x="83.9990%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="83.7490%" y="693" width="0.4023%" height="15" fill="rgb(215,47,27)" fg:x="1041" fg:w="5"/><text x="83.9990%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0708%" y="677" width="0.0805%" height="15" fill="rgb(233,188,43)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0708%" y="661" width="0.0805%" height="15" fill="rgb(253,190,1)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0708%" y="645" width="0.0805%" height="15" fill="rgb(206,114,52)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0708%" y="629" width="0.0805%" height="15" fill="rgb(233,120,37)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0708%" y="613" width="0.0805%" height="15" fill="rgb(214,52,39)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0708%" y="597" width="0.0805%" height="15" fill="rgb(223,80,29)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0708%" y="581" width="0.0805%" height="15" fill="rgb(230,101,40)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.1512%" y="757" width="0.0805%" height="15" fill="rgb(219,211,8)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1512%" y="741" width="0.0805%" height="15" fill="rgb(252,126,28)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1512%" y="725" width="0.0805%" height="15" fill="rgb(215,56,38)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1512%" y="709" width="0.0805%" height="15" fill="rgb(249,55,44)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1512%" y="693" width="0.0805%" height="15" fill="rgb(220,221,32)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1512%" y="677" width="0.0805%" height="15" fill="rgb(212,216,41)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2317%" y="661" width="0.0805%" height="15" fill="rgb(228,213,43)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2317%" y="645" width="0.0805%" height="15" fill="rgb(211,31,26)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2317%" y="629" width="0.0805%" height="15" fill="rgb(229,202,19)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2317%" y="613" width="0.0805%" height="15" fill="rgb(229,105,46)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2317%" y="597" width="0.0805%" height="15" fill="rgb(235,108,1)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.3121%" y="661" width="0.0805%" height="15" fill="rgb(245,111,35)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.3121%" y="645" width="0.0805%" height="15" fill="rgb(219,185,31)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="84.2317%" y="709" width="0.2414%" height="15" fill="rgb(214,4,43)" fg:x="1047" fg:w="3"/><text x="84.4817%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.2317%" y="693" width="0.2414%" height="15" fill="rgb(235,227,40)" fg:x="1047" fg:w="3"/><text x="84.4817%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.2317%" y="677" width="0.2414%" height="15" fill="rgb(230,88,30)" fg:x="1047" fg:w="3"/><text x="84.4817%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3926%" y="661" width="0.0805%" height="15" fill="rgb(216,217,1)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3926%" y="645" width="0.0805%" height="15" fill="rgb(248,139,50)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3926%" y="629" width="0.0805%" height="15" fill="rgb(233,1,21)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3926%" y="613" width="0.0805%" height="15" fill="rgb(215,183,12)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3926%" y="597" width="0.0805%" height="15" fill="rgb(229,104,42)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3926%" y="581" width="0.0805%" height="15" fill="rgb(243,34,48)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3926%" y="565" width="0.0805%" height="15" fill="rgb(239,11,44)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3926%" y="549" width="0.0805%" height="15" fill="rgb(231,98,35)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.3926%" y="533" width="0.0805%" height="15" fill="rgb(233,28,25)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4730%" y="645" width="0.0805%" height="15" fill="rgb(234,123,11)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4730%" y="629" width="0.0805%" height="15" fill="rgb(220,69,3)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4730%" y="613" width="0.0805%" height="15" fill="rgb(214,64,36)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4730%" y="597" width="0.0805%" height="15" fill="rgb(211,138,32)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4730%" y="581" width="0.0805%" height="15" fill="rgb(213,118,47)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4730%" y="565" width="0.0805%" height="15" fill="rgb(243,124,49)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4730%" y="549" width="0.0805%" height="15" fill="rgb(221,30,28)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4730%" y="533" width="0.0805%" height="15" fill="rgb(246,37,13)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4730%" y="517" width="0.0805%" height="15" fill="rgb(249,66,14)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4730%" y="501" width="0.0805%" height="15" fill="rgb(213,166,5)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4730%" y="485" width="0.0805%" height="15" fill="rgb(221,66,24)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4730%" y="469" width="0.0805%" height="15" fill="rgb(210,132,17)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4730%" y="453" width="0.0805%" height="15" fill="rgb(243,202,5)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4730%" y="437" width="0.0805%" height="15" fill="rgb(233,70,48)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4730%" y="421" width="0.0805%" height="15" fill="rgb(238,41,26)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4730%" y="405" width="0.0805%" height="15" fill="rgb(241,19,31)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4730%" y="661" width="0.1609%" height="15" fill="rgb(214,76,10)" fg:x="1050" fg:w="2"/><text x="84.7230%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5535%" y="645" width="0.0805%" height="15" fill="rgb(254,202,22)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (109 samples, 8.77%)</title><rect x="75.9453%" y="805" width="8.7691%" height="15" fill="rgb(214,72,24)" fg:x="944" fg:w="109"/><text x="76.1953%" y="815.50">plugins_core..</text></g><g><title>plugins_core::build::Build::occupying (20 samples, 1.61%)</title><rect x="83.1054%" y="789" width="1.6090%" height="15" fill="rgb(221,92,46)" fg:x="1033" fg:w="20"/><text x="83.3554%" y="799.50"></text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.21%)</title><rect x="83.5076%" y="773" width="1.2068%" height="15" fill="rgb(246,13,50)" fg:x="1038" fg:w="15"/><text x="83.7576%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="84.2317%" y="757" width="0.4827%" height="15" fill="rgb(240,165,38)" fg:x="1047" fg:w="6"/><text x="84.4817%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="84.2317%" y="741" width="0.4827%" height="15" fill="rgb(241,24,51)" fg:x="1047" fg:w="6"/><text x="84.4817%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="84.2317%" y="725" width="0.4827%" height="15" fill="rgb(227,51,44)" fg:x="1047" fg:w="6"/><text x="84.4817%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="84.4730%" y="709" width="0.2414%" height="15" fill="rgb(231,121,3)" fg:x="1050" fg:w="3"/><text x="84.7230%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.4730%" y="693" width="0.2414%" height="15" fill="rgb(245,3,41)" fg:x="1050" fg:w="3"/><text x="84.7230%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.4730%" y="677" width="0.2414%" height="15" fill="rgb(214,13,26)" fg:x="1050" fg:w="3"/><text x="84.7230%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6340%" y="661" width="0.0805%" height="15" fill="rgb(252,75,11)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6340%" y="645" width="0.0805%" height="15" fill="rgb(218,226,17)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.6340%" y="629" width="0.0805%" height="15" fill="rgb(248,89,38)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6340%" y="613" width="0.0805%" height="15" fill="rgb(237,73,46)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.6340%" y="597" width="0.0805%" height="15" fill="rgb(242,78,33)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.6340%" y="581" width="0.0805%" height="15" fill="rgb(235,60,3)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.6340%" y="565" width="0.0805%" height="15" fill="rgb(216,172,19)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="575.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="84.7144%" y="773" width="0.0805%" height="15" fill="rgb(227,6,42)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="84.7949%" y="757" width="0.3218%" height="15" fill="rgb(223,207,42)" fg:x="1054" fg:w="4"/><text x="85.0449%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="84.8753%" y="741" width="0.2414%" height="15" fill="rgb(246,138,30)" fg:x="1055" fg:w="3"/><text x="85.1253%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.8753%" y="725" width="0.2414%" height="15" fill="rgb(251,199,47)" fg:x="1055" fg:w="3"/><text x="85.1253%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.0362%" y="709" width="0.0805%" height="15" fill="rgb(228,218,44)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.0362%" y="693" width="0.0805%" height="15" fill="rgb(220,68,6)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="85.0362%" y="677" width="0.0805%" height="15" fill="rgb(240,60,26)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1167%" y="709" width="0.0805%" height="15" fill="rgb(211,200,19)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1167%" y="693" width="0.0805%" height="15" fill="rgb(242,145,30)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1971%" y="677" width="0.0805%" height="15" fill="rgb(225,64,13)" fg:x="1059" fg:w="1"/><text x="85.4471%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1971%" y="661" width="0.0805%" height="15" fill="rgb(218,103,35)" fg:x="1059" fg:w="1"/><text x="85.4471%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (9 samples, 0.72%)</title><rect x="84.7144%" y="805" width="0.7241%" height="15" fill="rgb(216,93,46)" fg:x="1053" fg:w="9"/><text x="84.9644%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (9 samples, 0.72%)</title><rect x="84.7144%" y="789" width="0.7241%" height="15" fill="rgb(225,159,27)" fg:x="1053" fg:w="9"/><text x="84.9644%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="84.7949%" y="773" width="0.6436%" height="15" fill="rgb(225,204,11)" fg:x="1054" fg:w="8"/><text x="85.0449%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="85.1167%" y="757" width="0.3218%" height="15" fill="rgb(205,56,4)" fg:x="1058" fg:w="4"/><text x="85.3667%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="85.1167%" y="741" width="0.3218%" height="15" fill="rgb(206,6,35)" fg:x="1058" fg:w="4"/><text x="85.3667%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="85.1167%" y="725" width="0.3218%" height="15" fill="rgb(247,73,52)" fg:x="1058" fg:w="4"/><text x="85.3667%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="85.1971%" y="709" width="0.2414%" height="15" fill="rgb(246,97,4)" fg:x="1059" fg:w="3"/><text x="85.4471%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="85.1971%" y="693" width="0.2414%" height="15" fill="rgb(212,37,15)" fg:x="1059" fg:w="3"/><text x="85.4471%" y="703.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (2 samples, 0.16%)</title><rect x="85.2776%" y="677" width="0.1609%" height="15" fill="rgb(208,130,40)" fg:x="1060" fg:w="2"/><text x="85.5276%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="85.4385%" y="805" width="0.0805%" height="15" fill="rgb(236,55,29)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.5189%" y="757" width="0.0805%" height="15" fill="rgb(209,156,45)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.5189%" y="741" width="0.0805%" height="15" fill="rgb(249,107,4)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.5189%" y="725" width="0.0805%" height="15" fill="rgb(227,7,13)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="709" width="0.0805%" height="15" fill="rgb(250,129,14)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.5189%" y="693" width="0.0805%" height="15" fill="rgb(229,92,13)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="677" width="0.0805%" height="15" fill="rgb(245,98,39)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="661" width="0.0805%" height="15" fill="rgb(234,135,48)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="645" width="0.0805%" height="15" fill="rgb(230,98,28)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.5189%" y="629" width="0.0805%" height="15" fill="rgb(223,121,0)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="613" width="0.0805%" height="15" fill="rgb(234,173,33)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.5189%" y="597" width="0.0805%" height="15" fill="rgb(245,47,8)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5189%" y="581" width="0.0805%" height="15" fill="rgb(205,17,20)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.5994%" y="757" width="0.0805%" height="15" fill="rgb(232,151,16)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.5994%" y="741" width="0.0805%" height="15" fill="rgb(208,30,32)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.5994%" y="725" width="0.0805%" height="15" fill="rgb(254,26,3)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5994%" y="709" width="0.0805%" height="15" fill="rgb(240,177,30)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5994%" y="693" width="0.0805%" height="15" fill="rgb(248,76,44)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5994%" y="677" width="0.0805%" height="15" fill="rgb(241,186,54)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5994%" y="661" width="0.0805%" height="15" fill="rgb(249,171,29)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.5994%" y="645" width="0.0805%" height="15" fill="rgb(237,151,44)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5994%" y="629" width="0.0805%" height="15" fill="rgb(228,174,30)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5994%" y="613" width="0.0805%" height="15" fill="rgb(252,14,37)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5994%" y="597" width="0.0805%" height="15" fill="rgb(207,111,40)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="85.6798%" y="757" width="0.0805%" height="15" fill="rgb(248,171,54)" fg:x="1065" fg:w="1"/><text x="85.9298%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7603%" y="677" width="0.0805%" height="15" fill="rgb(211,127,2)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7603%" y="661" width="0.0805%" height="15" fill="rgb(236,87,47)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7603%" y="645" width="0.0805%" height="15" fill="rgb(223,190,45)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7603%" y="629" width="0.0805%" height="15" fill="rgb(215,5,16)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.7603%" y="613" width="0.0805%" height="15" fill="rgb(252,82,33)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="85.5189%" y="773" width="0.4023%" height="15" fill="rgb(247,213,44)" fg:x="1063" fg:w="5"/><text x="85.7689%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.7603%" y="757" width="0.1609%" height="15" fill="rgb(205,196,44)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.7603%" y="741" width="0.1609%" height="15" fill="rgb(237,96,54)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.7603%" y="725" width="0.1609%" height="15" fill="rgb(230,113,34)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.7603%" y="709" width="0.1609%" height="15" fill="rgb(221,224,12)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.7603%" y="693" width="0.1609%" height="15" fill="rgb(219,112,44)" fg:x="1066" fg:w="2"/><text x="86.0103%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8407%" y="677" width="0.0805%" height="15" fill="rgb(210,31,13)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8407%" y="661" width="0.0805%" height="15" fill="rgb(230,25,16)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8407%" y="645" width="0.0805%" height="15" fill="rgb(246,108,53)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8407%" y="629" width="0.0805%" height="15" fill="rgb(241,172,50)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8407%" y="613" width="0.0805%" height="15" fill="rgb(235,141,10)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8407%" y="597" width="0.0805%" height="15" fill="rgb(220,174,43)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8407%" y="581" width="0.0805%" height="15" fill="rgb(215,181,40)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8407%" y="565" width="0.0805%" height="15" fill="rgb(230,97,2)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.9212%" y="773" width="0.0805%" height="15" fill="rgb(211,25,27)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.9212%" y="757" width="0.0805%" height="15" fill="rgb(230,87,26)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.9212%" y="741" width="0.0805%" height="15" fill="rgb(227,160,17)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.9212%" y="725" width="0.0805%" height="15" fill="rgb(244,85,34)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.9212%" y="709" width="0.0805%" height="15" fill="rgb(207,70,0)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9212%" y="693" width="0.0805%" height="15" fill="rgb(223,129,7)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0016%" y="741" width="0.0805%" height="15" fill="rgb(246,105,7)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0016%" y="725" width="0.0805%" height="15" fill="rgb(215,154,42)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0016%" y="709" width="0.0805%" height="15" fill="rgb(220,215,30)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0016%" y="693" width="0.0805%" height="15" fill="rgb(228,81,51)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0016%" y="677" width="0.0805%" height="15" fill="rgb(247,71,54)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0016%" y="661" width="0.0805%" height="15" fill="rgb(234,176,34)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.0016%" y="645" width="0.0805%" height="15" fill="rgb(241,103,54)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0016%" y="629" width="0.0805%" height="15" fill="rgb(228,22,34)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="85.5189%" y="805" width="0.6436%" height="15" fill="rgb(241,179,48)" fg:x="1063" fg:w="8"/><text x="85.7689%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="85.5189%" y="789" width="0.6436%" height="15" fill="rgb(235,167,37)" fg:x="1063" fg:w="8"/><text x="85.7689%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="86.0016%" y="773" width="0.1609%" height="15" fill="rgb(213,109,30)" fg:x="1069" fg:w="2"/><text x="86.2516%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.0016%" y="757" width="0.1609%" height="15" fill="rgb(222,172,16)" fg:x="1069" fg:w="2"/><text x="86.2516%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.0821%" y="741" width="0.0805%" height="15" fill="rgb(233,192,5)" fg:x="1070" fg:w="1"/><text x="86.3321%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.0821%" y="725" width="0.0805%" height="15" fill="rgb(247,189,41)" fg:x="1070" fg:w="1"/><text x="86.3321%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="86.1625%" y="773" width="0.1609%" height="15" fill="rgb(218,134,47)" fg:x="1071" fg:w="2"/><text x="86.4125%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.2430%" y="757" width="0.0805%" height="15" fill="rgb(216,29,3)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.2430%" y="741" width="0.0805%" height="15" fill="rgb(246,140,12)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="725" width="0.0805%" height="15" fill="rgb(230,136,11)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.2430%" y="709" width="0.0805%" height="15" fill="rgb(247,22,47)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="693" width="0.0805%" height="15" fill="rgb(218,84,22)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="677" width="0.0805%" height="15" fill="rgb(216,87,39)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="661" width="0.0805%" height="15" fill="rgb(221,178,8)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.2430%" y="645" width="0.0805%" height="15" fill="rgb(230,42,11)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="629" width="0.0805%" height="15" fill="rgb(237,229,4)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="613" width="0.0805%" height="15" fill="rgb(222,31,33)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="597" width="0.0805%" height="15" fill="rgb(210,17,39)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.2430%" y="581" width="0.0805%" height="15" fill="rgb(244,93,20)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.2430%" y="565" width="0.0805%" height="15" fill="rgb(210,40,47)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.2430%" y="549" width="0.0805%" height="15" fill="rgb(239,211,47)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.2430%" y="533" width="0.0805%" height="15" fill="rgb(251,223,49)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.2430%" y="517" width="0.0805%" height="15" fill="rgb(221,149,5)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.2430%" y="501" width="0.0805%" height="15" fill="rgb(219,224,51)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.2430%" y="485" width="0.0805%" height="15" fill="rgb(223,7,8)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.2430%" y="469" width="0.0805%" height="15" fill="rgb(241,217,22)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.2430%" y="453" width="0.0805%" height="15" fill="rgb(248,209,0)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.2430%" y="437" width="0.0805%" height="15" fill="rgb(217,205,4)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.2430%" y="421" width="0.0805%" height="15" fill="rgb(228,124,39)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="86.2430%" y="405" width="0.0805%" height="15" fill="rgb(250,116,42)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.2430%" y="389" width="0.0805%" height="15" fill="rgb(223,202,9)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="86.2430%" y="373" width="0.0805%" height="15" fill="rgb(242,222,40)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="86.2430%" y="357" width="0.0805%" height="15" fill="rgb(229,99,46)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="86.2430%" y="341" width="0.0805%" height="15" fill="rgb(225,56,46)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="351.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.2430%" y="325" width="0.0805%" height="15" fill="rgb(227,94,5)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3234%" y="725" width="0.0805%" height="15" fill="rgb(205,112,38)" fg:x="1073" fg:w="1"/><text x="86.5734%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3234%" y="709" width="0.0805%" height="15" fill="rgb(231,133,46)" fg:x="1073" fg:w="1"/><text x="86.5734%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3234%" y="693" width="0.0805%" height="15" fill="rgb(217,16,9)" fg:x="1073" fg:w="1"/><text x="86.5734%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3234%" y="677" width="0.0805%" height="15" fill="rgb(249,173,9)" fg:x="1073" fg:w="1"/><text x="86.5734%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.4039%" y="693" width="0.0805%" height="15" fill="rgb(205,163,53)" fg:x="1074" fg:w="1"/><text x="86.6539%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.3234%" y="773" width="0.2414%" height="15" fill="rgb(217,54,41)" fg:x="1073" fg:w="3"/><text x="86.5734%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="86.3234%" y="757" width="0.2414%" height="15" fill="rgb(228,216,12)" fg:x="1073" fg:w="3"/><text x="86.5734%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.3234%" y="741" width="0.2414%" height="15" fill="rgb(244,228,15)" fg:x="1073" fg:w="3"/><text x="86.5734%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.4039%" y="725" width="0.1609%" height="15" fill="rgb(221,176,53)" fg:x="1074" fg:w="2"/><text x="86.6539%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.4039%" y="709" width="0.1609%" height="15" fill="rgb(205,94,34)" fg:x="1074" fg:w="2"/><text x="86.6539%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.4843%" y="693" width="0.0805%" height="15" fill="rgb(213,110,48)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4843%" y="677" width="0.0805%" height="15" fill="rgb(236,142,28)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.4843%" y="661" width="0.0805%" height="15" fill="rgb(225,135,29)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.4843%" y="645" width="0.0805%" height="15" fill="rgb(252,45,31)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4843%" y="629" width="0.0805%" height="15" fill="rgb(211,187,50)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.4843%" y="613" width="0.0805%" height="15" fill="rgb(229,109,7)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.5648%" y="725" width="0.0805%" height="15" fill="rgb(251,131,51)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5648%" y="709" width="0.0805%" height="15" fill="rgb(251,180,35)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5648%" y="693" width="0.0805%" height="15" fill="rgb(211,46,32)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5648%" y="677" width="0.0805%" height="15" fill="rgb(248,123,17)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5648%" y="661" width="0.0805%" height="15" fill="rgb(227,141,18)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.6452%" y="693" width="0.0805%" height="15" fill="rgb(216,102,9)" fg:x="1077" fg:w="1"/><text x="86.8952%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.6452%" y="677" width="0.0805%" height="15" fill="rgb(253,47,13)" fg:x="1077" fg:w="1"/><text x="86.8952%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.6452%" y="661" width="0.0805%" height="15" fill="rgb(226,93,23)" fg:x="1077" fg:w="1"/><text x="86.8952%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="86.5648%" y="757" width="0.2414%" height="15" fill="rgb(247,104,17)" fg:x="1076" fg:w="3"/><text x="86.8148%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="86.5648%" y="741" width="0.2414%" height="15" fill="rgb(233,203,26)" fg:x="1076" fg:w="3"/><text x="86.8148%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.6452%" y="725" width="0.1609%" height="15" fill="rgb(244,98,49)" fg:x="1077" fg:w="2"/><text x="86.8952%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.6452%" y="709" width="0.1609%" height="15" fill="rgb(235,134,22)" fg:x="1077" fg:w="2"/><text x="86.8952%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7257%" y="693" width="0.0805%" height="15" fill="rgb(221,70,32)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.7257%" y="677" width="0.0805%" height="15" fill="rgb(238,15,50)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7257%" y="661" width="0.0805%" height="15" fill="rgb(215,221,48)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.7257%" y="645" width="0.0805%" height="15" fill="rgb(236,73,3)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.7257%" y="629" width="0.0805%" height="15" fill="rgb(250,107,11)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7257%" y="613" width="0.0805%" height="15" fill="rgb(242,39,14)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="86.1625%" y="789" width="0.8045%" height="15" fill="rgb(248,164,37)" fg:x="1071" fg:w="10"/><text x="86.4125%" y="799.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="86.5648%" y="773" width="0.4023%" height="15" fill="rgb(217,60,12)" fg:x="1076" fg:w="5"/><text x="86.8148%" y="783.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="86.8061%" y="757" width="0.1609%" height="15" fill="rgb(240,125,29)" fg:x="1079" fg:w="2"/><text x="87.0561%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.8061%" y="741" width="0.1609%" height="15" fill="rgb(208,207,28)" fg:x="1079" fg:w="2"/><text x="87.0561%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8866%" y="725" width="0.0805%" height="15" fill="rgb(209,159,27)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="86.8866%" y="709" width="0.0805%" height="15" fill="rgb(251,176,53)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8866%" y="693" width="0.0805%" height="15" fill="rgb(211,85,7)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="703.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="86.9670%" y="789" width="0.0805%" height="15" fill="rgb(216,64,54)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.0475%" y="757" width="0.1609%" height="15" fill="rgb(217,54,24)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.0475%" y="741" width="0.1609%" height="15" fill="rgb(208,206,53)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.1279%" y="725" width="0.0805%" height="15" fill="rgb(251,74,39)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.1279%" y="709" width="0.0805%" height="15" fill="rgb(226,47,5)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.2084%" y="757" width="0.0805%" height="15" fill="rgb(234,111,33)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.2084%" y="741" width="0.0805%" height="15" fill="rgb(251,14,10)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.2084%" y="725" width="0.0805%" height="15" fill="rgb(232,43,0)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2084%" y="709" width="0.0805%" height="15" fill="rgb(222,68,43)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="87.0475%" y="789" width="0.3218%" height="15" fill="rgb(217,24,23)" fg:x="1082" fg:w="4"/><text x="87.2975%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="87.0475%" y="773" width="0.3218%" height="15" fill="rgb(229,209,14)" fg:x="1082" fg:w="4"/><text x="87.2975%" y="783.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="87.2888%" y="757" width="0.0805%" height="15" fill="rgb(250,149,48)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3693%" y="757" width="0.0805%" height="15" fill="rgb(210,120,37)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="767.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (232 samples, 18.66%)</title><rect x="68.8656%" y="821" width="18.6645%" height="15" fill="rgb(210,21,8)" fg:x="856" fg:w="232"/><text x="69.1156%" y="831.50">&lt;tests::HoldingKeyInVessel as..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.37%)</title><rect x="86.1625%" y="805" width="1.3677%" height="15" fill="rgb(243,145,7)" fg:x="1071" fg:w="17"/><text x="86.4125%" y="815.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="87.3693%" y="789" width="0.1609%" height="15" fill="rgb(238,178,32)" fg:x="1086" fg:w="2"/><text x="87.6193%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="87.3693%" y="773" width="0.1609%" height="15" fill="rgb(222,4,10)" fg:x="1086" fg:w="2"/><text x="87.6193%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="87.4497%" y="757" width="0.0805%" height="15" fill="rgb(239,7,37)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.4497%" y="741" width="0.0805%" height="15" fill="rgb(215,31,37)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.4497%" y="725" width="0.0805%" height="15" fill="rgb(224,83,33)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4497%" y="709" width="0.0805%" height="15" fill="rgb(239,55,3)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4497%" y="693" width="0.0805%" height="15" fill="rgb(247,92,11)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4497%" y="677" width="0.0805%" height="15" fill="rgb(239,200,7)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4497%" y="661" width="0.0805%" height="15" fill="rgb(227,115,8)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4497%" y="645" width="0.0805%" height="15" fill="rgb(215,189,27)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.4497%" y="629" width="0.0805%" height="15" fill="rgb(251,216,39)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="87.6106%" y="805" width="0.1609%" height="15" fill="rgb(207,29,47)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6911%" y="789" width="0.0805%" height="15" fill="rgb(210,71,34)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.7715%" y="773" width="0.0805%" height="15" fill="rgb(253,217,51)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.8520%" y="757" width="0.0805%" height="15" fill="rgb(222,117,46)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.8520%" y="741" width="0.0805%" height="15" fill="rgb(226,132,6)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="751.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.8520%" y="725" width="0.0805%" height="15" fill="rgb(254,145,51)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9324%" y="741" width="0.0805%" height="15" fill="rgb(231,199,27)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9324%" y="725" width="0.0805%" height="15" fill="rgb(245,158,14)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.9324%" y="709" width="0.0805%" height="15" fill="rgb(240,113,14)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.9324%" y="693" width="0.0805%" height="15" fill="rgb(210,20,13)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.9324%" y="677" width="0.0805%" height="15" fill="rgb(241,144,13)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.9324%" y="661" width="0.0805%" height="15" fill="rgb(235,43,34)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.9324%" y="645" width="0.0805%" height="15" fill="rgb(208,36,20)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0129%" y="709" width="0.0805%" height="15" fill="rgb(239,204,10)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0129%" y="693" width="0.0805%" height="15" fill="rgb(217,84,43)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.0129%" y="677" width="0.0805%" height="15" fill="rgb(241,170,50)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="88.0129%" y="725" width="0.2414%" height="15" fill="rgb(226,205,29)" fg:x="1094" fg:w="3"/><text x="88.2629%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.0933%" y="709" width="0.1609%" height="15" fill="rgb(233,113,1)" fg:x="1095" fg:w="2"/><text x="88.3433%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.1738%" y="693" width="0.0805%" height="15" fill="rgb(253,98,13)" fg:x="1096" fg:w="1"/><text x="88.4238%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.1738%" y="677" width="0.0805%" height="15" fill="rgb(211,115,12)" fg:x="1096" fg:w="1"/><text x="88.4238%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="88.2542%" y="709" width="0.2414%" height="15" fill="rgb(208,12,16)" fg:x="1097" fg:w="3"/><text x="88.5042%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.4151%" y="693" width="0.0805%" height="15" fill="rgb(237,193,54)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4151%" y="677" width="0.0805%" height="15" fill="rgb(243,22,42)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.4956%" y="693" width="0.0805%" height="15" fill="rgb(233,151,36)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.4956%" y="677" width="0.0805%" height="15" fill="rgb(237,57,45)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4956%" y="661" width="0.0805%" height="15" fill="rgb(221,88,17)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4956%" y="645" width="0.0805%" height="15" fill="rgb(230,79,15)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.4956%" y="629" width="0.0805%" height="15" fill="rgb(213,57,13)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.4956%" y="613" width="0.0805%" height="15" fill="rgb(222,116,39)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.4956%" y="597" width="0.0805%" height="15" fill="rgb(245,107,2)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5760%" y="661" width="0.0805%" height="15" fill="rgb(238,1,10)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.5760%" y="645" width="0.0805%" height="15" fill="rgb(249,4,48)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.5760%" y="629" width="0.0805%" height="15" fill="rgb(223,151,18)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.6565%" y="645" width="0.0805%" height="15" fill="rgb(227,65,43)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.6565%" y="629" width="0.0805%" height="15" fill="rgb(218,40,45)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.5760%" y="677" width="0.3218%" height="15" fill="rgb(252,121,31)" fg:x="1101" fg:w="4"/><text x="88.8260%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="88.6565%" y="661" width="0.2414%" height="15" fill="rgb(219,158,43)" fg:x="1102" fg:w="3"/><text x="88.9065%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.7369%" y="645" width="0.1609%" height="15" fill="rgb(231,162,42)" fg:x="1103" fg:w="2"/><text x="88.9869%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.7369%" y="629" width="0.1609%" height="15" fill="rgb(217,179,25)" fg:x="1103" fg:w="2"/><text x="88.9869%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="88.7369%" y="613" width="0.1609%" height="15" fill="rgb(206,212,31)" fg:x="1103" fg:w="2"/><text x="88.9869%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.8174%" y="597" width="0.0805%" height="15" fill="rgb(235,144,12)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="88.4956%" y="709" width="0.4827%" height="15" fill="rgb(213,51,10)" fg:x="1100" fg:w="6"/><text x="88.7456%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="88.5760%" y="693" width="0.4023%" height="15" fill="rgb(231,145,14)" fg:x="1101" fg:w="5"/><text x="88.8260%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8978%" y="677" width="0.0805%" height="15" fill="rgb(235,15,28)" fg:x="1105" fg:w="1"/><text x="89.1478%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="88.0129%" y="741" width="1.0459%" height="15" fill="rgb(237,206,10)" fg:x="1094" fg:w="13"/><text x="88.2629%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="88.2542%" y="725" width="0.8045%" height="15" fill="rgb(236,227,27)" fg:x="1097" fg:w="10"/><text x="88.5042%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.9783%" y="709" width="0.0805%" height="15" fill="rgb(246,83,35)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.9783%" y="693" width="0.0805%" height="15" fill="rgb(220,136,24)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.9783%" y="677" width="0.0805%" height="15" fill="rgb(217,3,25)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="89.0587%" y="693" width="0.1609%" height="15" fill="rgb(239,24,14)" fg:x="1107" fg:w="2"/><text x="89.3087%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1392%" y="677" width="0.0805%" height="15" fill="rgb(244,16,53)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2196%" y="677" width="0.0805%" height="15" fill="rgb(208,175,44)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.0587%" y="741" width="0.3218%" height="15" fill="rgb(252,18,48)" fg:x="1107" fg:w="4"/><text x="89.3087%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="89.0587%" y="725" width="0.3218%" height="15" fill="rgb(234,199,32)" fg:x="1107" fg:w="4"/><text x="89.3087%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.0587%" y="709" width="0.3218%" height="15" fill="rgb(225,77,54)" fg:x="1107" fg:w="4"/><text x="89.3087%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.2196%" y="693" width="0.1609%" height="15" fill="rgb(225,42,25)" fg:x="1109" fg:w="2"/><text x="89.4696%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3001%" y="677" width="0.0805%" height="15" fill="rgb(242,227,46)" fg:x="1110" fg:w="1"/><text x="89.5501%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3001%" y="661" width="0.0805%" height="15" fill="rgb(246,197,35)" fg:x="1110" fg:w="1"/><text x="89.5501%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3001%" y="645" width="0.0805%" height="15" fill="rgb(215,159,26)" fg:x="1110" fg:w="1"/><text x="89.5501%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4610%" y="629" width="0.0805%" height="15" fill="rgb(212,194,50)" fg:x="1112" fg:w="1"/><text x="89.7110%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.3805%" y="709" width="0.2414%" height="15" fill="rgb(246,132,1)" fg:x="1111" fg:w="3"/><text x="89.6305%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="89.3805%" y="693" width="0.2414%" height="15" fill="rgb(217,71,7)" fg:x="1111" fg:w="3"/><text x="89.6305%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.3805%" y="677" width="0.2414%" height="15" fill="rgb(252,59,32)" fg:x="1111" fg:w="3"/><text x="89.6305%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.3805%" y="661" width="0.2414%" height="15" fill="rgb(253,204,25)" fg:x="1111" fg:w="3"/><text x="89.6305%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.4610%" y="645" width="0.1609%" height="15" fill="rgb(232,21,16)" fg:x="1112" fg:w="2"/><text x="89.7110%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.5414%" y="629" width="0.0805%" height="15" fill="rgb(248,90,29)" fg:x="1113" fg:w="1"/><text x="89.7914%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.5414%" y="613" width="0.0805%" height="15" fill="rgb(249,223,7)" fg:x="1113" fg:w="1"/><text x="89.7914%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5414%" y="597" width="0.0805%" height="15" fill="rgb(231,119,42)" fg:x="1113" fg:w="1"/><text x="89.7914%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="89.6219%" y="661" width="0.3218%" height="15" fill="rgb(215,41,35)" fg:x="1114" fg:w="4"/><text x="89.8719%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="89.7023%" y="645" width="0.2414%" height="15" fill="rgb(220,44,45)" fg:x="1115" fg:w="3"/><text x="89.9523%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="89.7828%" y="629" width="0.1609%" height="15" fill="rgb(253,197,36)" fg:x="1116" fg:w="2"/><text x="90.0328%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="89.7828%" y="613" width="0.1609%" height="15" fill="rgb(245,225,54)" fg:x="1116" fg:w="2"/><text x="90.0328%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="89.6219%" y="693" width="0.4023%" height="15" fill="rgb(239,94,37)" fg:x="1114" fg:w="5"/><text x="89.8719%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="89.6219%" y="677" width="0.4023%" height="15" fill="rgb(242,217,10)" fg:x="1114" fg:w="5"/><text x="89.8719%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.9437%" y="661" width="0.0805%" height="15" fill="rgb(250,193,7)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="671.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="89.3805%" y="725" width="0.7241%" height="15" fill="rgb(230,104,19)" fg:x="1111" fg:w="9"/><text x="89.6305%" y="735.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="89.6219%" y="709" width="0.4827%" height="15" fill="rgb(230,181,4)" fg:x="1114" fg:w="6"/><text x="89.8719%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="90.0241%" y="693" width="0.0805%" height="15" fill="rgb(216,219,49)" fg:x="1119" fg:w="1"/><text x="90.2741%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0241%" y="677" width="0.0805%" height="15" fill="rgb(254,144,0)" fg:x="1119" fg:w="1"/><text x="90.2741%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1046%" y="693" width="0.0805%" height="15" fill="rgb(205,209,38)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1850%" y="693" width="0.0805%" height="15" fill="rgb(240,21,42)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.1850%" y="677" width="0.0805%" height="15" fill="rgb(241,132,3)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1850%" y="661" width="0.0805%" height="15" fill="rgb(225,14,2)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2655%" y="693" width="0.0805%" height="15" fill="rgb(210,141,35)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.2655%" y="677" width="0.0805%" height="15" fill="rgb(251,14,44)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2655%" y="661" width="0.0805%" height="15" fill="rgb(247,48,18)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2655%" y="645" width="0.0805%" height="15" fill="rgb(225,0,40)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2655%" y="629" width="0.0805%" height="15" fill="rgb(221,31,33)" fg:x="1122" fg:w="1"/><text x="90.5155%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3459%" y="693" width="0.0805%" height="15" fill="rgb(237,42,40)" fg:x="1123" fg:w="1"/><text x="90.5959%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.3459%" y="677" width="0.0805%" height="15" fill="rgb(233,51,29)" fg:x="1123" fg:w="1"/><text x="90.5959%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3459%" y="661" width="0.0805%" height="15" fill="rgb(226,58,20)" fg:x="1123" fg:w="1"/><text x="90.5959%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="90.4264%" y="645" width="0.1609%" height="15" fill="rgb(208,98,7)" fg:x="1124" fg:w="2"/><text x="90.6764%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.4264%" y="629" width="0.1609%" height="15" fill="rgb(228,143,44)" fg:x="1124" fg:w="2"/><text x="90.6764%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.4264%" y="613" width="0.1609%" height="15" fill="rgb(246,55,38)" fg:x="1124" fg:w="2"/><text x="90.6764%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.5068%" y="597" width="0.0805%" height="15" fill="rgb(247,87,16)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5068%" y="581" width="0.0805%" height="15" fill="rgb(234,129,42)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="90.6677%" y="629" width="0.1609%" height="15" fill="rgb(220,82,16)" fg:x="1127" fg:w="2"/><text x="90.9177%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8286%" y="613" width="0.0805%" height="15" fill="rgb(211,88,4)" fg:x="1129" fg:w="1"/><text x="91.0786%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.9895%" y="533" width="0.0805%" height="15" fill="rgb(248,151,21)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9895%" y="517" width="0.0805%" height="15" fill="rgb(238,163,6)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.9895%" y="501" width="0.0805%" height="15" fill="rgb(209,183,11)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.9895%" y="565" width="0.1609%" height="15" fill="rgb(219,37,20)" fg:x="1131" fg:w="2"/><text x="91.2395%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.9895%" y="549" width="0.1609%" height="15" fill="rgb(210,158,4)" fg:x="1131" fg:w="2"/><text x="91.2395%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0700%" y="533" width="0.0805%" height="15" fill="rgb(221,167,53)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="90.4264%" y="677" width="0.8045%" height="15" fill="rgb(237,151,45)" fg:x="1124" fg:w="10"/><text x="90.6764%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="90.4264%" y="661" width="0.8045%" height="15" fill="rgb(231,39,3)" fg:x="1124" fg:w="10"/><text x="90.6764%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="90.5873%" y="645" width="0.6436%" height="15" fill="rgb(212,167,28)" fg:x="1126" fg:w="8"/><text x="90.8373%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="90.8286%" y="629" width="0.4023%" height="15" fill="rgb(232,178,8)" fg:x="1129" fg:w="5"/><text x="91.0786%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.9091%" y="613" width="0.3218%" height="15" fill="rgb(225,151,20)" fg:x="1130" fg:w="4"/><text x="91.1591%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="90.9091%" y="597" width="0.3218%" height="15" fill="rgb(238,3,37)" fg:x="1130" fg:w="4"/><text x="91.1591%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.9091%" y="581" width="0.3218%" height="15" fill="rgb(251,147,42)" fg:x="1130" fg:w="4"/><text x="91.1591%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1504%" y="565" width="0.0805%" height="15" fill="rgb(208,173,10)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.21%)</title><rect x="90.1046%" y="725" width="1.2068%" height="15" fill="rgb(246,225,4)" fg:x="1120" fg:w="15"/><text x="90.3546%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="90.1046%" y="709" width="1.2068%" height="15" fill="rgb(248,102,6)" fg:x="1120" fg:w="15"/><text x="90.3546%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="90.4264%" y="693" width="0.8850%" height="15" fill="rgb(232,6,21)" fg:x="1124" fg:w="11"/><text x="90.6764%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2309%" y="677" width="0.0805%" height="15" fill="rgb(221,179,22)" fg:x="1134" fg:w="1"/><text x="91.4809%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.5527%" y="501" width="0.0805%" height="15" fill="rgb(252,50,20)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5527%" y="485" width="0.0805%" height="15" fill="rgb(222,56,38)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.5527%" y="469" width="0.0805%" height="15" fill="rgb(206,193,29)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.5527%" y="453" width="0.0805%" height="15" fill="rgb(239,192,45)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.6331%" y="501" width="0.0805%" height="15" fill="rgb(254,18,36)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6331%" y="485" width="0.0805%" height="15" fill="rgb(221,127,11)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.5527%" y="533" width="0.3218%" height="15" fill="rgb(234,146,35)" fg:x="1138" fg:w="4"/><text x="91.8027%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="91.5527%" y="517" width="0.3218%" height="15" fill="rgb(254,201,37)" fg:x="1138" fg:w="4"/><text x="91.8027%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.7136%" y="501" width="0.1609%" height="15" fill="rgb(211,202,23)" fg:x="1140" fg:w="2"/><text x="91.9636%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.7940%" y="485" width="0.0805%" height="15" fill="rgb(237,91,2)" fg:x="1141" fg:w="1"/><text x="92.0440%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7940%" y="469" width="0.0805%" height="15" fill="rgb(226,228,36)" fg:x="1141" fg:w="1"/><text x="92.0440%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="91.3918%" y="597" width="0.5632%" height="15" fill="rgb(213,63,50)" fg:x="1136" fg:w="7"/><text x="91.6418%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="91.4722%" y="581" width="0.4827%" height="15" fill="rgb(235,194,19)" fg:x="1137" fg:w="6"/><text x="91.7222%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.5527%" y="565" width="0.4023%" height="15" fill="rgb(207,204,18)" fg:x="1138" fg:w="5"/><text x="91.8027%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.5527%" y="549" width="0.4023%" height="15" fill="rgb(248,8,7)" fg:x="1138" fg:w="5"/><text x="91.8027%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.8745%" y="533" width="0.0805%" height="15" fill="rgb(223,145,47)" fg:x="1142" fg:w="1"/><text x="92.1245%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8745%" y="517" width="0.0805%" height="15" fill="rgb(228,84,11)" fg:x="1142" fg:w="1"/><text x="92.1245%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="91.3918%" y="629" width="0.6436%" height="15" fill="rgb(218,76,45)" fg:x="1136" fg:w="8"/><text x="91.6418%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="91.3918%" y="613" width="0.6436%" height="15" fill="rgb(223,80,15)" fg:x="1136" fg:w="8"/><text x="91.6418%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9549%" y="597" width="0.0805%" height="15" fill="rgb(219,218,33)" fg:x="1143" fg:w="1"/><text x="92.2049%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9549%" y="581" width="0.0805%" height="15" fill="rgb(208,51,11)" fg:x="1143" fg:w="1"/><text x="92.2049%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9549%" y="565" width="0.0805%" height="15" fill="rgb(229,165,39)" fg:x="1143" fg:w="1"/><text x="92.2049%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="91.3113%" y="661" width="0.8045%" height="15" fill="rgb(241,100,24)" fg:x="1135" fg:w="10"/><text x="91.5613%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="91.3113%" y="645" width="0.8045%" height="15" fill="rgb(228,14,23)" fg:x="1135" fg:w="10"/><text x="91.5613%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0354%" y="629" width="0.0805%" height="15" fill="rgb(247,116,52)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0354%" y="613" width="0.0805%" height="15" fill="rgb(216,149,33)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0354%" y="597" width="0.0805%" height="15" fill="rgb(238,142,29)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1158%" y="661" width="0.0805%" height="15" fill="rgb(224,83,40)" fg:x="1145" fg:w="1"/><text x="92.3658%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.1158%" y="645" width="0.0805%" height="15" fill="rgb(234,165,11)" fg:x="1145" fg:w="1"/><text x="92.3658%" y="655.50"></text></g><g><title>engine::session::Session::close (59 samples, 4.75%)</title><rect x="87.5302%" y="821" width="4.7466%" height="15" fill="rgb(215,96,23)" fg:x="1088" fg:w="59"/><text x="87.7802%" y="831.50">engine..</text></g><g><title>engine::session::state::State::close (56 samples, 4.51%)</title><rect x="87.7715%" y="805" width="4.5052%" height="15" fill="rgb(233,179,26)" fg:x="1091" fg:w="56"/><text x="88.0215%" y="815.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (56 samples, 4.51%)</title><rect x="87.7715%" y="789" width="4.5052%" height="15" fill="rgb(225,129,33)" fg:x="1091" fg:w="56"/><text x="88.0215%" y="799.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (55 samples, 4.42%)</title><rect x="87.8520%" y="773" width="4.4248%" height="15" fill="rgb(237,49,13)" fg:x="1092" fg:w="55"/><text x="88.1020%" y="783.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (54 samples, 4.34%)</title><rect x="87.9324%" y="757" width="4.3443%" height="15" fill="rgb(211,3,31)" fg:x="1093" fg:w="54"/><text x="88.1824%" y="767.50">engin..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.90%)</title><rect x="89.3805%" y="741" width="2.8962%" height="15" fill="rgb(216,152,19)" fg:x="1111" fg:w="36"/><text x="89.6305%" y="751.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="91.3113%" y="725" width="0.9654%" height="15" fill="rgb(251,121,35)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="735.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="91.3113%" y="709" width="0.9654%" height="15" fill="rgb(210,217,47)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="91.3113%" y="693" width="0.9654%" height="15" fill="rgb(244,116,22)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="91.3113%" y="677" width="0.9654%" height="15" fill="rgb(228,17,21)" fg:x="1135" fg:w="12"/><text x="91.5613%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1963%" y="661" width="0.0805%" height="15" fill="rgb(240,149,34)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="92.5181%" y="565" width="0.0805%" height="15" fill="rgb(208,125,47)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.5181%" y="549" width="0.0805%" height="15" fill="rgb(249,186,39)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="92.5181%" y="613" width="0.1609%" height="15" fill="rgb(240,220,33)" fg:x="1150" fg:w="2"/><text x="92.7681%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.5181%" y="597" width="0.1609%" height="15" fill="rgb(243,110,23)" fg:x="1150" fg:w="2"/><text x="92.7681%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="92.5181%" y="581" width="0.1609%" height="15" fill="rgb(219,163,46)" fg:x="1150" fg:w="2"/><text x="92.7681%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.5986%" y="565" width="0.0805%" height="15" fill="rgb(216,126,30)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.5986%" y="549" width="0.0805%" height="15" fill="rgb(208,139,11)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5986%" y="533" width="0.0805%" height="15" fill="rgb(213,118,36)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5986%" y="517" width="0.0805%" height="15" fill="rgb(226,43,17)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5986%" y="501" width="0.0805%" height="15" fill="rgb(254,217,4)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5986%" y="485" width="0.0805%" height="15" fill="rgb(210,134,47)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5986%" y="469" width="0.0805%" height="15" fill="rgb(237,24,49)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5986%" y="453" width="0.0805%" height="15" fill="rgb(251,39,46)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5986%" y="437" width="0.0805%" height="15" fill="rgb(251,220,3)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5986%" y="421" width="0.0805%" height="15" fill="rgb(228,105,12)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5986%" y="405" width="0.0805%" height="15" fill="rgb(215,196,1)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5986%" y="389" width="0.0805%" height="15" fill="rgb(214,33,39)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5986%" y="373" width="0.0805%" height="15" fill="rgb(220,19,52)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5986%" y="357" width="0.0805%" height="15" fill="rgb(221,78,38)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5986%" y="341" width="0.0805%" height="15" fill="rgb(253,30,16)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5986%" y="325" width="0.0805%" height="15" fill="rgb(242,65,0)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5986%" y="309" width="0.0805%" height="15" fill="rgb(235,201,12)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5986%" y="293" width="0.0805%" height="15" fill="rgb(233,161,9)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="303.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="92.6790%" y="597" width="0.0805%" height="15" fill="rgb(241,207,41)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.6790%" y="581" width="0.0805%" height="15" fill="rgb(212,69,46)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6790%" y="565" width="0.0805%" height="15" fill="rgb(239,69,45)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6790%" y="549" width="0.0805%" height="15" fill="rgb(242,117,48)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.6790%" y="533" width="0.0805%" height="15" fill="rgb(228,41,36)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9204%" y="485" width="0.0805%" height="15" fill="rgb(212,3,32)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="495.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="92.9204%" y="469" width="0.0805%" height="15" fill="rgb(233,41,49)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.0008%" y="469" width="0.0805%" height="15" fill="rgb(252,170,49)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.0008%" y="453" width="0.0805%" height="15" fill="rgb(229,53,26)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0008%" y="437" width="0.0805%" height="15" fill="rgb(217,157,12)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0008%" y="421" width="0.0805%" height="15" fill="rgb(227,17,9)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.0008%" y="405" width="0.0805%" height="15" fill="rgb(218,84,12)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.0008%" y="389" width="0.0805%" height="15" fill="rgb(212,79,24)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="92.5181%" y="661" width="0.6436%" height="15" fill="rgb(217,222,37)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="92.5181%" y="645" width="0.6436%" height="15" fill="rgb(246,208,8)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="92.5181%" y="629" width="0.6436%" height="15" fill="rgb(244,133,10)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="92.6790%" y="613" width="0.4827%" height="15" fill="rgb(209,219,41)" fg:x="1152" fg:w="6"/><text x="92.9290%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="92.7595%" y="597" width="0.4023%" height="15" fill="rgb(253,175,45)" fg:x="1153" fg:w="5"/><text x="93.0095%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="92.7595%" y="581" width="0.4023%" height="15" fill="rgb(235,100,37)" fg:x="1153" fg:w="5"/><text x="93.0095%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="92.7595%" y="565" width="0.4023%" height="15" fill="rgb(225,87,19)" fg:x="1153" fg:w="5"/><text x="93.0095%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="92.7595%" y="549" width="0.4023%" height="15" fill="rgb(217,152,17)" fg:x="1153" fg:w="5"/><text x="93.0095%" y="559.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="92.8399%" y="533" width="0.3218%" height="15" fill="rgb(235,72,13)" fg:x="1154" fg:w="4"/><text x="93.0899%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.9204%" y="517" width="0.2414%" height="15" fill="rgb(233,140,18)" fg:x="1155" fg:w="3"/><text x="93.1704%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.9204%" y="501" width="0.2414%" height="15" fill="rgb(207,212,28)" fg:x="1155" fg:w="3"/><text x="93.1704%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="93.0008%" y="485" width="0.1609%" height="15" fill="rgb(220,130,25)" fg:x="1156" fg:w="2"/><text x="93.2508%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0813%" y="469" width="0.0805%" height="15" fill="rgb(205,55,34)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0813%" y="453" width="0.0805%" height="15" fill="rgb(237,54,35)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.0813%" y="437" width="0.0805%" height="15" fill="rgb(208,67,23)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0813%" y="421" width="0.0805%" height="15" fill="rgb(206,207,50)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0813%" y="405" width="0.0805%" height="15" fill="rgb(213,211,42)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.0813%" y="389" width="0.0805%" height="15" fill="rgb(252,197,50)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0813%" y="373" width="0.0805%" height="15" fill="rgb(251,211,41)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0813%" y="357" width="0.0805%" height="15" fill="rgb(229,211,5)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1617%" y="661" width="0.0805%" height="15" fill="rgb(239,36,31)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.1617%" y="645" width="0.0805%" height="15" fill="rgb(248,67,31)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.1617%" y="629" width="0.0805%" height="15" fill="rgb(249,55,44)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1617%" y="613" width="0.0805%" height="15" fill="rgb(216,82,12)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1617%" y="597" width="0.0805%" height="15" fill="rgb(242,174,1)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.1617%" y="581" width="0.0805%" height="15" fill="rgb(208,120,29)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.1617%" y="565" width="0.0805%" height="15" fill="rgb(221,105,43)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.1617%" y="549" width="0.0805%" height="15" fill="rgb(234,124,22)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1617%" y="533" width="0.0805%" height="15" fill="rgb(212,23,30)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.1617%" y="517" width="0.0805%" height="15" fill="rgb(219,122,53)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.1617%" y="501" width="0.0805%" height="15" fill="rgb(248,84,24)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.1617%" y="485" width="0.0805%" height="15" fill="rgb(245,115,18)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.1617%" y="469" width="0.0805%" height="15" fill="rgb(227,176,51)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.1617%" y="453" width="0.0805%" height="15" fill="rgb(229,63,42)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.1617%" y="437" width="0.0805%" height="15" fill="rgb(247,202,24)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (11 samples, 0.88%)</title><rect x="92.5181%" y="709" width="0.8850%" height="15" fill="rgb(244,173,20)" fg:x="1150" fg:w="11"/><text x="92.7681%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="92.5181%" y="693" width="0.8850%" height="15" fill="rgb(242,81,47)" fg:x="1150" fg:w="11"/><text x="92.7681%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="92.5181%" y="677" width="0.8850%" height="15" fill="rgb(231,185,54)" fg:x="1150" fg:w="11"/><text x="92.7681%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.2422%" y="661" width="0.1609%" height="15" fill="rgb(243,55,32)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.2422%" y="645" width="0.1609%" height="15" fill="rgb(208,167,19)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.2422%" y="629" width="0.1609%" height="15" fill="rgb(231,72,35)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.2422%" y="613" width="0.1609%" height="15" fill="rgb(250,173,51)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="93.2422%" y="597" width="0.1609%" height="15" fill="rgb(209,5,22)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3226%" y="581" width="0.0805%" height="15" fill="rgb(250,174,19)" fg:x="1160" fg:w="1"/><text x="93.5726%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4031%" y="693" width="0.0805%" height="15" fill="rgb(217,3,49)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5640%" y="389" width="0.0805%" height="15" fill="rgb(218,225,5)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5640%" y="373" width="0.0805%" height="15" fill="rgb(236,89,11)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.5640%" y="357" width="0.0805%" height="15" fill="rgb(206,33,28)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.5640%" y="341" width="0.0805%" height="15" fill="rgb(241,56,42)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.5640%" y="325" width="0.0805%" height="15" fill="rgb(222,44,11)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.5640%" y="309" width="0.0805%" height="15" fill="rgb(234,111,20)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.5640%" y="293" width="0.0805%" height="15" fill="rgb(237,77,6)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.5640%" y="277" width="0.0805%" height="15" fill="rgb(235,111,23)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.5640%" y="261" width="0.0805%" height="15" fill="rgb(251,135,29)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.5640%" y="245" width="0.0805%" height="15" fill="rgb(217,57,1)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.5640%" y="229" width="0.0805%" height="15" fill="rgb(249,119,31)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.5640%" y="213" width="0.0805%" height="15" fill="rgb(233,164,33)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.5640%" y="197" width="0.0805%" height="15" fill="rgb(250,217,43)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.5640%" y="181" width="0.0805%" height="15" fill="rgb(232,154,50)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.5640%" y="165" width="0.0805%" height="15" fill="rgb(227,190,8)" fg:x="1163" fg:w="1"/><text x="93.8140%" y="175.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (15 samples, 1.21%)</title><rect x="92.5181%" y="725" width="1.2068%" height="15" fill="rgb(209,217,32)" fg:x="1150" fg:w="15"/><text x="92.7681%" y="735.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="93.4031%" y="709" width="0.3218%" height="15" fill="rgb(243,203,50)" fg:x="1161" fg:w="4"/><text x="93.6531%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="93.4835%" y="693" width="0.2414%" height="15" fill="rgb(232,152,27)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="93.4835%" y="677" width="0.2414%" height="15" fill="rgb(240,34,29)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="93.4835%" y="661" width="0.2414%" height="15" fill="rgb(215,185,52)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="93.4835%" y="645" width="0.2414%" height="15" fill="rgb(240,89,49)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="629" width="0.2414%" height="15" fill="rgb(225,12,52)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="93.4835%" y="613" width="0.2414%" height="15" fill="rgb(239,128,45)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="597" width="0.2414%" height="15" fill="rgb(211,78,47)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="581" width="0.2414%" height="15" fill="rgb(232,31,21)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="565" width="0.2414%" height="15" fill="rgb(222,168,14)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="575.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="93.4835%" y="549" width="0.2414%" height="15" fill="rgb(209,128,24)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="533" width="0.2414%" height="15" fill="rgb(249,35,13)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="517" width="0.2414%" height="15" fill="rgb(218,7,2)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="501" width="0.2414%" height="15" fill="rgb(238,107,27)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="93.4835%" y="485" width="0.2414%" height="15" fill="rgb(217,88,38)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="469" width="0.2414%" height="15" fill="rgb(230,207,0)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="453" width="0.2414%" height="15" fill="rgb(249,64,54)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="93.4835%" y="437" width="0.2414%" height="15" fill="rgb(231,7,11)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="93.4835%" y="421" width="0.2414%" height="15" fill="rgb(205,149,21)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.5640%" y="405" width="0.1609%" height="15" fill="rgb(215,126,34)" fg:x="1163" fg:w="2"/><text x="93.8140%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="93.6444%" y="389" width="0.0805%" height="15" fill="rgb(241,132,45)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="93.6444%" y="373" width="0.0805%" height="15" fill="rgb(252,69,32)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.6444%" y="357" width="0.0805%" height="15" fill="rgb(232,204,19)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.6444%" y="341" width="0.0805%" height="15" fill="rgb(249,15,47)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.6444%" y="325" width="0.0805%" height="15" fill="rgb(209,227,23)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.6444%" y="309" width="0.0805%" height="15" fill="rgb(248,92,24)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.6444%" y="293" width="0.0805%" height="15" fill="rgb(247,59,2)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.6444%" y="277" width="0.0805%" height="15" fill="rgb(221,30,5)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.6444%" y="261" width="0.0805%" height="15" fill="rgb(208,108,53)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="271.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7249%" y="725" width="0.0805%" height="15" fill="rgb(211,183,26)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.8858%" y="645" width="0.0805%" height="15" fill="rgb(232,132,4)" fg:x="1167" fg:w="1"/><text x="94.1358%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="93.9662%" y="533" width="0.0805%" height="15" fill="rgb(253,128,37)" fg:x="1168" fg:w="1"/><text x="94.2162%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.9662%" y="517" width="0.0805%" height="15" fill="rgb(221,58,24)" fg:x="1168" fg:w="1"/><text x="94.2162%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.1271%" y="437" width="0.0805%" height="15" fill="rgb(230,54,45)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1271%" y="421" width="0.0805%" height="15" fill="rgb(254,21,18)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1271%" y="405" width="0.0805%" height="15" fill="rgb(221,108,0)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1271%" y="389" width="0.0805%" height="15" fill="rgb(206,95,1)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1271%" y="373" width="0.0805%" height="15" fill="rgb(237,52,5)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1271%" y="357" width="0.0805%" height="15" fill="rgb(218,150,34)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.1271%" y="341" width="0.0805%" height="15" fill="rgb(235,194,28)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.1271%" y="325" width="0.0805%" height="15" fill="rgb(245,92,18)" fg:x="1170" fg:w="1"/><text x="94.3771%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.0467%" y="501" width="0.2414%" height="15" fill="rgb(253,203,53)" fg:x="1169" fg:w="3"/><text x="94.2967%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.0467%" y="485" width="0.2414%" height="15" fill="rgb(249,185,47)" fg:x="1169" fg:w="3"/><text x="94.2967%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1271%" y="469" width="0.1609%" height="15" fill="rgb(252,194,52)" fg:x="1170" fg:w="2"/><text x="94.3771%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1271%" y="453" width="0.1609%" height="15" fill="rgb(210,53,36)" fg:x="1170" fg:w="2"/><text x="94.3771%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2076%" y="437" width="0.0805%" height="15" fill="rgb(237,37,25)" fg:x="1171" fg:w="1"/><text x="94.4576%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.2880%" y="501" width="0.0805%" height="15" fill="rgb(242,116,27)" fg:x="1172" fg:w="1"/><text x="94.5380%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4489%" y="373" width="0.0805%" height="15" fill="rgb(213,185,26)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4489%" y="357" width="0.0805%" height="15" fill="rgb(225,204,8)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6903%" y="341" width="0.0805%" height="15" fill="rgb(254,111,37)" fg:x="1177" fg:w="1"/><text x="94.9403%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (11 samples, 0.88%)</title><rect x="93.9662%" y="549" width="0.8850%" height="15" fill="rgb(242,35,9)" fg:x="1168" fg:w="11"/><text x="94.2162%" y="559.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="94.0467%" y="533" width="0.8045%" height="15" fill="rgb(232,138,49)" fg:x="1169" fg:w="10"/><text x="94.2967%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="94.0467%" y="517" width="0.8045%" height="15" fill="rgb(247,56,4)" fg:x="1169" fg:w="10"/><text x="94.2967%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="94.3685%" y="501" width="0.4827%" height="15" fill="rgb(226,179,17)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.3685%" y="485" width="0.4827%" height="15" fill="rgb(216,163,45)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="94.3685%" y="469" width="0.4827%" height="15" fill="rgb(211,157,3)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.3685%" y="453" width="0.4827%" height="15" fill="rgb(234,44,20)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="94.3685%" y="437" width="0.4827%" height="15" fill="rgb(254,138,23)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.3685%" y="421" width="0.4827%" height="15" fill="rgb(206,119,39)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="94.3685%" y="405" width="0.4827%" height="15" fill="rgb(231,105,52)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.3685%" y="389" width="0.4827%" height="15" fill="rgb(250,20,5)" fg:x="1173" fg:w="6"/><text x="94.6185%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.5294%" y="373" width="0.3218%" height="15" fill="rgb(215,198,30)" fg:x="1175" fg:w="4"/><text x="94.7794%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.6098%" y="357" width="0.2414%" height="15" fill="rgb(246,142,8)" fg:x="1176" fg:w="3"/><text x="94.8598%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7707%" y="341" width="0.0805%" height="15" fill="rgb(243,26,38)" fg:x="1178" fg:w="1"/><text x="95.0207%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8512%" y="437" width="0.0805%" height="15" fill="rgb(205,133,28)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8512%" y="421" width="0.0805%" height="15" fill="rgb(212,34,0)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.8512%" y="469" width="0.2414%" height="15" fill="rgb(251,226,22)" fg:x="1179" fg:w="3"/><text x="95.1012%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="94.8512%" y="453" width="0.2414%" height="15" fill="rgb(252,119,9)" fg:x="1179" fg:w="3"/><text x="95.1012%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.9316%" y="437" width="0.1609%" height="15" fill="rgb(213,150,50)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.9316%" y="421" width="0.1609%" height="15" fill="rgb(212,24,39)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="94.9316%" y="405" width="0.1609%" height="15" fill="rgb(213,46,39)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="94.9316%" y="389" width="0.1609%" height="15" fill="rgb(239,106,12)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="94.9316%" y="373" width="0.1609%" height="15" fill="rgb(249,229,21)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.9316%" y="357" width="0.1609%" height="15" fill="rgb(212,158,3)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.9316%" y="341" width="0.1609%" height="15" fill="rgb(253,26,48)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="94.9316%" y="325" width="0.1609%" height="15" fill="rgb(238,178,20)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="94.9316%" y="309" width="0.1609%" height="15" fill="rgb(208,86,15)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="94.9316%" y="293" width="0.1609%" height="15" fill="rgb(239,42,53)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="94.9316%" y="277" width="0.1609%" height="15" fill="rgb(245,226,8)" fg:x="1180" fg:w="2"/><text x="95.1816%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0121%" y="261" width="0.0805%" height="15" fill="rgb(216,176,32)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="94.8512%" y="485" width="0.3218%" height="15" fill="rgb(231,186,21)" fg:x="1179" fg:w="4"/><text x="95.1012%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0925%" y="469" width="0.0805%" height="15" fill="rgb(205,95,49)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0925%" y="453" width="0.0805%" height="15" fill="rgb(217,145,8)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0925%" y="437" width="0.0805%" height="15" fill="rgb(239,144,48)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0925%" y="421" width="0.0805%" height="15" fill="rgb(214,189,23)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0925%" y="405" width="0.0805%" height="15" fill="rgb(229,157,17)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0925%" y="389" width="0.0805%" height="15" fill="rgb(230,5,48)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0925%" y="373" width="0.0805%" height="15" fill="rgb(224,156,48)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.0925%" y="357" width="0.0805%" height="15" fill="rgb(223,14,29)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.0925%" y="341" width="0.0805%" height="15" fill="rgb(229,96,36)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.0925%" y="325" width="0.0805%" height="15" fill="rgb(231,102,53)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.0925%" y="309" width="0.0805%" height="15" fill="rgb(210,77,38)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0925%" y="293" width="0.0805%" height="15" fill="rgb(235,131,6)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="94.8512%" y="501" width="0.4827%" height="15" fill="rgb(252,55,38)" fg:x="1179" fg:w="6"/><text x="95.1012%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="95.1730%" y="485" width="0.1609%" height="15" fill="rgb(246,38,14)" fg:x="1183" fg:w="2"/><text x="95.4230%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3339%" y="405" width="0.0805%" height="15" fill="rgb(242,27,5)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.4143%" y="373" width="0.0805%" height="15" fill="rgb(228,65,35)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4143%" y="357" width="0.0805%" height="15" fill="rgb(245,93,11)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.4143%" y="341" width="0.0805%" height="15" fill="rgb(213,1,31)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.4143%" y="325" width="0.0805%" height="15" fill="rgb(237,205,14)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.4143%" y="309" width="0.0805%" height="15" fill="rgb(232,118,45)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="319.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (20 samples, 1.61%)</title><rect x="93.9662%" y="565" width="1.6090%" height="15" fill="rgb(218,5,6)" fg:x="1168" fg:w="20"/><text x="94.2162%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="94.8512%" y="549" width="0.7241%" height="15" fill="rgb(251,87,51)" fg:x="1179" fg:w="9"/><text x="95.1012%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="94.8512%" y="533" width="0.7241%" height="15" fill="rgb(207,225,20)" fg:x="1179" fg:w="9"/><text x="95.1012%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="94.8512%" y="517" width="0.7241%" height="15" fill="rgb(222,78,54)" fg:x="1179" fg:w="9"/><text x="95.1012%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.3339%" y="501" width="0.2414%" height="15" fill="rgb(232,85,16)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.3339%" y="485" width="0.2414%" height="15" fill="rgb(244,25,33)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.3339%" y="469" width="0.2414%" height="15" fill="rgb(233,24,36)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.3339%" y="453" width="0.2414%" height="15" fill="rgb(253,49,54)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="95.3339%" y="437" width="0.2414%" height="15" fill="rgb(245,12,22)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.3339%" y="421" width="0.2414%" height="15" fill="rgb(253,141,28)" fg:x="1185" fg:w="3"/><text x="95.5839%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.4143%" y="405" width="0.1609%" height="15" fill="rgb(225,207,27)" fg:x="1186" fg:w="2"/><text x="95.6643%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.4143%" y="389" width="0.1609%" height="15" fill="rgb(220,84,2)" fg:x="1186" fg:w="2"/><text x="95.6643%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="95.4948%" y="373" width="0.0805%" height="15" fill="rgb(224,37,37)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="95.5752%" y="533" width="0.0805%" height="15" fill="rgb(220,143,18)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5752%" y="517" width="0.0805%" height="15" fill="rgb(210,88,33)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5752%" y="501" width="0.0805%" height="15" fill="rgb(219,87,51)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5752%" y="485" width="0.0805%" height="15" fill="rgb(211,7,35)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5752%" y="469" width="0.0805%" height="15" fill="rgb(232,77,2)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5752%" y="453" width="0.0805%" height="15" fill="rgb(249,94,25)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5752%" y="437" width="0.0805%" height="15" fill="rgb(215,112,2)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5752%" y="421" width="0.0805%" height="15" fill="rgb(226,115,48)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5752%" y="405" width="0.0805%" height="15" fill="rgb(249,196,10)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5752%" y="389" width="0.0805%" height="15" fill="rgb(237,109,14)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5752%" y="373" width="0.0805%" height="15" fill="rgb(217,103,53)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5752%" y="357" width="0.0805%" height="15" fill="rgb(244,137,9)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5752%" y="341" width="0.0805%" height="15" fill="rgb(227,201,3)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6557%" y="469" width="0.0805%" height="15" fill="rgb(243,94,6)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6557%" y="453" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="95.5752%" y="565" width="0.2414%" height="15" fill="rgb(247,10,30)" fg:x="1188" fg:w="3"/><text x="95.8252%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="95.5752%" y="549" width="0.2414%" height="15" fill="rgb(205,26,28)" fg:x="1188" fg:w="3"/><text x="95.8252%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="95.6557%" y="533" width="0.1609%" height="15" fill="rgb(206,99,35)" fg:x="1189" fg:w="2"/><text x="95.9057%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="95.6557%" y="517" width="0.1609%" height="15" fill="rgb(238,130,40)" fg:x="1189" fg:w="2"/><text x="95.9057%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="95.6557%" y="501" width="0.1609%" height="15" fill="rgb(224,126,31)" fg:x="1189" fg:w="2"/><text x="95.9057%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="95.6557%" y="485" width="0.1609%" height="15" fill="rgb(254,105,17)" fg:x="1189" fg:w="2"/><text x="95.9057%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="469" width="0.0805%" height="15" fill="rgb(216,87,36)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="453" width="0.0805%" height="15" fill="rgb(240,21,12)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="437" width="0.0805%" height="15" fill="rgb(245,192,34)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7361%" y="421" width="0.0805%" height="15" fill="rgb(226,100,49)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="405" width="0.0805%" height="15" fill="rgb(245,188,27)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="389" width="0.0805%" height="15" fill="rgb(212,170,8)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="373" width="0.0805%" height="15" fill="rgb(217,113,29)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7361%" y="357" width="0.0805%" height="15" fill="rgb(237,30,3)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="341" width="0.0805%" height="15" fill="rgb(227,19,28)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="325" width="0.0805%" height="15" fill="rgb(239,172,45)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="309" width="0.0805%" height="15" fill="rgb(254,55,39)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7361%" y="293" width="0.0805%" height="15" fill="rgb(249,208,12)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="277" width="0.0805%" height="15" fill="rgb(240,52,13)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7361%" y="261" width="0.0805%" height="15" fill="rgb(252,149,13)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="95.7361%" y="245" width="0.0805%" height="15" fill="rgb(232,81,48)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.7361%" y="229" width="0.0805%" height="15" fill="rgb(222,144,2)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.7361%" y="213" width="0.0805%" height="15" fill="rgb(216,81,32)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.7361%" y="197" width="0.0805%" height="15" fill="rgb(244,78,51)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.7361%" y="181" width="0.0805%" height="15" fill="rgb(217,66,21)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.7361%" y="165" width="0.0805%" height="15" fill="rgb(247,101,42)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.7361%" y="149" width="0.0805%" height="15" fill="rgb(227,81,39)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.7361%" y="133" width="0.0805%" height="15" fill="rgb(220,223,44)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.7361%" y="117" width="0.0805%" height="15" fill="rgb(205,218,2)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.7361%" y="101" width="0.0805%" height="15" fill="rgb(212,207,28)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="95.7361%" y="85" width="0.0805%" height="15" fill="rgb(224,12,41)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="95.7361%" y="69" width="0.0805%" height="15" fill="rgb(216,118,12)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="95.8166%" y="565" width="0.0805%" height="15" fill="rgb(252,97,46)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="95.8166%" y="549" width="0.0805%" height="15" fill="rgb(244,206,19)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8166%" y="533" width="0.0805%" height="15" fill="rgb(231,84,31)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.8970%" y="533" width="0.1609%" height="15" fill="rgb(244,133,0)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.8970%" y="517" width="0.1609%" height="15" fill="rgb(223,15,50)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.0579%" y="389" width="0.0805%" height="15" fill="rgb(250,118,49)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.0579%" y="373" width="0.0805%" height="15" fill="rgb(248,25,38)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.0579%" y="357" width="0.0805%" height="15" fill="rgb(215,70,14)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0579%" y="341" width="0.0805%" height="15" fill="rgb(215,28,15)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0579%" y="325" width="0.0805%" height="15" fill="rgb(243,6,28)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0579%" y="309" width="0.0805%" height="15" fill="rgb(222,130,1)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0579%" y="293" width="0.0805%" height="15" fill="rgb(236,166,44)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.0579%" y="277" width="0.0805%" height="15" fill="rgb(221,108,14)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0579%" y="261" width="0.0805%" height="15" fill="rgb(252,3,45)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0579%" y="245" width="0.0805%" height="15" fill="rgb(237,68,30)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="96.0579%" y="421" width="0.1609%" height="15" fill="rgb(211,79,22)" fg:x="1194" fg:w="2"/><text x="96.3079%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="96.0579%" y="405" width="0.1609%" height="15" fill="rgb(252,185,21)" fg:x="1194" fg:w="2"/><text x="96.3079%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.1384%" y="389" width="0.0805%" height="15" fill="rgb(225,189,26)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.1384%" y="373" width="0.0805%" height="15" fill="rgb(241,30,40)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1384%" y="357" width="0.0805%" height="15" fill="rgb(235,215,44)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1384%" y="341" width="0.0805%" height="15" fill="rgb(205,8,29)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1384%" y="325" width="0.0805%" height="15" fill="rgb(241,137,42)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1384%" y="309" width="0.0805%" height="15" fill="rgb(237,155,2)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1384%" y="293" width="0.0805%" height="15" fill="rgb(245,29,42)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1384%" y="277" width="0.0805%" height="15" fill="rgb(234,101,35)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1384%" y="261" width="0.0805%" height="15" fill="rgb(228,64,37)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1384%" y="245" width="0.0805%" height="15" fill="rgb(217,214,36)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.1384%" y="229" width="0.0805%" height="15" fill="rgb(243,70,3)" fg:x="1195" fg:w="1"/><text x="96.3884%" y="239.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="96.2188%" y="405" width="0.0805%" height="15" fill="rgb(253,158,52)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.2188%" y="389" width="0.0805%" height="15" fill="rgb(234,111,54)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2188%" y="373" width="0.0805%" height="15" fill="rgb(217,70,32)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.2188%" y="357" width="0.0805%" height="15" fill="rgb(234,18,33)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="96.2188%" y="341" width="0.0805%" height="15" fill="rgb(234,12,49)" fg:x="1196" fg:w="1"/><text x="96.4688%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="96.2993%" y="373" width="0.0805%" height="15" fill="rgb(236,10,21)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.3797%" y="325" width="0.0805%" height="15" fill="rgb(248,182,45)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3797%" y="309" width="0.0805%" height="15" fill="rgb(217,95,36)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.3797%" y="293" width="0.0805%" height="15" fill="rgb(212,110,31)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.3797%" y="277" width="0.0805%" height="15" fill="rgb(206,32,53)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.3797%" y="261" width="0.0805%" height="15" fill="rgb(246,141,37)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.3797%" y="245" width="0.0805%" height="15" fill="rgb(219,16,7)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3797%" y="229" width="0.0805%" height="15" fill="rgb(230,205,45)" fg:x="1198" fg:w="1"/><text x="96.6297%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.4602%" y="325" width="0.1609%" height="15" fill="rgb(231,43,49)" fg:x="1199" fg:w="2"/><text x="96.7102%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.4602%" y="309" width="0.1609%" height="15" fill="rgb(212,106,34)" fg:x="1199" fg:w="2"/><text x="96.7102%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.4602%" y="293" width="0.1609%" height="15" fill="rgb(206,83,17)" fg:x="1199" fg:w="2"/><text x="96.7102%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.4602%" y="277" width="0.1609%" height="15" fill="rgb(244,154,49)" fg:x="1199" fg:w="2"/><text x="96.7102%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.5406%" y="261" width="0.0805%" height="15" fill="rgb(244,149,49)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.5406%" y="245" width="0.0805%" height="15" fill="rgb(227,134,18)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="96.2188%" y="421" width="0.4827%" height="15" fill="rgb(237,116,36)" fg:x="1196" fg:w="6"/><text x="96.4688%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="96.2993%" y="405" width="0.4023%" height="15" fill="rgb(205,129,40)" fg:x="1197" fg:w="5"/><text x="96.5493%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="96.2993%" y="389" width="0.4023%" height="15" fill="rgb(236,178,4)" fg:x="1197" fg:w="5"/><text x="96.5493%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="96.3797%" y="373" width="0.3218%" height="15" fill="rgb(251,76,53)" fg:x="1198" fg:w="4"/><text x="96.6297%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.3797%" y="357" width="0.3218%" height="15" fill="rgb(242,92,40)" fg:x="1198" fg:w="4"/><text x="96.6297%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="96.3797%" y="341" width="0.3218%" height="15" fill="rgb(209,45,30)" fg:x="1198" fg:w="4"/><text x="96.6297%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6211%" y="325" width="0.0805%" height="15" fill="rgb(218,157,36)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6211%" y="309" width="0.0805%" height="15" fill="rgb(222,186,16)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="96.6211%" y="293" width="0.0805%" height="15" fill="rgb(254,72,35)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.6211%" y="277" width="0.0805%" height="15" fill="rgb(224,25,35)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6211%" y="261" width="0.0805%" height="15" fill="rgb(206,135,52)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.7015%" y="277" width="0.0805%" height="15" fill="rgb(229,174,47)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (10 samples, 0.80%)</title><rect x="96.0579%" y="533" width="0.8045%" height="15" fill="rgb(242,184,21)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="96.0579%" y="517" width="0.8045%" height="15" fill="rgb(213,22,45)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="96.0579%" y="501" width="0.8045%" height="15" fill="rgb(237,81,54)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.80%)</title><rect x="96.0579%" y="485" width="0.8045%" height="15" fill="rgb(248,177,18)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.80%)</title><rect x="96.0579%" y="469" width="0.8045%" height="15" fill="rgb(254,31,16)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.80%)</title><rect x="96.0579%" y="453" width="0.8045%" height="15" fill="rgb(235,20,31)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="96.0579%" y="437" width="0.8045%" height="15" fill="rgb(240,56,43)" fg:x="1194" fg:w="10"/><text x="96.3079%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.7015%" y="421" width="0.1609%" height="15" fill="rgb(237,197,51)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.7015%" y="405" width="0.1609%" height="15" fill="rgb(241,162,44)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.7015%" y="389" width="0.1609%" height="15" fill="rgb(224,23,20)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7015%" y="373" width="0.1609%" height="15" fill="rgb(250,109,34)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7015%" y="357" width="0.1609%" height="15" fill="rgb(214,175,50)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7015%" y="341" width="0.1609%" height="15" fill="rgb(213,182,5)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7015%" y="325" width="0.1609%" height="15" fill="rgb(209,199,19)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.7015%" y="309" width="0.1609%" height="15" fill="rgb(236,224,42)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7015%" y="293" width="0.1609%" height="15" fill="rgb(246,226,29)" fg:x="1202" fg:w="2"/><text x="96.9515%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7820%" y="277" width="0.0805%" height="15" fill="rgb(227,223,11)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7820%" y="261" width="0.0805%" height="15" fill="rgb(219,7,51)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7820%" y="245" width="0.0805%" height="15" fill="rgb(245,167,10)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7820%" y="229" width="0.0805%" height="15" fill="rgb(237,224,16)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.7820%" y="213" width="0.0805%" height="15" fill="rgb(226,132,13)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7820%" y="197" width="0.0805%" height="15" fill="rgb(214,140,3)" fg:x="1203" fg:w="1"/><text x="97.0320%" y="207.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8624%" y="533" width="0.0805%" height="15" fill="rgb(221,177,4)" fg:x="1204" fg:w="1"/><text x="97.1124%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8624%" y="517" width="0.0805%" height="15" fill="rgb(238,139,3)" fg:x="1204" fg:w="1"/><text x="97.1124%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8624%" y="501" width="0.0805%" height="15" fill="rgb(216,17,39)" fg:x="1204" fg:w="1"/><text x="97.1124%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8624%" y="485" width="0.0805%" height="15" fill="rgb(238,120,9)" fg:x="1204" fg:w="1"/><text x="97.1124%" y="495.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (38 samples, 3.06%)</title><rect x="93.9662%" y="597" width="3.0571%" height="15" fill="rgb(244,92,53)" fg:x="1168" fg:w="38"/><text x="94.2162%" y="607.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (38 samples, 3.06%)</title><rect x="93.9662%" y="581" width="3.0571%" height="15" fill="rgb(224,148,33)" fg:x="1168" fg:w="38"/><text x="94.2162%" y="591.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.13%)</title><rect x="95.8970%" y="565" width="1.1263%" height="15" fill="rgb(243,6,36)" fg:x="1192" fg:w="14"/><text x="96.1470%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.13%)</title><rect x="95.8970%" y="549" width="1.1263%" height="15" fill="rgb(230,102,11)" fg:x="1192" fg:w="14"/><text x="96.1470%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.9429%" y="533" width="0.0805%" height="15" fill="rgb(234,148,36)" fg:x="1205" fg:w="1"/><text x="97.1929%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.9429%" y="517" width="0.0805%" height="15" fill="rgb(251,153,25)" fg:x="1205" fg:w="1"/><text x="97.1929%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9429%" y="501" width="0.0805%" height="15" fill="rgb(215,129,8)" fg:x="1205" fg:w="1"/><text x="97.1929%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (61 samples, 4.91%)</title><rect x="92.2767%" y="789" width="4.9075%" height="15" fill="rgb(224,128,35)" fg:x="1147" fg:w="61"/><text x="92.5267%" y="799.50">&lt;engin..</text></g><g><title>kernel::plugins::mw::apply_middleware (60 samples, 4.83%)</title><rect x="92.3572%" y="773" width="4.8270%" height="15" fill="rgb(237,56,52)" fg:x="1148" fg:w="60"/><text x="92.6072%" y="783.50">kernel..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (58 samples, 4.67%)</title><rect x="92.5181%" y="757" width="4.6661%" height="15" fill="rgb(234,213,19)" fg:x="1150" fg:w="58"/><text x="92.7681%" y="767.50">kerne..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (58 samples, 4.67%)</title><rect x="92.5181%" y="741" width="4.6661%" height="15" fill="rgb(252,82,23)" fg:x="1150" fg:w="58"/><text x="92.7681%" y="751.50">&lt;engi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (42 samples, 3.38%)</title><rect x="93.8053%" y="725" width="3.3789%" height="15" fill="rgb(254,201,21)" fg:x="1166" fg:w="42"/><text x="94.0553%" y="735.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (42 samples, 3.38%)</title><rect x="93.8053%" y="709" width="3.3789%" height="15" fill="rgb(250,186,11)" fg:x="1166" fg:w="42"/><text x="94.0553%" y="719.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (42 samples, 3.38%)</title><rect x="93.8053%" y="693" width="3.3789%" height="15" fill="rgb(211,174,5)" fg:x="1166" fg:w="42"/><text x="94.0553%" y="703.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42 samples, 3.38%)</title><rect x="93.8053%" y="677" width="3.3789%" height="15" fill="rgb(214,121,10)" fg:x="1166" fg:w="42"/><text x="94.0553%" y="687.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (42 samples, 3.38%)</title><rect x="93.8053%" y="661" width="3.3789%" height="15" fill="rgb(241,66,2)" fg:x="1166" fg:w="42"/><text x="94.0553%" y="671.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (40 samples, 3.22%)</title><rect x="93.9662%" y="645" width="3.2180%" height="15" fill="rgb(220,167,19)" fg:x="1168" fg:w="40"/><text x="94.2162%" y="655.50">cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 3.22%)</title><rect x="93.9662%" y="629" width="3.2180%" height="15" fill="rgb(231,54,50)" fg:x="1168" fg:w="40"/><text x="94.2162%" y="639.50">&lt;al..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (40 samples, 3.22%)</title><rect x="93.9662%" y="613" width="3.2180%" height="15" fill="rgb(239,217,53)" fg:x="1168" fg:w="40"/><text x="94.2162%" y="623.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="97.0233%" y="597" width="0.1609%" height="15" fill="rgb(248,8,0)" fg:x="1206" fg:w="2"/><text x="97.2733%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="97.0233%" y="581" width="0.1609%" height="15" fill="rgb(229,118,37)" fg:x="1206" fg:w="2"/><text x="97.2733%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1038%" y="565" width="0.0805%" height="15" fill="rgb(253,223,43)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="97.1842%" y="757" width="0.0805%" height="15" fill="rgb(211,77,36)" fg:x="1208" fg:w="1"/><text x="97.4342%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2647%" y="661" width="0.0805%" height="15" fill="rgb(219,3,53)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2647%" y="645" width="0.0805%" height="15" fill="rgb(244,45,42)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="97.2647%" y="709" width="0.2414%" height="15" fill="rgb(225,95,27)" fg:x="1209" fg:w="3"/><text x="97.5147%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.2647%" y="693" width="0.2414%" height="15" fill="rgb(207,74,8)" fg:x="1209" fg:w="3"/><text x="97.5147%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.2647%" y="677" width="0.2414%" height="15" fill="rgb(243,63,36)" fg:x="1209" fg:w="3"/><text x="97.5147%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.3451%" y="661" width="0.1609%" height="15" fill="rgb(211,180,12)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.3451%" y="645" width="0.1609%" height="15" fill="rgb(254,166,49)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.3451%" y="629" width="0.1609%" height="15" fill="rgb(205,19,0)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.3451%" y="613" width="0.1609%" height="15" fill="rgb(224,172,32)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.3451%" y="597" width="0.1609%" height="15" fill="rgb(254,136,30)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.3451%" y="581" width="0.1609%" height="15" fill="rgb(246,19,35)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="97.3451%" y="565" width="0.1609%" height="15" fill="rgb(219,24,36)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="97.3451%" y="549" width="0.1609%" height="15" fill="rgb(251,55,1)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="97.2647%" y="741" width="0.3218%" height="15" fill="rgb(218,117,39)" fg:x="1209" fg:w="4"/><text x="97.5147%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="97.2647%" y="725" width="0.3218%" height="15" fill="rgb(248,169,11)" fg:x="1209" fg:w="4"/><text x="97.5147%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.5060%" y="709" width="0.0805%" height="15" fill="rgb(244,40,44)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.5060%" y="693" width="0.0805%" height="15" fill="rgb(234,62,37)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.5060%" y="677" width="0.0805%" height="15" fill="rgb(207,117,42)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5060%" y="661" width="0.0805%" height="15" fill="rgb(213,43,2)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5060%" y="645" width="0.0805%" height="15" fill="rgb(244,202,51)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5060%" y="629" width="0.0805%" height="15" fill="rgb(253,174,46)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5060%" y="613" width="0.0805%" height="15" fill="rgb(251,23,1)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5060%" y="597" width="0.0805%" height="15" fill="rgb(253,26,1)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5060%" y="581" width="0.0805%" height="15" fill="rgb(216,89,31)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5060%" y="565" width="0.0805%" height="15" fill="rgb(209,109,5)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5060%" y="549" width="0.0805%" height="15" fill="rgb(229,63,13)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5060%" y="533" width="0.0805%" height="15" fill="rgb(238,137,54)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5060%" y="517" width="0.0805%" height="15" fill="rgb(228,1,9)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5060%" y="501" width="0.0805%" height="15" fill="rgb(249,120,48)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5060%" y="485" width="0.0805%" height="15" fill="rgb(209,72,36)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5060%" y="469" width="0.0805%" height="15" fill="rgb(247,98,49)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5060%" y="453" width="0.0805%" height="15" fill="rgb(233,75,36)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5060%" y="437" width="0.0805%" height="15" fill="rgb(225,14,24)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5060%" y="421" width="0.0805%" height="15" fill="rgb(237,193,20)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6669%" y="677" width="0.0805%" height="15" fill="rgb(239,122,19)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7474%" y="597" width="0.1609%" height="15" fill="rgb(231,220,10)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.7474%" y="581" width="0.1609%" height="15" fill="rgb(220,66,15)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7474%" y="565" width="0.1609%" height="15" fill="rgb(215,171,52)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.7474%" y="549" width="0.1609%" height="15" fill="rgb(241,169,50)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.7474%" y="533" width="0.1609%" height="15" fill="rgb(236,189,0)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="97.7474%" y="517" width="0.1609%" height="15" fill="rgb(217,147,20)" fg:x="1215" fg:w="2"/><text x="97.9974%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8278%" y="501" width="0.0805%" height="15" fill="rgb(206,188,39)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="511.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="97.5865%" y="725" width="0.4023%" height="15" fill="rgb(227,118,25)" fg:x="1213" fg:w="5"/><text x="97.8365%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="97.5865%" y="709" width="0.4023%" height="15" fill="rgb(248,171,40)" fg:x="1213" fg:w="5"/><text x="97.8365%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="97.5865%" y="693" width="0.4023%" height="15" fill="rgb(251,90,54)" fg:x="1213" fg:w="5"/><text x="97.8365%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7474%" y="677" width="0.2414%" height="15" fill="rgb(234,11,46)" fg:x="1215" fg:w="3"/><text x="97.9974%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.7474%" y="661" width="0.2414%" height="15" fill="rgb(229,134,13)" fg:x="1215" fg:w="3"/><text x="97.9974%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7474%" y="645" width="0.2414%" height="15" fill="rgb(223,129,3)" fg:x="1215" fg:w="3"/><text x="97.9974%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.7474%" y="629" width="0.2414%" height="15" fill="rgb(221,124,13)" fg:x="1215" fg:w="3"/><text x="97.9974%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7474%" y="613" width="0.2414%" height="15" fill="rgb(234,3,18)" fg:x="1215" fg:w="3"/><text x="97.9974%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.9083%" y="597" width="0.0805%" height="15" fill="rgb(249,199,20)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9083%" y="581" width="0.0805%" height="15" fill="rgb(224,134,6)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9083%" y="565" width="0.0805%" height="15" fill="rgb(254,83,26)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9083%" y="549" width="0.0805%" height="15" fill="rgb(217,88,9)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.9083%" y="533" width="0.0805%" height="15" fill="rgb(225,73,2)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.9887%" y="693" width="0.0805%" height="15" fill="rgb(226,44,39)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3910%" y="613" width="0.0805%" height="15" fill="rgb(228,53,17)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3910%" y="597" width="0.0805%" height="15" fill="rgb(212,27,27)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.3910%" y="581" width="0.0805%" height="15" fill="rgb(241,50,6)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3910%" y="565" width="0.0805%" height="15" fill="rgb(225,28,51)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="98.2301%" y="645" width="0.3218%" height="15" fill="rgb(215,33,16)" fg:x="1221" fg:w="4"/><text x="98.4801%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.3105%" y="629" width="0.2414%" height="15" fill="rgb(243,40,39)" fg:x="1222" fg:w="3"/><text x="98.5605%" y="639.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.4714%" y="613" width="0.0805%" height="15" fill="rgb(225,11,42)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.4714%" y="597" width="0.0805%" height="15" fill="rgb(241,220,38)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5519%" y="613" width="0.0805%" height="15" fill="rgb(244,52,35)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="98.0692%" y="693" width="0.6436%" height="15" fill="rgb(246,42,46)" fg:x="1219" fg:w="8"/><text x="98.3192%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="98.0692%" y="677" width="0.6436%" height="15" fill="rgb(205,184,13)" fg:x="1219" fg:w="8"/><text x="98.3192%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="98.1496%" y="661" width="0.5632%" height="15" fill="rgb(209,48,36)" fg:x="1220" fg:w="7"/><text x="98.3996%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="98.5519%" y="645" width="0.1609%" height="15" fill="rgb(244,34,51)" fg:x="1225" fg:w="2"/><text x="98.8019%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.5519%" y="629" width="0.1609%" height="15" fill="rgb(221,107,33)" fg:x="1225" fg:w="2"/><text x="98.8019%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6323%" y="613" width="0.0805%" height="15" fill="rgb(224,203,12)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.6323%" y="597" width="0.0805%" height="15" fill="rgb(230,215,18)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.21%)</title><rect x="97.5865%" y="741" width="1.2068%" height="15" fill="rgb(206,185,35)" fg:x="1213" fg:w="15"/><text x="97.8365%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="97.9887%" y="725" width="0.8045%" height="15" fill="rgb(228,140,34)" fg:x="1218" fg:w="10"/><text x="98.2387%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="97.9887%" y="709" width="0.8045%" height="15" fill="rgb(208,93,13)" fg:x="1218" fg:w="10"/><text x="98.2387%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7128%" y="693" width="0.0805%" height="15" fill="rgb(221,193,39)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7128%" y="677" width="0.0805%" height="15" fill="rgb(241,132,34)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.7128%" y="661" width="0.0805%" height="15" fill="rgb(221,141,10)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.7932%" y="597" width="0.0805%" height="15" fill="rgb(226,90,31)" fg:x="1228" fg:w="1"/><text x="99.0432%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8737%" y="597" width="0.0805%" height="15" fill="rgb(243,75,5)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.8737%" y="581" width="0.0805%" height="15" fill="rgb(227,156,21)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.8737%" y="565" width="0.0805%" height="15" fill="rgb(250,195,8)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="98.7932%" y="741" width="0.3218%" height="15" fill="rgb(220,134,5)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="98.7932%" y="725" width="0.3218%" height="15" fill="rgb(246,106,34)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="98.7932%" y="709" width="0.3218%" height="15" fill="rgb(205,1,4)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.7932%" y="693" width="0.3218%" height="15" fill="rgb(224,151,29)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.7932%" y="677" width="0.3218%" height="15" fill="rgb(251,196,0)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.7932%" y="661" width="0.3218%" height="15" fill="rgb(212,127,0)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.7932%" y="645" width="0.3218%" height="15" fill="rgb(236,71,53)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.7932%" y="629" width="0.3218%" height="15" fill="rgb(227,99,0)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.7932%" y="613" width="0.3218%" height="15" fill="rgb(239,89,21)" fg:x="1228" fg:w="4"/><text x="99.0432%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.9541%" y="597" width="0.1609%" height="15" fill="rgb(243,122,19)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0346%" y="581" width="0.0805%" height="15" fill="rgb(229,192,45)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 2.01%)</title><rect x="97.1842%" y="773" width="2.0113%" height="15" fill="rgb(235,165,35)" fg:x="1208" fg:w="25"/><text x="97.4342%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.93%)</title><rect x="97.2647%" y="757" width="1.9308%" height="15" fill="rgb(253,202,0)" fg:x="1209" fg:w="24"/><text x="97.5147%" y="767.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.1150%" y="741" width="0.0805%" height="15" fill="rgb(235,51,20)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1150%" y="725" width="0.0805%" height="15" fill="rgb(218,95,46)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1150%" y="709" width="0.0805%" height="15" fill="rgb(212,81,10)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1955%" y="757" width="0.0805%" height="15" fill="rgb(240,59,0)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1955%" y="741" width="0.0805%" height="15" fill="rgb(212,191,42)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.1955%" y="725" width="0.0805%" height="15" fill="rgb(233,140,3)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.1955%" y="709" width="0.0805%" height="15" fill="rgb(215,69,23)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.1955%" y="693" width="0.0805%" height="15" fill="rgb(240,202,20)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.1955%" y="677" width="0.0805%" height="15" fill="rgb(209,146,50)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.1955%" y="661" width="0.0805%" height="15" fill="rgb(253,102,54)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.1955%" y="645" width="0.0805%" height="15" fill="rgb(250,173,47)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.1955%" y="629" width="0.0805%" height="15" fill="rgb(232,142,7)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.1955%" y="613" width="0.0805%" height="15" fill="rgb(230,157,47)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.1955%" y="597" width="0.0805%" height="15" fill="rgb(214,177,35)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1955%" y="581" width="0.0805%" height="15" fill="rgb(234,119,46)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (27 samples, 2.17%)</title><rect x="97.1842%" y="789" width="2.1722%" height="15" fill="rgb(241,180,50)" fg:x="1208" fg:w="27"/><text x="97.4342%" y="799.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.1955%" y="773" width="0.1609%" height="15" fill="rgb(221,54,25)" fg:x="1233" fg:w="2"/><text x="99.4455%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.2759%" y="757" width="0.0805%" height="15" fill="rgb(209,157,44)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="741" width="0.0805%" height="15" fill="rgb(246,115,41)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.2759%" y="725" width="0.0805%" height="15" fill="rgb(229,86,1)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="709" width="0.0805%" height="15" fill="rgb(240,108,53)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="693" width="0.0805%" height="15" fill="rgb(227,134,2)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="677" width="0.0805%" height="15" fill="rgb(213,129,25)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.2759%" y="661" width="0.0805%" height="15" fill="rgb(226,35,21)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="645" width="0.0805%" height="15" fill="rgb(208,129,26)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="629" width="0.0805%" height="15" fill="rgb(224,83,6)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="613" width="0.0805%" height="15" fill="rgb(227,52,39)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.2759%" y="597" width="0.0805%" height="15" fill="rgb(241,30,17)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="581" width="0.0805%" height="15" fill="rgb(246,186,42)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="565" width="0.0805%" height="15" fill="rgb(221,169,15)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="549" width="0.0805%" height="15" fill="rgb(235,108,21)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.2759%" y="533" width="0.0805%" height="15" fill="rgb(219,148,30)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.2759%" y="517" width="0.0805%" height="15" fill="rgb(220,109,5)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2759%" y="501" width="0.0805%" height="15" fill="rgb(213,203,48)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2759%" y="485" width="0.0805%" height="15" fill="rgb(244,71,33)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.2759%" y="469" width="0.0805%" height="15" fill="rgb(209,23,2)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.2759%" y="453" width="0.0805%" height="15" fill="rgb(219,97,7)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.2759%" y="437" width="0.0805%" height="15" fill="rgb(216,161,23)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.2759%" y="421" width="0.0805%" height="15" fill="rgb(207,45,42)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.2759%" y="405" width="0.0805%" height="15" fill="rgb(241,61,4)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5173%" y="661" width="0.0805%" height="15" fill="rgb(236,170,1)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (4 samples, 0.32%)</title><rect x="99.3564%" y="789" width="0.3218%" height="15" fill="rgb(239,72,5)" fg:x="1235" fg:w="4"/><text x="99.6064%" y="799.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.4368%" y="773" width="0.2414%" height="15" fill="rgb(214,13,50)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="99.4368%" y="757" width="0.2414%" height="15" fill="rgb(224,88,9)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.4368%" y="741" width="0.2414%" height="15" fill="rgb(238,192,34)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="751.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.4368%" y="725" width="0.2414%" height="15" fill="rgb(217,203,50)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.4368%" y="709" width="0.2414%" height="15" fill="rgb(241,123,32)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.4368%" y="693" width="0.2414%" height="15" fill="rgb(248,151,39)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.4368%" y="677" width="0.2414%" height="15" fill="rgb(208,89,6)" fg:x="1236" fg:w="3"/><text x="99.6868%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5977%" y="661" width="0.0805%" height="15" fill="rgb(254,43,26)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.5977%" y="645" width="0.0805%" height="15" fill="rgb(216,158,13)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.5977%" y="629" width="0.0805%" height="15" fill="rgb(212,47,37)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7586%" y="757" width="0.0805%" height="15" fill="rgb(254,16,10)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="767.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.7586%" y="741" width="0.0805%" height="15" fill="rgb(223,228,16)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7586%" y="725" width="0.0805%" height="15" fill="rgb(249,108,50)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.7586%" y="709" width="0.0805%" height="15" fill="rgb(208,220,5)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="99.6782%" y="789" width="0.2414%" height="15" fill="rgb(217,89,48)" fg:x="1239" fg:w="3"/><text x="99.9282%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="99.6782%" y="773" width="0.2414%" height="15" fill="rgb(212,113,41)" fg:x="1239" fg:w="3"/><text x="99.9282%" y="783.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8391%" y="757" width="0.0805%" height="15" fill="rgb(231,127,5)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="767.50"></text></g><g><title>all (1,243 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(217,141,17)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1183.50"></text></g><g><title>simple-2cee43e7 (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(245,125,54)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1167.50">simple-2cee43e7</text></g><g><title>_start (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(248,125,3)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1151.50">_start</text></g><g><title>__libc_start_main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(236,119,51)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1135.50">__libc_start_main</text></g><g><title>main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(239,99,8)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(224,228,4)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(220,131,45)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(215,62,5)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(253,12,24)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(248,120,50)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(245,194,10)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(241,149,38)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(219,215,7)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,243 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(208,120,31)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(244,30,8)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="959.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,243 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(238,35,44)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(243,218,37)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="927.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,243 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(218,169,10)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,243 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(221,144,10)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="895.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (411 samples, 33.07%)</title><rect x="66.9348%" y="869" width="33.0652%" height="15" fill="rgb(226,41,38)" fg:x="832" fg:w="411"/><text x="67.1848%" y="879.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rou..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (411 samples, 33.07%)</title><rect x="66.9348%" y="853" width="33.0652%" height="15" fill="rgb(228,3,1)" fg:x="832" fg:w="411"/><text x="67.1848%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (411 samples, 33.07%)</title><rect x="66.9348%" y="837" width="33.0652%" height="15" fill="rgb(209,129,12)" fg:x="832" fg:w="411"/><text x="67.1848%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (96 samples, 7.72%)</title><rect x="92.2767%" y="821" width="7.7233%" height="15" fill="rgb(213,136,33)" fg:x="1147" fg:w="96"/><text x="92.5267%" y="831.50">engine::ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (96 samples, 7.72%)</title><rect x="92.2767%" y="805" width="7.7233%" height="15" fill="rgb(209,181,29)" fg:x="1147" fg:w="96"/><text x="92.5267%" y="815.50">engine::ses..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.9195%" y="789" width="0.0805%" height="15" fill="rgb(234,173,18)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="799.50"></text></g></svg></svg>