<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="1244"><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.0804%" y="597" width="0.1608%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3304%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1608%" y="581" width="0.0804%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.4108%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="0.0804%" y="613" width="0.3215%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.3304%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.2412%" y="597" width="0.1608%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.4912%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3215%" y="581" width="0.0804%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.5715%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.4823%" y="597" width="0.1608%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="2"/><text x="0.7323%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6431%" y="597" width="0.0804%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="1"/><text x="0.8931%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.7235%" y="597" width="0.0804%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="1"/><text x="0.9735%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7235%" y="581" width="0.0804%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="1"/><text x="0.9735%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7235%" y="565" width="0.0804%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="1"/><text x="0.9735%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.9646%" y="517" width="0.2412%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="3"/><text x="1.2146%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2058%" y="517" width="0.0804%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="1"/><text x="1.4558%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2058%" y="501" width="0.0804%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="1"/><text x="1.4558%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3666%" y="501" width="0.0804%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="1"/><text x="1.6166%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.4469%" y="501" width="0.1608%" height="15" fill="rgb(217,207,13)" fg:x="18" fg:w="2"/><text x="1.6969%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4469%" y="485" width="0.1608%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="2"/><text x="1.6969%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6881%" y="485" width="0.0804%" height="15" fill="rgb(225,20,46)" fg:x="21" fg:w="1"/><text x="1.9381%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7685%" y="485" width="0.0804%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="1"/><text x="2.0185%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0096%" y="469" width="0.0804%" height="15" fill="rgb(221,200,47)" fg:x="25" fg:w="1"/><text x="2.2596%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0096%" y="453" width="0.0804%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="1"/><text x="2.2596%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0900%" y="453" width="0.0804%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="1"/><text x="2.3400%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="0.9646%" y="533" width="1.3666%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="17"/><text x="1.2146%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="1.2862%" y="517" width="1.0450%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="13"/><text x="1.5362%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.6077%" y="501" width="0.7235%" height="15" fill="rgb(247,18,42)" fg:x="20" fg:w="9"/><text x="1.8577%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="1.8489%" y="485" width="0.4823%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="6"/><text x="2.0989%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="2.0900%" y="469" width="0.2412%" height="15" fill="rgb(249,31,29)" fg:x="26" fg:w="3"/><text x="2.3400%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.1704%" y="453" width="0.1608%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="2"/><text x="2.4204%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.4920%" y="501" width="0.2412%" height="15" fill="rgb(238,160,17)" fg:x="31" fg:w="3"/><text x="2.7420%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.4920%" y="485" width="0.2412%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="3"/><text x="2.7420%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="2.8135%" y="485" width="0.1608%" height="15" fill="rgb(232,36,49)" fg:x="35" fg:w="2"/><text x="3.0635%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.8135%" y="469" width="0.1608%" height="15" fill="rgb(209,103,24)" fg:x="35" fg:w="2"/><text x="3.0635%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.9743%" y="485" width="0.0804%" height="15" fill="rgb(229,88,8)" fg:x="37" fg:w="1"/><text x="3.2243%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="3.0547%" y="485" width="0.2412%" height="15" fill="rgb(213,181,19)" fg:x="38" fg:w="3"/><text x="3.3047%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2154%" y="469" width="0.0804%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="1"/><text x="3.4654%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.2958%" y="469" width="0.1608%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="2"/><text x="3.5458%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="2.4116%" y="517" width="1.1254%" height="15" fill="rgb(233,36,39)" fg:x="30" fg:w="14"/><text x="2.6616%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="2.7331%" y="501" width="0.8039%" height="15" fill="rgb(226,3,54)" fg:x="34" fg:w="10"/><text x="2.9831%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.2958%" y="485" width="0.2412%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="3"/><text x="3.5458%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.4566%" y="469" width="0.0804%" height="15" fill="rgb(238,167,29)" fg:x="43" fg:w="1"/><text x="3.7066%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5370%" y="517" width="0.0804%" height="15" fill="rgb(232,182,51)" fg:x="44" fg:w="1"/><text x="3.7870%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="2.3312%" y="533" width="1.3666%" height="15" fill="rgb(231,60,39)" fg:x="29" fg:w="17"/><text x="2.5812%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="3.6174%" y="517" width="0.0804%" height="15" fill="rgb(208,69,12)" fg:x="45" fg:w="1"/><text x="3.8674%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 2.81%)</title><rect x="0.9646%" y="549" width="2.8135%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="35"/><text x="1.2146%" y="559.50">&lt;a..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6977%" y="533" width="0.0804%" height="15" fill="rgb(213,116,39)" fg:x="46" fg:w="1"/><text x="3.9477%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.54%)</title><rect x="0.4019%" y="613" width="3.5370%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="44"/><text x="0.6519%" y="623.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (39 samples, 3.14%)</title><rect x="0.8039%" y="597" width="3.1350%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="39"/><text x="1.0539%" y="607.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.05%)</title><rect x="0.8842%" y="581" width="3.0547%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="38"/><text x="1.1342%" y="591.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (37 samples, 2.97%)</title><rect x="0.9646%" y="565" width="2.9743%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="37"/><text x="1.2146%" y="575.50">cor..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.7781%" y="549" width="0.1608%" height="15" fill="rgb(239,60,40)" fg:x="47" fg:w="2"/><text x="4.0281%" y="559.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="4.0193%" y="501" width="0.0804%" height="15" fill="rgb(206,27,48)" fg:x="50" fg:w="1"/><text x="4.2693%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="4.0193%" y="485" width="0.0804%" height="15" fill="rgb(225,35,8)" fg:x="50" fg:w="1"/><text x="4.2693%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="4.0193%" y="469" width="0.0804%" height="15" fill="rgb(250,213,24)" fg:x="50" fg:w="1"/><text x="4.2693%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="4.0193%" y="453" width="0.0804%" height="15" fill="rgb(247,123,22)" fg:x="50" fg:w="1"/><text x="4.2693%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="4.0193%" y="437" width="0.0804%" height="15" fill="rgb(231,138,38)" fg:x="50" fg:w="1"/><text x="4.2693%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="4.0193%" y="421" width="0.0804%" height="15" fill="rgb(231,145,46)" fg:x="50" fg:w="1"/><text x="4.2693%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="4.0193%" y="405" width="0.0804%" height="15" fill="rgb(251,118,11)" fg:x="50" fg:w="1"/><text x="4.2693%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.0997%" y="453" width="0.0804%" height="15" fill="rgb(217,147,25)" fg:x="51" fg:w="1"/><text x="4.3497%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.0997%" y="437" width="0.0804%" height="15" fill="rgb(247,81,37)" fg:x="51" fg:w="1"/><text x="4.3497%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="4.0997%" y="421" width="0.0804%" height="15" fill="rgb(209,12,38)" fg:x="51" fg:w="1"/><text x="4.3497%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="4.0997%" y="405" width="0.0804%" height="15" fill="rgb(227,1,9)" fg:x="51" fg:w="1"/><text x="4.3497%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="4.0997%" y="389" width="0.0804%" height="15" fill="rgb(248,47,43)" fg:x="51" fg:w="1"/><text x="4.3497%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="4.0997%" y="373" width="0.0804%" height="15" fill="rgb(221,10,30)" fg:x="51" fg:w="1"/><text x="4.3497%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.0997%" y="357" width="0.0804%" height="15" fill="rgb(210,229,1)" fg:x="51" fg:w="1"/><text x="4.3497%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="4.0997%" y="341" width="0.0804%" height="15" fill="rgb(222,148,37)" fg:x="51" fg:w="1"/><text x="4.3497%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.0997%" y="325" width="0.0804%" height="15" fill="rgb(234,67,33)" fg:x="51" fg:w="1"/><text x="4.3497%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.0997%" y="309" width="0.0804%" height="15" fill="rgb(247,98,35)" fg:x="51" fg:w="1"/><text x="4.3497%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0997%" y="293" width="0.0804%" height="15" fill="rgb(247,138,52)" fg:x="51" fg:w="1"/><text x="4.3497%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.0997%" y="277" width="0.0804%" height="15" fill="rgb(213,79,30)" fg:x="51" fg:w="1"/><text x="4.3497%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.0997%" y="261" width="0.0804%" height="15" fill="rgb(246,177,23)" fg:x="51" fg:w="1"/><text x="4.3497%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.0997%" y="245" width="0.0804%" height="15" fill="rgb(230,62,27)" fg:x="51" fg:w="1"/><text x="4.3497%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0997%" y="229" width="0.0804%" height="15" fill="rgb(216,154,8)" fg:x="51" fg:w="1"/><text x="4.3497%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="4.0193%" y="517" width="0.2412%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="3"/><text x="4.2693%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="4.0997%" y="501" width="0.1608%" height="15" fill="rgb(251,115,12)" fg:x="51" fg:w="2"/><text x="4.3497%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.0997%" y="485" width="0.1608%" height="15" fill="rgb(240,54,50)" fg:x="51" fg:w="2"/><text x="4.3497%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="4.0997%" y="469" width="0.1608%" height="15" fill="rgb(233,84,52)" fg:x="51" fg:w="2"/><text x="4.3497%" y="479.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="4.1801%" y="453" width="0.0804%" height="15" fill="rgb(207,117,47)" fg:x="52" fg:w="1"/><text x="4.4301%" y="463.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="4.4212%" y="469" width="0.0804%" height="15" fill="rgb(249,43,39)" fg:x="55" fg:w="1"/><text x="4.6712%" y="479.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="4.2605%" y="501" width="0.3215%" height="15" fill="rgb(209,38,44)" fg:x="53" fg:w="4"/><text x="4.5105%" y="511.50"></text></g><g><title>__asprintf (4 samples, 0.32%)</title><rect x="4.2605%" y="485" width="0.3215%" height="15" fill="rgb(236,212,23)" fg:x="53" fg:w="4"/><text x="4.5105%" y="495.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="4.5016%" y="469" width="0.0804%" height="15" fill="rgb(242,79,21)" fg:x="56" fg:w="1"/><text x="4.7516%" y="479.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="4.5820%" y="501" width="0.5627%" height="15" fill="rgb(211,96,35)" fg:x="57" fg:w="7"/><text x="4.8320%" y="511.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="4.5820%" y="485" width="0.5627%" height="15" fill="rgb(253,215,40)" fg:x="57" fg:w="7"/><text x="4.8320%" y="495.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="4.5820%" y="469" width="0.5627%" height="15" fill="rgb(211,81,21)" fg:x="57" fg:w="7"/><text x="4.8320%" y="479.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="4.5820%" y="453" width="0.5627%" height="15" fill="rgb(208,190,38)" fg:x="57" fg:w="7"/><text x="4.8320%" y="463.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="4.5820%" y="437" width="0.5627%" height="15" fill="rgb(235,213,38)" fg:x="57" fg:w="7"/><text x="4.8320%" y="447.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.21%)</title><rect x="4.0193%" y="533" width="1.2058%" height="15" fill="rgb(237,122,38)" fg:x="50" fg:w="15"/><text x="4.2693%" y="543.50"></text></g><g><title>libloading::safe::Library::new (12 samples, 0.96%)</title><rect x="4.2605%" y="517" width="0.9646%" height="15" fill="rgb(244,218,35)" fg:x="53" fg:w="12"/><text x="4.5105%" y="527.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="5.1447%" y="501" width="0.0804%" height="15" fill="rgb(240,68,47)" fg:x="64" fg:w="1"/><text x="5.3947%" y="511.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="5.1447%" y="485" width="0.0804%" height="15" fill="rgb(210,16,53)" fg:x="64" fg:w="1"/><text x="5.3947%" y="495.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="5.1447%" y="469" width="0.0804%" height="15" fill="rgb(235,124,12)" fg:x="64" fg:w="1"/><text x="5.3947%" y="479.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="5.1447%" y="453" width="0.0804%" height="15" fill="rgb(224,169,11)" fg:x="64" fg:w="1"/><text x="5.3947%" y="463.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (17 samples, 1.37%)</title><rect x="3.9389%" y="549" width="1.3666%" height="15" fill="rgb(250,166,2)" fg:x="49" fg:w="17"/><text x="4.1889%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.2251%" y="533" width="0.0804%" height="15" fill="rgb(242,216,29)" fg:x="65" fg:w="1"/><text x="5.4751%" y="543.50"></text></g><g><title>engine::session::Session::initialize (27 samples, 2.17%)</title><rect x="3.9389%" y="565" width="2.1704%" height="15" fill="rgb(230,116,27)" fg:x="49" fg:w="27"/><text x="4.1889%" y="575.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (10 samples, 0.80%)</title><rect x="5.3055%" y="549" width="0.8039%" height="15" fill="rgb(228,99,48)" fg:x="66" fg:w="10"/><text x="5.5555%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="5.3055%" y="533" width="0.8039%" height="15" fill="rgb(253,11,6)" fg:x="66" fg:w="10"/><text x="5.5555%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="5.3055%" y="517" width="0.8039%" height="15" fill="rgb(247,143,39)" fg:x="66" fg:w="10"/><text x="5.5555%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.72%)</title><rect x="5.3859%" y="501" width="0.7235%" height="15" fill="rgb(236,97,10)" fg:x="67" fg:w="9"/><text x="5.6359%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.72%)</title><rect x="5.3859%" y="485" width="0.7235%" height="15" fill="rgb(233,208,19)" fg:x="67" fg:w="9"/><text x="5.6359%" y="495.50"></text></g><g><title>realloc (9 samples, 0.72%)</title><rect x="5.3859%" y="469" width="0.7235%" height="15" fill="rgb(216,164,2)" fg:x="67" fg:w="9"/><text x="5.6359%" y="479.50"></text></g><g><title>&lt;plugins_core::fashion::FashionPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="6.1093%" y="517" width="0.0804%" height="15" fill="rgb(220,129,5)" fg:x="76" fg:w="1"/><text x="6.3593%" y="527.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (3 samples, 0.24%)</title><rect x="6.1093%" y="565" width="0.2412%" height="15" fill="rgb(242,17,10)" fg:x="76" fg:w="3"/><text x="6.3593%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="6.1093%" y="549" width="0.2412%" height="15" fill="rgb(242,107,0)" fg:x="76" fg:w="3"/><text x="6.3593%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="6.1093%" y="533" width="0.2412%" height="15" fill="rgb(251,28,31)" fg:x="76" fg:w="3"/><text x="6.3593%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="6.1897%" y="517" width="0.1608%" height="15" fill="rgb(233,223,10)" fg:x="77" fg:w="2"/><text x="6.4397%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.1897%" y="501" width="0.1608%" height="15" fill="rgb(215,21,27)" fg:x="77" fg:w="2"/><text x="6.4397%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.1897%" y="485" width="0.1608%" height="15" fill="rgb(232,23,21)" fg:x="77" fg:w="2"/><text x="6.4397%" y="495.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.49%)</title><rect x="3.9389%" y="613" width="2.4920%" height="15" fill="rgb(244,5,23)" fg:x="49" fg:w="31"/><text x="4.1889%" y="623.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (31 samples, 2.49%)</title><rect x="3.9389%" y="597" width="2.4920%" height="15" fill="rgb(226,81,46)" fg:x="49" fg:w="31"/><text x="4.1889%" y="607.50">en..</text></g><g><title>engine::session::Session::new (31 samples, 2.49%)</title><rect x="3.9389%" y="581" width="2.4920%" height="15" fill="rgb(247,70,30)" fg:x="49" fg:w="31"/><text x="4.1889%" y="591.50">en..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="6.3505%" y="565" width="0.0804%" height="15" fill="rgb(212,68,19)" fg:x="79" fg:w="1"/><text x="6.6005%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="6.3505%" y="549" width="0.0804%" height="15" fill="rgb(240,187,13)" fg:x="79" fg:w="1"/><text x="6.6005%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="6.4309%" y="597" width="0.0804%" height="15" fill="rgb(223,113,26)" fg:x="80" fg:w="1"/><text x="6.6809%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4309%" y="581" width="0.0804%" height="15" fill="rgb(206,192,2)" fg:x="80" fg:w="1"/><text x="6.6809%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="6.5113%" y="581" width="0.0804%" height="15" fill="rgb(241,108,4)" fg:x="81" fg:w="1"/><text x="6.7613%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5916%" y="565" width="0.0804%" height="15" fill="rgb(247,173,49)" fg:x="82" fg:w="1"/><text x="6.8416%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5916%" y="549" width="0.0804%" height="15" fill="rgb(224,114,35)" fg:x="82" fg:w="1"/><text x="6.8416%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.5916%" y="533" width="0.0804%" height="15" fill="rgb(245,159,27)" fg:x="82" fg:w="1"/><text x="6.8416%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.5916%" y="517" width="0.0804%" height="15" fill="rgb(245,172,44)" fg:x="82" fg:w="1"/><text x="6.8416%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.5916%" y="501" width="0.0804%" height="15" fill="rgb(236,23,11)" fg:x="82" fg:w="1"/><text x="6.8416%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.5916%" y="485" width="0.0804%" height="15" fill="rgb(205,117,38)" fg:x="82" fg:w="1"/><text x="6.8416%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.5916%" y="469" width="0.0804%" height="15" fill="rgb(237,72,25)" fg:x="82" fg:w="1"/><text x="6.8416%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="6.5916%" y="581" width="0.1608%" height="15" fill="rgb(244,70,9)" fg:x="82" fg:w="2"/><text x="6.8416%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.6720%" y="565" width="0.0804%" height="15" fill="rgb(217,125,39)" fg:x="83" fg:w="1"/><text x="6.9220%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="6.6720%" y="549" width="0.0804%" height="15" fill="rgb(235,36,10)" fg:x="83" fg:w="1"/><text x="6.9220%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.8328%" y="469" width="0.0804%" height="15" fill="rgb(251,123,47)" fg:x="85" fg:w="1"/><text x="7.0828%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8328%" y="453" width="0.0804%" height="15" fill="rgb(221,13,13)" fg:x="85" fg:w="1"/><text x="7.0828%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8328%" y="437" width="0.0804%" height="15" fill="rgb(238,131,9)" fg:x="85" fg:w="1"/><text x="7.0828%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="6.8328%" y="485" width="0.1608%" height="15" fill="rgb(211,50,8)" fg:x="85" fg:w="2"/><text x="7.0828%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9132%" y="469" width="0.0804%" height="15" fill="rgb(245,182,24)" fg:x="86" fg:w="1"/><text x="7.1632%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="7.1543%" y="469" width="0.3215%" height="15" fill="rgb(242,14,37)" fg:x="89" fg:w="4"/><text x="7.4043%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="7.1543%" y="453" width="0.3215%" height="15" fill="rgb(246,228,12)" fg:x="89" fg:w="4"/><text x="7.4043%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.3151%" y="437" width="0.1608%" height="15" fill="rgb(213,55,15)" fg:x="91" fg:w="2"/><text x="7.5651%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.3151%" y="421" width="0.1608%" height="15" fill="rgb(209,9,3)" fg:x="91" fg:w="2"/><text x="7.5651%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.5563%" y="453" width="0.0804%" height="15" fill="rgb(230,59,30)" fg:x="94" fg:w="1"/><text x="7.8063%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="7.6367%" y="453" width="0.1608%" height="15" fill="rgb(209,121,21)" fg:x="95" fg:w="2"/><text x="7.8867%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.6367%" y="437" width="0.1608%" height="15" fill="rgb(220,109,13)" fg:x="95" fg:w="2"/><text x="7.8867%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.6367%" y="421" width="0.1608%" height="15" fill="rgb(232,18,1)" fg:x="95" fg:w="2"/><text x="7.8867%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.6367%" y="405" width="0.1608%" height="15" fill="rgb(215,41,42)" fg:x="95" fg:w="2"/><text x="7.8867%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.7170%" y="389" width="0.0804%" height="15" fill="rgb(224,123,36)" fg:x="96" fg:w="1"/><text x="7.9670%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="7.7974%" y="453" width="0.4823%" height="15" fill="rgb(240,125,3)" fg:x="97" fg:w="6"/><text x="8.0474%" y="463.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="7.7974%" y="437" width="0.4823%" height="15" fill="rgb(205,98,50)" fg:x="97" fg:w="6"/><text x="8.0474%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="7.9582%" y="421" width="0.3215%" height="15" fill="rgb(205,185,37)" fg:x="99" fg:w="4"/><text x="8.2082%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="7.9582%" y="405" width="0.3215%" height="15" fill="rgb(238,207,15)" fg:x="99" fg:w="4"/><text x="8.2082%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="7.9582%" y="389" width="0.3215%" height="15" fill="rgb(213,199,42)" fg:x="99" fg:w="4"/><text x="8.2082%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="7.9582%" y="373" width="0.3215%" height="15" fill="rgb(235,201,11)" fg:x="99" fg:w="4"/><text x="8.2082%" y="383.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="7.9582%" y="357" width="0.3215%" height="15" fill="rgb(207,46,11)" fg:x="99" fg:w="4"/><text x="8.2082%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="8.2797%" y="437" width="0.4019%" height="15" fill="rgb(241,35,35)" fg:x="103" fg:w="5"/><text x="8.5297%" y="447.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="8.2797%" y="421" width="0.4019%" height="15" fill="rgb(243,32,47)" fg:x="103" fg:w="5"/><text x="8.5297%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="8.3601%" y="405" width="0.3215%" height="15" fill="rgb(247,202,23)" fg:x="104" fg:w="4"/><text x="8.6101%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.5209%" y="389" width="0.1608%" height="15" fill="rgb(219,102,11)" fg:x="106" fg:w="2"/><text x="8.7709%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.6817%" y="405" width="0.0804%" height="15" fill="rgb(243,110,44)" fg:x="108" fg:w="1"/><text x="8.9317%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.6817%" y="389" width="0.0804%" height="15" fill="rgb(222,74,54)" fg:x="108" fg:w="1"/><text x="8.9317%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.6817%" y="421" width="0.1608%" height="15" fill="rgb(216,99,12)" fg:x="108" fg:w="2"/><text x="8.9317%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7621%" y="405" width="0.0804%" height="15" fill="rgb(226,22,26)" fg:x="109" fg:w="1"/><text x="9.0121%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="8.6817%" y="437" width="0.3215%" height="15" fill="rgb(217,163,10)" fg:x="108" fg:w="4"/><text x="8.9317%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.8424%" y="421" width="0.1608%" height="15" fill="rgb(213,25,53)" fg:x="110" fg:w="2"/><text x="9.0924%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9228%" y="405" width="0.0804%" height="15" fill="rgb(252,105,26)" fg:x="111" fg:w="1"/><text x="9.1728%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9228%" y="389" width="0.0804%" height="15" fill="rgb(220,39,43)" fg:x="111" fg:w="1"/><text x="9.1728%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.2797%" y="453" width="0.8039%" height="15" fill="rgb(229,68,48)" fg:x="103" fg:w="10"/><text x="8.5297%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.0032%" y="437" width="0.0804%" height="15" fill="rgb(252,8,32)" fg:x="112" fg:w="1"/><text x="9.2532%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.0032%" y="421" width="0.0804%" height="15" fill="rgb(223,20,43)" fg:x="112" fg:w="1"/><text x="9.2532%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0032%" y="405" width="0.0804%" height="15" fill="rgb(229,81,49)" fg:x="112" fg:w="1"/><text x="9.2532%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.85%)</title><rect x="7.4759%" y="469" width="1.8489%" height="15" fill="rgb(236,28,36)" fg:x="93" fg:w="23"/><text x="7.7259%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.0836%" y="453" width="0.2412%" height="15" fill="rgb(249,185,26)" fg:x="113" fg:w="3"/><text x="9.3336%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2444%" y="437" width="0.0804%" height="15" fill="rgb(249,174,33)" fg:x="115" fg:w="1"/><text x="9.4944%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.2444%" y="421" width="0.0804%" height="15" fill="rgb(233,201,37)" fg:x="115" fg:w="1"/><text x="9.4944%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (37 samples, 2.97%)</title><rect x="6.8328%" y="501" width="2.9743%" height="15" fill="rgb(221,78,26)" fg:x="85" fg:w="37"/><text x="7.0828%" y="511.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.81%)</title><rect x="6.9936%" y="485" width="2.8135%" height="15" fill="rgb(250,127,30)" fg:x="87" fg:w="35"/><text x="7.2436%" y="495.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="9.3248%" y="469" width="0.4823%" height="15" fill="rgb(230,49,44)" fg:x="116" fg:w="6"/><text x="9.5748%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="9.4855%" y="453" width="0.3215%" height="15" fill="rgb(229,67,23)" fg:x="118" fg:w="4"/><text x="9.7355%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="9.5659%" y="437" width="0.2412%" height="15" fill="rgb(249,83,47)" fg:x="119" fg:w="3"/><text x="9.8159%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="9.6463%" y="421" width="0.1608%" height="15" fill="rgb(215,43,3)" fg:x="120" fg:w="2"/><text x="9.8963%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="9.6463%" y="405" width="0.1608%" height="15" fill="rgb(238,154,13)" fg:x="120" fg:w="2"/><text x="9.8963%" y="415.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="9.6463%" y="389" width="0.1608%" height="15" fill="rgb(219,56,2)" fg:x="120" fg:w="2"/><text x="9.8963%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.8071%" y="469" width="0.1608%" height="15" fill="rgb(233,0,4)" fg:x="122" fg:w="2"/><text x="10.0571%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.0482%" y="453" width="0.1608%" height="15" fill="rgb(235,30,7)" fg:x="125" fg:w="2"/><text x="10.2982%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.2090%" y="437" width="0.1608%" height="15" fill="rgb(250,79,13)" fg:x="127" fg:w="2"/><text x="10.4590%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2894%" y="421" width="0.0804%" height="15" fill="rgb(211,146,34)" fg:x="128" fg:w="1"/><text x="10.5394%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="9.8071%" y="501" width="0.6431%" height="15" fill="rgb(228,22,38)" fg:x="122" fg:w="8"/><text x="10.0571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="9.8071%" y="485" width="0.6431%" height="15" fill="rgb(235,168,5)" fg:x="122" fg:w="8"/><text x="10.0571%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="9.9678%" y="469" width="0.4823%" height="15" fill="rgb(221,155,16)" fg:x="124" fg:w="6"/><text x="10.2178%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="10.2090%" y="453" width="0.2412%" height="15" fill="rgb(215,215,53)" fg:x="127" fg:w="3"/><text x="10.4590%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.3698%" y="437" width="0.0804%" height="15" fill="rgb(223,4,10)" fg:x="129" fg:w="1"/><text x="10.6198%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.3698%" y="421" width="0.0804%" height="15" fill="rgb(234,103,6)" fg:x="129" fg:w="1"/><text x="10.6198%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="10.4502%" y="453" width="0.2412%" height="15" fill="rgb(227,97,0)" fg:x="130" fg:w="3"/><text x="10.7002%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.5305%" y="437" width="0.1608%" height="15" fill="rgb(234,150,53)" fg:x="131" fg:w="2"/><text x="10.7805%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.6109%" y="421" width="0.0804%" height="15" fill="rgb(228,201,54)" fg:x="132" fg:w="1"/><text x="10.8609%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6913%" y="453" width="0.0804%" height="15" fill="rgb(222,22,37)" fg:x="133" fg:w="1"/><text x="10.9413%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.6913%" y="437" width="0.0804%" height="15" fill="rgb(237,53,32)" fg:x="133" fg:w="1"/><text x="10.9413%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="10.6913%" y="421" width="0.0804%" height="15" fill="rgb(233,25,53)" fg:x="133" fg:w="1"/><text x="10.9413%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="10.7717%" y="453" width="0.2412%" height="15" fill="rgb(210,40,34)" fg:x="134" fg:w="3"/><text x="11.0217%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="10.7717%" y="437" width="0.2412%" height="15" fill="rgb(241,220,44)" fg:x="134" fg:w="3"/><text x="11.0217%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.8521%" y="421" width="0.1608%" height="15" fill="rgb(235,28,35)" fg:x="135" fg:w="2"/><text x="11.1021%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.0932%" y="421" width="0.0804%" height="15" fill="rgb(210,56,17)" fg:x="138" fg:w="1"/><text x="11.3432%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="11.1736%" y="405" width="0.5627%" height="15" fill="rgb(224,130,29)" fg:x="139" fg:w="7"/><text x="11.4236%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="11.2540%" y="389" width="0.4823%" height="15" fill="rgb(235,212,8)" fg:x="140" fg:w="6"/><text x="11.5040%" y="399.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="11.4148%" y="373" width="0.3215%" height="15" fill="rgb(223,33,50)" fg:x="142" fg:w="4"/><text x="11.6648%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.96%)</title><rect x="11.0932%" y="437" width="0.9646%" height="15" fill="rgb(219,149,13)" fg:x="138" fg:w="12"/><text x="11.3432%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="11.1736%" y="421" width="0.8842%" height="15" fill="rgb(250,156,29)" fg:x="139" fg:w="11"/><text x="11.4236%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="11.7363%" y="405" width="0.3215%" height="15" fill="rgb(216,193,19)" fg:x="146" fg:w="4"/><text x="11.9863%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="11.7363%" y="389" width="0.3215%" height="15" fill="rgb(216,135,14)" fg:x="146" fg:w="4"/><text x="11.9863%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="11.8167%" y="373" width="0.2412%" height="15" fill="rgb(241,47,5)" fg:x="147" fg:w="3"/><text x="12.0667%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="11.8167%" y="357" width="0.2412%" height="15" fill="rgb(233,42,35)" fg:x="147" fg:w="3"/><text x="12.0667%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.8167%" y="341" width="0.2412%" height="15" fill="rgb(231,13,6)" fg:x="147" fg:w="3"/><text x="12.0667%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.9775%" y="325" width="0.0804%" height="15" fill="rgb(207,181,40)" fg:x="149" fg:w="1"/><text x="12.2275%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.9775%" y="309" width="0.0804%" height="15" fill="rgb(254,173,49)" fg:x="149" fg:w="1"/><text x="12.2275%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0579%" y="437" width="0.0804%" height="15" fill="rgb(221,1,38)" fg:x="150" fg:w="1"/><text x="12.3079%" y="447.50"></text></g><g><title>engine::session::Session::flush (71 samples, 5.71%)</title><rect x="6.5113%" y="597" width="5.7074%" height="15" fill="rgb(206,124,46)" fg:x="81" fg:w="71"/><text x="6.7613%" y="607.50">engine:..</text></g><g><title>engine::session::state::State::close (68 samples, 5.47%)</title><rect x="6.7524%" y="581" width="5.4662%" height="15" fill="rgb(249,21,11)" fg:x="84" fg:w="68"/><text x="7.0024%" y="591.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.47%)</title><rect x="6.7524%" y="565" width="5.4662%" height="15" fill="rgb(222,201,40)" fg:x="84" fg:w="68"/><text x="7.0024%" y="575.50">engine:..</text></g><g><title>core::iter::adapters::try_process (68 samples, 5.47%)</title><rect x="6.7524%" y="549" width="5.4662%" height="15" fill="rgb(235,61,29)" fg:x="84" fg:w="68"/><text x="7.0024%" y="559.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 5.47%)</title><rect x="6.7524%" y="533" width="5.4662%" height="15" fill="rgb(219,207,3)" fg:x="84" fg:w="68"/><text x="7.0024%" y="543.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (67 samples, 5.39%)</title><rect x="6.8328%" y="517" width="5.3859%" height="15" fill="rgb(222,56,46)" fg:x="85" fg:w="67"/><text x="7.0828%" y="527.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.77%)</title><rect x="10.4502%" y="501" width="1.7685%" height="15" fill="rgb(239,76,54)" fg:x="130" fg:w="22"/><text x="10.7002%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.77%)</title><rect x="10.4502%" y="485" width="1.7685%" height="15" fill="rgb(231,124,27)" fg:x="130" fg:w="22"/><text x="10.7002%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="10.4502%" y="469" width="1.7685%" height="15" fill="rgb(249,195,6)" fg:x="130" fg:w="22"/><text x="10.7002%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.21%)</title><rect x="11.0129%" y="453" width="1.2058%" height="15" fill="rgb(237,174,47)" fg:x="137" fg:w="15"/><text x="11.2629%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1383%" y="437" width="0.0804%" height="15" fill="rgb(206,201,31)" fg:x="151" fg:w="1"/><text x="12.3883%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.1383%" y="421" width="0.0804%" height="15" fill="rgb(231,57,52)" fg:x="151" fg:w="1"/><text x="12.3883%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.1383%" y="405" width="0.0804%" height="15" fill="rgb(248,177,22)" fg:x="151" fg:w="1"/><text x="12.3883%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2186%" y="517" width="0.0804%" height="15" fill="rgb(215,211,37)" fg:x="152" fg:w="1"/><text x="12.4686%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.2186%" y="549" width="0.1608%" height="15" fill="rgb(241,128,51)" fg:x="152" fg:w="2"/><text x="12.4686%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.2186%" y="533" width="0.1608%" height="15" fill="rgb(227,165,31)" fg:x="152" fg:w="2"/><text x="12.4686%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2990%" y="517" width="0.0804%" height="15" fill="rgb(228,167,24)" fg:x="153" fg:w="1"/><text x="12.5490%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2990%" y="501" width="0.0804%" height="15" fill="rgb(228,143,12)" fg:x="153" fg:w="1"/><text x="12.5490%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.2990%" y="485" width="0.0804%" height="15" fill="rgb(249,149,8)" fg:x="153" fg:w="1"/><text x="12.5490%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2990%" y="469" width="0.0804%" height="15" fill="rgb(243,35,44)" fg:x="153" fg:w="1"/><text x="12.5490%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2990%" y="453" width="0.0804%" height="15" fill="rgb(246,89,9)" fg:x="153" fg:w="1"/><text x="12.5490%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2990%" y="437" width="0.0804%" height="15" fill="rgb(233,213,13)" fg:x="153" fg:w="1"/><text x="12.5490%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.2990%" y="421" width="0.0804%" height="15" fill="rgb(233,141,41)" fg:x="153" fg:w="1"/><text x="12.5490%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2990%" y="405" width="0.0804%" height="15" fill="rgb(239,167,4)" fg:x="153" fg:w="1"/><text x="12.5490%" y="415.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="12.3794%" y="549" width="0.0804%" height="15" fill="rgb(209,217,16)" fg:x="154" fg:w="1"/><text x="12.6294%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.3794%" y="533" width="0.0804%" height="15" fill="rgb(219,88,35)" fg:x="154" fg:w="1"/><text x="12.6294%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.3794%" y="517" width="0.0804%" height="15" fill="rgb(220,193,23)" fg:x="154" fg:w="1"/><text x="12.6294%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.3794%" y="501" width="0.0804%" height="15" fill="rgb(230,90,52)" fg:x="154" fg:w="1"/><text x="12.6294%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4598%" y="485" width="0.0804%" height="15" fill="rgb(252,106,19)" fg:x="155" fg:w="1"/><text x="12.7098%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.5402%" y="405" width="0.0804%" height="15" fill="rgb(206,74,20)" fg:x="156" fg:w="1"/><text x="12.7902%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5402%" y="389" width="0.0804%" height="15" fill="rgb(230,138,44)" fg:x="156" fg:w="1"/><text x="12.7902%" y="399.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="12.4598%" y="533" width="0.2412%" height="15" fill="rgb(235,182,43)" fg:x="155" fg:w="3"/><text x="12.7098%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="12.4598%" y="517" width="0.2412%" height="15" fill="rgb(242,16,51)" fg:x="155" fg:w="3"/><text x="12.7098%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="12.4598%" y="501" width="0.2412%" height="15" fill="rgb(248,9,4)" fg:x="155" fg:w="3"/><text x="12.7098%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.5402%" y="485" width="0.1608%" height="15" fill="rgb(210,31,22)" fg:x="156" fg:w="2"/><text x="12.7902%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5402%" y="469" width="0.1608%" height="15" fill="rgb(239,54,39)" fg:x="156" fg:w="2"/><text x="12.7902%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.5402%" y="453" width="0.1608%" height="15" fill="rgb(230,99,41)" fg:x="156" fg:w="2"/><text x="12.7902%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="12.5402%" y="437" width="0.1608%" height="15" fill="rgb(253,106,12)" fg:x="156" fg:w="2"/><text x="12.7902%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="12.5402%" y="421" width="0.1608%" height="15" fill="rgb(213,46,41)" fg:x="156" fg:w="2"/><text x="12.7902%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="12.6206%" y="405" width="0.0804%" height="15" fill="rgb(215,133,35)" fg:x="157" fg:w="1"/><text x="12.8706%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.7010%" y="501" width="0.0804%" height="15" fill="rgb(213,28,5)" fg:x="158" fg:w="1"/><text x="12.9510%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="12.7010%" y="485" width="0.0804%" height="15" fill="rgb(215,77,49)" fg:x="158" fg:w="1"/><text x="12.9510%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.7010%" y="469" width="0.0804%" height="15" fill="rgb(248,100,22)" fg:x="158" fg:w="1"/><text x="12.9510%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7010%" y="453" width="0.0804%" height="15" fill="rgb(208,67,9)" fg:x="158" fg:w="1"/><text x="12.9510%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.7010%" y="437" width="0.0804%" height="15" fill="rgb(219,133,21)" fg:x="158" fg:w="1"/><text x="12.9510%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7010%" y="421" width="0.0804%" height="15" fill="rgb(246,46,29)" fg:x="158" fg:w="1"/><text x="12.9510%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="12.4598%" y="549" width="0.4019%" height="15" fill="rgb(246,185,52)" fg:x="155" fg:w="5"/><text x="12.7098%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7010%" y="533" width="0.1608%" height="15" fill="rgb(252,136,11)" fg:x="158" fg:w="2"/><text x="12.9510%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7010%" y="517" width="0.1608%" height="15" fill="rgb(219,138,53)" fg:x="158" fg:w="2"/><text x="12.9510%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="12.7814%" y="501" width="0.0804%" height="15" fill="rgb(211,51,23)" fg:x="159" fg:w="1"/><text x="13.0314%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="12.8617%" y="517" width="0.0804%" height="15" fill="rgb(247,221,28)" fg:x="160" fg:w="1"/><text x="13.1117%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9421%" y="501" width="0.0804%" height="15" fill="rgb(251,222,45)" fg:x="161" fg:w="1"/><text x="13.1921%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9421%" y="485" width="0.0804%" height="15" fill="rgb(217,162,53)" fg:x="161" fg:w="1"/><text x="13.1921%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9421%" y="469" width="0.0804%" height="15" fill="rgb(229,93,14)" fg:x="161" fg:w="1"/><text x="13.1921%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.0225%" y="501" width="0.0804%" height="15" fill="rgb(209,67,49)" fg:x="162" fg:w="1"/><text x="13.2725%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="12.8617%" y="533" width="0.3215%" height="15" fill="rgb(213,87,29)" fg:x="160" fg:w="4"/><text x="13.1117%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.9421%" y="517" width="0.2412%" height="15" fill="rgb(205,151,52)" fg:x="161" fg:w="3"/><text x="13.1921%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1029%" y="501" width="0.0804%" height="15" fill="rgb(253,215,39)" fg:x="163" fg:w="1"/><text x="13.3529%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1029%" y="485" width="0.0804%" height="15" fill="rgb(221,220,41)" fg:x="163" fg:w="1"/><text x="13.3529%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.1833%" y="469" width="0.0804%" height="15" fill="rgb(218,133,21)" fg:x="164" fg:w="1"/><text x="13.4333%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1833%" y="453" width="0.0804%" height="15" fill="rgb(221,193,43)" fg:x="164" fg:w="1"/><text x="13.4333%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1833%" y="501" width="0.1608%" height="15" fill="rgb(240,128,52)" fg:x="164" fg:w="2"/><text x="13.4333%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1833%" y="485" width="0.1608%" height="15" fill="rgb(253,114,12)" fg:x="164" fg:w="2"/><text x="13.4333%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2637%" y="469" width="0.0804%" height="15" fill="rgb(215,223,47)" fg:x="165" fg:w="1"/><text x="13.5137%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2637%" y="453" width="0.0804%" height="15" fill="rgb(248,225,23)" fg:x="165" fg:w="1"/><text x="13.5137%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.2637%" y="437" width="0.0804%" height="15" fill="rgb(250,108,0)" fg:x="165" fg:w="1"/><text x="13.5137%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.2637%" y="421" width="0.0804%" height="15" fill="rgb(228,208,7)" fg:x="165" fg:w="1"/><text x="13.5137%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.2637%" y="405" width="0.0804%" height="15" fill="rgb(244,45,10)" fg:x="165" fg:w="1"/><text x="13.5137%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2637%" y="389" width="0.0804%" height="15" fill="rgb(207,125,25)" fg:x="165" fg:w="1"/><text x="13.5137%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2637%" y="373" width="0.0804%" height="15" fill="rgb(210,195,18)" fg:x="165" fg:w="1"/><text x="13.5137%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.2637%" y="357" width="0.0804%" height="15" fill="rgb(249,80,12)" fg:x="165" fg:w="1"/><text x="13.5137%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.2637%" y="341" width="0.0804%" height="15" fill="rgb(221,65,9)" fg:x="165" fg:w="1"/><text x="13.5137%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.2637%" y="325" width="0.0804%" height="15" fill="rgb(235,49,36)" fg:x="165" fg:w="1"/><text x="13.5137%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.2637%" y="309" width="0.0804%" height="15" fill="rgb(225,32,20)" fg:x="165" fg:w="1"/><text x="13.5137%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2637%" y="293" width="0.0804%" height="15" fill="rgb(215,141,46)" fg:x="165" fg:w="1"/><text x="13.5137%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="13.1833%" y="533" width="0.3215%" height="15" fill="rgb(250,160,47)" fg:x="164" fg:w="4"/><text x="13.4333%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="13.1833%" y="517" width="0.3215%" height="15" fill="rgb(216,222,40)" fg:x="164" fg:w="4"/><text x="13.4333%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.3441%" y="501" width="0.1608%" height="15" fill="rgb(234,217,39)" fg:x="166" fg:w="2"/><text x="13.5941%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.3441%" y="485" width="0.1608%" height="15" fill="rgb(207,178,40)" fg:x="166" fg:w="2"/><text x="13.5941%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="13.3441%" y="469" width="0.1608%" height="15" fill="rgb(221,136,13)" fg:x="166" fg:w="2"/><text x="13.5941%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="12.8617%" y="549" width="0.7235%" height="15" fill="rgb(249,199,10)" fg:x="160" fg:w="9"/><text x="13.1117%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.5048%" y="533" width="0.0804%" height="15" fill="rgb(249,222,13)" fg:x="168" fg:w="1"/><text x="13.7548%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.5048%" y="517" width="0.0804%" height="15" fill="rgb(244,185,38)" fg:x="168" fg:w="1"/><text x="13.7548%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5048%" y="501" width="0.0804%" height="15" fill="rgb(236,202,9)" fg:x="168" fg:w="1"/><text x="13.7548%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5048%" y="485" width="0.0804%" height="15" fill="rgb(250,229,37)" fg:x="168" fg:w="1"/><text x="13.7548%" y="495.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5048%" y="469" width="0.0804%" height="15" fill="rgb(206,174,23)" fg:x="168" fg:w="1"/><text x="13.7548%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.5852%" y="517" width="0.1608%" height="15" fill="rgb(211,33,43)" fg:x="169" fg:w="2"/><text x="13.8352%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.5852%" y="501" width="0.1608%" height="15" fill="rgb(245,58,50)" fg:x="169" fg:w="2"/><text x="13.8352%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5852%" y="485" width="0.1608%" height="15" fill="rgb(244,68,36)" fg:x="169" fg:w="2"/><text x="13.8352%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.5852%" y="469" width="0.1608%" height="15" fill="rgb(232,229,15)" fg:x="169" fg:w="2"/><text x="13.8352%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6656%" y="453" width="0.0804%" height="15" fill="rgb(254,30,23)" fg:x="170" fg:w="1"/><text x="13.9156%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6656%" y="437" width="0.0804%" height="15" fill="rgb(235,160,14)" fg:x="170" fg:w="1"/><text x="13.9156%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7460%" y="453" width="0.0804%" height="15" fill="rgb(212,155,44)" fg:x="171" fg:w="1"/><text x="13.9960%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7460%" y="437" width="0.0804%" height="15" fill="rgb(226,2,50)" fg:x="171" fg:w="1"/><text x="13.9960%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7460%" y="421" width="0.0804%" height="15" fill="rgb(234,177,6)" fg:x="171" fg:w="1"/><text x="13.9960%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7460%" y="405" width="0.0804%" height="15" fill="rgb(217,24,9)" fg:x="171" fg:w="1"/><text x="13.9960%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7460%" y="389" width="0.0804%" height="15" fill="rgb(220,13,46)" fg:x="171" fg:w="1"/><text x="13.9960%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7460%" y="373" width="0.0804%" height="15" fill="rgb(239,221,27)" fg:x="171" fg:w="1"/><text x="13.9960%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7460%" y="357" width="0.0804%" height="15" fill="rgb(222,198,25)" fg:x="171" fg:w="1"/><text x="13.9960%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7460%" y="341" width="0.0804%" height="15" fill="rgb(211,99,13)" fg:x="171" fg:w="1"/><text x="13.9960%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.7460%" y="325" width="0.0804%" height="15" fill="rgb(232,111,31)" fg:x="171" fg:w="1"/><text x="13.9960%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.7460%" y="309" width="0.0804%" height="15" fill="rgb(245,82,37)" fg:x="171" fg:w="1"/><text x="13.9960%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.7460%" y="293" width="0.0804%" height="15" fill="rgb(227,149,46)" fg:x="171" fg:w="1"/><text x="13.9960%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.7460%" y="277" width="0.0804%" height="15" fill="rgb(218,36,50)" fg:x="171" fg:w="1"/><text x="13.9960%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7460%" y="261" width="0.0804%" height="15" fill="rgb(226,80,48)" fg:x="171" fg:w="1"/><text x="13.9960%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="485" width="0.1608%" height="15" fill="rgb(238,224,15)" fg:x="171" fg:w="2"/><text x="13.9960%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7460%" y="469" width="0.1608%" height="15" fill="rgb(241,136,10)" fg:x="171" fg:w="2"/><text x="13.9960%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8264%" y="453" width="0.0804%" height="15" fill="rgb(208,32,45)" fg:x="172" fg:w="1"/><text x="14.0764%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (22 samples, 1.77%)</title><rect x="12.2186%" y="565" width="1.7685%" height="15" fill="rgb(207,135,9)" fg:x="152" fg:w="22"/><text x="12.4686%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="13.5852%" y="549" width="0.4019%" height="15" fill="rgb(206,86,44)" fg:x="169" fg:w="5"/><text x="13.8352%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="13.5852%" y="533" width="0.4019%" height="15" fill="rgb(245,177,15)" fg:x="169" fg:w="5"/><text x="13.8352%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.7460%" y="517" width="0.2412%" height="15" fill="rgb(206,64,50)" fg:x="171" fg:w="3"/><text x="13.9960%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.7460%" y="501" width="0.2412%" height="15" fill="rgb(234,36,40)" fg:x="171" fg:w="3"/><text x="13.9960%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9068%" y="485" width="0.0804%" height="15" fill="rgb(213,64,8)" fg:x="173" fg:w="1"/><text x="14.1568%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.9068%" y="469" width="0.0804%" height="15" fill="rgb(210,75,36)" fg:x="173" fg:w="1"/><text x="14.1568%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9068%" y="453" width="0.0804%" height="15" fill="rgb(229,88,21)" fg:x="173" fg:w="1"/><text x="14.1568%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9871%" y="533" width="0.0804%" height="15" fill="rgb(252,204,47)" fg:x="174" fg:w="1"/><text x="14.2371%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (24 samples, 1.93%)</title><rect x="12.2186%" y="581" width="1.9293%" height="15" fill="rgb(208,77,27)" fg:x="152" fg:w="24"/><text x="12.4686%" y="591.50">p..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.9871%" y="565" width="0.1608%" height="15" fill="rgb(221,76,26)" fg:x="174" fg:w="2"/><text x="14.2371%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.9871%" y="549" width="0.1608%" height="15" fill="rgb(225,139,18)" fg:x="174" fg:w="2"/><text x="14.2371%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0675%" y="533" width="0.0804%" height="15" fill="rgb(230,137,11)" fg:x="175" fg:w="1"/><text x="14.3175%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="517" width="0.0804%" height="15" fill="rgb(212,28,1)" fg:x="175" fg:w="1"/><text x="14.3175%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.0675%" y="501" width="0.0804%" height="15" fill="rgb(248,164,17)" fg:x="175" fg:w="1"/><text x="14.3175%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="485" width="0.0804%" height="15" fill="rgb(222,171,42)" fg:x="175" fg:w="1"/><text x="14.3175%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0675%" y="469" width="0.0804%" height="15" fill="rgb(243,84,45)" fg:x="175" fg:w="1"/><text x="14.3175%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0675%" y="453" width="0.0804%" height="15" fill="rgb(252,49,23)" fg:x="175" fg:w="1"/><text x="14.3175%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.2283%" y="533" width="0.1608%" height="15" fill="rgb(215,19,7)" fg:x="177" fg:w="2"/><text x="14.4783%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.3087%" y="517" width="0.0804%" height="15" fill="rgb(238,81,41)" fg:x="178" fg:w="1"/><text x="14.5587%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3087%" y="501" width="0.0804%" height="15" fill="rgb(210,199,37)" fg:x="178" fg:w="1"/><text x="14.5587%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3087%" y="485" width="0.0804%" height="15" fill="rgb(244,192,49)" fg:x="178" fg:w="1"/><text x="14.5587%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.3087%" y="469" width="0.0804%" height="15" fill="rgb(226,211,11)" fg:x="178" fg:w="1"/><text x="14.5587%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3087%" y="453" width="0.0804%" height="15" fill="rgb(236,162,54)" fg:x="178" fg:w="1"/><text x="14.5587%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.3087%" y="437" width="0.0804%" height="15" fill="rgb(220,229,9)" fg:x="178" fg:w="1"/><text x="14.5587%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.3087%" y="421" width="0.0804%" height="15" fill="rgb(250,87,22)" fg:x="178" fg:w="1"/><text x="14.5587%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3891%" y="501" width="0.0804%" height="15" fill="rgb(239,43,17)" fg:x="179" fg:w="1"/><text x="14.6391%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3891%" y="485" width="0.0804%" height="15" fill="rgb(231,177,25)" fg:x="179" fg:w="1"/><text x="14.6391%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3891%" y="469" width="0.0804%" height="15" fill="rgb(219,179,1)" fg:x="179" fg:w="1"/><text x="14.6391%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4695%" y="469" width="0.0804%" height="15" fill="rgb(238,219,53)" fg:x="180" fg:w="1"/><text x="14.7195%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5498%" y="437" width="0.0804%" height="15" fill="rgb(232,167,36)" fg:x="181" fg:w="1"/><text x="14.7998%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="14.5498%" y="421" width="0.0804%" height="15" fill="rgb(244,19,51)" fg:x="181" fg:w="1"/><text x="14.7998%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="14.5498%" y="405" width="0.0804%" height="15" fill="rgb(224,6,22)" fg:x="181" fg:w="1"/><text x="14.7998%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="14.2283%" y="565" width="0.4823%" height="15" fill="rgb(224,145,5)" fg:x="177" fg:w="6"/><text x="14.4783%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="14.2283%" y="549" width="0.4823%" height="15" fill="rgb(234,130,49)" fg:x="177" fg:w="6"/><text x="14.4783%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="14.3891%" y="533" width="0.3215%" height="15" fill="rgb(254,6,2)" fg:x="179" fg:w="4"/><text x="14.6391%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.3891%" y="517" width="0.3215%" height="15" fill="rgb(208,96,46)" fg:x="179" fg:w="4"/><text x="14.6391%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.4695%" y="501" width="0.2412%" height="15" fill="rgb(239,3,39)" fg:x="180" fg:w="3"/><text x="14.7195%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.4695%" y="485" width="0.2412%" height="15" fill="rgb(233,210,1)" fg:x="180" fg:w="3"/><text x="14.7195%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.5498%" y="469" width="0.1608%" height="15" fill="rgb(244,137,37)" fg:x="181" fg:w="2"/><text x="14.7998%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5498%" y="453" width="0.1608%" height="15" fill="rgb(240,136,2)" fg:x="181" fg:w="2"/><text x="14.7998%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.6302%" y="437" width="0.0804%" height="15" fill="rgb(239,18,37)" fg:x="182" fg:w="1"/><text x="14.8802%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.6302%" y="421" width="0.0804%" height="15" fill="rgb(218,185,22)" fg:x="182" fg:w="1"/><text x="14.8802%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.6302%" y="405" width="0.0804%" height="15" fill="rgb(225,218,4)" fg:x="182" fg:w="1"/><text x="14.8802%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.7106%" y="565" width="0.0804%" height="15" fill="rgb(230,182,32)" fg:x="183" fg:w="1"/><text x="14.9606%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7106%" y="549" width="0.0804%" height="15" fill="rgb(242,56,43)" fg:x="183" fg:w="1"/><text x="14.9606%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8714%" y="485" width="0.0804%" height="15" fill="rgb(233,99,24)" fg:x="185" fg:w="1"/><text x="15.1214%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8714%" y="469" width="0.0804%" height="15" fill="rgb(234,209,42)" fg:x="185" fg:w="1"/><text x="15.1214%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8714%" y="453" width="0.0804%" height="15" fill="rgb(227,7,12)" fg:x="185" fg:w="1"/><text x="15.1214%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8714%" y="437" width="0.0804%" height="15" fill="rgb(245,203,43)" fg:x="185" fg:w="1"/><text x="15.1214%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.8714%" y="517" width="0.1608%" height="15" fill="rgb(238,205,33)" fg:x="185" fg:w="2"/><text x="15.1214%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.8714%" y="501" width="0.1608%" height="15" fill="rgb(231,56,7)" fg:x="185" fg:w="2"/><text x="15.1214%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9518%" y="485" width="0.0804%" height="15" fill="rgb(244,186,29)" fg:x="186" fg:w="1"/><text x="15.2018%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9518%" y="469" width="0.0804%" height="15" fill="rgb(234,111,31)" fg:x="186" fg:w="1"/><text x="15.2018%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.9518%" y="453" width="0.0804%" height="15" fill="rgb(241,149,10)" fg:x="186" fg:w="1"/><text x="15.2018%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9518%" y="437" width="0.0804%" height="15" fill="rgb(249,206,44)" fg:x="186" fg:w="1"/><text x="15.2018%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.9518%" y="421" width="0.0804%" height="15" fill="rgb(251,153,30)" fg:x="186" fg:w="1"/><text x="15.2018%" y="431.50"></text></g><g><title>plugins_core::build::Build::holding (36 samples, 2.89%)</title><rect x="12.2186%" y="597" width="2.8939%" height="15" fill="rgb(239,152,38)" fg:x="152" fg:w="36"/><text x="12.4686%" y="607.50">pl..</text></g><g><title>plugins_core::tools::set_container (12 samples, 0.96%)</title><rect x="14.1479%" y="581" width="0.9646%" height="15" fill="rgb(249,139,47)" fg:x="176" fg:w="12"/><text x="14.3979%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="14.7910%" y="565" width="0.3215%" height="15" fill="rgb(244,64,35)" fg:x="184" fg:w="4"/><text x="15.0410%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="14.7910%" y="549" width="0.3215%" height="15" fill="rgb(216,46,15)" fg:x="184" fg:w="4"/><text x="15.0410%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="14.7910%" y="533" width="0.3215%" height="15" fill="rgb(250,74,19)" fg:x="184" fg:w="4"/><text x="15.0410%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0322%" y="517" width="0.0804%" height="15" fill="rgb(249,42,33)" fg:x="187" fg:w="1"/><text x="15.2822%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="15.1125%" y="565" width="0.0804%" height="15" fill="rgb(242,149,17)" fg:x="188" fg:w="1"/><text x="15.3625%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.1125%" y="549" width="0.0804%" height="15" fill="rgb(244,29,21)" fg:x="188" fg:w="1"/><text x="15.3625%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1125%" y="533" width="0.0804%" height="15" fill="rgb(220,130,37)" fg:x="188" fg:w="1"/><text x="15.3625%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.1125%" y="517" width="0.0804%" height="15" fill="rgb(211,67,2)" fg:x="188" fg:w="1"/><text x="15.3625%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1125%" y="501" width="0.0804%" height="15" fill="rgb(235,68,52)" fg:x="188" fg:w="1"/><text x="15.3625%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.1125%" y="485" width="0.0804%" height="15" fill="rgb(246,142,3)" fg:x="188" fg:w="1"/><text x="15.3625%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1125%" y="469" width="0.0804%" height="15" fill="rgb(241,25,7)" fg:x="188" fg:w="1"/><text x="15.3625%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.1125%" y="453" width="0.0804%" height="15" fill="rgb(242,119,39)" fg:x="188" fg:w="1"/><text x="15.3625%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.1929%" y="517" width="0.0804%" height="15" fill="rgb(241,98,45)" fg:x="189" fg:w="1"/><text x="15.4429%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.1929%" y="501" width="0.0804%" height="15" fill="rgb(254,28,30)" fg:x="189" fg:w="1"/><text x="15.4429%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1929%" y="485" width="0.0804%" height="15" fill="rgb(241,142,54)" fg:x="189" fg:w="1"/><text x="15.4429%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1929%" y="469" width="0.0804%" height="15" fill="rgb(222,85,15)" fg:x="189" fg:w="1"/><text x="15.4429%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1929%" y="453" width="0.0804%" height="15" fill="rgb(210,85,47)" fg:x="189" fg:w="1"/><text x="15.4429%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1929%" y="437" width="0.0804%" height="15" fill="rgb(224,206,25)" fg:x="189" fg:w="1"/><text x="15.4429%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="15.1929%" y="549" width="0.1608%" height="15" fill="rgb(243,201,19)" fg:x="189" fg:w="2"/><text x="15.4429%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="15.1929%" y="533" width="0.1608%" height="15" fill="rgb(236,59,4)" fg:x="189" fg:w="2"/><text x="15.4429%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2733%" y="517" width="0.0804%" height="15" fill="rgb(254,179,45)" fg:x="190" fg:w="1"/><text x="15.5233%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.2733%" y="501" width="0.0804%" height="15" fill="rgb(226,14,10)" fg:x="190" fg:w="1"/><text x="15.5233%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.1929%" y="565" width="0.3215%" height="15" fill="rgb(244,27,41)" fg:x="189" fg:w="4"/><text x="15.4429%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="15.3537%" y="549" width="0.1608%" height="15" fill="rgb(235,35,32)" fg:x="191" fg:w="2"/><text x="15.6037%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.3537%" y="533" width="0.1608%" height="15" fill="rgb(218,68,31)" fg:x="191" fg:w="2"/><text x="15.6037%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.4341%" y="517" width="0.0804%" height="15" fill="rgb(207,120,37)" fg:x="192" fg:w="1"/><text x="15.6841%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.4341%" y="501" width="0.0804%" height="15" fill="rgb(227,98,0)" fg:x="192" fg:w="1"/><text x="15.6841%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5145%" y="517" width="0.0804%" height="15" fill="rgb(207,7,3)" fg:x="193" fg:w="1"/><text x="15.7645%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5145%" y="501" width="0.0804%" height="15" fill="rgb(206,98,19)" fg:x="193" fg:w="1"/><text x="15.7645%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5145%" y="485" width="0.0804%" height="15" fill="rgb(217,5,26)" fg:x="193" fg:w="1"/><text x="15.7645%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5145%" y="469" width="0.0804%" height="15" fill="rgb(235,190,38)" fg:x="193" fg:w="1"/><text x="15.7645%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="15.5145%" y="565" width="0.1608%" height="15" fill="rgb(247,86,24)" fg:x="193" fg:w="2"/><text x="15.7645%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.5145%" y="549" width="0.1608%" height="15" fill="rgb(205,101,16)" fg:x="193" fg:w="2"/><text x="15.7645%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.5145%" y="533" width="0.1608%" height="15" fill="rgb(246,168,33)" fg:x="193" fg:w="2"/><text x="15.7645%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5949%" y="517" width="0.0804%" height="15" fill="rgb(231,114,1)" fg:x="194" fg:w="1"/><text x="15.8449%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5949%" y="501" width="0.0804%" height="15" fill="rgb(207,184,53)" fg:x="194" fg:w="1"/><text x="15.8449%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5949%" y="485" width="0.0804%" height="15" fill="rgb(224,95,51)" fg:x="194" fg:w="1"/><text x="15.8449%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5949%" y="469" width="0.0804%" height="15" fill="rgb(212,188,45)" fg:x="194" fg:w="1"/><text x="15.8449%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5949%" y="453" width="0.0804%" height="15" fill="rgb(223,154,38)" fg:x="194" fg:w="1"/><text x="15.8449%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="15.6752%" y="549" width="0.1608%" height="15" fill="rgb(251,22,52)" fg:x="195" fg:w="2"/><text x="15.9252%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.7556%" y="533" width="0.0804%" height="15" fill="rgb(229,209,22)" fg:x="196" fg:w="1"/><text x="16.0056%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="15.8360%" y="549" width="0.0804%" height="15" fill="rgb(234,138,34)" fg:x="197" fg:w="1"/><text x="16.0860%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.9164%" y="533" width="0.0804%" height="15" fill="rgb(212,95,11)" fg:x="198" fg:w="1"/><text x="16.1664%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.9164%" y="517" width="0.0804%" height="15" fill="rgb(240,179,47)" fg:x="198" fg:w="1"/><text x="16.1664%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="15.1125%" y="581" width="0.9646%" height="15" fill="rgb(240,163,11)" fg:x="188" fg:w="12"/><text x="15.3625%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="15.6752%" y="565" width="0.4019%" height="15" fill="rgb(236,37,12)" fg:x="195" fg:w="5"/><text x="15.9252%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="15.9164%" y="549" width="0.1608%" height="15" fill="rgb(232,164,16)" fg:x="198" fg:w="2"/><text x="16.1664%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="15.9968%" y="533" width="0.0804%" height="15" fill="rgb(244,205,15)" fg:x="199" fg:w="1"/><text x="16.2468%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.9968%" y="517" width="0.0804%" height="15" fill="rgb(223,117,47)" fg:x="199" fg:w="1"/><text x="16.2468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9968%" y="501" width="0.0804%" height="15" fill="rgb(244,107,35)" fg:x="199" fg:w="1"/><text x="16.2468%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.9968%" y="485" width="0.0804%" height="15" fill="rgb(205,140,8)" fg:x="199" fg:w="1"/><text x="16.2468%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.9968%" y="469" width="0.0804%" height="15" fill="rgb(228,84,46)" fg:x="199" fg:w="1"/><text x="16.2468%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.05%)</title><rect x="15.1125%" y="597" width="1.0450%" height="15" fill="rgb(254,188,9)" fg:x="188" fg:w="13"/><text x="15.3625%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.0772%" y="581" width="0.0804%" height="15" fill="rgb(206,112,54)" fg:x="200" fg:w="1"/><text x="16.3272%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0772%" y="565" width="0.0804%" height="15" fill="rgb(216,84,49)" fg:x="200" fg:w="1"/><text x="16.3272%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.2379%" y="533" width="0.0804%" height="15" fill="rgb(214,194,35)" fg:x="202" fg:w="1"/><text x="16.4879%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.2379%" y="517" width="0.0804%" height="15" fill="rgb(249,28,3)" fg:x="202" fg:w="1"/><text x="16.4879%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="16.1576%" y="565" width="0.2412%" height="15" fill="rgb(222,56,52)" fg:x="201" fg:w="3"/><text x="16.4076%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.2379%" y="549" width="0.1608%" height="15" fill="rgb(245,217,50)" fg:x="202" fg:w="2"/><text x="16.4879%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3183%" y="533" width="0.0804%" height="15" fill="rgb(213,201,24)" fg:x="203" fg:w="1"/><text x="16.5683%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3183%" y="517" width="0.0804%" height="15" fill="rgb(248,116,28)" fg:x="203" fg:w="1"/><text x="16.5683%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.3183%" y="501" width="0.0804%" height="15" fill="rgb(219,72,43)" fg:x="203" fg:w="1"/><text x="16.5683%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3183%" y="485" width="0.0804%" height="15" fill="rgb(209,138,14)" fg:x="203" fg:w="1"/><text x="16.5683%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3183%" y="469" width="0.0804%" height="15" fill="rgb(222,18,33)" fg:x="203" fg:w="1"/><text x="16.5683%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3183%" y="453" width="0.0804%" height="15" fill="rgb(213,199,7)" fg:x="203" fg:w="1"/><text x="16.5683%" y="463.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="16.1576%" y="597" width="0.3215%" height="15" fill="rgb(250,110,10)" fg:x="201" fg:w="4"/><text x="16.4076%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="16.1576%" y="581" width="0.3215%" height="15" fill="rgb(248,123,6)" fg:x="201" fg:w="4"/><text x="16.4076%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.3987%" y="565" width="0.0804%" height="15" fill="rgb(206,91,31)" fg:x="204" fg:w="1"/><text x="16.6487%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.3987%" y="549" width="0.0804%" height="15" fill="rgb(211,154,13)" fg:x="204" fg:w="1"/><text x="16.6487%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5595%" y="533" width="0.0804%" height="15" fill="rgb(225,148,7)" fg:x="206" fg:w="1"/><text x="16.8095%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.5595%" y="565" width="0.1608%" height="15" fill="rgb(220,160,43)" fg:x="206" fg:w="2"/><text x="16.8095%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.5595%" y="549" width="0.1608%" height="15" fill="rgb(213,52,39)" fg:x="206" fg:w="2"/><text x="16.8095%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.6399%" y="533" width="0.0804%" height="15" fill="rgb(243,137,7)" fg:x="207" fg:w="1"/><text x="16.8899%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="16.5595%" y="581" width="0.2412%" height="15" fill="rgb(230,79,13)" fg:x="206" fg:w="3"/><text x="16.8095%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.7203%" y="565" width="0.0804%" height="15" fill="rgb(247,105,23)" fg:x="208" fg:w="1"/><text x="16.9703%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.7203%" y="549" width="0.0804%" height="15" fill="rgb(223,179,41)" fg:x="208" fg:w="1"/><text x="16.9703%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.7203%" y="533" width="0.0804%" height="15" fill="rgb(218,9,34)" fg:x="208" fg:w="1"/><text x="16.9703%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.7203%" y="517" width="0.0804%" height="15" fill="rgb(222,106,8)" fg:x="208" fg:w="1"/><text x="16.9703%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="16.8006%" y="581" width="0.0804%" height="15" fill="rgb(211,220,0)" fg:x="209" fg:w="1"/><text x="17.0506%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8810%" y="581" width="0.0804%" height="15" fill="rgb(229,52,16)" fg:x="210" fg:w="1"/><text x="17.1310%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9614%" y="485" width="0.0804%" height="15" fill="rgb(212,155,18)" fg:x="211" fg:w="1"/><text x="17.2114%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9614%" y="469" width="0.0804%" height="15" fill="rgb(242,21,14)" fg:x="211" fg:w="1"/><text x="17.2114%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="16.9614%" y="533" width="0.1608%" height="15" fill="rgb(222,19,48)" fg:x="211" fg:w="2"/><text x="17.2114%" y="543.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.9614%" y="517" width="0.1608%" height="15" fill="rgb(232,45,27)" fg:x="211" fg:w="2"/><text x="17.2114%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.9614%" y="501" width="0.1608%" height="15" fill="rgb(249,103,42)" fg:x="211" fg:w="2"/><text x="17.2114%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0418%" y="485" width="0.0804%" height="15" fill="rgb(246,81,33)" fg:x="212" fg:w="1"/><text x="17.2918%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0418%" y="469" width="0.0804%" height="15" fill="rgb(252,33,42)" fg:x="212" fg:w="1"/><text x="17.2918%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0418%" y="453" width="0.0804%" height="15" fill="rgb(209,212,41)" fg:x="212" fg:w="1"/><text x="17.2918%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0418%" y="437" width="0.0804%" height="15" fill="rgb(207,154,6)" fg:x="212" fg:w="1"/><text x="17.2918%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0418%" y="421" width="0.0804%" height="15" fill="rgb(223,64,47)" fg:x="212" fg:w="1"/><text x="17.2918%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.1222%" y="437" width="0.1608%" height="15" fill="rgb(211,161,38)" fg:x="213" fg:w="2"/><text x="17.3722%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2026%" y="421" width="0.0804%" height="15" fill="rgb(219,138,40)" fg:x="214" fg:w="1"/><text x="17.4526%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2026%" y="405" width="0.0804%" height="15" fill="rgb(241,228,46)" fg:x="214" fg:w="1"/><text x="17.4526%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="17.1222%" y="485" width="0.3215%" height="15" fill="rgb(223,209,38)" fg:x="213" fg:w="4"/><text x="17.3722%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="17.1222%" y="469" width="0.3215%" height="15" fill="rgb(236,164,45)" fg:x="213" fg:w="4"/><text x="17.3722%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="17.1222%" y="453" width="0.3215%" height="15" fill="rgb(231,15,5)" fg:x="213" fg:w="4"/><text x="17.3722%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.2830%" y="437" width="0.1608%" height="15" fill="rgb(252,35,15)" fg:x="215" fg:w="2"/><text x="17.5330%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.5241%" y="437" width="0.0804%" height="15" fill="rgb(248,181,18)" fg:x="218" fg:w="1"/><text x="17.7741%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.5241%" y="421" width="0.0804%" height="15" fill="rgb(233,39,42)" fg:x="218" fg:w="1"/><text x="17.7741%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5241%" y="405" width="0.0804%" height="15" fill="rgb(238,110,33)" fg:x="218" fg:w="1"/><text x="17.7741%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5241%" y="389" width="0.0804%" height="15" fill="rgb(233,195,10)" fg:x="218" fg:w="1"/><text x="17.7741%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="17.4437%" y="469" width="0.2412%" height="15" fill="rgb(254,105,3)" fg:x="217" fg:w="3"/><text x="17.6937%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.5241%" y="453" width="0.1608%" height="15" fill="rgb(221,225,9)" fg:x="218" fg:w="2"/><text x="17.7741%" y="463.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.6045%" y="437" width="0.0804%" height="15" fill="rgb(224,227,45)" fg:x="219" fg:w="1"/><text x="17.8545%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.6045%" y="421" width="0.0804%" height="15" fill="rgb(229,198,43)" fg:x="219" fg:w="1"/><text x="17.8545%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="453" width="0.0804%" height="15" fill="rgb(206,209,35)" fg:x="220" fg:w="1"/><text x="17.9349%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6849%" y="437" width="0.0804%" height="15" fill="rgb(245,195,53)" fg:x="220" fg:w="1"/><text x="17.9349%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="17.4437%" y="485" width="0.4019%" height="15" fill="rgb(240,92,26)" fg:x="217" fg:w="5"/><text x="17.6937%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.6849%" y="469" width="0.1608%" height="15" fill="rgb(207,40,23)" fg:x="220" fg:w="2"/><text x="17.9349%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="17.7653%" y="453" width="0.0804%" height="15" fill="rgb(223,111,35)" fg:x="221" fg:w="1"/><text x="18.0153%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.7653%" y="437" width="0.0804%" height="15" fill="rgb(229,147,28)" fg:x="221" fg:w="1"/><text x="18.0153%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.7653%" y="421" width="0.0804%" height="15" fill="rgb(211,29,28)" fg:x="221" fg:w="1"/><text x="18.0153%" y="431.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.8457%" y="437" width="0.0804%" height="15" fill="rgb(228,72,33)" fg:x="222" fg:w="1"/><text x="18.0957%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.8457%" y="421" width="0.0804%" height="15" fill="rgb(205,214,31)" fg:x="222" fg:w="1"/><text x="18.0957%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8457%" y="405" width="0.0804%" height="15" fill="rgb(224,111,15)" fg:x="222" fg:w="1"/><text x="18.0957%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.8457%" y="389" width="0.0804%" height="15" fill="rgb(253,21,26)" fg:x="222" fg:w="1"/><text x="18.0957%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.8457%" y="373" width="0.0804%" height="15" fill="rgb(245,139,43)" fg:x="222" fg:w="1"/><text x="18.0957%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="17.8457%" y="469" width="0.1608%" height="15" fill="rgb(252,170,7)" fg:x="222" fg:w="2"/><text x="18.0957%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="17.8457%" y="453" width="0.1608%" height="15" fill="rgb(231,118,14)" fg:x="222" fg:w="2"/><text x="18.0957%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.9260%" y="437" width="0.0804%" height="15" fill="rgb(238,83,0)" fg:x="223" fg:w="1"/><text x="18.1760%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.9260%" y="421" width="0.0804%" height="15" fill="rgb(221,39,39)" fg:x="223" fg:w="1"/><text x="18.1760%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9260%" y="405" width="0.0804%" height="15" fill="rgb(222,119,46)" fg:x="223" fg:w="1"/><text x="18.1760%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.9260%" y="389" width="0.0804%" height="15" fill="rgb(222,165,49)" fg:x="223" fg:w="1"/><text x="18.1760%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.9260%" y="373" width="0.0804%" height="15" fill="rgb(219,113,52)" fg:x="223" fg:w="1"/><text x="18.1760%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="17.9260%" y="357" width="0.0804%" height="15" fill="rgb(214,7,15)" fg:x="223" fg:w="1"/><text x="18.1760%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.9260%" y="341" width="0.0804%" height="15" fill="rgb(235,32,4)" fg:x="223" fg:w="1"/><text x="18.1760%" y="351.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.0064%" y="469" width="0.0804%" height="15" fill="rgb(238,90,54)" fg:x="224" fg:w="1"/><text x="18.2564%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0064%" y="453" width="0.0804%" height="15" fill="rgb(213,208,19)" fg:x="224" fg:w="1"/><text x="18.2564%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="17.8457%" y="485" width="0.3215%" height="15" fill="rgb(233,156,4)" fg:x="222" fg:w="4"/><text x="18.0957%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="18.0868%" y="469" width="0.0804%" height="15" fill="rgb(207,194,5)" fg:x="225" fg:w="1"/><text x="18.3368%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.0868%" y="453" width="0.0804%" height="15" fill="rgb(206,111,30)" fg:x="225" fg:w="1"/><text x="18.3368%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0868%" y="437" width="0.0804%" height="15" fill="rgb(243,70,54)" fg:x="225" fg:w="1"/><text x="18.3368%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0868%" y="421" width="0.0804%" height="15" fill="rgb(242,28,8)" fg:x="225" fg:w="1"/><text x="18.3368%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.0868%" y="405" width="0.0804%" height="15" fill="rgb(219,106,18)" fg:x="225" fg:w="1"/><text x="18.3368%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1672%" y="437" width="0.0804%" height="15" fill="rgb(244,222,10)" fg:x="226" fg:w="1"/><text x="18.4172%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.1672%" y="421" width="0.0804%" height="15" fill="rgb(236,179,52)" fg:x="226" fg:w="1"/><text x="18.4172%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2476%" y="373" width="0.0804%" height="15" fill="rgb(213,23,39)" fg:x="227" fg:w="1"/><text x="18.4976%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2476%" y="357" width="0.0804%" height="15" fill="rgb(238,48,10)" fg:x="227" fg:w="1"/><text x="18.4976%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.1672%" y="469" width="0.2412%" height="15" fill="rgb(251,196,23)" fg:x="226" fg:w="3"/><text x="18.4172%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.1672%" y="453" width="0.2412%" height="15" fill="rgb(250,152,24)" fg:x="226" fg:w="3"/><text x="18.4172%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.2476%" y="437" width="0.1608%" height="15" fill="rgb(209,150,17)" fg:x="227" fg:w="2"/><text x="18.4976%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2476%" y="421" width="0.1608%" height="15" fill="rgb(234,202,34)" fg:x="227" fg:w="2"/><text x="18.4976%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.2476%" y="405" width="0.1608%" height="15" fill="rgb(253,148,53)" fg:x="227" fg:w="2"/><text x="18.4976%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.2476%" y="389" width="0.1608%" height="15" fill="rgb(218,129,16)" fg:x="227" fg:w="2"/><text x="18.4976%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3280%" y="373" width="0.0804%" height="15" fill="rgb(216,85,19)" fg:x="228" fg:w="1"/><text x="18.5780%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3280%" y="357" width="0.0804%" height="15" fill="rgb(235,228,7)" fg:x="228" fg:w="1"/><text x="18.5780%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="18.1672%" y="485" width="0.3215%" height="15" fill="rgb(245,175,0)" fg:x="226" fg:w="4"/><text x="18.4172%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.4084%" y="469" width="0.0804%" height="15" fill="rgb(208,168,36)" fg:x="229" fg:w="1"/><text x="18.6584%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.4084%" y="453" width="0.0804%" height="15" fill="rgb(246,171,24)" fg:x="229" fg:w="1"/><text x="18.6584%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4084%" y="437" width="0.0804%" height="15" fill="rgb(215,142,24)" fg:x="229" fg:w="1"/><text x="18.6584%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4084%" y="421" width="0.0804%" height="15" fill="rgb(250,187,7)" fg:x="229" fg:w="1"/><text x="18.6584%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4084%" y="405" width="0.0804%" height="15" fill="rgb(228,66,33)" fg:x="229" fg:w="1"/><text x="18.6584%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4084%" y="389" width="0.0804%" height="15" fill="rgb(234,215,21)" fg:x="229" fg:w="1"/><text x="18.6584%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4084%" y="373" width="0.0804%" height="15" fill="rgb(222,191,20)" fg:x="229" fg:w="1"/><text x="18.6584%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.4887%" y="453" width="0.0804%" height="15" fill="rgb(245,79,54)" fg:x="230" fg:w="1"/><text x="18.7387%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.4887%" y="437" width="0.0804%" height="15" fill="rgb(240,10,37)" fg:x="230" fg:w="1"/><text x="18.7387%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.4887%" y="421" width="0.0804%" height="15" fill="rgb(214,192,32)" fg:x="230" fg:w="1"/><text x="18.7387%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4887%" y="405" width="0.0804%" height="15" fill="rgb(209,36,54)" fg:x="230" fg:w="1"/><text x="18.7387%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4887%" y="389" width="0.0804%" height="15" fill="rgb(220,10,11)" fg:x="230" fg:w="1"/><text x="18.7387%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.4887%" y="373" width="0.0804%" height="15" fill="rgb(221,106,17)" fg:x="230" fg:w="1"/><text x="18.7387%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.4887%" y="357" width="0.0804%" height="15" fill="rgb(251,142,44)" fg:x="230" fg:w="1"/><text x="18.7387%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.4887%" y="341" width="0.0804%" height="15" fill="rgb(238,13,15)" fg:x="230" fg:w="1"/><text x="18.7387%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4887%" y="325" width="0.0804%" height="15" fill="rgb(208,107,27)" fg:x="230" fg:w="1"/><text x="18.7387%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.4887%" y="309" width="0.0804%" height="15" fill="rgb(205,136,37)" fg:x="230" fg:w="1"/><text x="18.7387%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.4887%" y="293" width="0.0804%" height="15" fill="rgb(250,205,27)" fg:x="230" fg:w="1"/><text x="18.7387%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.4887%" y="277" width="0.0804%" height="15" fill="rgb(210,80,43)" fg:x="230" fg:w="1"/><text x="18.7387%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.4887%" y="261" width="0.0804%" height="15" fill="rgb(247,160,36)" fg:x="230" fg:w="1"/><text x="18.7387%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.4887%" y="245" width="0.0804%" height="15" fill="rgb(234,13,49)" fg:x="230" fg:w="1"/><text x="18.7387%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4887%" y="229" width="0.0804%" height="15" fill="rgb(234,122,0)" fg:x="230" fg:w="1"/><text x="18.7387%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5691%" y="421" width="0.0804%" height="15" fill="rgb(207,146,38)" fg:x="231" fg:w="1"/><text x="18.8191%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (20 samples, 1.61%)</title><rect x="17.1222%" y="501" width="1.6077%" height="15" fill="rgb(207,177,25)" fg:x="213" fg:w="20"/><text x="17.3722%" y="511.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="18.4887%" y="485" width="0.2412%" height="15" fill="rgb(211,178,42)" fg:x="230" fg:w="3"/><text x="18.7387%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.4887%" y="469" width="0.2412%" height="15" fill="rgb(230,69,54)" fg:x="230" fg:w="3"/><text x="18.7387%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="18.5691%" y="453" width="0.1608%" height="15" fill="rgb(214,135,41)" fg:x="231" fg:w="2"/><text x="18.8191%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.5691%" y="437" width="0.1608%" height="15" fill="rgb(237,67,25)" fg:x="231" fg:w="2"/><text x="18.8191%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6495%" y="421" width="0.0804%" height="15" fill="rgb(222,189,50)" fg:x="232" fg:w="1"/><text x="18.8995%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6495%" y="405" width="0.0804%" height="15" fill="rgb(245,148,34)" fg:x="232" fg:w="1"/><text x="18.8995%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.6495%" y="389" width="0.0804%" height="15" fill="rgb(222,29,6)" fg:x="232" fg:w="1"/><text x="18.8995%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6495%" y="373" width="0.0804%" height="15" fill="rgb(221,189,43)" fg:x="232" fg:w="1"/><text x="18.8995%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6495%" y="357" width="0.0804%" height="15" fill="rgb(207,36,27)" fg:x="232" fg:w="1"/><text x="18.8995%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6495%" y="341" width="0.0804%" height="15" fill="rgb(217,90,24)" fg:x="232" fg:w="1"/><text x="18.8995%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.7299%" y="469" width="0.0804%" height="15" fill="rgb(224,66,35)" fg:x="233" fg:w="1"/><text x="18.9799%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.7299%" y="453" width="0.0804%" height="15" fill="rgb(221,13,50)" fg:x="233" fg:w="1"/><text x="18.9799%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (22 samples, 1.77%)</title><rect x="17.1222%" y="517" width="1.7685%" height="15" fill="rgb(236,68,49)" fg:x="213" fg:w="22"/><text x="17.3722%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.7299%" y="501" width="0.1608%" height="15" fill="rgb(229,146,28)" fg:x="233" fg:w="2"/><text x="18.9799%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.7299%" y="485" width="0.1608%" height="15" fill="rgb(225,31,38)" fg:x="233" fg:w="2"/><text x="18.9799%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.8103%" y="469" width="0.0804%" height="15" fill="rgb(250,208,3)" fg:x="234" fg:w="1"/><text x="19.0603%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.8103%" y="453" width="0.0804%" height="15" fill="rgb(246,54,23)" fg:x="234" fg:w="1"/><text x="19.0603%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.8103%" y="437" width="0.0804%" height="15" fill="rgb(243,76,11)" fg:x="234" fg:w="1"/><text x="19.0603%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.8103%" y="421" width="0.0804%" height="15" fill="rgb(245,21,50)" fg:x="234" fg:w="1"/><text x="19.0603%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.8103%" y="405" width="0.0804%" height="15" fill="rgb(228,9,43)" fg:x="234" fg:w="1"/><text x="19.0603%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.8103%" y="389" width="0.0804%" height="15" fill="rgb(208,100,47)" fg:x="234" fg:w="1"/><text x="19.0603%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="18.9711%" y="453" width="0.0804%" height="15" fill="rgb(232,26,8)" fg:x="236" fg:w="1"/><text x="19.2211%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9711%" y="437" width="0.0804%" height="15" fill="rgb(216,166,38)" fg:x="236" fg:w="1"/><text x="19.2211%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.9711%" y="469" width="0.1608%" height="15" fill="rgb(251,202,51)" fg:x="236" fg:w="2"/><text x="19.2211%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.0514%" y="453" width="0.0804%" height="15" fill="rgb(254,216,34)" fg:x="237" fg:w="1"/><text x="19.3014%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0514%" y="437" width="0.0804%" height="15" fill="rgb(251,32,27)" fg:x="237" fg:w="1"/><text x="19.3014%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0514%" y="421" width="0.0804%" height="15" fill="rgb(208,127,28)" fg:x="237" fg:w="1"/><text x="19.3014%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.0514%" y="405" width="0.0804%" height="15" fill="rgb(224,137,22)" fg:x="237" fg:w="1"/><text x="19.3014%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0514%" y="389" width="0.0804%" height="15" fill="rgb(254,70,32)" fg:x="237" fg:w="1"/><text x="19.3014%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="18.9711%" y="501" width="0.2412%" height="15" fill="rgb(229,75,37)" fg:x="236" fg:w="3"/><text x="19.2211%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="18.9711%" y="485" width="0.2412%" height="15" fill="rgb(252,64,23)" fg:x="236" fg:w="3"/><text x="19.2211%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="19.1318%" y="469" width="0.0804%" height="15" fill="rgb(232,162,48)" fg:x="238" fg:w="1"/><text x="19.3818%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.1318%" y="453" width="0.0804%" height="15" fill="rgb(246,160,12)" fg:x="238" fg:w="1"/><text x="19.3818%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1318%" y="437" width="0.0804%" height="15" fill="rgb(247,166,0)" fg:x="238" fg:w="1"/><text x="19.3818%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1318%" y="421" width="0.0804%" height="15" fill="rgb(249,219,21)" fg:x="238" fg:w="1"/><text x="19.3818%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.1318%" y="405" width="0.0804%" height="15" fill="rgb(205,209,3)" fg:x="238" fg:w="1"/><text x="19.3818%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1318%" y="389" width="0.0804%" height="15" fill="rgb(243,44,1)" fg:x="238" fg:w="1"/><text x="19.3818%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.1318%" y="373" width="0.0804%" height="15" fill="rgb(206,159,16)" fg:x="238" fg:w="1"/><text x="19.3818%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.1318%" y="357" width="0.0804%" height="15" fill="rgb(244,77,30)" fg:x="238" fg:w="1"/><text x="19.3818%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.1318%" y="341" width="0.0804%" height="15" fill="rgb(218,69,12)" fg:x="238" fg:w="1"/><text x="19.3818%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (30 samples, 2.41%)</title><rect x="16.9614%" y="581" width="2.4116%" height="15" fill="rgb(212,87,7)" fg:x="211" fg:w="30"/><text x="17.2114%" y="591.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 2.41%)</title><rect x="16.9614%" y="565" width="2.4116%" height="15" fill="rgb(245,114,25)" fg:x="211" fg:w="30"/><text x="17.2114%" y="575.50">&lt;a..</text></g><g><title>plugins_core::build::QuickThing::make (30 samples, 2.41%)</title><rect x="16.9614%" y="549" width="2.4116%" height="15" fill="rgb(210,61,42)" fg:x="211" fg:w="30"/><text x="17.2114%" y="559.50">pl..</text></g><g><title>plugins_core::build::Build::leads_to (28 samples, 2.25%)</title><rect x="17.1222%" y="533" width="2.2508%" height="15" fill="rgb(211,52,33)" fg:x="213" fg:w="28"/><text x="17.3722%" y="543.50">p..</text></g><g><title>plugins_core::tools::leads_to (6 samples, 0.48%)</title><rect x="18.8907%" y="517" width="0.4823%" height="15" fill="rgb(234,58,33)" fg:x="235" fg:w="6"/><text x="19.1407%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.2122%" y="501" width="0.1608%" height="15" fill="rgb(220,115,36)" fg:x="239" fg:w="2"/><text x="19.4622%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="19.2926%" y="485" width="0.0804%" height="15" fill="rgb(243,153,54)" fg:x="240" fg:w="1"/><text x="19.5426%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="19.2926%" y="469" width="0.0804%" height="15" fill="rgb(251,47,18)" fg:x="240" fg:w="1"/><text x="19.5426%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::entity::Entity&gt;&gt; (1 samples, 0.08%)</title><rect x="19.3730%" y="581" width="0.0804%" height="15" fill="rgb(242,102,42)" fg:x="241" fg:w="1"/><text x="19.6230%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4534%" y="469" width="0.0804%" height="15" fill="rgb(234,31,38)" fg:x="242" fg:w="1"/><text x="19.7034%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.4534%" y="453" width="0.0804%" height="15" fill="rgb(221,117,51)" fg:x="242" fg:w="1"/><text x="19.7034%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.4534%" y="437" width="0.0804%" height="15" fill="rgb(212,20,18)" fg:x="242" fg:w="1"/><text x="19.7034%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.4534%" y="421" width="0.0804%" height="15" fill="rgb(245,133,36)" fg:x="242" fg:w="1"/><text x="19.7034%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.4534%" y="405" width="0.0804%" height="15" fill="rgb(212,6,19)" fg:x="242" fg:w="1"/><text x="19.7034%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.4534%" y="389" width="0.0804%" height="15" fill="rgb(218,1,36)" fg:x="242" fg:w="1"/><text x="19.7034%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4534%" y="373" width="0.0804%" height="15" fill="rgb(246,84,54)" fg:x="242" fg:w="1"/><text x="19.7034%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="19.4534%" y="565" width="0.1608%" height="15" fill="rgb(242,110,6)" fg:x="242" fg:w="2"/><text x="19.7034%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.4534%" y="549" width="0.1608%" height="15" fill="rgb(214,47,5)" fg:x="242" fg:w="2"/><text x="19.7034%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="19.4534%" y="533" width="0.1608%" height="15" fill="rgb(218,159,25)" fg:x="242" fg:w="2"/><text x="19.7034%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="19.4534%" y="517" width="0.1608%" height="15" fill="rgb(215,211,28)" fg:x="242" fg:w="2"/><text x="19.7034%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="19.4534%" y="501" width="0.1608%" height="15" fill="rgb(238,59,32)" fg:x="242" fg:w="2"/><text x="19.7034%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="19.4534%" y="485" width="0.1608%" height="15" fill="rgb(226,82,3)" fg:x="242" fg:w="2"/><text x="19.7034%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5338%" y="469" width="0.0804%" height="15" fill="rgb(240,164,32)" fg:x="243" fg:w="1"/><text x="19.7838%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.5338%" y="453" width="0.0804%" height="15" fill="rgb(232,46,7)" fg:x="243" fg:w="1"/><text x="19.7838%" y="463.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="19.6141%" y="549" width="0.0804%" height="15" fill="rgb(229,129,53)" fg:x="244" fg:w="1"/><text x="19.8641%" y="559.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="19.6141%" y="533" width="0.0804%" height="15" fill="rgb(234,188,29)" fg:x="244" fg:w="1"/><text x="19.8641%" y="543.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="19.6141%" y="517" width="0.0804%" height="15" fill="rgb(246,141,4)" fg:x="244" fg:w="1"/><text x="19.8641%" y="527.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="19.6141%" y="501" width="0.0804%" height="15" fill="rgb(229,23,39)" fg:x="244" fg:w="1"/><text x="19.8641%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="19.6141%" y="485" width="0.0804%" height="15" fill="rgb(206,12,3)" fg:x="244" fg:w="1"/><text x="19.8641%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="19.6141%" y="469" width="0.0804%" height="15" fill="rgb(252,226,20)" fg:x="244" fg:w="1"/><text x="19.8641%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="19.6141%" y="453" width="0.0804%" height="15" fill="rgb(216,123,35)" fg:x="244" fg:w="1"/><text x="19.8641%" y="463.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="19.6141%" y="437" width="0.0804%" height="15" fill="rgb(212,68,40)" fg:x="244" fg:w="1"/><text x="19.8641%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.7749%" y="517" width="0.0804%" height="15" fill="rgb(254,125,32)" fg:x="246" fg:w="1"/><text x="20.0249%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.7749%" y="501" width="0.0804%" height="15" fill="rgb(253,97,22)" fg:x="246" fg:w="1"/><text x="20.0249%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.7749%" y="485" width="0.0804%" height="15" fill="rgb(241,101,14)" fg:x="246" fg:w="1"/><text x="20.0249%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.7749%" y="469" width="0.0804%" height="15" fill="rgb(238,103,29)" fg:x="246" fg:w="1"/><text x="20.0249%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.8553%" y="517" width="0.0804%" height="15" fill="rgb(233,195,47)" fg:x="247" fg:w="1"/><text x="20.1053%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="19.8553%" y="501" width="0.0804%" height="15" fill="rgb(246,218,30)" fg:x="247" fg:w="1"/><text x="20.1053%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="19.8553%" y="485" width="0.0804%" height="15" fill="rgb(219,145,47)" fg:x="247" fg:w="1"/><text x="20.1053%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="19.8553%" y="469" width="0.0804%" height="15" fill="rgb(243,12,26)" fg:x="247" fg:w="1"/><text x="20.1053%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.8553%" y="453" width="0.0804%" height="15" fill="rgb(214,87,16)" fg:x="247" fg:w="1"/><text x="20.1053%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.8553%" y="437" width="0.0804%" height="15" fill="rgb(208,99,42)" fg:x="247" fg:w="1"/><text x="20.1053%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.1768%" y="437" width="0.0804%" height="15" fill="rgb(253,99,2)" fg:x="251" fg:w="1"/><text x="20.4268%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1768%" y="421" width="0.0804%" height="15" fill="rgb(220,168,23)" fg:x="251" fg:w="1"/><text x="20.4268%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="20.0161%" y="453" width="0.4823%" height="15" fill="rgb(242,38,24)" fg:x="249" fg:w="6"/><text x="20.2661%" y="463.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.2572%" y="437" width="0.2412%" height="15" fill="rgb(225,182,9)" fg:x="252" fg:w="3"/><text x="20.5072%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4180%" y="421" width="0.0804%" height="15" fill="rgb(243,178,37)" fg:x="254" fg:w="1"/><text x="20.6680%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="20.5788%" y="437" width="0.4019%" height="15" fill="rgb(232,139,19)" fg:x="256" fg:w="5"/><text x="20.8288%" y="447.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.6592%" y="421" width="0.3215%" height="15" fill="rgb(225,201,24)" fg:x="257" fg:w="4"/><text x="20.9092%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.7395%" y="405" width="0.2412%" height="15" fill="rgb(221,47,46)" fg:x="258" fg:w="3"/><text x="20.9895%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="20.7395%" y="389" width="0.2412%" height="15" fill="rgb(249,23,13)" fg:x="258" fg:w="3"/><text x="20.9895%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.9003%" y="373" width="0.0804%" height="15" fill="rgb(219,9,5)" fg:x="260" fg:w="1"/><text x="21.1503%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.9003%" y="357" width="0.0804%" height="15" fill="rgb(254,171,16)" fg:x="260" fg:w="1"/><text x="21.1503%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.9003%" y="341" width="0.0804%" height="15" fill="rgb(230,171,20)" fg:x="260" fg:w="1"/><text x="21.1503%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="20.9807%" y="389" width="0.4823%" height="15" fill="rgb(210,71,41)" fg:x="261" fg:w="6"/><text x="21.2307%" y="399.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="20.9807%" y="373" width="0.4823%" height="15" fill="rgb(206,173,20)" fg:x="261" fg:w="6"/><text x="21.2307%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="20.9807%" y="357" width="0.4823%" height="15" fill="rgb(233,88,34)" fg:x="261" fg:w="6"/><text x="21.2307%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="21.1415%" y="341" width="0.3215%" height="15" fill="rgb(223,209,46)" fg:x="263" fg:w="4"/><text x="21.3915%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="21.3023%" y="325" width="0.1608%" height="15" fill="rgb(250,43,18)" fg:x="265" fg:w="2"/><text x="21.5523%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="21.3023%" y="309" width="0.1608%" height="15" fill="rgb(208,13,10)" fg:x="265" fg:w="2"/><text x="21.5523%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="21.3023%" y="293" width="0.1608%" height="15" fill="rgb(212,200,36)" fg:x="265" fg:w="2"/><text x="21.5523%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="20.9807%" y="421" width="0.5627%" height="15" fill="rgb(225,90,30)" fg:x="261" fg:w="7"/><text x="21.2307%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="20.9807%" y="405" width="0.5627%" height="15" fill="rgb(236,182,39)" fg:x="261" fg:w="7"/><text x="21.2307%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4630%" y="389" width="0.0804%" height="15" fill="rgb(212,144,35)" fg:x="267" fg:w="1"/><text x="21.7130%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="21.5434%" y="421" width="0.3215%" height="15" fill="rgb(228,63,44)" fg:x="268" fg:w="4"/><text x="21.7934%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.6238%" y="405" width="0.2412%" height="15" fill="rgb(228,109,6)" fg:x="269" fg:w="3"/><text x="21.8738%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="21.6238%" y="389" width="0.2412%" height="15" fill="rgb(238,117,24)" fg:x="269" fg:w="3"/><text x="21.8738%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="21.6238%" y="373" width="0.2412%" height="15" fill="rgb(242,26,26)" fg:x="269" fg:w="3"/><text x="21.8738%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="21.7042%" y="357" width="0.1608%" height="15" fill="rgb(221,92,48)" fg:x="270" fg:w="2"/><text x="21.9542%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="21.7042%" y="341" width="0.1608%" height="15" fill="rgb(209,209,32)" fg:x="270" fg:w="2"/><text x="21.9542%" y="351.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="21.7042%" y="325" width="0.1608%" height="15" fill="rgb(221,70,22)" fg:x="270" fg:w="2"/><text x="21.9542%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.9453%" y="405" width="0.0804%" height="15" fill="rgb(248,145,5)" fg:x="273" fg:w="1"/><text x="22.1953%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="22.0257%" y="405" width="0.4823%" height="15" fill="rgb(226,116,26)" fg:x="274" fg:w="6"/><text x="22.2757%" y="415.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="22.0257%" y="389" width="0.4823%" height="15" fill="rgb(244,5,17)" fg:x="274" fg:w="6"/><text x="22.2757%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="22.3473%" y="373" width="0.1608%" height="15" fill="rgb(252,159,33)" fg:x="278" fg:w="2"/><text x="22.5973%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.4277%" y="357" width="0.0804%" height="15" fill="rgb(206,71,0)" fg:x="279" fg:w="1"/><text x="22.6777%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="22.5080%" y="389" width="0.0804%" height="15" fill="rgb(233,118,54)" fg:x="280" fg:w="1"/><text x="22.7580%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="22.5080%" y="373" width="0.0804%" height="15" fill="rgb(234,83,48)" fg:x="280" fg:w="1"/><text x="22.7580%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.5080%" y="357" width="0.0804%" height="15" fill="rgb(228,3,54)" fg:x="280" fg:w="1"/><text x="22.7580%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.5080%" y="341" width="0.0804%" height="15" fill="rgb(226,155,13)" fg:x="280" fg:w="1"/><text x="22.7580%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="22.5080%" y="405" width="0.1608%" height="15" fill="rgb(241,28,37)" fg:x="280" fg:w="2"/><text x="22.7580%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.5884%" y="389" width="0.0804%" height="15" fill="rgb(233,93,10)" fg:x="281" fg:w="1"/><text x="22.8384%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.5884%" y="373" width="0.0804%" height="15" fill="rgb(225,113,19)" fg:x="281" fg:w="1"/><text x="22.8384%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.5884%" y="357" width="0.0804%" height="15" fill="rgb(241,2,18)" fg:x="281" fg:w="1"/><text x="22.8384%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="20.9807%" y="437" width="1.7685%" height="15" fill="rgb(228,207,21)" fg:x="261" fg:w="22"/><text x="21.2307%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="21.8650%" y="421" width="0.8842%" height="15" fill="rgb(213,211,35)" fg:x="272" fg:w="11"/><text x="22.1150%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.6688%" y="405" width="0.0804%" height="15" fill="rgb(209,83,10)" fg:x="282" fg:w="1"/><text x="22.9188%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.89%)</title><rect x="20.0161%" y="469" width="2.8939%" height="15" fill="rgb(209,164,1)" fg:x="249" fg:w="36"/><text x="20.2661%" y="479.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.41%)</title><rect x="20.4984%" y="453" width="2.4116%" height="15" fill="rgb(213,184,43)" fg:x="255" fg:w="30"/><text x="20.7484%" y="463.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="22.7492%" y="437" width="0.1608%" height="15" fill="rgb(231,61,34)" fg:x="283" fg:w="2"/><text x="22.9992%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.8296%" y="421" width="0.0804%" height="15" fill="rgb(235,75,3)" fg:x="284" fg:w="1"/><text x="23.0796%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.8296%" y="405" width="0.0804%" height="15" fill="rgb(220,106,47)" fg:x="284" fg:w="1"/><text x="23.0796%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.8296%" y="389" width="0.0804%" height="15" fill="rgb(210,196,33)" fg:x="284" fg:w="1"/><text x="23.0796%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.8296%" y="373" width="0.0804%" height="15" fill="rgb(229,154,42)" fg:x="284" fg:w="1"/><text x="23.0796%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.8296%" y="357" width="0.0804%" height="15" fill="rgb(228,114,26)" fg:x="284" fg:w="1"/><text x="23.0796%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="22.9100%" y="421" width="0.2412%" height="15" fill="rgb(208,144,1)" fg:x="285" fg:w="3"/><text x="23.1600%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.1511%" y="405" width="0.1608%" height="15" fill="rgb(239,112,37)" fg:x="288" fg:w="2"/><text x="23.4011%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.9100%" y="469" width="0.4823%" height="15" fill="rgb(210,96,50)" fg:x="285" fg:w="6"/><text x="23.1600%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="22.9100%" y="453" width="0.4823%" height="15" fill="rgb(222,178,2)" fg:x="285" fg:w="6"/><text x="23.1600%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.9100%" y="437" width="0.4823%" height="15" fill="rgb(226,74,18)" fg:x="285" fg:w="6"/><text x="23.1600%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.1511%" y="421" width="0.2412%" height="15" fill="rgb(225,67,54)" fg:x="288" fg:w="3"/><text x="23.4011%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3119%" y="405" width="0.0804%" height="15" fill="rgb(251,92,32)" fg:x="290" fg:w="1"/><text x="23.5619%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3119%" y="389" width="0.0804%" height="15" fill="rgb(228,149,22)" fg:x="290" fg:w="1"/><text x="23.5619%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3119%" y="373" width="0.0804%" height="15" fill="rgb(243,54,13)" fg:x="290" fg:w="1"/><text x="23.5619%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="23.3923%" y="453" width="0.0804%" height="15" fill="rgb(243,180,28)" fg:x="291" fg:w="1"/><text x="23.6423%" y="463.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="23.3923%" y="437" width="0.0804%" height="15" fill="rgb(208,167,24)" fg:x="291" fg:w="1"/><text x="23.6423%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="23.3923%" y="421" width="0.0804%" height="15" fill="rgb(245,73,45)" fg:x="291" fg:w="1"/><text x="23.6423%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.3923%" y="405" width="0.0804%" height="15" fill="rgb(237,203,48)" fg:x="291" fg:w="1"/><text x="23.6423%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3923%" y="389" width="0.0804%" height="15" fill="rgb(211,197,16)" fg:x="291" fg:w="1"/><text x="23.6423%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="23.4727%" y="421" width="0.2412%" height="15" fill="rgb(243,99,51)" fg:x="292" fg:w="3"/><text x="23.7227%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7138%" y="421" width="0.0804%" height="15" fill="rgb(215,123,29)" fg:x="295" fg:w="1"/><text x="23.9638%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7138%" y="405" width="0.0804%" height="15" fill="rgb(239,186,37)" fg:x="295" fg:w="1"/><text x="23.9638%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="23.7942%" y="421" width="0.1608%" height="15" fill="rgb(252,136,39)" fg:x="296" fg:w="2"/><text x="24.0442%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8746%" y="405" width="0.0804%" height="15" fill="rgb(223,213,32)" fg:x="297" fg:w="1"/><text x="24.1246%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9550%" y="421" width="0.0804%" height="15" fill="rgb(233,115,5)" fg:x="298" fg:w="1"/><text x="24.2050%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.9550%" y="405" width="0.0804%" height="15" fill="rgb(207,226,44)" fg:x="298" fg:w="1"/><text x="24.2050%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9550%" y="389" width="0.0804%" height="15" fill="rgb(208,126,0)" fg:x="298" fg:w="1"/><text x="24.2050%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1158%" y="373" width="0.0804%" height="15" fill="rgb(244,66,21)" fg:x="300" fg:w="1"/><text x="24.3658%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1158%" y="357" width="0.0804%" height="15" fill="rgb(222,97,12)" fg:x="300" fg:w="1"/><text x="24.3658%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1158%" y="341" width="0.0804%" height="15" fill="rgb(219,213,19)" fg:x="300" fg:w="1"/><text x="24.3658%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.1961%" y="373" width="0.0804%" height="15" fill="rgb(252,169,30)" fg:x="301" fg:w="1"/><text x="24.4461%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1961%" y="357" width="0.0804%" height="15" fill="rgb(206,32,51)" fg:x="301" fg:w="1"/><text x="24.4461%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="24.1961%" y="341" width="0.0804%" height="15" fill="rgb(250,172,42)" fg:x="301" fg:w="1"/><text x="24.4461%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1961%" y="325" width="0.0804%" height="15" fill="rgb(209,34,43)" fg:x="301" fg:w="1"/><text x="24.4461%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1961%" y="309" width="0.0804%" height="15" fill="rgb(223,11,35)" fg:x="301" fg:w="1"/><text x="24.4461%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.4373%" y="341" width="0.1608%" height="15" fill="rgb(251,219,26)" fg:x="304" fg:w="2"/><text x="24.6873%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="24.6785%" y="325" width="0.3215%" height="15" fill="rgb(231,119,3)" fg:x="307" fg:w="4"/><text x="24.9285%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.7588%" y="309" width="0.2412%" height="15" fill="rgb(216,97,11)" fg:x="308" fg:w="3"/><text x="25.0088%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.8392%" y="293" width="0.1608%" height="15" fill="rgb(223,59,9)" fg:x="309" fg:w="2"/><text x="25.0892%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.8392%" y="277" width="0.1608%" height="15" fill="rgb(233,93,31)" fg:x="309" fg:w="2"/><text x="25.0892%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="25.0000%" y="325" width="0.0804%" height="15" fill="rgb(239,81,33)" fg:x="311" fg:w="1"/><text x="25.2500%" y="335.50"></text></g><g><title>engine::session::Session::flush (71 samples, 5.71%)</title><rect x="19.4534%" y="581" width="5.7074%" height="15" fill="rgb(213,120,34)" fg:x="242" fg:w="71"/><text x="19.7034%" y="591.50">engine:..</text></g><g><title>engine::session::Session::save_changes (69 samples, 5.55%)</title><rect x="19.6141%" y="565" width="5.5466%" height="15" fill="rgb(243,49,53)" fg:x="244" fg:w="69"/><text x="19.8641%" y="575.50">engine:..</text></g><g><title>engine::session::state::State::close (68 samples, 5.47%)</title><rect x="19.6945%" y="549" width="5.4662%" height="15" fill="rgb(247,216,33)" fg:x="245" fg:w="68"/><text x="19.9445%" y="559.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.47%)</title><rect x="19.6945%" y="533" width="5.4662%" height="15" fill="rgb(226,26,14)" fg:x="245" fg:w="68"/><text x="19.9445%" y="543.50">engine:..</text></g><g><title>core::iter::adapters::try_process (65 samples, 5.23%)</title><rect x="19.9357%" y="517" width="5.2251%" height="15" fill="rgb(215,49,53)" fg:x="248" fg:w="65"/><text x="20.1857%" y="527.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 5.23%)</title><rect x="19.9357%" y="501" width="5.2251%" height="15" fill="rgb(245,162,40)" fg:x="248" fg:w="65"/><text x="20.1857%" y="511.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (65 samples, 5.23%)</title><rect x="19.9357%" y="485" width="5.2251%" height="15" fill="rgb(229,68,17)" fg:x="248" fg:w="65"/><text x="20.1857%" y="495.50">engine..</text></g><g><title>kernel::model::any_entity_changes (22 samples, 1.77%)</title><rect x="23.3923%" y="469" width="1.7685%" height="15" fill="rgb(213,182,10)" fg:x="291" fg:w="22"/><text x="23.6423%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.69%)</title><rect x="23.4727%" y="453" width="1.6881%" height="15" fill="rgb(245,125,30)" fg:x="292" fg:w="21"/><text x="23.7227%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.69%)</title><rect x="23.4727%" y="437" width="1.6881%" height="15" fill="rgb(232,202,2)" fg:x="292" fg:w="21"/><text x="23.7227%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.13%)</title><rect x="24.0354%" y="421" width="1.1254%" height="15" fill="rgb(237,140,51)" fg:x="299" fg:w="14"/><text x="24.2854%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.13%)</title><rect x="24.0354%" y="405" width="1.1254%" height="15" fill="rgb(236,157,25)" fg:x="299" fg:w="14"/><text x="24.2854%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="24.0354%" y="389" width="1.1254%" height="15" fill="rgb(219,209,0)" fg:x="299" fg:w="14"/><text x="24.2854%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="24.2765%" y="373" width="0.8842%" height="15" fill="rgb(240,116,54)" fg:x="302" fg:w="11"/><text x="24.5265%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="24.2765%" y="357" width="0.8842%" height="15" fill="rgb(216,10,36)" fg:x="302" fg:w="11"/><text x="24.5265%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="24.5981%" y="341" width="0.5627%" height="15" fill="rgb(222,72,44)" fg:x="306" fg:w="7"/><text x="24.8481%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0804%" y="325" width="0.0804%" height="15" fill="rgb(232,159,9)" fg:x="312" fg:w="1"/><text x="25.3304%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="25.1608%" y="501" width="0.0804%" height="15" fill="rgb(210,39,32)" fg:x="313" fg:w="1"/><text x="25.4108%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.1608%" y="517" width="0.2412%" height="15" fill="rgb(216,194,45)" fg:x="313" fg:w="3"/><text x="25.4108%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.2412%" y="501" width="0.1608%" height="15" fill="rgb(218,18,35)" fg:x="314" fg:w="2"/><text x="25.4912%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.2412%" y="485" width="0.1608%" height="15" fill="rgb(207,83,51)" fg:x="314" fg:w="2"/><text x="25.4912%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.2412%" y="469" width="0.1608%" height="15" fill="rgb(225,63,43)" fg:x="314" fg:w="2"/><text x="25.4912%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.2412%" y="453" width="0.1608%" height="15" fill="rgb(207,57,36)" fg:x="314" fg:w="2"/><text x="25.4912%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.2412%" y="437" width="0.1608%" height="15" fill="rgb(216,99,33)" fg:x="314" fg:w="2"/><text x="25.4912%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.2412%" y="421" width="0.1608%" height="15" fill="rgb(225,42,16)" fg:x="314" fg:w="2"/><text x="25.4912%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.2412%" y="405" width="0.1608%" height="15" fill="rgb(220,201,45)" fg:x="314" fg:w="2"/><text x="25.4912%" y="415.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="25.3215%" y="389" width="0.0804%" height="15" fill="rgb(225,33,4)" fg:x="315" fg:w="1"/><text x="25.5715%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="25.1608%" y="549" width="0.4019%" height="15" fill="rgb(224,33,50)" fg:x="313" fg:w="5"/><text x="25.4108%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="25.1608%" y="533" width="0.4019%" height="15" fill="rgb(246,198,51)" fg:x="313" fg:w="5"/><text x="25.4108%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="25.4019%" y="517" width="0.1608%" height="15" fill="rgb(205,22,4)" fg:x="316" fg:w="2"/><text x="25.6519%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.4019%" y="501" width="0.1608%" height="15" fill="rgb(206,3,8)" fg:x="316" fg:w="2"/><text x="25.6519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4823%" y="485" width="0.0804%" height="15" fill="rgb(251,23,15)" fg:x="317" fg:w="1"/><text x="25.7323%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.4823%" y="469" width="0.0804%" height="15" fill="rgb(252,88,28)" fg:x="317" fg:w="1"/><text x="25.7323%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.4823%" y="453" width="0.0804%" height="15" fill="rgb(212,127,14)" fg:x="317" fg:w="1"/><text x="25.7323%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.4823%" y="437" width="0.0804%" height="15" fill="rgb(247,145,37)" fg:x="317" fg:w="1"/><text x="25.7323%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.5627%" y="549" width="0.0804%" height="15" fill="rgb(209,117,53)" fg:x="318" fg:w="1"/><text x="25.8127%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5627%" y="533" width="0.0804%" height="15" fill="rgb(212,90,42)" fg:x="318" fg:w="1"/><text x="25.8127%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.5627%" y="517" width="0.0804%" height="15" fill="rgb(218,164,37)" fg:x="318" fg:w="1"/><text x="25.8127%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5627%" y="501" width="0.0804%" height="15" fill="rgb(246,65,34)" fg:x="318" fg:w="1"/><text x="25.8127%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.6431%" y="469" width="0.0804%" height="15" fill="rgb(231,100,33)" fg:x="319" fg:w="1"/><text x="25.8931%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.8842%" y="405" width="0.0804%" height="15" fill="rgb(228,126,14)" fg:x="322" fg:w="1"/><text x="26.1342%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="25.6431%" y="501" width="0.4019%" height="15" fill="rgb(215,173,21)" fg:x="319" fg:w="5"/><text x="25.8931%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="25.6431%" y="485" width="0.4019%" height="15" fill="rgb(210,6,40)" fg:x="319" fg:w="5"/><text x="25.8931%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="25.7235%" y="469" width="0.3215%" height="15" fill="rgb(212,48,18)" fg:x="320" fg:w="4"/><text x="25.9735%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="25.7235%" y="453" width="0.3215%" height="15" fill="rgb(230,214,11)" fg:x="320" fg:w="4"/><text x="25.9735%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="25.8039%" y="437" width="0.2412%" height="15" fill="rgb(254,105,39)" fg:x="321" fg:w="3"/><text x="26.0539%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.8039%" y="421" width="0.2412%" height="15" fill="rgb(245,158,5)" fg:x="321" fg:w="3"/><text x="26.0539%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9646%" y="405" width="0.0804%" height="15" fill="rgb(249,208,11)" fg:x="323" fg:w="1"/><text x="26.2146%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9646%" y="389" width="0.0804%" height="15" fill="rgb(210,39,28)" fg:x="323" fg:w="1"/><text x="26.2146%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0450%" y="485" width="0.0804%" height="15" fill="rgb(211,56,53)" fg:x="324" fg:w="1"/><text x="26.2950%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="25.6431%" y="549" width="0.6431%" height="15" fill="rgb(226,201,30)" fg:x="319" fg:w="8"/><text x="25.8931%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="25.6431%" y="533" width="0.6431%" height="15" fill="rgb(239,101,34)" fg:x="319" fg:w="8"/><text x="25.8931%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="25.6431%" y="517" width="0.6431%" height="15" fill="rgb(226,209,5)" fg:x="319" fg:w="8"/><text x="25.8931%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="26.0450%" y="501" width="0.2412%" height="15" fill="rgb(250,105,47)" fg:x="324" fg:w="3"/><text x="26.2950%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.1254%" y="485" width="0.1608%" height="15" fill="rgb(230,72,3)" fg:x="325" fg:w="2"/><text x="26.3754%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.1254%" y="469" width="0.1608%" height="15" fill="rgb(232,218,39)" fg:x="325" fg:w="2"/><text x="26.3754%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.1254%" y="453" width="0.1608%" height="15" fill="rgb(248,166,6)" fg:x="325" fg:w="2"/><text x="26.3754%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2058%" y="437" width="0.0804%" height="15" fill="rgb(247,89,20)" fg:x="326" fg:w="1"/><text x="26.4558%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.2058%" y="421" width="0.0804%" height="15" fill="rgb(248,130,54)" fg:x="326" fg:w="1"/><text x="26.4558%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="26.2058%" y="405" width="0.0804%" height="15" fill="rgb(234,196,4)" fg:x="326" fg:w="1"/><text x="26.4558%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="26.3666%" y="533" width="0.1608%" height="15" fill="rgb(250,143,31)" fg:x="328" fg:w="2"/><text x="26.6166%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="26.3666%" y="517" width="0.1608%" height="15" fill="rgb(211,110,34)" fg:x="328" fg:w="2"/><text x="26.6166%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.3666%" y="501" width="0.1608%" height="15" fill="rgb(215,124,48)" fg:x="328" fg:w="2"/><text x="26.6166%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="26.5273%" y="533" width="0.0804%" height="15" fill="rgb(216,46,13)" fg:x="330" fg:w="1"/><text x="26.7773%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.5273%" y="517" width="0.0804%" height="15" fill="rgb(205,184,25)" fg:x="330" fg:w="1"/><text x="26.7773%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.6077%" y="517" width="0.0804%" height="15" fill="rgb(228,1,10)" fg:x="331" fg:w="1"/><text x="26.8577%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.6077%" y="501" width="0.0804%" height="15" fill="rgb(213,116,27)" fg:x="331" fg:w="1"/><text x="26.8577%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7685%" y="453" width="0.0804%" height="15" fill="rgb(241,95,50)" fg:x="333" fg:w="1"/><text x="27.0185%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.77%)</title><rect x="25.1608%" y="581" width="1.7685%" height="15" fill="rgb(238,48,32)" fg:x="313" fg:w="22"/><text x="25.4108%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (22 samples, 1.77%)</title><rect x="25.1608%" y="565" width="1.7685%" height="15" fill="rgb(235,113,49)" fg:x="313" fg:w="22"/><text x="25.4108%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="26.2862%" y="549" width="0.6431%" height="15" fill="rgb(205,127,43)" fg:x="327" fg:w="8"/><text x="26.5362%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="26.6077%" y="533" width="0.3215%" height="15" fill="rgb(250,162,2)" fg:x="331" fg:w="4"/><text x="26.8577%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="26.6881%" y="517" width="0.2412%" height="15" fill="rgb(220,13,41)" fg:x="332" fg:w="3"/><text x="26.9381%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="26.6881%" y="501" width="0.2412%" height="15" fill="rgb(249,221,25)" fg:x="332" fg:w="3"/><text x="26.9381%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="26.6881%" y="485" width="0.2412%" height="15" fill="rgb(215,208,19)" fg:x="332" fg:w="3"/><text x="26.9381%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="26.6881%" y="469" width="0.2412%" height="15" fill="rgb(236,175,2)" fg:x="332" fg:w="3"/><text x="26.9381%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.8489%" y="453" width="0.0804%" height="15" fill="rgb(241,52,2)" fg:x="334" fg:w="1"/><text x="27.0989%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9293%" y="517" width="0.0804%" height="15" fill="rgb(248,140,14)" fg:x="335" fg:w="1"/><text x="27.1793%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9293%" y="501" width="0.0804%" height="15" fill="rgb(253,22,42)" fg:x="335" fg:w="1"/><text x="27.1793%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="26.9293%" y="581" width="0.1608%" height="15" fill="rgb(234,61,47)" fg:x="335" fg:w="2"/><text x="27.1793%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.9293%" y="565" width="0.1608%" height="15" fill="rgb(208,226,15)" fg:x="335" fg:w="2"/><text x="27.1793%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.9293%" y="549" width="0.1608%" height="15" fill="rgb(217,221,4)" fg:x="335" fg:w="2"/><text x="27.1793%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.9293%" y="533" width="0.1608%" height="15" fill="rgb(212,174,34)" fg:x="335" fg:w="2"/><text x="27.1793%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0096%" y="517" width="0.0804%" height="15" fill="rgb(253,83,4)" fg:x="336" fg:w="1"/><text x="27.2596%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.0900%" y="533" width="0.0804%" height="15" fill="rgb(250,195,49)" fg:x="337" fg:w="1"/><text x="27.3400%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.0900%" y="517" width="0.0804%" height="15" fill="rgb(241,192,25)" fg:x="337" fg:w="1"/><text x="27.3400%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0900%" y="501" width="0.0804%" height="15" fill="rgb(208,124,10)" fg:x="337" fg:w="1"/><text x="27.3400%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0900%" y="485" width="0.0804%" height="15" fill="rgb(222,33,0)" fg:x="337" fg:w="1"/><text x="27.3400%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0900%" y="469" width="0.0804%" height="15" fill="rgb(234,209,28)" fg:x="337" fg:w="1"/><text x="27.3400%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="27.1704%" y="533" width="0.0804%" height="15" fill="rgb(224,11,23)" fg:x="338" fg:w="1"/><text x="27.4204%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.1704%" y="517" width="0.0804%" height="15" fill="rgb(232,99,1)" fg:x="338" fg:w="1"/><text x="27.4204%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="27.1704%" y="501" width="0.0804%" height="15" fill="rgb(237,95,45)" fg:x="338" fg:w="1"/><text x="27.4204%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.1704%" y="485" width="0.0804%" height="15" fill="rgb(208,109,11)" fg:x="338" fg:w="1"/><text x="27.4204%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1704%" y="469" width="0.0804%" height="15" fill="rgb(216,190,48)" fg:x="338" fg:w="1"/><text x="27.4204%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1704%" y="453" width="0.0804%" height="15" fill="rgb(251,171,36)" fg:x="338" fg:w="1"/><text x="27.4204%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="27.2508%" y="517" width="0.0804%" height="15" fill="rgb(230,62,22)" fg:x="339" fg:w="1"/><text x="27.5008%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="27.2508%" y="501" width="0.0804%" height="15" fill="rgb(225,114,35)" fg:x="339" fg:w="1"/><text x="27.5008%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="27.2508%" y="485" width="0.0804%" height="15" fill="rgb(215,118,42)" fg:x="339" fg:w="1"/><text x="27.5008%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="27.2508%" y="469" width="0.0804%" height="15" fill="rgb(243,119,21)" fg:x="339" fg:w="1"/><text x="27.5008%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2508%" y="453" width="0.0804%" height="15" fill="rgb(252,177,53)" fg:x="339" fg:w="1"/><text x="27.5008%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.2508%" y="437" width="0.0804%" height="15" fill="rgb(237,209,29)" fg:x="339" fg:w="1"/><text x="27.5008%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2508%" y="421" width="0.0804%" height="15" fill="rgb(212,65,23)" fg:x="339" fg:w="1"/><text x="27.5008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2508%" y="405" width="0.0804%" height="15" fill="rgb(230,222,46)" fg:x="339" fg:w="1"/><text x="27.5008%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="27.2508%" y="533" width="0.1608%" height="15" fill="rgb(215,135,32)" fg:x="339" fg:w="2"/><text x="27.5008%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="27.3312%" y="517" width="0.0804%" height="15" fill="rgb(246,101,22)" fg:x="340" fg:w="1"/><text x="27.5812%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.3312%" y="501" width="0.0804%" height="15" fill="rgb(206,107,13)" fg:x="340" fg:w="1"/><text x="27.5812%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="27.3312%" y="485" width="0.0804%" height="15" fill="rgb(250,100,44)" fg:x="340" fg:w="1"/><text x="27.5812%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="27.3312%" y="469" width="0.0804%" height="15" fill="rgb(231,147,38)" fg:x="340" fg:w="1"/><text x="27.5812%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="27.3312%" y="453" width="0.0804%" height="15" fill="rgb(229,8,40)" fg:x="340" fg:w="1"/><text x="27.5812%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4116%" y="485" width="0.1608%" height="15" fill="rgb(221,135,30)" fg:x="341" fg:w="2"/><text x="27.6616%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4116%" y="469" width="0.1608%" height="15" fill="rgb(249,193,18)" fg:x="341" fg:w="2"/><text x="27.6616%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="27.4116%" y="517" width="0.3215%" height="15" fill="rgb(209,133,39)" fg:x="341" fg:w="4"/><text x="27.6616%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.4116%" y="501" width="0.3215%" height="15" fill="rgb(232,100,14)" fg:x="341" fg:w="4"/><text x="27.6616%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.5723%" y="485" width="0.1608%" height="15" fill="rgb(224,185,1)" fg:x="343" fg:w="2"/><text x="27.8223%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.5723%" y="469" width="0.1608%" height="15" fill="rgb(223,139,8)" fg:x="343" fg:w="2"/><text x="27.8223%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.5723%" y="453" width="0.1608%" height="15" fill="rgb(232,213,38)" fg:x="343" fg:w="2"/><text x="27.8223%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.5723%" y="437" width="0.1608%" height="15" fill="rgb(207,94,22)" fg:x="343" fg:w="2"/><text x="27.8223%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="27.5723%" y="421" width="0.1608%" height="15" fill="rgb(219,183,54)" fg:x="343" fg:w="2"/><text x="27.8223%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.6527%" y="405" width="0.0804%" height="15" fill="rgb(216,185,54)" fg:x="344" fg:w="1"/><text x="27.9027%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="27.4116%" y="533" width="0.4823%" height="15" fill="rgb(254,217,39)" fg:x="341" fg:w="6"/><text x="27.6616%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="27.7331%" y="517" width="0.1608%" height="15" fill="rgb(240,178,23)" fg:x="345" fg:w="2"/><text x="27.9831%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.7331%" y="501" width="0.1608%" height="15" fill="rgb(218,11,47)" fg:x="345" fg:w="2"/><text x="27.9831%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8135%" y="485" width="0.0804%" height="15" fill="rgb(218,51,51)" fg:x="346" fg:w="1"/><text x="28.0635%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8135%" y="469" width="0.0804%" height="15" fill="rgb(238,126,27)" fg:x="346" fg:w="1"/><text x="28.0635%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.8135%" y="453" width="0.0804%" height="15" fill="rgb(249,202,22)" fg:x="346" fg:w="1"/><text x="28.0635%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8135%" y="437" width="0.0804%" height="15" fill="rgb(254,195,49)" fg:x="346" fg:w="1"/><text x="28.0635%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="27.8939%" y="469" width="0.0804%" height="15" fill="rgb(208,123,14)" fg:x="347" fg:w="1"/><text x="28.1439%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="27.8939%" y="453" width="0.0804%" height="15" fill="rgb(224,200,8)" fg:x="347" fg:w="1"/><text x="28.1439%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="27.8939%" y="501" width="0.1608%" height="15" fill="rgb(217,61,36)" fg:x="347" fg:w="2"/><text x="28.1439%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.8939%" y="485" width="0.1608%" height="15" fill="rgb(206,35,45)" fg:x="347" fg:w="2"/><text x="28.1439%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.9743%" y="469" width="0.0804%" height="15" fill="rgb(217,65,33)" fg:x="348" fg:w="1"/><text x="28.2243%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9743%" y="453" width="0.0804%" height="15" fill="rgb(222,158,48)" fg:x="348" fg:w="1"/><text x="28.2243%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.9743%" y="437" width="0.0804%" height="15" fill="rgb(254,2,54)" fg:x="348" fg:w="1"/><text x="28.2243%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9743%" y="421" width="0.0804%" height="15" fill="rgb(250,143,38)" fg:x="348" fg:w="1"/><text x="28.2243%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.9743%" y="405" width="0.0804%" height="15" fill="rgb(248,25,0)" fg:x="348" fg:w="1"/><text x="28.2243%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9743%" y="389" width="0.0804%" height="15" fill="rgb(206,152,27)" fg:x="348" fg:w="1"/><text x="28.2243%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.9743%" y="373" width="0.0804%" height="15" fill="rgb(240,77,30)" fg:x="348" fg:w="1"/><text x="28.2243%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="27.0900%" y="549" width="1.0450%" height="15" fill="rgb(231,5,3)" fg:x="337" fg:w="13"/><text x="27.3400%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="27.8939%" y="533" width="0.2412%" height="15" fill="rgb(207,226,32)" fg:x="347" fg:w="3"/><text x="28.1439%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="27.8939%" y="517" width="0.2412%" height="15" fill="rgb(222,207,47)" fg:x="347" fg:w="3"/><text x="28.1439%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.0547%" y="501" width="0.0804%" height="15" fill="rgb(229,115,45)" fg:x="349" fg:w="1"/><text x="28.3047%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="485" width="0.0804%" height="15" fill="rgb(224,191,6)" fg:x="349" fg:w="1"/><text x="28.3047%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0547%" y="469" width="0.0804%" height="15" fill="rgb(230,227,24)" fg:x="349" fg:w="1"/><text x="28.3047%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="453" width="0.0804%" height="15" fill="rgb(228,80,19)" fg:x="349" fg:w="1"/><text x="28.3047%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="437" width="0.0804%" height="15" fill="rgb(247,229,0)" fg:x="349" fg:w="1"/><text x="28.3047%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="421" width="0.0804%" height="15" fill="rgb(237,194,15)" fg:x="349" fg:w="1"/><text x="28.3047%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.0547%" y="405" width="0.0804%" height="15" fill="rgb(219,203,20)" fg:x="349" fg:w="1"/><text x="28.3047%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="389" width="0.0804%" height="15" fill="rgb(234,128,8)" fg:x="349" fg:w="1"/><text x="28.3047%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="28.0547%" y="373" width="0.0804%" height="15" fill="rgb(248,202,8)" fg:x="349" fg:w="1"/><text x="28.3047%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="28.0547%" y="357" width="0.0804%" height="15" fill="rgb(206,104,37)" fg:x="349" fg:w="1"/><text x="28.3047%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.0547%" y="341" width="0.0804%" height="15" fill="rgb(223,8,27)" fg:x="349" fg:w="1"/><text x="28.3047%" y="351.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.21%)</title><rect x="27.0900%" y="565" width="1.2058%" height="15" fill="rgb(216,217,28)" fg:x="337" fg:w="15"/><text x="27.3400%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.1350%" y="549" width="0.1608%" height="15" fill="rgb(249,199,1)" fg:x="350" fg:w="2"/><text x="28.3850%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.1350%" y="533" width="0.1608%" height="15" fill="rgb(240,85,17)" fg:x="350" fg:w="2"/><text x="28.3850%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.1350%" y="517" width="0.1608%" height="15" fill="rgb(206,108,45)" fg:x="350" fg:w="2"/><text x="28.3850%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.1350%" y="501" width="0.1608%" height="15" fill="rgb(245,210,41)" fg:x="350" fg:w="2"/><text x="28.3850%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.1350%" y="485" width="0.1608%" height="15" fill="rgb(206,13,37)" fg:x="350" fg:w="2"/><text x="28.3850%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.1350%" y="469" width="0.1608%" height="15" fill="rgb(250,61,18)" fg:x="350" fg:w="2"/><text x="28.3850%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.1350%" y="453" width="0.1608%" height="15" fill="rgb(235,172,48)" fg:x="350" fg:w="2"/><text x="28.3850%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="28.1350%" y="437" width="0.1608%" height="15" fill="rgb(249,201,17)" fg:x="350" fg:w="2"/><text x="28.3850%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="28.2958%" y="549" width="0.0804%" height="15" fill="rgb(219,208,6)" fg:x="352" fg:w="1"/><text x="28.5458%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3762%" y="421" width="0.0804%" height="15" fill="rgb(248,31,23)" fg:x="353" fg:w="1"/><text x="28.6262%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.3762%" y="517" width="0.1608%" height="15" fill="rgb(245,15,42)" fg:x="353" fg:w="2"/><text x="28.6262%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.3762%" y="501" width="0.1608%" height="15" fill="rgb(222,217,39)" fg:x="353" fg:w="2"/><text x="28.6262%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.3762%" y="485" width="0.1608%" height="15" fill="rgb(210,219,27)" fg:x="353" fg:w="2"/><text x="28.6262%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.3762%" y="469" width="0.1608%" height="15" fill="rgb(252,166,36)" fg:x="353" fg:w="2"/><text x="28.6262%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.3762%" y="453" width="0.1608%" height="15" fill="rgb(245,132,34)" fg:x="353" fg:w="2"/><text x="28.6262%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.3762%" y="437" width="0.1608%" height="15" fill="rgb(236,54,3)" fg:x="353" fg:w="2"/><text x="28.6262%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.4566%" y="421" width="0.0804%" height="15" fill="rgb(241,173,43)" fg:x="354" fg:w="1"/><text x="28.7066%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.4566%" y="405" width="0.0804%" height="15" fill="rgb(215,190,9)" fg:x="354" fg:w="1"/><text x="28.7066%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5370%" y="485" width="0.0804%" height="15" fill="rgb(242,101,16)" fg:x="355" fg:w="1"/><text x="28.7870%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5370%" y="469" width="0.0804%" height="15" fill="rgb(223,190,21)" fg:x="355" fg:w="1"/><text x="28.7870%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5370%" y="453" width="0.0804%" height="15" fill="rgb(215,228,25)" fg:x="355" fg:w="1"/><text x="28.7870%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.6174%" y="485" width="0.0804%" height="15" fill="rgb(225,36,22)" fg:x="356" fg:w="1"/><text x="28.8674%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6977%" y="453" width="0.0804%" height="15" fill="rgb(251,106,46)" fg:x="357" fg:w="1"/><text x="28.9477%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="28.7781%" y="421" width="0.1608%" height="15" fill="rgb(208,90,1)" fg:x="358" fg:w="2"/><text x="29.0281%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8585%" y="405" width="0.0804%" height="15" fill="rgb(243,10,4)" fg:x="359" fg:w="1"/><text x="29.1085%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="28.3762%" y="549" width="0.6431%" height="15" fill="rgb(212,137,27)" fg:x="353" fg:w="8"/><text x="28.6262%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="28.3762%" y="533" width="0.6431%" height="15" fill="rgb(231,220,49)" fg:x="353" fg:w="8"/><text x="28.6262%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="28.5370%" y="517" width="0.4823%" height="15" fill="rgb(237,96,20)" fg:x="355" fg:w="6"/><text x="28.7870%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="28.5370%" y="501" width="0.4823%" height="15" fill="rgb(239,229,30)" fg:x="355" fg:w="6"/><text x="28.7870%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="28.6977%" y="485" width="0.3215%" height="15" fill="rgb(219,65,33)" fg:x="357" fg:w="4"/><text x="28.9477%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="28.6977%" y="469" width="0.3215%" height="15" fill="rgb(243,134,7)" fg:x="357" fg:w="4"/><text x="28.9477%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.7781%" y="453" width="0.2412%" height="15" fill="rgb(216,177,54)" fg:x="358" fg:w="3"/><text x="29.0281%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.7781%" y="437" width="0.2412%" height="15" fill="rgb(211,160,20)" fg:x="358" fg:w="3"/><text x="29.0281%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9389%" y="421" width="0.0804%" height="15" fill="rgb(239,85,39)" fg:x="360" fg:w="1"/><text x="29.1889%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.9389%" y="405" width="0.0804%" height="15" fill="rgb(232,125,22)" fg:x="360" fg:w="1"/><text x="29.1889%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="29.0193%" y="549" width="0.1608%" height="15" fill="rgb(244,57,34)" fg:x="361" fg:w="2"/><text x="29.2693%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.0997%" y="533" width="0.0804%" height="15" fill="rgb(214,203,32)" fg:x="362" fg:w="1"/><text x="29.3497%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1801%" y="533" width="0.0804%" height="15" fill="rgb(207,58,43)" fg:x="363" fg:w="1"/><text x="29.4301%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1801%" y="517" width="0.0804%" height="15" fill="rgb(215,193,15)" fg:x="363" fg:w="1"/><text x="29.4301%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.1801%" y="501" width="0.0804%" height="15" fill="rgb(232,15,44)" fg:x="363" fg:w="1"/><text x="29.4301%" y="511.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2605%" y="533" width="0.0804%" height="15" fill="rgb(212,3,48)" fg:x="364" fg:w="1"/><text x="29.5105%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.2605%" y="517" width="0.0804%" height="15" fill="rgb(218,128,7)" fg:x="364" fg:w="1"/><text x="29.5105%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.2605%" y="501" width="0.0804%" height="15" fill="rgb(226,216,39)" fg:x="364" fg:w="1"/><text x="29.5105%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="29.2605%" y="485" width="0.0804%" height="15" fill="rgb(243,47,51)" fg:x="364" fg:w="1"/><text x="29.5105%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.2605%" y="469" width="0.0804%" height="15" fill="rgb(241,183,40)" fg:x="364" fg:w="1"/><text x="29.5105%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.1801%" y="549" width="0.2412%" height="15" fill="rgb(231,217,32)" fg:x="363" fg:w="3"/><text x="29.4301%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="29.3408%" y="533" width="0.0804%" height="15" fill="rgb(229,61,38)" fg:x="365" fg:w="1"/><text x="29.5908%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.3408%" y="517" width="0.0804%" height="15" fill="rgb(225,210,5)" fg:x="365" fg:w="1"/><text x="29.5908%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.4212%" y="501" width="0.0804%" height="15" fill="rgb(231,79,45)" fg:x="366" fg:w="1"/><text x="29.6712%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.4212%" y="485" width="0.0804%" height="15" fill="rgb(224,100,7)" fg:x="366" fg:w="1"/><text x="29.6712%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4212%" y="469" width="0.0804%" height="15" fill="rgb(241,198,18)" fg:x="366" fg:w="1"/><text x="29.6712%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4212%" y="453" width="0.0804%" height="15" fill="rgb(252,97,53)" fg:x="366" fg:w="1"/><text x="29.6712%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4212%" y="437" width="0.0804%" height="15" fill="rgb(220,88,7)" fg:x="366" fg:w="1"/><text x="29.6712%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4212%" y="421" width="0.0804%" height="15" fill="rgb(213,176,14)" fg:x="366" fg:w="1"/><text x="29.6712%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4212%" y="405" width="0.0804%" height="15" fill="rgb(246,73,7)" fg:x="366" fg:w="1"/><text x="29.6712%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.4212%" y="389" width="0.0804%" height="15" fill="rgb(245,64,36)" fg:x="366" fg:w="1"/><text x="29.6712%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.4212%" y="373" width="0.0804%" height="15" fill="rgb(245,80,10)" fg:x="366" fg:w="1"/><text x="29.6712%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.4212%" y="357" width="0.0804%" height="15" fill="rgb(232,107,50)" fg:x="366" fg:w="1"/><text x="29.6712%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.4212%" y="341" width="0.0804%" height="15" fill="rgb(253,3,0)" fg:x="366" fg:w="1"/><text x="29.6712%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.4212%" y="325" width="0.0804%" height="15" fill="rgb(212,99,53)" fg:x="366" fg:w="1"/><text x="29.6712%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.4212%" y="309" width="0.0804%" height="15" fill="rgb(249,111,54)" fg:x="366" fg:w="1"/><text x="29.6712%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.4212%" y="293" width="0.0804%" height="15" fill="rgb(249,55,30)" fg:x="366" fg:w="1"/><text x="29.6712%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.4212%" y="277" width="0.0804%" height="15" fill="rgb(237,47,42)" fg:x="366" fg:w="1"/><text x="29.6712%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.4212%" y="261" width="0.0804%" height="15" fill="rgb(211,20,18)" fg:x="366" fg:w="1"/><text x="29.6712%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4212%" y="245" width="0.0804%" height="15" fill="rgb(231,203,46)" fg:x="366" fg:w="1"/><text x="29.6712%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5016%" y="469" width="0.0804%" height="15" fill="rgb(237,142,3)" fg:x="367" fg:w="1"/><text x="29.7516%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.5016%" y="453" width="0.0804%" height="15" fill="rgb(241,107,1)" fg:x="367" fg:w="1"/><text x="29.7516%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5016%" y="437" width="0.0804%" height="15" fill="rgb(229,83,13)" fg:x="367" fg:w="1"/><text x="29.7516%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5016%" y="421" width="0.0804%" height="15" fill="rgb(241,91,40)" fg:x="367" fg:w="1"/><text x="29.7516%" y="431.50"></text></g><g><title>plugins_core::build::Build::occupying (32 samples, 2.57%)</title><rect x="27.0900%" y="581" width="2.5723%" height="15" fill="rgb(225,3,45)" fg:x="337" fg:w="32"/><text x="27.3400%" y="591.50">pl..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.37%)</title><rect x="28.2958%" y="565" width="1.3666%" height="15" fill="rgb(244,223,14)" fg:x="352" fg:w="17"/><text x="28.5458%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="29.4212%" y="549" width="0.2412%" height="15" fill="rgb(224,124,37)" fg:x="366" fg:w="3"/><text x="29.6712%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="29.4212%" y="533" width="0.2412%" height="15" fill="rgb(251,171,30)" fg:x="366" fg:w="3"/><text x="29.6712%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="29.4212%" y="517" width="0.2412%" height="15" fill="rgb(236,46,54)" fg:x="366" fg:w="3"/><text x="29.6712%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.5016%" y="501" width="0.1608%" height="15" fill="rgb(245,213,5)" fg:x="367" fg:w="2"/><text x="29.7516%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.5016%" y="485" width="0.1608%" height="15" fill="rgb(230,144,27)" fg:x="367" fg:w="2"/><text x="29.7516%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5820%" y="469" width="0.0804%" height="15" fill="rgb(220,86,6)" fg:x="368" fg:w="1"/><text x="29.8320%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5820%" y="453" width="0.0804%" height="15" fill="rgb(240,20,13)" fg:x="368" fg:w="1"/><text x="29.8320%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.5820%" y="437" width="0.0804%" height="15" fill="rgb(217,89,34)" fg:x="368" fg:w="1"/><text x="29.8320%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5820%" y="421" width="0.0804%" height="15" fill="rgb(229,13,5)" fg:x="368" fg:w="1"/><text x="29.8320%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5820%" y="405" width="0.0804%" height="15" fill="rgb(244,67,35)" fg:x="368" fg:w="1"/><text x="29.8320%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7428%" y="549" width="0.0804%" height="15" fill="rgb(221,40,2)" fg:x="370" fg:w="1"/><text x="29.9928%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7428%" y="533" width="0.0804%" height="15" fill="rgb(237,157,21)" fg:x="370" fg:w="1"/><text x="29.9928%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.7428%" y="517" width="0.0804%" height="15" fill="rgb(222,94,11)" fg:x="370" fg:w="1"/><text x="29.9928%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.7428%" y="501" width="0.0804%" height="15" fill="rgb(249,113,6)" fg:x="370" fg:w="1"/><text x="29.9928%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.7428%" y="485" width="0.0804%" height="15" fill="rgb(238,137,36)" fg:x="370" fg:w="1"/><text x="29.9928%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7428%" y="469" width="0.0804%" height="15" fill="rgb(210,102,26)" fg:x="370" fg:w="1"/><text x="29.9928%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7428%" y="453" width="0.0804%" height="15" fill="rgb(218,30,30)" fg:x="370" fg:w="1"/><text x="29.9928%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.7428%" y="437" width="0.0804%" height="15" fill="rgb(214,67,26)" fg:x="370" fg:w="1"/><text x="29.9928%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.7428%" y="421" width="0.0804%" height="15" fill="rgb(251,9,53)" fg:x="370" fg:w="1"/><text x="29.9928%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.7428%" y="405" width="0.0804%" height="15" fill="rgb(228,204,25)" fg:x="370" fg:w="1"/><text x="29.9928%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.7428%" y="389" width="0.0804%" height="15" fill="rgb(207,153,8)" fg:x="370" fg:w="1"/><text x="29.9928%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7428%" y="373" width="0.0804%" height="15" fill="rgb(242,9,16)" fg:x="370" fg:w="1"/><text x="29.9928%" y="383.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="29.9839%" y="533" width="0.0804%" height="15" fill="rgb(217,211,10)" fg:x="373" fg:w="1"/><text x="30.2339%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="29.9839%" y="517" width="0.0804%" height="15" fill="rgb(219,228,52)" fg:x="373" fg:w="1"/><text x="30.2339%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="30.0643%" y="533" width="0.0804%" height="15" fill="rgb(231,92,29)" fg:x="374" fg:w="1"/><text x="30.3143%" y="543.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.0643%" y="517" width="0.0804%" height="15" fill="rgb(232,8,23)" fg:x="374" fg:w="1"/><text x="30.3143%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0643%" y="501" width="0.0804%" height="15" fill="rgb(216,211,34)" fg:x="374" fg:w="1"/><text x="30.3143%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1447%" y="485" width="0.0804%" height="15" fill="rgb(236,151,0)" fg:x="375" fg:w="1"/><text x="30.3947%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1447%" y="469" width="0.0804%" height="15" fill="rgb(209,168,3)" fg:x="375" fg:w="1"/><text x="30.3947%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1447%" y="453" width="0.0804%" height="15" fill="rgb(208,129,28)" fg:x="375" fg:w="1"/><text x="30.3947%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.1447%" y="517" width="0.1608%" height="15" fill="rgb(229,78,22)" fg:x="375" fg:w="2"/><text x="30.3947%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.1447%" y="501" width="0.1608%" height="15" fill="rgb(228,187,13)" fg:x="375" fg:w="2"/><text x="30.3947%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2251%" y="485" width="0.0804%" height="15" fill="rgb(240,119,24)" fg:x="376" fg:w="1"/><text x="30.4751%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2251%" y="469" width="0.0804%" height="15" fill="rgb(209,194,42)" fg:x="376" fg:w="1"/><text x="30.4751%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.2251%" y="453" width="0.0804%" height="15" fill="rgb(247,200,46)" fg:x="376" fg:w="1"/><text x="30.4751%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2251%" y="437" width="0.0804%" height="15" fill="rgb(218,76,16)" fg:x="376" fg:w="1"/><text x="30.4751%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2251%" y="421" width="0.0804%" height="15" fill="rgb(225,21,48)" fg:x="376" fg:w="1"/><text x="30.4751%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.2251%" y="405" width="0.0804%" height="15" fill="rgb(239,223,50)" fg:x="376" fg:w="1"/><text x="30.4751%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.3055%" y="485" width="0.0804%" height="15" fill="rgb(244,45,21)" fg:x="377" fg:w="1"/><text x="30.5555%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.3055%" y="469" width="0.0804%" height="15" fill="rgb(232,33,43)" fg:x="377" fg:w="1"/><text x="30.5555%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.3055%" y="453" width="0.0804%" height="15" fill="rgb(209,8,3)" fg:x="377" fg:w="1"/><text x="30.5555%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3055%" y="437" width="0.0804%" height="15" fill="rgb(214,25,53)" fg:x="377" fg:w="1"/><text x="30.5555%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="30.1447%" y="533" width="0.4019%" height="15" fill="rgb(254,186,54)" fg:x="375" fg:w="5"/><text x="30.3947%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="30.3055%" y="517" width="0.2412%" height="15" fill="rgb(208,174,49)" fg:x="377" fg:w="3"/><text x="30.5555%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.3055%" y="501" width="0.2412%" height="15" fill="rgb(233,191,51)" fg:x="377" fg:w="3"/><text x="30.5555%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.3859%" y="485" width="0.1608%" height="15" fill="rgb(222,134,10)" fg:x="378" fg:w="2"/><text x="30.6359%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3859%" y="469" width="0.1608%" height="15" fill="rgb(230,226,20)" fg:x="378" fg:w="2"/><text x="30.6359%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="30.3859%" y="453" width="0.1608%" height="15" fill="rgb(251,111,25)" fg:x="378" fg:w="2"/><text x="30.6359%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3859%" y="437" width="0.1608%" height="15" fill="rgb(224,40,46)" fg:x="378" fg:w="2"/><text x="30.6359%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.3859%" y="421" width="0.1608%" height="15" fill="rgb(236,108,47)" fg:x="378" fg:w="2"/><text x="30.6359%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3859%" y="405" width="0.1608%" height="15" fill="rgb(234,93,0)" fg:x="378" fg:w="2"/><text x="30.6359%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5466%" y="469" width="0.0804%" height="15" fill="rgb(224,213,32)" fg:x="380" fg:w="1"/><text x="30.7966%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5466%" y="453" width="0.0804%" height="15" fill="rgb(251,11,48)" fg:x="380" fg:w="1"/><text x="30.7966%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5466%" y="437" width="0.0804%" height="15" fill="rgb(236,173,5)" fg:x="380" fg:w="1"/><text x="30.7966%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5466%" y="421" width="0.0804%" height="15" fill="rgb(230,95,12)" fg:x="380" fg:w="1"/><text x="30.7966%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.5466%" y="501" width="0.1608%" height="15" fill="rgb(232,209,1)" fg:x="380" fg:w="2"/><text x="30.7966%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.5466%" y="485" width="0.1608%" height="15" fill="rgb(232,6,1)" fg:x="380" fg:w="2"/><text x="30.7966%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6270%" y="469" width="0.0804%" height="15" fill="rgb(210,224,50)" fg:x="381" fg:w="1"/><text x="30.8770%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6270%" y="453" width="0.0804%" height="15" fill="rgb(228,127,35)" fg:x="381" fg:w="1"/><text x="30.8770%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.6270%" y="437" width="0.0804%" height="15" fill="rgb(245,102,45)" fg:x="381" fg:w="1"/><text x="30.8770%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6270%" y="421" width="0.0804%" height="15" fill="rgb(214,1,49)" fg:x="381" fg:w="1"/><text x="30.8770%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6270%" y="405" width="0.0804%" height="15" fill="rgb(226,163,40)" fg:x="381" fg:w="1"/><text x="30.8770%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6270%" y="389" width="0.0804%" height="15" fill="rgb(239,212,28)" fg:x="381" fg:w="1"/><text x="30.8770%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.7074%" y="437" width="0.0804%" height="15" fill="rgb(220,20,13)" fg:x="382" fg:w="1"/><text x="30.9574%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7074%" y="421" width="0.0804%" height="15" fill="rgb(210,164,35)" fg:x="382" fg:w="1"/><text x="30.9574%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7074%" y="405" width="0.0804%" height="15" fill="rgb(248,109,41)" fg:x="382" fg:w="1"/><text x="30.9574%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7074%" y="389" width="0.0804%" height="15" fill="rgb(238,23,50)" fg:x="382" fg:w="1"/><text x="30.9574%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7074%" y="373" width="0.0804%" height="15" fill="rgb(211,48,49)" fg:x="382" fg:w="1"/><text x="30.9574%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7074%" y="357" width="0.0804%" height="15" fill="rgb(223,36,21)" fg:x="382" fg:w="1"/><text x="30.9574%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7074%" y="341" width="0.0804%" height="15" fill="rgb(207,123,46)" fg:x="382" fg:w="1"/><text x="30.9574%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7074%" y="325" width="0.0804%" height="15" fill="rgb(240,218,32)" fg:x="382" fg:w="1"/><text x="30.9574%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7074%" y="309" width="0.0804%" height="15" fill="rgb(252,5,43)" fg:x="382" fg:w="1"/><text x="30.9574%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7074%" y="293" width="0.0804%" height="15" fill="rgb(252,84,19)" fg:x="382" fg:w="1"/><text x="30.9574%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7074%" y="277" width="0.0804%" height="15" fill="rgb(243,152,39)" fg:x="382" fg:w="1"/><text x="30.9574%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7074%" y="261" width="0.0804%" height="15" fill="rgb(234,160,15)" fg:x="382" fg:w="1"/><text x="30.9574%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7074%" y="245" width="0.0804%" height="15" fill="rgb(237,34,20)" fg:x="382" fg:w="1"/><text x="30.9574%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7074%" y="469" width="0.1608%" height="15" fill="rgb(229,97,13)" fg:x="382" fg:w="2"/><text x="30.9574%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7074%" y="453" width="0.1608%" height="15" fill="rgb(234,71,50)" fg:x="382" fg:w="2"/><text x="30.9574%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7878%" y="437" width="0.0804%" height="15" fill="rgb(253,155,4)" fg:x="383" fg:w="1"/><text x="31.0378%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.13%)</title><rect x="29.8232%" y="549" width="1.1254%" height="15" fill="rgb(222,185,37)" fg:x="371" fg:w="14"/><text x="30.0732%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="30.5466%" y="533" width="0.4019%" height="15" fill="rgb(251,177,13)" fg:x="380" fg:w="5"/><text x="30.7966%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="30.5466%" y="517" width="0.4019%" height="15" fill="rgb(250,179,40)" fg:x="380" fg:w="5"/><text x="30.7966%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="30.7074%" y="501" width="0.2412%" height="15" fill="rgb(242,44,2)" fg:x="382" fg:w="3"/><text x="30.9574%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="30.7074%" y="485" width="0.2412%" height="15" fill="rgb(216,177,13)" fg:x="382" fg:w="3"/><text x="30.9574%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8682%" y="469" width="0.0804%" height="15" fill="rgb(216,106,43)" fg:x="384" fg:w="1"/><text x="31.1182%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8682%" y="453" width="0.0804%" height="15" fill="rgb(216,183,2)" fg:x="384" fg:w="1"/><text x="31.1182%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.8682%" y="437" width="0.0804%" height="15" fill="rgb(249,75,3)" fg:x="384" fg:w="1"/><text x="31.1182%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8682%" y="421" width="0.0804%" height="15" fill="rgb(219,67,39)" fg:x="384" fg:w="1"/><text x="31.1182%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8682%" y="405" width="0.0804%" height="15" fill="rgb(253,228,2)" fg:x="384" fg:w="1"/><text x="31.1182%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8682%" y="389" width="0.0804%" height="15" fill="rgb(235,138,27)" fg:x="384" fg:w="1"/><text x="31.1182%" y="399.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (181 samples, 14.55%)</title><rect x="16.4791%" y="597" width="14.5498%" height="15" fill="rgb(236,97,51)" fg:x="205" fg:w="181"/><text x="16.7291%" y="607.50">plugins_core::build::B..</text></g><g><title>plugins_core::build::Build::wearing (17 samples, 1.37%)</title><rect x="29.6624%" y="581" width="1.3666%" height="15" fill="rgb(240,80,30)" fg:x="369" fg:w="17"/><text x="29.9124%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.37%)</title><rect x="29.6624%" y="565" width="1.3666%" height="15" fill="rgb(230,178,19)" fg:x="369" fg:w="17"/><text x="29.9124%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.9486%" y="549" width="0.0804%" height="15" fill="rgb(210,190,27)" fg:x="385" fg:w="1"/><text x="31.1986%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="30.9486%" y="533" width="0.0804%" height="15" fill="rgb(222,107,31)" fg:x="385" fg:w="1"/><text x="31.1986%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="31.0289%" y="549" width="0.0804%" height="15" fill="rgb(216,127,34)" fg:x="386" fg:w="1"/><text x="31.2789%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="31.0289%" y="597" width="0.1608%" height="15" fill="rgb(234,116,52)" fg:x="386" fg:w="2"/><text x="31.2789%" y="607.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="31.0289%" y="581" width="0.1608%" height="15" fill="rgb(222,124,15)" fg:x="386" fg:w="2"/><text x="31.2789%" y="591.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="31.0289%" y="565" width="0.1608%" height="15" fill="rgb(231,179,28)" fg:x="386" fg:w="2"/><text x="31.2789%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="31.1093%" y="549" width="0.0804%" height="15" fill="rgb(226,93,45)" fg:x="387" fg:w="1"/><text x="31.3593%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.1093%" y="533" width="0.0804%" height="15" fill="rgb(215,8,51)" fg:x="387" fg:w="1"/><text x="31.3593%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.1093%" y="517" width="0.0804%" height="15" fill="rgb(223,106,5)" fg:x="387" fg:w="1"/><text x="31.3593%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.1093%" y="501" width="0.0804%" height="15" fill="rgb(250,191,5)" fg:x="387" fg:w="1"/><text x="31.3593%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.1897%" y="517" width="0.0804%" height="15" fill="rgb(242,132,44)" fg:x="388" fg:w="1"/><text x="31.4397%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.1897%" y="501" width="0.0804%" height="15" fill="rgb(251,152,29)" fg:x="388" fg:w="1"/><text x="31.4397%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1897%" y="485" width="0.0804%" height="15" fill="rgb(218,179,5)" fg:x="388" fg:w="1"/><text x="31.4397%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="31.1897%" y="565" width="0.2412%" height="15" fill="rgb(227,67,19)" fg:x="388" fg:w="3"/><text x="31.4397%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.1897%" y="549" width="0.2412%" height="15" fill="rgb(233,119,31)" fg:x="388" fg:w="3"/><text x="31.4397%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="31.1897%" y="533" width="0.2412%" height="15" fill="rgb(241,120,22)" fg:x="388" fg:w="3"/><text x="31.4397%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="31.2701%" y="517" width="0.1608%" height="15" fill="rgb(224,102,30)" fg:x="389" fg:w="2"/><text x="31.5201%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.2701%" y="501" width="0.1608%" height="15" fill="rgb(210,164,37)" fg:x="389" fg:w="2"/><text x="31.5201%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="31.2701%" y="485" width="0.1608%" height="15" fill="rgb(226,191,16)" fg:x="389" fg:w="2"/><text x="31.5201%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.3505%" y="469" width="0.0804%" height="15" fill="rgb(214,40,45)" fg:x="390" fg:w="1"/><text x="31.6005%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="31.4309%" y="533" width="0.0804%" height="15" fill="rgb(244,29,26)" fg:x="391" fg:w="1"/><text x="31.6809%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.4309%" y="517" width="0.0804%" height="15" fill="rgb(216,16,5)" fg:x="391" fg:w="1"/><text x="31.6809%" y="527.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.5113%" y="485" width="0.0804%" height="15" fill="rgb(249,76,35)" fg:x="392" fg:w="1"/><text x="31.7613%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.5113%" y="469" width="0.0804%" height="15" fill="rgb(207,11,44)" fg:x="392" fg:w="1"/><text x="31.7613%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5113%" y="453" width="0.0804%" height="15" fill="rgb(228,190,49)" fg:x="392" fg:w="1"/><text x="31.7613%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.5113%" y="437" width="0.0804%" height="15" fill="rgb(214,173,12)" fg:x="392" fg:w="1"/><text x="31.7613%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.5113%" y="421" width="0.0804%" height="15" fill="rgb(218,26,35)" fg:x="392" fg:w="1"/><text x="31.7613%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.5113%" y="405" width="0.0804%" height="15" fill="rgb(220,200,19)" fg:x="392" fg:w="1"/><text x="31.7613%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.5113%" y="389" width="0.0804%" height="15" fill="rgb(239,95,49)" fg:x="392" fg:w="1"/><text x="31.7613%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.5113%" y="373" width="0.0804%" height="15" fill="rgb(235,85,53)" fg:x="392" fg:w="1"/><text x="31.7613%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.5113%" y="357" width="0.0804%" height="15" fill="rgb(233,133,31)" fg:x="392" fg:w="1"/><text x="31.7613%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.5113%" y="341" width="0.0804%" height="15" fill="rgb(218,25,20)" fg:x="392" fg:w="1"/><text x="31.7613%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.5113%" y="325" width="0.0804%" height="15" fill="rgb(252,210,38)" fg:x="392" fg:w="1"/><text x="31.7613%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.5113%" y="309" width="0.0804%" height="15" fill="rgb(242,134,21)" fg:x="392" fg:w="1"/><text x="31.7613%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.5113%" y="293" width="0.0804%" height="15" fill="rgb(213,28,48)" fg:x="392" fg:w="1"/><text x="31.7613%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.5113%" y="277" width="0.0804%" height="15" fill="rgb(250,196,2)" fg:x="392" fg:w="1"/><text x="31.7613%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5113%" y="261" width="0.0804%" height="15" fill="rgb(227,5,17)" fg:x="392" fg:w="1"/><text x="31.7613%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="31.5113%" y="517" width="0.1608%" height="15" fill="rgb(221,226,24)" fg:x="392" fg:w="2"/><text x="31.7613%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="31.5113%" y="501" width="0.1608%" height="15" fill="rgb(211,5,48)" fg:x="392" fg:w="2"/><text x="31.7613%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5916%" y="485" width="0.0804%" height="15" fill="rgb(219,150,6)" fg:x="393" fg:w="1"/><text x="31.8416%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5916%" y="469" width="0.0804%" height="15" fill="rgb(251,46,16)" fg:x="393" fg:w="1"/><text x="31.8416%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5916%" y="453" width="0.0804%" height="15" fill="rgb(220,204,40)" fg:x="393" fg:w="1"/><text x="31.8416%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.5916%" y="437" width="0.0804%" height="15" fill="rgb(211,85,2)" fg:x="393" fg:w="1"/><text x="31.8416%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5916%" y="421" width="0.0804%" height="15" fill="rgb(229,17,7)" fg:x="393" fg:w="1"/><text x="31.8416%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.5916%" y="405" width="0.0804%" height="15" fill="rgb(239,72,28)" fg:x="393" fg:w="1"/><text x="31.8416%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5916%" y="389" width="0.0804%" height="15" fill="rgb(230,47,54)" fg:x="393" fg:w="1"/><text x="31.8416%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5916%" y="373" width="0.0804%" height="15" fill="rgb(214,50,8)" fg:x="393" fg:w="1"/><text x="31.8416%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="31.5113%" y="533" width="0.2412%" height="15" fill="rgb(216,198,43)" fg:x="392" fg:w="3"/><text x="31.7613%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6720%" y="517" width="0.0804%" height="15" fill="rgb(234,20,35)" fg:x="394" fg:w="1"/><text x="31.9220%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.6720%" y="501" width="0.0804%" height="15" fill="rgb(254,45,19)" fg:x="394" fg:w="1"/><text x="31.9220%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.6720%" y="485" width="0.0804%" height="15" fill="rgb(219,14,44)" fg:x="394" fg:w="1"/><text x="31.9220%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="31.6720%" y="469" width="0.0804%" height="15" fill="rgb(217,220,26)" fg:x="394" fg:w="1"/><text x="31.9220%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6720%" y="453" width="0.0804%" height="15" fill="rgb(213,158,28)" fg:x="394" fg:w="1"/><text x="31.9220%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6720%" y="437" width="0.0804%" height="15" fill="rgb(252,51,52)" fg:x="394" fg:w="1"/><text x="31.9220%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6720%" y="421" width="0.0804%" height="15" fill="rgb(246,89,16)" fg:x="394" fg:w="1"/><text x="31.9220%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6720%" y="405" width="0.0804%" height="15" fill="rgb(216,158,49)" fg:x="394" fg:w="1"/><text x="31.9220%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="31.6720%" y="389" width="0.0804%" height="15" fill="rgb(236,107,19)" fg:x="394" fg:w="1"/><text x="31.9220%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="31.6720%" y="373" width="0.0804%" height="15" fill="rgb(228,185,30)" fg:x="394" fg:w="1"/><text x="31.9220%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7524%" y="517" width="0.0804%" height="15" fill="rgb(246,134,8)" fg:x="395" fg:w="1"/><text x="32.0024%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.7524%" y="501" width="0.0804%" height="15" fill="rgb(214,143,50)" fg:x="395" fg:w="1"/><text x="32.0024%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.7524%" y="485" width="0.0804%" height="15" fill="rgb(228,75,8)" fg:x="395" fg:w="1"/><text x="32.0024%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.7524%" y="469" width="0.0804%" height="15" fill="rgb(207,175,4)" fg:x="395" fg:w="1"/><text x="32.0024%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.7524%" y="453" width="0.0804%" height="15" fill="rgb(205,108,24)" fg:x="395" fg:w="1"/><text x="32.0024%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.7524%" y="437" width="0.0804%" height="15" fill="rgb(244,120,49)" fg:x="395" fg:w="1"/><text x="32.0024%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.7524%" y="421" width="0.0804%" height="15" fill="rgb(223,47,38)" fg:x="395" fg:w="1"/><text x="32.0024%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.8328%" y="517" width="0.0804%" height="15" fill="rgb(229,179,11)" fg:x="396" fg:w="1"/><text x="32.0828%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.8328%" y="501" width="0.0804%" height="15" fill="rgb(231,122,1)" fg:x="396" fg:w="1"/><text x="32.0828%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.8328%" y="485" width="0.0804%" height="15" fill="rgb(245,119,9)" fg:x="396" fg:w="1"/><text x="32.0828%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.8328%" y="469" width="0.0804%" height="15" fill="rgb(241,163,25)" fg:x="396" fg:w="1"/><text x="32.0828%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.8328%" y="453" width="0.0804%" height="15" fill="rgb(217,214,3)" fg:x="396" fg:w="1"/><text x="32.0828%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9132%" y="485" width="0.0804%" height="15" fill="rgb(240,86,28)" fg:x="397" fg:w="1"/><text x="32.1632%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9132%" y="469" width="0.0804%" height="15" fill="rgb(215,47,9)" fg:x="397" fg:w="1"/><text x="32.1632%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.9132%" y="453" width="0.0804%" height="15" fill="rgb(252,25,45)" fg:x="397" fg:w="1"/><text x="32.1632%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9132%" y="437" width="0.0804%" height="15" fill="rgb(251,164,9)" fg:x="397" fg:w="1"/><text x="32.1632%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="31.7524%" y="533" width="0.4019%" height="15" fill="rgb(233,194,0)" fg:x="395" fg:w="5"/><text x="32.0024%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="31.9132%" y="517" width="0.2412%" height="15" fill="rgb(249,111,24)" fg:x="397" fg:w="3"/><text x="32.1632%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.9132%" y="501" width="0.2412%" height="15" fill="rgb(250,223,3)" fg:x="397" fg:w="3"/><text x="32.1632%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.9936%" y="485" width="0.1608%" height="15" fill="rgb(236,178,37)" fg:x="398" fg:w="2"/><text x="32.2436%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9936%" y="469" width="0.1608%" height="15" fill="rgb(241,158,50)" fg:x="398" fg:w="2"/><text x="32.2436%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="31.9936%" y="453" width="0.1608%" height="15" fill="rgb(213,121,41)" fg:x="398" fg:w="2"/><text x="32.2436%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9936%" y="437" width="0.1608%" height="15" fill="rgb(240,92,3)" fg:x="398" fg:w="2"/><text x="32.2436%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.9936%" y="421" width="0.1608%" height="15" fill="rgb(205,123,3)" fg:x="398" fg:w="2"/><text x="32.2436%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.9936%" y="405" width="0.1608%" height="15" fill="rgb(205,97,47)" fg:x="398" fg:w="2"/><text x="32.2436%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.1543%" y="501" width="0.0804%" height="15" fill="rgb(247,152,14)" fg:x="400" fg:w="1"/><text x="32.4043%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.1543%" y="485" width="0.0804%" height="15" fill="rgb(248,195,53)" fg:x="400" fg:w="1"/><text x="32.4043%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1543%" y="469" width="0.0804%" height="15" fill="rgb(226,201,16)" fg:x="400" fg:w="1"/><text x="32.4043%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1543%" y="453" width="0.0804%" height="15" fill="rgb(205,98,0)" fg:x="400" fg:w="1"/><text x="32.4043%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.2347%" y="485" width="0.0804%" height="15" fill="rgb(214,191,48)" fg:x="401" fg:w="1"/><text x="32.4847%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.2347%" y="469" width="0.0804%" height="15" fill="rgb(237,112,39)" fg:x="401" fg:w="1"/><text x="32.4847%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3151%" y="469" width="0.0804%" height="15" fill="rgb(247,203,27)" fg:x="402" fg:w="1"/><text x="32.5651%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3151%" y="453" width="0.0804%" height="15" fill="rgb(235,124,28)" fg:x="402" fg:w="1"/><text x="32.5651%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3151%" y="437" width="0.0804%" height="15" fill="rgb(208,207,46)" fg:x="402" fg:w="1"/><text x="32.5651%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3151%" y="421" width="0.0804%" height="15" fill="rgb(234,176,4)" fg:x="402" fg:w="1"/><text x="32.5651%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3151%" y="405" width="0.0804%" height="15" fill="rgb(230,133,28)" fg:x="402" fg:w="1"/><text x="32.5651%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3151%" y="389" width="0.0804%" height="15" fill="rgb(211,137,40)" fg:x="402" fg:w="1"/><text x="32.5651%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3151%" y="373" width="0.0804%" height="15" fill="rgb(254,35,13)" fg:x="402" fg:w="1"/><text x="32.5651%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3151%" y="357" width="0.0804%" height="15" fill="rgb(225,49,51)" fg:x="402" fg:w="1"/><text x="32.5651%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3151%" y="341" width="0.0804%" height="15" fill="rgb(251,10,15)" fg:x="402" fg:w="1"/><text x="32.5651%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.3151%" y="325" width="0.0804%" height="15" fill="rgb(228,207,15)" fg:x="402" fg:w="1"/><text x="32.5651%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.3151%" y="309" width="0.0804%" height="15" fill="rgb(241,99,19)" fg:x="402" fg:w="1"/><text x="32.5651%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.3151%" y="293" width="0.0804%" height="15" fill="rgb(207,104,49)" fg:x="402" fg:w="1"/><text x="32.5651%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.3151%" y="277" width="0.0804%" height="15" fill="rgb(234,99,18)" fg:x="402" fg:w="1"/><text x="32.5651%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3151%" y="261" width="0.0804%" height="15" fill="rgb(213,191,49)" fg:x="402" fg:w="1"/><text x="32.5651%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.3955%" y="405" width="0.0804%" height="15" fill="rgb(210,226,19)" fg:x="403" fg:w="1"/><text x="32.6455%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.13%)</title><rect x="31.4309%" y="549" width="1.1254%" height="15" fill="rgb(229,97,18)" fg:x="391" fg:w="14"/><text x="31.6809%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="32.1543%" y="533" width="0.4019%" height="15" fill="rgb(211,167,15)" fg:x="400" fg:w="5"/><text x="32.4043%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="32.1543%" y="517" width="0.4019%" height="15" fill="rgb(210,169,34)" fg:x="400" fg:w="5"/><text x="32.4043%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="32.2347%" y="501" width="0.3215%" height="15" fill="rgb(241,121,31)" fg:x="401" fg:w="4"/><text x="32.4847%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.3151%" y="485" width="0.2412%" height="15" fill="rgb(232,40,11)" fg:x="402" fg:w="3"/><text x="32.5651%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.3955%" y="469" width="0.1608%" height="15" fill="rgb(205,86,26)" fg:x="403" fg:w="2"/><text x="32.6455%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3955%" y="453" width="0.1608%" height="15" fill="rgb(231,126,28)" fg:x="403" fg:w="2"/><text x="32.6455%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.3955%" y="437" width="0.1608%" height="15" fill="rgb(219,221,18)" fg:x="403" fg:w="2"/><text x="32.6455%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.3955%" y="421" width="0.1608%" height="15" fill="rgb(211,40,0)" fg:x="403" fg:w="2"/><text x="32.6455%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4759%" y="405" width="0.0804%" height="15" fill="rgb(239,85,43)" fg:x="404" fg:w="1"/><text x="32.7259%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4759%" y="389" width="0.0804%" height="15" fill="rgb(231,55,21)" fg:x="404" fg:w="1"/><text x="32.7259%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4759%" y="373" width="0.0804%" height="15" fill="rgb(225,184,43)" fg:x="404" fg:w="1"/><text x="32.7259%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.29%)</title><rect x="31.4309%" y="565" width="1.2862%" height="15" fill="rgb(251,158,41)" fg:x="391" fg:w="16"/><text x="31.6809%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.5563%" y="549" width="0.1608%" height="15" fill="rgb(234,159,37)" fg:x="405" fg:w="2"/><text x="32.8063%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.6367%" y="533" width="0.0804%" height="15" fill="rgb(216,204,22)" fg:x="406" fg:w="1"/><text x="32.8867%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.6367%" y="517" width="0.0804%" height="15" fill="rgb(214,17,3)" fg:x="406" fg:w="1"/><text x="32.8867%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6367%" y="501" width="0.0804%" height="15" fill="rgb(212,111,17)" fg:x="406" fg:w="1"/><text x="32.8867%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.6367%" y="485" width="0.0804%" height="15" fill="rgb(221,157,24)" fg:x="406" fg:w="1"/><text x="32.8867%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6367%" y="469" width="0.0804%" height="15" fill="rgb(252,16,13)" fg:x="406" fg:w="1"/><text x="32.8867%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6367%" y="453" width="0.0804%" height="15" fill="rgb(221,62,2)" fg:x="406" fg:w="1"/><text x="32.8867%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6367%" y="437" width="0.0804%" height="15" fill="rgb(247,87,22)" fg:x="406" fg:w="1"/><text x="32.8867%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.61%)</title><rect x="31.1897%" y="597" width="1.6077%" height="15" fill="rgb(215,73,9)" fg:x="388" fg:w="20"/><text x="31.4397%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="31.1897%" y="581" width="1.6077%" height="15" fill="rgb(207,175,33)" fg:x="388" fg:w="20"/><text x="31.4397%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="32.7170%" y="565" width="0.0804%" height="15" fill="rgb(243,129,54)" fg:x="407" fg:w="1"/><text x="32.9670%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.7170%" y="549" width="0.0804%" height="15" fill="rgb(227,119,45)" fg:x="407" fg:w="1"/><text x="32.9670%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="32.7170%" y="533" width="0.0804%" height="15" fill="rgb(205,109,36)" fg:x="407" fg:w="1"/><text x="32.9670%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7170%" y="517" width="0.0804%" height="15" fill="rgb(205,6,39)" fg:x="407" fg:w="1"/><text x="32.9670%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.7170%" y="501" width="0.0804%" height="15" fill="rgb(221,32,16)" fg:x="407" fg:w="1"/><text x="32.9670%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.7170%" y="485" width="0.0804%" height="15" fill="rgb(228,144,50)" fg:x="407" fg:w="1"/><text x="32.9670%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="32.7974%" y="581" width="0.0804%" height="15" fill="rgb(229,201,53)" fg:x="408" fg:w="1"/><text x="33.0474%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.7974%" y="565" width="0.0804%" height="15" fill="rgb(249,153,27)" fg:x="408" fg:w="1"/><text x="33.0474%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.7974%" y="549" width="0.0804%" height="15" fill="rgb(227,106,25)" fg:x="408" fg:w="1"/><text x="33.0474%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.7974%" y="533" width="0.0804%" height="15" fill="rgb(230,65,29)" fg:x="408" fg:w="1"/><text x="33.0474%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8778%" y="565" width="0.0804%" height="15" fill="rgb(221,57,46)" fg:x="409" fg:w="1"/><text x="33.1278%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8778%" y="549" width="0.0804%" height="15" fill="rgb(229,161,17)" fg:x="409" fg:w="1"/><text x="33.1278%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.8778%" y="533" width="0.0804%" height="15" fill="rgb(222,213,11)" fg:x="409" fg:w="1"/><text x="33.1278%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.8778%" y="517" width="0.0804%" height="15" fill="rgb(235,35,13)" fg:x="409" fg:w="1"/><text x="33.1278%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.8778%" y="501" width="0.0804%" height="15" fill="rgb(233,158,34)" fg:x="409" fg:w="1"/><text x="33.1278%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8778%" y="485" width="0.0804%" height="15" fill="rgb(215,151,48)" fg:x="409" fg:w="1"/><text x="33.1278%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8778%" y="469" width="0.0804%" height="15" fill="rgb(229,84,14)" fg:x="409" fg:w="1"/><text x="33.1278%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.1190%" y="549" width="0.0804%" height="15" fill="rgb(229,68,14)" fg:x="412" fg:w="1"/><text x="33.3690%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="33.1190%" y="533" width="0.0804%" height="15" fill="rgb(243,106,26)" fg:x="412" fg:w="1"/><text x="33.3690%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.1190%" y="517" width="0.0804%" height="15" fill="rgb(206,45,38)" fg:x="412" fg:w="1"/><text x="33.3690%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1994%" y="517" width="0.0804%" height="15" fill="rgb(226,6,15)" fg:x="413" fg:w="1"/><text x="33.4494%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1994%" y="501" width="0.0804%" height="15" fill="rgb(232,22,54)" fg:x="413" fg:w="1"/><text x="33.4494%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.1994%" y="485" width="0.0804%" height="15" fill="rgb(229,222,32)" fg:x="413" fg:w="1"/><text x="33.4494%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.1994%" y="469" width="0.0804%" height="15" fill="rgb(228,62,29)" fg:x="413" fg:w="1"/><text x="33.4494%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.1994%" y="453" width="0.0804%" height="15" fill="rgb(251,103,34)" fg:x="413" fg:w="1"/><text x="33.4494%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.1994%" y="437" width="0.0804%" height="15" fill="rgb(233,12,30)" fg:x="413" fg:w="1"/><text x="33.4494%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.1994%" y="421" width="0.0804%" height="15" fill="rgb(238,52,0)" fg:x="413" fg:w="1"/><text x="33.4494%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2797%" y="485" width="0.0804%" height="15" fill="rgb(223,98,5)" fg:x="414" fg:w="1"/><text x="33.5297%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.3601%" y="437" width="0.0804%" height="15" fill="rgb(228,75,37)" fg:x="415" fg:w="1"/><text x="33.6101%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="33.1994%" y="533" width="0.3215%" height="15" fill="rgb(205,115,49)" fg:x="413" fg:w="4"/><text x="33.4494%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="33.2797%" y="517" width="0.2412%" height="15" fill="rgb(250,154,43)" fg:x="414" fg:w="3"/><text x="33.5297%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="33.2797%" y="501" width="0.2412%" height="15" fill="rgb(226,43,29)" fg:x="414" fg:w="3"/><text x="33.5297%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.3601%" y="485" width="0.1608%" height="15" fill="rgb(249,228,39)" fg:x="415" fg:w="2"/><text x="33.6101%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="33.3601%" y="469" width="0.1608%" height="15" fill="rgb(216,79,43)" fg:x="415" fg:w="2"/><text x="33.6101%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.3601%" y="453" width="0.1608%" height="15" fill="rgb(228,95,12)" fg:x="415" fg:w="2"/><text x="33.6101%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.4405%" y="437" width="0.0804%" height="15" fill="rgb(249,221,15)" fg:x="416" fg:w="1"/><text x="33.6905%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4405%" y="421" width="0.0804%" height="15" fill="rgb(233,34,13)" fg:x="416" fg:w="1"/><text x="33.6905%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.5209%" y="501" width="0.0804%" height="15" fill="rgb(214,103,39)" fg:x="417" fg:w="1"/><text x="33.7709%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="33.1994%" y="549" width="0.4823%" height="15" fill="rgb(251,126,39)" fg:x="413" fg:w="6"/><text x="33.4494%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="33.5209%" y="533" width="0.1608%" height="15" fill="rgb(214,216,36)" fg:x="417" fg:w="2"/><text x="33.7709%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.5209%" y="517" width="0.1608%" height="15" fill="rgb(220,221,8)" fg:x="417" fg:w="2"/><text x="33.7709%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.6013%" y="501" width="0.0804%" height="15" fill="rgb(240,216,3)" fg:x="418" fg:w="1"/><text x="33.8513%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="33.6013%" y="485" width="0.0804%" height="15" fill="rgb(232,218,17)" fg:x="418" fg:w="1"/><text x="33.8513%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.6013%" y="469" width="0.0804%" height="15" fill="rgb(229,163,45)" fg:x="418" fg:w="1"/><text x="33.8513%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6013%" y="453" width="0.0804%" height="15" fill="rgb(231,110,42)" fg:x="418" fg:w="1"/><text x="33.8513%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="33.6013%" y="437" width="0.0804%" height="15" fill="rgb(208,170,48)" fg:x="418" fg:w="1"/><text x="33.8513%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="33.6013%" y="421" width="0.0804%" height="15" fill="rgb(239,116,25)" fg:x="418" fg:w="1"/><text x="33.8513%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="32.9582%" y="565" width="0.8039%" height="15" fill="rgb(219,200,50)" fg:x="410" fg:w="10"/><text x="33.2082%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="33.6817%" y="549" width="0.0804%" height="15" fill="rgb(245,200,0)" fg:x="419" fg:w="1"/><text x="33.9317%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="33.6817%" y="533" width="0.0804%" height="15" fill="rgb(245,119,33)" fg:x="419" fg:w="1"/><text x="33.9317%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.6817%" y="517" width="0.0804%" height="15" fill="rgb(231,125,12)" fg:x="419" fg:w="1"/><text x="33.9317%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6817%" y="501" width="0.0804%" height="15" fill="rgb(216,96,41)" fg:x="419" fg:w="1"/><text x="33.9317%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6817%" y="485" width="0.0804%" height="15" fill="rgb(248,43,45)" fg:x="419" fg:w="1"/><text x="33.9317%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.6817%" y="469" width="0.0804%" height="15" fill="rgb(217,222,7)" fg:x="419" fg:w="1"/><text x="33.9317%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6817%" y="453" width="0.0804%" height="15" fill="rgb(233,28,6)" fg:x="419" fg:w="1"/><text x="33.9317%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6817%" y="437" width="0.0804%" height="15" fill="rgb(231,218,15)" fg:x="419" fg:w="1"/><text x="33.9317%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6817%" y="421" width="0.0804%" height="15" fill="rgb(226,171,48)" fg:x="419" fg:w="1"/><text x="33.9317%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6817%" y="405" width="0.0804%" height="15" fill="rgb(235,201,9)" fg:x="419" fg:w="1"/><text x="33.9317%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6817%" y="389" width="0.0804%" height="15" fill="rgb(217,80,15)" fg:x="419" fg:w="1"/><text x="33.9317%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6817%" y="373" width="0.0804%" height="15" fill="rgb(219,152,8)" fg:x="419" fg:w="1"/><text x="33.9317%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6817%" y="357" width="0.0804%" height="15" fill="rgb(243,107,38)" fg:x="419" fg:w="1"/><text x="33.9317%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6817%" y="341" width="0.0804%" height="15" fill="rgb(231,17,5)" fg:x="419" fg:w="1"/><text x="33.9317%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6817%" y="325" width="0.0804%" height="15" fill="rgb(209,25,54)" fg:x="419" fg:w="1"/><text x="33.9317%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6817%" y="309" width="0.0804%" height="15" fill="rgb(219,0,2)" fg:x="419" fg:w="1"/><text x="33.9317%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6817%" y="293" width="0.0804%" height="15" fill="rgb(246,9,5)" fg:x="419" fg:w="1"/><text x="33.9317%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6817%" y="277" width="0.0804%" height="15" fill="rgb(226,159,4)" fg:x="419" fg:w="1"/><text x="33.9317%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.96%)</title><rect x="32.8778%" y="581" width="0.9646%" height="15" fill="rgb(219,175,34)" fg:x="409" fg:w="12"/><text x="33.1278%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.7621%" y="565" width="0.0804%" height="15" fill="rgb(236,10,46)" fg:x="420" fg:w="1"/><text x="34.0121%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.7621%" y="549" width="0.0804%" height="15" fill="rgb(240,211,16)" fg:x="420" fg:w="1"/><text x="34.0121%" y="559.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (344 samples, 27.65%)</title><rect x="6.4309%" y="613" width="27.6527%" height="15" fill="rgb(205,3,43)" fg:x="80" fg:w="344"/><text x="6.6809%" y="623.50">&lt;tests::HoldingKeyInVessel as tests::WorldFi..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (16 samples, 1.29%)</title><rect x="32.7974%" y="597" width="1.2862%" height="15" fill="rgb(245,7,22)" fg:x="408" fg:w="16"/><text x="33.0474%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="33.8424%" y="581" width="0.2412%" height="15" fill="rgb(239,132,32)" fg:x="421" fg:w="3"/><text x="34.0924%" y="591.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="34.0032%" y="565" width="0.0804%" height="15" fill="rgb(228,202,34)" fg:x="423" fg:w="1"/><text x="34.2532%" y="575.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="34.0032%" y="549" width="0.0804%" height="15" fill="rgb(254,200,22)" fg:x="423" fg:w="1"/><text x="34.2532%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0032%" y="533" width="0.0804%" height="15" fill="rgb(219,10,39)" fg:x="423" fg:w="1"/><text x="34.2532%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="34.0836%" y="613" width="0.0804%" height="15" fill="rgb(226,210,39)" fg:x="424" fg:w="1"/><text x="34.3336%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0836%" y="597" width="0.0804%" height="15" fill="rgb(208,219,16)" fg:x="424" fg:w="1"/><text x="34.3336%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="34.1640%" y="597" width="0.0804%" height="15" fill="rgb(216,158,51)" fg:x="425" fg:w="1"/><text x="34.4140%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.2444%" y="597" width="0.0804%" height="15" fill="rgb(233,14,44)" fg:x="426" fg:w="1"/><text x="34.4944%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.2444%" y="581" width="0.0804%" height="15" fill="rgb(237,97,39)" fg:x="426" fg:w="1"/><text x="34.4944%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.2444%" y="565" width="0.0804%" height="15" fill="rgb(218,198,43)" fg:x="426" fg:w="1"/><text x="34.4944%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.2444%" y="549" width="0.0804%" height="15" fill="rgb(231,104,20)" fg:x="426" fg:w="1"/><text x="34.4944%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.2444%" y="533" width="0.0804%" height="15" fill="rgb(254,36,13)" fg:x="426" fg:w="1"/><text x="34.4944%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="34.2444%" y="517" width="0.0804%" height="15" fill="rgb(248,14,50)" fg:x="426" fg:w="1"/><text x="34.4944%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="34.2444%" y="501" width="0.0804%" height="15" fill="rgb(217,107,29)" fg:x="426" fg:w="1"/><text x="34.4944%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.2444%" y="485" width="0.0804%" height="15" fill="rgb(251,169,33)" fg:x="426" fg:w="1"/><text x="34.4944%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.2444%" y="469" width="0.0804%" height="15" fill="rgb(217,108,32)" fg:x="426" fg:w="1"/><text x="34.4944%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.2444%" y="453" width="0.0804%" height="15" fill="rgb(219,66,42)" fg:x="426" fg:w="1"/><text x="34.4944%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.2444%" y="437" width="0.0804%" height="15" fill="rgb(206,180,7)" fg:x="426" fg:w="1"/><text x="34.4944%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="34.2444%" y="421" width="0.0804%" height="15" fill="rgb(208,226,31)" fg:x="426" fg:w="1"/><text x="34.4944%" y="431.50"></text></g><g><title>core::fmt::Formatter::sign_plus (1 samples, 0.08%)</title><rect x="34.2444%" y="405" width="0.0804%" height="15" fill="rgb(218,26,49)" fg:x="426" fg:w="1"/><text x="34.4944%" y="415.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="34.3248%" y="597" width="0.0804%" height="15" fill="rgb(233,197,48)" fg:x="427" fg:w="1"/><text x="34.5748%" y="607.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="34.3248%" y="581" width="0.0804%" height="15" fill="rgb(252,181,51)" fg:x="427" fg:w="1"/><text x="34.5748%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.4051%" y="565" width="0.1608%" height="15" fill="rgb(253,90,19)" fg:x="428" fg:w="2"/><text x="34.6551%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.4855%" y="549" width="0.0804%" height="15" fill="rgb(215,171,30)" fg:x="429" fg:w="1"/><text x="34.7355%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.5659%" y="565" width="0.1608%" height="15" fill="rgb(214,222,9)" fg:x="430" fg:w="2"/><text x="34.8159%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="34.6463%" y="549" width="0.0804%" height="15" fill="rgb(223,3,22)" fg:x="431" fg:w="1"/><text x="34.8963%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="34.6463%" y="533" width="0.0804%" height="15" fill="rgb(225,196,46)" fg:x="431" fg:w="1"/><text x="34.8963%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6463%" y="517" width="0.0804%" height="15" fill="rgb(209,110,37)" fg:x="431" fg:w="1"/><text x="34.8963%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.6463%" y="501" width="0.0804%" height="15" fill="rgb(249,89,12)" fg:x="431" fg:w="1"/><text x="34.8963%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.6463%" y="485" width="0.0804%" height="15" fill="rgb(226,27,33)" fg:x="431" fg:w="1"/><text x="34.8963%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.6463%" y="469" width="0.0804%" height="15" fill="rgb(213,82,22)" fg:x="431" fg:w="1"/><text x="34.8963%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.6463%" y="453" width="0.0804%" height="15" fill="rgb(248,140,0)" fg:x="431" fg:w="1"/><text x="34.8963%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6463%" y="437" width="0.0804%" height="15" fill="rgb(228,106,3)" fg:x="431" fg:w="1"/><text x="34.8963%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.6463%" y="421" width="0.0804%" height="15" fill="rgb(209,23,37)" fg:x="431" fg:w="1"/><text x="34.8963%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.6463%" y="405" width="0.0804%" height="15" fill="rgb(241,93,50)" fg:x="431" fg:w="1"/><text x="34.8963%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.6463%" y="389" width="0.0804%" height="15" fill="rgb(253,46,43)" fg:x="431" fg:w="1"/><text x="34.8963%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.6463%" y="373" width="0.0804%" height="15" fill="rgb(226,206,43)" fg:x="431" fg:w="1"/><text x="34.8963%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.6463%" y="357" width="0.0804%" height="15" fill="rgb(217,54,7)" fg:x="431" fg:w="1"/><text x="34.8963%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.6463%" y="341" width="0.0804%" height="15" fill="rgb(223,5,52)" fg:x="431" fg:w="1"/><text x="34.8963%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.9678%" y="485" width="0.1608%" height="15" fill="rgb(206,52,46)" fg:x="435" fg:w="2"/><text x="35.2178%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="34.9678%" y="501" width="0.2412%" height="15" fill="rgb(253,136,11)" fg:x="435" fg:w="3"/><text x="35.2178%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.1286%" y="485" width="0.0804%" height="15" fill="rgb(208,106,33)" fg:x="437" fg:w="1"/><text x="35.3786%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.2894%" y="485" width="0.0804%" height="15" fill="rgb(206,54,4)" fg:x="439" fg:w="1"/><text x="35.5394%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.2894%" y="469" width="0.0804%" height="15" fill="rgb(213,3,15)" fg:x="439" fg:w="1"/><text x="35.5394%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.3698%" y="485" width="0.1608%" height="15" fill="rgb(252,211,39)" fg:x="440" fg:w="2"/><text x="35.6198%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.3698%" y="469" width="0.1608%" height="15" fill="rgb(223,6,36)" fg:x="440" fg:w="2"/><text x="35.6198%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.4502%" y="453" width="0.0804%" height="15" fill="rgb(252,169,45)" fg:x="441" fg:w="1"/><text x="35.7002%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.4502%" y="437" width="0.0804%" height="15" fill="rgb(212,48,26)" fg:x="441" fg:w="1"/><text x="35.7002%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.6109%" y="437" width="0.0804%" height="15" fill="rgb(251,102,48)" fg:x="443" fg:w="1"/><text x="35.8609%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.6109%" y="421" width="0.0804%" height="15" fill="rgb(243,208,16)" fg:x="443" fg:w="1"/><text x="35.8609%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.6109%" y="405" width="0.0804%" height="15" fill="rgb(219,96,24)" fg:x="443" fg:w="1"/><text x="35.8609%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6109%" y="389" width="0.0804%" height="15" fill="rgb(219,33,29)" fg:x="443" fg:w="1"/><text x="35.8609%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="35.6913%" y="437" width="0.1608%" height="15" fill="rgb(223,176,5)" fg:x="444" fg:w="2"/><text x="35.9413%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.7717%" y="421" width="0.0804%" height="15" fill="rgb(228,140,14)" fg:x="445" fg:w="1"/><text x="36.0217%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.7717%" y="405" width="0.0804%" height="15" fill="rgb(217,179,31)" fg:x="445" fg:w="1"/><text x="36.0217%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="35.6109%" y="469" width="0.3215%" height="15" fill="rgb(230,9,30)" fg:x="443" fg:w="4"/><text x="35.8609%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="35.6109%" y="453" width="0.3215%" height="15" fill="rgb(230,136,20)" fg:x="443" fg:w="4"/><text x="35.8609%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.8521%" y="437" width="0.0804%" height="15" fill="rgb(215,210,22)" fg:x="446" fg:w="1"/><text x="36.1021%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.9325%" y="469" width="0.1608%" height="15" fill="rgb(218,43,5)" fg:x="447" fg:w="2"/><text x="36.1825%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.9325%" y="453" width="0.1608%" height="15" fill="rgb(216,11,5)" fg:x="447" fg:w="2"/><text x="36.1825%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.0129%" y="437" width="0.0804%" height="15" fill="rgb(209,82,29)" fg:x="448" fg:w="1"/><text x="36.2629%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0129%" y="421" width="0.0804%" height="15" fill="rgb(244,115,12)" fg:x="448" fg:w="1"/><text x="36.2629%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.0129%" y="405" width="0.0804%" height="15" fill="rgb(222,82,18)" fg:x="448" fg:w="1"/><text x="36.2629%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.0129%" y="389" width="0.0804%" height="15" fill="rgb(249,227,8)" fg:x="448" fg:w="1"/><text x="36.2629%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.0129%" y="373" width="0.0804%" height="15" fill="rgb(253,141,45)" fg:x="448" fg:w="1"/><text x="36.2629%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.1736%" y="453" width="0.0804%" height="15" fill="rgb(234,184,4)" fg:x="450" fg:w="1"/><text x="36.4236%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.1736%" y="437" width="0.0804%" height="15" fill="rgb(218,194,23)" fg:x="450" fg:w="1"/><text x="36.4236%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.1736%" y="421" width="0.0804%" height="15" fill="rgb(235,66,41)" fg:x="450" fg:w="1"/><text x="36.4236%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.1736%" y="405" width="0.0804%" height="15" fill="rgb(245,217,1)" fg:x="450" fg:w="1"/><text x="36.4236%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2540%" y="389" width="0.0804%" height="15" fill="rgb(229,91,1)" fg:x="451" fg:w="1"/><text x="36.5040%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.2540%" y="437" width="0.1608%" height="15" fill="rgb(207,101,30)" fg:x="451" fg:w="2"/><text x="36.5040%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.2540%" y="421" width="0.1608%" height="15" fill="rgb(223,82,49)" fg:x="451" fg:w="2"/><text x="36.5040%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.2540%" y="405" width="0.1608%" height="15" fill="rgb(218,167,17)" fg:x="451" fg:w="2"/><text x="36.5040%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="36.3344%" y="389" width="0.0804%" height="15" fill="rgb(208,103,14)" fg:x="452" fg:w="1"/><text x="36.5844%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="36.0932%" y="469" width="0.4019%" height="15" fill="rgb(238,20,8)" fg:x="449" fg:w="5"/><text x="36.3432%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="36.2540%" y="453" width="0.2412%" height="15" fill="rgb(218,80,54)" fg:x="451" fg:w="3"/><text x="36.5040%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.4148%" y="437" width="0.0804%" height="15" fill="rgb(240,144,17)" fg:x="453" fg:w="1"/><text x="36.6648%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.4148%" y="421" width="0.0804%" height="15" fill="rgb(245,27,50)" fg:x="453" fg:w="1"/><text x="36.6648%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.4148%" y="405" width="0.0804%" height="15" fill="rgb(251,51,7)" fg:x="453" fg:w="1"/><text x="36.6648%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="35.5305%" y="485" width="1.0450%" height="15" fill="rgb(245,217,29)" fg:x="442" fg:w="13"/><text x="35.7805%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.4952%" y="469" width="0.0804%" height="15" fill="rgb(221,176,29)" fg:x="454" fg:w="1"/><text x="36.7452%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.4952%" y="453" width="0.0804%" height="15" fill="rgb(212,180,24)" fg:x="454" fg:w="1"/><text x="36.7452%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (24 samples, 1.93%)</title><rect x="34.9678%" y="517" width="1.9293%" height="15" fill="rgb(254,24,2)" fg:x="435" fg:w="24"/><text x="35.2178%" y="527.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="35.2090%" y="501" width="1.6881%" height="15" fill="rgb(230,100,2)" fg:x="438" fg:w="21"/><text x="35.4590%" y="511.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="36.5756%" y="485" width="0.3215%" height="15" fill="rgb(219,142,25)" fg:x="455" fg:w="4"/><text x="36.8256%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="36.5756%" y="469" width="0.3215%" height="15" fill="rgb(240,73,43)" fg:x="455" fg:w="4"/><text x="36.8256%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="36.5756%" y="453" width="0.3215%" height="15" fill="rgb(214,114,15)" fg:x="455" fg:w="4"/><text x="36.8256%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.7363%" y="437" width="0.1608%" height="15" fill="rgb(207,130,4)" fg:x="457" fg:w="2"/><text x="36.9863%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="36.7363%" y="421" width="0.1608%" height="15" fill="rgb(221,25,40)" fg:x="457" fg:w="2"/><text x="36.9863%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="36.7363%" y="405" width="0.1608%" height="15" fill="rgb(241,184,7)" fg:x="457" fg:w="2"/><text x="36.9863%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9775%" y="485" width="0.0804%" height="15" fill="rgb(235,159,4)" fg:x="460" fg:w="1"/><text x="37.2275%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.0579%" y="469" width="0.1608%" height="15" fill="rgb(214,87,48)" fg:x="461" fg:w="2"/><text x="37.3079%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.2990%" y="453" width="0.1608%" height="15" fill="rgb(246,198,24)" fg:x="464" fg:w="2"/><text x="37.5490%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3794%" y="437" width="0.0804%" height="15" fill="rgb(209,66,40)" fg:x="465" fg:w="1"/><text x="37.6294%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.4598%" y="437" width="0.0804%" height="15" fill="rgb(233,147,39)" fg:x="466" fg:w="1"/><text x="37.7098%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.5402%" y="437" width="0.1608%" height="15" fill="rgb(231,145,52)" fg:x="467" fg:w="2"/><text x="37.7902%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.6206%" y="421" width="0.0804%" height="15" fill="rgb(206,20,26)" fg:x="468" fg:w="1"/><text x="37.8706%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="37.7010%" y="437" width="0.1608%" height="15" fill="rgb(238,220,4)" fg:x="469" fg:w="2"/><text x="37.9510%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.7010%" y="421" width="0.1608%" height="15" fill="rgb(252,195,42)" fg:x="469" fg:w="2"/><text x="37.9510%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7814%" y="405" width="0.0804%" height="15" fill="rgb(209,10,6)" fg:x="470" fg:w="1"/><text x="38.0314%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.13%)</title><rect x="36.8971%" y="517" width="1.1254%" height="15" fill="rgb(229,3,52)" fg:x="459" fg:w="14"/><text x="37.1471%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.13%)</title><rect x="36.8971%" y="501" width="1.1254%" height="15" fill="rgb(253,49,37)" fg:x="459" fg:w="14"/><text x="37.1471%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="37.0579%" y="485" width="0.9646%" height="15" fill="rgb(240,103,49)" fg:x="461" fg:w="12"/><text x="37.3079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="37.2186%" y="469" width="0.8039%" height="15" fill="rgb(250,182,30)" fg:x="463" fg:w="10"/><text x="37.4686%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="37.4598%" y="453" width="0.5627%" height="15" fill="rgb(248,8,30)" fg:x="466" fg:w="7"/><text x="37.7098%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="37.8617%" y="437" width="0.1608%" height="15" fill="rgb(237,120,30)" fg:x="471" fg:w="2"/><text x="38.1117%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9421%" y="421" width="0.0804%" height="15" fill="rgb(221,146,34)" fg:x="472" fg:w="1"/><text x="38.1921%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1833%" y="469" width="0.0804%" height="15" fill="rgb(242,55,13)" fg:x="475" fg:w="1"/><text x="38.4333%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="38.1833%" y="485" width="0.1608%" height="15" fill="rgb(242,112,31)" fg:x="475" fg:w="2"/><text x="38.4333%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.2637%" y="469" width="0.0804%" height="15" fill="rgb(249,192,27)" fg:x="476" fg:w="1"/><text x="38.5137%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="38.2637%" y="453" width="0.0804%" height="15" fill="rgb(208,204,44)" fg:x="476" fg:w="1"/><text x="38.5137%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.5048%" y="453" width="0.1608%" height="15" fill="rgb(208,93,54)" fg:x="479" fg:w="2"/><text x="38.7548%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="38.6656%" y="453" width="0.3215%" height="15" fill="rgb(242,1,31)" fg:x="481" fg:w="4"/><text x="38.9156%" y="463.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="39.2283%" y="437" width="0.3215%" height="15" fill="rgb(241,83,25)" fg:x="488" fg:w="4"/><text x="39.4783%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="39.5498%" y="437" width="0.2412%" height="15" fill="rgb(205,169,50)" fg:x="492" fg:w="3"/><text x="39.7998%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.6302%" y="421" width="0.1608%" height="15" fill="rgb(239,186,37)" fg:x="493" fg:w="2"/><text x="39.8802%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7910%" y="421" width="0.0804%" height="15" fill="rgb(205,221,10)" fg:x="495" fg:w="1"/><text x="40.0410%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="39.8714%" y="421" width="0.2412%" height="15" fill="rgb(218,196,15)" fg:x="496" fg:w="3"/><text x="40.1214%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0322%" y="405" width="0.0804%" height="15" fill="rgb(218,196,35)" fg:x="498" fg:w="1"/><text x="40.2822%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1929%" y="405" width="0.0804%" height="15" fill="rgb(233,63,24)" fg:x="500" fg:w="1"/><text x="40.4429%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.2733%" y="373" width="0.1608%" height="15" fill="rgb(225,8,4)" fg:x="501" fg:w="2"/><text x="40.5233%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="40.2733%" y="405" width="0.2412%" height="15" fill="rgb(234,105,35)" fg:x="501" fg:w="3"/><text x="40.5233%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="40.2733%" y="389" width="0.2412%" height="15" fill="rgb(236,21,32)" fg:x="501" fg:w="3"/><text x="40.5233%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.4341%" y="373" width="0.0804%" height="15" fill="rgb(228,109,6)" fg:x="503" fg:w="1"/><text x="40.6841%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 2.33%)</title><rect x="38.3441%" y="485" width="2.3312%" height="15" fill="rgb(229,215,31)" fg:x="477" fg:w="29"/><text x="38.5941%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (29 samples, 2.33%)</title><rect x="38.3441%" y="469" width="2.3312%" height="15" fill="rgb(221,52,54)" fg:x="477" fg:w="29"/><text x="38.5941%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (21 samples, 1.69%)</title><rect x="38.9871%" y="453" width="1.6881%" height="15" fill="rgb(252,129,43)" fg:x="485" fg:w="21"/><text x="39.2371%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="39.7910%" y="437" width="0.8842%" height="15" fill="rgb(248,183,27)" fg:x="495" fg:w="11"/><text x="40.0410%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="40.1125%" y="421" width="0.5627%" height="15" fill="rgb(250,0,22)" fg:x="499" fg:w="7"/><text x="40.3625%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.5145%" y="405" width="0.1608%" height="15" fill="rgb(213,166,10)" fg:x="504" fg:w="2"/><text x="40.7645%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5949%" y="389" width="0.0804%" height="15" fill="rgb(207,163,36)" fg:x="505" fg:w="1"/><text x="40.8449%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="41.0772%" y="421" width="0.0804%" height="15" fill="rgb(208,122,22)" fg:x="511" fg:w="1"/><text x="41.3272%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.0772%" y="405" width="0.0804%" height="15" fill="rgb(207,104,49)" fg:x="511" fg:w="1"/><text x="41.3272%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="40.9164%" y="437" width="0.4823%" height="15" fill="rgb(248,211,50)" fg:x="509" fg:w="6"/><text x="41.1664%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="41.1576%" y="421" width="0.2412%" height="15" fill="rgb(217,13,45)" fg:x="512" fg:w="3"/><text x="41.4076%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.2379%" y="405" width="0.1608%" height="15" fill="rgb(211,216,49)" fg:x="513" fg:w="2"/><text x="41.4879%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="40.6752%" y="469" width="0.8039%" height="15" fill="rgb(221,58,53)" fg:x="506" fg:w="10"/><text x="40.9252%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="40.7556%" y="453" width="0.7235%" height="15" fill="rgb(220,112,41)" fg:x="507" fg:w="9"/><text x="41.0056%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.3987%" y="437" width="0.0804%" height="15" fill="rgb(236,38,28)" fg:x="515" fg:w="1"/><text x="41.6487%" y="447.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (43 samples, 3.46%)</title><rect x="38.1833%" y="501" width="3.4566%" height="15" fill="rgb(227,195,22)" fg:x="475" fg:w="43"/><text x="38.4333%" y="511.50">&lt;ke..</text></g><g><title>treediff::diff::diff (12 samples, 0.96%)</title><rect x="40.6752%" y="485" width="0.9646%" height="15" fill="rgb(214,55,33)" fg:x="506" fg:w="12"/><text x="40.9252%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="41.4791%" y="469" width="0.1608%" height="15" fill="rgb(248,80,13)" fg:x="516" fg:w="2"/><text x="41.7291%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="41.4791%" y="453" width="0.1608%" height="15" fill="rgb(238,52,6)" fg:x="516" fg:w="2"/><text x="41.7291%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.4791%" y="437" width="0.1608%" height="15" fill="rgb(224,198,47)" fg:x="516" fg:w="2"/><text x="41.7291%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="41.6399%" y="469" width="0.5627%" height="15" fill="rgb(233,171,20)" fg:x="518" fg:w="7"/><text x="41.8899%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1222%" y="453" width="0.0804%" height="15" fill="rgb(241,30,25)" fg:x="524" fg:w="1"/><text x="42.3722%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.1222%" y="437" width="0.0804%" height="15" fill="rgb(207,171,38)" fg:x="524" fg:w="1"/><text x="42.3722%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="42.2026%" y="469" width="0.1608%" height="15" fill="rgb(234,70,1)" fg:x="525" fg:w="2"/><text x="42.4526%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.2026%" y="453" width="0.1608%" height="15" fill="rgb(232,178,18)" fg:x="525" fg:w="2"/><text x="42.4526%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2830%" y="437" width="0.0804%" height="15" fill="rgb(241,78,40)" fg:x="526" fg:w="1"/><text x="42.5330%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2830%" y="421" width="0.0804%" height="15" fill="rgb(222,35,25)" fg:x="526" fg:w="1"/><text x="42.5330%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4437%" y="437" width="0.0804%" height="15" fill="rgb(207,92,16)" fg:x="528" fg:w="1"/><text x="42.6937%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="42.3633%" y="469" width="0.2412%" height="15" fill="rgb(216,59,51)" fg:x="527" fg:w="3"/><text x="42.6133%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="42.3633%" y="453" width="0.2412%" height="15" fill="rgb(213,80,28)" fg:x="527" fg:w="3"/><text x="42.6133%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5241%" y="437" width="0.0804%" height="15" fill="rgb(220,93,7)" fg:x="529" fg:w="1"/><text x="42.7741%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5241%" y="421" width="0.0804%" height="15" fill="rgb(225,24,44)" fg:x="529" fg:w="1"/><text x="42.7741%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5241%" y="405" width="0.0804%" height="15" fill="rgb(243,74,40)" fg:x="529" fg:w="1"/><text x="42.7741%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.7653%" y="421" width="0.1608%" height="15" fill="rgb(228,39,7)" fg:x="532" fg:w="2"/><text x="43.0153%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.7653%" y="405" width="0.1608%" height="15" fill="rgb(227,79,8)" fg:x="532" fg:w="2"/><text x="43.0153%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.7653%" y="389" width="0.1608%" height="15" fill="rgb(236,58,11)" fg:x="532" fg:w="2"/><text x="43.0153%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="42.9260%" y="421" width="0.0804%" height="15" fill="rgb(249,63,35)" fg:x="534" fg:w="1"/><text x="43.1760%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9260%" y="405" width="0.0804%" height="15" fill="rgb(252,114,16)" fg:x="534" fg:w="1"/><text x="43.1760%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="42.9260%" y="389" width="0.0804%" height="15" fill="rgb(254,151,24)" fg:x="534" fg:w="1"/><text x="43.1760%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9260%" y="373" width="0.0804%" height="15" fill="rgb(253,54,39)" fg:x="534" fg:w="1"/><text x="43.1760%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9260%" y="357" width="0.0804%" height="15" fill="rgb(243,25,45)" fg:x="534" fg:w="1"/><text x="43.1760%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.9260%" y="341" width="0.0804%" height="15" fill="rgb(234,134,9)" fg:x="534" fg:w="1"/><text x="43.1760%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.72%)</title><rect x="43.1672%" y="389" width="0.7235%" height="15" fill="rgb(227,166,31)" fg:x="537" fg:w="9"/><text x="43.4172%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="43.4887%" y="373" width="0.4019%" height="15" fill="rgb(245,143,41)" fg:x="541" fg:w="5"/><text x="43.7387%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="43.6495%" y="357" width="0.2412%" height="15" fill="rgb(238,181,32)" fg:x="543" fg:w="3"/><text x="43.8995%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.1318%" y="373" width="0.0804%" height="15" fill="rgb(224,113,18)" fg:x="549" fg:w="1"/><text x="44.3818%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.2122%" y="373" width="0.0804%" height="15" fill="rgb(240,229,28)" fg:x="550" fg:w="1"/><text x="44.4622%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="44.3730%" y="325" width="0.2412%" height="15" fill="rgb(250,185,3)" fg:x="552" fg:w="3"/><text x="44.6230%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.3730%" y="357" width="0.3215%" height="15" fill="rgb(212,59,25)" fg:x="552" fg:w="4"/><text x="44.6230%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.3730%" y="341" width="0.3215%" height="15" fill="rgb(221,87,20)" fg:x="552" fg:w="4"/><text x="44.6230%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="44.6141%" y="325" width="0.0804%" height="15" fill="rgb(213,74,28)" fg:x="555" fg:w="1"/><text x="44.8641%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="44.2926%" y="373" width="0.4823%" height="15" fill="rgb(224,132,34)" fg:x="551" fg:w="6"/><text x="44.5426%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="44.6945%" y="357" width="0.0804%" height="15" fill="rgb(222,101,24)" fg:x="556" fg:w="1"/><text x="44.9445%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6945%" y="341" width="0.0804%" height="15" fill="rgb(254,142,4)" fg:x="556" fg:w="1"/><text x="44.9445%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.69%)</title><rect x="43.1672%" y="405" width="1.6881%" height="15" fill="rgb(230,229,49)" fg:x="537" fg:w="21"/><text x="43.4172%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.96%)</title><rect x="43.8907%" y="389" width="0.9646%" height="15" fill="rgb(238,70,47)" fg:x="546" fg:w="12"/><text x="44.1407%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7749%" y="373" width="0.0804%" height="15" fill="rgb(231,160,17)" fg:x="557" fg:w="1"/><text x="45.0249%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (28 samples, 2.25%)</title><rect x="42.6849%" y="437" width="2.2508%" height="15" fill="rgb(218,68,53)" fg:x="531" fg:w="28"/><text x="42.9349%" y="447.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 1.93%)</title><rect x="43.0064%" y="421" width="1.9293%" height="15" fill="rgb(236,111,10)" fg:x="535" fg:w="24"/><text x="43.2564%" y="431.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8553%" y="405" width="0.0804%" height="15" fill="rgb(224,34,41)" fg:x="558" fg:w="1"/><text x="45.1053%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.33%)</title><rect x="42.6849%" y="453" width="2.3312%" height="15" fill="rgb(241,118,19)" fg:x="531" fg:w="29"/><text x="42.9349%" y="463.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="44.9357%" y="437" width="0.0804%" height="15" fill="rgb(238,129,25)" fg:x="559" fg:w="1"/><text x="45.1857%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.9357%" y="421" width="0.0804%" height="15" fill="rgb(238,22,31)" fg:x="559" fg:w="1"/><text x="45.1857%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0161%" y="453" width="0.0804%" height="15" fill="rgb(222,174,48)" fg:x="560" fg:w="1"/><text x="45.2661%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (33 samples, 2.65%)</title><rect x="42.6045%" y="469" width="2.6527%" height="15" fill="rgb(206,152,40)" fg:x="530" fg:w="33"/><text x="42.8545%" y="479.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.0965%" y="453" width="0.1608%" height="15" fill="rgb(218,99,54)" fg:x="561" fg:w="2"/><text x="45.3465%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.0965%" y="437" width="0.1608%" height="15" fill="rgb(220,174,26)" fg:x="561" fg:w="2"/><text x="45.3465%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.1768%" y="421" width="0.0804%" height="15" fill="rgb(245,116,9)" fg:x="562" fg:w="1"/><text x="45.4268%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.70%)</title><rect x="41.6399%" y="501" width="3.6977%" height="15" fill="rgb(209,72,35)" fg:x="518" fg:w="46"/><text x="41.8899%" y="511.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.70%)</title><rect x="41.6399%" y="485" width="3.6977%" height="15" fill="rgb(226,126,21)" fg:x="518" fg:w="46"/><text x="41.8899%" y="495.50">&lt;ser..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="45.2572%" y="469" width="0.0804%" height="15" fill="rgb(227,192,1)" fg:x="563" fg:w="1"/><text x="45.5072%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.2572%" y="453" width="0.0804%" height="15" fill="rgb(237,180,29)" fg:x="563" fg:w="1"/><text x="45.5072%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.4984%" y="389" width="0.0804%" height="15" fill="rgb(230,197,35)" fg:x="566" fg:w="1"/><text x="45.7484%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.7395%" y="325" width="0.0804%" height="15" fill="rgb(246,193,31)" fg:x="569" fg:w="1"/><text x="45.9895%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.8199%" y="325" width="0.0804%" height="15" fill="rgb(241,36,4)" fg:x="570" fg:w="1"/><text x="46.0699%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8199%" y="309" width="0.0804%" height="15" fill="rgb(241,130,17)" fg:x="570" fg:w="1"/><text x="46.0699%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="45.7395%" y="357" width="0.2412%" height="15" fill="rgb(206,137,32)" fg:x="569" fg:w="3"/><text x="45.9895%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.7395%" y="341" width="0.2412%" height="15" fill="rgb(237,228,51)" fg:x="569" fg:w="3"/><text x="45.9895%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9003%" y="325" width="0.0804%" height="15" fill="rgb(243,6,42)" fg:x="571" fg:w="1"/><text x="46.1503%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9003%" y="309" width="0.0804%" height="15" fill="rgb(251,74,28)" fg:x="571" fg:w="1"/><text x="46.1503%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.9003%" y="293" width="0.0804%" height="15" fill="rgb(218,20,49)" fg:x="571" fg:w="1"/><text x="46.1503%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.0611%" y="309" width="0.0804%" height="15" fill="rgb(238,28,14)" fg:x="573" fg:w="1"/><text x="46.3111%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="46.1415%" y="309" width="0.2412%" height="15" fill="rgb(229,40,46)" fg:x="574" fg:w="3"/><text x="46.3915%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.2219%" y="293" width="0.1608%" height="15" fill="rgb(244,195,20)" fg:x="575" fg:w="2"/><text x="46.4719%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="46.0611%" y="341" width="0.4019%" height="15" fill="rgb(253,56,35)" fg:x="573" fg:w="5"/><text x="46.3111%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="46.0611%" y="325" width="0.4019%" height="15" fill="rgb(210,149,44)" fg:x="573" fg:w="5"/><text x="46.3111%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3826%" y="309" width="0.0804%" height="15" fill="rgb(240,135,12)" fg:x="577" fg:w="1"/><text x="46.6326%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3826%" y="293" width="0.0804%" height="15" fill="rgb(251,24,50)" fg:x="577" fg:w="1"/><text x="46.6326%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3826%" y="277" width="0.0804%" height="15" fill="rgb(243,200,47)" fg:x="577" fg:w="1"/><text x="46.6326%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="46.4630%" y="341" width="0.1608%" height="15" fill="rgb(224,166,26)" fg:x="578" fg:w="2"/><text x="46.7130%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.5434%" y="325" width="0.0804%" height="15" fill="rgb(233,0,47)" fg:x="579" fg:w="1"/><text x="46.7934%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="45.7395%" y="373" width="1.0450%" height="15" fill="rgb(253,80,5)" fg:x="569" fg:w="13"/><text x="45.9895%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="45.9807%" y="357" width="0.8039%" height="15" fill="rgb(214,133,25)" fg:x="572" fg:w="10"/><text x="46.2307%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.6238%" y="341" width="0.1608%" height="15" fill="rgb(209,27,14)" fg:x="580" fg:w="2"/><text x="46.8738%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.6238%" y="325" width="0.1608%" height="15" fill="rgb(219,102,51)" fg:x="580" fg:w="2"/><text x="46.8738%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7042%" y="309" width="0.0804%" height="15" fill="rgb(237,18,16)" fg:x="581" fg:w="1"/><text x="46.9542%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.45%)</title><rect x="45.4180%" y="405" width="1.4469%" height="15" fill="rgb(241,85,17)" fg:x="565" fg:w="18"/><text x="45.6680%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="45.5788%" y="389" width="1.2862%" height="15" fill="rgb(236,90,42)" fg:x="567" fg:w="16"/><text x="45.8288%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7846%" y="373" width="0.0804%" height="15" fill="rgb(249,57,21)" fg:x="582" fg:w="1"/><text x="47.0346%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.7846%" y="357" width="0.0804%" height="15" fill="rgb(243,12,36)" fg:x="582" fg:w="1"/><text x="47.0346%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7846%" y="341" width="0.0804%" height="15" fill="rgb(253,128,47)" fg:x="582" fg:w="1"/><text x="47.0346%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="46.9453%" y="389" width="0.1608%" height="15" fill="rgb(207,33,20)" fg:x="584" fg:w="2"/><text x="47.1953%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="46.8650%" y="405" width="0.3215%" height="15" fill="rgb(233,215,35)" fg:x="583" fg:w="4"/><text x="47.1150%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1061%" y="389" width="0.0804%" height="15" fill="rgb(249,188,52)" fg:x="586" fg:w="1"/><text x="47.3561%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.01%)</title><rect x="45.3376%" y="437" width="2.0096%" height="15" fill="rgb(225,12,32)" fg:x="564" fg:w="25"/><text x="45.5876%" y="447.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.01%)</title><rect x="45.3376%" y="421" width="2.0096%" height="15" fill="rgb(247,98,14)" fg:x="564" fg:w="25"/><text x="45.5876%" y="431.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.1865%" y="405" width="0.1608%" height="15" fill="rgb(247,219,48)" fg:x="587" fg:w="2"/><text x="47.4365%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.1865%" y="389" width="0.1608%" height="15" fill="rgb(253,60,48)" fg:x="587" fg:w="2"/><text x="47.4365%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="47.3473%" y="421" width="0.1608%" height="15" fill="rgb(245,15,52)" fg:x="589" fg:w="2"/><text x="47.5973%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5080%" y="421" width="0.1608%" height="15" fill="rgb(220,133,28)" fg:x="591" fg:w="2"/><text x="47.7580%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="47.3473%" y="437" width="0.4019%" height="15" fill="rgb(217,180,4)" fg:x="589" fg:w="5"/><text x="47.5973%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.6688%" y="421" width="0.0804%" height="15" fill="rgb(251,24,1)" fg:x="593" fg:w="1"/><text x="47.9188%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="47.6688%" y="405" width="0.0804%" height="15" fill="rgb(212,185,49)" fg:x="593" fg:w="1"/><text x="47.9188%" y="415.50"></text></g><g><title>engine::session::state::State::close (171 samples, 13.75%)</title><rect x="34.4051%" y="597" width="13.7460%" height="15" fill="rgb(215,175,22)" fg:x="428" fg:w="171"/><text x="34.6551%" y="607.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (171 samples, 13.75%)</title><rect x="34.4051%" y="581" width="13.7460%" height="15" fill="rgb(250,205,14)" fg:x="428" fg:w="171"/><text x="34.6551%" y="591.50">engine::session::stat..</text></g><g><title>core::iter::adapters::try_process (167 samples, 13.42%)</title><rect x="34.7267%" y="565" width="13.4244%" height="15" fill="rgb(225,211,22)" fg:x="432" fg:w="167"/><text x="34.9767%" y="575.50">core::iter::adapters..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (167 samples, 13.42%)</title><rect x="34.7267%" y="549" width="13.4244%" height="15" fill="rgb(251,179,42)" fg:x="432" fg:w="167"/><text x="34.9767%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (165 samples, 13.26%)</title><rect x="34.8875%" y="533" width="13.2637%" height="15" fill="rgb(208,216,51)" fg:x="434" fg:w="165"/><text x="35.1375%" y="543.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (126 samples, 10.13%)</title><rect x="38.0225%" y="517" width="10.1286%" height="15" fill="rgb(235,36,11)" fg:x="473" fg:w="126"/><text x="38.2725%" y="527.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (35 samples, 2.81%)</title><rect x="45.3376%" y="501" width="2.8135%" height="15" fill="rgb(213,189,28)" fg:x="564" fg:w="35"/><text x="45.5876%" y="511.50">se..</text></g><g><title>serde_json::de::from_trait (35 samples, 2.81%)</title><rect x="45.3376%" y="485" width="2.8135%" height="15" fill="rgb(227,203,42)" fg:x="564" fg:w="35"/><text x="45.5876%" y="495.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35 samples, 2.81%)</title><rect x="45.3376%" y="469" width="2.8135%" height="15" fill="rgb(244,72,36)" fg:x="564" fg:w="35"/><text x="45.5876%" y="479.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.81%)</title><rect x="45.3376%" y="453" width="2.8135%" height="15" fill="rgb(213,53,17)" fg:x="564" fg:w="35"/><text x="45.5876%" y="463.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.7492%" y="437" width="0.4019%" height="15" fill="rgb(207,167,3)" fg:x="594" fg:w="5"/><text x="47.9992%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0707%" y="421" width="0.0804%" height="15" fill="rgb(216,98,30)" fg:x="598" fg:w="1"/><text x="48.3207%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.0707%" y="405" width="0.0804%" height="15" fill="rgb(236,123,15)" fg:x="598" fg:w="1"/><text x="48.3207%" y="415.50"></text></g><g><title>engine::session::state::State::size (1 samples, 0.08%)</title><rect x="48.1511%" y="597" width="0.0804%" height="15" fill="rgb(248,81,50)" fg:x="599" fg:w="1"/><text x="48.4011%" y="607.50"></text></g><g><title>engine::session::Session::close (176 samples, 14.15%)</title><rect x="34.1640%" y="613" width="14.1479%" height="15" fill="rgb(214,120,4)" fg:x="425" fg:w="176"/><text x="34.4140%" y="623.50">engine::session::Sess..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="48.2315%" y="597" width="0.0804%" height="15" fill="rgb(208,179,34)" fg:x="600" fg:w="1"/><text x="48.4815%" y="607.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="48.4727%" y="453" width="0.0804%" height="15" fill="rgb(227,140,7)" fg:x="603" fg:w="1"/><text x="48.7227%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="48.5531%" y="437" width="0.2412%" height="15" fill="rgb(214,22,6)" fg:x="604" fg:w="3"/><text x="48.8031%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.5531%" y="421" width="0.2412%" height="15" fill="rgb(207,137,27)" fg:x="604" fg:w="3"/><text x="48.8031%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7138%" y="405" width="0.0804%" height="15" fill="rgb(210,8,46)" fg:x="606" fg:w="1"/><text x="48.9638%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7138%" y="389" width="0.0804%" height="15" fill="rgb(240,16,54)" fg:x="606" fg:w="1"/><text x="48.9638%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.7138%" y="373" width="0.0804%" height="15" fill="rgb(211,209,29)" fg:x="606" fg:w="1"/><text x="48.9638%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="48.4727%" y="485" width="0.4019%" height="15" fill="rgb(226,228,24)" fg:x="603" fg:w="5"/><text x="48.7227%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (5 samples, 0.40%)</title><rect x="48.4727%" y="469" width="0.4019%" height="15" fill="rgb(222,84,9)" fg:x="603" fg:w="5"/><text x="48.7227%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="48.5531%" y="453" width="0.3215%" height="15" fill="rgb(234,203,30)" fg:x="604" fg:w="4"/><text x="48.8031%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.7942%" y="437" width="0.0804%" height="15" fill="rgb(238,109,14)" fg:x="607" fg:w="1"/><text x="49.0442%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="48.7942%" y="421" width="0.0804%" height="15" fill="rgb(233,206,34)" fg:x="607" fg:w="1"/><text x="49.0442%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7942%" y="405" width="0.0804%" height="15" fill="rgb(220,167,47)" fg:x="607" fg:w="1"/><text x="49.0442%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="48.4727%" y="501" width="0.5627%" height="15" fill="rgb(238,105,10)" fg:x="603" fg:w="7"/><text x="48.7227%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="48.8746%" y="485" width="0.1608%" height="15" fill="rgb(213,227,17)" fg:x="608" fg:w="2"/><text x="49.1246%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="48.8746%" y="469" width="0.1608%" height="15" fill="rgb(217,132,38)" fg:x="608" fg:w="2"/><text x="49.1246%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="48.8746%" y="453" width="0.1608%" height="15" fill="rgb(242,146,4)" fg:x="608" fg:w="2"/><text x="49.1246%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.9550%" y="437" width="0.0804%" height="15" fill="rgb(212,61,9)" fg:x="609" fg:w="1"/><text x="49.2050%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.9550%" y="421" width="0.0804%" height="15" fill="rgb(247,126,22)" fg:x="609" fg:w="1"/><text x="49.2050%" y="431.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="49.0354%" y="469" width="0.0804%" height="15" fill="rgb(220,196,2)" fg:x="610" fg:w="1"/><text x="49.2854%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0354%" y="453" width="0.0804%" height="15" fill="rgb(208,46,4)" fg:x="610" fg:w="1"/><text x="49.2854%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1158%" y="421" width="0.0804%" height="15" fill="rgb(252,104,46)" fg:x="611" fg:w="1"/><text x="49.3658%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1158%" y="405" width="0.0804%" height="15" fill="rgb(237,152,48)" fg:x="611" fg:w="1"/><text x="49.3658%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1158%" y="389" width="0.0804%" height="15" fill="rgb(221,59,37)" fg:x="611" fg:w="1"/><text x="49.3658%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1158%" y="373" width="0.0804%" height="15" fill="rgb(209,202,51)" fg:x="611" fg:w="1"/><text x="49.3658%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1158%" y="357" width="0.0804%" height="15" fill="rgb(228,81,30)" fg:x="611" fg:w="1"/><text x="49.3658%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.1158%" y="341" width="0.0804%" height="15" fill="rgb(227,42,39)" fg:x="611" fg:w="1"/><text x="49.3658%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.1158%" y="325" width="0.0804%" height="15" fill="rgb(221,26,2)" fg:x="611" fg:w="1"/><text x="49.3658%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.1158%" y="309" width="0.0804%" height="15" fill="rgb(254,61,31)" fg:x="611" fg:w="1"/><text x="49.3658%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.1158%" y="293" width="0.0804%" height="15" fill="rgb(222,173,38)" fg:x="611" fg:w="1"/><text x="49.3658%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.1158%" y="277" width="0.0804%" height="15" fill="rgb(218,50,12)" fg:x="611" fg:w="1"/><text x="49.3658%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.1961%" y="421" width="0.0804%" height="15" fill="rgb(223,88,40)" fg:x="612" fg:w="1"/><text x="49.4461%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="49.1961%" y="405" width="0.0804%" height="15" fill="rgb(237,54,19)" fg:x="612" fg:w="1"/><text x="49.4461%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.1961%" y="389" width="0.0804%" height="15" fill="rgb(251,129,25)" fg:x="612" fg:w="1"/><text x="49.4461%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.1961%" y="373" width="0.0804%" height="15" fill="rgb(238,97,19)" fg:x="612" fg:w="1"/><text x="49.4461%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1961%" y="357" width="0.0804%" height="15" fill="rgb(240,169,18)" fg:x="612" fg:w="1"/><text x="49.4461%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.2765%" y="357" width="0.0804%" height="15" fill="rgb(230,187,49)" fg:x="613" fg:w="1"/><text x="49.5265%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="49.1158%" y="453" width="0.4019%" height="15" fill="rgb(209,44,26)" fg:x="611" fg:w="5"/><text x="49.3658%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.1158%" y="437" width="0.4019%" height="15" fill="rgb(244,0,6)" fg:x="611" fg:w="5"/><text x="49.3658%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.2765%" y="421" width="0.2412%" height="15" fill="rgb(248,18,21)" fg:x="613" fg:w="3"/><text x="49.5265%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.2765%" y="405" width="0.2412%" height="15" fill="rgb(245,180,19)" fg:x="613" fg:w="3"/><text x="49.5265%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="49.2765%" y="389" width="0.2412%" height="15" fill="rgb(252,118,36)" fg:x="613" fg:w="3"/><text x="49.5265%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.2765%" y="373" width="0.2412%" height="15" fill="rgb(210,224,19)" fg:x="613" fg:w="3"/><text x="49.5265%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.3569%" y="357" width="0.1608%" height="15" fill="rgb(218,30,24)" fg:x="614" fg:w="2"/><text x="49.6069%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.3569%" y="341" width="0.1608%" height="15" fill="rgb(219,75,50)" fg:x="614" fg:w="2"/><text x="49.6069%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.5981%" y="421" width="0.0804%" height="15" fill="rgb(234,72,50)" fg:x="617" fg:w="1"/><text x="49.8481%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.5981%" y="405" width="0.0804%" height="15" fill="rgb(219,100,48)" fg:x="617" fg:w="1"/><text x="49.8481%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.5981%" y="389" width="0.0804%" height="15" fill="rgb(253,5,41)" fg:x="617" fg:w="1"/><text x="49.8481%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5981%" y="373" width="0.0804%" height="15" fill="rgb(247,181,11)" fg:x="617" fg:w="1"/><text x="49.8481%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.6785%" y="357" width="0.0804%" height="15" fill="rgb(222,223,25)" fg:x="618" fg:w="1"/><text x="49.9285%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.6785%" y="341" width="0.0804%" height="15" fill="rgb(214,198,28)" fg:x="618" fg:w="1"/><text x="49.9285%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="49.5177%" y="453" width="0.3215%" height="15" fill="rgb(230,46,43)" fg:x="616" fg:w="4"/><text x="49.7677%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="49.5177%" y="437" width="0.3215%" height="15" fill="rgb(233,65,53)" fg:x="616" fg:w="4"/><text x="49.7677%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.6785%" y="421" width="0.1608%" height="15" fill="rgb(221,121,27)" fg:x="618" fg:w="2"/><text x="49.9285%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.6785%" y="405" width="0.1608%" height="15" fill="rgb(247,70,47)" fg:x="618" fg:w="2"/><text x="49.9285%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="49.6785%" y="389" width="0.1608%" height="15" fill="rgb(228,85,35)" fg:x="618" fg:w="2"/><text x="49.9285%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.6785%" y="373" width="0.1608%" height="15" fill="rgb(209,50,18)" fg:x="618" fg:w="2"/><text x="49.9285%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7588%" y="357" width="0.0804%" height="15" fill="rgb(250,19,35)" fg:x="619" fg:w="1"/><text x="50.0088%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7588%" y="341" width="0.0804%" height="15" fill="rgb(253,107,29)" fg:x="619" fg:w="1"/><text x="50.0088%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7588%" y="325" width="0.0804%" height="15" fill="rgb(252,179,29)" fg:x="619" fg:w="1"/><text x="50.0088%" y="335.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (18 samples, 1.45%)</title><rect x="48.4727%" y="517" width="1.4469%" height="15" fill="rgb(238,194,6)" fg:x="603" fg:w="18"/><text x="48.7227%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (11 samples, 0.88%)</title><rect x="49.0354%" y="501" width="0.8842%" height="15" fill="rgb(238,164,29)" fg:x="610" fg:w="11"/><text x="49.2854%" y="511.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (11 samples, 0.88%)</title><rect x="49.0354%" y="485" width="0.8842%" height="15" fill="rgb(224,25,9)" fg:x="610" fg:w="11"/><text x="49.2854%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="49.1158%" y="469" width="0.8039%" height="15" fill="rgb(244,153,23)" fg:x="611" fg:w="10"/><text x="49.3658%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.8392%" y="453" width="0.0804%" height="15" fill="rgb(212,203,14)" fg:x="620" fg:w="1"/><text x="50.0892%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.8392%" y="437" width="0.0804%" height="15" fill="rgb(220,164,20)" fg:x="620" fg:w="1"/><text x="50.0892%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.8392%" y="421" width="0.0804%" height="15" fill="rgb(222,203,48)" fg:x="620" fg:w="1"/><text x="50.0892%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8392%" y="405" width="0.0804%" height="15" fill="rgb(215,159,22)" fg:x="620" fg:w="1"/><text x="50.0892%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8392%" y="389" width="0.0804%" height="15" fill="rgb(216,183,47)" fg:x="620" fg:w="1"/><text x="50.0892%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.8392%" y="373" width="0.0804%" height="15" fill="rgb(229,195,25)" fg:x="620" fg:w="1"/><text x="50.0892%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.8392%" y="357" width="0.0804%" height="15" fill="rgb(224,132,51)" fg:x="620" fg:w="1"/><text x="50.0892%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.8392%" y="341" width="0.0804%" height="15" fill="rgb(240,63,7)" fg:x="620" fg:w="1"/><text x="50.0892%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.8392%" y="325" width="0.0804%" height="15" fill="rgb(249,182,41)" fg:x="620" fg:w="1"/><text x="50.0892%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.8392%" y="309" width="0.0804%" height="15" fill="rgb(243,47,26)" fg:x="620" fg:w="1"/><text x="50.0892%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.8392%" y="293" width="0.0804%" height="15" fill="rgb(233,48,2)" fg:x="620" fg:w="1"/><text x="50.0892%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.8392%" y="277" width="0.0804%" height="15" fill="rgb(244,165,34)" fg:x="620" fg:w="1"/><text x="50.0892%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.8392%" y="261" width="0.0804%" height="15" fill="rgb(207,89,7)" fg:x="620" fg:w="1"/><text x="50.0892%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.8392%" y="245" width="0.0804%" height="15" fill="rgb(244,117,36)" fg:x="620" fg:w="1"/><text x="50.0892%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.8392%" y="229" width="0.0804%" height="15" fill="rgb(226,144,34)" fg:x="620" fg:w="1"/><text x="50.0892%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.8392%" y="213" width="0.0804%" height="15" fill="rgb(213,23,19)" fg:x="620" fg:w="1"/><text x="50.0892%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.8392%" y="197" width="0.0804%" height="15" fill="rgb(217,75,12)" fg:x="620" fg:w="1"/><text x="50.0892%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.8392%" y="181" width="0.0804%" height="15" fill="rgb(224,159,17)" fg:x="620" fg:w="1"/><text x="50.0892%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9196%" y="517" width="0.0804%" height="15" fill="rgb(217,118,1)" fg:x="621" fg:w="1"/><text x="50.1696%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1608%" y="309" width="0.0804%" height="15" fill="rgb(232,180,48)" fg:x="624" fg:w="1"/><text x="50.4108%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2412%" y="309" width="0.0804%" height="15" fill="rgb(230,27,33)" fg:x="625" fg:w="1"/><text x="50.4912%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.4019%" y="277" width="0.1608%" height="15" fill="rgb(205,31,21)" fg:x="627" fg:w="2"/><text x="50.6519%" y="287.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (4 samples, 0.32%)</title><rect x="50.3215%" y="309" width="0.3215%" height="15" fill="rgb(253,59,4)" fg:x="626" fg:w="4"/><text x="50.5715%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="50.3215%" y="293" width="0.3215%" height="15" fill="rgb(224,201,9)" fg:x="626" fg:w="4"/><text x="50.5715%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5627%" y="277" width="0.0804%" height="15" fill="rgb(229,206,30)" fg:x="629" fg:w="1"/><text x="50.8127%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="50.7235%" y="293" width="0.0804%" height="15" fill="rgb(212,67,47)" fg:x="631" fg:w="1"/><text x="50.9735%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7235%" y="277" width="0.0804%" height="15" fill="rgb(211,96,50)" fg:x="631" fg:w="1"/><text x="50.9735%" y="287.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (11 samples, 0.88%)</title><rect x="50.0804%" y="357" width="0.8842%" height="15" fill="rgb(252,114,18)" fg:x="623" fg:w="11"/><text x="50.3304%" y="367.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (11 samples, 0.88%)</title><rect x="50.0804%" y="341" width="0.8842%" height="15" fill="rgb(223,58,37)" fg:x="623" fg:w="11"/><text x="50.3304%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="50.0804%" y="325" width="0.8842%" height="15" fill="rgb(237,70,4)" fg:x="623" fg:w="11"/><text x="50.3304%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="50.6431%" y="309" width="0.3215%" height="15" fill="rgb(244,85,46)" fg:x="630" fg:w="4"/><text x="50.8931%" y="319.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="50.8039%" y="293" width="0.1608%" height="15" fill="rgb(223,39,52)" fg:x="632" fg:w="2"/><text x="51.0539%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.8039%" y="277" width="0.1608%" height="15" fill="rgb(218,200,14)" fg:x="632" fg:w="2"/><text x="51.0539%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.8039%" y="261" width="0.1608%" height="15" fill="rgb(208,171,16)" fg:x="632" fg:w="2"/><text x="51.0539%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8842%" y="245" width="0.0804%" height="15" fill="rgb(234,200,18)" fg:x="633" fg:w="1"/><text x="51.1342%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8842%" y="229" width="0.0804%" height="15" fill="rgb(228,45,11)" fg:x="633" fg:w="1"/><text x="51.1342%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (13 samples, 1.05%)</title><rect x="50.0804%" y="373" width="1.0450%" height="15" fill="rgb(237,182,11)" fg:x="623" fg:w="13"/><text x="50.3304%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="50.9646%" y="357" width="0.1608%" height="15" fill="rgb(241,175,49)" fg:x="634" fg:w="2"/><text x="51.2146%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (2 samples, 0.16%)</title><rect x="50.9646%" y="341" width="0.1608%" height="15" fill="rgb(247,38,35)" fg:x="634" fg:w="2"/><text x="51.2146%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0450%" y="325" width="0.0804%" height="15" fill="rgb(228,39,49)" fg:x="635" fg:w="1"/><text x="51.2950%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="51.2058%" y="341" width="0.0804%" height="15" fill="rgb(226,101,26)" fg:x="637" fg:w="1"/><text x="51.4558%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.2058%" y="325" width="0.0804%" height="15" fill="rgb(206,141,19)" fg:x="637" fg:w="1"/><text x="51.4558%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.2058%" y="309" width="0.0804%" height="15" fill="rgb(211,200,13)" fg:x="637" fg:w="1"/><text x="51.4558%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.2058%" y="293" width="0.0804%" height="15" fill="rgb(241,121,6)" fg:x="637" fg:w="1"/><text x="51.4558%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.2058%" y="277" width="0.0804%" height="15" fill="rgb(234,221,29)" fg:x="637" fg:w="1"/><text x="51.4558%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.2862%" y="277" width="0.2412%" height="15" fill="rgb(229,136,5)" fg:x="638" fg:w="3"/><text x="51.5362%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4469%" y="261" width="0.0804%" height="15" fill="rgb(238,36,11)" fg:x="640" fg:w="1"/><text x="51.6969%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4469%" y="245" width="0.0804%" height="15" fill="rgb(251,55,41)" fg:x="640" fg:w="1"/><text x="51.6969%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.4469%" y="229" width="0.0804%" height="15" fill="rgb(242,34,40)" fg:x="640" fg:w="1"/><text x="51.6969%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.4469%" y="213" width="0.0804%" height="15" fill="rgb(215,42,17)" fg:x="640" fg:w="1"/><text x="51.6969%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.4469%" y="197" width="0.0804%" height="15" fill="rgb(207,44,46)" fg:x="640" fg:w="1"/><text x="51.6969%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4469%" y="181" width="0.0804%" height="15" fill="rgb(211,206,28)" fg:x="640" fg:w="1"/><text x="51.6969%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4469%" y="165" width="0.0804%" height="15" fill="rgb(237,167,16)" fg:x="640" fg:w="1"/><text x="51.6969%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.4469%" y="149" width="0.0804%" height="15" fill="rgb(233,66,6)" fg:x="640" fg:w="1"/><text x="51.6969%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.4469%" y="133" width="0.0804%" height="15" fill="rgb(246,123,29)" fg:x="640" fg:w="1"/><text x="51.6969%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.4469%" y="117" width="0.0804%" height="15" fill="rgb(209,62,40)" fg:x="640" fg:w="1"/><text x="51.6969%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.4469%" y="101" width="0.0804%" height="15" fill="rgb(218,4,25)" fg:x="640" fg:w="1"/><text x="51.6969%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="51.2862%" y="293" width="0.4019%" height="15" fill="rgb(253,91,49)" fg:x="638" fg:w="5"/><text x="51.5362%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.5273%" y="277" width="0.1608%" height="15" fill="rgb(228,155,29)" fg:x="641" fg:w="2"/><text x="51.7773%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.5273%" y="261" width="0.1608%" height="15" fill="rgb(243,57,37)" fg:x="641" fg:w="2"/><text x="51.7773%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.5273%" y="245" width="0.1608%" height="15" fill="rgb(244,167,17)" fg:x="641" fg:w="2"/><text x="51.7773%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.5273%" y="229" width="0.1608%" height="15" fill="rgb(207,181,38)" fg:x="641" fg:w="2"/><text x="51.7773%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.5273%" y="213" width="0.1608%" height="15" fill="rgb(211,8,23)" fg:x="641" fg:w="2"/><text x="51.7773%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.5273%" y="197" width="0.1608%" height="15" fill="rgb(235,11,44)" fg:x="641" fg:w="2"/><text x="51.7773%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.5273%" y="181" width="0.1608%" height="15" fill="rgb(248,18,52)" fg:x="641" fg:w="2"/><text x="51.7773%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.5273%" y="165" width="0.1608%" height="15" fill="rgb(208,4,7)" fg:x="641" fg:w="2"/><text x="51.7773%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.5273%" y="149" width="0.1608%" height="15" fill="rgb(240,17,39)" fg:x="641" fg:w="2"/><text x="51.7773%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.5273%" y="133" width="0.1608%" height="15" fill="rgb(207,170,3)" fg:x="641" fg:w="2"/><text x="51.7773%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.5273%" y="117" width="0.1608%" height="15" fill="rgb(236,100,52)" fg:x="641" fg:w="2"/><text x="51.7773%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6077%" y="101" width="0.0804%" height="15" fill="rgb(246,78,51)" fg:x="642" fg:w="1"/><text x="51.8577%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="51.2862%" y="309" width="0.4823%" height="15" fill="rgb(211,17,15)" fg:x="638" fg:w="6"/><text x="51.5362%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6881%" y="293" width="0.0804%" height="15" fill="rgb(209,59,46)" fg:x="643" fg:w="1"/><text x="51.9381%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.7685%" y="309" width="0.0804%" height="15" fill="rgb(210,92,25)" fg:x="644" fg:w="1"/><text x="52.0185%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.7685%" y="293" width="0.0804%" height="15" fill="rgb(238,174,52)" fg:x="644" fg:w="1"/><text x="52.0185%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.8489%" y="277" width="0.0804%" height="15" fill="rgb(230,73,7)" fg:x="645" fg:w="1"/><text x="52.0989%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8489%" y="261" width="0.0804%" height="15" fill="rgb(243,124,40)" fg:x="645" fg:w="1"/><text x="52.0989%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.0096%" y="245" width="0.0804%" height="15" fill="rgb(244,170,11)" fg:x="647" fg:w="1"/><text x="52.2596%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0900%" y="245" width="0.0804%" height="15" fill="rgb(207,114,54)" fg:x="648" fg:w="1"/><text x="52.3400%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0900%" y="229" width="0.0804%" height="15" fill="rgb(205,42,20)" fg:x="648" fg:w="1"/><text x="52.3400%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="52.1704%" y="213" width="0.1608%" height="15" fill="rgb(230,30,28)" fg:x="649" fg:w="2"/><text x="52.4204%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (14 samples, 1.13%)</title><rect x="51.2862%" y="341" width="1.1254%" height="15" fill="rgb(205,73,54)" fg:x="638" fg:w="14"/><text x="51.5362%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.13%)</title><rect x="51.2862%" y="325" width="1.1254%" height="15" fill="rgb(254,227,23)" fg:x="638" fg:w="14"/><text x="51.5362%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="51.8489%" y="309" width="0.5627%" height="15" fill="rgb(228,202,34)" fg:x="645" fg:w="7"/><text x="52.0989%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="51.8489%" y="293" width="0.5627%" height="15" fill="rgb(222,225,37)" fg:x="645" fg:w="7"/><text x="52.0989%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="51.9293%" y="277" width="0.4823%" height="15" fill="rgb(221,14,54)" fg:x="646" fg:w="6"/><text x="52.1793%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="51.9293%" y="261" width="0.4823%" height="15" fill="rgb(254,102,2)" fg:x="646" fg:w="6"/><text x="52.1793%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.1704%" y="245" width="0.2412%" height="15" fill="rgb(232,104,17)" fg:x="649" fg:w="3"/><text x="52.4204%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.1704%" y="229" width="0.2412%" height="15" fill="rgb(250,220,14)" fg:x="649" fg:w="3"/><text x="52.4204%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.3312%" y="213" width="0.0804%" height="15" fill="rgb(241,158,9)" fg:x="651" fg:w="1"/><text x="52.5812%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.4116%" y="293" width="0.2412%" height="15" fill="rgb(246,9,43)" fg:x="652" fg:w="3"/><text x="52.6616%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.4920%" y="277" width="0.1608%" height="15" fill="rgb(206,73,33)" fg:x="653" fg:w="2"/><text x="52.7420%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.4920%" y="261" width="0.1608%" height="15" fill="rgb(222,79,8)" fg:x="653" fg:w="2"/><text x="52.7420%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5723%" y="245" width="0.0804%" height="15" fill="rgb(234,8,54)" fg:x="654" fg:w="1"/><text x="52.8223%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.5723%" y="229" width="0.0804%" height="15" fill="rgb(209,134,38)" fg:x="654" fg:w="1"/><text x="52.8223%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.5723%" y="213" width="0.0804%" height="15" fill="rgb(230,127,29)" fg:x="654" fg:w="1"/><text x="52.8223%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.5723%" y="197" width="0.0804%" height="15" fill="rgb(242,44,41)" fg:x="654" fg:w="1"/><text x="52.8223%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5723%" y="181" width="0.0804%" height="15" fill="rgb(222,56,43)" fg:x="654" fg:w="1"/><text x="52.8223%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5723%" y="165" width="0.0804%" height="15" fill="rgb(238,39,47)" fg:x="654" fg:w="1"/><text x="52.8223%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.5723%" y="149" width="0.0804%" height="15" fill="rgb(226,79,43)" fg:x="654" fg:w="1"/><text x="52.8223%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.5723%" y="133" width="0.0804%" height="15" fill="rgb(242,105,53)" fg:x="654" fg:w="1"/><text x="52.8223%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.5723%" y="117" width="0.0804%" height="15" fill="rgb(251,132,46)" fg:x="654" fg:w="1"/><text x="52.8223%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.5723%" y="101" width="0.0804%" height="15" fill="rgb(231,77,14)" fg:x="654" fg:w="1"/><text x="52.8223%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5723%" y="85" width="0.0804%" height="15" fill="rgb(240,135,9)" fg:x="654" fg:w="1"/><text x="52.8223%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.4116%" y="309" width="0.3215%" height="15" fill="rgb(248,109,14)" fg:x="652" fg:w="4"/><text x="52.6616%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6527%" y="293" width="0.0804%" height="15" fill="rgb(227,146,52)" fg:x="655" fg:w="1"/><text x="52.9027%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6527%" y="277" width="0.0804%" height="15" fill="rgb(232,54,3)" fg:x="655" fg:w="1"/><text x="52.9027%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6527%" y="261" width="0.0804%" height="15" fill="rgb(229,201,43)" fg:x="655" fg:w="1"/><text x="52.9027%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6527%" y="245" width="0.0804%" height="15" fill="rgb(252,161,33)" fg:x="655" fg:w="1"/><text x="52.9027%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6527%" y="229" width="0.0804%" height="15" fill="rgb(226,146,40)" fg:x="655" fg:w="1"/><text x="52.9027%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6527%" y="213" width="0.0804%" height="15" fill="rgb(219,47,25)" fg:x="655" fg:w="1"/><text x="52.9027%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6527%" y="197" width="0.0804%" height="15" fill="rgb(250,135,13)" fg:x="655" fg:w="1"/><text x="52.9027%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6527%" y="181" width="0.0804%" height="15" fill="rgb(219,229,18)" fg:x="655" fg:w="1"/><text x="52.9027%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6527%" y="165" width="0.0804%" height="15" fill="rgb(217,152,27)" fg:x="655" fg:w="1"/><text x="52.9027%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6527%" y="149" width="0.0804%" height="15" fill="rgb(225,71,47)" fg:x="655" fg:w="1"/><text x="52.9027%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6527%" y="133" width="0.0804%" height="15" fill="rgb(220,139,14)" fg:x="655" fg:w="1"/><text x="52.9027%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7331%" y="309" width="0.0804%" height="15" fill="rgb(247,54,32)" fg:x="656" fg:w="1"/><text x="52.9831%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.7331%" y="293" width="0.0804%" height="15" fill="rgb(252,131,39)" fg:x="656" fg:w="1"/><text x="52.9831%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7331%" y="277" width="0.0804%" height="15" fill="rgb(210,108,39)" fg:x="656" fg:w="1"/><text x="52.9831%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7331%" y="261" width="0.0804%" height="15" fill="rgb(205,23,29)" fg:x="656" fg:w="1"/><text x="52.9831%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.7331%" y="245" width="0.0804%" height="15" fill="rgb(246,139,46)" fg:x="656" fg:w="1"/><text x="52.9831%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="53.0547%" y="245" width="0.0804%" height="15" fill="rgb(250,81,26)" fg:x="660" fg:w="1"/><text x="53.3047%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.0547%" y="229" width="0.0804%" height="15" fill="rgb(214,104,7)" fg:x="660" fg:w="1"/><text x="53.3047%" y="239.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="53.1350%" y="245" width="0.0804%" height="15" fill="rgb(233,189,8)" fg:x="661" fg:w="1"/><text x="53.3850%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2154%" y="245" width="0.0804%" height="15" fill="rgb(228,141,17)" fg:x="662" fg:w="1"/><text x="53.4654%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.2154%" y="229" width="0.0804%" height="15" fill="rgb(247,157,1)" fg:x="662" fg:w="1"/><text x="53.4654%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.05%)</title><rect x="52.4116%" y="341" width="1.0450%" height="15" fill="rgb(249,225,5)" fg:x="652" fg:w="13"/><text x="52.6616%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.05%)</title><rect x="52.4116%" y="325" width="1.0450%" height="15" fill="rgb(242,55,13)" fg:x="652" fg:w="13"/><text x="52.6616%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="52.8135%" y="309" width="0.6431%" height="15" fill="rgb(230,49,50)" fg:x="657" fg:w="8"/><text x="53.0635%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="52.8135%" y="293" width="0.6431%" height="15" fill="rgb(241,111,38)" fg:x="657" fg:w="8"/><text x="53.0635%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="52.8939%" y="277" width="0.5627%" height="15" fill="rgb(252,155,4)" fg:x="658" fg:w="7"/><text x="53.1439%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="52.8939%" y="261" width="0.5627%" height="15" fill="rgb(212,69,32)" fg:x="658" fg:w="7"/><text x="53.1439%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.2958%" y="245" width="0.1608%" height="15" fill="rgb(243,107,47)" fg:x="663" fg:w="2"/><text x="53.5458%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.3762%" y="229" width="0.0804%" height="15" fill="rgb(247,130,12)" fg:x="664" fg:w="1"/><text x="53.6262%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3762%" y="213" width="0.0804%" height="15" fill="rgb(233,74,16)" fg:x="664" fg:w="1"/><text x="53.6262%" y="223.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (29 samples, 2.33%)</title><rect x="51.2058%" y="357" width="2.3312%" height="15" fill="rgb(208,58,18)" fg:x="637" fg:w="29"/><text x="51.4558%" y="367.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::has_scope (1 samples, 0.08%)</title><rect x="53.4566%" y="341" width="0.0804%" height="15" fill="rgb(242,225,1)" fg:x="665" fg:w="1"/><text x="53.7066%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.4566%" y="325" width="0.0804%" height="15" fill="rgb(249,39,40)" fg:x="665" fg:w="1"/><text x="53.7066%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.4566%" y="309" width="0.0804%" height="15" fill="rgb(207,72,44)" fg:x="665" fg:w="1"/><text x="53.7066%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.5370%" y="357" width="0.0804%" height="15" fill="rgb(215,193,12)" fg:x="666" fg:w="1"/><text x="53.7870%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5370%" y="341" width="0.0804%" height="15" fill="rgb(248,41,39)" fg:x="666" fg:w="1"/><text x="53.7870%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (2 samples, 0.16%)</title><rect x="53.6174%" y="325" width="0.1608%" height="15" fill="rgb(253,85,4)" fg:x="667" fg:w="2"/><text x="53.8674%" y="335.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.6977%" y="309" width="0.0804%" height="15" fill="rgb(243,70,31)" fg:x="668" fg:w="1"/><text x="53.9477%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.6977%" y="293" width="0.0804%" height="15" fill="rgb(253,195,26)" fg:x="668" fg:w="1"/><text x="53.9477%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.6977%" y="277" width="0.0804%" height="15" fill="rgb(243,42,11)" fg:x="668" fg:w="1"/><text x="53.9477%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.7781%" y="293" width="0.0804%" height="15" fill="rgb(239,66,17)" fg:x="669" fg:w="1"/><text x="54.0281%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0997%" y="229" width="0.0804%" height="15" fill="rgb(217,132,21)" fg:x="673" fg:w="1"/><text x="54.3497%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0997%" y="213" width="0.0804%" height="15" fill="rgb(252,202,21)" fg:x="673" fg:w="1"/><text x="54.3497%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.0997%" y="197" width="0.0804%" height="15" fill="rgb(233,98,36)" fg:x="673" fg:w="1"/><text x="54.3497%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.0997%" y="181" width="0.0804%" height="15" fill="rgb(216,153,54)" fg:x="673" fg:w="1"/><text x="54.3497%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.0997%" y="165" width="0.0804%" height="15" fill="rgb(250,99,7)" fg:x="673" fg:w="1"/><text x="54.3497%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0997%" y="149" width="0.0804%" height="15" fill="rgb(207,56,50)" fg:x="673" fg:w="1"/><text x="54.3497%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.0997%" y="133" width="0.0804%" height="15" fill="rgb(244,61,34)" fg:x="673" fg:w="1"/><text x="54.3497%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.0997%" y="117" width="0.0804%" height="15" fill="rgb(241,50,38)" fg:x="673" fg:w="1"/><text x="54.3497%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.0997%" y="101" width="0.0804%" height="15" fill="rgb(212,166,30)" fg:x="673" fg:w="1"/><text x="54.3497%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.0997%" y="85" width="0.0804%" height="15" fill="rgb(249,127,32)" fg:x="673" fg:w="1"/><text x="54.3497%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.0997%" y="69" width="0.0804%" height="15" fill="rgb(209,103,0)" fg:x="673" fg:w="1"/><text x="54.3497%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0997%" y="53" width="0.0804%" height="15" fill="rgb(238,209,51)" fg:x="673" fg:w="1"/><text x="54.3497%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0193%" y="277" width="0.2412%" height="15" fill="rgb(237,56,23)" fg:x="672" fg:w="3"/><text x="54.2693%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0193%" y="261" width="0.2412%" height="15" fill="rgb(215,153,46)" fg:x="672" fg:w="3"/><text x="54.2693%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.0193%" y="245" width="0.2412%" height="15" fill="rgb(224,49,31)" fg:x="672" fg:w="3"/><text x="54.2693%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1801%" y="229" width="0.0804%" height="15" fill="rgb(250,18,42)" fg:x="674" fg:w="1"/><text x="54.4301%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2605%" y="277" width="0.0804%" height="15" fill="rgb(215,176,39)" fg:x="675" fg:w="1"/><text x="54.5105%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3408%" y="277" width="0.0804%" height="15" fill="rgb(223,77,29)" fg:x="676" fg:w="1"/><text x="54.5908%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.3408%" y="261" width="0.0804%" height="15" fill="rgb(234,94,52)" fg:x="676" fg:w="1"/><text x="54.5908%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.3408%" y="245" width="0.0804%" height="15" fill="rgb(220,154,50)" fg:x="676" fg:w="1"/><text x="54.5908%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3408%" y="229" width="0.0804%" height="15" fill="rgb(212,11,10)" fg:x="676" fg:w="1"/><text x="54.5908%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.4212%" y="213" width="0.1608%" height="15" fill="rgb(205,166,19)" fg:x="677" fg:w="2"/><text x="54.6712%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.4212%" y="197" width="0.1608%" height="15" fill="rgb(244,198,16)" fg:x="677" fg:w="2"/><text x="54.6712%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.5820%" y="213" width="0.1608%" height="15" fill="rgb(219,69,12)" fg:x="679" fg:w="2"/><text x="54.8320%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.6624%" y="197" width="0.0804%" height="15" fill="rgb(245,30,7)" fg:x="680" fg:w="1"/><text x="54.9124%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.6624%" y="181" width="0.0804%" height="15" fill="rgb(218,221,48)" fg:x="680" fg:w="1"/><text x="54.9124%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (14 samples, 1.13%)</title><rect x="53.7781%" y="309" width="1.1254%" height="15" fill="rgb(216,66,15)" fg:x="669" fg:w="14"/><text x="54.0281%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.05%)</title><rect x="53.8585%" y="293" width="1.0450%" height="15" fill="rgb(226,122,50)" fg:x="670" fg:w="13"/><text x="54.1085%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="54.4212%" y="277" width="0.4823%" height="15" fill="rgb(239,156,16)" fg:x="677" fg:w="6"/><text x="54.6712%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.4212%" y="261" width="0.4823%" height="15" fill="rgb(224,27,38)" fg:x="677" fg:w="6"/><text x="54.6712%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="54.4212%" y="245" width="0.4823%" height="15" fill="rgb(224,39,27)" fg:x="677" fg:w="6"/><text x="54.6712%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.4212%" y="229" width="0.4823%" height="15" fill="rgb(215,92,29)" fg:x="677" fg:w="6"/><text x="54.6712%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.7428%" y="213" width="0.1608%" height="15" fill="rgb(207,159,16)" fg:x="681" fg:w="2"/><text x="54.9928%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.7428%" y="197" width="0.1608%" height="15" fill="rgb(238,163,47)" fg:x="681" fg:w="2"/><text x="54.9928%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.9839%" y="245" width="0.0804%" height="15" fill="rgb(219,91,49)" fg:x="684" fg:w="1"/><text x="55.2339%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9839%" y="229" width="0.0804%" height="15" fill="rgb(227,167,31)" fg:x="684" fg:w="1"/><text x="55.2339%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9839%" y="213" width="0.0804%" height="15" fill="rgb(234,80,54)" fg:x="684" fg:w="1"/><text x="55.2339%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9839%" y="197" width="0.0804%" height="15" fill="rgb(212,114,2)" fg:x="684" fg:w="1"/><text x="55.2339%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9839%" y="181" width="0.0804%" height="15" fill="rgb(234,50,24)" fg:x="684" fg:w="1"/><text x="55.2339%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9839%" y="165" width="0.0804%" height="15" fill="rgb(221,68,8)" fg:x="684" fg:w="1"/><text x="55.2339%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9839%" y="149" width="0.0804%" height="15" fill="rgb(254,180,31)" fg:x="684" fg:w="1"/><text x="55.2339%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9839%" y="133" width="0.0804%" height="15" fill="rgb(247,130,50)" fg:x="684" fg:w="1"/><text x="55.2339%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9839%" y="117" width="0.0804%" height="15" fill="rgb(211,109,4)" fg:x="684" fg:w="1"/><text x="55.2339%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9839%" y="101" width="0.0804%" height="15" fill="rgb(238,50,21)" fg:x="684" fg:w="1"/><text x="55.2339%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9839%" y="85" width="0.0804%" height="15" fill="rgb(225,57,45)" fg:x="684" fg:w="1"/><text x="55.2339%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9839%" y="69" width="0.0804%" height="15" fill="rgb(209,196,50)" fg:x="684" fg:w="1"/><text x="55.2339%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9839%" y="53" width="0.0804%" height="15" fill="rgb(242,140,13)" fg:x="684" fg:w="1"/><text x="55.2339%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9035%" y="277" width="0.2412%" height="15" fill="rgb(217,111,7)" fg:x="683" fg:w="3"/><text x="55.1535%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9035%" y="261" width="0.2412%" height="15" fill="rgb(253,193,51)" fg:x="683" fg:w="3"/><text x="55.1535%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0643%" y="245" width="0.0804%" height="15" fill="rgb(252,70,29)" fg:x="685" fg:w="1"/><text x="55.3143%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0643%" y="229" width="0.0804%" height="15" fill="rgb(232,127,12)" fg:x="685" fg:w="1"/><text x="55.3143%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.0643%" y="213" width="0.0804%" height="15" fill="rgb(211,180,21)" fg:x="685" fg:w="1"/><text x="55.3143%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.0643%" y="197" width="0.0804%" height="15" fill="rgb(229,72,13)" fg:x="685" fg:w="1"/><text x="55.3143%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.0643%" y="181" width="0.0804%" height="15" fill="rgb(240,211,49)" fg:x="685" fg:w="1"/><text x="55.3143%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="55.0643%" y="165" width="0.0804%" height="15" fill="rgb(219,149,40)" fg:x="685" fg:w="1"/><text x="55.3143%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="55.0643%" y="149" width="0.0804%" height="15" fill="rgb(210,127,46)" fg:x="685" fg:w="1"/><text x="55.3143%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2251%" y="213" width="0.0804%" height="15" fill="rgb(220,106,7)" fg:x="687" fg:w="1"/><text x="55.4751%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.2251%" y="197" width="0.0804%" height="15" fill="rgb(249,31,22)" fg:x="687" fg:w="1"/><text x="55.4751%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="54.9035%" y="309" width="0.7235%" height="15" fill="rgb(253,1,49)" fg:x="683" fg:w="9"/><text x="55.1535%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="54.9035%" y="293" width="0.7235%" height="15" fill="rgb(227,144,33)" fg:x="683" fg:w="9"/><text x="55.1535%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="55.1447%" y="277" width="0.4823%" height="15" fill="rgb(249,163,44)" fg:x="686" fg:w="6"/><text x="55.3947%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.1447%" y="261" width="0.4823%" height="15" fill="rgb(234,15,39)" fg:x="686" fg:w="6"/><text x="55.3947%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="55.1447%" y="245" width="0.4823%" height="15" fill="rgb(207,66,16)" fg:x="686" fg:w="6"/><text x="55.3947%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.1447%" y="229" width="0.4823%" height="15" fill="rgb(233,112,24)" fg:x="686" fg:w="6"/><text x="55.3947%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.3055%" y="213" width="0.3215%" height="15" fill="rgb(230,90,22)" fg:x="688" fg:w="4"/><text x="55.5555%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.3055%" y="197" width="0.3215%" height="15" fill="rgb(229,61,13)" fg:x="688" fg:w="4"/><text x="55.5555%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.5466%" y="181" width="0.0804%" height="15" fill="rgb(225,57,24)" fg:x="691" fg:w="1"/><text x="55.7966%" y="191.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="55.6270%" y="293" width="0.0804%" height="15" fill="rgb(208,169,48)" fg:x="692" fg:w="1"/><text x="55.8770%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="55.6270%" y="277" width="0.0804%" height="15" fill="rgb(244,218,51)" fg:x="692" fg:w="1"/><text x="55.8770%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.6270%" y="261" width="0.0804%" height="15" fill="rgb(214,148,10)" fg:x="692" fg:w="1"/><text x="55.8770%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.6270%" y="245" width="0.0804%" height="15" fill="rgb(225,174,27)" fg:x="692" fg:w="1"/><text x="55.8770%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.6270%" y="229" width="0.0804%" height="15" fill="rgb(230,96,26)" fg:x="692" fg:w="1"/><text x="55.8770%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.6270%" y="213" width="0.0804%" height="15" fill="rgb(232,10,30)" fg:x="692" fg:w="1"/><text x="55.8770%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.6270%" y="197" width="0.0804%" height="15" fill="rgb(222,8,50)" fg:x="692" fg:w="1"/><text x="55.8770%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.6270%" y="181" width="0.0804%" height="15" fill="rgb(213,81,27)" fg:x="692" fg:w="1"/><text x="55.8770%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6270%" y="165" width="0.0804%" height="15" fill="rgb(245,50,10)" fg:x="692" fg:w="1"/><text x="55.8770%" y="175.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (27 samples, 2.17%)</title><rect x="53.6174%" y="357" width="2.1704%" height="15" fill="rgb(216,100,18)" fg:x="667" fg:w="27"/><text x="53.8674%" y="367.50">&lt;..</text></g><g><title>kernel::model::entry::EntryResolver::entry (27 samples, 2.17%)</title><rect x="53.6174%" y="341" width="2.1704%" height="15" fill="rgb(236,147,54)" fg:x="667" fg:w="27"/><text x="53.8674%" y="351.50">k..</text></g><g><title>kernel::model::entry::Entry::new (25 samples, 2.01%)</title><rect x="53.7781%" y="325" width="2.0096%" height="15" fill="rgb(205,143,26)" fg:x="669" fg:w="25"/><text x="54.0281%" y="335.50">k..</text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="55.6270%" y="309" width="0.1608%" height="15" fill="rgb(236,26,9)" fg:x="692" fg:w="2"/><text x="55.8770%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="55.7074%" y="293" width="0.0804%" height="15" fill="rgb(221,165,53)" fg:x="693" fg:w="1"/><text x="55.9574%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="55.7074%" y="277" width="0.0804%" height="15" fill="rgb(214,110,17)" fg:x="693" fg:w="1"/><text x="55.9574%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="55.7074%" y="261" width="0.0804%" height="15" fill="rgb(237,197,12)" fg:x="693" fg:w="1"/><text x="55.9574%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="55.7074%" y="245" width="0.0804%" height="15" fill="rgb(205,84,17)" fg:x="693" fg:w="1"/><text x="55.9574%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="55.7878%" y="357" width="0.1608%" height="15" fill="rgb(237,18,45)" fg:x="694" fg:w="2"/><text x="56.0378%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8682%" y="341" width="0.0804%" height="15" fill="rgb(221,87,14)" fg:x="695" fg:w="1"/><text x="56.1182%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScope&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="55.9486%" y="357" width="0.0804%" height="15" fill="rgb(238,186,15)" fg:x="696" fg:w="1"/><text x="56.1986%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.0289%" y="277" width="0.1608%" height="15" fill="rgb(208,115,11)" fg:x="697" fg:w="2"/><text x="56.2789%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.0289%" y="261" width="0.1608%" height="15" fill="rgb(254,175,0)" fg:x="697" fg:w="2"/><text x="56.2789%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.0289%" y="245" width="0.1608%" height="15" fill="rgb(227,24,42)" fg:x="697" fg:w="2"/><text x="56.2789%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.0289%" y="229" width="0.1608%" height="15" fill="rgb(223,211,37)" fg:x="697" fg:w="2"/><text x="56.2789%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.0289%" y="213" width="0.1608%" height="15" fill="rgb(235,49,27)" fg:x="697" fg:w="2"/><text x="56.2789%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.0289%" y="197" width="0.1608%" height="15" fill="rgb(254,97,51)" fg:x="697" fg:w="2"/><text x="56.2789%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.0289%" y="181" width="0.1608%" height="15" fill="rgb(249,51,40)" fg:x="697" fg:w="2"/><text x="56.2789%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.0289%" y="165" width="0.1608%" height="15" fill="rgb(210,128,45)" fg:x="697" fg:w="2"/><text x="56.2789%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.0289%" y="149" width="0.1608%" height="15" fill="rgb(224,137,50)" fg:x="697" fg:w="2"/><text x="56.2789%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.0289%" y="133" width="0.1608%" height="15" fill="rgb(242,15,9)" fg:x="697" fg:w="2"/><text x="56.2789%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.0289%" y="117" width="0.1608%" height="15" fill="rgb(233,187,41)" fg:x="697" fg:w="2"/><text x="56.2789%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.0289%" y="101" width="0.1608%" height="15" fill="rgb(227,2,29)" fg:x="697" fg:w="2"/><text x="56.2789%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.0289%" y="85" width="0.1608%" height="15" fill="rgb(222,70,3)" fg:x="697" fg:w="2"/><text x="56.2789%" y="95.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.0289%" y="325" width="0.2412%" height="15" fill="rgb(213,11,42)" fg:x="697" fg:w="3"/><text x="56.2789%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="56.0289%" y="309" width="0.2412%" height="15" fill="rgb(225,150,9)" fg:x="697" fg:w="3"/><text x="56.2789%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.0289%" y="293" width="0.2412%" height="15" fill="rgb(230,162,45)" fg:x="697" fg:w="3"/><text x="56.2789%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1897%" y="277" width="0.0804%" height="15" fill="rgb(222,14,52)" fg:x="699" fg:w="1"/><text x="56.4397%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.2701%" y="325" width="0.1608%" height="15" fill="rgb(254,198,14)" fg:x="700" fg:w="2"/><text x="56.5201%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.4309%" y="293" width="0.0804%" height="15" fill="rgb(220,217,30)" fg:x="702" fg:w="1"/><text x="56.6809%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.5113%" y="293" width="0.0804%" height="15" fill="rgb(215,146,41)" fg:x="703" fg:w="1"/><text x="56.7613%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5113%" y="277" width="0.0804%" height="15" fill="rgb(217,27,36)" fg:x="703" fg:w="1"/><text x="56.7613%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (104 samples, 8.36%)</title><rect x="48.3119%" y="581" width="8.3601%" height="15" fill="rgb(219,218,39)" fg:x="601" fg:w="104"/><text x="48.5619%" y="591.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::apply_middleware (104 samples, 8.36%)</title><rect x="48.3119%" y="565" width="8.3601%" height="15" fill="rgb(219,4,42)" fg:x="601" fg:w="104"/><text x="48.5619%" y="575.50">kernel::plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (104 samples, 8.36%)</title><rect x="48.3119%" y="549" width="8.3601%" height="15" fill="rgb(249,119,36)" fg:x="601" fg:w="104"/><text x="48.5619%" y="559.50">kernel::plug..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (104 samples, 8.36%)</title><rect x="48.3119%" y="533" width="8.3601%" height="15" fill="rgb(209,23,33)" fg:x="601" fg:w="104"/><text x="48.5619%" y="543.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (83 samples, 6.67%)</title><rect x="50.0000%" y="517" width="6.6720%" height="15" fill="rgb(211,10,0)" fg:x="622" fg:w="83"/><text x="50.2500%" y="527.50">kernel::p..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (83 samples, 6.67%)</title><rect x="50.0000%" y="501" width="6.6720%" height="15" fill="rgb(208,99,37)" fg:x="622" fg:w="83"/><text x="50.2500%" y="511.50">&lt;plugins_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (83 samples, 6.67%)</title><rect x="50.0000%" y="485" width="6.6720%" height="15" fill="rgb(213,132,31)" fg:x="622" fg:w="83"/><text x="50.2500%" y="495.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (83 samples, 6.67%)</title><rect x="50.0000%" y="469" width="6.6720%" height="15" fill="rgb(243,129,40)" fg:x="622" fg:w="83"/><text x="50.2500%" y="479.50">core::ops..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (83 samples, 6.67%)</title><rect x="50.0000%" y="453" width="6.6720%" height="15" fill="rgb(210,66,33)" fg:x="622" fg:w="83"/><text x="50.2500%" y="463.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (83 samples, 6.67%)</title><rect x="50.0000%" y="437" width="6.6720%" height="15" fill="rgb(209,189,4)" fg:x="622" fg:w="83"/><text x="50.2500%" y="447.50">core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (82 samples, 6.59%)</title><rect x="50.0804%" y="421" width="6.5916%" height="15" fill="rgb(214,107,37)" fg:x="623" fg:w="82"/><text x="50.3304%" y="431.50">&lt;alloc::b..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (82 samples, 6.59%)</title><rect x="50.0804%" y="405" width="6.5916%" height="15" fill="rgb(245,88,54)" fg:x="623" fg:w="82"/><text x="50.3304%" y="415.50">&lt;engine::..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (82 samples, 6.59%)</title><rect x="50.0804%" y="389" width="6.5916%" height="15" fill="rgb(205,146,20)" fg:x="623" fg:w="82"/><text x="50.3304%" y="399.50">&lt;plugins_..</text></g><g><title>plugins_core::looking::model::new_area_observation (69 samples, 5.55%)</title><rect x="51.1254%" y="373" width="5.5466%" height="15" fill="rgb(220,161,25)" fg:x="636" fg:w="69"/><text x="51.3754%" y="383.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="56.0289%" y="357" width="0.6431%" height="15" fill="rgb(215,152,15)" fg:x="697" fg:w="8"/><text x="56.2789%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="56.0289%" y="341" width="0.6431%" height="15" fill="rgb(233,192,44)" fg:x="697" fg:w="8"/><text x="56.2789%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.4309%" y="325" width="0.2412%" height="15" fill="rgb(240,170,46)" fg:x="702" fg:w="3"/><text x="56.6809%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.4309%" y="309" width="0.2412%" height="15" fill="rgb(207,104,33)" fg:x="702" fg:w="3"/><text x="56.6809%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.5916%" y="293" width="0.0804%" height="15" fill="rgb(219,21,39)" fg:x="704" fg:w="1"/><text x="56.8416%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.5916%" y="277" width="0.0804%" height="15" fill="rgb(214,133,29)" fg:x="704" fg:w="1"/><text x="56.8416%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.5916%" y="261" width="0.0804%" height="15" fill="rgb(226,93,6)" fg:x="704" fg:w="1"/><text x="56.8416%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.5916%" y="245" width="0.0804%" height="15" fill="rgb(252,222,34)" fg:x="704" fg:w="1"/><text x="56.8416%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5916%" y="229" width="0.0804%" height="15" fill="rgb(252,92,48)" fg:x="704" fg:w="1"/><text x="56.8416%" y="239.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="56.6720%" y="581" width="0.1608%" height="15" fill="rgb(245,223,24)" fg:x="705" fg:w="2"/><text x="56.9220%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="56.6720%" y="565" width="0.1608%" height="15" fill="rgb(205,176,3)" fg:x="705" fg:w="2"/><text x="56.9220%" y="575.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="56.7524%" y="549" width="0.0804%" height="15" fill="rgb(235,151,15)" fg:x="706" fg:w="1"/><text x="57.0024%" y="559.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="56.7524%" y="533" width="0.0804%" height="15" fill="rgb(237,209,11)" fg:x="706" fg:w="1"/><text x="57.0024%" y="543.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="56.8328%" y="581" width="0.0804%" height="15" fill="rgb(243,227,24)" fg:x="707" fg:w="1"/><text x="57.0828%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="57.0740%" y="549" width="0.0804%" height="15" fill="rgb(239,193,16)" fg:x="710" fg:w="1"/><text x="57.3240%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.2347%" y="453" width="0.0804%" height="15" fill="rgb(231,27,9)" fg:x="712" fg:w="1"/><text x="57.4847%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2347%" y="437" width="0.0804%" height="15" fill="rgb(219,169,10)" fg:x="712" fg:w="1"/><text x="57.4847%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.1543%" y="501" width="0.2412%" height="15" fill="rgb(244,229,43)" fg:x="711" fg:w="3"/><text x="57.4043%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.2347%" y="485" width="0.1608%" height="15" fill="rgb(254,38,20)" fg:x="712" fg:w="2"/><text x="57.4847%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.2347%" y="469" width="0.1608%" height="15" fill="rgb(250,47,30)" fg:x="712" fg:w="2"/><text x="57.4847%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3151%" y="453" width="0.0804%" height="15" fill="rgb(224,124,36)" fg:x="713" fg:w="1"/><text x="57.5651%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.1543%" y="517" width="0.3215%" height="15" fill="rgb(246,68,51)" fg:x="711" fg:w="4"/><text x="57.4043%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3955%" y="501" width="0.0804%" height="15" fill="rgb(253,43,49)" fg:x="714" fg:w="1"/><text x="57.6455%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3955%" y="485" width="0.0804%" height="15" fill="rgb(219,54,36)" fg:x="714" fg:w="1"/><text x="57.6455%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3955%" y="469" width="0.0804%" height="15" fill="rgb(227,133,34)" fg:x="714" fg:w="1"/><text x="57.6455%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3955%" y="453" width="0.0804%" height="15" fill="rgb(247,227,15)" fg:x="714" fg:w="1"/><text x="57.6455%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3955%" y="437" width="0.0804%" height="15" fill="rgb(229,96,14)" fg:x="714" fg:w="1"/><text x="57.6455%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3955%" y="421" width="0.0804%" height="15" fill="rgb(220,79,17)" fg:x="714" fg:w="1"/><text x="57.6455%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3955%" y="405" width="0.0804%" height="15" fill="rgb(205,131,53)" fg:x="714" fg:w="1"/><text x="57.6455%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="57.4759%" y="517" width="0.1608%" height="15" fill="rgb(209,50,29)" fg:x="715" fg:w="2"/><text x="57.7259%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="57.4759%" y="501" width="0.1608%" height="15" fill="rgb(245,86,46)" fg:x="715" fg:w="2"/><text x="57.7259%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.4759%" y="485" width="0.1608%" height="15" fill="rgb(235,66,46)" fg:x="715" fg:w="2"/><text x="57.7259%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4759%" y="469" width="0.1608%" height="15" fill="rgb(232,148,31)" fg:x="715" fg:w="2"/><text x="57.7259%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.4759%" y="453" width="0.1608%" height="15" fill="rgb(217,149,8)" fg:x="715" fg:w="2"/><text x="57.7259%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4759%" y="437" width="0.1608%" height="15" fill="rgb(209,183,11)" fg:x="715" fg:w="2"/><text x="57.7259%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.5563%" y="421" width="0.0804%" height="15" fill="rgb(208,55,20)" fg:x="716" fg:w="1"/><text x="57.8063%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.7170%" y="437" width="0.0804%" height="15" fill="rgb(218,39,14)" fg:x="718" fg:w="1"/><text x="57.9670%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.7974%" y="357" width="0.0804%" height="15" fill="rgb(216,169,33)" fg:x="719" fg:w="1"/><text x="58.0474%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="57.7974%" y="389" width="0.2412%" height="15" fill="rgb(233,80,24)" fg:x="719" fg:w="3"/><text x="58.0474%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="57.7974%" y="373" width="0.2412%" height="15" fill="rgb(213,179,31)" fg:x="719" fg:w="3"/><text x="58.0474%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.8778%" y="357" width="0.1608%" height="15" fill="rgb(209,19,5)" fg:x="720" fg:w="2"/><text x="58.1278%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="57.7974%" y="421" width="0.3215%" height="15" fill="rgb(219,18,35)" fg:x="719" fg:w="4"/><text x="58.0474%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="57.7974%" y="405" width="0.3215%" height="15" fill="rgb(209,169,16)" fg:x="719" fg:w="4"/><text x="58.0474%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="58.0386%" y="389" width="0.0804%" height="15" fill="rgb(245,90,51)" fg:x="722" fg:w="1"/><text x="58.2886%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1190%" y="421" width="0.0804%" height="15" fill="rgb(220,99,45)" fg:x="723" fg:w="1"/><text x="58.3690%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.1994%" y="421" width="0.0804%" height="15" fill="rgb(249,89,25)" fg:x="724" fg:w="1"/><text x="58.4494%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.1994%" y="405" width="0.0804%" height="15" fill="rgb(239,193,0)" fg:x="724" fg:w="1"/><text x="58.4494%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="58.1994%" y="389" width="0.0804%" height="15" fill="rgb(231,126,1)" fg:x="724" fg:w="1"/><text x="58.4494%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.2797%" y="389" width="0.0804%" height="15" fill="rgb(243,166,3)" fg:x="725" fg:w="1"/><text x="58.5297%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.2797%" y="373" width="0.0804%" height="15" fill="rgb(223,22,34)" fg:x="725" fg:w="1"/><text x="58.5297%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.2797%" y="357" width="0.0804%" height="15" fill="rgb(251,52,51)" fg:x="725" fg:w="1"/><text x="58.5297%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.80%)</title><rect x="57.6367%" y="517" width="0.8039%" height="15" fill="rgb(221,165,28)" fg:x="717" fg:w="10"/><text x="57.8867%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="57.6367%" y="501" width="0.8039%" height="15" fill="rgb(218,121,47)" fg:x="717" fg:w="10"/><text x="57.8867%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="57.6367%" y="485" width="0.8039%" height="15" fill="rgb(209,120,9)" fg:x="717" fg:w="10"/><text x="57.8867%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (10 samples, 0.80%)</title><rect x="57.6367%" y="469" width="0.8039%" height="15" fill="rgb(236,68,12)" fg:x="717" fg:w="10"/><text x="57.8867%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="57.6367%" y="453" width="0.8039%" height="15" fill="rgb(225,194,26)" fg:x="717" fg:w="10"/><text x="57.8867%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="57.7974%" y="437" width="0.6431%" height="15" fill="rgb(231,84,39)" fg:x="719" fg:w="8"/><text x="58.0474%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.2797%" y="421" width="0.1608%" height="15" fill="rgb(210,11,45)" fg:x="725" fg:w="2"/><text x="58.5297%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.2797%" y="405" width="0.1608%" height="15" fill="rgb(224,54,52)" fg:x="725" fg:w="2"/><text x="58.5297%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.3601%" y="389" width="0.0804%" height="15" fill="rgb(238,102,14)" fg:x="726" fg:w="1"/><text x="58.6101%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3601%" y="373" width="0.0804%" height="15" fill="rgb(243,160,52)" fg:x="726" fg:w="1"/><text x="58.6101%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.3601%" y="357" width="0.0804%" height="15" fill="rgb(216,114,19)" fg:x="726" fg:w="1"/><text x="58.6101%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="58.3601%" y="341" width="0.0804%" height="15" fill="rgb(244,166,37)" fg:x="726" fg:w="1"/><text x="58.6101%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.3601%" y="325" width="0.0804%" height="15" fill="rgb(246,29,44)" fg:x="726" fg:w="1"/><text x="58.6101%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.3601%" y="309" width="0.0804%" height="15" fill="rgb(215,56,53)" fg:x="726" fg:w="1"/><text x="58.6101%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="58.4405%" y="437" width="0.0804%" height="15" fill="rgb(217,60,2)" fg:x="727" fg:w="1"/><text x="58.6905%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="58.6013%" y="357" width="0.2412%" height="15" fill="rgb(207,26,24)" fg:x="729" fg:w="3"/><text x="58.8513%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.7621%" y="341" width="0.0804%" height="15" fill="rgb(252,210,15)" fg:x="731" fg:w="1"/><text x="59.0121%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.7621%" y="325" width="0.0804%" height="15" fill="rgb(253,209,26)" fg:x="731" fg:w="1"/><text x="59.0121%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.6013%" y="421" width="0.3215%" height="15" fill="rgb(238,170,14)" fg:x="729" fg:w="4"/><text x="58.8513%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="58.6013%" y="405" width="0.3215%" height="15" fill="rgb(216,178,15)" fg:x="729" fg:w="4"/><text x="58.8513%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="58.6013%" y="389" width="0.3215%" height="15" fill="rgb(250,197,2)" fg:x="729" fg:w="4"/><text x="58.8513%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="58.6013%" y="373" width="0.3215%" height="15" fill="rgb(212,70,42)" fg:x="729" fg:w="4"/><text x="58.8513%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.8424%" y="357" width="0.0804%" height="15" fill="rgb(227,213,9)" fg:x="732" fg:w="1"/><text x="59.0924%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="58.4405%" y="453" width="0.5627%" height="15" fill="rgb(245,99,25)" fg:x="727" fg:w="7"/><text x="58.6905%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="58.5209%" y="437" width="0.4823%" height="15" fill="rgb(250,82,29)" fg:x="728" fg:w="6"/><text x="58.7709%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.9228%" y="421" width="0.0804%" height="15" fill="rgb(241,226,54)" fg:x="733" fg:w="1"/><text x="59.1728%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (24 samples, 1.93%)</title><rect x="57.1543%" y="549" width="1.9293%" height="15" fill="rgb(221,99,41)" fg:x="711" fg:w="24"/><text x="57.4043%" y="559.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.93%)</title><rect x="57.1543%" y="533" width="1.9293%" height="15" fill="rgb(213,90,21)" fg:x="711" fg:w="24"/><text x="57.4043%" y="543.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.64%)</title><rect x="58.4405%" y="517" width="0.6431%" height="15" fill="rgb(205,208,24)" fg:x="727" fg:w="8"/><text x="58.6905%" y="527.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="58.4405%" y="501" width="0.6431%" height="15" fill="rgb(246,31,12)" fg:x="727" fg:w="8"/><text x="58.6905%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="58.4405%" y="485" width="0.6431%" height="15" fill="rgb(213,154,6)" fg:x="727" fg:w="8"/><text x="58.6905%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="58.4405%" y="469" width="0.6431%" height="15" fill="rgb(222,163,29)" fg:x="727" fg:w="8"/><text x="58.6905%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.0032%" y="453" width="0.0804%" height="15" fill="rgb(227,201,8)" fg:x="734" fg:w="1"/><text x="59.2532%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1640%" y="453" width="0.0804%" height="15" fill="rgb(233,9,32)" fg:x="736" fg:w="1"/><text x="59.4140%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2444%" y="453" width="0.0804%" height="15" fill="rgb(217,54,24)" fg:x="737" fg:w="1"/><text x="59.4944%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2444%" y="437" width="0.0804%" height="15" fill="rgb(235,192,0)" fg:x="737" fg:w="1"/><text x="59.4944%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2444%" y="421" width="0.0804%" height="15" fill="rgb(235,45,9)" fg:x="737" fg:w="1"/><text x="59.4944%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2444%" y="405" width="0.0804%" height="15" fill="rgb(246,42,40)" fg:x="737" fg:w="1"/><text x="59.4944%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2444%" y="389" width="0.0804%" height="15" fill="rgb(248,111,24)" fg:x="737" fg:w="1"/><text x="59.4944%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2444%" y="373" width="0.0804%" height="15" fill="rgb(249,65,22)" fg:x="737" fg:w="1"/><text x="59.4944%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2444%" y="357" width="0.0804%" height="15" fill="rgb(238,111,51)" fg:x="737" fg:w="1"/><text x="59.4944%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2444%" y="341" width="0.0804%" height="15" fill="rgb(250,118,22)" fg:x="737" fg:w="1"/><text x="59.4944%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2444%" y="325" width="0.0804%" height="15" fill="rgb(234,84,26)" fg:x="737" fg:w="1"/><text x="59.4944%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2444%" y="309" width="0.0804%" height="15" fill="rgb(243,172,12)" fg:x="737" fg:w="1"/><text x="59.4944%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2444%" y="293" width="0.0804%" height="15" fill="rgb(236,150,49)" fg:x="737" fg:w="1"/><text x="59.4944%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2444%" y="277" width="0.0804%" height="15" fill="rgb(225,197,26)" fg:x="737" fg:w="1"/><text x="59.4944%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.1640%" y="469" width="0.2412%" height="15" fill="rgb(214,17,42)" fg:x="736" fg:w="3"/><text x="59.4140%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3248%" y="453" width="0.0804%" height="15" fill="rgb(224,165,40)" fg:x="738" fg:w="1"/><text x="59.5748%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="59.4051%" y="469" width="0.3215%" height="15" fill="rgb(246,100,4)" fg:x="739" fg:w="4"/><text x="59.6551%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.4855%" y="453" width="0.2412%" height="15" fill="rgb(222,103,0)" fg:x="740" fg:w="3"/><text x="59.7355%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6463%" y="437" width="0.0804%" height="15" fill="rgb(227,189,26)" fg:x="742" fg:w="1"/><text x="59.8963%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6463%" y="421" width="0.0804%" height="15" fill="rgb(214,202,17)" fg:x="742" fg:w="1"/><text x="59.8963%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6463%" y="405" width="0.0804%" height="15" fill="rgb(229,111,3)" fg:x="742" fg:w="1"/><text x="59.8963%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6463%" y="389" width="0.0804%" height="15" fill="rgb(229,172,15)" fg:x="742" fg:w="1"/><text x="59.8963%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6463%" y="373" width="0.0804%" height="15" fill="rgb(230,224,35)" fg:x="742" fg:w="1"/><text x="59.8963%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6463%" y="357" width="0.0804%" height="15" fill="rgb(251,141,6)" fg:x="742" fg:w="1"/><text x="59.8963%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6463%" y="341" width="0.0804%" height="15" fill="rgb(225,208,6)" fg:x="742" fg:w="1"/><text x="59.8963%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6463%" y="325" width="0.0804%" height="15" fill="rgb(246,181,16)" fg:x="742" fg:w="1"/><text x="59.8963%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6463%" y="309" width="0.0804%" height="15" fill="rgb(227,129,36)" fg:x="742" fg:w="1"/><text x="59.8963%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6463%" y="293" width="0.0804%" height="15" fill="rgb(248,117,24)" fg:x="742" fg:w="1"/><text x="59.8963%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6463%" y="277" width="0.0804%" height="15" fill="rgb(214,185,35)" fg:x="742" fg:w="1"/><text x="59.8963%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6463%" y="261" width="0.0804%" height="15" fill="rgb(236,150,34)" fg:x="742" fg:w="1"/><text x="59.8963%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="59.1640%" y="485" width="0.6431%" height="15" fill="rgb(243,228,27)" fg:x="736" fg:w="8"/><text x="59.4140%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7267%" y="469" width="0.0804%" height="15" fill="rgb(245,77,44)" fg:x="743" fg:w="1"/><text x="59.9767%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.72%)</title><rect x="59.1640%" y="501" width="0.7235%" height="15" fill="rgb(235,214,42)" fg:x="736" fg:w="9"/><text x="59.4140%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8071%" y="485" width="0.0804%" height="15" fill="rgb(221,74,3)" fg:x="744" fg:w="1"/><text x="60.0571%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8071%" y="469" width="0.0804%" height="15" fill="rgb(206,121,29)" fg:x="744" fg:w="1"/><text x="60.0571%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.8071%" y="453" width="0.0804%" height="15" fill="rgb(249,131,53)" fg:x="744" fg:w="1"/><text x="60.0571%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.8071%" y="437" width="0.0804%" height="15" fill="rgb(236,170,29)" fg:x="744" fg:w="1"/><text x="60.0571%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.8071%" y="421" width="0.0804%" height="15" fill="rgb(247,96,15)" fg:x="744" fg:w="1"/><text x="60.0571%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8071%" y="405" width="0.0804%" height="15" fill="rgb(211,210,7)" fg:x="744" fg:w="1"/><text x="60.0571%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8071%" y="389" width="0.0804%" height="15" fill="rgb(240,88,50)" fg:x="744" fg:w="1"/><text x="60.0571%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.8071%" y="373" width="0.0804%" height="15" fill="rgb(209,229,26)" fg:x="744" fg:w="1"/><text x="60.0571%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.8071%" y="357" width="0.0804%" height="15" fill="rgb(210,68,23)" fg:x="744" fg:w="1"/><text x="60.0571%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.8071%" y="341" width="0.0804%" height="15" fill="rgb(229,180,13)" fg:x="744" fg:w="1"/><text x="60.0571%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.8071%" y="325" width="0.0804%" height="15" fill="rgb(236,53,44)" fg:x="744" fg:w="1"/><text x="60.0571%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8071%" y="309" width="0.0804%" height="15" fill="rgb(244,214,29)" fg:x="744" fg:w="1"/><text x="60.0571%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.88%)</title><rect x="59.0836%" y="517" width="0.8842%" height="15" fill="rgb(220,75,29)" fg:x="735" fg:w="11"/><text x="59.3336%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8875%" y="501" width="0.0804%" height="15" fill="rgb(214,183,37)" fg:x="745" fg:w="1"/><text x="60.1375%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8875%" y="485" width="0.0804%" height="15" fill="rgb(239,117,29)" fg:x="745" fg:w="1"/><text x="60.1375%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.8875%" y="469" width="0.0804%" height="15" fill="rgb(237,171,35)" fg:x="745" fg:w="1"/><text x="60.1375%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.8875%" y="453" width="0.0804%" height="15" fill="rgb(229,178,53)" fg:x="745" fg:w="1"/><text x="60.1375%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.8875%" y="437" width="0.0804%" height="15" fill="rgb(210,102,19)" fg:x="745" fg:w="1"/><text x="60.1375%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8875%" y="421" width="0.0804%" height="15" fill="rgb(235,127,22)" fg:x="745" fg:w="1"/><text x="60.1375%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8875%" y="405" width="0.0804%" height="15" fill="rgb(244,31,31)" fg:x="745" fg:w="1"/><text x="60.1375%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.8875%" y="389" width="0.0804%" height="15" fill="rgb(231,43,21)" fg:x="745" fg:w="1"/><text x="60.1375%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.8875%" y="373" width="0.0804%" height="15" fill="rgb(217,131,35)" fg:x="745" fg:w="1"/><text x="60.1375%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.8875%" y="357" width="0.0804%" height="15" fill="rgb(221,149,4)" fg:x="745" fg:w="1"/><text x="60.1375%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.8875%" y="341" width="0.0804%" height="15" fill="rgb(232,170,28)" fg:x="745" fg:w="1"/><text x="60.1375%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8875%" y="325" width="0.0804%" height="15" fill="rgb(238,56,10)" fg:x="745" fg:w="1"/><text x="60.1375%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.1286%" y="421" width="0.0804%" height="15" fill="rgb(235,196,14)" fg:x="748" fg:w="1"/><text x="60.3786%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1286%" y="405" width="0.0804%" height="15" fill="rgb(216,45,48)" fg:x="748" fg:w="1"/><text x="60.3786%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1286%" y="389" width="0.0804%" height="15" fill="rgb(238,213,17)" fg:x="748" fg:w="1"/><text x="60.3786%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.1286%" y="373" width="0.0804%" height="15" fill="rgb(212,13,2)" fg:x="748" fg:w="1"/><text x="60.3786%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.1286%" y="357" width="0.0804%" height="15" fill="rgb(240,114,20)" fg:x="748" fg:w="1"/><text x="60.3786%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.1286%" y="341" width="0.0804%" height="15" fill="rgb(228,41,40)" fg:x="748" fg:w="1"/><text x="60.3786%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1286%" y="325" width="0.0804%" height="15" fill="rgb(244,132,35)" fg:x="748" fg:w="1"/><text x="60.3786%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1286%" y="309" width="0.0804%" height="15" fill="rgb(253,189,4)" fg:x="748" fg:w="1"/><text x="60.3786%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.1286%" y="293" width="0.0804%" height="15" fill="rgb(224,37,19)" fg:x="748" fg:w="1"/><text x="60.3786%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.1286%" y="277" width="0.0804%" height="15" fill="rgb(235,223,18)" fg:x="748" fg:w="1"/><text x="60.3786%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.1286%" y="261" width="0.0804%" height="15" fill="rgb(235,163,25)" fg:x="748" fg:w="1"/><text x="60.3786%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.1286%" y="245" width="0.0804%" height="15" fill="rgb(217,145,28)" fg:x="748" fg:w="1"/><text x="60.3786%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1286%" y="229" width="0.0804%" height="15" fill="rgb(223,223,32)" fg:x="748" fg:w="1"/><text x="60.3786%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.1286%" y="437" width="0.1608%" height="15" fill="rgb(227,189,39)" fg:x="748" fg:w="2"/><text x="60.3786%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2090%" y="421" width="0.0804%" height="15" fill="rgb(248,10,22)" fg:x="749" fg:w="1"/><text x="60.4590%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2090%" y="405" width="0.0804%" height="15" fill="rgb(248,46,39)" fg:x="749" fg:w="1"/><text x="60.4590%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.2090%" y="389" width="0.0804%" height="15" fill="rgb(248,113,48)" fg:x="749" fg:w="1"/><text x="60.4590%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.2090%" y="373" width="0.0804%" height="15" fill="rgb(245,16,25)" fg:x="749" fg:w="1"/><text x="60.4590%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.2090%" y="357" width="0.0804%" height="15" fill="rgb(249,152,16)" fg:x="749" fg:w="1"/><text x="60.4590%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.2090%" y="341" width="0.0804%" height="15" fill="rgb(250,16,1)" fg:x="749" fg:w="1"/><text x="60.4590%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.2090%" y="325" width="0.0804%" height="15" fill="rgb(249,138,3)" fg:x="749" fg:w="1"/><text x="60.4590%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="59.9678%" y="453" width="0.4019%" height="15" fill="rgb(227,71,41)" fg:x="746" fg:w="5"/><text x="60.2178%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2894%" y="437" width="0.0804%" height="15" fill="rgb(209,184,23)" fg:x="750" fg:w="1"/><text x="60.5394%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2894%" y="421" width="0.0804%" height="15" fill="rgb(223,215,31)" fg:x="750" fg:w="1"/><text x="60.5394%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.2894%" y="405" width="0.0804%" height="15" fill="rgb(210,146,28)" fg:x="750" fg:w="1"/><text x="60.5394%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.2894%" y="389" width="0.0804%" height="15" fill="rgb(209,183,41)" fg:x="750" fg:w="1"/><text x="60.5394%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.2894%" y="373" width="0.0804%" height="15" fill="rgb(209,224,45)" fg:x="750" fg:w="1"/><text x="60.5394%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.2894%" y="357" width="0.0804%" height="15" fill="rgb(224,209,51)" fg:x="750" fg:w="1"/><text x="60.5394%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.2894%" y="341" width="0.0804%" height="15" fill="rgb(223,17,39)" fg:x="750" fg:w="1"/><text x="60.5394%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="59.9678%" y="469" width="0.4823%" height="15" fill="rgb(234,204,37)" fg:x="746" fg:w="6"/><text x="60.2178%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3698%" y="453" width="0.0804%" height="15" fill="rgb(236,120,5)" fg:x="751" fg:w="1"/><text x="60.6198%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3698%" y="437" width="0.0804%" height="15" fill="rgb(248,97,27)" fg:x="751" fg:w="1"/><text x="60.6198%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3698%" y="421" width="0.0804%" height="15" fill="rgb(240,66,17)" fg:x="751" fg:w="1"/><text x="60.6198%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3698%" y="405" width="0.0804%" height="15" fill="rgb(210,79,3)" fg:x="751" fg:w="1"/><text x="60.6198%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3698%" y="389" width="0.0804%" height="15" fill="rgb(214,176,27)" fg:x="751" fg:w="1"/><text x="60.6198%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3698%" y="373" width="0.0804%" height="15" fill="rgb(235,185,3)" fg:x="751" fg:w="1"/><text x="60.6198%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3698%" y="357" width="0.0804%" height="15" fill="rgb(227,24,12)" fg:x="751" fg:w="1"/><text x="60.6198%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3698%" y="341" width="0.0804%" height="15" fill="rgb(252,169,48)" fg:x="751" fg:w="1"/><text x="60.6198%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3698%" y="325" width="0.0804%" height="15" fill="rgb(212,65,1)" fg:x="751" fg:w="1"/><text x="60.6198%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3698%" y="309" width="0.0804%" height="15" fill="rgb(242,39,24)" fg:x="751" fg:w="1"/><text x="60.6198%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3698%" y="293" width="0.0804%" height="15" fill="rgb(249,32,23)" fg:x="751" fg:w="1"/><text x="60.6198%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3698%" y="277" width="0.0804%" height="15" fill="rgb(251,195,23)" fg:x="751" fg:w="1"/><text x="60.6198%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.5305%" y="405" width="0.0804%" height="15" fill="rgb(236,174,8)" fg:x="753" fg:w="1"/><text x="60.7805%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5305%" y="389" width="0.0804%" height="15" fill="rgb(220,197,8)" fg:x="753" fg:w="1"/><text x="60.7805%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.5305%" y="373" width="0.0804%" height="15" fill="rgb(240,108,37)" fg:x="753" fg:w="1"/><text x="60.7805%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.5305%" y="357" width="0.0804%" height="15" fill="rgb(232,176,24)" fg:x="753" fg:w="1"/><text x="60.7805%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.5305%" y="341" width="0.0804%" height="15" fill="rgb(243,35,29)" fg:x="753" fg:w="1"/><text x="60.7805%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.5305%" y="325" width="0.0804%" height="15" fill="rgb(210,37,18)" fg:x="753" fg:w="1"/><text x="60.7805%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5305%" y="309" width="0.0804%" height="15" fill="rgb(224,184,40)" fg:x="753" fg:w="1"/><text x="60.7805%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.5305%" y="293" width="0.0804%" height="15" fill="rgb(236,39,29)" fg:x="753" fg:w="1"/><text x="60.7805%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.5305%" y="277" width="0.0804%" height="15" fill="rgb(232,48,39)" fg:x="753" fg:w="1"/><text x="60.7805%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.5305%" y="261" width="0.0804%" height="15" fill="rgb(236,34,42)" fg:x="753" fg:w="1"/><text x="60.7805%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.5305%" y="245" width="0.0804%" height="15" fill="rgb(243,106,37)" fg:x="753" fg:w="1"/><text x="60.7805%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.5305%" y="229" width="0.0804%" height="15" fill="rgb(218,96,6)" fg:x="753" fg:w="1"/><text x="60.7805%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5305%" y="213" width="0.0804%" height="15" fill="rgb(235,130,12)" fg:x="753" fg:w="1"/><text x="60.7805%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.5305%" y="421" width="0.1608%" height="15" fill="rgb(231,95,0)" fg:x="753" fg:w="2"/><text x="60.7805%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6109%" y="405" width="0.0804%" height="15" fill="rgb(228,12,23)" fg:x="754" fg:w="1"/><text x="60.8609%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6109%" y="389" width="0.0804%" height="15" fill="rgb(216,12,1)" fg:x="754" fg:w="1"/><text x="60.8609%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.6109%" y="373" width="0.0804%" height="15" fill="rgb(219,59,3)" fg:x="754" fg:w="1"/><text x="60.8609%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.6109%" y="357" width="0.0804%" height="15" fill="rgb(215,208,46)" fg:x="754" fg:w="1"/><text x="60.8609%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.6109%" y="341" width="0.0804%" height="15" fill="rgb(254,224,29)" fg:x="754" fg:w="1"/><text x="60.8609%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.6109%" y="325" width="0.0804%" height="15" fill="rgb(232,14,29)" fg:x="754" fg:w="1"/><text x="60.8609%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.6109%" y="309" width="0.0804%" height="15" fill="rgb(208,45,52)" fg:x="754" fg:w="1"/><text x="60.8609%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.6913%" y="373" width="0.0804%" height="15" fill="rgb(234,191,28)" fg:x="755" fg:w="1"/><text x="60.9413%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6913%" y="357" width="0.0804%" height="15" fill="rgb(244,67,43)" fg:x="755" fg:w="1"/><text x="60.9413%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="60.7717%" y="373" width="0.1608%" height="15" fill="rgb(236,189,24)" fg:x="756" fg:w="2"/><text x="61.0217%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="60.7717%" y="357" width="0.1608%" height="15" fill="rgb(239,214,33)" fg:x="756" fg:w="2"/><text x="61.0217%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="60.7717%" y="341" width="0.1608%" height="15" fill="rgb(226,176,41)" fg:x="756" fg:w="2"/><text x="61.0217%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.7717%" y="325" width="0.1608%" height="15" fill="rgb(248,47,8)" fg:x="756" fg:w="2"/><text x="61.0217%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.7717%" y="309" width="0.1608%" height="15" fill="rgb(218,81,44)" fg:x="756" fg:w="2"/><text x="61.0217%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.8521%" y="293" width="0.0804%" height="15" fill="rgb(213,98,6)" fg:x="757" fg:w="1"/><text x="61.1021%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9325%" y="293" width="0.0804%" height="15" fill="rgb(222,85,22)" fg:x="758" fg:w="1"/><text x="61.1825%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="60.6913%" y="421" width="0.4019%" height="15" fill="rgb(239,46,39)" fg:x="755" fg:w="5"/><text x="60.9413%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="60.6913%" y="405" width="0.4019%" height="15" fill="rgb(237,12,29)" fg:x="755" fg:w="5"/><text x="60.9413%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="60.6913%" y="389" width="0.4019%" height="15" fill="rgb(214,77,8)" fg:x="755" fg:w="5"/><text x="60.9413%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.9325%" y="373" width="0.1608%" height="15" fill="rgb(217,168,37)" fg:x="758" fg:w="2"/><text x="61.1825%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.9325%" y="357" width="0.1608%" height="15" fill="rgb(221,217,23)" fg:x="758" fg:w="2"/><text x="61.1825%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="60.9325%" y="341" width="0.1608%" height="15" fill="rgb(243,229,36)" fg:x="758" fg:w="2"/><text x="61.1825%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.9325%" y="325" width="0.1608%" height="15" fill="rgb(251,163,40)" fg:x="758" fg:w="2"/><text x="61.1825%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="60.9325%" y="309" width="0.1608%" height="15" fill="rgb(237,222,12)" fg:x="758" fg:w="2"/><text x="61.1825%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.0129%" y="293" width="0.0804%" height="15" fill="rgb(248,132,6)" fg:x="759" fg:w="1"/><text x="61.2629%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.0932%" y="389" width="0.0804%" height="15" fill="rgb(227,167,50)" fg:x="760" fg:w="1"/><text x="61.3432%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="60.4502%" y="469" width="0.8039%" height="15" fill="rgb(242,84,37)" fg:x="752" fg:w="10"/><text x="60.7002%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="60.4502%" y="453" width="0.8039%" height="15" fill="rgb(212,4,50)" fg:x="752" fg:w="10"/><text x="60.7002%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="60.5305%" y="437" width="0.7235%" height="15" fill="rgb(230,228,32)" fg:x="753" fg:w="9"/><text x="60.7805%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.0932%" y="421" width="0.1608%" height="15" fill="rgb(248,217,23)" fg:x="760" fg:w="2"/><text x="61.3432%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.0932%" y="405" width="0.1608%" height="15" fill="rgb(238,197,32)" fg:x="760" fg:w="2"/><text x="61.3432%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.1736%" y="389" width="0.0804%" height="15" fill="rgb(236,106,1)" fg:x="761" fg:w="1"/><text x="61.4236%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="61.1736%" y="373" width="0.0804%" height="15" fill="rgb(219,228,13)" fg:x="761" fg:w="1"/><text x="61.4236%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.1736%" y="357" width="0.0804%" height="15" fill="rgb(238,30,35)" fg:x="761" fg:w="1"/><text x="61.4236%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.1736%" y="341" width="0.0804%" height="15" fill="rgb(236,70,23)" fg:x="761" fg:w="1"/><text x="61.4236%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2540%" y="437" width="0.0804%" height="15" fill="rgb(249,104,48)" fg:x="762" fg:w="1"/><text x="61.5040%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.45%)</title><rect x="59.9678%" y="517" width="1.4469%" height="15" fill="rgb(254,117,50)" fg:x="746" fg:w="18"/><text x="60.2178%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.45%)</title><rect x="59.9678%" y="501" width="1.4469%" height="15" fill="rgb(223,152,4)" fg:x="746" fg:w="18"/><text x="60.2178%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.45%)</title><rect x="59.9678%" y="485" width="1.4469%" height="15" fill="rgb(245,6,2)" fg:x="746" fg:w="18"/><text x="60.2178%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.2540%" y="469" width="0.1608%" height="15" fill="rgb(249,150,24)" fg:x="762" fg:w="2"/><text x="61.5040%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.2540%" y="453" width="0.1608%" height="15" fill="rgb(228,185,42)" fg:x="762" fg:w="2"/><text x="61.5040%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.3344%" y="437" width="0.0804%" height="15" fill="rgb(226,39,33)" fg:x="763" fg:w="1"/><text x="61.5844%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.3344%" y="421" width="0.0804%" height="15" fill="rgb(221,166,19)" fg:x="763" fg:w="1"/><text x="61.5844%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4952%" y="405" width="0.0804%" height="15" fill="rgb(209,109,2)" fg:x="765" fg:w="1"/><text x="61.7452%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="61.4148%" y="485" width="0.2412%" height="15" fill="rgb(252,216,26)" fg:x="764" fg:w="3"/><text x="61.6648%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.4148%" y="469" width="0.2412%" height="15" fill="rgb(227,173,36)" fg:x="764" fg:w="3"/><text x="61.6648%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.4148%" y="453" width="0.2412%" height="15" fill="rgb(209,90,7)" fg:x="764" fg:w="3"/><text x="61.6648%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.4148%" y="437" width="0.2412%" height="15" fill="rgb(250,194,11)" fg:x="764" fg:w="3"/><text x="61.6648%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.4148%" y="421" width="0.2412%" height="15" fill="rgb(220,72,50)" fg:x="764" fg:w="3"/><text x="61.6648%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.5756%" y="405" width="0.0804%" height="15" fill="rgb(222,106,48)" fg:x="766" fg:w="1"/><text x="61.8256%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5756%" y="389" width="0.0804%" height="15" fill="rgb(216,220,45)" fg:x="766" fg:w="1"/><text x="61.8256%" y="399.50"></text></g><g><title>engine::session::internal::Added::find_refs (33 samples, 2.65%)</title><rect x="59.0836%" y="549" width="2.6527%" height="15" fill="rgb(234,112,18)" fg:x="735" fg:w="33"/><text x="59.3336%" y="559.50">en..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (33 samples, 2.65%)</title><rect x="59.0836%" y="533" width="2.6527%" height="15" fill="rgb(206,179,9)" fg:x="735" fg:w="33"/><text x="59.3336%" y="543.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="61.4148%" y="517" width="0.3215%" height="15" fill="rgb(215,115,40)" fg:x="764" fg:w="4"/><text x="61.6648%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.4148%" y="501" width="0.3215%" height="15" fill="rgb(222,69,34)" fg:x="764" fg:w="4"/><text x="61.6648%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.6559%" y="485" width="0.0804%" height="15" fill="rgb(209,161,10)" fg:x="767" fg:w="1"/><text x="61.9059%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="61.6559%" y="469" width="0.0804%" height="15" fill="rgb(217,6,38)" fg:x="767" fg:w="1"/><text x="61.9059%" y="479.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="61.6559%" y="453" width="0.0804%" height="15" fill="rgb(229,229,48)" fg:x="767" fg:w="1"/><text x="61.9059%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="61.6559%" y="437" width="0.0804%" height="15" fill="rgb(225,21,28)" fg:x="767" fg:w="1"/><text x="61.9059%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.6559%" y="421" width="0.0804%" height="15" fill="rgb(206,33,13)" fg:x="767" fg:w="1"/><text x="61.9059%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.6559%" y="405" width="0.0804%" height="15" fill="rgb(242,178,17)" fg:x="767" fg:w="1"/><text x="61.9059%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.6559%" y="389" width="0.0804%" height="15" fill="rgb(220,162,5)" fg:x="767" fg:w="1"/><text x="61.9059%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.6559%" y="373" width="0.0804%" height="15" fill="rgb(210,33,43)" fg:x="767" fg:w="1"/><text x="61.9059%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="61.6559%" y="357" width="0.0804%" height="15" fill="rgb(216,116,54)" fg:x="767" fg:w="1"/><text x="61.9059%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7363%" y="533" width="0.0804%" height="15" fill="rgb(249,92,24)" fg:x="768" fg:w="1"/><text x="61.9863%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7363%" y="517" width="0.0804%" height="15" fill="rgb(231,189,14)" fg:x="768" fg:w="1"/><text x="61.9863%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.7363%" y="501" width="0.0804%" height="15" fill="rgb(230,8,41)" fg:x="768" fg:w="1"/><text x="61.9863%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7363%" y="485" width="0.0804%" height="15" fill="rgb(249,7,27)" fg:x="768" fg:w="1"/><text x="61.9863%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.7363%" y="469" width="0.0804%" height="15" fill="rgb(232,86,5)" fg:x="768" fg:w="1"/><text x="61.9863%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.7363%" y="453" width="0.0804%" height="15" fill="rgb(224,175,18)" fg:x="768" fg:w="1"/><text x="61.9863%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.7363%" y="437" width="0.0804%" height="15" fill="rgb(220,129,12)" fg:x="768" fg:w="1"/><text x="61.9863%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.7363%" y="421" width="0.0804%" height="15" fill="rgb(210,19,36)" fg:x="768" fg:w="1"/><text x="61.9863%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7363%" y="405" width="0.0804%" height="15" fill="rgb(219,96,14)" fg:x="768" fg:w="1"/><text x="61.9863%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.7363%" y="389" width="0.0804%" height="15" fill="rgb(249,106,1)" fg:x="768" fg:w="1"/><text x="61.9863%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.7363%" y="373" width="0.0804%" height="15" fill="rgb(249,155,20)" fg:x="768" fg:w="1"/><text x="61.9863%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.7363%" y="357" width="0.0804%" height="15" fill="rgb(244,168,9)" fg:x="768" fg:w="1"/><text x="61.9863%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.7363%" y="341" width="0.0804%" height="15" fill="rgb(216,23,50)" fg:x="768" fg:w="1"/><text x="61.9863%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.7363%" y="325" width="0.0804%" height="15" fill="rgb(224,219,20)" fg:x="768" fg:w="1"/><text x="61.9863%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7363%" y="309" width="0.0804%" height="15" fill="rgb(222,156,15)" fg:x="768" fg:w="1"/><text x="61.9863%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8167%" y="517" width="0.0804%" height="15" fill="rgb(231,97,17)" fg:x="769" fg:w="1"/><text x="62.0667%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="61.8971%" y="517" width="0.0804%" height="15" fill="rgb(218,70,48)" fg:x="770" fg:w="1"/><text x="62.1471%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9775%" y="501" width="0.0804%" height="15" fill="rgb(212,196,52)" fg:x="771" fg:w="1"/><text x="62.2275%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9775%" y="485" width="0.0804%" height="15" fill="rgb(243,203,18)" fg:x="771" fg:w="1"/><text x="62.2275%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9775%" y="469" width="0.0804%" height="15" fill="rgb(252,125,41)" fg:x="771" fg:w="1"/><text x="62.2275%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9775%" y="453" width="0.0804%" height="15" fill="rgb(223,180,33)" fg:x="771" fg:w="1"/><text x="62.2275%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9775%" y="437" width="0.0804%" height="15" fill="rgb(254,159,46)" fg:x="771" fg:w="1"/><text x="62.2275%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9775%" y="421" width="0.0804%" height="15" fill="rgb(254,38,10)" fg:x="771" fg:w="1"/><text x="62.2275%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9775%" y="405" width="0.0804%" height="15" fill="rgb(208,217,32)" fg:x="771" fg:w="1"/><text x="62.2275%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9775%" y="389" width="0.0804%" height="15" fill="rgb(221,120,13)" fg:x="771" fg:w="1"/><text x="62.2275%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9775%" y="373" width="0.0804%" height="15" fill="rgb(246,54,52)" fg:x="771" fg:w="1"/><text x="62.2275%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9775%" y="357" width="0.0804%" height="15" fill="rgb(242,34,25)" fg:x="771" fg:w="1"/><text x="62.2275%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9775%" y="341" width="0.0804%" height="15" fill="rgb(247,209,9)" fg:x="771" fg:w="1"/><text x="62.2275%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9775%" y="325" width="0.0804%" height="15" fill="rgb(228,71,26)" fg:x="771" fg:w="1"/><text x="62.2275%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9775%" y="309" width="0.0804%" height="15" fill="rgb(222,145,49)" fg:x="771" fg:w="1"/><text x="62.2275%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9775%" y="293" width="0.0804%" height="15" fill="rgb(218,121,17)" fg:x="771" fg:w="1"/><text x="62.2275%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="61.8167%" y="533" width="0.3215%" height="15" fill="rgb(244,50,7)" fg:x="769" fg:w="4"/><text x="62.0667%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.9775%" y="517" width="0.1608%" height="15" fill="rgb(246,229,37)" fg:x="771" fg:w="2"/><text x="62.2275%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0579%" y="501" width="0.0804%" height="15" fill="rgb(225,18,5)" fg:x="772" fg:w="1"/><text x="62.3079%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0579%" y="485" width="0.0804%" height="15" fill="rgb(213,204,8)" fg:x="772" fg:w="1"/><text x="62.3079%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.0579%" y="469" width="0.0804%" height="15" fill="rgb(238,103,6)" fg:x="772" fg:w="1"/><text x="62.3079%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0579%" y="453" width="0.0804%" height="15" fill="rgb(222,25,35)" fg:x="772" fg:w="1"/><text x="62.3079%" y="463.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="62.1383%" y="533" width="0.0804%" height="15" fill="rgb(213,203,35)" fg:x="773" fg:w="1"/><text x="62.3883%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1383%" y="517" width="0.0804%" height="15" fill="rgb(221,79,53)" fg:x="773" fg:w="1"/><text x="62.3883%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1383%" y="501" width="0.0804%" height="15" fill="rgb(243,200,35)" fg:x="773" fg:w="1"/><text x="62.3883%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1383%" y="485" width="0.0804%" height="15" fill="rgb(248,60,25)" fg:x="773" fg:w="1"/><text x="62.3883%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1383%" y="469" width="0.0804%" height="15" fill="rgb(227,53,46)" fg:x="773" fg:w="1"/><text x="62.3883%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1383%" y="453" width="0.0804%" height="15" fill="rgb(216,120,32)" fg:x="773" fg:w="1"/><text x="62.3883%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1383%" y="437" width="0.0804%" height="15" fill="rgb(220,134,1)" fg:x="773" fg:w="1"/><text x="62.3883%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.1383%" y="421" width="0.0804%" height="15" fill="rgb(237,168,5)" fg:x="773" fg:w="1"/><text x="62.3883%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.1383%" y="405" width="0.0804%" height="15" fill="rgb(231,100,33)" fg:x="773" fg:w="1"/><text x="62.3883%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.1383%" y="389" width="0.0804%" height="15" fill="rgb(236,177,47)" fg:x="773" fg:w="1"/><text x="62.3883%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.1383%" y="373" width="0.0804%" height="15" fill="rgb(235,7,49)" fg:x="773" fg:w="1"/><text x="62.3883%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.1383%" y="357" width="0.0804%" height="15" fill="rgb(232,119,22)" fg:x="773" fg:w="1"/><text x="62.3883%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.1383%" y="341" width="0.0804%" height="15" fill="rgb(254,73,53)" fg:x="773" fg:w="1"/><text x="62.3883%" y="351.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="62.2186%" y="533" width="0.0804%" height="15" fill="rgb(251,35,20)" fg:x="774" fg:w="1"/><text x="62.4686%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="62.4598%" y="485" width="0.0804%" height="15" fill="rgb(241,119,20)" fg:x="777" fg:w="1"/><text x="62.7098%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.5402%" y="485" width="0.1608%" height="15" fill="rgb(207,102,14)" fg:x="778" fg:w="2"/><text x="62.7902%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6206%" y="469" width="0.0804%" height="15" fill="rgb(248,201,50)" fg:x="779" fg:w="1"/><text x="62.8706%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.7010%" y="405" width="0.0804%" height="15" fill="rgb(222,185,44)" fg:x="780" fg:w="1"/><text x="62.9510%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7010%" y="389" width="0.0804%" height="15" fill="rgb(218,107,18)" fg:x="780" fg:w="1"/><text x="62.9510%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.7010%" y="373" width="0.0804%" height="15" fill="rgb(237,177,39)" fg:x="780" fg:w="1"/><text x="62.9510%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.7010%" y="357" width="0.0804%" height="15" fill="rgb(246,69,6)" fg:x="780" fg:w="1"/><text x="62.9510%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7010%" y="341" width="0.0804%" height="15" fill="rgb(234,208,37)" fg:x="780" fg:w="1"/><text x="62.9510%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="62.7814%" y="405" width="0.0804%" height="15" fill="rgb(225,4,6)" fg:x="781" fg:w="1"/><text x="63.0314%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7814%" y="389" width="0.0804%" height="15" fill="rgb(233,45,0)" fg:x="781" fg:w="1"/><text x="63.0314%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.8617%" y="373" width="0.2412%" height="15" fill="rgb(226,136,5)" fg:x="782" fg:w="3"/><text x="63.1117%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.8617%" y="357" width="0.2412%" height="15" fill="rgb(211,91,47)" fg:x="782" fg:w="3"/><text x="63.1117%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="62.9421%" y="341" width="0.1608%" height="15" fill="rgb(242,88,51)" fg:x="783" fg:w="2"/><text x="63.1921%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="62.9421%" y="325" width="0.1608%" height="15" fill="rgb(230,91,28)" fg:x="783" fg:w="2"/><text x="63.1921%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="62.7010%" y="437" width="0.4823%" height="15" fill="rgb(254,186,29)" fg:x="780" fg:w="6"/><text x="62.9510%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="62.7010%" y="421" width="0.4823%" height="15" fill="rgb(238,6,4)" fg:x="780" fg:w="6"/><text x="62.9510%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (4 samples, 0.32%)</title><rect x="62.8617%" y="405" width="0.3215%" height="15" fill="rgb(221,151,16)" fg:x="782" fg:w="4"/><text x="63.1117%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.8617%" y="389" width="0.3215%" height="15" fill="rgb(251,143,52)" fg:x="782" fg:w="4"/><text x="63.1117%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="63.1029%" y="373" width="0.0804%" height="15" fill="rgb(206,90,15)" fg:x="785" fg:w="1"/><text x="63.3529%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.1029%" y="357" width="0.0804%" height="15" fill="rgb(218,35,8)" fg:x="785" fg:w="1"/><text x="63.3529%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1029%" y="341" width="0.0804%" height="15" fill="rgb(239,215,6)" fg:x="785" fg:w="1"/><text x="63.3529%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.1833%" y="437" width="0.0804%" height="15" fill="rgb(245,116,39)" fg:x="786" fg:w="1"/><text x="63.4333%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.1833%" y="421" width="0.0804%" height="15" fill="rgb(242,65,28)" fg:x="786" fg:w="1"/><text x="63.4333%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.1833%" y="405" width="0.0804%" height="15" fill="rgb(252,132,53)" fg:x="786" fg:w="1"/><text x="63.4333%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.1833%" y="389" width="0.0804%" height="15" fill="rgb(224,159,50)" fg:x="786" fg:w="1"/><text x="63.4333%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.1833%" y="373" width="0.0804%" height="15" fill="rgb(224,93,4)" fg:x="786" fg:w="1"/><text x="63.4333%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.3441%" y="357" width="0.0804%" height="15" fill="rgb(208,81,34)" fg:x="788" fg:w="1"/><text x="63.5941%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3441%" y="341" width="0.0804%" height="15" fill="rgb(233,92,54)" fg:x="788" fg:w="1"/><text x="63.5941%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3441%" y="325" width="0.0804%" height="15" fill="rgb(237,21,14)" fg:x="788" fg:w="1"/><text x="63.5941%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.4244%" y="325" width="0.1608%" height="15" fill="rgb(249,128,51)" fg:x="789" fg:w="2"/><text x="63.6744%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.5048%" y="309" width="0.0804%" height="15" fill="rgb(223,129,24)" fg:x="790" fg:w="1"/><text x="63.7548%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.5048%" y="293" width="0.0804%" height="15" fill="rgb(231,168,25)" fg:x="790" fg:w="1"/><text x="63.7548%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (12 samples, 0.96%)</title><rect x="62.7010%" y="485" width="0.9646%" height="15" fill="rgb(224,39,20)" fg:x="780" fg:w="12"/><text x="62.9510%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="62.7010%" y="469" width="0.9646%" height="15" fill="rgb(225,152,53)" fg:x="780" fg:w="12"/><text x="62.9510%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.96%)</title><rect x="62.7010%" y="453" width="0.9646%" height="15" fill="rgb(252,17,24)" fg:x="780" fg:w="12"/><text x="62.9510%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.2637%" y="437" width="0.4019%" height="15" fill="rgb(250,114,30)" fg:x="787" fg:w="5"/><text x="63.5137%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.2637%" y="421" width="0.4019%" height="15" fill="rgb(229,5,4)" fg:x="787" fg:w="5"/><text x="63.5137%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.40%)</title><rect x="63.2637%" y="405" width="0.4019%" height="15" fill="rgb(225,176,49)" fg:x="787" fg:w="5"/><text x="63.5137%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.2637%" y="389" width="0.4019%" height="15" fill="rgb(224,221,49)" fg:x="787" fg:w="5"/><text x="63.5137%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="63.2637%" y="373" width="0.4019%" height="15" fill="rgb(253,169,27)" fg:x="787" fg:w="5"/><text x="63.5137%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="63.4244%" y="357" width="0.2412%" height="15" fill="rgb(211,206,16)" fg:x="789" fg:w="3"/><text x="63.6744%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.4244%" y="341" width="0.2412%" height="15" fill="rgb(244,87,35)" fg:x="789" fg:w="3"/><text x="63.6744%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="63.5852%" y="325" width="0.0804%" height="15" fill="rgb(246,28,10)" fg:x="791" fg:w="1"/><text x="63.8352%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (18 samples, 1.45%)</title><rect x="62.2990%" y="533" width="1.4469%" height="15" fill="rgb(229,12,44)" fg:x="775" fg:w="18"/><text x="62.5490%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.45%)</title><rect x="62.2990%" y="517" width="1.4469%" height="15" fill="rgb(210,145,37)" fg:x="775" fg:w="18"/><text x="62.5490%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.45%)</title><rect x="62.2990%" y="501" width="1.4469%" height="15" fill="rgb(227,112,52)" fg:x="775" fg:w="18"/><text x="62.5490%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6656%" y="485" width="0.0804%" height="15" fill="rgb(238,155,34)" fg:x="792" fg:w="1"/><text x="63.9156%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6656%" y="469" width="0.0804%" height="15" fill="rgb(239,226,36)" fg:x="792" fg:w="1"/><text x="63.9156%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6656%" y="453" width="0.0804%" height="15" fill="rgb(230,16,23)" fg:x="792" fg:w="1"/><text x="63.9156%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.8264%" y="421" width="0.0804%" height="15" fill="rgb(236,171,36)" fg:x="794" fg:w="1"/><text x="64.0764%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.9068%" y="389" width="0.0804%" height="15" fill="rgb(221,22,14)" fg:x="795" fg:w="1"/><text x="64.1568%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.9068%" y="373" width="0.0804%" height="15" fill="rgb(242,43,11)" fg:x="795" fg:w="1"/><text x="64.1568%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.9068%" y="357" width="0.0804%" height="15" fill="rgb(232,69,23)" fg:x="795" fg:w="1"/><text x="64.1568%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.9068%" y="341" width="0.0804%" height="15" fill="rgb(216,180,54)" fg:x="795" fg:w="1"/><text x="64.1568%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="63.9871%" y="373" width="0.2412%" height="15" fill="rgb(216,5,24)" fg:x="796" fg:w="3"/><text x="64.2371%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.0675%" y="357" width="0.1608%" height="15" fill="rgb(225,89,9)" fg:x="797" fg:w="2"/><text x="64.3175%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1479%" y="341" width="0.0804%" height="15" fill="rgb(243,75,33)" fg:x="798" fg:w="1"/><text x="64.3979%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.1479%" y="325" width="0.0804%" height="15" fill="rgb(247,141,45)" fg:x="798" fg:w="1"/><text x="64.3979%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1479%" y="309" width="0.0804%" height="15" fill="rgb(232,177,36)" fg:x="798" fg:w="1"/><text x="64.3979%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.2283%" y="373" width="0.0804%" height="15" fill="rgb(219,125,36)" fg:x="799" fg:w="1"/><text x="64.4783%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2283%" y="357" width="0.0804%" height="15" fill="rgb(227,94,9)" fg:x="799" fg:w="1"/><text x="64.4783%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.3087%" y="341" width="0.1608%" height="15" fill="rgb(240,34,52)" fg:x="800" fg:w="2"/><text x="64.5587%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="63.9068%" y="405" width="0.6431%" height="15" fill="rgb(216,45,12)" fg:x="795" fg:w="8"/><text x="64.1568%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="63.9871%" y="389" width="0.5627%" height="15" fill="rgb(246,21,19)" fg:x="796" fg:w="7"/><text x="64.2371%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.3087%" y="373" width="0.2412%" height="15" fill="rgb(213,98,42)" fg:x="800" fg:w="3"/><text x="64.5587%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.3087%" y="357" width="0.2412%" height="15" fill="rgb(250,136,47)" fg:x="800" fg:w="3"/><text x="64.5587%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.4695%" y="341" width="0.0804%" height="15" fill="rgb(251,124,27)" fg:x="802" fg:w="1"/><text x="64.7195%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5498%" y="405" width="0.0804%" height="15" fill="rgb(229,180,14)" fg:x="803" fg:w="1"/><text x="64.7998%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="63.9068%" y="421" width="0.8039%" height="15" fill="rgb(245,216,25)" fg:x="795" fg:w="10"/><text x="64.1568%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6302%" y="405" width="0.0804%" height="15" fill="rgb(251,43,5)" fg:x="804" fg:w="1"/><text x="64.8802%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6302%" y="389" width="0.0804%" height="15" fill="rgb(250,128,24)" fg:x="804" fg:w="1"/><text x="64.8802%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="63.8264%" y="437" width="0.9646%" height="15" fill="rgb(217,117,27)" fg:x="794" fg:w="12"/><text x="64.0764%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7106%" y="421" width="0.0804%" height="15" fill="rgb(245,147,4)" fg:x="805" fg:w="1"/><text x="64.9606%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="63.7460%" y="469" width="1.2058%" height="15" fill="rgb(242,201,35)" fg:x="793" fg:w="15"/><text x="63.9960%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.13%)</title><rect x="63.8264%" y="453" width="1.1254%" height="15" fill="rgb(218,181,1)" fg:x="794" fg:w="14"/><text x="64.0764%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.7910%" y="437" width="0.1608%" height="15" fill="rgb(222,6,29)" fg:x="806" fg:w="2"/><text x="65.0410%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.29%)</title><rect x="63.7460%" y="533" width="1.2862%" height="15" fill="rgb(208,186,3)" fg:x="793" fg:w="16"/><text x="63.9960%" y="543.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.29%)</title><rect x="63.7460%" y="517" width="1.2862%" height="15" fill="rgb(216,36,26)" fg:x="793" fg:w="16"/><text x="63.9960%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="63.7460%" y="501" width="1.2862%" height="15" fill="rgb(248,201,23)" fg:x="793" fg:w="16"/><text x="63.9960%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="63.7460%" y="485" width="1.2862%" height="15" fill="rgb(251,170,31)" fg:x="793" fg:w="16"/><text x="63.9960%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9518%" y="469" width="0.0804%" height="15" fill="rgb(207,110,25)" fg:x="808" fg:w="1"/><text x="65.2018%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9518%" y="453" width="0.0804%" height="15" fill="rgb(250,54,15)" fg:x="808" fg:w="1"/><text x="65.2018%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.9518%" y="437" width="0.0804%" height="15" fill="rgb(227,68,33)" fg:x="808" fg:w="1"/><text x="65.2018%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (42 samples, 3.38%)</title><rect x="61.7363%" y="549" width="3.3762%" height="15" fill="rgb(238,34,41)" fg:x="768" fg:w="42"/><text x="61.9863%" y="559.50">eng..</text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="65.0322%" y="533" width="0.0804%" height="15" fill="rgb(220,11,15)" fg:x="809" fg:w="1"/><text x="65.2822%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (102 samples, 8.20%)</title><rect x="56.9936%" y="565" width="8.1994%" height="15" fill="rgb(246,111,35)" fg:x="709" fg:w="102"/><text x="57.2436%" y="575.50">engine::ses..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.1125%" y="549" width="0.0804%" height="15" fill="rgb(209,88,53)" fg:x="810" fg:w="1"/><text x="65.3625%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1125%" y="533" width="0.0804%" height="15" fill="rgb(231,185,47)" fg:x="810" fg:w="1"/><text x="65.3625%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.1125%" y="517" width="0.0804%" height="15" fill="rgb(233,154,1)" fg:x="810" fg:w="1"/><text x="65.3625%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1929%" y="533" width="0.0804%" height="15" fill="rgb(225,15,46)" fg:x="811" fg:w="1"/><text x="65.4429%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1929%" y="517" width="0.0804%" height="15" fill="rgb(211,135,41)" fg:x="811" fg:w="1"/><text x="65.4429%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1929%" y="501" width="0.0804%" height="15" fill="rgb(208,54,0)" fg:x="811" fg:w="1"/><text x="65.4429%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1929%" y="485" width="0.0804%" height="15" fill="rgb(244,136,14)" fg:x="811" fg:w="1"/><text x="65.4429%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1929%" y="469" width="0.0804%" height="15" fill="rgb(241,56,14)" fg:x="811" fg:w="1"/><text x="65.4429%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.2733%" y="469" width="0.1608%" height="15" fill="rgb(205,80,24)" fg:x="812" fg:w="2"/><text x="65.5233%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2733%" y="485" width="0.2412%" height="15" fill="rgb(220,57,4)" fg:x="812" fg:w="3"/><text x="65.5233%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4341%" y="469" width="0.0804%" height="15" fill="rgb(226,193,50)" fg:x="814" fg:w="1"/><text x="65.6841%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4341%" y="453" width="0.0804%" height="15" fill="rgb(231,168,22)" fg:x="814" fg:w="1"/><text x="65.6841%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4341%" y="437" width="0.0804%" height="15" fill="rgb(254,215,14)" fg:x="814" fg:w="1"/><text x="65.6841%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4341%" y="421" width="0.0804%" height="15" fill="rgb(211,115,16)" fg:x="814" fg:w="1"/><text x="65.6841%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4341%" y="405" width="0.0804%" height="15" fill="rgb(236,210,16)" fg:x="814" fg:w="1"/><text x="65.6841%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4341%" y="389" width="0.0804%" height="15" fill="rgb(221,94,12)" fg:x="814" fg:w="1"/><text x="65.6841%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.4341%" y="373" width="0.0804%" height="15" fill="rgb(235,218,49)" fg:x="814" fg:w="1"/><text x="65.6841%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6752%" y="341" width="0.0804%" height="15" fill="rgb(217,114,14)" fg:x="817" fg:w="1"/><text x="65.9252%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6752%" y="325" width="0.0804%" height="15" fill="rgb(216,145,22)" fg:x="817" fg:w="1"/><text x="65.9252%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.6752%" y="309" width="0.0804%" height="15" fill="rgb(217,112,39)" fg:x="817" fg:w="1"/><text x="65.9252%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.6752%" y="293" width="0.0804%" height="15" fill="rgb(225,85,32)" fg:x="817" fg:w="1"/><text x="65.9252%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.6752%" y="277" width="0.0804%" height="15" fill="rgb(245,209,47)" fg:x="817" fg:w="1"/><text x="65.9252%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.6752%" y="261" width="0.0804%" height="15" fill="rgb(218,220,15)" fg:x="817" fg:w="1"/><text x="65.9252%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.6752%" y="245" width="0.0804%" height="15" fill="rgb(222,202,31)" fg:x="817" fg:w="1"/><text x="65.9252%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.6752%" y="229" width="0.0804%" height="15" fill="rgb(243,203,4)" fg:x="817" fg:w="1"/><text x="65.9252%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.6752%" y="213" width="0.0804%" height="15" fill="rgb(237,92,17)" fg:x="817" fg:w="1"/><text x="65.9252%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.6752%" y="197" width="0.0804%" height="15" fill="rgb(231,119,7)" fg:x="817" fg:w="1"/><text x="65.9252%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.6752%" y="181" width="0.0804%" height="15" fill="rgb(237,82,41)" fg:x="817" fg:w="1"/><text x="65.9252%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.6752%" y="165" width="0.0804%" height="15" fill="rgb(226,81,48)" fg:x="817" fg:w="1"/><text x="65.9252%" y="175.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="65.6752%" y="149" width="0.0804%" height="15" fill="rgb(234,70,51)" fg:x="817" fg:w="1"/><text x="65.9252%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.7556%" y="309" width="0.0804%" height="15" fill="rgb(251,86,4)" fg:x="818" fg:w="1"/><text x="66.0056%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="65.6752%" y="389" width="0.3215%" height="15" fill="rgb(244,144,28)" fg:x="817" fg:w="4"/><text x="65.9252%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="65.6752%" y="373" width="0.3215%" height="15" fill="rgb(232,161,39)" fg:x="817" fg:w="4"/><text x="65.9252%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="65.6752%" y="357" width="0.3215%" height="15" fill="rgb(247,34,51)" fg:x="817" fg:w="4"/><text x="65.9252%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="65.7556%" y="341" width="0.2412%" height="15" fill="rgb(225,132,2)" fg:x="818" fg:w="3"/><text x="66.0056%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="65.7556%" y="325" width="0.2412%" height="15" fill="rgb(209,159,44)" fg:x="818" fg:w="3"/><text x="66.0056%" y="335.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="65.8360%" y="309" width="0.1608%" height="15" fill="rgb(251,214,1)" fg:x="819" fg:w="2"/><text x="66.0860%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.9968%" y="341" width="0.0804%" height="15" fill="rgb(247,84,47)" fg:x="821" fg:w="1"/><text x="66.2468%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.9968%" y="325" width="0.0804%" height="15" fill="rgb(240,111,43)" fg:x="821" fg:w="1"/><text x="66.2468%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.9968%" y="309" width="0.0804%" height="15" fill="rgb(215,214,35)" fg:x="821" fg:w="1"/><text x="66.2468%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="65.5145%" y="437" width="0.6431%" height="15" fill="rgb(248,207,23)" fg:x="815" fg:w="8"/><text x="65.7645%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="65.5145%" y="421" width="0.6431%" height="15" fill="rgb(214,186,4)" fg:x="815" fg:w="8"/><text x="65.7645%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="65.5145%" y="405" width="0.6431%" height="15" fill="rgb(220,133,22)" fg:x="815" fg:w="8"/><text x="65.7645%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.9968%" y="389" width="0.1608%" height="15" fill="rgb(239,134,19)" fg:x="821" fg:w="2"/><text x="66.2468%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.9968%" y="373" width="0.1608%" height="15" fill="rgb(250,140,9)" fg:x="821" fg:w="2"/><text x="66.2468%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (2 samples, 0.16%)</title><rect x="65.9968%" y="357" width="0.1608%" height="15" fill="rgb(225,59,14)" fg:x="821" fg:w="2"/><text x="66.2468%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="66.0772%" y="341" width="0.0804%" height="15" fill="rgb(214,152,51)" fg:x="822" fg:w="1"/><text x="66.3272%" y="351.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="66.0772%" y="325" width="0.0804%" height="15" fill="rgb(251,227,43)" fg:x="822" fg:w="1"/><text x="66.3272%" y="335.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="66.0772%" y="309" width="0.0804%" height="15" fill="rgb(241,96,17)" fg:x="822" fg:w="1"/><text x="66.3272%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.0772%" y="293" width="0.0804%" height="15" fill="rgb(234,198,43)" fg:x="822" fg:w="1"/><text x="66.3272%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.0772%" y="277" width="0.0804%" height="15" fill="rgb(220,108,29)" fg:x="822" fg:w="1"/><text x="66.3272%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.0772%" y="261" width="0.0804%" height="15" fill="rgb(226,163,33)" fg:x="822" fg:w="1"/><text x="66.3272%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.0772%" y="245" width="0.0804%" height="15" fill="rgb(205,194,45)" fg:x="822" fg:w="1"/><text x="66.3272%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.0772%" y="229" width="0.0804%" height="15" fill="rgb(206,143,44)" fg:x="822" fg:w="1"/><text x="66.3272%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.0772%" y="213" width="0.0804%" height="15" fill="rgb(236,136,36)" fg:x="822" fg:w="1"/><text x="66.3272%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.0772%" y="197" width="0.0804%" height="15" fill="rgb(249,172,42)" fg:x="822" fg:w="1"/><text x="66.3272%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.0772%" y="181" width="0.0804%" height="15" fill="rgb(216,139,23)" fg:x="822" fg:w="1"/><text x="66.3272%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.0772%" y="165" width="0.0804%" height="15" fill="rgb(207,166,20)" fg:x="822" fg:w="1"/><text x="66.3272%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.0772%" y="149" width="0.0804%" height="15" fill="rgb(210,209,22)" fg:x="822" fg:w="1"/><text x="66.3272%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.0772%" y="133" width="0.0804%" height="15" fill="rgb(232,118,20)" fg:x="822" fg:w="1"/><text x="66.3272%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.1576%" y="405" width="0.0804%" height="15" fill="rgb(238,113,42)" fg:x="823" fg:w="1"/><text x="66.4076%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="65.5145%" y="485" width="0.8039%" height="15" fill="rgb(231,42,5)" fg:x="815" fg:w="10"/><text x="65.7645%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.80%)</title><rect x="65.5145%" y="469" width="0.8039%" height="15" fill="rgb(243,166,24)" fg:x="815" fg:w="10"/><text x="65.7645%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="65.5145%" y="453" width="0.8039%" height="15" fill="rgb(237,226,12)" fg:x="815" fg:w="10"/><text x="65.7645%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.1576%" y="437" width="0.1608%" height="15" fill="rgb(229,133,24)" fg:x="823" fg:w="2"/><text x="66.4076%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1576%" y="421" width="0.1608%" height="15" fill="rgb(238,33,43)" fg:x="823" fg:w="2"/><text x="66.4076%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.2379%" y="405" width="0.0804%" height="15" fill="rgb(227,59,38)" fg:x="824" fg:w="1"/><text x="66.4879%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.2379%" y="389" width="0.0804%" height="15" fill="rgb(230,97,0)" fg:x="824" fg:w="1"/><text x="66.4879%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.2379%" y="373" width="0.0804%" height="15" fill="rgb(250,173,50)" fg:x="824" fg:w="1"/><text x="66.4879%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="66.3183%" y="405" width="0.1608%" height="15" fill="rgb(240,15,50)" fg:x="825" fg:w="2"/><text x="66.5683%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.3183%" y="389" width="0.1608%" height="15" fill="rgb(221,93,22)" fg:x="825" fg:w="2"/><text x="66.5683%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.3183%" y="373" width="0.1608%" height="15" fill="rgb(245,180,53)" fg:x="825" fg:w="2"/><text x="66.5683%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.29%)</title><rect x="65.2733%" y="533" width="1.2862%" height="15" fill="rgb(231,88,51)" fg:x="812" fg:w="16"/><text x="65.5233%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.29%)</title><rect x="65.2733%" y="517" width="1.2862%" height="15" fill="rgb(240,58,21)" fg:x="812" fg:w="16"/><text x="65.5233%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (16 samples, 1.29%)</title><rect x="65.2733%" y="501" width="1.2862%" height="15" fill="rgb(237,21,10)" fg:x="812" fg:w="16"/><text x="65.5233%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.3183%" y="485" width="0.2412%" height="15" fill="rgb(218,43,11)" fg:x="825" fg:w="3"/><text x="66.5683%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.3183%" y="469" width="0.2412%" height="15" fill="rgb(218,221,29)" fg:x="825" fg:w="3"/><text x="66.5683%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.3183%" y="453" width="0.2412%" height="15" fill="rgb(214,118,42)" fg:x="825" fg:w="3"/><text x="66.5683%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="66.3183%" y="437" width="0.2412%" height="15" fill="rgb(251,200,26)" fg:x="825" fg:w="3"/><text x="66.5683%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.3183%" y="421" width="0.2412%" height="15" fill="rgb(237,101,39)" fg:x="825" fg:w="3"/><text x="66.5683%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.4791%" y="405" width="0.0804%" height="15" fill="rgb(251,117,11)" fg:x="827" fg:w="1"/><text x="66.7291%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.5595%" y="501" width="0.0804%" height="15" fill="rgb(216,223,23)" fg:x="828" fg:w="1"/><text x="66.8095%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.6399%" y="485" width="0.0804%" height="15" fill="rgb(251,54,12)" fg:x="829" fg:w="1"/><text x="66.8899%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.6399%" y="469" width="0.0804%" height="15" fill="rgb(254,176,54)" fg:x="829" fg:w="1"/><text x="66.8899%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.6399%" y="453" width="0.0804%" height="15" fill="rgb(210,32,8)" fg:x="829" fg:w="1"/><text x="66.8899%" y="463.50"></text></g><g><title>engine::session::internal::Added::find_refs (20 samples, 1.61%)</title><rect x="65.1929%" y="565" width="1.6077%" height="15" fill="rgb(235,52,38)" fg:x="811" fg:w="20"/><text x="65.4429%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.61%)</title><rect x="65.1929%" y="549" width="1.6077%" height="15" fill="rgb(231,4,44)" fg:x="811" fg:w="20"/><text x="65.4429%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.5595%" y="533" width="0.2412%" height="15" fill="rgb(249,2,32)" fg:x="828" fg:w="3"/><text x="66.8095%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.5595%" y="517" width="0.2412%" height="15" fill="rgb(224,65,26)" fg:x="828" fg:w="3"/><text x="66.8095%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="66.6399%" y="501" width="0.1608%" height="15" fill="rgb(250,73,40)" fg:x="829" fg:w="2"/><text x="66.8899%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="66.7203%" y="485" width="0.0804%" height="15" fill="rgb(253,177,16)" fg:x="830" fg:w="1"/><text x="66.9703%" y="495.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="66.7203%" y="469" width="0.0804%" height="15" fill="rgb(217,32,34)" fg:x="830" fg:w="1"/><text x="66.9703%" y="479.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="66.7203%" y="453" width="0.0804%" height="15" fill="rgb(212,7,10)" fg:x="830" fg:w="1"/><text x="66.9703%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.7203%" y="437" width="0.0804%" height="15" fill="rgb(245,89,8)" fg:x="830" fg:w="1"/><text x="66.9703%" y="447.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="66.7203%" y="421" width="0.0804%" height="15" fill="rgb(237,16,53)" fg:x="830" fg:w="1"/><text x="66.9703%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="66.7203%" y="405" width="0.0804%" height="15" fill="rgb(250,204,30)" fg:x="830" fg:w="1"/><text x="66.9703%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="66.7203%" y="389" width="0.0804%" height="15" fill="rgb(208,77,27)" fg:x="830" fg:w="1"/><text x="66.9703%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="66.7203%" y="373" width="0.0804%" height="15" fill="rgb(250,204,28)" fg:x="830" fg:w="1"/><text x="66.9703%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="66.7203%" y="357" width="0.0804%" height="15" fill="rgb(244,63,21)" fg:x="830" fg:w="1"/><text x="66.9703%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="66.7203%" y="341" width="0.0804%" height="15" fill="rgb(236,85,44)" fg:x="830" fg:w="1"/><text x="66.9703%" y="351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="66.7203%" y="325" width="0.0804%" height="15" fill="rgb(215,98,4)" fg:x="830" fg:w="1"/><text x="66.9703%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.8810%" y="501" width="0.0804%" height="15" fill="rgb(235,38,11)" fg:x="832" fg:w="1"/><text x="67.1310%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9614%" y="469" width="0.0804%" height="15" fill="rgb(254,186,25)" fg:x="833" fg:w="1"/><text x="67.2114%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.9614%" y="453" width="0.0804%" height="15" fill="rgb(225,55,31)" fg:x="833" fg:w="1"/><text x="67.2114%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.2026%" y="421" width="0.0804%" height="15" fill="rgb(211,15,21)" fg:x="836" fg:w="1"/><text x="67.4526%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.2026%" y="405" width="0.0804%" height="15" fill="rgb(215,187,41)" fg:x="836" fg:w="1"/><text x="67.4526%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="67.2026%" y="389" width="0.0804%" height="15" fill="rgb(248,69,32)" fg:x="836" fg:w="1"/><text x="67.4526%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.2026%" y="373" width="0.0804%" height="15" fill="rgb(252,102,52)" fg:x="836" fg:w="1"/><text x="67.4526%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="67.2026%" y="357" width="0.0804%" height="15" fill="rgb(253,140,32)" fg:x="836" fg:w="1"/><text x="67.4526%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="67.2026%" y="341" width="0.0804%" height="15" fill="rgb(216,56,42)" fg:x="836" fg:w="1"/><text x="67.4526%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2026%" y="325" width="0.0804%" height="15" fill="rgb(216,184,14)" fg:x="836" fg:w="1"/><text x="67.4526%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="67.2026%" y="453" width="0.1608%" height="15" fill="rgb(237,187,27)" fg:x="836" fg:w="2"/><text x="67.4526%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.2026%" y="437" width="0.1608%" height="15" fill="rgb(219,65,3)" fg:x="836" fg:w="2"/><text x="67.4526%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2830%" y="421" width="0.0804%" height="15" fill="rgb(245,83,25)" fg:x="837" fg:w="1"/><text x="67.5330%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2830%" y="405" width="0.0804%" height="15" fill="rgb(214,205,45)" fg:x="837" fg:w="1"/><text x="67.5330%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.3633%" y="421" width="0.0804%" height="15" fill="rgb(241,20,18)" fg:x="838" fg:w="1"/><text x="67.6133%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="67.3633%" y="453" width="0.1608%" height="15" fill="rgb(232,163,23)" fg:x="838" fg:w="2"/><text x="67.6133%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="67.3633%" y="437" width="0.1608%" height="15" fill="rgb(214,5,46)" fg:x="838" fg:w="2"/><text x="67.6133%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="67.4437%" y="421" width="0.0804%" height="15" fill="rgb(229,78,17)" fg:x="839" fg:w="1"/><text x="67.6937%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4437%" y="405" width="0.0804%" height="15" fill="rgb(248,89,10)" fg:x="839" fg:w="1"/><text x="67.6937%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="66.8006%" y="549" width="0.8842%" height="15" fill="rgb(248,54,15)" fg:x="831" fg:w="11"/><text x="67.0506%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.88%)</title><rect x="66.8006%" y="533" width="0.8842%" height="15" fill="rgb(223,116,6)" fg:x="831" fg:w="11"/><text x="67.0506%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="66.8006%" y="517" width="0.8842%" height="15" fill="rgb(205,125,38)" fg:x="831" fg:w="11"/><text x="67.0506%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (9 samples, 0.72%)</title><rect x="66.9614%" y="501" width="0.7235%" height="15" fill="rgb(251,78,38)" fg:x="833" fg:w="9"/><text x="67.2114%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="66.9614%" y="485" width="0.7235%" height="15" fill="rgb(253,78,28)" fg:x="833" fg:w="9"/><text x="67.2114%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="67.0418%" y="469" width="0.6431%" height="15" fill="rgb(209,120,3)" fg:x="834" fg:w="8"/><text x="67.2918%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.5241%" y="453" width="0.1608%" height="15" fill="rgb(238,229,9)" fg:x="840" fg:w="2"/><text x="67.7741%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.5241%" y="437" width="0.1608%" height="15" fill="rgb(253,159,18)" fg:x="840" fg:w="2"/><text x="67.7741%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.6045%" y="421" width="0.0804%" height="15" fill="rgb(244,42,34)" fg:x="841" fg:w="1"/><text x="67.8545%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="67.6849%" y="469" width="0.0804%" height="15" fill="rgb(224,8,7)" fg:x="842" fg:w="1"/><text x="67.9349%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="67.6849%" y="485" width="0.2412%" height="15" fill="rgb(210,201,45)" fg:x="842" fg:w="3"/><text x="67.9349%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="67.7653%" y="469" width="0.1608%" height="15" fill="rgb(252,185,21)" fg:x="843" fg:w="2"/><text x="68.0153%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.9260%" y="485" width="0.0804%" height="15" fill="rgb(223,131,1)" fg:x="845" fg:w="1"/><text x="68.1760%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9260%" y="469" width="0.0804%" height="15" fill="rgb(245,141,16)" fg:x="845" fg:w="1"/><text x="68.1760%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (140 samples, 11.25%)</title><rect x="56.9132%" y="581" width="11.2540%" height="15" fill="rgb(229,55,45)" fg:x="708" fg:w="140"/><text x="57.1632%" y="591.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.37%)</title><rect x="66.8006%" y="565" width="1.3666%" height="15" fill="rgb(208,92,15)" fg:x="831" fg:w="17"/><text x="67.0506%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="67.6849%" y="549" width="0.4823%" height="15" fill="rgb(234,185,47)" fg:x="842" fg:w="6"/><text x="67.9349%" y="559.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="67.6849%" y="533" width="0.4823%" height="15" fill="rgb(253,104,50)" fg:x="842" fg:w="6"/><text x="67.9349%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="67.6849%" y="517" width="0.4823%" height="15" fill="rgb(205,70,7)" fg:x="842" fg:w="6"/><text x="67.9349%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="67.6849%" y="501" width="0.4823%" height="15" fill="rgb(240,178,43)" fg:x="842" fg:w="6"/><text x="67.9349%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.0064%" y="485" width="0.1608%" height="15" fill="rgb(214,112,2)" fg:x="846" fg:w="2"/><text x="68.2564%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.1672%" y="565" width="0.0804%" height="15" fill="rgb(206,46,17)" fg:x="848" fg:w="1"/><text x="68.4172%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1672%" y="549" width="0.0804%" height="15" fill="rgb(225,220,16)" fg:x="848" fg:w="1"/><text x="68.4172%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2476%" y="533" width="0.0804%" height="15" fill="rgb(238,65,40)" fg:x="849" fg:w="1"/><text x="68.4976%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.2476%" y="517" width="0.0804%" height="15" fill="rgb(230,151,21)" fg:x="849" fg:w="1"/><text x="68.4976%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.2476%" y="501" width="0.0804%" height="15" fill="rgb(218,58,49)" fg:x="849" fg:w="1"/><text x="68.4976%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2476%" y="485" width="0.0804%" height="15" fill="rgb(219,179,14)" fg:x="849" fg:w="1"/><text x="68.4976%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.3280%" y="533" width="0.0804%" height="15" fill="rgb(223,72,1)" fg:x="850" fg:w="1"/><text x="68.5780%" y="543.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="68.1672%" y="581" width="0.3215%" height="15" fill="rgb(238,126,10)" fg:x="848" fg:w="4"/><text x="68.4172%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="68.2476%" y="565" width="0.2412%" height="15" fill="rgb(224,206,38)" fg:x="849" fg:w="3"/><text x="68.4976%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.2476%" y="549" width="0.2412%" height="15" fill="rgb(212,201,54)" fg:x="849" fg:w="3"/><text x="68.4976%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4084%" y="533" width="0.0804%" height="15" fill="rgb(218,154,48)" fg:x="851" fg:w="1"/><text x="68.6584%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4084%" y="517" width="0.0804%" height="15" fill="rgb(232,93,24)" fg:x="851" fg:w="1"/><text x="68.6584%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.4084%" y="501" width="0.0804%" height="15" fill="rgb(245,30,21)" fg:x="851" fg:w="1"/><text x="68.6584%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4887%" y="533" width="0.0804%" height="15" fill="rgb(242,148,29)" fg:x="852" fg:w="1"/><text x="68.7387%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4887%" y="517" width="0.0804%" height="15" fill="rgb(244,153,54)" fg:x="852" fg:w="1"/><text x="68.7387%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4887%" y="501" width="0.0804%" height="15" fill="rgb(252,87,22)" fg:x="852" fg:w="1"/><text x="68.7387%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4887%" y="485" width="0.0804%" height="15" fill="rgb(210,51,29)" fg:x="852" fg:w="1"/><text x="68.7387%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.4887%" y="469" width="0.0804%" height="15" fill="rgb(242,136,47)" fg:x="852" fg:w="1"/><text x="68.7387%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.4887%" y="453" width="0.0804%" height="15" fill="rgb(238,68,4)" fg:x="852" fg:w="1"/><text x="68.7387%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.4887%" y="437" width="0.0804%" height="15" fill="rgb(242,161,30)" fg:x="852" fg:w="1"/><text x="68.7387%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.4887%" y="421" width="0.0804%" height="15" fill="rgb(218,58,44)" fg:x="852" fg:w="1"/><text x="68.7387%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4887%" y="405" width="0.0804%" height="15" fill="rgb(252,125,32)" fg:x="852" fg:w="1"/><text x="68.7387%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.4887%" y="389" width="0.0804%" height="15" fill="rgb(219,178,0)" fg:x="852" fg:w="1"/><text x="68.7387%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.5691%" y="533" width="0.0804%" height="15" fill="rgb(213,152,7)" fg:x="853" fg:w="1"/><text x="68.8191%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.5691%" y="517" width="0.0804%" height="15" fill="rgb(249,109,34)" fg:x="853" fg:w="1"/><text x="68.8191%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.6495%" y="533" width="0.0804%" height="15" fill="rgb(232,96,21)" fg:x="854" fg:w="1"/><text x="68.8995%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.6495%" y="517" width="0.0804%" height="15" fill="rgb(228,27,39)" fg:x="854" fg:w="1"/><text x="68.8995%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.6495%" y="501" width="0.0804%" height="15" fill="rgb(211,182,52)" fg:x="854" fg:w="1"/><text x="68.8995%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.6495%" y="485" width="0.0804%" height="15" fill="rgb(234,178,38)" fg:x="854" fg:w="1"/><text x="68.8995%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.6495%" y="469" width="0.0804%" height="15" fill="rgb(221,111,3)" fg:x="854" fg:w="1"/><text x="68.8995%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="68.4887%" y="565" width="0.4019%" height="15" fill="rgb(228,175,21)" fg:x="852" fg:w="5"/><text x="68.7387%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="68.4887%" y="549" width="0.4019%" height="15" fill="rgb(228,174,43)" fg:x="852" fg:w="5"/><text x="68.7387%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7299%" y="533" width="0.1608%" height="15" fill="rgb(211,191,0)" fg:x="855" fg:w="2"/><text x="68.9799%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7299%" y="517" width="0.1608%" height="15" fill="rgb(253,117,3)" fg:x="855" fg:w="2"/><text x="68.9799%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.8103%" y="501" width="0.0804%" height="15" fill="rgb(241,127,19)" fg:x="856" fg:w="1"/><text x="69.0603%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.8907%" y="533" width="0.0804%" height="15" fill="rgb(218,103,12)" fg:x="857" fg:w="1"/><text x="69.1407%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.8907%" y="517" width="0.0804%" height="15" fill="rgb(236,214,43)" fg:x="857" fg:w="1"/><text x="69.1407%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.8907%" y="501" width="0.0804%" height="15" fill="rgb(244,144,19)" fg:x="857" fg:w="1"/><text x="69.1407%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.8907%" y="485" width="0.0804%" height="15" fill="rgb(246,188,10)" fg:x="857" fg:w="1"/><text x="69.1407%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8907%" y="469" width="0.0804%" height="15" fill="rgb(212,193,33)" fg:x="857" fg:w="1"/><text x="69.1407%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.8907%" y="453" width="0.0804%" height="15" fill="rgb(241,51,29)" fg:x="857" fg:w="1"/><text x="69.1407%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.9711%" y="469" width="0.0804%" height="15" fill="rgb(211,58,19)" fg:x="858" fg:w="1"/><text x="69.2211%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.9711%" y="453" width="0.0804%" height="15" fill="rgb(229,111,26)" fg:x="858" fg:w="1"/><text x="69.2211%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="68.4887%" y="581" width="0.6431%" height="15" fill="rgb(213,115,40)" fg:x="852" fg:w="8"/><text x="68.7387%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="68.8907%" y="565" width="0.2412%" height="15" fill="rgb(209,56,44)" fg:x="857" fg:w="3"/><text x="69.1407%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="68.8907%" y="549" width="0.2412%" height="15" fill="rgb(230,108,32)" fg:x="857" fg:w="3"/><text x="69.1407%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.9711%" y="533" width="0.1608%" height="15" fill="rgb(216,165,31)" fg:x="858" fg:w="2"/><text x="69.2211%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.9711%" y="517" width="0.1608%" height="15" fill="rgb(218,122,21)" fg:x="858" fg:w="2"/><text x="69.2211%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.9711%" y="501" width="0.1608%" height="15" fill="rgb(223,224,47)" fg:x="858" fg:w="2"/><text x="69.2211%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.9711%" y="485" width="0.1608%" height="15" fill="rgb(238,102,44)" fg:x="858" fg:w="2"/><text x="69.2211%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.0514%" y="469" width="0.0804%" height="15" fill="rgb(236,46,40)" fg:x="859" fg:w="1"/><text x="69.3014%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.0514%" y="453" width="0.0804%" height="15" fill="rgb(247,202,50)" fg:x="859" fg:w="1"/><text x="69.3014%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.1318%" y="549" width="0.0804%" height="15" fill="rgb(209,99,20)" fg:x="860" fg:w="1"/><text x="69.3818%" y="559.50"></text></g><g><title>engine::session::internal::&lt;impl core::convert::From&lt;engine::session::internal::Added&gt; for kernel::model::EntityPtr&gt;::from (1 samples, 0.08%)</title><rect x="69.2122%" y="549" width="0.0804%" height="15" fill="rgb(252,27,34)" fg:x="861" fg:w="1"/><text x="69.4622%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3730%" y="501" width="0.1608%" height="15" fill="rgb(215,206,23)" fg:x="863" fg:w="2"/><text x="69.6230%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3730%" y="485" width="0.1608%" height="15" fill="rgb(212,135,36)" fg:x="863" fg:w="2"/><text x="69.6230%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3730%" y="469" width="0.1608%" height="15" fill="rgb(240,189,1)" fg:x="863" fg:w="2"/><text x="69.6230%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4534%" y="453" width="0.0804%" height="15" fill="rgb(242,56,20)" fg:x="864" fg:w="1"/><text x="69.7034%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.4534%" y="437" width="0.0804%" height="15" fill="rgb(247,132,33)" fg:x="864" fg:w="1"/><text x="69.7034%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.4534%" y="421" width="0.0804%" height="15" fill="rgb(208,149,11)" fg:x="864" fg:w="1"/><text x="69.7034%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.4534%" y="405" width="0.0804%" height="15" fill="rgb(211,33,11)" fg:x="864" fg:w="1"/><text x="69.7034%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.4534%" y="389" width="0.0804%" height="15" fill="rgb(221,29,38)" fg:x="864" fg:w="1"/><text x="69.7034%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4534%" y="373" width="0.0804%" height="15" fill="rgb(206,182,49)" fg:x="864" fg:w="1"/><text x="69.7034%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.4534%" y="357" width="0.0804%" height="15" fill="rgb(216,140,1)" fg:x="864" fg:w="1"/><text x="69.7034%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.4534%" y="341" width="0.0804%" height="15" fill="rgb(232,57,40)" fg:x="864" fg:w="1"/><text x="69.7034%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.4534%" y="325" width="0.0804%" height="15" fill="rgb(224,186,18)" fg:x="864" fg:w="1"/><text x="69.7034%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.4534%" y="309" width="0.0804%" height="15" fill="rgb(215,121,11)" fg:x="864" fg:w="1"/><text x="69.7034%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.4534%" y="293" width="0.0804%" height="15" fill="rgb(245,147,10)" fg:x="864" fg:w="1"/><text x="69.7034%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4534%" y="277" width="0.0804%" height="15" fill="rgb(238,153,13)" fg:x="864" fg:w="1"/><text x="69.7034%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="69.2926%" y="533" width="0.3215%" height="15" fill="rgb(233,108,0)" fg:x="862" fg:w="4"/><text x="69.5426%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="69.2926%" y="517" width="0.3215%" height="15" fill="rgb(212,157,17)" fg:x="862" fg:w="4"/><text x="69.5426%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5338%" y="501" width="0.0804%" height="15" fill="rgb(225,213,38)" fg:x="865" fg:w="1"/><text x="69.7838%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="69.6141%" y="533" width="0.0804%" height="15" fill="rgb(248,16,11)" fg:x="866" fg:w="1"/><text x="69.8641%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6141%" y="517" width="0.0804%" height="15" fill="rgb(241,33,4)" fg:x="866" fg:w="1"/><text x="69.8641%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6141%" y="501" width="0.0804%" height="15" fill="rgb(222,26,43)" fg:x="866" fg:w="1"/><text x="69.8641%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="69.6141%" y="485" width="0.0804%" height="15" fill="rgb(243,29,36)" fg:x="866" fg:w="1"/><text x="69.8641%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6141%" y="469" width="0.0804%" height="15" fill="rgb(241,9,27)" fg:x="866" fg:w="1"/><text x="69.8641%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="69.6945%" y="533" width="0.0804%" height="15" fill="rgb(205,117,26)" fg:x="867" fg:w="1"/><text x="69.9445%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.7749%" y="373" width="0.0804%" height="15" fill="rgb(209,80,39)" fg:x="868" fg:w="1"/><text x="70.0249%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.7749%" y="357" width="0.0804%" height="15" fill="rgb(239,155,6)" fg:x="868" fg:w="1"/><text x="70.0249%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7749%" y="341" width="0.0804%" height="15" fill="rgb(212,104,12)" fg:x="868" fg:w="1"/><text x="70.0249%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7749%" y="325" width="0.0804%" height="15" fill="rgb(234,204,3)" fg:x="868" fg:w="1"/><text x="70.0249%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.7749%" y="437" width="0.2412%" height="15" fill="rgb(251,218,7)" fg:x="868" fg:w="3"/><text x="70.0249%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7749%" y="421" width="0.2412%" height="15" fill="rgb(221,81,32)" fg:x="868" fg:w="3"/><text x="70.0249%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="69.7749%" y="405" width="0.2412%" height="15" fill="rgb(214,152,26)" fg:x="868" fg:w="3"/><text x="70.0249%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="69.7749%" y="389" width="0.2412%" height="15" fill="rgb(223,22,3)" fg:x="868" fg:w="3"/><text x="70.0249%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="69.8553%" y="373" width="0.1608%" height="15" fill="rgb(207,174,7)" fg:x="869" fg:w="2"/><text x="70.1053%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="69.9357%" y="357" width="0.0804%" height="15" fill="rgb(224,19,52)" fg:x="870" fg:w="1"/><text x="70.1857%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.9357%" y="341" width="0.0804%" height="15" fill="rgb(228,24,14)" fg:x="870" fg:w="1"/><text x="70.1857%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="69.9357%" y="325" width="0.0804%" height="15" fill="rgb(230,153,43)" fg:x="870" fg:w="1"/><text x="70.1857%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="69.7749%" y="533" width="0.3215%" height="15" fill="rgb(231,106,12)" fg:x="868" fg:w="4"/><text x="70.0249%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="69.7749%" y="517" width="0.3215%" height="15" fill="rgb(215,92,2)" fg:x="868" fg:w="4"/><text x="70.0249%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.7749%" y="501" width="0.3215%" height="15" fill="rgb(249,143,25)" fg:x="868" fg:w="4"/><text x="70.0249%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="69.7749%" y="485" width="0.3215%" height="15" fill="rgb(252,7,35)" fg:x="868" fg:w="4"/><text x="70.0249%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.7749%" y="469" width="0.3215%" height="15" fill="rgb(216,69,40)" fg:x="868" fg:w="4"/><text x="70.0249%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="69.7749%" y="453" width="0.3215%" height="15" fill="rgb(240,36,33)" fg:x="868" fg:w="4"/><text x="70.0249%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0161%" y="437" width="0.0804%" height="15" fill="rgb(231,128,14)" fg:x="871" fg:w="1"/><text x="70.2661%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.0161%" y="421" width="0.0804%" height="15" fill="rgb(245,143,14)" fg:x="871" fg:w="1"/><text x="70.2661%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0161%" y="405" width="0.0804%" height="15" fill="rgb(222,130,28)" fg:x="871" fg:w="1"/><text x="70.2661%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.0161%" y="389" width="0.0804%" height="15" fill="rgb(212,10,48)" fg:x="871" fg:w="1"/><text x="70.2661%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="70.0965%" y="469" width="0.1608%" height="15" fill="rgb(254,118,45)" fg:x="872" fg:w="2"/><text x="70.3465%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="70.0965%" y="453" width="0.1608%" height="15" fill="rgb(228,6,45)" fg:x="872" fg:w="2"/><text x="70.3465%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1768%" y="437" width="0.0804%" height="15" fill="rgb(241,18,35)" fg:x="873" fg:w="1"/><text x="70.4268%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1768%" y="421" width="0.0804%" height="15" fill="rgb(227,214,53)" fg:x="873" fg:w="1"/><text x="70.4268%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1768%" y="405" width="0.0804%" height="15" fill="rgb(224,107,51)" fg:x="873" fg:w="1"/><text x="70.4268%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1768%" y="389" width="0.0804%" height="15" fill="rgb(248,60,28)" fg:x="873" fg:w="1"/><text x="70.4268%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1768%" y="373" width="0.0804%" height="15" fill="rgb(249,101,23)" fg:x="873" fg:w="1"/><text x="70.4268%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="70.1768%" y="357" width="0.0804%" height="15" fill="rgb(228,51,19)" fg:x="873" fg:w="1"/><text x="70.4268%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.1768%" y="341" width="0.0804%" height="15" fill="rgb(213,20,6)" fg:x="873" fg:w="1"/><text x="70.4268%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (15 samples, 1.21%)</title><rect x="69.1318%" y="565" width="1.2058%" height="15" fill="rgb(212,124,10)" fg:x="860" fg:w="15"/><text x="69.3818%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="69.2926%" y="549" width="1.0450%" height="15" fill="rgb(248,3,40)" fg:x="862" fg:w="13"/><text x="69.5426%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="70.0965%" y="533" width="0.2412%" height="15" fill="rgb(223,178,23)" fg:x="872" fg:w="3"/><text x="70.3465%" y="543.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="70.0965%" y="517" width="0.2412%" height="15" fill="rgb(240,132,45)" fg:x="872" fg:w="3"/><text x="70.3465%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="70.0965%" y="501" width="0.2412%" height="15" fill="rgb(245,164,36)" fg:x="872" fg:w="3"/><text x="70.3465%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="70.0965%" y="485" width="0.2412%" height="15" fill="rgb(231,188,53)" fg:x="872" fg:w="3"/><text x="70.3465%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.2572%" y="469" width="0.0804%" height="15" fill="rgb(237,198,39)" fg:x="874" fg:w="1"/><text x="70.5072%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2572%" y="453" width="0.0804%" height="15" fill="rgb(223,120,35)" fg:x="874" fg:w="1"/><text x="70.5072%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3376%" y="549" width="0.0804%" height="15" fill="rgb(253,107,49)" fg:x="875" fg:w="1"/><text x="70.5876%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3376%" y="533" width="0.0804%" height="15" fill="rgb(216,44,31)" fg:x="875" fg:w="1"/><text x="70.5876%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3376%" y="517" width="0.0804%" height="15" fill="rgb(253,87,21)" fg:x="875" fg:w="1"/><text x="70.5876%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3376%" y="501" width="0.0804%" height="15" fill="rgb(226,18,2)" fg:x="875" fg:w="1"/><text x="70.5876%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3376%" y="485" width="0.0804%" height="15" fill="rgb(216,8,46)" fg:x="875" fg:w="1"/><text x="70.5876%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3376%" y="469" width="0.0804%" height="15" fill="rgb(226,140,39)" fg:x="875" fg:w="1"/><text x="70.5876%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3376%" y="453" width="0.0804%" height="15" fill="rgb(221,194,54)" fg:x="875" fg:w="1"/><text x="70.5876%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3376%" y="437" width="0.0804%" height="15" fill="rgb(213,92,11)" fg:x="875" fg:w="1"/><text x="70.5876%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3376%" y="421" width="0.0804%" height="15" fill="rgb(229,162,46)" fg:x="875" fg:w="1"/><text x="70.5876%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3376%" y="405" width="0.0804%" height="15" fill="rgb(214,111,36)" fg:x="875" fg:w="1"/><text x="70.5876%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3376%" y="389" width="0.0804%" height="15" fill="rgb(207,6,21)" fg:x="875" fg:w="1"/><text x="70.5876%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.3376%" y="373" width="0.0804%" height="15" fill="rgb(213,127,38)" fg:x="875" fg:w="1"/><text x="70.5876%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="70.4180%" y="533" width="0.0804%" height="15" fill="rgb(238,118,32)" fg:x="876" fg:w="1"/><text x="70.6680%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.4180%" y="517" width="0.0804%" height="15" fill="rgb(240,139,39)" fg:x="876" fg:w="1"/><text x="70.6680%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.4180%" y="501" width="0.0804%" height="15" fill="rgb(235,10,37)" fg:x="876" fg:w="1"/><text x="70.6680%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5788%" y="485" width="0.0804%" height="15" fill="rgb(249,171,38)" fg:x="878" fg:w="1"/><text x="70.8288%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6592%" y="485" width="0.0804%" height="15" fill="rgb(242,144,32)" fg:x="879" fg:w="1"/><text x="70.9092%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6592%" y="469" width="0.0804%" height="15" fill="rgb(217,117,21)" fg:x="879" fg:w="1"/><text x="70.9092%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="70.4180%" y="549" width="0.4823%" height="15" fill="rgb(249,87,1)" fg:x="876" fg:w="6"/><text x="70.6680%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.4984%" y="533" width="0.4019%" height="15" fill="rgb(248,196,48)" fg:x="877" fg:w="5"/><text x="70.7484%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="70.4984%" y="517" width="0.4019%" height="15" fill="rgb(251,206,33)" fg:x="877" fg:w="5"/><text x="70.7484%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.4984%" y="501" width="0.4019%" height="15" fill="rgb(232,141,28)" fg:x="877" fg:w="5"/><text x="70.7484%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.7395%" y="485" width="0.1608%" height="15" fill="rgb(209,167,14)" fg:x="880" fg:w="2"/><text x="70.9895%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7395%" y="469" width="0.1608%" height="15" fill="rgb(225,11,50)" fg:x="880" fg:w="2"/><text x="70.9895%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.7395%" y="453" width="0.1608%" height="15" fill="rgb(209,50,20)" fg:x="880" fg:w="2"/><text x="70.9895%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.7395%" y="437" width="0.1608%" height="15" fill="rgb(212,17,46)" fg:x="880" fg:w="2"/><text x="70.9895%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9003%" y="533" width="0.0804%" height="15" fill="rgb(216,101,39)" fg:x="882" fg:w="1"/><text x="71.1503%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="70.9003%" y="549" width="0.2412%" height="15" fill="rgb(212,228,48)" fg:x="882" fg:w="3"/><text x="71.1503%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.9807%" y="533" width="0.1608%" height="15" fill="rgb(250,6,50)" fg:x="883" fg:w="2"/><text x="71.2307%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.9807%" y="517" width="0.1608%" height="15" fill="rgb(250,160,48)" fg:x="883" fg:w="2"/><text x="71.2307%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9807%" y="501" width="0.1608%" height="15" fill="rgb(244,216,33)" fg:x="883" fg:w="2"/><text x="71.2307%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.9807%" y="485" width="0.1608%" height="15" fill="rgb(207,157,5)" fg:x="883" fg:w="2"/><text x="71.2307%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.9807%" y="469" width="0.1608%" height="15" fill="rgb(228,199,8)" fg:x="883" fg:w="2"/><text x="71.2307%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0611%" y="453" width="0.0804%" height="15" fill="rgb(227,80,20)" fg:x="884" fg:w="1"/><text x="71.3111%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0611%" y="437" width="0.0804%" height="15" fill="rgb(222,9,33)" fg:x="884" fg:w="1"/><text x="71.3111%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (886 samples, 71.22%)</title><rect x="0.0000%" y="661" width="71.2219%" height="15" fill="rgb(239,44,28)" fg:x="0" fg:w="886"/><text x="0.2500%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (886 samples, 71.22%)</title><rect x="0.0000%" y="645" width="71.2219%" height="15" fill="rgb(249,187,43)" fg:x="0" fg:w="886"/><text x="0.2500%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (886 samples, 71.22%)</title><rect x="0.0000%" y="629" width="71.2219%" height="15" fill="rgb(216,141,28)" fg:x="0" fg:w="886"/><text x="0.2500%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (285 samples, 22.91%)</title><rect x="48.3119%" y="613" width="22.9100%" height="15" fill="rgb(230,154,53)" fg:x="601" fg:w="285"/><text x="48.5619%" y="623.50">engine::session::Session::evaluate_a..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (285 samples, 22.91%)</title><rect x="48.3119%" y="597" width="22.9100%" height="15" fill="rgb(227,82,4)" fg:x="601" fg:w="285"/><text x="48.5619%" y="607.50">engine::session::Session::evaluate_a..</text></g><g><title>kernel::model::entry::EntryResolver::world (26 samples, 2.09%)</title><rect x="69.1318%" y="581" width="2.0900%" height="15" fill="rgb(220,107,16)" fg:x="860" fg:w="26"/><text x="69.3818%" y="591.50">k..</text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="70.3376%" y="565" width="0.8842%" height="15" fill="rgb(207,187,2)" fg:x="875" fg:w="11"/><text x="70.5876%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.1415%" y="549" width="0.0804%" height="15" fill="rgb(210,162,52)" fg:x="885" fg:w="1"/><text x="71.3915%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.2219%" y="581" width="0.0804%" height="15" fill="rgb(217,216,49)" fg:x="886" fg:w="1"/><text x="71.4719%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2219%" y="565" width="0.0804%" height="15" fill="rgb(218,146,49)" fg:x="886" fg:w="1"/><text x="71.4719%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="71.2219%" y="613" width="0.1608%" height="15" fill="rgb(216,55,40)" fg:x="886" fg:w="2"/><text x="71.4719%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.2219%" y="597" width="0.1608%" height="15" fill="rgb(208,196,21)" fg:x="886" fg:w="2"/><text x="71.4719%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.3023%" y="581" width="0.0804%" height="15" fill="rgb(242,117,42)" fg:x="887" fg:w="1"/><text x="71.5523%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.4630%" y="517" width="0.0804%" height="15" fill="rgb(210,11,23)" fg:x="889" fg:w="1"/><text x="71.7130%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="71.5434%" y="501" width="0.2412%" height="15" fill="rgb(217,110,2)" fg:x="890" fg:w="3"/><text x="71.7934%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.6238%" y="485" width="0.1608%" height="15" fill="rgb(229,77,54)" fg:x="891" fg:w="2"/><text x="71.8738%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="71.4630%" y="533" width="0.4019%" height="15" fill="rgb(218,53,16)" fg:x="889" fg:w="5"/><text x="71.7130%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="71.5434%" y="517" width="0.3215%" height="15" fill="rgb(215,38,13)" fg:x="890" fg:w="4"/><text x="71.7934%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7846%" y="501" width="0.0804%" height="15" fill="rgb(235,42,18)" fg:x="893" fg:w="1"/><text x="72.0346%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7846%" y="485" width="0.0804%" height="15" fill="rgb(219,66,54)" fg:x="893" fg:w="1"/><text x="72.0346%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.1061%" y="485" width="0.0804%" height="15" fill="rgb(222,205,4)" fg:x="897" fg:w="1"/><text x="72.3561%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1061%" y="469" width="0.0804%" height="15" fill="rgb(227,213,46)" fg:x="897" fg:w="1"/><text x="72.3561%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.1865%" y="485" width="0.1608%" height="15" fill="rgb(250,145,42)" fg:x="898" fg:w="2"/><text x="72.4365%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3473%" y="485" width="0.0804%" height="15" fill="rgb(219,15,2)" fg:x="900" fg:w="1"/><text x="72.5973%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3473%" y="469" width="0.0804%" height="15" fill="rgb(231,181,52)" fg:x="900" fg:w="1"/><text x="72.5973%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.4277%" y="469" width="0.0804%" height="15" fill="rgb(235,1,42)" fg:x="901" fg:w="1"/><text x="72.6777%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="71.9453%" y="517" width="0.6431%" height="15" fill="rgb(249,88,27)" fg:x="895" fg:w="8"/><text x="72.1953%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="72.0257%" y="501" width="0.5627%" height="15" fill="rgb(235,145,16)" fg:x="896" fg:w="7"/><text x="72.2757%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.4277%" y="485" width="0.1608%" height="15" fill="rgb(237,114,19)" fg:x="901" fg:w="2"/><text x="72.6777%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.5080%" y="469" width="0.0804%" height="15" fill="rgb(238,51,50)" fg:x="902" fg:w="1"/><text x="72.7580%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5080%" y="453" width="0.0804%" height="15" fill="rgb(205,194,25)" fg:x="902" fg:w="1"/><text x="72.7580%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="71.4630%" y="581" width="1.2058%" height="15" fill="rgb(215,203,17)" fg:x="889" fg:w="15"/><text x="71.7130%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (15 samples, 1.21%)</title><rect x="71.4630%" y="565" width="1.2058%" height="15" fill="rgb(233,112,49)" fg:x="889" fg:w="15"/><text x="71.7130%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="71.4630%" y="549" width="1.2058%" height="15" fill="rgb(241,130,26)" fg:x="889" fg:w="15"/><text x="71.7130%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="71.8650%" y="533" width="0.8039%" height="15" fill="rgb(252,223,19)" fg:x="894" fg:w="10"/><text x="72.1150%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5884%" y="517" width="0.0804%" height="15" fill="rgb(211,95,25)" fg:x="903" fg:w="1"/><text x="72.8384%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.37%)</title><rect x="71.3826%" y="613" width="1.3666%" height="15" fill="rgb(251,182,27)" fg:x="888" fg:w="17"/><text x="71.6326%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (16 samples, 1.29%)</title><rect x="71.4630%" y="597" width="1.2862%" height="15" fill="rgb(238,24,4)" fg:x="889" fg:w="16"/><text x="71.7130%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6688%" y="581" width="0.0804%" height="15" fill="rgb(224,220,25)" fg:x="904" fg:w="1"/><text x="72.9188%" y="591.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="72.7492%" y="501" width="0.0804%" height="15" fill="rgb(239,133,26)" fg:x="905" fg:w="1"/><text x="72.9992%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="72.7492%" y="533" width="0.4823%" height="15" fill="rgb(211,94,48)" fg:x="905" fg:w="6"/><text x="72.9992%" y="543.50"></text></g><g><title>libloading::safe::Library::new (6 samples, 0.48%)</title><rect x="72.7492%" y="517" width="0.4823%" height="15" fill="rgb(239,87,6)" fg:x="905" fg:w="6"/><text x="72.9992%" y="527.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="72.8296%" y="501" width="0.4019%" height="15" fill="rgb(227,62,0)" fg:x="906" fg:w="5"/><text x="73.0796%" y="511.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="72.8296%" y="485" width="0.4019%" height="15" fill="rgb(211,226,4)" fg:x="906" fg:w="5"/><text x="73.0796%" y="495.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="72.8296%" y="469" width="0.4019%" height="15" fill="rgb(253,38,52)" fg:x="906" fg:w="5"/><text x="73.0796%" y="479.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="72.8296%" y="453" width="0.4019%" height="15" fill="rgb(229,126,40)" fg:x="906" fg:w="5"/><text x="73.0796%" y="463.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="72.8296%" y="437" width="0.4019%" height="15" fill="rgb(229,165,44)" fg:x="906" fg:w="5"/><text x="73.0796%" y="447.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="72.7492%" y="565" width="0.5627%" height="15" fill="rgb(247,95,47)" fg:x="905" fg:w="7"/><text x="72.9992%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="72.7492%" y="549" width="0.5627%" height="15" fill="rgb(216,140,30)" fg:x="905" fg:w="7"/><text x="72.9992%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="73.2315%" y="533" width="0.0804%" height="15" fill="rgb(246,214,8)" fg:x="911" fg:w="1"/><text x="73.4815%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="73.2315%" y="517" width="0.0804%" height="15" fill="rgb(227,224,15)" fg:x="911" fg:w="1"/><text x="73.4815%" y="527.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (8 samples, 0.64%)</title><rect x="72.7492%" y="613" width="0.6431%" height="15" fill="rgb(233,175,4)" fg:x="905" fg:w="8"/><text x="72.9992%" y="623.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (8 samples, 0.64%)</title><rect x="72.7492%" y="597" width="0.6431%" height="15" fill="rgb(221,66,45)" fg:x="905" fg:w="8"/><text x="72.9992%" y="607.50"></text></g><g><title>engine::session::Session::new (8 samples, 0.64%)</title><rect x="72.7492%" y="581" width="0.6431%" height="15" fill="rgb(221,178,18)" fg:x="905" fg:w="8"/><text x="72.9992%" y="591.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="73.3119%" y="565" width="0.0804%" height="15" fill="rgb(213,81,29)" fg:x="912" fg:w="1"/><text x="73.5619%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="73.3119%" y="549" width="0.0804%" height="15" fill="rgb(220,89,49)" fg:x="912" fg:w="1"/><text x="73.5619%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="73.3119%" y="533" width="0.0804%" height="15" fill="rgb(227,60,33)" fg:x="912" fg:w="1"/><text x="73.5619%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.3119%" y="517" width="0.0804%" height="15" fill="rgb(205,113,12)" fg:x="912" fg:w="1"/><text x="73.5619%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.3119%" y="501" width="0.0804%" height="15" fill="rgb(211,32,1)" fg:x="912" fg:w="1"/><text x="73.5619%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4727%" y="597" width="0.0804%" height="15" fill="rgb(246,2,12)" fg:x="914" fg:w="1"/><text x="73.7227%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.4727%" y="581" width="0.0804%" height="15" fill="rgb(243,37,27)" fg:x="914" fg:w="1"/><text x="73.7227%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.5531%" y="597" width="0.0804%" height="15" fill="rgb(248,211,31)" fg:x="915" fg:w="1"/><text x="73.8031%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.5531%" y="581" width="0.0804%" height="15" fill="rgb(242,146,47)" fg:x="915" fg:w="1"/><text x="73.8031%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="73.7138%" y="549" width="0.1608%" height="15" fill="rgb(206,70,20)" fg:x="917" fg:w="2"/><text x="73.9638%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.8746%" y="469" width="0.0804%" height="15" fill="rgb(215,10,51)" fg:x="919" fg:w="1"/><text x="74.1246%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.8746%" y="453" width="0.0804%" height="15" fill="rgb(243,178,53)" fg:x="919" fg:w="1"/><text x="74.1246%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.8746%" y="437" width="0.0804%" height="15" fill="rgb(233,221,20)" fg:x="919" fg:w="1"/><text x="74.1246%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.8746%" y="421" width="0.0804%" height="15" fill="rgb(218,95,35)" fg:x="919" fg:w="1"/><text x="74.1246%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="73.8746%" y="485" width="0.1608%" height="15" fill="rgb(229,13,5)" fg:x="919" fg:w="2"/><text x="74.1246%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.9550%" y="469" width="0.0804%" height="15" fill="rgb(252,164,30)" fg:x="920" fg:w="1"/><text x="74.2050%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.0354%" y="469" width="0.0804%" height="15" fill="rgb(232,68,36)" fg:x="921" fg:w="1"/><text x="74.2854%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.0354%" y="453" width="0.0804%" height="15" fill="rgb(219,59,54)" fg:x="921" fg:w="1"/><text x="74.2854%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.0354%" y="437" width="0.0804%" height="15" fill="rgb(250,92,33)" fg:x="921" fg:w="1"/><text x="74.2854%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.0354%" y="421" width="0.0804%" height="15" fill="rgb(229,162,54)" fg:x="921" fg:w="1"/><text x="74.2854%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="74.3569%" y="453" width="0.1608%" height="15" fill="rgb(244,114,52)" fg:x="925" fg:w="2"/><text x="74.6069%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.3569%" y="437" width="0.1608%" height="15" fill="rgb(212,211,43)" fg:x="925" fg:w="2"/><text x="74.6069%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.4373%" y="421" width="0.0804%" height="15" fill="rgb(226,147,8)" fg:x="926" fg:w="1"/><text x="74.6873%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.4373%" y="405" width="0.0804%" height="15" fill="rgb(226,23,13)" fg:x="926" fg:w="1"/><text x="74.6873%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.4373%" y="389" width="0.0804%" height="15" fill="rgb(240,63,4)" fg:x="926" fg:w="1"/><text x="74.6873%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.5177%" y="437" width="0.0804%" height="15" fill="rgb(221,1,32)" fg:x="927" fg:w="1"/><text x="74.7677%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5177%" y="421" width="0.0804%" height="15" fill="rgb(242,117,10)" fg:x="927" fg:w="1"/><text x="74.7677%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.5981%" y="437" width="0.0804%" height="15" fill="rgb(249,172,44)" fg:x="928" fg:w="1"/><text x="74.8481%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5981%" y="421" width="0.0804%" height="15" fill="rgb(244,46,45)" fg:x="928" fg:w="1"/><text x="74.8481%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="74.5177%" y="453" width="0.3215%" height="15" fill="rgb(206,43,17)" fg:x="927" fg:w="4"/><text x="74.7677%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="74.6785%" y="437" width="0.1608%" height="15" fill="rgb(239,218,39)" fg:x="929" fg:w="2"/><text x="74.9285%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.7588%" y="421" width="0.0804%" height="15" fill="rgb(208,169,54)" fg:x="930" fg:w="1"/><text x="75.0088%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.7588%" y="405" width="0.0804%" height="15" fill="rgb(247,25,42)" fg:x="930" fg:w="1"/><text x="75.0088%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="74.0354%" y="485" width="0.8842%" height="15" fill="rgb(226,23,31)" fg:x="921" fg:w="11"/><text x="74.2854%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="74.1158%" y="469" width="0.8039%" height="15" fill="rgb(247,16,28)" fg:x="922" fg:w="10"/><text x="74.3658%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.8392%" y="453" width="0.0804%" height="15" fill="rgb(231,147,38)" fg:x="931" fg:w="1"/><text x="75.0892%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.8392%" y="437" width="0.0804%" height="15" fill="rgb(253,81,48)" fg:x="931" fg:w="1"/><text x="75.0892%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8392%" y="421" width="0.0804%" height="15" fill="rgb(249,222,43)" fg:x="931" fg:w="1"/><text x="75.0892%" y="431.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.13%)</title><rect x="73.8746%" y="501" width="1.1254%" height="15" fill="rgb(221,3,27)" fg:x="919" fg:w="14"/><text x="74.1246%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.9196%" y="485" width="0.0804%" height="15" fill="rgb(228,180,5)" fg:x="932" fg:w="1"/><text x="75.1696%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.9196%" y="469" width="0.0804%" height="15" fill="rgb(227,131,42)" fg:x="932" fg:w="1"/><text x="75.1696%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.9196%" y="453" width="0.0804%" height="15" fill="rgb(212,3,39)" fg:x="932" fg:w="1"/><text x="75.1696%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.9196%" y="437" width="0.0804%" height="15" fill="rgb(226,45,5)" fg:x="932" fg:w="1"/><text x="75.1696%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.9196%" y="421" width="0.0804%" height="15" fill="rgb(215,167,45)" fg:x="932" fg:w="1"/><text x="75.1696%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9196%" y="405" width="0.0804%" height="15" fill="rgb(250,218,53)" fg:x="932" fg:w="1"/><text x="75.1696%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.0000%" y="501" width="0.1608%" height="15" fill="rgb(207,140,0)" fg:x="933" fg:w="2"/><text x="75.2500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="75.0000%" y="485" width="0.1608%" height="15" fill="rgb(238,133,51)" fg:x="933" fg:w="2"/><text x="75.2500%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="75.0000%" y="469" width="0.1608%" height="15" fill="rgb(218,203,53)" fg:x="933" fg:w="2"/><text x="75.2500%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.0804%" y="453" width="0.0804%" height="15" fill="rgb(226,184,25)" fg:x="934" fg:w="1"/><text x="75.3304%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1608%" y="453" width="0.0804%" height="15" fill="rgb(231,121,21)" fg:x="935" fg:w="1"/><text x="75.4108%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1608%" y="437" width="0.0804%" height="15" fill="rgb(251,14,34)" fg:x="935" fg:w="1"/><text x="75.4108%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1608%" y="421" width="0.0804%" height="15" fill="rgb(249,193,11)" fg:x="935" fg:w="1"/><text x="75.4108%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1608%" y="405" width="0.0804%" height="15" fill="rgb(220,172,37)" fg:x="935" fg:w="1"/><text x="75.4108%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2412%" y="405" width="0.0804%" height="15" fill="rgb(231,229,43)" fg:x="936" fg:w="1"/><text x="75.4912%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.3215%" y="405" width="0.0804%" height="15" fill="rgb(250,161,5)" fg:x="937" fg:w="1"/><text x="75.5715%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.3215%" y="389" width="0.0804%" height="15" fill="rgb(218,225,18)" fg:x="937" fg:w="1"/><text x="75.5715%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.3215%" y="373" width="0.0804%" height="15" fill="rgb(245,45,42)" fg:x="937" fg:w="1"/><text x="75.5715%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="75.4019%" y="389" width="0.0804%" height="15" fill="rgb(211,115,1)" fg:x="938" fg:w="1"/><text x="75.6519%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5627%" y="309" width="0.0804%" height="15" fill="rgb(248,133,52)" fg:x="940" fg:w="1"/><text x="75.8127%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="75.4823%" y="389" width="0.2412%" height="15" fill="rgb(238,100,21)" fg:x="939" fg:w="3"/><text x="75.7323%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.5627%" y="373" width="0.1608%" height="15" fill="rgb(247,144,11)" fg:x="940" fg:w="2"/><text x="75.8127%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="75.5627%" y="357" width="0.1608%" height="15" fill="rgb(206,164,16)" fg:x="940" fg:w="2"/><text x="75.8127%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.5627%" y="341" width="0.1608%" height="15" fill="rgb(222,34,3)" fg:x="940" fg:w="2"/><text x="75.8127%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.5627%" y="325" width="0.1608%" height="15" fill="rgb(248,82,4)" fg:x="940" fg:w="2"/><text x="75.8127%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="75.6431%" y="309" width="0.0804%" height="15" fill="rgb(228,81,46)" fg:x="941" fg:w="1"/><text x="75.8931%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="75.2412%" y="421" width="0.5627%" height="15" fill="rgb(227,67,47)" fg:x="936" fg:w="7"/><text x="75.4912%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="75.4019%" y="405" width="0.4019%" height="15" fill="rgb(215,93,53)" fg:x="938" fg:w="5"/><text x="75.6519%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7235%" y="389" width="0.0804%" height="15" fill="rgb(248,194,39)" fg:x="942" fg:w="1"/><text x="75.9735%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="75.2412%" y="437" width="0.7235%" height="15" fill="rgb(215,5,19)" fg:x="936" fg:w="9"/><text x="75.4912%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.8039%" y="421" width="0.1608%" height="15" fill="rgb(226,215,51)" fg:x="943" fg:w="2"/><text x="76.0539%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8842%" y="405" width="0.0804%" height="15" fill="rgb(225,56,26)" fg:x="944" fg:w="1"/><text x="76.1342%" y="415.50"></text></g><g><title>engine::session::Session::flush (30 samples, 2.41%)</title><rect x="73.6334%" y="597" width="2.4116%" height="15" fill="rgb(222,75,29)" fg:x="916" fg:w="30"/><text x="73.8834%" y="607.50">en..</text></g><g><title>engine::session::state::State::close (29 samples, 2.33%)</title><rect x="73.7138%" y="581" width="2.3312%" height="15" fill="rgb(236,139,6)" fg:x="917" fg:w="29"/><text x="73.9638%" y="591.50">e..</text></g><g><title>engine::session::state::State::flush_entities (29 samples, 2.33%)</title><rect x="73.7138%" y="565" width="2.3312%" height="15" fill="rgb(223,137,36)" fg:x="917" fg:w="29"/><text x="73.9638%" y="575.50">e..</text></g><g><title>core::iter::adapters::try_process (27 samples, 2.17%)</title><rect x="73.8746%" y="549" width="2.1704%" height="15" fill="rgb(226,99,2)" fg:x="919" fg:w="27"/><text x="74.1246%" y="559.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.17%)</title><rect x="73.8746%" y="533" width="2.1704%" height="15" fill="rgb(206,133,23)" fg:x="919" fg:w="27"/><text x="74.1246%" y="543.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.17%)</title><rect x="73.8746%" y="517" width="2.1704%" height="15" fill="rgb(243,173,15)" fg:x="919" fg:w="27"/><text x="74.1246%" y="527.50">e..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="75.1608%" y="501" width="0.8842%" height="15" fill="rgb(228,69,28)" fg:x="935" fg:w="11"/><text x="75.4108%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="75.1608%" y="485" width="0.8842%" height="15" fill="rgb(212,51,22)" fg:x="935" fg:w="11"/><text x="75.4108%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="75.1608%" y="469" width="0.8842%" height="15" fill="rgb(227,113,0)" fg:x="935" fg:w="11"/><text x="75.4108%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="75.2412%" y="453" width="0.8039%" height="15" fill="rgb(252,84,27)" fg:x="936" fg:w="10"/><text x="75.4912%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9646%" y="437" width="0.0804%" height="15" fill="rgb(223,145,39)" fg:x="945" fg:w="1"/><text x="76.2146%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="76.0450%" y="533" width="0.0804%" height="15" fill="rgb(239,219,30)" fg:x="946" fg:w="1"/><text x="76.2950%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.0450%" y="517" width="0.0804%" height="15" fill="rgb(224,196,39)" fg:x="946" fg:w="1"/><text x="76.2950%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.0450%" y="549" width="0.1608%" height="15" fill="rgb(205,35,43)" fg:x="946" fg:w="2"/><text x="76.2950%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.1254%" y="533" width="0.0804%" height="15" fill="rgb(228,201,21)" fg:x="947" fg:w="1"/><text x="76.3754%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.1254%" y="517" width="0.0804%" height="15" fill="rgb(237,118,16)" fg:x="947" fg:w="1"/><text x="76.3754%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1254%" y="501" width="0.0804%" height="15" fill="rgb(241,17,19)" fg:x="947" fg:w="1"/><text x="76.3754%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.2058%" y="549" width="0.0804%" height="15" fill="rgb(214,10,25)" fg:x="948" fg:w="1"/><text x="76.4558%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.2058%" y="533" width="0.0804%" height="15" fill="rgb(238,37,29)" fg:x="948" fg:w="1"/><text x="76.4558%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.2862%" y="533" width="0.0804%" height="15" fill="rgb(253,83,25)" fg:x="949" fg:w="1"/><text x="76.5362%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.2862%" y="517" width="0.0804%" height="15" fill="rgb(234,192,12)" fg:x="949" fg:w="1"/><text x="76.5362%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.2862%" y="501" width="0.0804%" height="15" fill="rgb(241,216,45)" fg:x="949" fg:w="1"/><text x="76.5362%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2862%" y="485" width="0.0804%" height="15" fill="rgb(242,22,33)" fg:x="949" fg:w="1"/><text x="76.5362%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2862%" y="469" width="0.0804%" height="15" fill="rgb(231,105,49)" fg:x="949" fg:w="1"/><text x="76.5362%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2862%" y="453" width="0.0804%" height="15" fill="rgb(218,204,15)" fg:x="949" fg:w="1"/><text x="76.5362%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2862%" y="437" width="0.0804%" height="15" fill="rgb(235,138,41)" fg:x="949" fg:w="1"/><text x="76.5362%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2862%" y="421" width="0.0804%" height="15" fill="rgb(246,0,9)" fg:x="949" fg:w="1"/><text x="76.5362%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2862%" y="405" width="0.0804%" height="15" fill="rgb(210,74,4)" fg:x="949" fg:w="1"/><text x="76.5362%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="76.2862%" y="549" width="0.1608%" height="15" fill="rgb(250,60,41)" fg:x="949" fg:w="2"/><text x="76.5362%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3666%" y="533" width="0.0804%" height="15" fill="rgb(220,115,12)" fg:x="950" fg:w="1"/><text x="76.6166%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3666%" y="517" width="0.0804%" height="15" fill="rgb(237,100,13)" fg:x="950" fg:w="1"/><text x="76.6166%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3666%" y="501" width="0.0804%" height="15" fill="rgb(213,55,26)" fg:x="950" fg:w="1"/><text x="76.6166%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3666%" y="485" width="0.0804%" height="15" fill="rgb(216,17,4)" fg:x="950" fg:w="1"/><text x="76.6166%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3666%" y="469" width="0.0804%" height="15" fill="rgb(220,153,47)" fg:x="950" fg:w="1"/><text x="76.6166%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.4469%" y="533" width="0.0804%" height="15" fill="rgb(215,131,9)" fg:x="951" fg:w="1"/><text x="76.6969%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.4469%" y="517" width="0.0804%" height="15" fill="rgb(233,46,42)" fg:x="951" fg:w="1"/><text x="76.6969%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4469%" y="501" width="0.0804%" height="15" fill="rgb(226,86,7)" fg:x="951" fg:w="1"/><text x="76.6969%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4469%" y="485" width="0.0804%" height="15" fill="rgb(239,226,21)" fg:x="951" fg:w="1"/><text x="76.6969%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4469%" y="469" width="0.0804%" height="15" fill="rgb(244,137,22)" fg:x="951" fg:w="1"/><text x="76.6969%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4469%" y="453" width="0.0804%" height="15" fill="rgb(211,139,35)" fg:x="951" fg:w="1"/><text x="76.6969%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4469%" y="437" width="0.0804%" height="15" fill="rgb(214,62,50)" fg:x="951" fg:w="1"/><text x="76.6969%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.4469%" y="421" width="0.0804%" height="15" fill="rgb(212,113,44)" fg:x="951" fg:w="1"/><text x="76.6969%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.4469%" y="405" width="0.0804%" height="15" fill="rgb(226,150,43)" fg:x="951" fg:w="1"/><text x="76.6969%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.4469%" y="389" width="0.0804%" height="15" fill="rgb(250,71,37)" fg:x="951" fg:w="1"/><text x="76.6969%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4469%" y="373" width="0.0804%" height="15" fill="rgb(219,76,19)" fg:x="951" fg:w="1"/><text x="76.6969%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.4469%" y="357" width="0.0804%" height="15" fill="rgb(250,39,11)" fg:x="951" fg:w="1"/><text x="76.6969%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.4469%" y="341" width="0.0804%" height="15" fill="rgb(230,64,31)" fg:x="951" fg:w="1"/><text x="76.6969%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.4469%" y="325" width="0.0804%" height="15" fill="rgb(208,222,23)" fg:x="951" fg:w="1"/><text x="76.6969%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.4469%" y="309" width="0.0804%" height="15" fill="rgb(227,125,18)" fg:x="951" fg:w="1"/><text x="76.6969%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.4469%" y="293" width="0.0804%" height="15" fill="rgb(234,210,9)" fg:x="951" fg:w="1"/><text x="76.6969%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4469%" y="277" width="0.0804%" height="15" fill="rgb(217,127,24)" fg:x="951" fg:w="1"/><text x="76.6969%" y="287.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="76.0450%" y="581" width="0.5627%" height="15" fill="rgb(239,141,48)" fg:x="946" fg:w="7"/><text x="76.2950%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="76.0450%" y="565" width="0.5627%" height="15" fill="rgb(227,109,8)" fg:x="946" fg:w="7"/><text x="76.2950%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.4469%" y="549" width="0.1608%" height="15" fill="rgb(235,184,23)" fg:x="951" fg:w="2"/><text x="76.6969%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.5273%" y="533" width="0.0804%" height="15" fill="rgb(227,226,48)" fg:x="952" fg:w="1"/><text x="76.7773%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5273%" y="517" width="0.0804%" height="15" fill="rgb(206,150,11)" fg:x="952" fg:w="1"/><text x="76.7773%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5273%" y="501" width="0.0804%" height="15" fill="rgb(254,2,33)" fg:x="952" fg:w="1"/><text x="76.7773%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5273%" y="485" width="0.0804%" height="15" fill="rgb(243,160,20)" fg:x="952" fg:w="1"/><text x="76.7773%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.6077%" y="517" width="0.0804%" height="15" fill="rgb(218,208,30)" fg:x="953" fg:w="1"/><text x="76.8577%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.6077%" y="501" width="0.0804%" height="15" fill="rgb(224,120,49)" fg:x="953" fg:w="1"/><text x="76.8577%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6077%" y="485" width="0.0804%" height="15" fill="rgb(246,12,2)" fg:x="953" fg:w="1"/><text x="76.8577%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6077%" y="469" width="0.0804%" height="15" fill="rgb(236,117,3)" fg:x="953" fg:w="1"/><text x="76.8577%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6881%" y="501" width="0.0804%" height="15" fill="rgb(216,128,52)" fg:x="954" fg:w="1"/><text x="76.9381%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6881%" y="485" width="0.0804%" height="15" fill="rgb(246,145,19)" fg:x="954" fg:w="1"/><text x="76.9381%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.6881%" y="469" width="0.0804%" height="15" fill="rgb(222,11,46)" fg:x="954" fg:w="1"/><text x="76.9381%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.6881%" y="453" width="0.0804%" height="15" fill="rgb(245,82,36)" fg:x="954" fg:w="1"/><text x="76.9381%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.6881%" y="437" width="0.0804%" height="15" fill="rgb(250,73,51)" fg:x="954" fg:w="1"/><text x="76.9381%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6881%" y="421" width="0.0804%" height="15" fill="rgb(221,189,23)" fg:x="954" fg:w="1"/><text x="76.9381%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6881%" y="405" width="0.0804%" height="15" fill="rgb(210,33,7)" fg:x="954" fg:w="1"/><text x="76.9381%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.6881%" y="389" width="0.0804%" height="15" fill="rgb(210,107,22)" fg:x="954" fg:w="1"/><text x="76.9381%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.6881%" y="373" width="0.0804%" height="15" fill="rgb(222,116,37)" fg:x="954" fg:w="1"/><text x="76.9381%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.6881%" y="357" width="0.0804%" height="15" fill="rgb(254,17,48)" fg:x="954" fg:w="1"/><text x="76.9381%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.6881%" y="341" width="0.0804%" height="15" fill="rgb(224,36,32)" fg:x="954" fg:w="1"/><text x="76.9381%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6881%" y="325" width="0.0804%" height="15" fill="rgb(232,90,46)" fg:x="954" fg:w="1"/><text x="76.9381%" y="335.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.80%)</title><rect x="76.0450%" y="597" width="0.8039%" height="15" fill="rgb(241,66,40)" fg:x="946" fg:w="10"/><text x="76.2950%" y="607.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="76.6077%" y="581" width="0.2412%" height="15" fill="rgb(249,184,29)" fg:x="953" fg:w="3"/><text x="76.8577%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="76.6077%" y="565" width="0.2412%" height="15" fill="rgb(231,181,1)" fg:x="953" fg:w="3"/><text x="76.8577%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="76.6077%" y="549" width="0.2412%" height="15" fill="rgb(224,94,2)" fg:x="953" fg:w="3"/><text x="76.8577%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.6077%" y="533" width="0.2412%" height="15" fill="rgb(229,170,15)" fg:x="953" fg:w="3"/><text x="76.8577%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.6881%" y="517" width="0.1608%" height="15" fill="rgb(240,127,35)" fg:x="954" fg:w="2"/><text x="76.9381%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7685%" y="501" width="0.0804%" height="15" fill="rgb(248,196,34)" fg:x="955" fg:w="1"/><text x="77.0185%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7685%" y="485" width="0.0804%" height="15" fill="rgb(236,137,7)" fg:x="955" fg:w="1"/><text x="77.0185%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7685%" y="469" width="0.0804%" height="15" fill="rgb(235,127,16)" fg:x="955" fg:w="1"/><text x="77.0185%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7685%" y="453" width="0.0804%" height="15" fill="rgb(250,192,54)" fg:x="955" fg:w="1"/><text x="77.0185%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7685%" y="437" width="0.0804%" height="15" fill="rgb(218,98,20)" fg:x="955" fg:w="1"/><text x="77.0185%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.8489%" y="565" width="0.0804%" height="15" fill="rgb(230,176,47)" fg:x="956" fg:w="1"/><text x="77.0989%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.8489%" y="549" width="0.0804%" height="15" fill="rgb(244,2,33)" fg:x="956" fg:w="1"/><text x="77.0989%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8489%" y="533" width="0.0804%" height="15" fill="rgb(231,100,17)" fg:x="956" fg:w="1"/><text x="77.0989%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8489%" y="517" width="0.0804%" height="15" fill="rgb(245,23,12)" fg:x="956" fg:w="1"/><text x="77.0989%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.8489%" y="501" width="0.0804%" height="15" fill="rgb(249,55,22)" fg:x="956" fg:w="1"/><text x="77.0989%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8489%" y="485" width="0.0804%" height="15" fill="rgb(207,134,9)" fg:x="956" fg:w="1"/><text x="77.0989%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8489%" y="469" width="0.0804%" height="15" fill="rgb(218,134,0)" fg:x="956" fg:w="1"/><text x="77.0989%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.8489%" y="453" width="0.0804%" height="15" fill="rgb(213,212,33)" fg:x="956" fg:w="1"/><text x="77.0989%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9293%" y="453" width="0.0804%" height="15" fill="rgb(252,106,18)" fg:x="957" fg:w="1"/><text x="77.1793%" y="463.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="76.9293%" y="565" width="0.1608%" height="15" fill="rgb(208,126,42)" fg:x="957" fg:w="2"/><text x="77.1793%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="76.9293%" y="549" width="0.1608%" height="15" fill="rgb(246,175,29)" fg:x="957" fg:w="2"/><text x="77.1793%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.9293%" y="533" width="0.1608%" height="15" fill="rgb(215,13,50)" fg:x="957" fg:w="2"/><text x="77.1793%" y="543.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.9293%" y="517" width="0.1608%" height="15" fill="rgb(216,172,15)" fg:x="957" fg:w="2"/><text x="77.1793%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9293%" y="501" width="0.1608%" height="15" fill="rgb(212,103,13)" fg:x="957" fg:w="2"/><text x="77.1793%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.9293%" y="485" width="0.1608%" height="15" fill="rgb(231,171,36)" fg:x="957" fg:w="2"/><text x="77.1793%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.9293%" y="469" width="0.1608%" height="15" fill="rgb(250,123,20)" fg:x="957" fg:w="2"/><text x="77.1793%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0096%" y="453" width="0.0804%" height="15" fill="rgb(212,53,50)" fg:x="958" fg:w="1"/><text x="77.2596%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.0900%" y="565" width="0.0804%" height="15" fill="rgb(243,54,12)" fg:x="959" fg:w="1"/><text x="77.3400%" y="575.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.0900%" y="549" width="0.0804%" height="15" fill="rgb(234,101,34)" fg:x="959" fg:w="1"/><text x="77.3400%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0900%" y="533" width="0.0804%" height="15" fill="rgb(254,67,22)" fg:x="959" fg:w="1"/><text x="77.3400%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.1704%" y="549" width="0.0804%" height="15" fill="rgb(250,35,47)" fg:x="960" fg:w="1"/><text x="77.4204%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1704%" y="533" width="0.0804%" height="15" fill="rgb(226,126,38)" fg:x="960" fg:w="1"/><text x="77.4204%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1704%" y="517" width="0.0804%" height="15" fill="rgb(216,138,53)" fg:x="960" fg:w="1"/><text x="77.4204%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1704%" y="501" width="0.0804%" height="15" fill="rgb(246,199,43)" fg:x="960" fg:w="1"/><text x="77.4204%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.1704%" y="565" width="0.1608%" height="15" fill="rgb(232,125,11)" fg:x="960" fg:w="2"/><text x="77.4204%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.2508%" y="549" width="0.0804%" height="15" fill="rgb(218,219,45)" fg:x="961" fg:w="1"/><text x="77.5008%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2508%" y="533" width="0.0804%" height="15" fill="rgb(216,102,54)" fg:x="961" fg:w="1"/><text x="77.5008%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.2508%" y="517" width="0.0804%" height="15" fill="rgb(250,228,7)" fg:x="961" fg:w="1"/><text x="77.5008%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2508%" y="501" width="0.0804%" height="15" fill="rgb(226,125,25)" fg:x="961" fg:w="1"/><text x="77.5008%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.2508%" y="485" width="0.0804%" height="15" fill="rgb(224,165,27)" fg:x="961" fg:w="1"/><text x="77.5008%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2508%" y="469" width="0.0804%" height="15" fill="rgb(233,86,3)" fg:x="961" fg:w="1"/><text x="77.5008%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="76.8489%" y="597" width="0.5627%" height="15" fill="rgb(228,116,20)" fg:x="956" fg:w="7"/><text x="77.0989%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="76.8489%" y="581" width="0.5627%" height="15" fill="rgb(209,192,17)" fg:x="956" fg:w="7"/><text x="77.0989%" y="591.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="77.3312%" y="565" width="0.0804%" height="15" fill="rgb(224,88,34)" fg:x="962" fg:w="1"/><text x="77.5812%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.3312%" y="549" width="0.0804%" height="15" fill="rgb(233,38,6)" fg:x="962" fg:w="1"/><text x="77.5812%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.3312%" y="533" width="0.0804%" height="15" fill="rgb(212,59,30)" fg:x="962" fg:w="1"/><text x="77.5812%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3312%" y="517" width="0.0804%" height="15" fill="rgb(213,80,3)" fg:x="962" fg:w="1"/><text x="77.5812%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3312%" y="501" width="0.0804%" height="15" fill="rgb(251,178,7)" fg:x="962" fg:w="1"/><text x="77.5812%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3312%" y="485" width="0.0804%" height="15" fill="rgb(213,154,26)" fg:x="962" fg:w="1"/><text x="77.5812%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3312%" y="469" width="0.0804%" height="15" fill="rgb(238,165,49)" fg:x="962" fg:w="1"/><text x="77.5812%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.3312%" y="453" width="0.0804%" height="15" fill="rgb(248,91,46)" fg:x="962" fg:w="1"/><text x="77.5812%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.4116%" y="549" width="0.0804%" height="15" fill="rgb(244,21,52)" fg:x="963" fg:w="1"/><text x="77.6616%" y="559.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="77.4116%" y="597" width="0.1608%" height="15" fill="rgb(247,122,20)" fg:x="963" fg:w="2"/><text x="77.6616%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="77.4116%" y="581" width="0.1608%" height="15" fill="rgb(218,27,9)" fg:x="963" fg:w="2"/><text x="77.6616%" y="591.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="77.4116%" y="565" width="0.1608%" height="15" fill="rgb(246,7,6)" fg:x="963" fg:w="2"/><text x="77.6616%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.4920%" y="549" width="0.0804%" height="15" fill="rgb(227,135,54)" fg:x="964" fg:w="1"/><text x="77.7420%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5723%" y="581" width="0.0804%" height="15" fill="rgb(247,14,11)" fg:x="965" fg:w="1"/><text x="77.8223%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="77.6527%" y="549" width="0.0804%" height="15" fill="rgb(206,149,34)" fg:x="966" fg:w="1"/><text x="77.9027%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.6527%" y="533" width="0.0804%" height="15" fill="rgb(227,228,4)" fg:x="966" fg:w="1"/><text x="77.9027%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6527%" y="517" width="0.0804%" height="15" fill="rgb(238,218,28)" fg:x="966" fg:w="1"/><text x="77.9027%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="77.6527%" y="581" width="0.1608%" height="15" fill="rgb(252,86,40)" fg:x="966" fg:w="2"/><text x="77.9027%" y="591.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="77.6527%" y="565" width="0.1608%" height="15" fill="rgb(251,225,11)" fg:x="966" fg:w="2"/><text x="77.9027%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.7331%" y="549" width="0.0804%" height="15" fill="rgb(206,46,49)" fg:x="967" fg:w="1"/><text x="77.9831%" y="559.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="77.7331%" y="533" width="0.0804%" height="15" fill="rgb(245,128,24)" fg:x="967" fg:w="1"/><text x="77.9831%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.7331%" y="517" width="0.0804%" height="15" fill="rgb(219,177,34)" fg:x="967" fg:w="1"/><text x="77.9831%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.7331%" y="501" width="0.0804%" height="15" fill="rgb(218,60,48)" fg:x="967" fg:w="1"/><text x="77.9831%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7331%" y="485" width="0.0804%" height="15" fill="rgb(221,11,5)" fg:x="967" fg:w="1"/><text x="77.9831%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.8939%" y="437" width="0.0804%" height="15" fill="rgb(220,148,13)" fg:x="969" fg:w="1"/><text x="78.1439%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.8939%" y="421" width="0.0804%" height="15" fill="rgb(210,16,3)" fg:x="969" fg:w="1"/><text x="78.1439%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8939%" y="405" width="0.0804%" height="15" fill="rgb(236,80,2)" fg:x="969" fg:w="1"/><text x="78.1439%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.8939%" y="389" width="0.0804%" height="15" fill="rgb(239,129,19)" fg:x="969" fg:w="1"/><text x="78.1439%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8939%" y="373" width="0.0804%" height="15" fill="rgb(220,106,35)" fg:x="969" fg:w="1"/><text x="78.1439%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.8939%" y="357" width="0.0804%" height="15" fill="rgb(252,139,45)" fg:x="969" fg:w="1"/><text x="78.1439%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.8939%" y="341" width="0.0804%" height="15" fill="rgb(229,8,36)" fg:x="969" fg:w="1"/><text x="78.1439%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="77.8939%" y="469" width="0.1608%" height="15" fill="rgb(230,126,33)" fg:x="969" fg:w="2"/><text x="78.1439%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="77.8939%" y="453" width="0.1608%" height="15" fill="rgb(239,140,21)" fg:x="969" fg:w="2"/><text x="78.1439%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.9743%" y="437" width="0.0804%" height="15" fill="rgb(254,104,9)" fg:x="970" fg:w="1"/><text x="78.2243%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9743%" y="421" width="0.0804%" height="15" fill="rgb(239,52,14)" fg:x="970" fg:w="1"/><text x="78.2243%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9743%" y="405" width="0.0804%" height="15" fill="rgb(208,227,44)" fg:x="970" fg:w="1"/><text x="78.2243%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.9743%" y="389" width="0.0804%" height="15" fill="rgb(246,18,19)" fg:x="970" fg:w="1"/><text x="78.2243%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9743%" y="373" width="0.0804%" height="15" fill="rgb(235,228,25)" fg:x="970" fg:w="1"/><text x="78.2243%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9743%" y="357" width="0.0804%" height="15" fill="rgb(240,156,20)" fg:x="970" fg:w="1"/><text x="78.2243%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9743%" y="341" width="0.0804%" height="15" fill="rgb(224,8,20)" fg:x="970" fg:w="1"/><text x="78.2243%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="77.8939%" y="485" width="0.2412%" height="15" fill="rgb(214,12,52)" fg:x="969" fg:w="3"/><text x="78.1439%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0547%" y="469" width="0.0804%" height="15" fill="rgb(211,220,47)" fg:x="971" fg:w="1"/><text x="78.3047%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0547%" y="453" width="0.0804%" height="15" fill="rgb(250,173,5)" fg:x="971" fg:w="1"/><text x="78.3047%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.0547%" y="437" width="0.0804%" height="15" fill="rgb(250,125,52)" fg:x="971" fg:w="1"/><text x="78.3047%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="78.0547%" y="421" width="0.0804%" height="15" fill="rgb(209,133,18)" fg:x="971" fg:w="1"/><text x="78.3047%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.0547%" y="405" width="0.0804%" height="15" fill="rgb(216,173,22)" fg:x="971" fg:w="1"/><text x="78.3047%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0547%" y="389" width="0.0804%" height="15" fill="rgb(205,3,22)" fg:x="971" fg:w="1"/><text x="78.3047%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.0547%" y="373" width="0.0804%" height="15" fill="rgb(248,22,20)" fg:x="971" fg:w="1"/><text x="78.3047%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0547%" y="357" width="0.0804%" height="15" fill="rgb(233,6,29)" fg:x="971" fg:w="1"/><text x="78.3047%" y="367.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.0547%" y="341" width="0.0804%" height="15" fill="rgb(240,22,54)" fg:x="971" fg:w="1"/><text x="78.3047%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0547%" y="325" width="0.0804%" height="15" fill="rgb(231,133,32)" fg:x="971" fg:w="1"/><text x="78.3047%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.0547%" y="309" width="0.0804%" height="15" fill="rgb(248,193,4)" fg:x="971" fg:w="1"/><text x="78.3047%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0547%" y="293" width="0.0804%" height="15" fill="rgb(211,178,46)" fg:x="971" fg:w="1"/><text x="78.3047%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.1350%" y="469" width="0.0804%" height="15" fill="rgb(224,5,42)" fg:x="972" fg:w="1"/><text x="78.3850%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.1350%" y="453" width="0.0804%" height="15" fill="rgb(239,176,25)" fg:x="972" fg:w="1"/><text x="78.3850%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1350%" y="437" width="0.0804%" height="15" fill="rgb(245,187,50)" fg:x="972" fg:w="1"/><text x="78.3850%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.1350%" y="421" width="0.0804%" height="15" fill="rgb(248,24,15)" fg:x="972" fg:w="1"/><text x="78.3850%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1350%" y="405" width="0.0804%" height="15" fill="rgb(205,166,13)" fg:x="972" fg:w="1"/><text x="78.3850%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1350%" y="389" width="0.0804%" height="15" fill="rgb(208,114,23)" fg:x="972" fg:w="1"/><text x="78.3850%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.1350%" y="373" width="0.0804%" height="15" fill="rgb(239,127,18)" fg:x="972" fg:w="1"/><text x="78.3850%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.1350%" y="357" width="0.0804%" height="15" fill="rgb(219,154,28)" fg:x="972" fg:w="1"/><text x="78.3850%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.1350%" y="341" width="0.0804%" height="15" fill="rgb(225,157,23)" fg:x="972" fg:w="1"/><text x="78.3850%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="78.1350%" y="325" width="0.0804%" height="15" fill="rgb(219,8,6)" fg:x="972" fg:w="1"/><text x="78.3850%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.1350%" y="309" width="0.0804%" height="15" fill="rgb(212,47,6)" fg:x="972" fg:w="1"/><text x="78.3850%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="77.8939%" y="501" width="0.4019%" height="15" fill="rgb(224,190,4)" fg:x="969" fg:w="5"/><text x="78.1439%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.1350%" y="485" width="0.1608%" height="15" fill="rgb(239,183,29)" fg:x="972" fg:w="2"/><text x="78.3850%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.2154%" y="469" width="0.0804%" height="15" fill="rgb(213,57,7)" fg:x="973" fg:w="1"/><text x="78.4654%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2154%" y="453" width="0.0804%" height="15" fill="rgb(216,148,1)" fg:x="973" fg:w="1"/><text x="78.4654%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.2154%" y="437" width="0.0804%" height="15" fill="rgb(236,182,29)" fg:x="973" fg:w="1"/><text x="78.4654%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.2154%" y="421" width="0.0804%" height="15" fill="rgb(244,120,48)" fg:x="973" fg:w="1"/><text x="78.4654%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="77.8135%" y="517" width="0.5627%" height="15" fill="rgb(206,71,34)" fg:x="968" fg:w="7"/><text x="78.0635%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.2958%" y="501" width="0.0804%" height="15" fill="rgb(242,32,6)" fg:x="974" fg:w="1"/><text x="78.5458%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2958%" y="485" width="0.0804%" height="15" fill="rgb(241,35,3)" fg:x="974" fg:w="1"/><text x="78.5458%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2958%" y="469" width="0.0804%" height="15" fill="rgb(222,62,19)" fg:x="974" fg:w="1"/><text x="78.5458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2958%" y="453" width="0.0804%" height="15" fill="rgb(223,110,41)" fg:x="974" fg:w="1"/><text x="78.5458%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.2958%" y="437" width="0.0804%" height="15" fill="rgb(208,224,4)" fg:x="974" fg:w="1"/><text x="78.5458%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2958%" y="421" width="0.0804%" height="15" fill="rgb(241,137,19)" fg:x="974" fg:w="1"/><text x="78.5458%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2958%" y="405" width="0.0804%" height="15" fill="rgb(244,24,17)" fg:x="974" fg:w="1"/><text x="78.5458%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="77.8135%" y="581" width="0.6431%" height="15" fill="rgb(245,178,49)" fg:x="968" fg:w="8"/><text x="78.0635%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="77.8135%" y="565" width="0.6431%" height="15" fill="rgb(219,160,38)" fg:x="968" fg:w="8"/><text x="78.0635%" y="575.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="77.8135%" y="549" width="0.6431%" height="15" fill="rgb(228,137,14)" fg:x="968" fg:w="8"/><text x="78.0635%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="77.8135%" y="533" width="0.6431%" height="15" fill="rgb(237,134,11)" fg:x="968" fg:w="8"/><text x="78.0635%" y="543.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="78.3762%" y="517" width="0.0804%" height="15" fill="rgb(211,126,44)" fg:x="975" fg:w="1"/><text x="78.6262%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="78.3762%" y="501" width="0.0804%" height="15" fill="rgb(226,171,33)" fg:x="975" fg:w="1"/><text x="78.6262%" y="511.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="78.3762%" y="485" width="0.0804%" height="15" fill="rgb(253,99,13)" fg:x="975" fg:w="1"/><text x="78.6262%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3762%" y="469" width="0.0804%" height="15" fill="rgb(244,48,7)" fg:x="975" fg:w="1"/><text x="78.6262%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3762%" y="453" width="0.0804%" height="15" fill="rgb(244,217,54)" fg:x="975" fg:w="1"/><text x="78.6262%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3762%" y="437" width="0.0804%" height="15" fill="rgb(224,15,18)" fg:x="975" fg:w="1"/><text x="78.6262%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3762%" y="421" width="0.0804%" height="15" fill="rgb(244,99,12)" fg:x="975" fg:w="1"/><text x="78.6262%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3762%" y="405" width="0.0804%" height="15" fill="rgb(233,226,8)" fg:x="975" fg:w="1"/><text x="78.6262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.3762%" y="389" width="0.0804%" height="15" fill="rgb(229,211,3)" fg:x="975" fg:w="1"/><text x="78.6262%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3762%" y="373" width="0.0804%" height="15" fill="rgb(216,140,21)" fg:x="975" fg:w="1"/><text x="78.6262%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="78.4566%" y="565" width="0.0804%" height="15" fill="rgb(234,122,30)" fg:x="976" fg:w="1"/><text x="78.7066%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4566%" y="549" width="0.0804%" height="15" fill="rgb(236,25,46)" fg:x="976" fg:w="1"/><text x="78.7066%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.4566%" y="533" width="0.0804%" height="15" fill="rgb(217,52,54)" fg:x="976" fg:w="1"/><text x="78.7066%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5370%" y="517" width="0.0804%" height="15" fill="rgb(222,29,26)" fg:x="977" fg:w="1"/><text x="78.7870%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.5370%" y="501" width="0.0804%" height="15" fill="rgb(216,177,29)" fg:x="977" fg:w="1"/><text x="78.7870%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.5370%" y="485" width="0.0804%" height="15" fill="rgb(247,136,51)" fg:x="977" fg:w="1"/><text x="78.7870%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5370%" y="469" width="0.0804%" height="15" fill="rgb(231,47,47)" fg:x="977" fg:w="1"/><text x="78.7870%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5370%" y="453" width="0.0804%" height="15" fill="rgb(211,192,36)" fg:x="977" fg:w="1"/><text x="78.7870%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5370%" y="437" width="0.0804%" height="15" fill="rgb(229,156,32)" fg:x="977" fg:w="1"/><text x="78.7870%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5370%" y="421" width="0.0804%" height="15" fill="rgb(248,213,20)" fg:x="977" fg:w="1"/><text x="78.7870%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5370%" y="405" width="0.0804%" height="15" fill="rgb(217,64,7)" fg:x="977" fg:w="1"/><text x="78.7870%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5370%" y="389" width="0.0804%" height="15" fill="rgb(232,142,8)" fg:x="977" fg:w="1"/><text x="78.7870%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5370%" y="373" width="0.0804%" height="15" fill="rgb(224,92,44)" fg:x="977" fg:w="1"/><text x="78.7870%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.5370%" y="357" width="0.0804%" height="15" fill="rgb(214,169,17)" fg:x="977" fg:w="1"/><text x="78.7870%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.5370%" y="341" width="0.0804%" height="15" fill="rgb(210,59,37)" fg:x="977" fg:w="1"/><text x="78.7870%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.5370%" y="325" width="0.0804%" height="15" fill="rgb(214,116,48)" fg:x="977" fg:w="1"/><text x="78.7870%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.5370%" y="309" width="0.0804%" height="15" fill="rgb(244,191,6)" fg:x="977" fg:w="1"/><text x="78.7870%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5370%" y="293" width="0.0804%" height="15" fill="rgb(241,50,52)" fg:x="977" fg:w="1"/><text x="78.7870%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.6174%" y="485" width="0.0804%" height="15" fill="rgb(236,75,39)" fg:x="978" fg:w="1"/><text x="78.8674%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.6174%" y="469" width="0.0804%" height="15" fill="rgb(236,99,0)" fg:x="978" fg:w="1"/><text x="78.8674%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.6977%" y="453" width="0.0804%" height="15" fill="rgb(207,202,15)" fg:x="979" fg:w="1"/><text x="78.9477%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="78.7781%" y="453" width="0.1608%" height="15" fill="rgb(233,207,14)" fg:x="980" fg:w="2"/><text x="79.0281%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.7781%" y="437" width="0.1608%" height="15" fill="rgb(226,27,51)" fg:x="980" fg:w="2"/><text x="79.0281%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8585%" y="421" width="0.0804%" height="15" fill="rgb(206,104,42)" fg:x="981" fg:w="1"/><text x="79.1085%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8585%" y="405" width="0.0804%" height="15" fill="rgb(212,225,4)" fg:x="981" fg:w="1"/><text x="79.1085%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.8585%" y="389" width="0.0804%" height="15" fill="rgb(233,96,42)" fg:x="981" fg:w="1"/><text x="79.1085%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="79.0193%" y="437" width="0.2412%" height="15" fill="rgb(229,21,32)" fg:x="983" fg:w="3"/><text x="79.2693%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.0193%" y="421" width="0.2412%" height="15" fill="rgb(226,216,24)" fg:x="983" fg:w="3"/><text x="79.2693%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.0997%" y="405" width="0.1608%" height="15" fill="rgb(221,163,17)" fg:x="984" fg:w="2"/><text x="79.3497%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1801%" y="389" width="0.0804%" height="15" fill="rgb(216,216,42)" fg:x="985" fg:w="1"/><text x="79.4301%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.2605%" y="389" width="0.0804%" height="15" fill="rgb(240,118,7)" fg:x="986" fg:w="1"/><text x="79.5105%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2605%" y="373" width="0.0804%" height="15" fill="rgb(221,67,37)" fg:x="986" fg:w="1"/><text x="79.5105%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.2605%" y="357" width="0.0804%" height="15" fill="rgb(241,32,44)" fg:x="986" fg:w="1"/><text x="79.5105%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.2605%" y="341" width="0.0804%" height="15" fill="rgb(235,204,43)" fg:x="986" fg:w="1"/><text x="79.5105%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.2605%" y="421" width="0.1608%" height="15" fill="rgb(213,116,10)" fg:x="986" fg:w="2"/><text x="79.5105%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.2605%" y="405" width="0.1608%" height="15" fill="rgb(239,15,48)" fg:x="986" fg:w="2"/><text x="79.5105%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3408%" y="389" width="0.0804%" height="15" fill="rgb(207,123,36)" fg:x="987" fg:w="1"/><text x="79.5908%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.3408%" y="373" width="0.0804%" height="15" fill="rgb(209,103,30)" fg:x="987" fg:w="1"/><text x="79.5908%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3408%" y="357" width="0.0804%" height="15" fill="rgb(238,100,19)" fg:x="987" fg:w="1"/><text x="79.5908%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3408%" y="341" width="0.0804%" height="15" fill="rgb(244,30,14)" fg:x="987" fg:w="1"/><text x="79.5908%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.4212%" y="405" width="0.0804%" height="15" fill="rgb(249,174,6)" fg:x="988" fg:w="1"/><text x="79.6712%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4212%" y="389" width="0.0804%" height="15" fill="rgb(235,213,41)" fg:x="988" fg:w="1"/><text x="79.6712%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.5016%" y="405" width="0.1608%" height="15" fill="rgb(213,118,6)" fg:x="989" fg:w="2"/><text x="79.7516%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.5016%" y="389" width="0.1608%" height="15" fill="rgb(235,44,51)" fg:x="989" fg:w="2"/><text x="79.7516%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.5016%" y="373" width="0.1608%" height="15" fill="rgb(217,9,53)" fg:x="989" fg:w="2"/><text x="79.7516%" y="383.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.5016%" y="357" width="0.1608%" height="15" fill="rgb(237,172,34)" fg:x="989" fg:w="2"/><text x="79.7516%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5820%" y="341" width="0.0804%" height="15" fill="rgb(206,206,11)" fg:x="990" fg:w="1"/><text x="79.8320%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5820%" y="325" width="0.0804%" height="15" fill="rgb(214,149,29)" fg:x="990" fg:w="1"/><text x="79.8320%" y="335.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.21%)</title><rect x="78.6977%" y="469" width="1.2058%" height="15" fill="rgb(208,123,3)" fg:x="979" fg:w="15"/><text x="78.9477%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="78.9389%" y="453" width="0.9646%" height="15" fill="rgb(229,126,4)" fg:x="982" fg:w="12"/><text x="79.1889%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="79.2605%" y="437" width="0.6431%" height="15" fill="rgb(222,92,36)" fg:x="986" fg:w="8"/><text x="79.5105%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="79.4212%" y="421" width="0.4823%" height="15" fill="rgb(216,39,41)" fg:x="988" fg:w="6"/><text x="79.6712%" y="431.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.6624%" y="405" width="0.2412%" height="15" fill="rgb(253,127,28)" fg:x="991" fg:w="3"/><text x="79.9124%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.7428%" y="389" width="0.1608%" height="15" fill="rgb(249,152,51)" fg:x="992" fg:w="2"/><text x="79.9928%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.7428%" y="373" width="0.1608%" height="15" fill="rgb(209,123,42)" fg:x="992" fg:w="2"/><text x="79.9928%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.9035%" y="437" width="0.0804%" height="15" fill="rgb(241,118,22)" fg:x="994" fg:w="1"/><text x="80.1535%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9035%" y="421" width="0.0804%" height="15" fill="rgb(208,25,7)" fg:x="994" fg:w="1"/><text x="80.1535%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9839%" y="421" width="0.0804%" height="15" fill="rgb(243,144,39)" fg:x="995" fg:w="1"/><text x="80.2339%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0643%" y="421" width="0.0804%" height="15" fill="rgb(250,50,5)" fg:x="996" fg:w="1"/><text x="80.3143%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0643%" y="405" width="0.0804%" height="15" fill="rgb(207,67,11)" fg:x="996" fg:w="1"/><text x="80.3143%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="80.1447%" y="405" width="0.2412%" height="15" fill="rgb(245,204,40)" fg:x="997" fg:w="3"/><text x="80.3947%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3055%" y="389" width="0.0804%" height="15" fill="rgb(238,228,24)" fg:x="999" fg:w="1"/><text x="80.5555%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="79.9035%" y="469" width="0.6431%" height="15" fill="rgb(217,116,22)" fg:x="994" fg:w="8"/><text x="80.1535%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="79.9035%" y="453" width="0.6431%" height="15" fill="rgb(234,98,12)" fg:x="994" fg:w="8"/><text x="80.1535%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="79.9839%" y="437" width="0.5627%" height="15" fill="rgb(242,170,50)" fg:x="995" fg:w="7"/><text x="80.2339%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="80.1447%" y="421" width="0.4019%" height="15" fill="rgb(235,7,5)" fg:x="997" fg:w="5"/><text x="80.3947%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.3859%" y="405" width="0.1608%" height="15" fill="rgb(241,114,28)" fg:x="1000" fg:w="2"/><text x="80.6359%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.4662%" y="389" width="0.0804%" height="15" fill="rgb(246,112,42)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.4662%" y="373" width="0.0804%" height="15" fill="rgb(248,228,14)" fg:x="1001" fg:w="1"/><text x="80.7162%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.5466%" y="453" width="0.0804%" height="15" fill="rgb(208,133,18)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="463.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="80.5466%" y="437" width="0.0804%" height="15" fill="rgb(207,35,49)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.5466%" y="421" width="0.0804%" height="15" fill="rgb(205,68,36)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.5466%" y="405" width="0.0804%" height="15" fill="rgb(245,62,40)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5466%" y="389" width="0.0804%" height="15" fill="rgb(228,27,24)" fg:x="1002" fg:w="1"/><text x="80.7966%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="80.6270%" y="437" width="0.0804%" height="15" fill="rgb(253,19,12)" fg:x="1003" fg:w="1"/><text x="80.8770%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7074%" y="421" width="0.0804%" height="15" fill="rgb(232,28,20)" fg:x="1004" fg:w="1"/><text x="80.9574%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7878%" y="421" width="0.0804%" height="15" fill="rgb(218,35,51)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.7878%" y="405" width="0.0804%" height="15" fill="rgb(212,90,40)" fg:x="1005" fg:w="1"/><text x="81.0378%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.9486%" y="389" width="0.0804%" height="15" fill="rgb(220,172,12)" fg:x="1007" fg:w="1"/><text x="81.1986%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.0289%" y="373" width="0.0804%" height="15" fill="rgb(226,159,20)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0289%" y="357" width="0.0804%" height="15" fill="rgb(234,205,16)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.0289%" y="341" width="0.0804%" height="15" fill="rgb(207,9,39)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0289%" y="325" width="0.0804%" height="15" fill="rgb(249,143,15)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0289%" y="309" width="0.0804%" height="15" fill="rgb(253,133,29)" fg:x="1008" fg:w="1"/><text x="81.2789%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.1093%" y="357" width="0.0804%" height="15" fill="rgb(221,187,0)" fg:x="1009" fg:w="1"/><text x="81.3593%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.0289%" y="389" width="0.2412%" height="15" fill="rgb(205,204,26)" fg:x="1008" fg:w="3"/><text x="81.2789%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1093%" y="373" width="0.1608%" height="15" fill="rgb(224,68,54)" fg:x="1009" fg:w="2"/><text x="81.3593%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.1897%" y="357" width="0.0804%" height="15" fill="rgb(209,67,4)" fg:x="1010" fg:w="1"/><text x="81.4397%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1897%" y="341" width="0.0804%" height="15" fill="rgb(228,229,18)" fg:x="1010" fg:w="1"/><text x="81.4397%" y="351.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.89%)</title><rect x="78.4566%" y="581" width="2.8939%" height="15" fill="rgb(231,89,13)" fg:x="976" fg:w="36"/><text x="78.7066%" y="591.50">en..</text></g><g><title>engine::session::Session::save_changes (35 samples, 2.81%)</title><rect x="78.5370%" y="565" width="2.8135%" height="15" fill="rgb(210,182,18)" fg:x="977" fg:w="35"/><text x="78.7870%" y="575.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.81%)</title><rect x="78.5370%" y="549" width="2.8135%" height="15" fill="rgb(240,105,2)" fg:x="977" fg:w="35"/><text x="78.7870%" y="559.50">en..</text></g><g><title>engine::session::state::State::flush_entities (35 samples, 2.81%)</title><rect x="78.5370%" y="533" width="2.8135%" height="15" fill="rgb(207,170,50)" fg:x="977" fg:w="35"/><text x="78.7870%" y="543.50">en..</text></g><g><title>core::iter::adapters::try_process (34 samples, 2.73%)</title><rect x="78.6174%" y="517" width="2.7331%" height="15" fill="rgb(232,133,24)" fg:x="978" fg:w="34"/><text x="78.8674%" y="527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 2.73%)</title><rect x="78.6174%" y="501" width="2.7331%" height="15" fill="rgb(235,166,27)" fg:x="978" fg:w="34"/><text x="78.8674%" y="511.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.65%)</title><rect x="78.6977%" y="485" width="2.6527%" height="15" fill="rgb(209,19,13)" fg:x="979" fg:w="33"/><text x="78.9477%" y="495.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="80.5466%" y="469" width="0.8039%" height="15" fill="rgb(226,79,39)" fg:x="1002" fg:w="10"/><text x="80.7966%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="80.6270%" y="453" width="0.7235%" height="15" fill="rgb(222,163,10)" fg:x="1003" fg:w="9"/><text x="80.8770%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="80.7074%" y="437" width="0.6431%" height="15" fill="rgb(214,44,19)" fg:x="1004" fg:w="8"/><text x="80.9574%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="80.8682%" y="421" width="0.4823%" height="15" fill="rgb(210,217,13)" fg:x="1006" fg:w="6"/><text x="81.1182%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.9486%" y="405" width="0.4019%" height="15" fill="rgb(237,61,54)" fg:x="1007" fg:w="5"/><text x="81.1986%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.2701%" y="389" width="0.0804%" height="15" fill="rgb(226,184,24)" fg:x="1011" fg:w="1"/><text x="81.5201%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.2701%" y="373" width="0.0804%" height="15" fill="rgb(223,226,4)" fg:x="1011" fg:w="1"/><text x="81.5201%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="81.2701%" y="357" width="0.0804%" height="15" fill="rgb(210,26,41)" fg:x="1011" fg:w="1"/><text x="81.5201%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.3505%" y="517" width="0.0804%" height="15" fill="rgb(220,221,6)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3505%" y="501" width="0.0804%" height="15" fill="rgb(225,89,49)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3505%" y="485" width="0.0804%" height="15" fill="rgb(218,70,45)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3505%" y="469" width="0.0804%" height="15" fill="rgb(238,166,21)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3505%" y="453" width="0.0804%" height="15" fill="rgb(224,141,44)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3505%" y="437" width="0.0804%" height="15" fill="rgb(230,12,49)" fg:x="1012" fg:w="1"/><text x="81.6005%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.3505%" y="549" width="0.1608%" height="15" fill="rgb(212,174,12)" fg:x="1012" fg:w="2"/><text x="81.6005%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.3505%" y="533" width="0.1608%" height="15" fill="rgb(246,67,9)" fg:x="1012" fg:w="2"/><text x="81.6005%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.4309%" y="517" width="0.0804%" height="15" fill="rgb(239,35,23)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4309%" y="501" width="0.0804%" height="15" fill="rgb(211,167,0)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4309%" y="485" width="0.0804%" height="15" fill="rgb(225,119,45)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4309%" y="469" width="0.0804%" height="15" fill="rgb(210,162,6)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.4309%" y="453" width="0.0804%" height="15" fill="rgb(208,118,35)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4309%" y="437" width="0.0804%" height="15" fill="rgb(239,4,53)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.4309%" y="421" width="0.0804%" height="15" fill="rgb(213,130,21)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.4309%" y="405" width="0.0804%" height="15" fill="rgb(235,148,0)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.4309%" y="389" width="0.0804%" height="15" fill="rgb(244,224,18)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.4309%" y="373" width="0.0804%" height="15" fill="rgb(211,214,4)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4309%" y="357" width="0.0804%" height="15" fill="rgb(206,119,25)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4309%" y="341" width="0.0804%" height="15" fill="rgb(243,93,47)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.4309%" y="325" width="0.0804%" height="15" fill="rgb(224,194,6)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.4309%" y="309" width="0.0804%" height="15" fill="rgb(243,229,6)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.4309%" y="293" width="0.0804%" height="15" fill="rgb(207,23,50)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.4309%" y="277" width="0.0804%" height="15" fill="rgb(253,192,32)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4309%" y="261" width="0.0804%" height="15" fill="rgb(213,21,6)" fg:x="1013" fg:w="1"/><text x="81.6809%" y="271.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.5113%" y="549" width="0.0804%" height="15" fill="rgb(243,151,13)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5113%" y="533" width="0.0804%" height="15" fill="rgb(233,165,41)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.5113%" y="517" width="0.0804%" height="15" fill="rgb(246,176,45)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.5113%" y="501" width="0.0804%" height="15" fill="rgb(217,170,52)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5113%" y="485" width="0.0804%" height="15" fill="rgb(214,203,54)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.5113%" y="469" width="0.0804%" height="15" fill="rgb(248,215,49)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5113%" y="453" width="0.0804%" height="15" fill="rgb(208,46,10)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5113%" y="437" width="0.0804%" height="15" fill="rgb(254,5,31)" fg:x="1014" fg:w="1"/><text x="81.7613%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5916%" y="469" width="0.0804%" height="15" fill="rgb(222,104,33)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5916%" y="453" width="0.0804%" height="15" fill="rgb(248,49,16)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5916%" y="437" width="0.0804%" height="15" fill="rgb(232,198,41)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5916%" y="421" width="0.0804%" height="15" fill="rgb(214,125,3)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.5916%" y="405" width="0.0804%" height="15" fill="rgb(229,220,28)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.5916%" y="389" width="0.0804%" height="15" fill="rgb(222,64,37)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.5916%" y="373" width="0.0804%" height="15" fill="rgb(249,184,13)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.5916%" y="357" width="0.0804%" height="15" fill="rgb(252,176,6)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5916%" y="341" width="0.0804%" height="15" fill="rgb(228,153,7)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.5916%" y="325" width="0.0804%" height="15" fill="rgb(242,193,5)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.5916%" y="309" width="0.0804%" height="15" fill="rgb(232,140,9)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.5916%" y="293" width="0.0804%" height="15" fill="rgb(213,222,16)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.5916%" y="277" width="0.0804%" height="15" fill="rgb(222,75,50)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.5916%" y="261" width="0.0804%" height="15" fill="rgb(205,180,2)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5916%" y="245" width="0.0804%" height="15" fill="rgb(216,34,7)" fg:x="1015" fg:w="1"/><text x="81.8416%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6720%" y="437" width="0.0804%" height="15" fill="rgb(253,16,32)" fg:x="1016" fg:w="1"/><text x="81.9220%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="81.5916%" y="501" width="0.2412%" height="15" fill="rgb(208,97,28)" fg:x="1015" fg:w="3"/><text x="81.8416%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="81.5916%" y="485" width="0.2412%" height="15" fill="rgb(225,92,11)" fg:x="1015" fg:w="3"/><text x="81.8416%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.6720%" y="469" width="0.1608%" height="15" fill="rgb(243,38,12)" fg:x="1016" fg:w="2"/><text x="81.9220%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.6720%" y="453" width="0.1608%" height="15" fill="rgb(208,139,16)" fg:x="1016" fg:w="2"/><text x="81.9220%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7524%" y="437" width="0.0804%" height="15" fill="rgb(227,24,9)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7524%" y="421" width="0.0804%" height="15" fill="rgb(206,62,11)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7524%" y="405" width="0.0804%" height="15" fill="rgb(228,134,27)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7524%" y="389" width="0.0804%" height="15" fill="rgb(205,55,33)" fg:x="1017" fg:w="1"/><text x="82.0024%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="81.5916%" y="549" width="0.3215%" height="15" fill="rgb(243,75,43)" fg:x="1015" fg:w="4"/><text x="81.8416%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="81.5916%" y="533" width="0.3215%" height="15" fill="rgb(223,27,42)" fg:x="1015" fg:w="4"/><text x="81.8416%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.5916%" y="517" width="0.3215%" height="15" fill="rgb(232,189,33)" fg:x="1015" fg:w="4"/><text x="81.8416%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.8328%" y="501" width="0.0804%" height="15" fill="rgb(210,9,39)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8328%" y="485" width="0.0804%" height="15" fill="rgb(242,85,26)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8328%" y="469" width="0.0804%" height="15" fill="rgb(248,44,4)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8328%" y="453" width="0.0804%" height="15" fill="rgb(250,96,46)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.8328%" y="437" width="0.0804%" height="15" fill="rgb(229,116,26)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8328%" y="421" width="0.0804%" height="15" fill="rgb(246,94,34)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8328%" y="405" width="0.0804%" height="15" fill="rgb(251,73,21)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8328%" y="389" width="0.0804%" height="15" fill="rgb(254,121,25)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.8328%" y="373" width="0.0804%" height="15" fill="rgb(215,161,49)" fg:x="1018" fg:w="1"/><text x="82.0828%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.80%)</title><rect x="81.3505%" y="581" width="0.8039%" height="15" fill="rgb(221,43,13)" fg:x="1012" fg:w="10"/><text x="81.6005%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="81.3505%" y="565" width="0.8039%" height="15" fill="rgb(249,5,37)" fg:x="1012" fg:w="10"/><text x="81.6005%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="81.9132%" y="549" width="0.2412%" height="15" fill="rgb(226,25,44)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="81.9132%" y="533" width="0.2412%" height="15" fill="rgb(238,189,16)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="81.9132%" y="517" width="0.2412%" height="15" fill="rgb(251,186,8)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.9132%" y="501" width="0.2412%" height="15" fill="rgb(254,34,31)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="81.9132%" y="485" width="0.2412%" height="15" fill="rgb(225,215,27)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.9132%" y="469" width="0.2412%" height="15" fill="rgb(221,192,48)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="81.9132%" y="453" width="0.2412%" height="15" fill="rgb(219,137,20)" fg:x="1019" fg:w="3"/><text x="82.1632%" y="463.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.1543%" y="549" width="0.0804%" height="15" fill="rgb(219,84,11)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.1543%" y="533" width="0.0804%" height="15" fill="rgb(224,10,23)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1543%" y="517" width="0.0804%" height="15" fill="rgb(248,22,39)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1543%" y="501" width="0.0804%" height="15" fill="rgb(212,154,20)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.1543%" y="485" width="0.0804%" height="15" fill="rgb(236,199,50)" fg:x="1022" fg:w="1"/><text x="82.4043%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="82.1543%" y="581" width="0.1608%" height="15" fill="rgb(211,9,17)" fg:x="1022" fg:w="2"/><text x="82.4043%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="82.1543%" y="565" width="0.1608%" height="15" fill="rgb(243,216,36)" fg:x="1022" fg:w="2"/><text x="82.4043%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.2347%" y="549" width="0.0804%" height="15" fill="rgb(250,2,10)" fg:x="1023" fg:w="1"/><text x="82.4847%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.2347%" y="533" width="0.0804%" height="15" fill="rgb(226,50,48)" fg:x="1023" fg:w="1"/><text x="82.4847%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2347%" y="517" width="0.0804%" height="15" fill="rgb(243,81,16)" fg:x="1023" fg:w="1"/><text x="82.4847%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="82.3151%" y="581" width="0.0804%" height="15" fill="rgb(250,14,2)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="591.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="82.3151%" y="565" width="0.0804%" height="15" fill="rgb(233,135,29)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="82.3151%" y="549" width="0.0804%" height="15" fill="rgb(224,64,43)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.3151%" y="533" width="0.0804%" height="15" fill="rgb(238,84,13)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.3151%" y="517" width="0.0804%" height="15" fill="rgb(253,48,26)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="82.3151%" y="501" width="0.0804%" height="15" fill="rgb(205,223,31)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="82.3151%" y="485" width="0.0804%" height="15" fill="rgb(221,41,32)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3151%" y="469" width="0.0804%" height="15" fill="rgb(213,158,31)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3151%" y="453" width="0.0804%" height="15" fill="rgb(245,126,43)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3151%" y="437" width="0.0804%" height="15" fill="rgb(227,7,22)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3151%" y="421" width="0.0804%" height="15" fill="rgb(252,90,44)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3151%" y="405" width="0.0804%" height="15" fill="rgb(253,91,0)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3151%" y="389" width="0.0804%" height="15" fill="rgb(252,175,49)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3151%" y="373" width="0.0804%" height="15" fill="rgb(246,150,1)" fg:x="1024" fg:w="1"/><text x="82.5651%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.3955%" y="517" width="0.0804%" height="15" fill="rgb(241,192,25)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.3955%" y="501" width="0.0804%" height="15" fill="rgb(239,187,11)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.3955%" y="485" width="0.0804%" height="15" fill="rgb(218,202,51)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="82.3955%" y="469" width="0.0804%" height="15" fill="rgb(225,176,8)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3955%" y="453" width="0.0804%" height="15" fill="rgb(219,122,41)" fg:x="1025" fg:w="1"/><text x="82.6455%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.3955%" y="533" width="0.1608%" height="15" fill="rgb(248,140,20)" fg:x="1025" fg:w="2"/><text x="82.6455%" y="543.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.4759%" y="517" width="0.0804%" height="15" fill="rgb(245,41,37)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4759%" y="501" width="0.0804%" height="15" fill="rgb(235,82,39)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.4759%" y="485" width="0.0804%" height="15" fill="rgb(230,108,42)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.4759%" y="469" width="0.0804%" height="15" fill="rgb(215,150,50)" fg:x="1026" fg:w="1"/><text x="82.7259%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="82.5563%" y="485" width="0.0804%" height="15" fill="rgb(233,212,5)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5563%" y="469" width="0.0804%" height="15" fill="rgb(245,80,22)" fg:x="1027" fg:w="1"/><text x="82.8063%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="82.3955%" y="549" width="0.3215%" height="15" fill="rgb(238,129,16)" fg:x="1025" fg:w="4"/><text x="82.6455%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="82.5563%" y="533" width="0.1608%" height="15" fill="rgb(240,19,0)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="82.5563%" y="517" width="0.1608%" height="15" fill="rgb(232,42,35)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.5563%" y="501" width="0.1608%" height="15" fill="rgb(223,130,24)" fg:x="1027" fg:w="2"/><text x="82.8063%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6367%" y="485" width="0.0804%" height="15" fill="rgb(237,16,22)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6367%" y="469" width="0.0804%" height="15" fill="rgb(248,192,20)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6367%" y="453" width="0.0804%" height="15" fill="rgb(233,167,2)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6367%" y="437" width="0.0804%" height="15" fill="rgb(252,71,44)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6367%" y="421" width="0.0804%" height="15" fill="rgb(238,37,47)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6367%" y="405" width="0.0804%" height="15" fill="rgb(214,202,54)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.6367%" y="389" width="0.0804%" height="15" fill="rgb(254,165,40)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.6367%" y="373" width="0.0804%" height="15" fill="rgb(246,173,38)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.6367%" y="357" width="0.0804%" height="15" fill="rgb(215,3,27)" fg:x="1028" fg:w="1"/><text x="82.8867%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="82.3955%" y="565" width="0.4019%" height="15" fill="rgb(239,169,51)" fg:x="1025" fg:w="5"/><text x="82.6455%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.7170%" y="549" width="0.0804%" height="15" fill="rgb(212,5,25)" fg:x="1029" fg:w="1"/><text x="82.9670%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.7170%" y="533" width="0.0804%" height="15" fill="rgb(243,45,17)" fg:x="1029" fg:w="1"/><text x="82.9670%" y="543.50"></text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.56%)</title><rect x="82.3955%" y="581" width="0.5627%" height="15" fill="rgb(242,97,9)" fg:x="1025" fg:w="7"/><text x="82.6455%" y="591.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="82.7974%" y="565" width="0.1608%" height="15" fill="rgb(228,71,31)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="575.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="82.7974%" y="549" width="0.1608%" height="15" fill="rgb(252,184,16)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="82.7974%" y="533" width="0.1608%" height="15" fill="rgb(236,169,46)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="82.7974%" y="517" width="0.1608%" height="15" fill="rgb(207,17,47)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.7974%" y="501" width="0.1608%" height="15" fill="rgb(206,201,28)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.7974%" y="485" width="0.1608%" height="15" fill="rgb(224,184,23)" fg:x="1030" fg:w="2"/><text x="83.0474%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.8778%" y="469" width="0.0804%" height="15" fill="rgb(208,139,48)" fg:x="1031" fg:w="1"/><text x="83.1278%" y="479.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="82.9582%" y="533" width="0.0804%" height="15" fill="rgb(208,130,10)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.9582%" y="517" width="0.0804%" height="15" fill="rgb(211,213,45)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9582%" y="501" width="0.0804%" height="15" fill="rgb(235,100,30)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="511.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9582%" y="485" width="0.0804%" height="15" fill="rgb(206,144,31)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9582%" y="469" width="0.0804%" height="15" fill="rgb(224,200,26)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.9582%" y="453" width="0.0804%" height="15" fill="rgb(247,104,53)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9582%" y="437" width="0.0804%" height="15" fill="rgb(220,14,17)" fg:x="1032" fg:w="1"/><text x="83.2082%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.0386%" y="485" width="0.0804%" height="15" fill="rgb(230,140,40)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.0386%" y="469" width="0.0804%" height="15" fill="rgb(229,2,41)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0386%" y="453" width="0.0804%" height="15" fill="rgb(232,89,16)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.0386%" y="437" width="0.0804%" height="15" fill="rgb(247,59,52)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.0386%" y="421" width="0.0804%" height="15" fill="rgb(226,110,21)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0386%" y="405" width="0.0804%" height="15" fill="rgb(224,176,43)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.0386%" y="389" width="0.0804%" height="15" fill="rgb(221,73,6)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0386%" y="373" width="0.0804%" height="15" fill="rgb(232,78,19)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0386%" y="357" width="0.0804%" height="15" fill="rgb(233,112,48)" fg:x="1033" fg:w="1"/><text x="83.2886%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.0386%" y="517" width="0.1608%" height="15" fill="rgb(243,131,47)" fg:x="1033" fg:w="2"/><text x="83.2886%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="83.0386%" y="501" width="0.1608%" height="15" fill="rgb(226,51,1)" fg:x="1033" fg:w="2"/><text x="83.2886%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1190%" y="485" width="0.0804%" height="15" fill="rgb(247,58,7)" fg:x="1034" fg:w="1"/><text x="83.3690%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1190%" y="469" width="0.0804%" height="15" fill="rgb(209,7,32)" fg:x="1034" fg:w="1"/><text x="83.3690%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="83.0386%" y="533" width="0.2412%" height="15" fill="rgb(209,39,41)" fg:x="1033" fg:w="3"/><text x="83.2886%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1994%" y="517" width="0.0804%" height="15" fill="rgb(226,182,46)" fg:x="1035" fg:w="1"/><text x="83.4494%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1994%" y="501" width="0.0804%" height="15" fill="rgb(230,219,10)" fg:x="1035" fg:w="1"/><text x="83.4494%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1994%" y="485" width="0.0804%" height="15" fill="rgb(227,175,30)" fg:x="1035" fg:w="1"/><text x="83.4494%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1994%" y="469" width="0.0804%" height="15" fill="rgb(217,2,50)" fg:x="1035" fg:w="1"/><text x="83.4494%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.1994%" y="453" width="0.0804%" height="15" fill="rgb(229,160,0)" fg:x="1035" fg:w="1"/><text x="83.4494%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.2797%" y="517" width="0.1608%" height="15" fill="rgb(207,78,37)" fg:x="1036" fg:w="2"/><text x="83.5297%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.2797%" y="501" width="0.1608%" height="15" fill="rgb(225,57,0)" fg:x="1036" fg:w="2"/><text x="83.5297%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3601%" y="485" width="0.0804%" height="15" fill="rgb(232,154,2)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3601%" y="469" width="0.0804%" height="15" fill="rgb(241,212,25)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.3601%" y="453" width="0.0804%" height="15" fill="rgb(226,69,20)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3601%" y="437" width="0.0804%" height="15" fill="rgb(247,184,54)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.3601%" y="421" width="0.0804%" height="15" fill="rgb(210,145,0)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.3601%" y="405" width="0.0804%" height="15" fill="rgb(253,82,12)" fg:x="1037" fg:w="1"/><text x="83.6101%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4405%" y="485" width="0.1608%" height="15" fill="rgb(245,42,11)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.4405%" y="469" width="0.1608%" height="15" fill="rgb(219,147,32)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4405%" y="453" width="0.1608%" height="15" fill="rgb(246,12,7)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4405%" y="437" width="0.1608%" height="15" fill="rgb(243,50,9)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.4405%" y="421" width="0.1608%" height="15" fill="rgb(219,149,6)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.4405%" y="405" width="0.1608%" height="15" fill="rgb(241,51,42)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.4405%" y="389" width="0.1608%" height="15" fill="rgb(226,128,27)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.4405%" y="373" width="0.1608%" height="15" fill="rgb(244,144,4)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.4405%" y="357" width="0.1608%" height="15" fill="rgb(221,4,13)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="83.4405%" y="341" width="0.1608%" height="15" fill="rgb(208,170,28)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="83.4405%" y="325" width="0.1608%" height="15" fill="rgb(226,131,13)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="83.4405%" y="309" width="0.1608%" height="15" fill="rgb(215,72,41)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="83.4405%" y="293" width="0.1608%" height="15" fill="rgb(243,108,20)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.4405%" y="277" width="0.1608%" height="15" fill="rgb(230,189,17)" fg:x="1038" fg:w="2"/><text x="83.6905%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.6013%" y="485" width="0.0804%" height="15" fill="rgb(220,50,17)" fg:x="1040" fg:w="1"/><text x="83.8513%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="83.2797%" y="533" width="0.4823%" height="15" fill="rgb(248,152,48)" fg:x="1036" fg:w="6"/><text x="83.5297%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="83.4405%" y="517" width="0.3215%" height="15" fill="rgb(244,91,11)" fg:x="1038" fg:w="4"/><text x="83.6905%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="83.4405%" y="501" width="0.3215%" height="15" fill="rgb(220,157,5)" fg:x="1038" fg:w="4"/><text x="83.6905%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6817%" y="485" width="0.0804%" height="15" fill="rgb(253,137,8)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6817%" y="469" width="0.0804%" height="15" fill="rgb(217,137,51)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.6817%" y="453" width="0.0804%" height="15" fill="rgb(218,209,53)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6817%" y="437" width="0.0804%" height="15" fill="rgb(249,137,25)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6817%" y="421" width="0.0804%" height="15" fill="rgb(239,155,26)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6817%" y="405" width="0.0804%" height="15" fill="rgb(227,85,46)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.6817%" y="389" width="0.0804%" height="15" fill="rgb(251,107,43)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6817%" y="373" width="0.0804%" height="15" fill="rgb(234,170,33)" fg:x="1041" fg:w="1"/><text x="83.9317%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (78 samples, 6.27%)</title><rect x="77.5723%" y="597" width="6.2701%" height="15" fill="rgb(206,29,35)" fg:x="965" fg:w="78"/><text x="77.8223%" y="607.50">plugins_..</text></g><g><title>plugins_core::build::Build::wearing (11 samples, 0.88%)</title><rect x="82.9582%" y="581" width="0.8842%" height="15" fill="rgb(227,138,25)" fg:x="1032" fg:w="11"/><text x="83.2082%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="82.9582%" y="565" width="0.8842%" height="15" fill="rgb(249,131,35)" fg:x="1032" fg:w="11"/><text x="83.2082%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="82.9582%" y="549" width="0.8842%" height="15" fill="rgb(239,6,40)" fg:x="1032" fg:w="11"/><text x="83.2082%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="83.7621%" y="533" width="0.0804%" height="15" fill="rgb(246,136,47)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.7621%" y="517" width="0.0804%" height="15" fill="rgb(253,58,26)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.7621%" y="501" width="0.0804%" height="15" fill="rgb(237,141,10)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.7621%" y="485" width="0.0804%" height="15" fill="rgb(234,156,12)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.7621%" y="469" width="0.0804%" height="15" fill="rgb(243,224,36)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.7621%" y="453" width="0.0804%" height="15" fill="rgb(205,229,51)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.7621%" y="437" width="0.0804%" height="15" fill="rgb(223,189,4)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.7621%" y="421" width="0.0804%" height="15" fill="rgb(249,167,54)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.7621%" y="405" width="0.0804%" height="15" fill="rgb(218,34,28)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.7621%" y="389" width="0.0804%" height="15" fill="rgb(232,109,42)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.7621%" y="373" width="0.0804%" height="15" fill="rgb(248,214,46)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.7621%" y="357" width="0.0804%" height="15" fill="rgb(244,216,40)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="83.7621%" y="341" width="0.0804%" height="15" fill="rgb(231,226,31)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7621%" y="325" width="0.0804%" height="15" fill="rgb(238,38,43)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="83.7621%" y="309" width="0.0804%" height="15" fill="rgb(208,88,43)" fg:x="1042" fg:w="1"/><text x="84.0121%" y="319.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="83.8424%" y="597" width="0.0804%" height="15" fill="rgb(205,136,37)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="607.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="83.8424%" y="581" width="0.0804%" height="15" fill="rgb(237,34,14)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="591.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="83.8424%" y="565" width="0.0804%" height="15" fill="rgb(236,193,44)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="83.8424%" y="549" width="0.0804%" height="15" fill="rgb(231,48,10)" fg:x="1043" fg:w="1"/><text x="84.0924%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="84.0032%" y="517" width="0.0804%" height="15" fill="rgb(213,141,34)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="84.0032%" y="501" width="0.0804%" height="15" fill="rgb(249,130,34)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.0032%" y="485" width="0.0804%" height="15" fill="rgb(219,42,41)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0032%" y="469" width="0.0804%" height="15" fill="rgb(224,100,54)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0032%" y="453" width="0.0804%" height="15" fill="rgb(229,200,27)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0032%" y="437" width="0.0804%" height="15" fill="rgb(217,118,10)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0032%" y="421" width="0.0804%" height="15" fill="rgb(206,22,3)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.0032%" y="405" width="0.0804%" height="15" fill="rgb(232,163,46)" fg:x="1045" fg:w="1"/><text x="84.2532%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="84.0032%" y="533" width="0.1608%" height="15" fill="rgb(206,95,13)" fg:x="1045" fg:w="2"/><text x="84.2532%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0836%" y="517" width="0.0804%" height="15" fill="rgb(253,154,18)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.0836%" y="501" width="0.0804%" height="15" fill="rgb(219,32,23)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.0836%" y="485" width="0.0804%" height="15" fill="rgb(230,191,45)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="84.0836%" y="469" width="0.0804%" height="15" fill="rgb(229,64,36)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.0836%" y="453" width="0.0804%" height="15" fill="rgb(205,129,25)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0836%" y="437" width="0.0804%" height="15" fill="rgb(254,112,7)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0836%" y="421" width="0.0804%" height="15" fill="rgb(226,53,48)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0836%" y="405" width="0.0804%" height="15" fill="rgb(214,153,38)" fg:x="1046" fg:w="1"/><text x="84.3336%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.1640%" y="517" width="0.0804%" height="15" fill="rgb(243,101,7)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1640%" y="501" width="0.0804%" height="15" fill="rgb(240,140,22)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1640%" y="485" width="0.0804%" height="15" fill="rgb(235,114,2)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1640%" y="469" width="0.0804%" height="15" fill="rgb(242,59,12)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.1640%" y="453" width="0.0804%" height="15" fill="rgb(252,134,9)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1640%" y="437" width="0.0804%" height="15" fill="rgb(236,4,44)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.1640%" y="421" width="0.0804%" height="15" fill="rgb(254,172,41)" fg:x="1047" fg:w="1"/><text x="84.4140%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="83.9228%" y="597" width="0.4019%" height="15" fill="rgb(244,63,20)" fg:x="1044" fg:w="5"/><text x="84.1728%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="83.9228%" y="581" width="0.4019%" height="15" fill="rgb(250,73,31)" fg:x="1044" fg:w="5"/><text x="84.1728%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="83.9228%" y="565" width="0.4019%" height="15" fill="rgb(241,38,36)" fg:x="1044" fg:w="5"/><text x="84.1728%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.9228%" y="549" width="0.4019%" height="15" fill="rgb(245,211,2)" fg:x="1044" fg:w="5"/><text x="84.1728%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="84.1640%" y="533" width="0.1608%" height="15" fill="rgb(206,120,28)" fg:x="1047" fg:w="2"/><text x="84.4140%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.2444%" y="517" width="0.0804%" height="15" fill="rgb(211,59,34)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.2444%" y="501" width="0.0804%" height="15" fill="rgb(233,168,5)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2444%" y="485" width="0.0804%" height="15" fill="rgb(234,33,13)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2444%" y="469" width="0.0804%" height="15" fill="rgb(231,150,26)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2444%" y="453" width="0.0804%" height="15" fill="rgb(217,191,4)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2444%" y="437" width="0.0804%" height="15" fill="rgb(246,198,38)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2444%" y="421" width="0.0804%" height="15" fill="rgb(245,64,37)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2444%" y="405" width="0.0804%" height="15" fill="rgb(250,30,36)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2444%" y="389" width="0.0804%" height="15" fill="rgb(217,86,53)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2444%" y="373" width="0.0804%" height="15" fill="rgb(228,157,16)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2444%" y="357" width="0.0804%" height="15" fill="rgb(217,59,31)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.2444%" y="341" width="0.0804%" height="15" fill="rgb(237,138,41)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.2444%" y="325" width="0.0804%" height="15" fill="rgb(227,91,49)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.2444%" y="309" width="0.0804%" height="15" fill="rgb(247,21,44)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.2444%" y="293" width="0.0804%" height="15" fill="rgb(219,210,51)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2444%" y="277" width="0.0804%" height="15" fill="rgb(209,140,6)" fg:x="1048" fg:w="1"/><text x="84.4944%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.3248%" y="581" width="0.0804%" height="15" fill="rgb(221,188,24)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.3248%" y="565" width="0.0804%" height="15" fill="rgb(232,154,20)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.3248%" y="549" width="0.0804%" height="15" fill="rgb(244,137,50)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3248%" y="533" width="0.0804%" height="15" fill="rgb(225,185,43)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3248%" y="517" width="0.0804%" height="15" fill="rgb(213,205,38)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.3248%" y="501" width="0.0804%" height="15" fill="rgb(236,73,12)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3248%" y="485" width="0.0804%" height="15" fill="rgb(235,219,13)" fg:x="1049" fg:w="1"/><text x="84.5748%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.4051%" y="549" width="0.1608%" height="15" fill="rgb(218,59,36)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4051%" y="533" width="0.1608%" height="15" fill="rgb(205,110,39)" fg:x="1050" fg:w="2"/><text x="84.6551%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.4855%" y="517" width="0.0804%" height="15" fill="rgb(218,206,42)" fg:x="1051" fg:w="1"/><text x="84.7355%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4855%" y="501" width="0.0804%" height="15" fill="rgb(248,125,24)" fg:x="1051" fg:w="1"/><text x="84.7355%" y="511.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.5659%" y="501" width="0.0804%" height="15" fill="rgb(242,28,27)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.5659%" y="485" width="0.0804%" height="15" fill="rgb(216,228,15)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5659%" y="469" width="0.0804%" height="15" fill="rgb(235,116,46)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.5659%" y="453" width="0.0804%" height="15" fill="rgb(224,18,32)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.5659%" y="437" width="0.0804%" height="15" fill="rgb(252,5,12)" fg:x="1052" fg:w="1"/><text x="84.8159%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.5659%" y="533" width="0.1608%" height="15" fill="rgb(251,36,5)" fg:x="1052" fg:w="2"/><text x="84.8159%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.5659%" y="517" width="0.1608%" height="15" fill="rgb(217,53,14)" fg:x="1052" fg:w="2"/><text x="84.8159%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6463%" y="501" width="0.0804%" height="15" fill="rgb(215,86,45)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6463%" y="485" width="0.0804%" height="15" fill="rgb(242,169,11)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.6463%" y="469" width="0.0804%" height="15" fill="rgb(211,213,45)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6463%" y="453" width="0.0804%" height="15" fill="rgb(205,88,11)" fg:x="1053" fg:w="1"/><text x="84.8963%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="84.5659%" y="549" width="0.2412%" height="15" fill="rgb(252,69,26)" fg:x="1052" fg:w="3"/><text x="84.8159%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7267%" y="533" width="0.0804%" height="15" fill="rgb(246,123,37)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7267%" y="517" width="0.0804%" height="15" fill="rgb(212,205,5)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.7267%" y="501" width="0.0804%" height="15" fill="rgb(253,148,0)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.7267%" y="485" width="0.0804%" height="15" fill="rgb(239,22,4)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7267%" y="469" width="0.0804%" height="15" fill="rgb(226,26,53)" fg:x="1054" fg:w="1"/><text x="84.9767%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8071%" y="517" width="0.0804%" height="15" fill="rgb(225,229,45)" fg:x="1055" fg:w="1"/><text x="85.0571%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8875%" y="437" width="0.0804%" height="15" fill="rgb(220,60,37)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8875%" y="421" width="0.0804%" height="15" fill="rgb(217,180,35)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8875%" y="405" width="0.0804%" height="15" fill="rgb(229,7,53)" fg:x="1056" fg:w="1"/><text x="85.1375%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9678%" y="405" width="0.0804%" height="15" fill="rgb(254,137,3)" fg:x="1057" fg:w="1"/><text x="85.2178%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (9 samples, 0.72%)</title><rect x="84.4051%" y="581" width="0.7235%" height="15" fill="rgb(215,140,41)" fg:x="1050" fg:w="9"/><text x="84.6551%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="84.4051%" y="565" width="0.7235%" height="15" fill="rgb(250,80,15)" fg:x="1050" fg:w="9"/><text x="84.6551%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="84.8071%" y="549" width="0.3215%" height="15" fill="rgb(252,191,6)" fg:x="1055" fg:w="4"/><text x="85.0571%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="84.8071%" y="533" width="0.3215%" height="15" fill="rgb(246,217,18)" fg:x="1055" fg:w="4"/><text x="85.0571%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="84.8875%" y="517" width="0.2412%" height="15" fill="rgb(223,93,7)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="84.8875%" y="501" width="0.2412%" height="15" fill="rgb(225,55,52)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.8875%" y="485" width="0.2412%" height="15" fill="rgb(240,31,24)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="84.8875%" y="469" width="0.2412%" height="15" fill="rgb(205,56,52)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.8875%" y="453" width="0.2412%" height="15" fill="rgb(246,146,12)" fg:x="1056" fg:w="3"/><text x="85.1375%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.9678%" y="437" width="0.1608%" height="15" fill="rgb(239,84,36)" fg:x="1057" fg:w="2"/><text x="85.2178%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.9678%" y="421" width="0.1608%" height="15" fill="rgb(207,41,40)" fg:x="1057" fg:w="2"/><text x="85.2178%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0482%" y="405" width="0.0804%" height="15" fill="rgb(241,179,25)" fg:x="1058" fg:w="1"/><text x="85.2982%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0482%" y="389" width="0.0804%" height="15" fill="rgb(210,0,34)" fg:x="1058" fg:w="1"/><text x="85.2982%" y="399.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (147 samples, 11.82%)</title><rect x="73.3923%" y="613" width="11.8167%" height="15" fill="rgb(225,217,29)" fg:x="913" fg:w="147"/><text x="73.6423%" y="623.50">&lt;tests::HoldingKey..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (11 samples, 0.88%)</title><rect x="84.3248%" y="597" width="0.8842%" height="15" fill="rgb(216,191,38)" fg:x="1049" fg:w="11"/><text x="84.5748%" y="607.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="85.1286%" y="581" width="0.0804%" height="15" fill="rgb(232,140,52)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="591.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.1286%" y="565" width="0.0804%" height="15" fill="rgb(223,158,51)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.1286%" y="549" width="0.0804%" height="15" fill="rgb(235,29,51)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.1286%" y="533" width="0.0804%" height="15" fill="rgb(215,181,18)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.1286%" y="517" width="0.0804%" height="15" fill="rgb(227,125,34)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.1286%" y="501" width="0.0804%" height="15" fill="rgb(230,197,49)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.1286%" y="485" width="0.0804%" height="15" fill="rgb(239,141,16)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1286%" y="469" width="0.0804%" height="15" fill="rgb(225,105,43)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1286%" y="453" width="0.0804%" height="15" fill="rgb(214,131,14)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.1286%" y="437" width="0.0804%" height="15" fill="rgb(229,177,11)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.1286%" y="421" width="0.0804%" height="15" fill="rgb(231,180,14)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.1286%" y="405" width="0.0804%" height="15" fill="rgb(232,88,2)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.1286%" y="389" width="0.0804%" height="15" fill="rgb(205,220,8)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.1286%" y="373" width="0.0804%" height="15" fill="rgb(225,23,53)" fg:x="1059" fg:w="1"/><text x="85.3786%" y="383.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.2090%" y="597" width="0.0804%" height="15" fill="rgb(213,62,29)" fg:x="1060" fg:w="1"/><text x="85.4590%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2090%" y="581" width="0.0804%" height="15" fill="rgb(227,75,7)" fg:x="1060" fg:w="1"/><text x="85.4590%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.2894%" y="597" width="0.0804%" height="15" fill="rgb(207,105,14)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.2894%" y="581" width="0.0804%" height="15" fill="rgb(245,62,29)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.2894%" y="565" width="0.0804%" height="15" fill="rgb(236,202,4)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.2894%" y="549" width="0.0804%" height="15" fill="rgb(250,67,1)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.2894%" y="533" width="0.0804%" height="15" fill="rgb(253,115,44)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="85.2894%" y="517" width="0.0804%" height="15" fill="rgb(251,139,18)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="527.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="85.2894%" y="501" width="0.0804%" height="15" fill="rgb(218,22,32)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.2894%" y="485" width="0.0804%" height="15" fill="rgb(243,53,5)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.2894%" y="469" width="0.0804%" height="15" fill="rgb(227,56,16)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.2894%" y="453" width="0.0804%" height="15" fill="rgb(245,53,0)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.2894%" y="437" width="0.0804%" height="15" fill="rgb(216,170,35)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.2894%" y="421" width="0.0804%" height="15" fill="rgb(211,200,8)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.2894%" y="405" width="0.0804%" height="15" fill="rgb(228,204,44)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.2894%" y="389" width="0.0804%" height="15" fill="rgb(214,121,17)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.2894%" y="373" width="0.0804%" height="15" fill="rgb(233,64,38)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.2894%" y="357" width="0.0804%" height="15" fill="rgb(253,54,19)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.2894%" y="341" width="0.0804%" height="15" fill="rgb(253,94,18)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.2894%" y="325" width="0.0804%" height="15" fill="rgb(227,57,52)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.2894%" y="309" width="0.0804%" height="15" fill="rgb(230,228,50)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="85.2894%" y="293" width="0.0804%" height="15" fill="rgb(217,205,27)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.2894%" y="277" width="0.0804%" height="15" fill="rgb(252,71,50)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="85.2894%" y="261" width="0.0804%" height="15" fill="rgb(209,86,4)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="85.2894%" y="245" width="0.0804%" height="15" fill="rgb(229,94,0)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="85.2894%" y="229" width="0.0804%" height="15" fill="rgb(252,223,21)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.2894%" y="213" width="0.0804%" height="15" fill="rgb(230,210,4)" fg:x="1061" fg:w="1"/><text x="85.5394%" y="223.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="85.5305%" y="533" width="0.0804%" height="15" fill="rgb(240,149,38)" fg:x="1064" fg:w="1"/><text x="85.7805%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="85.6109%" y="501" width="0.1608%" height="15" fill="rgb(254,105,20)" fg:x="1065" fg:w="2"/><text x="85.8609%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.6109%" y="485" width="0.1608%" height="15" fill="rgb(253,87,46)" fg:x="1065" fg:w="2"/><text x="85.8609%" y="495.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.6109%" y="469" width="0.1608%" height="15" fill="rgb(253,116,33)" fg:x="1065" fg:w="2"/><text x="85.8609%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="85.7717%" y="485" width="0.3215%" height="15" fill="rgb(229,198,5)" fg:x="1067" fg:w="4"/><text x="86.0217%" y="495.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.8521%" y="469" width="0.2412%" height="15" fill="rgb(242,38,37)" fg:x="1068" fg:w="3"/><text x="86.1021%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.9325%" y="453" width="0.1608%" height="15" fill="rgb(242,69,53)" fg:x="1069" fg:w="2"/><text x="86.1825%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.0129%" y="437" width="0.0804%" height="15" fill="rgb(249,80,16)" fg:x="1070" fg:w="1"/><text x="86.2629%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.0932%" y="437" width="0.0804%" height="15" fill="rgb(206,128,11)" fg:x="1071" fg:w="1"/><text x="86.3432%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.0932%" y="469" width="0.1608%" height="15" fill="rgb(212,35,20)" fg:x="1071" fg:w="2"/><text x="86.3432%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="86.0932%" y="453" width="0.1608%" height="15" fill="rgb(236,79,13)" fg:x="1071" fg:w="2"/><text x="86.3432%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.1736%" y="437" width="0.0804%" height="15" fill="rgb(233,123,3)" fg:x="1072" fg:w="1"/><text x="86.4236%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.1736%" y="421" width="0.0804%" height="15" fill="rgb(214,93,52)" fg:x="1072" fg:w="1"/><text x="86.4236%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.2540%" y="469" width="0.1608%" height="15" fill="rgb(251,37,40)" fg:x="1073" fg:w="2"/><text x="86.5040%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.3344%" y="453" width="0.0804%" height="15" fill="rgb(227,80,54)" fg:x="1074" fg:w="1"/><text x="86.5844%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.3344%" y="437" width="0.0804%" height="15" fill="rgb(254,48,11)" fg:x="1074" fg:w="1"/><text x="86.5844%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.4952%" y="453" width="0.0804%" height="15" fill="rgb(235,193,26)" fg:x="1076" fg:w="1"/><text x="86.7452%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.4952%" y="437" width="0.0804%" height="15" fill="rgb(229,99,21)" fg:x="1076" fg:w="1"/><text x="86.7452%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.4952%" y="421" width="0.0804%" height="15" fill="rgb(211,140,41)" fg:x="1076" fg:w="1"/><text x="86.7452%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="86.5756%" y="437" width="0.1608%" height="15" fill="rgb(240,227,30)" fg:x="1077" fg:w="2"/><text x="86.8256%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.6559%" y="421" width="0.0804%" height="15" fill="rgb(215,224,45)" fg:x="1078" fg:w="1"/><text x="86.9059%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.6559%" y="405" width="0.0804%" height="15" fill="rgb(206,123,31)" fg:x="1078" fg:w="1"/><text x="86.9059%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="86.7363%" y="437" width="0.0804%" height="15" fill="rgb(210,138,16)" fg:x="1079" fg:w="1"/><text x="86.9863%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="86.7363%" y="421" width="0.0804%" height="15" fill="rgb(228,57,28)" fg:x="1079" fg:w="1"/><text x="86.9863%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="86.0932%" y="485" width="0.8039%" height="15" fill="rgb(242,170,10)" fg:x="1071" fg:w="10"/><text x="86.3432%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="86.4148%" y="469" width="0.4823%" height="15" fill="rgb(228,214,39)" fg:x="1075" fg:w="6"/><text x="86.6648%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="86.5756%" y="453" width="0.3215%" height="15" fill="rgb(218,179,33)" fg:x="1077" fg:w="4"/><text x="86.8256%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8167%" y="437" width="0.0804%" height="15" fill="rgb(235,193,39)" fg:x="1080" fg:w="1"/><text x="87.0667%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8167%" y="421" width="0.0804%" height="15" fill="rgb(219,221,36)" fg:x="1080" fg:w="1"/><text x="87.0667%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.8167%" y="405" width="0.0804%" height="15" fill="rgb(248,218,19)" fg:x="1080" fg:w="1"/><text x="87.0667%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="85.7717%" y="501" width="1.2058%" height="15" fill="rgb(205,50,9)" fg:x="1067" fg:w="15"/><text x="86.0217%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.8971%" y="485" width="0.0804%" height="15" fill="rgb(238,81,28)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.8971%" y="469" width="0.0804%" height="15" fill="rgb(235,110,19)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.8971%" y="453" width="0.0804%" height="15" fill="rgb(214,7,14)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.8971%" y="437" width="0.0804%" height="15" fill="rgb(211,77,3)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.8971%" y="421" width="0.0804%" height="15" fill="rgb(229,5,9)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.8971%" y="405" width="0.0804%" height="15" fill="rgb(225,90,11)" fg:x="1081" fg:w="1"/><text x="87.1471%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.45%)</title><rect x="85.6109%" y="517" width="1.4469%" height="15" fill="rgb(242,56,8)" fg:x="1065" fg:w="18"/><text x="85.8609%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="86.9775%" y="501" width="0.0804%" height="15" fill="rgb(249,212,39)" fg:x="1082" fg:w="1"/><text x="87.2275%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="86.9775%" y="485" width="0.0804%" height="15" fill="rgb(236,90,9)" fg:x="1082" fg:w="1"/><text x="87.2275%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.9775%" y="469" width="0.0804%" height="15" fill="rgb(206,88,35)" fg:x="1082" fg:w="1"/><text x="87.2275%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.9775%" y="453" width="0.0804%" height="15" fill="rgb(205,126,30)" fg:x="1082" fg:w="1"/><text x="87.2275%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0579%" y="453" width="0.0804%" height="15" fill="rgb(230,176,12)" fg:x="1083" fg:w="1"/><text x="87.3079%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0579%" y="437" width="0.0804%" height="15" fill="rgb(243,19,9)" fg:x="1083" fg:w="1"/><text x="87.3079%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.1383%" y="437" width="0.0804%" height="15" fill="rgb(245,171,17)" fg:x="1084" fg:w="1"/><text x="87.3883%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.0579%" y="517" width="0.2412%" height="15" fill="rgb(227,52,21)" fg:x="1083" fg:w="3"/><text x="87.3079%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="87.0579%" y="501" width="0.2412%" height="15" fill="rgb(238,69,14)" fg:x="1083" fg:w="3"/><text x="87.3079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.0579%" y="485" width="0.2412%" height="15" fill="rgb(241,156,39)" fg:x="1083" fg:w="3"/><text x="87.3079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="87.0579%" y="469" width="0.2412%" height="15" fill="rgb(212,227,28)" fg:x="1083" fg:w="3"/><text x="87.3079%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.1383%" y="453" width="0.1608%" height="15" fill="rgb(209,118,27)" fg:x="1084" fg:w="2"/><text x="87.3883%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.2186%" y="437" width="0.0804%" height="15" fill="rgb(226,102,5)" fg:x="1085" fg:w="1"/><text x="87.4686%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.2186%" y="421" width="0.0804%" height="15" fill="rgb(223,34,3)" fg:x="1085" fg:w="1"/><text x="87.4686%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2990%" y="453" width="0.0804%" height="15" fill="rgb(221,81,38)" fg:x="1086" fg:w="1"/><text x="87.5490%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.3794%" y="453" width="0.0804%" height="15" fill="rgb(236,219,28)" fg:x="1087" fg:w="1"/><text x="87.6294%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3794%" y="437" width="0.0804%" height="15" fill="rgb(213,200,14)" fg:x="1087" fg:w="1"/><text x="87.6294%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.4598%" y="437" width="0.0804%" height="15" fill="rgb(240,33,19)" fg:x="1088" fg:w="1"/><text x="87.7098%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.5402%" y="421" width="0.1608%" height="15" fill="rgb(233,113,27)" fg:x="1089" fg:w="2"/><text x="87.7902%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="87.7010%" y="421" width="0.1608%" height="15" fill="rgb(220,221,18)" fg:x="1091" fg:w="2"/><text x="87.9510%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="87.7010%" y="405" width="0.1608%" height="15" fill="rgb(238,92,8)" fg:x="1091" fg:w="2"/><text x="87.9510%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.8617%" y="405" width="0.0804%" height="15" fill="rgb(222,164,16)" fg:x="1093" fg:w="1"/><text x="88.1117%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8617%" y="389" width="0.0804%" height="15" fill="rgb(241,119,3)" fg:x="1093" fg:w="1"/><text x="88.1117%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.9421%" y="405" width="0.0804%" height="15" fill="rgb(241,44,8)" fg:x="1094" fg:w="1"/><text x="88.1921%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.9421%" y="389" width="0.0804%" height="15" fill="rgb(230,36,40)" fg:x="1094" fg:w="1"/><text x="88.1921%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9421%" y="373" width="0.0804%" height="15" fill="rgb(243,16,36)" fg:x="1094" fg:w="1"/><text x="88.1921%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="87.2990%" y="485" width="0.8842%" height="15" fill="rgb(231,4,26)" fg:x="1086" fg:w="11"/><text x="87.5490%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="87.2990%" y="469" width="0.8842%" height="15" fill="rgb(240,9,31)" fg:x="1086" fg:w="11"/><text x="87.5490%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="87.4598%" y="453" width="0.7235%" height="15" fill="rgb(207,173,15)" fg:x="1088" fg:w="9"/><text x="87.7098%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="87.5402%" y="437" width="0.6431%" height="15" fill="rgb(224,192,53)" fg:x="1089" fg:w="8"/><text x="87.7902%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="87.8617%" y="421" width="0.3215%" height="15" fill="rgb(223,67,28)" fg:x="1093" fg:w="4"/><text x="88.1117%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.0225%" y="405" width="0.1608%" height="15" fill="rgb(211,20,47)" fg:x="1095" fg:w="2"/><text x="88.2725%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="88.0225%" y="389" width="0.1608%" height="15" fill="rgb(240,228,2)" fg:x="1095" fg:w="2"/><text x="88.2725%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="88.1833%" y="469" width="0.3215%" height="15" fill="rgb(248,151,12)" fg:x="1097" fg:w="4"/><text x="88.4333%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="88.1833%" y="453" width="0.3215%" height="15" fill="rgb(244,8,39)" fg:x="1097" fg:w="4"/><text x="88.4333%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="88.1833%" y="437" width="0.3215%" height="15" fill="rgb(222,26,8)" fg:x="1097" fg:w="4"/><text x="88.4333%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="88.3441%" y="421" width="0.1608%" height="15" fill="rgb(213,106,44)" fg:x="1099" fg:w="2"/><text x="88.5941%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="88.4244%" y="405" width="0.0804%" height="15" fill="rgb(214,129,20)" fg:x="1100" fg:w="1"/><text x="88.6744%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (16 samples, 1.29%)</title><rect x="87.2990%" y="501" width="1.2862%" height="15" fill="rgb(212,32,13)" fg:x="1086" fg:w="16"/><text x="87.5490%" y="511.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="88.1833%" y="485" width="0.4019%" height="15" fill="rgb(208,168,33)" fg:x="1097" fg:w="5"/><text x="88.4333%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="88.5048%" y="469" width="0.0804%" height="15" fill="rgb(231,207,8)" fg:x="1101" fg:w="1"/><text x="88.7548%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.5852%" y="469" width="0.1608%" height="15" fill="rgb(235,219,23)" fg:x="1102" fg:w="2"/><text x="88.8352%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.5852%" y="453" width="0.1608%" height="15" fill="rgb(226,216,26)" fg:x="1102" fg:w="2"/><text x="88.8352%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.6656%" y="437" width="0.0804%" height="15" fill="rgb(239,137,16)" fg:x="1103" fg:w="1"/><text x="88.9156%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7460%" y="469" width="0.0804%" height="15" fill="rgb(207,12,36)" fg:x="1104" fg:w="1"/><text x="88.9960%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="88.7460%" y="453" width="0.0804%" height="15" fill="rgb(210,214,24)" fg:x="1104" fg:w="1"/><text x="88.9960%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9068%" y="437" width="0.0804%" height="15" fill="rgb(206,56,30)" fg:x="1106" fg:w="1"/><text x="89.1568%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="88.8264%" y="469" width="0.2412%" height="15" fill="rgb(228,143,26)" fg:x="1105" fg:w="3"/><text x="89.0764%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.9068%" y="453" width="0.1608%" height="15" fill="rgb(216,218,46)" fg:x="1106" fg:w="2"/><text x="89.1568%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9871%" y="437" width="0.0804%" height="15" fill="rgb(206,6,19)" fg:x="1107" fg:w="1"/><text x="89.2371%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2283%" y="421" width="0.0804%" height="15" fill="rgb(239,177,51)" fg:x="1110" fg:w="1"/><text x="89.4783%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2283%" y="405" width="0.0804%" height="15" fill="rgb(216,55,25)" fg:x="1110" fg:w="1"/><text x="89.4783%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2283%" y="389" width="0.0804%" height="15" fill="rgb(231,163,29)" fg:x="1110" fg:w="1"/><text x="89.4783%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.3087%" y="421" width="0.0804%" height="15" fill="rgb(232,149,50)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="89.3087%" y="405" width="0.0804%" height="15" fill="rgb(223,142,48)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="89.3087%" y="389" width="0.0804%" height="15" fill="rgb(245,83,23)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3087%" y="373" width="0.0804%" height="15" fill="rgb(224,63,2)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3087%" y="357" width="0.0804%" height="15" fill="rgb(218,65,53)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.3087%" y="341" width="0.0804%" height="15" fill="rgb(221,84,29)" fg:x="1111" fg:w="1"/><text x="89.5587%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4695%" y="357" width="0.0804%" height="15" fill="rgb(234,0,32)" fg:x="1113" fg:w="1"/><text x="89.7195%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4695%" y="389" width="0.1608%" height="15" fill="rgb(206,20,16)" fg:x="1113" fg:w="2"/><text x="89.7195%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4695%" y="373" width="0.1608%" height="15" fill="rgb(244,172,18)" fg:x="1113" fg:w="2"/><text x="89.7195%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.5498%" y="357" width="0.0804%" height="15" fill="rgb(254,133,1)" fg:x="1114" fg:w="1"/><text x="89.7998%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="89.4695%" y="405" width="0.3215%" height="15" fill="rgb(222,206,41)" fg:x="1113" fg:w="4"/><text x="89.7195%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="89.6302%" y="389" width="0.1608%" height="15" fill="rgb(212,3,42)" fg:x="1115" fg:w="2"/><text x="89.8802%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="89.6302%" y="373" width="0.1608%" height="15" fill="rgb(241,11,4)" fg:x="1115" fg:w="2"/><text x="89.8802%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7106%" y="357" width="0.0804%" height="15" fill="rgb(205,19,26)" fg:x="1116" fg:w="1"/><text x="89.9606%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7106%" y="341" width="0.0804%" height="15" fill="rgb(210,179,32)" fg:x="1116" fg:w="1"/><text x="89.9606%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7106%" y="325" width="0.0804%" height="15" fill="rgb(227,116,49)" fg:x="1116" fg:w="1"/><text x="89.9606%" y="335.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.29%)</title><rect x="88.5852%" y="501" width="1.2862%" height="15" fill="rgb(211,146,6)" fg:x="1102" fg:w="16"/><text x="88.8352%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.29%)</title><rect x="88.5852%" y="485" width="1.2862%" height="15" fill="rgb(219,44,39)" fg:x="1102" fg:w="16"/><text x="88.8352%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="89.0675%" y="469" width="0.8039%" height="15" fill="rgb(234,128,11)" fg:x="1108" fg:w="10"/><text x="89.3175%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="89.2283%" y="453" width="0.6431%" height="15" fill="rgb(220,183,53)" fg:x="1110" fg:w="8"/><text x="89.4783%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="89.2283%" y="437" width="0.6431%" height="15" fill="rgb(213,219,32)" fg:x="1110" fg:w="8"/><text x="89.4783%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="89.3891%" y="421" width="0.4823%" height="15" fill="rgb(232,156,16)" fg:x="1112" fg:w="6"/><text x="89.6391%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7910%" y="405" width="0.0804%" height="15" fill="rgb(246,135,34)" fg:x="1117" fg:w="1"/><text x="90.0410%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.9518%" y="357" width="0.0804%" height="15" fill="rgb(241,99,0)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9518%" y="341" width="0.0804%" height="15" fill="rgb(222,103,45)" fg:x="1119" fg:w="1"/><text x="90.2018%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.1125%" y="309" width="0.0804%" height="15" fill="rgb(212,57,4)" fg:x="1121" fg:w="1"/><text x="90.3625%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1125%" y="293" width="0.0804%" height="15" fill="rgb(215,68,47)" fg:x="1121" fg:w="1"/><text x="90.3625%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.1125%" y="341" width="0.1608%" height="15" fill="rgb(230,84,2)" fg:x="1121" fg:w="2"/><text x="90.3625%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.1125%" y="325" width="0.1608%" height="15" fill="rgb(220,102,14)" fg:x="1121" fg:w="2"/><text x="90.3625%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1929%" y="309" width="0.0804%" height="15" fill="rgb(240,10,32)" fg:x="1122" fg:w="1"/><text x="90.4429%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1929%" y="293" width="0.0804%" height="15" fill="rgb(215,47,27)" fg:x="1122" fg:w="1"/><text x="90.4429%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1929%" y="277" width="0.0804%" height="15" fill="rgb(233,188,43)" fg:x="1122" fg:w="1"/><text x="90.4429%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="89.9518%" y="373" width="0.4019%" height="15" fill="rgb(253,190,1)" fg:x="1119" fg:w="5"/><text x="90.2018%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="90.0322%" y="357" width="0.3215%" height="15" fill="rgb(206,114,52)" fg:x="1120" fg:w="4"/><text x="90.2822%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2733%" y="341" width="0.0804%" height="15" fill="rgb(233,120,37)" fg:x="1123" fg:w="1"/><text x="90.5233%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2733%" y="325" width="0.0804%" height="15" fill="rgb(214,52,39)" fg:x="1123" fg:w="1"/><text x="90.5233%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2733%" y="309" width="0.0804%" height="15" fill="rgb(223,80,29)" fg:x="1123" fg:w="1"/><text x="90.5233%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.3537%" y="373" width="0.0804%" height="15" fill="rgb(230,101,40)" fg:x="1124" fg:w="1"/><text x="90.6037%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="89.9518%" y="437" width="0.5627%" height="15" fill="rgb(219,211,8)" fg:x="1119" fg:w="7"/><text x="90.2018%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="89.9518%" y="421" width="0.5627%" height="15" fill="rgb(252,126,28)" fg:x="1119" fg:w="7"/><text x="90.2018%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="89.9518%" y="405" width="0.5627%" height="15" fill="rgb(215,56,38)" fg:x="1119" fg:w="7"/><text x="90.2018%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="89.9518%" y="389" width="0.5627%" height="15" fill="rgb(249,55,44)" fg:x="1119" fg:w="7"/><text x="90.2018%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4341%" y="373" width="0.0804%" height="15" fill="rgb(220,221,32)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4341%" y="357" width="0.0804%" height="15" fill="rgb(212,216,41)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4341%" y="341" width="0.0804%" height="15" fill="rgb(228,213,43)" fg:x="1125" fg:w="1"/><text x="90.6841%" y="351.50"></text></g><g><title>engine::session::Session::close (67 samples, 5.39%)</title><rect x="85.2090%" y="613" width="5.3859%" height="15" fill="rgb(211,31,26)" fg:x="1060" fg:w="67"/><text x="85.4590%" y="623.50">engine:..</text></g><g><title>engine::session::state::State::close (65 samples, 5.23%)</title><rect x="85.3698%" y="597" width="5.2251%" height="15" fill="rgb(229,202,19)" fg:x="1062" fg:w="65"/><text x="85.6198%" y="607.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (65 samples, 5.23%)</title><rect x="85.3698%" y="581" width="5.2251%" height="15" fill="rgb(229,105,46)" fg:x="1062" fg:w="65"/><text x="85.6198%" y="591.50">engine..</text></g><g><title>core::iter::adapters::try_process (65 samples, 5.23%)</title><rect x="85.3698%" y="565" width="5.2251%" height="15" fill="rgb(235,108,1)" fg:x="1062" fg:w="65"/><text x="85.6198%" y="575.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 5.23%)</title><rect x="85.3698%" y="549" width="5.2251%" height="15" fill="rgb(245,111,35)" fg:x="1062" fg:w="65"/><text x="85.6198%" y="559.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (62 samples, 4.98%)</title><rect x="85.6109%" y="533" width="4.9839%" height="15" fill="rgb(219,185,31)" fg:x="1065" fg:w="62"/><text x="85.8609%" y="543.50">engine..</text></g><g><title>kernel::model::any_entity_changes (41 samples, 3.30%)</title><rect x="87.2990%" y="517" width="3.2958%" height="15" fill="rgb(214,4,43)" fg:x="1086" fg:w="41"/><text x="87.5490%" y="527.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="89.8714%" y="501" width="0.7235%" height="15" fill="rgb(235,227,40)" fg:x="1118" fg:w="9"/><text x="90.1214%" y="511.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="89.9518%" y="485" width="0.6431%" height="15" fill="rgb(230,88,30)" fg:x="1119" fg:w="8"/><text x="90.2018%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="89.9518%" y="469" width="0.6431%" height="15" fill="rgb(216,217,1)" fg:x="1119" fg:w="8"/><text x="90.2018%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="89.9518%" y="453" width="0.6431%" height="15" fill="rgb(248,139,50)" fg:x="1119" fg:w="8"/><text x="90.2018%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5145%" y="437" width="0.0804%" height="15" fill="rgb(233,1,21)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5145%" y="421" width="0.0804%" height="15" fill="rgb(215,183,12)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.5145%" y="405" width="0.0804%" height="15" fill="rgb(229,104,42)" fg:x="1126" fg:w="1"/><text x="90.7645%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5949%" y="405" width="0.0804%" height="15" fill="rgb(243,34,48)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5949%" y="389" width="0.0804%" height="15" fill="rgb(239,11,44)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5949%" y="373" width="0.0804%" height="15" fill="rgb(231,98,35)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5949%" y="357" width="0.0804%" height="15" fill="rgb(233,28,25)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5949%" y="341" width="0.0804%" height="15" fill="rgb(234,123,11)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.5949%" y="325" width="0.0804%" height="15" fill="rgb(220,69,3)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.5949%" y="309" width="0.0804%" height="15" fill="rgb(214,64,36)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.5949%" y="293" width="0.0804%" height="15" fill="rgb(211,138,32)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5949%" y="277" width="0.0804%" height="15" fill="rgb(213,118,47)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5949%" y="261" width="0.0804%" height="15" fill="rgb(243,124,49)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.5949%" y="245" width="0.0804%" height="15" fill="rgb(221,30,28)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.5949%" y="229" width="0.0804%" height="15" fill="rgb(246,37,13)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.5949%" y="213" width="0.0804%" height="15" fill="rgb(249,66,14)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.5949%" y="197" width="0.0804%" height="15" fill="rgb(213,166,5)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5949%" y="181" width="0.0804%" height="15" fill="rgb(221,66,24)" fg:x="1127" fg:w="1"/><text x="90.8449%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.5949%" y="437" width="0.1608%" height="15" fill="rgb(210,132,17)" fg:x="1127" fg:w="2"/><text x="90.8449%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.5949%" y="421" width="0.1608%" height="15" fill="rgb(243,202,5)" fg:x="1127" fg:w="2"/><text x="90.8449%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6752%" y="405" width="0.0804%" height="15" fill="rgb(233,70,48)" fg:x="1128" fg:w="1"/><text x="90.9252%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="90.5949%" y="485" width="0.2412%" height="15" fill="rgb(238,41,26)" fg:x="1127" fg:w="3"/><text x="90.8449%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="90.5949%" y="469" width="0.2412%" height="15" fill="rgb(241,19,31)" fg:x="1127" fg:w="3"/><text x="90.8449%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="90.5949%" y="453" width="0.2412%" height="15" fill="rgb(214,76,10)" fg:x="1127" fg:w="3"/><text x="90.8449%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.7556%" y="437" width="0.0804%" height="15" fill="rgb(254,202,22)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.7556%" y="421" width="0.0804%" height="15" fill="rgb(214,72,24)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7556%" y="405" width="0.0804%" height="15" fill="rgb(221,92,46)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.7556%" y="389" width="0.0804%" height="15" fill="rgb(246,13,50)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7556%" y="373" width="0.0804%" height="15" fill="rgb(240,165,38)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7556%" y="357" width="0.0804%" height="15" fill="rgb(241,24,51)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.7556%" y="341" width="0.0804%" height="15" fill="rgb(227,51,44)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.7556%" y="325" width="0.0804%" height="15" fill="rgb(231,121,3)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.7556%" y="309" width="0.0804%" height="15" fill="rgb(245,3,41)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7556%" y="293" width="0.0804%" height="15" fill="rgb(214,13,26)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7556%" y="277" width="0.0804%" height="15" fill="rgb(252,75,11)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.7556%" y="261" width="0.0804%" height="15" fill="rgb(218,226,17)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.7556%" y="245" width="0.0804%" height="15" fill="rgb(248,89,38)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.7556%" y="229" width="0.0804%" height="15" fill="rgb(237,73,46)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.7556%" y="213" width="0.0804%" height="15" fill="rgb(242,78,33)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7556%" y="197" width="0.0804%" height="15" fill="rgb(235,60,3)" fg:x="1129" fg:w="1"/><text x="91.0056%" y="207.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (4 samples, 0.32%)</title><rect x="90.5949%" y="501" width="0.3215%" height="15" fill="rgb(216,172,19)" fg:x="1127" fg:w="4"/><text x="90.8449%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="90.8360%" y="485" width="0.0804%" height="15" fill="rgb(227,6,42)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.8360%" y="469" width="0.0804%" height="15" fill="rgb(223,207,42)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8360%" y="453" width="0.0804%" height="15" fill="rgb(246,138,30)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8360%" y="437" width="0.0804%" height="15" fill="rgb(251,199,47)" fg:x="1130" fg:w="1"/><text x="91.0860%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (5 samples, 0.40%)</title><rect x="90.5949%" y="517" width="0.4019%" height="15" fill="rgb(228,218,44)" fg:x="1127" fg:w="5"/><text x="90.8449%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="90.9164%" y="501" width="0.0804%" height="15" fill="rgb(220,68,6)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="511.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="90.9164%" y="485" width="0.0804%" height="15" fill="rgb(240,60,26)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="90.9164%" y="469" width="0.0804%" height="15" fill="rgb(211,200,19)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.9164%" y="453" width="0.0804%" height="15" fill="rgb(242,145,30)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.9164%" y="437" width="0.0804%" height="15" fill="rgb(225,64,13)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.9164%" y="421" width="0.0804%" height="15" fill="rgb(218,103,35)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.9164%" y="405" width="0.0804%" height="15" fill="rgb(216,93,46)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.9164%" y="389" width="0.0804%" height="15" fill="rgb(225,159,27)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="90.9164%" y="373" width="0.0804%" height="15" fill="rgb(225,204,11)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="90.9164%" y="357" width="0.0804%" height="15" fill="rgb(205,56,4)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="90.9164%" y="341" width="0.0804%" height="15" fill="rgb(206,6,35)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="90.9164%" y="325" width="0.0804%" height="15" fill="rgb(247,73,52)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="90.9164%" y="309" width="0.0804%" height="15" fill="rgb(246,97,4)" fg:x="1131" fg:w="1"/><text x="91.1664%" y="319.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="91.0772%" y="357" width="0.1608%" height="15" fill="rgb(212,37,15)" fg:x="1133" fg:w="2"/><text x="91.3272%" y="367.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0772%" y="341" width="0.1608%" height="15" fill="rgb(208,130,40)" fg:x="1133" fg:w="2"/><text x="91.3272%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.0772%" y="325" width="0.1608%" height="15" fill="rgb(236,55,29)" fg:x="1133" fg:w="2"/><text x="91.3272%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.1576%" y="309" width="0.0804%" height="15" fill="rgb(209,156,45)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="319.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="91.1576%" y="293" width="0.0804%" height="15" fill="rgb(249,107,4)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="91.1576%" y="277" width="0.0804%" height="15" fill="rgb(227,7,13)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1576%" y="261" width="0.0804%" height="15" fill="rgb(250,129,14)" fg:x="1134" fg:w="1"/><text x="91.4076%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.2379%" y="341" width="0.0804%" height="15" fill="rgb(229,92,13)" fg:x="1135" fg:w="1"/><text x="91.4879%" y="351.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (4 samples, 0.32%)</title><rect x="91.0772%" y="373" width="0.3215%" height="15" fill="rgb(245,98,39)" fg:x="1133" fg:w="4"/><text x="91.3272%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="91.2379%" y="357" width="0.1608%" height="15" fill="rgb(234,135,48)" fg:x="1135" fg:w="2"/><text x="91.4879%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="91.3183%" y="341" width="0.0804%" height="15" fill="rgb(230,98,28)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3183%" y="325" width="0.0804%" height="15" fill="rgb(223,121,0)" fg:x="1136" fg:w="1"/><text x="91.5683%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3987%" y="325" width="0.0804%" height="15" fill="rgb(234,173,33)" fg:x="1137" fg:w="1"/><text x="91.6487%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="91.4791%" y="325" width="0.0804%" height="15" fill="rgb(245,47,8)" fg:x="1138" fg:w="1"/><text x="91.7291%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4791%" y="309" width="0.0804%" height="15" fill="rgb(205,17,20)" fg:x="1138" fg:w="1"/><text x="91.7291%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.5595%" y="309" width="0.0804%" height="15" fill="rgb(232,151,16)" fg:x="1139" fg:w="1"/><text x="91.8095%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.5595%" y="293" width="0.0804%" height="15" fill="rgb(208,30,32)" fg:x="1139" fg:w="1"/><text x="91.8095%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.5595%" y="277" width="0.0804%" height="15" fill="rgb(254,26,3)" fg:x="1139" fg:w="1"/><text x="91.8095%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7203%" y="277" width="0.0804%" height="15" fill="rgb(240,177,30)" fg:x="1141" fg:w="1"/><text x="91.9703%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7203%" y="261" width="0.0804%" height="15" fill="rgb(248,76,44)" fg:x="1141" fg:w="1"/><text x="91.9703%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.8810%" y="245" width="0.1608%" height="15" fill="rgb(241,186,54)" fg:x="1143" fg:w="2"/><text x="92.1310%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.9614%" y="229" width="0.0804%" height="15" fill="rgb(249,171,29)" fg:x="1144" fg:w="1"/><text x="92.2114%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.9614%" y="213" width="0.0804%" height="15" fill="rgb(237,151,44)" fg:x="1144" fg:w="1"/><text x="92.2114%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0418%" y="245" width="0.0804%" height="15" fill="rgb(228,174,30)" fg:x="1145" fg:w="1"/><text x="92.2918%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (10 samples, 0.80%)</title><rect x="91.3987%" y="341" width="0.8039%" height="15" fill="rgb(252,14,37)" fg:x="1137" fg:w="10"/><text x="91.6487%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="91.5595%" y="325" width="0.6431%" height="15" fill="rgb(207,111,40)" fg:x="1139" fg:w="8"/><text x="91.8095%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="91.6399%" y="309" width="0.5627%" height="15" fill="rgb(248,171,54)" fg:x="1140" fg:w="7"/><text x="91.8899%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="91.6399%" y="293" width="0.5627%" height="15" fill="rgb(211,127,2)" fg:x="1140" fg:w="7"/><text x="91.8899%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="91.8006%" y="277" width="0.4019%" height="15" fill="rgb(236,87,47)" fg:x="1142" fg:w="5"/><text x="92.0506%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="91.8006%" y="261" width="0.4019%" height="15" fill="rgb(223,190,45)" fg:x="1142" fg:w="5"/><text x="92.0506%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1222%" y="245" width="0.0804%" height="15" fill="rgb(215,5,16)" fg:x="1146" fg:w="1"/><text x="92.3722%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1222%" y="229" width="0.0804%" height="15" fill="rgb(252,82,33)" fg:x="1146" fg:w="1"/><text x="92.3722%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2026%" y="325" width="0.0804%" height="15" fill="rgb(247,213,44)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2026%" y="309" width="0.0804%" height="15" fill="rgb(205,196,44)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2026%" y="293" width="0.0804%" height="15" fill="rgb(237,96,54)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2026%" y="277" width="0.0804%" height="15" fill="rgb(230,113,34)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2026%" y="261" width="0.0804%" height="15" fill="rgb(221,224,12)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2026%" y="245" width="0.0804%" height="15" fill="rgb(219,112,44)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2026%" y="229" width="0.0804%" height="15" fill="rgb(210,31,13)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2026%" y="213" width="0.0804%" height="15" fill="rgb(230,25,16)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2026%" y="197" width="0.0804%" height="15" fill="rgb(246,108,53)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2026%" y="181" width="0.0804%" height="15" fill="rgb(241,172,50)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2026%" y="165" width="0.0804%" height="15" fill="rgb(235,141,10)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2026%" y="149" width="0.0804%" height="15" fill="rgb(220,174,43)" fg:x="1147" fg:w="1"/><text x="92.4526%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.2830%" y="309" width="0.1608%" height="15" fill="rgb(215,181,40)" fg:x="1148" fg:w="2"/><text x="92.5330%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3633%" y="293" width="0.0804%" height="15" fill="rgb(230,97,2)" fg:x="1149" fg:w="1"/><text x="92.6133%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6849%" y="245" width="0.0804%" height="15" fill="rgb(211,25,27)" fg:x="1153" fg:w="1"/><text x="92.9349%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.9260%" y="213" width="0.0804%" height="15" fill="rgb(230,87,26)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.9260%" y="197" width="0.0804%" height="15" fill="rgb(227,160,17)" fg:x="1156" fg:w="1"/><text x="93.1760%" y="207.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (21 samples, 1.69%)</title><rect x="91.3987%" y="357" width="1.6881%" height="15" fill="rgb(244,85,34)" fg:x="1137" fg:w="21"/><text x="91.6487%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="92.2026%" y="341" width="0.8842%" height="15" fill="rgb(207,70,0)" fg:x="1147" fg:w="11"/><text x="92.4526%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="92.2830%" y="325" width="0.8039%" height="15" fill="rgb(223,129,7)" fg:x="1148" fg:w="10"/><text x="92.5330%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="92.4437%" y="309" width="0.6431%" height="15" fill="rgb(246,105,7)" fg:x="1150" fg:w="8"/><text x="92.6937%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="92.4437%" y="293" width="0.6431%" height="15" fill="rgb(215,154,42)" fg:x="1150" fg:w="8"/><text x="92.6937%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="92.5241%" y="277" width="0.5627%" height="15" fill="rgb(220,215,30)" fg:x="1151" fg:w="7"/><text x="92.7741%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="92.5241%" y="261" width="0.5627%" height="15" fill="rgb(228,81,51)" fg:x="1151" fg:w="7"/><text x="92.7741%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="92.7653%" y="245" width="0.3215%" height="15" fill="rgb(247,71,54)" fg:x="1154" fg:w="4"/><text x="93.0153%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="92.7653%" y="229" width="0.3215%" height="15" fill="rgb(234,176,34)" fg:x="1154" fg:w="4"/><text x="93.0153%" y="239.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="93.0064%" y="213" width="0.0804%" height="15" fill="rgb(241,103,54)" fg:x="1157" fg:w="1"/><text x="93.2564%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.1672%" y="277" width="0.0804%" height="15" fill="rgb(228,22,34)" fg:x="1159" fg:w="1"/><text x="93.4172%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.0868%" y="309" width="0.2412%" height="15" fill="rgb(241,179,48)" fg:x="1158" fg:w="3"/><text x="93.3368%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.0868%" y="293" width="0.2412%" height="15" fill="rgb(235,167,37)" fg:x="1158" fg:w="3"/><text x="93.3368%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.2476%" y="277" width="0.0804%" height="15" fill="rgb(213,109,30)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.2476%" y="261" width="0.0804%" height="15" fill="rgb(222,172,16)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.2476%" y="245" width="0.0804%" height="15" fill="rgb(233,192,5)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.2476%" y="229" width="0.0804%" height="15" fill="rgb(247,189,41)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.2476%" y="213" width="0.0804%" height="15" fill="rgb(218,134,47)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.2476%" y="197" width="0.0804%" height="15" fill="rgb(216,29,3)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2476%" y="181" width="0.0804%" height="15" fill="rgb(246,140,12)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2476%" y="165" width="0.0804%" height="15" fill="rgb(230,136,11)" fg:x="1160" fg:w="1"/><text x="93.4976%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.3280%" y="277" width="0.1608%" height="15" fill="rgb(247,22,47)" fg:x="1161" fg:w="2"/><text x="93.5780%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4084%" y="261" width="0.0804%" height="15" fill="rgb(218,84,22)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4084%" y="245" width="0.0804%" height="15" fill="rgb(216,87,39)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.4084%" y="229" width="0.0804%" height="15" fill="rgb(221,178,8)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.4084%" y="213" width="0.0804%" height="15" fill="rgb(230,42,11)" fg:x="1162" fg:w="1"/><text x="93.6584%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.4887%" y="277" width="0.0804%" height="15" fill="rgb(237,229,4)" fg:x="1163" fg:w="1"/><text x="93.7387%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.4887%" y="261" width="0.0804%" height="15" fill="rgb(222,31,33)" fg:x="1163" fg:w="1"/><text x="93.7387%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.5691%" y="213" width="0.0804%" height="15" fill="rgb(210,17,39)" fg:x="1164" fg:w="1"/><text x="93.8191%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="93.3280%" y="309" width="0.4019%" height="15" fill="rgb(244,93,20)" fg:x="1161" fg:w="5"/><text x="93.5780%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="93.3280%" y="293" width="0.4019%" height="15" fill="rgb(210,40,47)" fg:x="1161" fg:w="5"/><text x="93.5780%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.5691%" y="277" width="0.1608%" height="15" fill="rgb(239,211,47)" fg:x="1164" fg:w="2"/><text x="93.8191%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.5691%" y="261" width="0.1608%" height="15" fill="rgb(251,223,49)" fg:x="1164" fg:w="2"/><text x="93.8191%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.5691%" y="245" width="0.1608%" height="15" fill="rgb(221,149,5)" fg:x="1164" fg:w="2"/><text x="93.8191%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.5691%" y="229" width="0.1608%" height="15" fill="rgb(219,224,51)" fg:x="1164" fg:w="2"/><text x="93.8191%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6495%" y="213" width="0.0804%" height="15" fill="rgb(223,7,8)" fg:x="1165" fg:w="1"/><text x="93.8995%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.6495%" y="197" width="0.0804%" height="15" fill="rgb(241,217,22)" fg:x="1165" fg:w="1"/><text x="93.8995%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.6495%" y="181" width="0.0804%" height="15" fill="rgb(248,209,0)" fg:x="1165" fg:w="1"/><text x="93.8995%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (9 samples, 0.72%)</title><rect x="93.0868%" y="357" width="0.7235%" height="15" fill="rgb(217,205,4)" fg:x="1158" fg:w="9"/><text x="93.3368%" y="367.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (9 samples, 0.72%)</title><rect x="93.0868%" y="341" width="0.7235%" height="15" fill="rgb(228,124,39)" fg:x="1158" fg:w="9"/><text x="93.3368%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="93.0868%" y="325" width="0.7235%" height="15" fill="rgb(250,116,42)" fg:x="1158" fg:w="9"/><text x="93.3368%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.7299%" y="309" width="0.0804%" height="15" fill="rgb(223,202,9)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="293" width="0.0804%" height="15" fill="rgb(242,222,40)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.7299%" y="277" width="0.0804%" height="15" fill="rgb(229,99,46)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="261" width="0.0804%" height="15" fill="rgb(225,56,46)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="271.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="245" width="0.0804%" height="15" fill="rgb(227,94,5)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="229" width="0.0804%" height="15" fill="rgb(205,112,38)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="239.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.7299%" y="213" width="0.0804%" height="15" fill="rgb(231,133,46)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="223.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="197" width="0.0804%" height="15" fill="rgb(217,16,9)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="93.7299%" y="181" width="0.0804%" height="15" fill="rgb(249,173,9)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="191.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="93.7299%" y="165" width="0.0804%" height="15" fill="rgb(205,163,53)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.7299%" y="149" width="0.0804%" height="15" fill="rgb(217,54,41)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.7299%" y="133" width="0.0804%" height="15" fill="rgb(228,216,12)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="143.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.7299%" y="117" width="0.0804%" height="15" fill="rgb(244,228,15)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.7299%" y="101" width="0.0804%" height="15" fill="rgb(221,176,53)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.7299%" y="85" width="0.0804%" height="15" fill="rgb(205,94,34)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.7299%" y="69" width="0.0804%" height="15" fill="rgb(213,110,48)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.7299%" y="53" width="0.0804%" height="15" fill="rgb(236,142,28)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.7299%" y="37" width="0.0804%" height="15" fill="rgb(225,135,29)" fg:x="1166" fg:w="1"/><text x="93.9799%" y="47.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8907%" y="325" width="0.0804%" height="15" fill="rgb(252,45,31)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8907%" y="309" width="0.0804%" height="15" fill="rgb(211,187,50)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8907%" y="293" width="0.0804%" height="15" fill="rgb(229,109,7)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8907%" y="277" width="0.0804%" height="15" fill="rgb(251,131,51)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8907%" y="261" width="0.0804%" height="15" fill="rgb(251,180,35)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8907%" y="245" width="0.0804%" height="15" fill="rgb(211,46,32)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8907%" y="229" width="0.0804%" height="15" fill="rgb(248,123,17)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8907%" y="213" width="0.0804%" height="15" fill="rgb(227,141,18)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8907%" y="197" width="0.0804%" height="15" fill="rgb(216,102,9)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8907%" y="181" width="0.0804%" height="15" fill="rgb(253,47,13)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8907%" y="165" width="0.0804%" height="15" fill="rgb(226,93,23)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8907%" y="149" width="0.0804%" height="15" fill="rgb(247,104,17)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8907%" y="133" width="0.0804%" height="15" fill="rgb(233,203,26)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8907%" y="117" width="0.0804%" height="15" fill="rgb(244,98,49)" fg:x="1168" fg:w="1"/><text x="94.1407%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (43 samples, 3.46%)</title><rect x="90.5949%" y="581" width="3.4566%" height="15" fill="rgb(235,134,22)" fg:x="1127" fg:w="43"/><text x="90.8449%" y="591.50">&lt;en..</text></g><g><title>kernel::plugins::mw::apply_middleware (43 samples, 3.46%)</title><rect x="90.5949%" y="565" width="3.4566%" height="15" fill="rgb(221,70,32)" fg:x="1127" fg:w="43"/><text x="90.8449%" y="575.50">ker..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (43 samples, 3.46%)</title><rect x="90.5949%" y="549" width="3.4566%" height="15" fill="rgb(238,15,50)" fg:x="1127" fg:w="43"/><text x="90.8449%" y="559.50">ker..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (43 samples, 3.46%)</title><rect x="90.5949%" y="533" width="3.4566%" height="15" fill="rgb(215,221,48)" fg:x="1127" fg:w="43"/><text x="90.8449%" y="543.50">&lt;en..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.05%)</title><rect x="90.9968%" y="517" width="3.0547%" height="15" fill="rgb(236,73,3)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="527.50">ker..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (38 samples, 3.05%)</title><rect x="90.9968%" y="501" width="3.0547%" height="15" fill="rgb(250,107,11)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="511.50">&lt;pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.05%)</title><rect x="90.9968%" y="485" width="3.0547%" height="15" fill="rgb(242,39,14)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="495.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 3.05%)</title><rect x="90.9968%" y="469" width="3.0547%" height="15" fill="rgb(248,164,37)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="479.50">cor..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (38 samples, 3.05%)</title><rect x="90.9968%" y="453" width="3.0547%" height="15" fill="rgb(217,60,12)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="463.50">ker..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 3.05%)</title><rect x="90.9968%" y="437" width="3.0547%" height="15" fill="rgb(240,125,29)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="447.50">cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38 samples, 3.05%)</title><rect x="90.9968%" y="421" width="3.0547%" height="15" fill="rgb(208,207,28)" fg:x="1132" fg:w="38"/><text x="91.2468%" y="431.50">&lt;al..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (37 samples, 2.97%)</title><rect x="91.0772%" y="405" width="2.9743%" height="15" fill="rgb(209,159,27)" fg:x="1133" fg:w="37"/><text x="91.3272%" y="415.50">&lt;en..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (37 samples, 2.97%)</title><rect x="91.0772%" y="389" width="2.9743%" height="15" fill="rgb(251,176,53)" fg:x="1133" fg:w="37"/><text x="91.3272%" y="399.50">&lt;pl..</text></g><g><title>plugins_core::looking::model::new_area_observation (33 samples, 2.65%)</title><rect x="91.3987%" y="373" width="2.6527%" height="15" fill="rgb(211,85,7)" fg:x="1137" fg:w="33"/><text x="91.6487%" y="383.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="93.8103%" y="357" width="0.2412%" height="15" fill="rgb(216,64,54)" fg:x="1167" fg:w="3"/><text x="94.0603%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.8103%" y="341" width="0.2412%" height="15" fill="rgb(217,54,24)" fg:x="1167" fg:w="3"/><text x="94.0603%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9711%" y="325" width="0.0804%" height="15" fill="rgb(208,206,53)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9711%" y="309" width="0.0804%" height="15" fill="rgb(251,74,39)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.9711%" y="293" width="0.0804%" height="15" fill="rgb(226,47,5)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.9711%" y="277" width="0.0804%" height="15" fill="rgb(234,111,33)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.9711%" y="261" width="0.0804%" height="15" fill="rgb(251,14,10)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9711%" y="245" width="0.0804%" height="15" fill="rgb(232,43,0)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9711%" y="229" width="0.0804%" height="15" fill="rgb(222,68,43)" fg:x="1169" fg:w="1"/><text x="94.2211%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="94.0514%" y="581" width="0.0804%" height="15" fill="rgb(217,24,23)" fg:x="1170" fg:w="1"/><text x="94.3014%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0514%" y="565" width="0.0804%" height="15" fill="rgb(229,209,14)" fg:x="1170" fg:w="1"/><text x="94.3014%" y="575.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="94.2122%" y="517" width="0.0804%" height="15" fill="rgb(250,149,48)" fg:x="1172" fg:w="1"/><text x="94.4622%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2122%" y="501" width="0.0804%" height="15" fill="rgb(210,120,37)" fg:x="1172" fg:w="1"/><text x="94.4622%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2926%" y="437" width="0.0804%" height="15" fill="rgb(210,21,8)" fg:x="1173" fg:w="1"/><text x="94.5426%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2926%" y="421" width="0.0804%" height="15" fill="rgb(243,145,7)" fg:x="1173" fg:w="1"/><text x="94.5426%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3730%" y="341" width="0.0804%" height="15" fill="rgb(238,178,32)" fg:x="1174" fg:w="1"/><text x="94.6230%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3730%" y="325" width="0.0804%" height="15" fill="rgb(222,4,10)" fg:x="1174" fg:w="1"/><text x="94.6230%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.3730%" y="421" width="0.2412%" height="15" fill="rgb(239,7,37)" fg:x="1174" fg:w="3"/><text x="94.6230%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.3730%" y="405" width="0.2412%" height="15" fill="rgb(215,31,37)" fg:x="1174" fg:w="3"/><text x="94.6230%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.3730%" y="389" width="0.2412%" height="15" fill="rgb(224,83,33)" fg:x="1174" fg:w="3"/><text x="94.6230%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.3730%" y="373" width="0.2412%" height="15" fill="rgb(239,55,3)" fg:x="1174" fg:w="3"/><text x="94.6230%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="94.3730%" y="357" width="0.2412%" height="15" fill="rgb(247,92,11)" fg:x="1174" fg:w="3"/><text x="94.6230%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="94.4534%" y="341" width="0.1608%" height="15" fill="rgb(239,200,7)" fg:x="1175" fg:w="2"/><text x="94.7034%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.6141%" y="389" width="0.0804%" height="15" fill="rgb(227,115,8)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6141%" y="373" width="0.0804%" height="15" fill="rgb(215,189,27)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6141%" y="357" width="0.0804%" height="15" fill="rgb(251,216,39)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.6141%" y="341" width="0.0804%" height="15" fill="rgb(207,29,47)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6141%" y="325" width="0.0804%" height="15" fill="rgb(210,71,34)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6141%" y="309" width="0.0804%" height="15" fill="rgb(253,217,51)" fg:x="1177" fg:w="1"/><text x="94.8641%" y="319.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="94.2926%" y="517" width="0.4823%" height="15" fill="rgb(222,117,46)" fg:x="1173" fg:w="6"/><text x="94.5426%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="94.2926%" y="501" width="0.4823%" height="15" fill="rgb(226,132,6)" fg:x="1173" fg:w="6"/><text x="94.5426%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.2926%" y="485" width="0.4823%" height="15" fill="rgb(254,145,51)" fg:x="1173" fg:w="6"/><text x="94.5426%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="94.2926%" y="469" width="0.4823%" height="15" fill="rgb(231,199,27)" fg:x="1173" fg:w="6"/><text x="94.5426%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="94.2926%" y="453" width="0.4823%" height="15" fill="rgb(245,158,14)" fg:x="1173" fg:w="6"/><text x="94.5426%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="94.3730%" y="437" width="0.4019%" height="15" fill="rgb(240,113,14)" fg:x="1174" fg:w="5"/><text x="94.6230%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.6141%" y="421" width="0.1608%" height="15" fill="rgb(210,20,13)" fg:x="1177" fg:w="2"/><text x="94.8641%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.6141%" y="405" width="0.1608%" height="15" fill="rgb(241,144,13)" fg:x="1177" fg:w="2"/><text x="94.8641%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6945%" y="389" width="0.0804%" height="15" fill="rgb(235,43,34)" fg:x="1178" fg:w="1"/><text x="94.9445%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.8553%" y="341" width="0.0804%" height="15" fill="rgb(208,36,20)" fg:x="1180" fg:w="1"/><text x="95.1053%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.8553%" y="325" width="0.0804%" height="15" fill="rgb(239,204,10)" fg:x="1180" fg:w="1"/><text x="95.1053%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.8553%" y="309" width="0.0804%" height="15" fill="rgb(217,84,43)" fg:x="1180" fg:w="1"/><text x="95.1053%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.8553%" y="293" width="0.0804%" height="15" fill="rgb(241,170,50)" fg:x="1180" fg:w="1"/><text x="95.1053%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.7749%" y="357" width="0.2412%" height="15" fill="rgb(226,205,29)" fg:x="1179" fg:w="3"/><text x="95.0249%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9357%" y="341" width="0.0804%" height="15" fill="rgb(233,113,1)" fg:x="1181" fg:w="1"/><text x="95.1857%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="94.7749%" y="389" width="0.4019%" height="15" fill="rgb(253,98,13)" fg:x="1179" fg:w="5"/><text x="95.0249%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="94.7749%" y="373" width="0.4019%" height="15" fill="rgb(211,115,12)" fg:x="1179" fg:w="5"/><text x="95.0249%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0161%" y="357" width="0.1608%" height="15" fill="rgb(208,12,16)" fg:x="1182" fg:w="2"/><text x="95.2661%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.0161%" y="341" width="0.1608%" height="15" fill="rgb(237,193,54)" fg:x="1182" fg:w="2"/><text x="95.2661%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0965%" y="325" width="0.0804%" height="15" fill="rgb(243,22,42)" fg:x="1183" fg:w="1"/><text x="95.3465%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.05%)</title><rect x="94.2122%" y="549" width="1.0450%" height="15" fill="rgb(233,151,36)" fg:x="1172" fg:w="13"/><text x="94.4622%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.05%)</title><rect x="94.2122%" y="533" width="1.0450%" height="15" fill="rgb(237,57,45)" fg:x="1172" fg:w="13"/><text x="94.4622%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="94.7749%" y="517" width="0.4823%" height="15" fill="rgb(221,88,17)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="527.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="94.7749%" y="501" width="0.4823%" height="15" fill="rgb(230,79,15)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.7749%" y="485" width="0.4823%" height="15" fill="rgb(213,57,13)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="94.7749%" y="469" width="0.4823%" height="15" fill="rgb(222,116,39)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.7749%" y="453" width="0.4823%" height="15" fill="rgb(245,107,2)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="94.7749%" y="437" width="0.4823%" height="15" fill="rgb(238,1,10)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="94.7749%" y="421" width="0.4823%" height="15" fill="rgb(249,4,48)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="94.7749%" y="405" width="0.4823%" height="15" fill="rgb(223,151,18)" fg:x="1179" fg:w="6"/><text x="95.0249%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1768%" y="389" width="0.0804%" height="15" fill="rgb(227,65,43)" fg:x="1184" fg:w="1"/><text x="95.4268%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1768%" y="373" width="0.0804%" height="15" fill="rgb(218,40,45)" fg:x="1184" fg:w="1"/><text x="95.4268%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2572%" y="517" width="0.0804%" height="15" fill="rgb(252,121,31)" fg:x="1185" fg:w="1"/><text x="95.5072%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2572%" y="501" width="0.0804%" height="15" fill="rgb(219,158,43)" fg:x="1185" fg:w="1"/><text x="95.5072%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2572%" y="485" width="0.0804%" height="15" fill="rgb(231,162,42)" fg:x="1185" fg:w="1"/><text x="95.5072%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2572%" y="469" width="0.0804%" height="15" fill="rgb(217,179,25)" fg:x="1185" fg:w="1"/><text x="95.5072%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4180%" y="469" width="0.0804%" height="15" fill="rgb(206,212,31)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4180%" y="453" width="0.0804%" height="15" fill="rgb(235,144,12)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4180%" y="437" width="0.0804%" height="15" fill="rgb(213,51,10)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4180%" y="421" width="0.0804%" height="15" fill="rgb(231,145,14)" fg:x="1187" fg:w="1"/><text x="95.6680%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5788%" y="373" width="0.0804%" height="15" fill="rgb(235,15,28)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5788%" y="357" width="0.0804%" height="15" fill="rgb(237,206,10)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5788%" y="341" width="0.0804%" height="15" fill="rgb(236,227,27)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5788%" y="325" width="0.0804%" height="15" fill="rgb(246,83,35)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5788%" y="309" width="0.0804%" height="15" fill="rgb(220,136,24)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5788%" y="293" width="0.0804%" height="15" fill="rgb(217,3,25)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5788%" y="277" width="0.0804%" height="15" fill="rgb(239,24,14)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5788%" y="261" width="0.0804%" height="15" fill="rgb(244,16,53)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5788%" y="245" width="0.0804%" height="15" fill="rgb(208,175,44)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5788%" y="229" width="0.0804%" height="15" fill="rgb(252,18,48)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5788%" y="213" width="0.0804%" height="15" fill="rgb(234,199,32)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5788%" y="197" width="0.0804%" height="15" fill="rgb(225,77,54)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5788%" y="181" width="0.0804%" height="15" fill="rgb(225,42,25)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5788%" y="165" width="0.0804%" height="15" fill="rgb(242,227,46)" fg:x="1189" fg:w="1"/><text x="95.8288%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7395%" y="325" width="0.0804%" height="15" fill="rgb(246,197,35)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7395%" y="309" width="0.0804%" height="15" fill="rgb(215,159,26)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7395%" y="293" width="0.0804%" height="15" fill="rgb(212,194,50)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.7395%" y="277" width="0.0804%" height="15" fill="rgb(246,132,1)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.7395%" y="261" width="0.0804%" height="15" fill="rgb(217,71,7)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.7395%" y="245" width="0.0804%" height="15" fill="rgb(252,59,32)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="95.7395%" y="229" width="0.0804%" height="15" fill="rgb(253,204,25)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.7395%" y="213" width="0.0804%" height="15" fill="rgb(232,21,16)" fg:x="1191" fg:w="1"/><text x="95.9895%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8199%" y="325" width="0.0804%" height="15" fill="rgb(248,90,29)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.8199%" y="309" width="0.0804%" height="15" fill="rgb(249,223,7)" fg:x="1192" fg:w="1"/><text x="96.0699%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.6592%" y="373" width="0.3215%" height="15" fill="rgb(231,119,42)" fg:x="1190" fg:w="4"/><text x="95.9092%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="95.6592%" y="357" width="0.3215%" height="15" fill="rgb(215,41,35)" fg:x="1190" fg:w="4"/><text x="95.9092%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="95.7395%" y="341" width="0.2412%" height="15" fill="rgb(220,44,45)" fg:x="1191" fg:w="3"/><text x="95.9895%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9003%" y="325" width="0.0804%" height="15" fill="rgb(253,197,36)" fg:x="1193" fg:w="1"/><text x="96.1503%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9003%" y="309" width="0.0804%" height="15" fill="rgb(245,225,54)" fg:x="1193" fg:w="1"/><text x="96.1503%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="95.3376%" y="517" width="0.7235%" height="15" fill="rgb(239,94,37)" fg:x="1186" fg:w="9"/><text x="95.5876%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="95.3376%" y="501" width="0.7235%" height="15" fill="rgb(242,217,10)" fg:x="1186" fg:w="9"/><text x="95.5876%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="95.3376%" y="485" width="0.7235%" height="15" fill="rgb(250,193,7)" fg:x="1186" fg:w="9"/><text x="95.5876%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="95.4984%" y="469" width="0.5627%" height="15" fill="rgb(230,104,19)" fg:x="1188" fg:w="7"/><text x="95.7484%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.56%)</title><rect x="95.4984%" y="453" width="0.5627%" height="15" fill="rgb(230,181,4)" fg:x="1188" fg:w="7"/><text x="95.7484%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.4984%" y="437" width="0.5627%" height="15" fill="rgb(216,219,49)" fg:x="1188" fg:w="7"/><text x="95.7484%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="95.5788%" y="421" width="0.4823%" height="15" fill="rgb(254,144,0)" fg:x="1189" fg:w="6"/><text x="95.8288%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="95.5788%" y="405" width="0.4823%" height="15" fill="rgb(205,209,38)" fg:x="1189" fg:w="6"/><text x="95.8288%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="95.5788%" y="389" width="0.4823%" height="15" fill="rgb(240,21,42)" fg:x="1189" fg:w="6"/><text x="95.8288%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9807%" y="373" width="0.0804%" height="15" fill="rgb(241,132,3)" fg:x="1194" fg:w="1"/><text x="96.2307%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9807%" y="357" width="0.0804%" height="15" fill="rgb(225,14,2)" fg:x="1194" fg:w="1"/><text x="96.2307%" y="367.50"></text></g><g><title>engine::session::internal::Added::find_refs (11 samples, 0.88%)</title><rect x="95.2572%" y="549" width="0.8842%" height="15" fill="rgb(210,141,35)" fg:x="1185" fg:w="11"/><text x="95.5072%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (11 samples, 0.88%)</title><rect x="95.2572%" y="533" width="0.8842%" height="15" fill="rgb(251,14,44)" fg:x="1185" fg:w="11"/><text x="95.5072%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.0611%" y="517" width="0.0804%" height="15" fill="rgb(247,48,18)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0611%" y="501" width="0.0804%" height="15" fill="rgb(225,0,40)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.0611%" y="485" width="0.0804%" height="15" fill="rgb(221,31,33)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0611%" y="469" width="0.0804%" height="15" fill="rgb(237,42,40)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0611%" y="453" width="0.0804%" height="15" fill="rgb(233,51,29)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0611%" y="437" width="0.0804%" height="15" fill="rgb(226,58,20)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.0611%" y="421" width="0.0804%" height="15" fill="rgb(208,98,7)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0611%" y="405" width="0.0804%" height="15" fill="rgb(228,143,44)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0611%" y="389" width="0.0804%" height="15" fill="rgb(246,55,38)" fg:x="1195" fg:w="1"/><text x="96.3111%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.1415%" y="501" width="0.1608%" height="15" fill="rgb(247,87,16)" fg:x="1196" fg:w="2"/><text x="96.3915%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.1415%" y="485" width="0.1608%" height="15" fill="rgb(234,129,42)" fg:x="1196" fg:w="2"/><text x="96.3915%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2219%" y="469" width="0.0804%" height="15" fill="rgb(220,82,16)" fg:x="1197" fg:w="1"/><text x="96.4719%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2219%" y="453" width="0.0804%" height="15" fill="rgb(211,88,4)" fg:x="1197" fg:w="1"/><text x="96.4719%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.1415%" y="517" width="0.2412%" height="15" fill="rgb(248,151,21)" fg:x="1196" fg:w="3"/><text x="96.3915%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3023%" y="501" width="0.0804%" height="15" fill="rgb(238,163,6)" fg:x="1198" fg:w="1"/><text x="96.5523%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="96.1415%" y="533" width="0.3215%" height="15" fill="rgb(209,183,11)" fg:x="1196" fg:w="4"/><text x="96.3915%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3826%" y="517" width="0.0804%" height="15" fill="rgb(219,37,20)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3826%" y="501" width="0.0804%" height="15" fill="rgb(210,158,4)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.3826%" y="485" width="0.0804%" height="15" fill="rgb(221,167,53)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.3826%" y="469" width="0.0804%" height="15" fill="rgb(237,151,45)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.3826%" y="453" width="0.0804%" height="15" fill="rgb(231,39,3)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3826%" y="437" width="0.0804%" height="15" fill="rgb(212,167,28)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3826%" y="421" width="0.0804%" height="15" fill="rgb(232,178,8)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3826%" y="405" width="0.0804%" height="15" fill="rgb(225,151,20)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.3826%" y="389" width="0.0804%" height="15" fill="rgb(238,3,37)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.3826%" y="373" width="0.0804%" height="15" fill="rgb(251,147,42)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.3826%" y="357" width="0.0804%" height="15" fill="rgb(208,173,10)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3826%" y="341" width="0.0804%" height="15" fill="rgb(246,225,4)" fg:x="1199" fg:w="1"/><text x="96.6326%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4630%" y="485" width="0.0804%" height="15" fill="rgb(248,102,6)" fg:x="1200" fg:w="1"/><text x="96.7130%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.5434%" y="405" width="0.0804%" height="15" fill="rgb(232,6,21)" fg:x="1201" fg:w="1"/><text x="96.7934%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.5434%" y="389" width="0.0804%" height="15" fill="rgb(221,179,22)" fg:x="1201" fg:w="1"/><text x="96.7934%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.5434%" y="373" width="0.0804%" height="15" fill="rgb(252,50,20)" fg:x="1201" fg:w="1"/><text x="96.7934%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.5434%" y="437" width="0.1608%" height="15" fill="rgb(222,56,38)" fg:x="1201" fg:w="2"/><text x="96.7934%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.5434%" y="421" width="0.1608%" height="15" fill="rgb(206,193,29)" fg:x="1201" fg:w="2"/><text x="96.7934%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="96.6238%" y="405" width="0.0804%" height="15" fill="rgb(239,192,45)" fg:x="1202" fg:w="1"/><text x="96.8738%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6238%" y="389" width="0.0804%" height="15" fill="rgb(254,18,36)" fg:x="1202" fg:w="1"/><text x="96.8738%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.6238%" y="373" width="0.0804%" height="15" fill="rgb(221,127,11)" fg:x="1202" fg:w="1"/><text x="96.8738%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.6238%" y="357" width="0.0804%" height="15" fill="rgb(234,146,35)" fg:x="1202" fg:w="1"/><text x="96.8738%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6238%" y="341" width="0.0804%" height="15" fill="rgb(254,201,37)" fg:x="1202" fg:w="1"/><text x="96.8738%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7042%" y="405" width="0.0804%" height="15" fill="rgb(211,202,23)" fg:x="1203" fg:w="1"/><text x="96.9542%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="96.7042%" y="437" width="0.1608%" height="15" fill="rgb(237,91,2)" fg:x="1203" fg:w="2"/><text x="96.9542%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.7042%" y="421" width="0.1608%" height="15" fill="rgb(226,228,36)" fg:x="1203" fg:w="2"/><text x="96.9542%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.7846%" y="405" width="0.0804%" height="15" fill="rgb(213,63,50)" fg:x="1204" fg:w="1"/><text x="97.0346%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.7846%" y="389" width="0.0804%" height="15" fill="rgb(235,194,19)" fg:x="1204" fg:w="1"/><text x="97.0346%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (8 samples, 0.64%)</title><rect x="96.5434%" y="485" width="0.6431%" height="15" fill="rgb(207,204,18)" fg:x="1201" fg:w="8"/><text x="96.7934%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="96.5434%" y="469" width="0.6431%" height="15" fill="rgb(248,8,7)" fg:x="1201" fg:w="8"/><text x="96.7934%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="96.5434%" y="453" width="0.6431%" height="15" fill="rgb(223,145,47)" fg:x="1201" fg:w="8"/><text x="96.7934%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.8650%" y="437" width="0.3215%" height="15" fill="rgb(228,84,11)" fg:x="1205" fg:w="4"/><text x="97.1150%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.8650%" y="421" width="0.3215%" height="15" fill="rgb(218,76,45)" fg:x="1205" fg:w="4"/><text x="97.1150%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="97.0257%" y="405" width="0.1608%" height="15" fill="rgb(223,80,15)" fg:x="1207" fg:w="2"/><text x="97.2757%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="97.0257%" y="389" width="0.1608%" height="15" fill="rgb(219,218,33)" fg:x="1207" fg:w="2"/><text x="97.2757%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.1061%" y="373" width="0.0804%" height="15" fill="rgb(208,51,11)" fg:x="1208" fg:w="1"/><text x="97.3561%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1061%" y="357" width="0.0804%" height="15" fill="rgb(229,165,39)" fg:x="1208" fg:w="1"/><text x="97.3561%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.1061%" y="341" width="0.0804%" height="15" fill="rgb(241,100,24)" fg:x="1208" fg:w="1"/><text x="97.3561%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.80%)</title><rect x="96.4630%" y="533" width="0.8039%" height="15" fill="rgb(228,14,23)" fg:x="1200" fg:w="10"/><text x="96.7130%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="96.4630%" y="517" width="0.8039%" height="15" fill="rgb(247,116,52)" fg:x="1200" fg:w="10"/><text x="96.7130%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="96.4630%" y="501" width="0.8039%" height="15" fill="rgb(216,149,33)" fg:x="1200" fg:w="10"/><text x="96.7130%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1865%" y="485" width="0.0804%" height="15" fill="rgb(238,142,29)" fg:x="1209" fg:w="1"/><text x="97.4365%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1865%" y="469" width="0.0804%" height="15" fill="rgb(224,83,40)" fg:x="1209" fg:w="1"/><text x="97.4365%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4277%" y="389" width="0.0804%" height="15" fill="rgb(234,165,11)" fg:x="1212" fg:w="1"/><text x="97.6777%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4277%" y="373" width="0.0804%" height="15" fill="rgb(215,96,23)" fg:x="1212" fg:w="1"/><text x="97.6777%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4277%" y="357" width="0.0804%" height="15" fill="rgb(233,179,26)" fg:x="1212" fg:w="1"/><text x="97.6777%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4277%" y="341" width="0.0804%" height="15" fill="rgb(225,129,33)" fg:x="1212" fg:w="1"/><text x="97.6777%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.4277%" y="325" width="0.0804%" height="15" fill="rgb(237,49,13)" fg:x="1212" fg:w="1"/><text x="97.6777%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.4277%" y="405" width="0.2412%" height="15" fill="rgb(211,3,31)" fg:x="1212" fg:w="3"/><text x="97.6777%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5080%" y="389" width="0.1608%" height="15" fill="rgb(216,152,19)" fg:x="1213" fg:w="2"/><text x="97.7580%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.5884%" y="373" width="0.0804%" height="15" fill="rgb(251,121,35)" fg:x="1214" fg:w="1"/><text x="97.8384%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5884%" y="357" width="0.0804%" height="15" fill="rgb(210,217,47)" fg:x="1214" fg:w="1"/><text x="97.8384%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (45 samples, 3.62%)</title><rect x="94.1318%" y="565" width="3.6174%" height="15" fill="rgb(244,116,22)" fg:x="1171" fg:w="45"/><text x="94.3818%" y="575.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="96.1415%" y="549" width="1.6077%" height="15" fill="rgb(228,17,21)" fg:x="1196" fg:w="20"/><text x="96.3915%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="97.2669%" y="533" width="0.4823%" height="15" fill="rgb(240,149,34)" fg:x="1210" fg:w="6"/><text x="97.5169%" y="543.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="97.2669%" y="517" width="0.4823%" height="15" fill="rgb(208,125,47)" fg:x="1210" fg:w="6"/><text x="97.5169%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="97.2669%" y="501" width="0.4823%" height="15" fill="rgb(249,186,39)" fg:x="1210" fg:w="6"/><text x="97.5169%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="97.2669%" y="485" width="0.4823%" height="15" fill="rgb(240,220,33)" fg:x="1210" fg:w="6"/><text x="97.5169%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="97.4277%" y="469" width="0.3215%" height="15" fill="rgb(243,110,23)" fg:x="1212" fg:w="4"/><text x="97.6777%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.4277%" y="453" width="0.3215%" height="15" fill="rgb(219,163,46)" fg:x="1212" fg:w="4"/><text x="97.6777%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="97.4277%" y="437" width="0.3215%" height="15" fill="rgb(216,126,30)" fg:x="1212" fg:w="4"/><text x="97.6777%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.4277%" y="421" width="0.3215%" height="15" fill="rgb(208,139,11)" fg:x="1212" fg:w="4"/><text x="97.6777%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.6688%" y="405" width="0.0804%" height="15" fill="rgb(213,118,36)" fg:x="1215" fg:w="1"/><text x="97.9188%" y="415.50"></text></g><g><title>engine::session::internal::Added::find_refs (2 samples, 0.16%)</title><rect x="97.7492%" y="565" width="0.1608%" height="15" fill="rgb(226,43,17)" fg:x="1216" fg:w="2"/><text x="97.9992%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.7492%" y="549" width="0.1608%" height="15" fill="rgb(254,217,4)" fg:x="1216" fg:w="2"/><text x="97.9992%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8296%" y="533" width="0.0804%" height="15" fill="rgb(210,134,47)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8296%" y="517" width="0.0804%" height="15" fill="rgb(237,24,49)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8296%" y="501" width="0.0804%" height="15" fill="rgb(251,39,46)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8296%" y="485" width="0.0804%" height="15" fill="rgb(251,220,3)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8296%" y="469" width="0.0804%" height="15" fill="rgb(228,105,12)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8296%" y="453" width="0.0804%" height="15" fill="rgb(215,196,1)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8296%" y="437" width="0.0804%" height="15" fill="rgb(214,33,39)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8296%" y="421" width="0.0804%" height="15" fill="rgb(220,19,52)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="431.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8296%" y="405" width="0.0804%" height="15" fill="rgb(221,78,38)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8296%" y="389" width="0.0804%" height="15" fill="rgb(253,30,16)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8296%" y="373" width="0.0804%" height="15" fill="rgb(242,65,0)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="383.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8296%" y="357" width="0.0804%" height="15" fill="rgb(235,201,12)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8296%" y="341" width="0.0804%" height="15" fill="rgb(233,161,9)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8296%" y="325" width="0.0804%" height="15" fill="rgb(241,207,41)" fg:x="1217" fg:w="1"/><text x="98.0796%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9100%" y="549" width="0.0804%" height="15" fill="rgb(212,69,46)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9100%" y="533" width="0.0804%" height="15" fill="rgb(239,69,45)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9100%" y="517" width="0.0804%" height="15" fill="rgb(242,117,48)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9100%" y="501" width="0.0804%" height="15" fill="rgb(228,41,36)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9100%" y="485" width="0.0804%" height="15" fill="rgb(212,3,32)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9100%" y="469" width="0.0804%" height="15" fill="rgb(233,41,49)" fg:x="1218" fg:w="1"/><text x="98.1600%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.9904%" y="549" width="0.0804%" height="15" fill="rgb(252,170,49)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9904%" y="533" width="0.0804%" height="15" fill="rgb(229,53,26)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9904%" y="517" width="0.0804%" height="15" fill="rgb(217,157,12)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9904%" y="501" width="0.0804%" height="15" fill="rgb(227,17,9)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9904%" y="485" width="0.0804%" height="15" fill="rgb(218,84,12)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9904%" y="469" width="0.0804%" height="15" fill="rgb(212,79,24)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9904%" y="453" width="0.0804%" height="15" fill="rgb(217,222,37)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.9904%" y="437" width="0.0804%" height="15" fill="rgb(246,208,8)" fg:x="1219" fg:w="1"/><text x="98.2404%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0707%" y="453" width="0.0804%" height="15" fill="rgb(244,133,10)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0707%" y="437" width="0.0804%" height="15" fill="rgb(209,219,41)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0707%" y="421" width="0.0804%" height="15" fill="rgb(253,175,45)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0707%" y="405" width="0.0804%" height="15" fill="rgb(235,100,37)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0707%" y="389" width="0.0804%" height="15" fill="rgb(225,87,19)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0707%" y="373" width="0.0804%" height="15" fill="rgb(217,152,17)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0707%" y="357" width="0.0804%" height="15" fill="rgb(235,72,13)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.0707%" y="341" width="0.0804%" height="15" fill="rgb(233,140,18)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0707%" y="325" width="0.0804%" height="15" fill="rgb(207,212,28)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.0707%" y="309" width="0.0804%" height="15" fill="rgb(220,130,25)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.0707%" y="293" width="0.0804%" height="15" fill="rgb(205,55,34)" fg:x="1220" fg:w="1"/><text x="98.3207%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.1511%" y="405" width="0.0804%" height="15" fill="rgb(237,54,35)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.1511%" y="389" width="0.0804%" height="15" fill="rgb(208,67,23)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1511%" y="373" width="0.0804%" height="15" fill="rgb(206,207,50)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.1511%" y="357" width="0.0804%" height="15" fill="rgb(213,211,42)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.1511%" y="341" width="0.0804%" height="15" fill="rgb(252,197,50)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.1511%" y="325" width="0.0804%" height="15" fill="rgb(251,211,41)" fg:x="1221" fg:w="1"/><text x="98.4011%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.0707%" y="501" width="0.2412%" height="15" fill="rgb(229,211,5)" fg:x="1220" fg:w="3"/><text x="98.3207%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.0707%" y="485" width="0.2412%" height="15" fill="rgb(239,36,31)" fg:x="1220" fg:w="3"/><text x="98.3207%" y="495.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.0707%" y="469" width="0.2412%" height="15" fill="rgb(248,67,31)" fg:x="1220" fg:w="3"/><text x="98.3207%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1511%" y="453" width="0.1608%" height="15" fill="rgb(249,55,44)" fg:x="1221" fg:w="2"/><text x="98.4011%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.1511%" y="437" width="0.1608%" height="15" fill="rgb(216,82,12)" fg:x="1221" fg:w="2"/><text x="98.4011%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="98.1511%" y="421" width="0.1608%" height="15" fill="rgb(242,174,1)" fg:x="1221" fg:w="2"/><text x="98.4011%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.2315%" y="405" width="0.0804%" height="15" fill="rgb(208,120,29)" fg:x="1222" fg:w="1"/><text x="98.4815%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2315%" y="389" width="0.0804%" height="15" fill="rgb(221,105,43)" fg:x="1222" fg:w="1"/><text x="98.4815%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2315%" y="373" width="0.0804%" height="15" fill="rgb(234,124,22)" fg:x="1222" fg:w="1"/><text x="98.4815%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="98.0707%" y="549" width="0.3215%" height="15" fill="rgb(212,23,30)" fg:x="1220" fg:w="4"/><text x="98.3207%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.0707%" y="533" width="0.3215%" height="15" fill="rgb(219,122,53)" fg:x="1220" fg:w="4"/><text x="98.3207%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.0707%" y="517" width="0.3215%" height="15" fill="rgb(248,84,24)" fg:x="1220" fg:w="4"/><text x="98.3207%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3119%" y="501" width="0.0804%" height="15" fill="rgb(245,115,18)" fg:x="1223" fg:w="1"/><text x="98.5619%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.3923%" y="485" width="0.0804%" height="15" fill="rgb(227,176,51)" fg:x="1224" fg:w="1"/><text x="98.6423%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3923%" y="469" width="0.0804%" height="15" fill="rgb(229,63,42)" fg:x="1224" fg:w="1"/><text x="98.6423%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3923%" y="453" width="0.0804%" height="15" fill="rgb(247,202,24)" fg:x="1224" fg:w="1"/><text x="98.6423%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3923%" y="437" width="0.0804%" height="15" fill="rgb(244,173,20)" fg:x="1224" fg:w="1"/><text x="98.6423%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (55 samples, 4.42%)</title><rect x="94.1318%" y="581" width="4.4212%" height="15" fill="rgb(242,81,47)" fg:x="1171" fg:w="55"/><text x="94.3818%" y="591.50">engin..</text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="97.9100%" y="565" width="0.6431%" height="15" fill="rgb(231,185,54)" fg:x="1218" fg:w="8"/><text x="98.1600%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.3923%" y="549" width="0.1608%" height="15" fill="rgb(243,55,32)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="559.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.3923%" y="533" width="0.1608%" height="15" fill="rgb(208,167,19)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.3923%" y="517" width="0.1608%" height="15" fill="rgb(231,72,35)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3923%" y="501" width="0.1608%" height="15" fill="rgb(250,173,51)" fg:x="1224" fg:w="2"/><text x="98.6423%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.4727%" y="485" width="0.0804%" height="15" fill="rgb(209,5,22)" fg:x="1225" fg:w="1"/><text x="98.7227%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.4727%" y="469" width="0.0804%" height="15" fill="rgb(250,174,19)" fg:x="1225" fg:w="1"/><text x="98.7227%" y="479.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="98.5531%" y="581" width="0.0804%" height="15" fill="rgb(217,3,49)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="98.5531%" y="565" width="0.0804%" height="15" fill="rgb(218,225,5)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.5531%" y="549" width="0.0804%" height="15" fill="rgb(236,89,11)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.5531%" y="533" width="0.0804%" height="15" fill="rgb(206,33,28)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.5531%" y="517" width="0.0804%" height="15" fill="rgb(241,56,42)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.5531%" y="501" width="0.0804%" height="15" fill="rgb(222,44,11)" fg:x="1226" fg:w="1"/><text x="98.8031%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.6334%" y="565" width="0.1608%" height="15" fill="rgb(234,111,20)" fg:x="1227" fg:w="2"/><text x="98.8834%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.6334%" y="549" width="0.1608%" height="15" fill="rgb(237,77,6)" fg:x="1227" fg:w="2"/><text x="98.8834%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7138%" y="533" width="0.0804%" height="15" fill="rgb(235,111,23)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7138%" y="517" width="0.0804%" height="15" fill="rgb(251,135,29)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.7138%" y="501" width="0.0804%" height="15" fill="rgb(217,57,1)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7138%" y="485" width="0.0804%" height="15" fill="rgb(249,119,31)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7138%" y="469" width="0.0804%" height="15" fill="rgb(233,164,33)" fg:x="1228" fg:w="1"/><text x="98.9638%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7942%" y="533" width="0.0804%" height="15" fill="rgb(250,217,43)" fg:x="1229" fg:w="1"/><text x="99.0442%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7942%" y="517" width="0.0804%" height="15" fill="rgb(232,154,50)" fg:x="1229" fg:w="1"/><text x="99.0442%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7942%" y="501" width="0.0804%" height="15" fill="rgb(227,190,8)" fg:x="1229" fg:w="1"/><text x="99.0442%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.7942%" y="565" width="0.1608%" height="15" fill="rgb(209,217,32)" fg:x="1229" fg:w="2"/><text x="99.0442%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.7942%" y="549" width="0.1608%" height="15" fill="rgb(243,203,50)" fg:x="1229" fg:w="2"/><text x="99.0442%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8746%" y="533" width="0.0804%" height="15" fill="rgb(232,152,27)" fg:x="1230" fg:w="1"/><text x="99.1246%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8746%" y="517" width="0.0804%" height="15" fill="rgb(240,34,29)" fg:x="1230" fg:w="1"/><text x="99.1246%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="98.6334%" y="581" width="0.4019%" height="15" fill="rgb(215,185,52)" fg:x="1227" fg:w="5"/><text x="98.8834%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.9550%" y="565" width="0.0804%" height="15" fill="rgb(240,89,49)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="549" width="0.0804%" height="15" fill="rgb(225,12,52)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9550%" y="533" width="0.0804%" height="15" fill="rgb(239,128,45)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="517" width="0.0804%" height="15" fill="rgb(211,78,47)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="501" width="0.0804%" height="15" fill="rgb(232,31,21)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="485" width="0.0804%" height="15" fill="rgb(222,168,14)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.9550%" y="469" width="0.0804%" height="15" fill="rgb(209,128,24)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="453" width="0.0804%" height="15" fill="rgb(249,35,13)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="98.9550%" y="437" width="0.0804%" height="15" fill="rgb(218,7,2)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="98.9550%" y="421" width="0.0804%" height="15" fill="rgb(238,107,27)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="98.9550%" y="405" width="0.0804%" height="15" fill="rgb(217,88,38)" fg:x="1231" fg:w="1"/><text x="99.2050%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.0354%" y="533" width="0.0804%" height="15" fill="rgb(230,207,0)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0354%" y="517" width="0.0804%" height="15" fill="rgb(249,64,54)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0354%" y="501" width="0.0804%" height="15" fill="rgb(231,7,11)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0354%" y="485" width="0.0804%" height="15" fill="rgb(205,149,21)" fg:x="1232" fg:w="1"/><text x="99.2854%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="99.1961%" y="485" width="0.0804%" height="15" fill="rgb(215,126,34)" fg:x="1234" fg:w="1"/><text x="99.4461%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2765%" y="453" width="0.0804%" height="15" fill="rgb(241,132,45)" fg:x="1235" fg:w="1"/><text x="99.5265%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2765%" y="437" width="0.0804%" height="15" fill="rgb(252,69,32)" fg:x="1235" fg:w="1"/><text x="99.5265%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2765%" y="421" width="0.0804%" height="15" fill="rgb(232,204,19)" fg:x="1235" fg:w="1"/><text x="99.5265%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.3569%" y="437" width="0.0804%" height="15" fill="rgb(249,15,47)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3569%" y="421" width="0.0804%" height="15" fill="rgb(209,227,23)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3569%" y="405" width="0.0804%" height="15" fill="rgb(248,92,24)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3569%" y="389" width="0.0804%" height="15" fill="rgb(247,59,2)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.3569%" y="373" width="0.0804%" height="15" fill="rgb(221,30,5)" fg:x="1236" fg:w="1"/><text x="99.6069%" y="383.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.2765%" y="485" width="0.3215%" height="15" fill="rgb(208,108,53)" fg:x="1235" fg:w="4"/><text x="99.5265%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.2765%" y="469" width="0.3215%" height="15" fill="rgb(211,183,26)" fg:x="1235" fg:w="4"/><text x="99.5265%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.3569%" y="453" width="0.2412%" height="15" fill="rgb(232,132,4)" fg:x="1236" fg:w="3"/><text x="99.6069%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="99.4373%" y="437" width="0.1608%" height="15" fill="rgb(253,128,37)" fg:x="1237" fg:w="2"/><text x="99.6873%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5177%" y="421" width="0.0804%" height="15" fill="rgb(221,58,24)" fg:x="1238" fg:w="1"/><text x="99.7677%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="99.1158%" y="533" width="0.5627%" height="15" fill="rgb(230,54,45)" fg:x="1233" fg:w="7"/><text x="99.3658%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="99.1158%" y="517" width="0.5627%" height="15" fill="rgb(254,21,18)" fg:x="1233" fg:w="7"/><text x="99.3658%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="99.1158%" y="501" width="0.5627%" height="15" fill="rgb(221,108,0)" fg:x="1233" fg:w="7"/><text x="99.3658%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5981%" y="485" width="0.0804%" height="15" fill="rgb(206,95,1)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5981%" y="469" width="0.0804%" height="15" fill="rgb(237,52,5)" fg:x="1239" fg:w="1"/><text x="99.8481%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.72%)</title><rect x="99.0354%" y="565" width="0.7235%" height="15" fill="rgb(218,150,34)" fg:x="1232" fg:w="9"/><text x="99.2854%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="99.0354%" y="549" width="0.7235%" height="15" fill="rgb(235,194,28)" fg:x="1232" fg:w="9"/><text x="99.2854%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (1 samples, 0.08%)</title><rect x="99.6785%" y="533" width="0.0804%" height="15" fill="rgb(245,92,18)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="543.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.6785%" y="517" width="0.0804%" height="15" fill="rgb(253,203,53)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6785%" y="501" width="0.0804%" height="15" fill="rgb(249,185,47)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6785%" y="485" width="0.0804%" height="15" fill="rgb(252,194,52)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6785%" y="469" width="0.0804%" height="15" fill="rgb(210,53,36)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6785%" y="453" width="0.0804%" height="15" fill="rgb(237,37,25)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6785%" y="437" width="0.0804%" height="15" fill="rgb(242,116,27)" fg:x="1240" fg:w="1"/><text x="99.9285%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.7588%" y="549" width="0.0804%" height="15" fill="rgb(213,185,26)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.7588%" y="533" width="0.0804%" height="15" fill="rgb(225,204,8)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7588%" y="517" width="0.0804%" height="15" fill="rgb(254,111,37)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="99.7588%" y="501" width="0.0804%" height="15" fill="rgb(242,35,9)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7588%" y="485" width="0.0804%" height="15" fill="rgb(232,138,49)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.7588%" y="469" width="0.0804%" height="15" fill="rgb(247,56,4)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7588%" y="453" width="0.0804%" height="15" fill="rgb(226,179,17)" fg:x="1241" fg:w="1"/><text x="100.0088%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="99.8392%" y="533" width="0.0804%" height="15" fill="rgb(216,163,45)" fg:x="1242" fg:w="1"/><text x="100.0892%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8392%" y="517" width="0.0804%" height="15" fill="rgb(211,157,3)" fg:x="1242" fg:w="1"/><text x="100.0892%" y="527.50"></text></g><g><title>all (1,244 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(234,44,20)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="975.50"></text></g><g><title>simple-d0356034 (1,244 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(254,138,23)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="959.50">simple-d0356034</text></g><g><title>_start (1,244 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(206,119,39)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="943.50">_start</text></g><g><title>__libc_start_main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(231,105,52)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="927.50">__libc_start_main</text></g><g><title>main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(250,20,5)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="911.50">main</text></g><g><title>std::rt::lang_start_internal (1,244 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(215,198,30)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,244 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,142,8)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,244 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(243,26,38)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,244 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(205,133,28)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,244 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(212,34,0)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="831.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,244 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(251,226,22)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,244 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(252,119,9)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,244 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(213,150,50)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,244 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(212,24,39)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,244 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(213,46,39)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="751.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,244 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(239,106,12)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,244 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(249,229,21)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="719.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,244 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(212,158,3)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,244 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(253,26,48)" fg:x="0" fg:w="1244"/><text x="0.2500%" y="687.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (358 samples, 28.78%)</title><rect x="71.2219%" y="661" width="28.7781%" height="15" fill="rgb(238,178,20)" fg:x="886" fg:w="358"/><text x="71.4719%" y="671.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criter..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (358 samples, 28.78%)</title><rect x="71.2219%" y="645" width="28.7781%" height="15" fill="rgb(208,86,15)" fg:x="886" fg:w="358"/><text x="71.4719%" y="655.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (358 samples, 28.78%)</title><rect x="71.2219%" y="629" width="28.7781%" height="15" fill="rgb(239,42,53)" fg:x="886" fg:w="358"/><text x="71.4719%" y="639.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (117 samples, 9.41%)</title><rect x="90.5949%" y="613" width="9.4051%" height="15" fill="rgb(245,226,8)" fg:x="1127" fg:w="117"/><text x="90.8449%" y="623.50">engine::sessi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (117 samples, 9.41%)</title><rect x="90.5949%" y="597" width="9.4051%" height="15" fill="rgb(216,176,32)" fg:x="1127" fg:w="117"/><text x="90.8449%" y="607.50">engine::sessi..</text></g><g><title>kernel::model::entry::EntryResolver::world (12 samples, 0.96%)</title><rect x="99.0354%" y="581" width="0.9646%" height="15" fill="rgb(231,186,21)" fg:x="1232" fg:w="12"/><text x="99.2854%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.7588%" y="565" width="0.2412%" height="15" fill="rgb(205,95,49)" fg:x="1241" fg:w="3"/><text x="100.0088%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.8392%" y="549" width="0.1608%" height="15" fill="rgb(217,145,8)" fg:x="1242" fg:w="2"/><text x="100.0892%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9196%" y="533" width="0.0804%" height="15" fill="rgb(239,144,48)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9196%" y="517" width="0.0804%" height="15" fill="rgb(214,189,23)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9196%" y="501" width="0.0804%" height="15" fill="rgb(229,157,17)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.9196%" y="485" width="0.0804%" height="15" fill="rgb(230,5,48)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9196%" y="469" width="0.0804%" height="15" fill="rgb(224,156,48)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9196%" y="453" width="0.0804%" height="15" fill="rgb(223,14,29)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9196%" y="437" width="0.0804%" height="15" fill="rgb(229,96,36)" fg:x="1243" fg:w="1"/><text x="100.1696%" y="447.50"></text></g></svg></svg>