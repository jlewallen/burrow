<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="1227"><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.0815%" y="565" width="0.1630%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3315%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1630%" y="549" width="0.0815%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.4130%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.0815%" y="597" width="0.2445%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="3"/><text x="0.3315%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="0.0815%" y="581" width="0.2445%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="3"/><text x="0.3315%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.2445%" y="565" width="0.0815%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="1"/><text x="0.4945%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.3260%" y="581" width="0.0815%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="0.5760%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4890%" y="549" width="0.0815%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="1"/><text x="0.7390%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6520%" y="501" width="0.0815%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="1"/><text x="0.9020%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.7335%" y="501" width="0.0815%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="1"/><text x="0.9835%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.8150%" y="485" width="0.2445%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="3"/><text x="1.0650%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8965%" y="469" width="0.1630%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="2"/><text x="1.1465%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.33%)</title><rect x="1.0595%" y="469" width="0.3260%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="4"/><text x="1.3095%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2225%" y="453" width="0.1630%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="2"/><text x="1.4725%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.5485%" y="453" width="0.0815%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="1"/><text x="1.7985%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5485%" y="437" width="0.0815%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="1"/><text x="1.7985%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6300%" y="453" width="0.1630%" height="15" fill="rgb(231,73,38)" fg:x="20" fg:w="2"/><text x="1.8800%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7930%" y="453" width="0.0815%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="1"/><text x="2.0430%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7930%" y="437" width="0.0815%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="1"/><text x="2.0430%" y="447.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.9560%" y="437" width="0.2445%" height="15" fill="rgb(221,200,47)" fg:x="24" fg:w="3"/><text x="2.2060%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.71%)</title><rect x="0.5705%" y="517" width="1.7115%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="21"/><text x="0.8205%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.47%)</title><rect x="0.8150%" y="501" width="1.4670%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="18"/><text x="1.0650%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.22%)</title><rect x="1.0595%" y="485" width="1.2225%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="15"/><text x="1.3095%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="1.3855%" y="469" width="0.8965%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="11"/><text x="1.6355%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="1.8745%" y="453" width="0.4075%" height="15" fill="rgb(247,18,42)" fg:x="23" fg:w="5"/><text x="2.1245%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.2005%" y="437" width="0.0815%" height="15" fill="rgb(241,131,45)" fg:x="27" fg:w="1"/><text x="2.4505%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4450%" y="485" width="0.0815%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="1"/><text x="2.6950%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.5265%" y="485" width="0.1630%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="2"/><text x="2.7765%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.5265%" y="469" width="0.1630%" height="15" fill="rgb(238,160,17)" fg:x="31" fg:w="2"/><text x="2.7765%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.9340%" y="469" width="0.0815%" height="15" fill="rgb(214,148,48)" fg:x="36" fg:w="1"/><text x="3.1840%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.9340%" y="453" width="0.0815%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="1"/><text x="3.1840%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.0155%" y="469" width="0.1630%" height="15" fill="rgb(209,103,24)" fg:x="37" fg:w="2"/><text x="3.2655%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="3.1785%" y="469" width="0.0815%" height="15" fill="rgb(229,88,8)" fg:x="39" fg:w="1"/><text x="3.4285%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1785%" y="453" width="0.0815%" height="15" fill="rgb(213,181,19)" fg:x="39" fg:w="1"/><text x="3.4285%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2600%" y="453" width="0.0815%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="1"/><text x="3.5100%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.14%)</title><rect x="2.3635%" y="501" width="1.1410%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="14"/><text x="2.6135%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="2.6895%" y="485" width="0.8150%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="10"/><text x="2.9395%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="3.2600%" y="469" width="0.2445%" height="15" fill="rgb(226,3,54)" fg:x="40" fg:w="3"/><text x="3.5100%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.3415%" y="453" width="0.1630%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="2"/><text x="3.5915%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4230%" y="437" width="0.0815%" height="15" fill="rgb(238,167,29)" fg:x="42" fg:w="1"/><text x="3.6730%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.30%)</title><rect x="2.2820%" y="517" width="1.3040%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="16"/><text x="2.5320%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5045%" y="501" width="0.0815%" height="15" fill="rgb(231,60,39)" fg:x="43" fg:w="1"/><text x="3.7545%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 3.18%)</title><rect x="0.5705%" y="533" width="3.1785%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="39"/><text x="0.8205%" y="543.50">&lt;al..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="3.5860%" y="517" width="0.1630%" height="15" fill="rgb(235,93,37)" fg:x="44" fg:w="2"/><text x="3.8360%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 3.50%)</title><rect x="0.3260%" y="597" width="3.5045%" height="15" fill="rgb(213,116,39)" fg:x="4" fg:w="43"/><text x="0.5760%" y="607.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (42 samples, 3.42%)</title><rect x="0.4075%" y="581" width="3.4230%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="42"/><text x="0.6575%" y="591.50">cor..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 3.34%)</title><rect x="0.4890%" y="565" width="3.3415%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="41"/><text x="0.7390%" y="575.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (40 samples, 3.26%)</title><rect x="0.5705%" y="549" width="3.2600%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="40"/><text x="0.8205%" y="559.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7490%" y="533" width="0.0815%" height="15" fill="rgb(250,191,14)" fg:x="46" fg:w="1"/><text x="3.9990%" y="543.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.9120%" y="549" width="0.0815%" height="15" fill="rgb(239,60,40)" fg:x="48" fg:w="1"/><text x="4.1620%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.9120%" y="533" width="0.0815%" height="15" fill="rgb(206,27,48)" fg:x="48" fg:w="1"/><text x="4.1620%" y="543.50"></text></g><g><title>__strerror_r (1 samples, 0.08%)</title><rect x="3.9935%" y="453" width="0.0815%" height="15" fill="rgb(225,35,8)" fg:x="49" fg:w="1"/><text x="4.2435%" y="463.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.9935%" y="485" width="0.1630%" height="15" fill="rgb(250,213,24)" fg:x="49" fg:w="2"/><text x="4.2435%" y="495.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="3.9935%" y="469" width="0.1630%" height="15" fill="rgb(247,123,22)" fg:x="49" fg:w="2"/><text x="4.2435%" y="479.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="4.0750%" y="453" width="0.0815%" height="15" fill="rgb(231,138,38)" fg:x="50" fg:w="1"/><text x="4.3250%" y="463.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="4.1565%" y="437" width="0.0815%" height="15" fill="rgb(231,145,46)" fg:x="51" fg:w="1"/><text x="4.4065%" y="447.50"></text></g><g><title>dlopen (8 samples, 0.65%)</title><rect x="4.1565%" y="485" width="0.6520%" height="15" fill="rgb(251,118,11)" fg:x="51" fg:w="8"/><text x="4.4065%" y="495.50"></text></g><g><title>_dl_catch_error (8 samples, 0.65%)</title><rect x="4.1565%" y="469" width="0.6520%" height="15" fill="rgb(217,147,25)" fg:x="51" fg:w="8"/><text x="4.4065%" y="479.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.65%)</title><rect x="4.1565%" y="453" width="0.6520%" height="15" fill="rgb(247,81,37)" fg:x="51" fg:w="8"/><text x="4.4065%" y="463.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.57%)</title><rect x="4.2380%" y="437" width="0.5705%" height="15" fill="rgb(209,12,38)" fg:x="52" fg:w="7"/><text x="4.4880%" y="447.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.57%)</title><rect x="4.2380%" y="421" width="0.5705%" height="15" fill="rgb(227,1,9)" fg:x="52" fg:w="7"/><text x="4.4880%" y="431.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="4.7270%" y="405" width="0.0815%" height="15" fill="rgb(248,47,43)" fg:x="58" fg:w="1"/><text x="4.9770%" y="415.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="4.7270%" y="389" width="0.0815%" height="15" fill="rgb(221,10,30)" fg:x="58" fg:w="1"/><text x="4.9770%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.7270%" y="373" width="0.0815%" height="15" fill="rgb(210,229,1)" fg:x="58" fg:w="1"/><text x="4.9770%" y="383.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.98%)</title><rect x="3.9935%" y="517" width="0.9780%" height="15" fill="rgb(222,148,37)" fg:x="49" fg:w="12"/><text x="4.2435%" y="527.50"></text></g><g><title>libloading::safe::Library::new (12 samples, 0.98%)</title><rect x="3.9935%" y="501" width="0.9780%" height="15" fill="rgb(234,67,33)" fg:x="49" fg:w="12"/><text x="4.2435%" y="511.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="4.8085%" y="485" width="0.1630%" height="15" fill="rgb(247,98,35)" fg:x="59" fg:w="2"/><text x="5.0585%" y="495.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="4.8085%" y="469" width="0.1630%" height="15" fill="rgb(247,138,52)" fg:x="59" fg:w="2"/><text x="5.0585%" y="479.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="4.8085%" y="453" width="0.1630%" height="15" fill="rgb(213,79,30)" fg:x="59" fg:w="2"/><text x="5.0585%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="4.8900%" y="437" width="0.0815%" height="15" fill="rgb(246,177,23)" fg:x="60" fg:w="1"/><text x="5.1400%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.8900%" y="421" width="0.0815%" height="15" fill="rgb(230,62,27)" fg:x="60" fg:w="1"/><text x="5.1400%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.8900%" y="405" width="0.0815%" height="15" fill="rgb(216,154,8)" fg:x="60" fg:w="1"/><text x="5.1400%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.8900%" y="389" width="0.0815%" height="15" fill="rgb(244,35,45)" fg:x="60" fg:w="1"/><text x="5.1400%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.8900%" y="373" width="0.0815%" height="15" fill="rgb(251,115,12)" fg:x="60" fg:w="1"/><text x="5.1400%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.8900%" y="357" width="0.0815%" height="15" fill="rgb(240,54,50)" fg:x="60" fg:w="1"/><text x="5.1400%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.8900%" y="341" width="0.0815%" height="15" fill="rgb(233,84,52)" fg:x="60" fg:w="1"/><text x="5.1400%" y="351.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.06%)</title><rect x="3.9935%" y="533" width="1.0595%" height="15" fill="rgb(207,117,47)" fg:x="49" fg:w="13"/><text x="4.2435%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.9715%" y="517" width="0.0815%" height="15" fill="rgb(249,43,39)" fg:x="61" fg:w="1"/><text x="5.2215%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.9715%" y="501" width="0.0815%" height="15" fill="rgb(209,38,44)" fg:x="61" fg:w="1"/><text x="5.2215%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="5.0530%" y="485" width="0.0815%" height="15" fill="rgb(236,212,23)" fg:x="62" fg:w="1"/><text x="5.3030%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.0530%" y="469" width="0.0815%" height="15" fill="rgb(242,79,21)" fg:x="62" fg:w="1"/><text x="5.3030%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="5.1345%" y="485" width="0.0815%" height="15" fill="rgb(211,96,35)" fg:x="63" fg:w="1"/><text x="5.3845%" y="495.50"></text></g><g><title>engine::session::Session::initialize (20 samples, 1.63%)</title><rect x="3.9935%" y="549" width="1.6300%" height="15" fill="rgb(253,215,40)" fg:x="49" fg:w="20"/><text x="4.2435%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (7 samples, 0.57%)</title><rect x="5.0530%" y="533" width="0.5705%" height="15" fill="rgb(211,81,21)" fg:x="62" fg:w="7"/><text x="5.3030%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.57%)</title><rect x="5.0530%" y="517" width="0.5705%" height="15" fill="rgb(208,190,38)" fg:x="62" fg:w="7"/><text x="5.3030%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="5.0530%" y="501" width="0.5705%" height="15" fill="rgb(235,213,38)" fg:x="62" fg:w="7"/><text x="5.3030%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.41%)</title><rect x="5.2160%" y="485" width="0.4075%" height="15" fill="rgb(237,122,38)" fg:x="64" fg:w="5"/><text x="5.4660%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.41%)</title><rect x="5.2160%" y="469" width="0.4075%" height="15" fill="rgb(244,218,35)" fg:x="64" fg:w="5"/><text x="5.4660%" y="479.50"></text></g><g><title>realloc (5 samples, 0.41%)</title><rect x="5.2160%" y="453" width="0.4075%" height="15" fill="rgb(240,68,47)" fg:x="64" fg:w="5"/><text x="5.4660%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (29 samples, 2.36%)</title><rect x="3.8305%" y="597" width="2.3635%" height="15" fill="rgb(210,16,53)" fg:x="47" fg:w="29"/><text x="4.0805%" y="607.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (29 samples, 2.36%)</title><rect x="3.8305%" y="581" width="2.3635%" height="15" fill="rgb(235,124,12)" fg:x="47" fg:w="29"/><text x="4.0805%" y="591.50">en..</text></g><g><title>engine::session::Session::new (29 samples, 2.36%)</title><rect x="3.8305%" y="565" width="2.3635%" height="15" fill="rgb(224,169,11)" fg:x="47" fg:w="29"/><text x="4.0805%" y="575.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (7 samples, 0.57%)</title><rect x="5.6235%" y="549" width="0.5705%" height="15" fill="rgb(250,166,2)" fg:x="69" fg:w="7"/><text x="5.8735%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.57%)</title><rect x="5.6235%" y="533" width="0.5705%" height="15" fill="rgb(242,216,29)" fg:x="69" fg:w="7"/><text x="5.8735%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="5.6235%" y="517" width="0.5705%" height="15" fill="rgb(230,116,27)" fg:x="69" fg:w="7"/><text x="5.8735%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.41%)</title><rect x="5.7865%" y="501" width="0.4075%" height="15" fill="rgb(228,99,48)" fg:x="71" fg:w="5"/><text x="6.0365%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="6.0310%" y="485" width="0.1630%" height="15" fill="rgb(253,11,6)" fg:x="74" fg:w="2"/><text x="6.2810%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="6.0310%" y="469" width="0.1630%" height="15" fill="rgb(247,143,39)" fg:x="74" fg:w="2"/><text x="6.2810%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.3570%" y="549" width="0.0815%" height="15" fill="rgb(236,97,10)" fg:x="78" fg:w="1"/><text x="6.6070%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="6.2755%" y="565" width="0.2445%" height="15" fill="rgb(233,208,19)" fg:x="77" fg:w="3"/><text x="6.5255%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.4385%" y="549" width="0.0815%" height="15" fill="rgb(216,164,2)" fg:x="79" fg:w="1"/><text x="6.6885%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4385%" y="533" width="0.0815%" height="15" fill="rgb(220,129,5)" fg:x="79" fg:w="1"/><text x="6.6885%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.5200%" y="533" width="0.0815%" height="15" fill="rgb(242,17,10)" fg:x="80" fg:w="1"/><text x="6.7700%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="6.5200%" y="517" width="0.0815%" height="15" fill="rgb(242,107,0)" fg:x="80" fg:w="1"/><text x="6.7700%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="6.5200%" y="501" width="0.0815%" height="15" fill="rgb(251,28,31)" fg:x="80" fg:w="1"/><text x="6.7700%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5200%" y="485" width="0.0815%" height="15" fill="rgb(233,223,10)" fg:x="80" fg:w="1"/><text x="6.7700%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.5200%" y="469" width="0.0815%" height="15" fill="rgb(215,21,27)" fg:x="80" fg:w="1"/><text x="6.7700%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.5200%" y="453" width="0.0815%" height="15" fill="rgb(232,23,21)" fg:x="80" fg:w="1"/><text x="6.7700%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.5200%" y="437" width="0.0815%" height="15" fill="rgb(244,5,23)" fg:x="80" fg:w="1"/><text x="6.7700%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.5200%" y="421" width="0.0815%" height="15" fill="rgb(226,81,46)" fg:x="80" fg:w="1"/><text x="6.7700%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.5200%" y="405" width="0.0815%" height="15" fill="rgb(247,70,30)" fg:x="80" fg:w="1"/><text x="6.7700%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="6.5200%" y="389" width="0.0815%" height="15" fill="rgb(212,68,19)" fg:x="80" fg:w="1"/><text x="6.7700%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="6.5200%" y="373" width="0.0815%" height="15" fill="rgb(240,187,13)" fg:x="80" fg:w="1"/><text x="6.7700%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="6.5200%" y="357" width="0.0815%" height="15" fill="rgb(223,113,26)" fg:x="80" fg:w="1"/><text x="6.7700%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="6.5200%" y="341" width="0.0815%" height="15" fill="rgb(206,192,2)" fg:x="80" fg:w="1"/><text x="6.7700%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="6.5200%" y="325" width="0.0815%" height="15" fill="rgb(241,108,4)" fg:x="80" fg:w="1"/><text x="6.7700%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="6.6830%" y="485" width="0.0815%" height="15" fill="rgb(247,173,49)" fg:x="82" fg:w="1"/><text x="6.9330%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.8460%" y="469" width="0.0815%" height="15" fill="rgb(224,114,35)" fg:x="84" fg:w="1"/><text x="7.0960%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="6.9275%" y="469" width="0.3260%" height="15" fill="rgb(245,159,27)" fg:x="85" fg:w="4"/><text x="7.1775%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="6.9275%" y="453" width="0.3260%" height="15" fill="rgb(245,172,44)" fg:x="85" fg:w="4"/><text x="7.1775%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.0905%" y="437" width="0.1630%" height="15" fill="rgb(236,23,11)" fg:x="87" fg:w="2"/><text x="7.3405%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1720%" y="421" width="0.0815%" height="15" fill="rgb(205,117,38)" fg:x="88" fg:w="1"/><text x="7.4220%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.1720%" y="405" width="0.0815%" height="15" fill="rgb(237,72,25)" fg:x="88" fg:w="1"/><text x="7.4220%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="7.2535%" y="453" width="0.4890%" height="15" fill="rgb(244,70,9)" fg:x="89" fg:w="6"/><text x="7.5035%" y="463.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="7.4165%" y="437" width="0.3260%" height="15" fill="rgb(217,125,39)" fg:x="91" fg:w="4"/><text x="7.6665%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.5795%" y="421" width="0.1630%" height="15" fill="rgb(235,36,10)" fg:x="93" fg:w="2"/><text x="7.8295%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6610%" y="405" width="0.0815%" height="15" fill="rgb(251,123,47)" fg:x="94" fg:w="1"/><text x="7.9110%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.7425%" y="405" width="0.0815%" height="15" fill="rgb(221,13,13)" fg:x="95" fg:w="1"/><text x="7.9925%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="7.8240%" y="405" width="0.1630%" height="15" fill="rgb(238,131,9)" fg:x="96" fg:w="2"/><text x="8.0740%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.8240%" y="389" width="0.1630%" height="15" fill="rgb(211,50,8)" fg:x="96" fg:w="2"/><text x="8.0740%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9055%" y="373" width="0.0815%" height="15" fill="rgb(245,182,24)" fg:x="97" fg:w="1"/><text x="8.1555%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9055%" y="357" width="0.0815%" height="15" fill="rgb(242,14,37)" fg:x="97" fg:w="1"/><text x="8.1555%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="7.7425%" y="437" width="0.3260%" height="15" fill="rgb(246,228,12)" fg:x="95" fg:w="4"/><text x="7.9925%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="7.7425%" y="421" width="0.3260%" height="15" fill="rgb(213,55,15)" fg:x="95" fg:w="4"/><text x="7.9925%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.9870%" y="405" width="0.0815%" height="15" fill="rgb(209,9,3)" fg:x="98" fg:w="1"/><text x="8.2370%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9870%" y="389" width="0.0815%" height="15" fill="rgb(230,59,30)" fg:x="98" fg:w="1"/><text x="8.2370%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.9870%" y="373" width="0.0815%" height="15" fill="rgb(209,121,21)" fg:x="98" fg:w="1"/><text x="8.2370%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.0685%" y="437" width="0.2445%" height="15" fill="rgb(220,109,13)" fg:x="99" fg:w="3"/><text x="8.3185%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.0685%" y="421" width="0.2445%" height="15" fill="rgb(232,18,1)" fg:x="99" fg:w="3"/><text x="8.3185%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2315%" y="405" width="0.0815%" height="15" fill="rgb(215,41,42)" fg:x="101" fg:w="1"/><text x="8.4815%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2315%" y="389" width="0.0815%" height="15" fill="rgb(224,123,36)" fg:x="101" fg:w="1"/><text x="8.4815%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.3130%" y="421" width="0.2445%" height="15" fill="rgb(240,125,3)" fg:x="102" fg:w="3"/><text x="8.5630%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.3945%" y="405" width="0.1630%" height="15" fill="rgb(205,98,50)" fg:x="103" fg:w="2"/><text x="8.6445%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.3945%" y="389" width="0.1630%" height="15" fill="rgb(205,185,37)" fg:x="103" fg:w="2"/><text x="8.6445%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="8.3945%" y="373" width="0.1630%" height="15" fill="rgb(238,207,15)" fg:x="103" fg:w="2"/><text x="8.6445%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.33%)</title><rect x="8.5575%" y="405" width="0.3260%" height="15" fill="rgb(213,199,42)" fg:x="105" fg:w="4"/><text x="8.8075%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="8.6390%" y="389" width="0.2445%" height="15" fill="rgb(235,201,11)" fg:x="106" fg:w="3"/><text x="8.8890%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8020%" y="373" width="0.0815%" height="15" fill="rgb(207,46,11)" fg:x="108" fg:w="1"/><text x="9.0520%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.8835%" y="389" width="0.0815%" height="15" fill="rgb(241,35,35)" fg:x="109" fg:w="1"/><text x="9.1335%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="8.8835%" y="405" width="0.1630%" height="15" fill="rgb(243,32,47)" fg:x="109" fg:w="2"/><text x="9.1335%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.9650%" y="389" width="0.0815%" height="15" fill="rgb(247,202,23)" fg:x="110" fg:w="1"/><text x="9.2150%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9650%" y="373" width="0.0815%" height="15" fill="rgb(219,102,11)" fg:x="110" fg:w="1"/><text x="9.2150%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="8.5575%" y="421" width="0.6520%" height="15" fill="rgb(243,110,44)" fg:x="105" fg:w="8"/><text x="8.8075%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.0465%" y="405" width="0.1630%" height="15" fill="rgb(222,74,54)" fg:x="111" fg:w="2"/><text x="9.2965%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.0465%" y="389" width="0.1630%" height="15" fill="rgb(216,99,12)" fg:x="111" fg:w="2"/><text x="9.2965%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.1280%" y="373" width="0.0815%" height="15" fill="rgb(226,22,26)" fg:x="112" fg:w="1"/><text x="9.3780%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.98%)</title><rect x="8.3130%" y="437" width="0.9780%" height="15" fill="rgb(217,163,10)" fg:x="102" fg:w="12"/><text x="8.5630%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2095%" y="421" width="0.0815%" height="15" fill="rgb(213,25,53)" fg:x="113" fg:w="1"/><text x="9.4595%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.2095%" y="405" width="0.0815%" height="15" fill="rgb(252,105,26)" fg:x="113" fg:w="1"/><text x="9.4595%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.63%)</title><rect x="7.7425%" y="453" width="1.6300%" height="15" fill="rgb(220,39,43)" fg:x="95" fg:w="20"/><text x="7.9925%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.2910%" y="437" width="0.0815%" height="15" fill="rgb(229,68,48)" fg:x="114" fg:w="1"/><text x="9.5410%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.77%)</title><rect x="6.7645%" y="485" width="2.7710%" height="15" fill="rgb(252,8,32)" fg:x="83" fg:w="34"/><text x="7.0145%" y="495.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.28%)</title><rect x="7.2535%" y="469" width="2.2820%" height="15" fill="rgb(223,20,43)" fg:x="89" fg:w="28"/><text x="7.5035%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.3725%" y="453" width="0.1630%" height="15" fill="rgb(229,81,49)" fg:x="115" fg:w="2"/><text x="9.6225%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.3725%" y="437" width="0.1630%" height="15" fill="rgb(236,28,36)" fg:x="115" fg:w="2"/><text x="9.6225%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.4540%" y="421" width="0.0815%" height="15" fill="rgb(249,185,26)" fg:x="116" fg:w="1"/><text x="9.7040%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.5355%" y="453" width="0.0815%" height="15" fill="rgb(249,174,33)" fg:x="117" fg:w="1"/><text x="9.7855%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="9.7800%" y="437" width="0.1630%" height="15" fill="rgb(233,201,37)" fg:x="120" fg:w="2"/><text x="10.0300%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.0244%" y="421" width="0.1630%" height="15" fill="rgb(221,78,26)" fg:x="123" fg:w="2"/><text x="10.2744%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.0244%" y="405" width="0.1630%" height="15" fill="rgb(250,127,30)" fg:x="123" fg:w="2"/><text x="10.2744%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.1874%" y="405" width="0.0815%" height="15" fill="rgb(230,49,44)" fg:x="125" fg:w="1"/><text x="10.4374%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.2689%" y="405" width="0.1630%" height="15" fill="rgb(229,67,23)" fg:x="126" fg:w="2"/><text x="10.5189%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="10.2689%" y="389" width="0.1630%" height="15" fill="rgb(249,83,47)" fg:x="126" fg:w="2"/><text x="10.5189%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.06%)</title><rect x="9.5355%" y="485" width="1.0595%" height="15" fill="rgb(215,43,3)" fg:x="117" fg:w="13"/><text x="9.7855%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.06%)</title><rect x="9.5355%" y="469" width="1.0595%" height="15" fill="rgb(238,154,13)" fg:x="117" fg:w="13"/><text x="9.7855%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.98%)</title><rect x="9.6170%" y="453" width="0.9780%" height="15" fill="rgb(219,56,2)" fg:x="118" fg:w="12"/><text x="9.8670%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="9.9430%" y="437" width="0.6520%" height="15" fill="rgb(233,0,4)" fg:x="122" fg:w="8"/><text x="10.1930%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="10.1874%" y="421" width="0.4075%" height="15" fill="rgb(235,30,7)" fg:x="125" fg:w="5"/><text x="10.4374%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.4319%" y="405" width="0.1630%" height="15" fill="rgb(250,79,13)" fg:x="128" fg:w="2"/><text x="10.6819%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="10.4319%" y="389" width="0.1630%" height="15" fill="rgb(211,146,34)" fg:x="128" fg:w="2"/><text x="10.6819%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5134%" y="373" width="0.0815%" height="15" fill="rgb(228,22,38)" fg:x="129" fg:w="1"/><text x="10.7634%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.7579%" y="437" width="0.1630%" height="15" fill="rgb(235,168,5)" fg:x="132" fg:w="2"/><text x="11.0079%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8394%" y="421" width="0.0815%" height="15" fill="rgb(221,155,16)" fg:x="133" fg:w="1"/><text x="11.0894%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.8394%" y="405" width="0.0815%" height="15" fill="rgb(215,215,53)" fg:x="133" fg:w="1"/><text x="11.0894%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9209%" y="437" width="0.0815%" height="15" fill="rgb(223,4,10)" fg:x="134" fg:w="1"/><text x="11.1709%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="11.0024%" y="437" width="0.0815%" height="15" fill="rgb(234,103,6)" fg:x="135" fg:w="1"/><text x="11.2524%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.0024%" y="421" width="0.0815%" height="15" fill="rgb(227,97,0)" fg:x="135" fg:w="1"/><text x="11.2524%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0024%" y="405" width="0.0815%" height="15" fill="rgb(234,150,53)" fg:x="135" fg:w="1"/><text x="11.2524%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0024%" y="389" width="0.0815%" height="15" fill="rgb(228,201,54)" fg:x="135" fg:w="1"/><text x="11.2524%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0839%" y="389" width="0.0815%" height="15" fill="rgb(222,22,37)" fg:x="136" fg:w="1"/><text x="11.3339%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0839%" y="373" width="0.0815%" height="15" fill="rgb(237,53,32)" fg:x="136" fg:w="1"/><text x="11.3339%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0839%" y="357" width="0.0815%" height="15" fill="rgb(233,25,53)" fg:x="136" fg:w="1"/><text x="11.3339%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.1654%" y="389" width="0.0815%" height="15" fill="rgb(210,40,34)" fg:x="137" fg:w="1"/><text x="11.4154%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.1654%" y="373" width="0.0815%" height="15" fill="rgb(241,220,44)" fg:x="137" fg:w="1"/><text x="11.4154%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.1654%" y="357" width="0.0815%" height="15" fill="rgb(235,28,35)" fg:x="137" fg:w="1"/><text x="11.4154%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1654%" y="341" width="0.0815%" height="15" fill="rgb(210,56,17)" fg:x="137" fg:w="1"/><text x="11.4154%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.1654%" y="325" width="0.0815%" height="15" fill="rgb(224,130,29)" fg:x="137" fg:w="1"/><text x="11.4154%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1654%" y="309" width="0.0815%" height="15" fill="rgb(235,212,8)" fg:x="137" fg:w="1"/><text x="11.4154%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5729%" y="357" width="0.0815%" height="15" fill="rgb(223,33,50)" fg:x="142" fg:w="1"/><text x="11.8229%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5729%" y="341" width="0.0815%" height="15" fill="rgb(219,149,13)" fg:x="142" fg:w="1"/><text x="11.8229%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="11.5729%" y="325" width="0.0815%" height="15" fill="rgb(250,156,29)" fg:x="142" fg:w="1"/><text x="11.8229%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.6544%" y="325" width="0.2445%" height="15" fill="rgb(216,193,19)" fg:x="143" fg:w="3"/><text x="11.9044%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8174%" y="309" width="0.0815%" height="15" fill="rgb(216,135,14)" fg:x="145" fg:w="1"/><text x="12.0674%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.33%)</title><rect x="11.6544%" y="341" width="0.3260%" height="15" fill="rgb(241,47,5)" fg:x="143" fg:w="4"/><text x="11.9044%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="11.8989%" y="325" width="0.0815%" height="15" fill="rgb(233,42,35)" fg:x="146" fg:w="1"/><text x="12.1489%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8989%" y="309" width="0.0815%" height="15" fill="rgb(231,13,6)" fg:x="146" fg:w="1"/><text x="12.1489%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.06%)</title><rect x="11.0839%" y="421" width="1.0595%" height="15" fill="rgb(207,181,40)" fg:x="136" fg:w="13"/><text x="11.3339%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.06%)</title><rect x="11.0839%" y="405" width="1.0595%" height="15" fill="rgb(254,173,49)" fg:x="136" fg:w="13"/><text x="11.3339%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.90%)</title><rect x="11.2469%" y="389" width="0.8965%" height="15" fill="rgb(221,1,38)" fg:x="138" fg:w="11"/><text x="11.4969%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="11.4099%" y="373" width="0.7335%" height="15" fill="rgb(206,124,46)" fg:x="140" fg:w="9"/><text x="11.6599%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="11.6544%" y="357" width="0.4890%" height="15" fill="rgb(249,21,11)" fg:x="143" fg:w="6"/><text x="11.9044%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.9804%" y="341" width="0.1630%" height="15" fill="rgb(222,201,40)" fg:x="147" fg:w="2"/><text x="12.2304%" y="351.50"></text></g><g><title>engine::session::Session::flush (73 samples, 5.95%)</title><rect x="6.2755%" y="581" width="5.9495%" height="15" fill="rgb(235,61,29)" fg:x="77" fg:w="73"/><text x="6.5255%" y="591.50">engine::..</text></g><g><title>engine::session::state::State::close (70 samples, 5.70%)</title><rect x="6.5200%" y="565" width="5.7050%" height="15" fill="rgb(219,207,3)" fg:x="80" fg:w="70"/><text x="6.7700%" y="575.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (70 samples, 5.70%)</title><rect x="6.5200%" y="549" width="5.7050%" height="15" fill="rgb(222,56,46)" fg:x="80" fg:w="70"/><text x="6.7700%" y="559.50">engine:..</text></g><g><title>core::iter::adapters::try_process (69 samples, 5.62%)</title><rect x="6.6015%" y="533" width="5.6235%" height="15" fill="rgb(239,76,54)" fg:x="81" fg:w="69"/><text x="6.8515%" y="543.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 5.62%)</title><rect x="6.6015%" y="517" width="5.6235%" height="15" fill="rgb(231,124,27)" fg:x="81" fg:w="69"/><text x="6.8515%" y="527.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (69 samples, 5.62%)</title><rect x="6.6015%" y="501" width="5.6235%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="69"/><text x="6.8515%" y="511.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.63%)</title><rect x="10.5949%" y="485" width="1.6300%" height="15" fill="rgb(237,174,47)" fg:x="130" fg:w="20"/><text x="10.8449%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.63%)</title><rect x="10.5949%" y="469" width="1.6300%" height="15" fill="rgb(206,201,31)" fg:x="130" fg:w="20"/><text x="10.8449%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.63%)</title><rect x="10.5949%" y="453" width="1.6300%" height="15" fill="rgb(231,57,52)" fg:x="130" fg:w="20"/><text x="10.8449%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.14%)</title><rect x="11.0839%" y="437" width="1.1410%" height="15" fill="rgb(248,177,22)" fg:x="136" fg:w="14"/><text x="11.3339%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1434%" y="421" width="0.0815%" height="15" fill="rgb(215,211,37)" fg:x="149" fg:w="1"/><text x="12.3934%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="12.2249%" y="533" width="0.1630%" height="15" fill="rgb(241,128,51)" fg:x="150" fg:w="2"/><text x="12.4749%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.2249%" y="517" width="0.1630%" height="15" fill="rgb(227,165,31)" fg:x="150" fg:w="2"/><text x="12.4749%" y="527.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="12.3064%" y="501" width="0.0815%" height="15" fill="rgb(228,167,24)" fg:x="151" fg:w="1"/><text x="12.5564%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.3064%" y="485" width="0.0815%" height="15" fill="rgb(228,143,12)" fg:x="151" fg:w="1"/><text x="12.5564%" y="495.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="12.3064%" y="469" width="0.0815%" height="15" fill="rgb(249,149,8)" fg:x="151" fg:w="1"/><text x="12.5564%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.3064%" y="453" width="0.0815%" height="15" fill="rgb(243,35,44)" fg:x="151" fg:w="1"/><text x="12.5564%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="12.3064%" y="437" width="0.0815%" height="15" fill="rgb(246,89,9)" fg:x="151" fg:w="1"/><text x="12.5564%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="12.3879%" y="533" width="0.0815%" height="15" fill="rgb(233,213,13)" fg:x="152" fg:w="1"/><text x="12.6379%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="12.4694%" y="517" width="0.0815%" height="15" fill="rgb(233,141,41)" fg:x="153" fg:w="1"/><text x="12.7194%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="12.4694%" y="501" width="0.0815%" height="15" fill="rgb(239,167,4)" fg:x="153" fg:w="1"/><text x="12.7194%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.4694%" y="485" width="0.0815%" height="15" fill="rgb(209,217,16)" fg:x="153" fg:w="1"/><text x="12.7194%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4694%" y="469" width="0.0815%" height="15" fill="rgb(219,88,35)" fg:x="153" fg:w="1"/><text x="12.7194%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4694%" y="453" width="0.0815%" height="15" fill="rgb(220,193,23)" fg:x="153" fg:w="1"/><text x="12.7194%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4694%" y="437" width="0.0815%" height="15" fill="rgb(230,90,52)" fg:x="153" fg:w="1"/><text x="12.7194%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.5509%" y="517" width="0.0815%" height="15" fill="rgb(252,106,19)" fg:x="154" fg:w="1"/><text x="12.8009%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5509%" y="501" width="0.0815%" height="15" fill="rgb(206,74,20)" fg:x="154" fg:w="1"/><text x="12.8009%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.5509%" y="485" width="0.0815%" height="15" fill="rgb(230,138,44)" fg:x="154" fg:w="1"/><text x="12.8009%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="12.5509%" y="469" width="0.0815%" height="15" fill="rgb(235,182,43)" fg:x="154" fg:w="1"/><text x="12.8009%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.5509%" y="453" width="0.0815%" height="15" fill="rgb(242,16,51)" fg:x="154" fg:w="1"/><text x="12.8009%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6324%" y="485" width="0.0815%" height="15" fill="rgb(248,9,4)" fg:x="155" fg:w="1"/><text x="12.8824%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6324%" y="469" width="0.0815%" height="15" fill="rgb(210,31,22)" fg:x="155" fg:w="1"/><text x="12.8824%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="12.4694%" y="533" width="0.3260%" height="15" fill="rgb(239,54,39)" fg:x="153" fg:w="4"/><text x="12.7194%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.6324%" y="517" width="0.1630%" height="15" fill="rgb(230,99,41)" fg:x="155" fg:w="2"/><text x="12.8824%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.6324%" y="501" width="0.1630%" height="15" fill="rgb(253,106,12)" fg:x="155" fg:w="2"/><text x="12.8824%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.7139%" y="485" width="0.0815%" height="15" fill="rgb(213,46,41)" fg:x="156" fg:w="1"/><text x="12.9639%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="12.7139%" y="469" width="0.0815%" height="15" fill="rgb(215,133,35)" fg:x="156" fg:w="1"/><text x="12.9639%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.7139%" y="453" width="0.0815%" height="15" fill="rgb(213,28,5)" fg:x="156" fg:w="1"/><text x="12.9639%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7139%" y="437" width="0.0815%" height="15" fill="rgb(215,77,49)" fg:x="156" fg:w="1"/><text x="12.9639%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.7139%" y="421" width="0.0815%" height="15" fill="rgb(248,100,22)" fg:x="156" fg:w="1"/><text x="12.9639%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.7139%" y="405" width="0.0815%" height="15" fill="rgb(208,67,9)" fg:x="156" fg:w="1"/><text x="12.9639%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7954%" y="485" width="0.0815%" height="15" fill="rgb(219,133,21)" fg:x="157" fg:w="1"/><text x="13.0454%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7954%" y="469" width="0.0815%" height="15" fill="rgb(246,46,29)" fg:x="157" fg:w="1"/><text x="13.0454%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7954%" y="453" width="0.0815%" height="15" fill="rgb(246,185,52)" fg:x="157" fg:w="1"/><text x="13.0454%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7954%" y="437" width="0.0815%" height="15" fill="rgb(252,136,11)" fg:x="157" fg:w="1"/><text x="13.0454%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7954%" y="421" width="0.0815%" height="15" fill="rgb(219,138,53)" fg:x="157" fg:w="1"/><text x="13.0454%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7954%" y="405" width="0.0815%" height="15" fill="rgb(211,51,23)" fg:x="157" fg:w="1"/><text x="13.0454%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7954%" y="389" width="0.0815%" height="15" fill="rgb(247,221,28)" fg:x="157" fg:w="1"/><text x="13.0454%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7954%" y="373" width="0.0815%" height="15" fill="rgb(251,222,45)" fg:x="157" fg:w="1"/><text x="13.0454%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7954%" y="357" width="0.0815%" height="15" fill="rgb(217,162,53)" fg:x="157" fg:w="1"/><text x="13.0454%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.7954%" y="341" width="0.0815%" height="15" fill="rgb(229,93,14)" fg:x="157" fg:w="1"/><text x="13.0454%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.7954%" y="325" width="0.0815%" height="15" fill="rgb(209,67,49)" fg:x="157" fg:w="1"/><text x="13.0454%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.7954%" y="309" width="0.0815%" height="15" fill="rgb(213,87,29)" fg:x="157" fg:w="1"/><text x="13.0454%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.7954%" y="293" width="0.0815%" height="15" fill="rgb(205,151,52)" fg:x="157" fg:w="1"/><text x="13.0454%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.7954%" y="277" width="0.0815%" height="15" fill="rgb(253,215,39)" fg:x="157" fg:w="1"/><text x="13.0454%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.7954%" y="517" width="0.1630%" height="15" fill="rgb(221,220,41)" fg:x="157" fg:w="2"/><text x="13.0454%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.7954%" y="501" width="0.1630%" height="15" fill="rgb(218,133,21)" fg:x="157" fg:w="2"/><text x="13.0454%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8769%" y="485" width="0.0815%" height="15" fill="rgb(221,193,43)" fg:x="158" fg:w="1"/><text x="13.1269%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8769%" y="469" width="0.0815%" height="15" fill="rgb(240,128,52)" fg:x="158" fg:w="1"/><text x="13.1269%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.8769%" y="453" width="0.0815%" height="15" fill="rgb(253,114,12)" fg:x="158" fg:w="1"/><text x="13.1269%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8769%" y="437" width="0.0815%" height="15" fill="rgb(215,223,47)" fg:x="158" fg:w="1"/><text x="13.1269%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8769%" y="421" width="0.0815%" height="15" fill="rgb(248,225,23)" fg:x="158" fg:w="1"/><text x="13.1269%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.8769%" y="405" width="0.0815%" height="15" fill="rgb(250,108,0)" fg:x="158" fg:w="1"/><text x="13.1269%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.9584%" y="485" width="0.0815%" height="15" fill="rgb(228,208,7)" fg:x="159" fg:w="1"/><text x="13.2084%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.9584%" y="469" width="0.0815%" height="15" fill="rgb(244,45,10)" fg:x="159" fg:w="1"/><text x="13.2084%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.9584%" y="453" width="0.0815%" height="15" fill="rgb(207,125,25)" fg:x="159" fg:w="1"/><text x="13.2084%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="12.9584%" y="517" width="0.1630%" height="15" fill="rgb(210,195,18)" fg:x="159" fg:w="2"/><text x="13.2084%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.9584%" y="501" width="0.1630%" height="15" fill="rgb(249,80,12)" fg:x="159" fg:w="2"/><text x="13.2084%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0399%" y="485" width="0.0815%" height="15" fill="rgb(221,65,9)" fg:x="160" fg:w="1"/><text x="13.2899%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0399%" y="469" width="0.0815%" height="15" fill="rgb(235,49,36)" fg:x="160" fg:w="1"/><text x="13.2899%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.0399%" y="453" width="0.0815%" height="15" fill="rgb(225,32,20)" fg:x="160" fg:w="1"/><text x="13.2899%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0399%" y="437" width="0.0815%" height="15" fill="rgb(215,141,46)" fg:x="160" fg:w="1"/><text x="13.2899%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0399%" y="421" width="0.0815%" height="15" fill="rgb(250,160,47)" fg:x="160" fg:w="1"/><text x="13.2899%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0399%" y="405" width="0.0815%" height="15" fill="rgb(216,222,40)" fg:x="160" fg:w="1"/><text x="13.2899%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.49%)</title><rect x="12.7954%" y="533" width="0.4890%" height="15" fill="rgb(234,217,39)" fg:x="157" fg:w="6"/><text x="13.0454%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="13.1214%" y="517" width="0.1630%" height="15" fill="rgb(207,178,40)" fg:x="161" fg:w="2"/><text x="13.3714%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.2029%" y="501" width="0.0815%" height="15" fill="rgb(221,136,13)" fg:x="162" fg:w="1"/><text x="13.4529%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.2029%" y="485" width="0.0815%" height="15" fill="rgb(249,199,10)" fg:x="162" fg:w="1"/><text x="13.4529%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.2029%" y="469" width="0.0815%" height="15" fill="rgb(249,222,13)" fg:x="162" fg:w="1"/><text x="13.4529%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.2029%" y="453" width="0.0815%" height="15" fill="rgb(244,185,38)" fg:x="162" fg:w="1"/><text x="13.4529%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.2029%" y="437" width="0.0815%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="1"/><text x="13.4529%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.2029%" y="421" width="0.0815%" height="15" fill="rgb(250,229,37)" fg:x="162" fg:w="1"/><text x="13.4529%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.2029%" y="405" width="0.0815%" height="15" fill="rgb(206,174,23)" fg:x="162" fg:w="1"/><text x="13.4529%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.2029%" y="389" width="0.0815%" height="15" fill="rgb(211,33,43)" fg:x="162" fg:w="1"/><text x="13.4529%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.2029%" y="373" width="0.0815%" height="15" fill="rgb(245,58,50)" fg:x="162" fg:w="1"/><text x="13.4529%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.2029%" y="357" width="0.0815%" height="15" fill="rgb(244,68,36)" fg:x="162" fg:w="1"/><text x="13.4529%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.2029%" y="341" width="0.0815%" height="15" fill="rgb(232,229,15)" fg:x="162" fg:w="1"/><text x="13.4529%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.2844%" y="501" width="0.0815%" height="15" fill="rgb(254,30,23)" fg:x="163" fg:w="1"/><text x="13.5344%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.2844%" y="485" width="0.0815%" height="15" fill="rgb(235,160,14)" fg:x="163" fg:w="1"/><text x="13.5344%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2844%" y="469" width="0.0815%" height="15" fill="rgb(212,155,44)" fg:x="163" fg:w="1"/><text x="13.5344%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2844%" y="453" width="0.0815%" height="15" fill="rgb(226,2,50)" fg:x="163" fg:w="1"/><text x="13.5344%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2844%" y="437" width="0.0815%" height="15" fill="rgb(234,177,6)" fg:x="163" fg:w="1"/><text x="13.5344%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2844%" y="421" width="0.0815%" height="15" fill="rgb(217,24,9)" fg:x="163" fg:w="1"/><text x="13.5344%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2844%" y="405" width="0.0815%" height="15" fill="rgb(220,13,46)" fg:x="163" fg:w="1"/><text x="13.5344%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2844%" y="389" width="0.0815%" height="15" fill="rgb(239,221,27)" fg:x="163" fg:w="1"/><text x="13.5344%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.22%)</title><rect x="12.2249%" y="549" width="1.2225%" height="15" fill="rgb(222,198,25)" fg:x="150" fg:w="15"/><text x="12.4749%" y="559.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="13.2844%" y="533" width="0.1630%" height="15" fill="rgb(211,99,13)" fg:x="163" fg:w="2"/><text x="13.5344%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="13.2844%" y="517" width="0.1630%" height="15" fill="rgb(232,111,31)" fg:x="163" fg:w="2"/><text x="13.5344%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.3659%" y="501" width="0.0815%" height="15" fill="rgb(245,82,37)" fg:x="164" fg:w="1"/><text x="13.6159%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.3659%" y="485" width="0.0815%" height="15" fill="rgb(227,149,46)" fg:x="164" fg:w="1"/><text x="13.6159%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.3659%" y="469" width="0.0815%" height="15" fill="rgb(218,36,50)" fg:x="164" fg:w="1"/><text x="13.6159%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.3659%" y="453" width="0.0815%" height="15" fill="rgb(226,80,48)" fg:x="164" fg:w="1"/><text x="13.6159%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.3659%" y="437" width="0.0815%" height="15" fill="rgb(238,224,15)" fg:x="164" fg:w="1"/><text x="13.6159%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.3659%" y="421" width="0.0815%" height="15" fill="rgb(241,136,10)" fg:x="164" fg:w="1"/><text x="13.6159%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.3659%" y="405" width="0.0815%" height="15" fill="rgb(208,32,45)" fg:x="164" fg:w="1"/><text x="13.6159%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.3659%" y="389" width="0.0815%" height="15" fill="rgb(207,135,9)" fg:x="164" fg:w="1"/><text x="13.6159%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.3659%" y="373" width="0.0815%" height="15" fill="rgb(206,86,44)" fg:x="164" fg:w="1"/><text x="13.6159%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.3659%" y="357" width="0.0815%" height="15" fill="rgb(245,177,15)" fg:x="164" fg:w="1"/><text x="13.6159%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.3659%" y="341" width="0.0815%" height="15" fill="rgb(206,64,50)" fg:x="164" fg:w="1"/><text x="13.6159%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.3659%" y="325" width="0.0815%" height="15" fill="rgb(234,36,40)" fg:x="164" fg:w="1"/><text x="13.6159%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4474%" y="517" width="0.0815%" height="15" fill="rgb(213,64,8)" fg:x="165" fg:w="1"/><text x="13.6974%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4474%" y="501" width="0.0815%" height="15" fill="rgb(210,75,36)" fg:x="165" fg:w="1"/><text x="13.6974%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4474%" y="485" width="0.0815%" height="15" fill="rgb(229,88,21)" fg:x="165" fg:w="1"/><text x="13.6974%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.39%)</title><rect x="12.2249%" y="565" width="1.3855%" height="15" fill="rgb(252,204,47)" fg:x="150" fg:w="17"/><text x="12.4749%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.4474%" y="549" width="0.1630%" height="15" fill="rgb(208,77,27)" fg:x="165" fg:w="2"/><text x="13.6974%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.4474%" y="533" width="0.1630%" height="15" fill="rgb(221,76,26)" fg:x="165" fg:w="2"/><text x="13.6974%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.5289%" y="517" width="0.0815%" height="15" fill="rgb(225,139,18)" fg:x="166" fg:w="1"/><text x="13.7789%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.5289%" y="501" width="0.0815%" height="15" fill="rgb(230,137,11)" fg:x="166" fg:w="1"/><text x="13.7789%" y="511.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="13.6104%" y="549" width="0.0815%" height="15" fill="rgb(212,28,1)" fg:x="167" fg:w="1"/><text x="13.8604%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.6919%" y="517" width="0.0815%" height="15" fill="rgb(248,164,17)" fg:x="168" fg:w="1"/><text x="13.9419%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.6919%" y="501" width="0.0815%" height="15" fill="rgb(222,171,42)" fg:x="168" fg:w="1"/><text x="13.9419%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6919%" y="485" width="0.0815%" height="15" fill="rgb(243,84,45)" fg:x="168" fg:w="1"/><text x="13.9419%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6919%" y="469" width="0.0815%" height="15" fill="rgb(252,49,23)" fg:x="168" fg:w="1"/><text x="13.9419%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.6919%" y="453" width="0.0815%" height="15" fill="rgb(215,19,7)" fg:x="168" fg:w="1"/><text x="13.9419%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6919%" y="437" width="0.0815%" height="15" fill="rgb(238,81,41)" fg:x="168" fg:w="1"/><text x="13.9419%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6919%" y="421" width="0.0815%" height="15" fill="rgb(210,199,37)" fg:x="168" fg:w="1"/><text x="13.9419%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6919%" y="405" width="0.0815%" height="15" fill="rgb(244,192,49)" fg:x="168" fg:w="1"/><text x="13.9419%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.8549%" y="485" width="0.0815%" height="15" fill="rgb(226,211,11)" fg:x="170" fg:w="1"/><text x="14.1049%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.8549%" y="469" width="0.0815%" height="15" fill="rgb(236,162,54)" fg:x="170" fg:w="1"/><text x="14.1049%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.8549%" y="453" width="0.0815%" height="15" fill="rgb(220,229,9)" fg:x="170" fg:w="1"/><text x="14.1049%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.8549%" y="437" width="0.0815%" height="15" fill="rgb(250,87,22)" fg:x="170" fg:w="1"/><text x="14.1049%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.8549%" y="421" width="0.0815%" height="15" fill="rgb(239,43,17)" fg:x="170" fg:w="1"/><text x="14.1049%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="13.6919%" y="549" width="0.3260%" height="15" fill="rgb(231,177,25)" fg:x="168" fg:w="4"/><text x="13.9419%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="13.6919%" y="533" width="0.3260%" height="15" fill="rgb(219,179,1)" fg:x="168" fg:w="4"/><text x="13.9419%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.7734%" y="517" width="0.2445%" height="15" fill="rgb(238,219,53)" fg:x="169" fg:w="3"/><text x="14.0234%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.8549%" y="501" width="0.1630%" height="15" fill="rgb(232,167,36)" fg:x="170" fg:w="2"/><text x="14.1049%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9364%" y="485" width="0.0815%" height="15" fill="rgb(244,19,51)" fg:x="171" fg:w="1"/><text x="14.1864%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9364%" y="469" width="0.0815%" height="15" fill="rgb(224,6,22)" fg:x="171" fg:w="1"/><text x="14.1864%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.9364%" y="453" width="0.0815%" height="15" fill="rgb(224,145,5)" fg:x="171" fg:w="1"/><text x="14.1864%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9364%" y="437" width="0.0815%" height="15" fill="rgb(234,130,49)" fg:x="171" fg:w="1"/><text x="14.1864%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9364%" y="421" width="0.0815%" height="15" fill="rgb(254,6,2)" fg:x="171" fg:w="1"/><text x="14.1864%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9364%" y="405" width="0.0815%" height="15" fill="rgb(208,96,46)" fg:x="171" fg:w="1"/><text x="14.1864%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.0179%" y="549" width="0.0815%" height="15" fill="rgb(239,3,39)" fg:x="172" fg:w="1"/><text x="14.2679%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="14.0179%" y="533" width="0.0815%" height="15" fill="rgb(233,210,1)" fg:x="172" fg:w="1"/><text x="14.2679%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.0179%" y="517" width="0.0815%" height="15" fill="rgb(244,137,37)" fg:x="172" fg:w="1"/><text x="14.2679%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.0179%" y="501" width="0.0815%" height="15" fill="rgb(240,136,2)" fg:x="172" fg:w="1"/><text x="14.2679%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.0179%" y="485" width="0.0815%" height="15" fill="rgb(239,18,37)" fg:x="172" fg:w="1"/><text x="14.2679%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.0179%" y="469" width="0.0815%" height="15" fill="rgb(218,185,22)" fg:x="172" fg:w="1"/><text x="14.2679%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0179%" y="453" width="0.0815%" height="15" fill="rgb(225,218,4)" fg:x="172" fg:w="1"/><text x="14.2679%" y="463.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.04%)</title><rect x="12.2249%" y="581" width="2.0375%" height="15" fill="rgb(230,182,32)" fg:x="150" fg:w="25"/><text x="12.4749%" y="591.50">p..</text></g><g><title>plugins_core::tools::set_container (8 samples, 0.65%)</title><rect x="13.6104%" y="565" width="0.6520%" height="15" fill="rgb(242,56,43)" fg:x="167" fg:w="8"/><text x="13.8604%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="14.0994%" y="549" width="0.1630%" height="15" fill="rgb(233,99,24)" fg:x="173" fg:w="2"/><text x="14.3494%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.0994%" y="533" width="0.1630%" height="15" fill="rgb(234,209,42)" fg:x="173" fg:w="2"/><text x="14.3494%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="14.0994%" y="517" width="0.1630%" height="15" fill="rgb(227,7,12)" fg:x="173" fg:w="2"/><text x="14.3494%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.0994%" y="501" width="0.1630%" height="15" fill="rgb(245,203,43)" fg:x="173" fg:w="2"/><text x="14.3494%" y="511.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="14.0994%" y="485" width="0.1630%" height="15" fill="rgb(238,205,33)" fg:x="173" fg:w="2"/><text x="14.3494%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.1809%" y="469" width="0.0815%" height="15" fill="rgb(231,56,7)" fg:x="174" fg:w="1"/><text x="14.4309%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.2624%" y="533" width="0.0815%" height="15" fill="rgb(244,186,29)" fg:x="175" fg:w="1"/><text x="14.5124%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.2624%" y="517" width="0.0815%" height="15" fill="rgb(234,111,31)" fg:x="175" fg:w="1"/><text x="14.5124%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.2624%" y="501" width="0.0815%" height="15" fill="rgb(241,149,10)" fg:x="175" fg:w="1"/><text x="14.5124%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.2624%" y="549" width="0.1630%" height="15" fill="rgb(249,206,44)" fg:x="175" fg:w="2"/><text x="14.5124%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.3439%" y="533" width="0.0815%" height="15" fill="rgb(251,153,30)" fg:x="176" fg:w="1"/><text x="14.5939%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3439%" y="517" width="0.0815%" height="15" fill="rgb(239,152,38)" fg:x="176" fg:w="1"/><text x="14.5939%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3439%" y="501" width="0.0815%" height="15" fill="rgb(249,139,47)" fg:x="176" fg:w="1"/><text x="14.5939%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3439%" y="485" width="0.0815%" height="15" fill="rgb(244,64,35)" fg:x="176" fg:w="1"/><text x="14.5939%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3439%" y="469" width="0.0815%" height="15" fill="rgb(216,46,15)" fg:x="176" fg:w="1"/><text x="14.5939%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3439%" y="453" width="0.0815%" height="15" fill="rgb(250,74,19)" fg:x="176" fg:w="1"/><text x="14.5939%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.3439%" y="437" width="0.0815%" height="15" fill="rgb(249,42,33)" fg:x="176" fg:w="1"/><text x="14.5939%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.3439%" y="421" width="0.0815%" height="15" fill="rgb(242,149,17)" fg:x="176" fg:w="1"/><text x="14.5939%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.3439%" y="405" width="0.0815%" height="15" fill="rgb(244,29,21)" fg:x="176" fg:w="1"/><text x="14.5939%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.3439%" y="389" width="0.0815%" height="15" fill="rgb(220,130,37)" fg:x="176" fg:w="1"/><text x="14.5939%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.3439%" y="373" width="0.0815%" height="15" fill="rgb(211,67,2)" fg:x="176" fg:w="1"/><text x="14.5939%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4254%" y="501" width="0.0815%" height="15" fill="rgb(235,68,52)" fg:x="177" fg:w="1"/><text x="14.6754%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4254%" y="485" width="0.0815%" height="15" fill="rgb(246,142,3)" fg:x="177" fg:w="1"/><text x="14.6754%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="14.4254%" y="533" width="0.2445%" height="15" fill="rgb(241,25,7)" fg:x="177" fg:w="3"/><text x="14.6754%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.4254%" y="517" width="0.2445%" height="15" fill="rgb(242,119,39)" fg:x="177" fg:w="3"/><text x="14.6754%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.5069%" y="501" width="0.1630%" height="15" fill="rgb(241,98,45)" fg:x="178" fg:w="2"/><text x="14.7569%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5069%" y="485" width="0.1630%" height="15" fill="rgb(254,28,30)" fg:x="178" fg:w="2"/><text x="14.7569%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.5069%" y="469" width="0.1630%" height="15" fill="rgb(241,142,54)" fg:x="178" fg:w="2"/><text x="14.7569%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.5069%" y="453" width="0.1630%" height="15" fill="rgb(222,85,15)" fg:x="178" fg:w="2"/><text x="14.7569%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.5884%" y="437" width="0.0815%" height="15" fill="rgb(210,85,47)" fg:x="179" fg:w="1"/><text x="14.8384%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5884%" y="421" width="0.0815%" height="15" fill="rgb(224,206,25)" fg:x="179" fg:w="1"/><text x="14.8384%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.33%)</title><rect x="14.4254%" y="549" width="0.3260%" height="15" fill="rgb(243,201,19)" fg:x="177" fg:w="4"/><text x="14.6754%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.6699%" y="533" width="0.0815%" height="15" fill="rgb(236,59,4)" fg:x="180" fg:w="1"/><text x="14.9199%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="14.6699%" y="517" width="0.0815%" height="15" fill="rgb(254,179,45)" fg:x="180" fg:w="1"/><text x="14.9199%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.6699%" y="501" width="0.0815%" height="15" fill="rgb(226,14,10)" fg:x="180" fg:w="1"/><text x="14.9199%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.6699%" y="485" width="0.0815%" height="15" fill="rgb(244,27,41)" fg:x="180" fg:w="1"/><text x="14.9199%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="14.7514%" y="549" width="0.0815%" height="15" fill="rgb(235,35,32)" fg:x="181" fg:w="1"/><text x="15.0014%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="14.7514%" y="533" width="0.0815%" height="15" fill="rgb(218,68,31)" fg:x="181" fg:w="1"/><text x="15.0014%" y="543.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.8329%" y="501" width="0.0815%" height="15" fill="rgb(207,120,37)" fg:x="182" fg:w="1"/><text x="15.0829%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.8329%" y="485" width="0.0815%" height="15" fill="rgb(227,98,0)" fg:x="182" fg:w="1"/><text x="15.0829%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8329%" y="469" width="0.0815%" height="15" fill="rgb(207,7,3)" fg:x="182" fg:w="1"/><text x="15.0829%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8329%" y="453" width="0.0815%" height="15" fill="rgb(206,98,19)" fg:x="182" fg:w="1"/><text x="15.0829%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.9144%" y="485" width="0.0815%" height="15" fill="rgb(217,5,26)" fg:x="183" fg:w="1"/><text x="15.1644%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.9144%" y="469" width="0.0815%" height="15" fill="rgb(235,190,38)" fg:x="183" fg:w="1"/><text x="15.1644%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="14.8329%" y="533" width="0.2445%" height="15" fill="rgb(247,86,24)" fg:x="182" fg:w="3"/><text x="15.0829%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.8329%" y="517" width="0.2445%" height="15" fill="rgb(205,101,16)" fg:x="182" fg:w="3"/><text x="15.0829%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.9144%" y="501" width="0.1630%" height="15" fill="rgb(246,168,33)" fg:x="183" fg:w="2"/><text x="15.1644%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9959%" y="485" width="0.0815%" height="15" fill="rgb(231,114,1)" fg:x="184" fg:w="1"/><text x="15.2459%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9959%" y="469" width="0.0815%" height="15" fill="rgb(207,184,53)" fg:x="184" fg:w="1"/><text x="15.2459%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9959%" y="453" width="0.0815%" height="15" fill="rgb(224,95,51)" fg:x="184" fg:w="1"/><text x="15.2459%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="14.8329%" y="549" width="0.3260%" height="15" fill="rgb(212,188,45)" fg:x="182" fg:w="4"/><text x="15.0829%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0774%" y="533" width="0.0815%" height="15" fill="rgb(223,154,38)" fg:x="185" fg:w="1"/><text x="15.3274%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0774%" y="517" width="0.0815%" height="15" fill="rgb(251,22,52)" fg:x="185" fg:w="1"/><text x="15.3274%" y="527.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="15.0774%" y="501" width="0.0815%" height="15" fill="rgb(229,209,22)" fg:x="185" fg:w="1"/><text x="15.3274%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.0774%" y="485" width="0.0815%" height="15" fill="rgb(234,138,34)" fg:x="185" fg:w="1"/><text x="15.3274%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1589%" y="501" width="0.0815%" height="15" fill="rgb(212,95,11)" fg:x="186" fg:w="1"/><text x="15.4089%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.1589%" y="533" width="0.1630%" height="15" fill="rgb(240,179,47)" fg:x="186" fg:w="2"/><text x="15.4089%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.1589%" y="517" width="0.1630%" height="15" fill="rgb(240,163,11)" fg:x="186" fg:w="2"/><text x="15.4089%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2404%" y="501" width="0.0815%" height="15" fill="rgb(236,37,12)" fg:x="187" fg:w="1"/><text x="15.4904%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2404%" y="485" width="0.0815%" height="15" fill="rgb(232,164,16)" fg:x="187" fg:w="1"/><text x="15.4904%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2404%" y="469" width="0.0815%" height="15" fill="rgb(244,205,15)" fg:x="187" fg:w="1"/><text x="15.4904%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2404%" y="453" width="0.0815%" height="15" fill="rgb(223,117,47)" fg:x="187" fg:w="1"/><text x="15.4904%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2404%" y="437" width="0.0815%" height="15" fill="rgb(244,107,35)" fg:x="187" fg:w="1"/><text x="15.4904%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2404%" y="421" width="0.0815%" height="15" fill="rgb(205,140,8)" fg:x="187" fg:w="1"/><text x="15.4904%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="15.3219%" y="533" width="0.0815%" height="15" fill="rgb(228,84,46)" fg:x="188" fg:w="1"/><text x="15.5719%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3219%" y="517" width="0.0815%" height="15" fill="rgb(254,188,9)" fg:x="188" fg:w="1"/><text x="15.5719%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3219%" y="501" width="0.0815%" height="15" fill="rgb(206,112,54)" fg:x="188" fg:w="1"/><text x="15.5719%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="15.1589%" y="549" width="0.3260%" height="15" fill="rgb(216,84,49)" fg:x="186" fg:w="4"/><text x="15.4089%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.4034%" y="533" width="0.0815%" height="15" fill="rgb(214,194,35)" fg:x="189" fg:w="1"/><text x="15.6534%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.4034%" y="517" width="0.0815%" height="15" fill="rgb(249,28,3)" fg:x="189" fg:w="1"/><text x="15.6534%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.4034%" y="501" width="0.0815%" height="15" fill="rgb(222,56,52)" fg:x="189" fg:w="1"/><text x="15.6534%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5664%" y="485" width="0.0815%" height="15" fill="rgb(245,217,50)" fg:x="191" fg:w="1"/><text x="15.8164%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5664%" y="469" width="0.0815%" height="15" fill="rgb(213,201,24)" fg:x="191" fg:w="1"/><text x="15.8164%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.5664%" y="453" width="0.0815%" height="15" fill="rgb(248,116,28)" fg:x="191" fg:w="1"/><text x="15.8164%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.47%)</title><rect x="14.2624%" y="565" width="1.4670%" height="15" fill="rgb(219,72,43)" fg:x="175" fg:w="18"/><text x="14.5124%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="15.4849%" y="549" width="0.2445%" height="15" fill="rgb(209,138,14)" fg:x="190" fg:w="3"/><text x="15.7349%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="15.4849%" y="533" width="0.2445%" height="15" fill="rgb(222,18,33)" fg:x="190" fg:w="3"/><text x="15.7349%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="15.4849%" y="517" width="0.2445%" height="15" fill="rgb(213,199,7)" fg:x="190" fg:w="3"/><text x="15.7349%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.5664%" y="501" width="0.1630%" height="15" fill="rgb(250,110,10)" fg:x="191" fg:w="2"/><text x="15.8164%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6479%" y="485" width="0.0815%" height="15" fill="rgb(248,123,6)" fg:x="192" fg:w="1"/><text x="15.8979%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6479%" y="469" width="0.0815%" height="15" fill="rgb(206,91,31)" fg:x="192" fg:w="1"/><text x="15.8979%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.6479%" y="453" width="0.0815%" height="15" fill="rgb(211,154,13)" fg:x="192" fg:w="1"/><text x="15.8979%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6479%" y="437" width="0.0815%" height="15" fill="rgb(225,148,7)" fg:x="192" fg:w="1"/><text x="15.8979%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6479%" y="421" width="0.0815%" height="15" fill="rgb(220,160,43)" fg:x="192" fg:w="1"/><text x="15.8979%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6479%" y="405" width="0.0815%" height="15" fill="rgb(213,52,39)" fg:x="192" fg:w="1"/><text x="15.8979%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.55%)</title><rect x="14.2624%" y="581" width="1.5485%" height="15" fill="rgb(243,137,7)" fg:x="175" fg:w="19"/><text x="14.5124%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.7294%" y="565" width="0.0815%" height="15" fill="rgb(230,79,13)" fg:x="193" fg:w="1"/><text x="15.9794%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.7294%" y="549" width="0.0815%" height="15" fill="rgb(247,105,23)" fg:x="193" fg:w="1"/><text x="15.9794%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7294%" y="533" width="0.0815%" height="15" fill="rgb(223,179,41)" fg:x="193" fg:w="1"/><text x="15.9794%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7294%" y="517" width="0.0815%" height="15" fill="rgb(218,9,34)" fg:x="193" fg:w="1"/><text x="15.9794%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.7294%" y="501" width="0.0815%" height="15" fill="rgb(222,106,8)" fg:x="193" fg:w="1"/><text x="15.9794%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7294%" y="485" width="0.0815%" height="15" fill="rgb(211,220,0)" fg:x="193" fg:w="1"/><text x="15.9794%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.7294%" y="469" width="0.0815%" height="15" fill="rgb(229,52,16)" fg:x="193" fg:w="1"/><text x="15.9794%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.7294%" y="453" width="0.0815%" height="15" fill="rgb(212,155,18)" fg:x="193" fg:w="1"/><text x="15.9794%" y="463.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="15.8109%" y="549" width="0.0815%" height="15" fill="rgb(242,21,14)" fg:x="194" fg:w="1"/><text x="16.0609%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8109%" y="533" width="0.0815%" height="15" fill="rgb(222,19,48)" fg:x="194" fg:w="1"/><text x="16.0609%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8109%" y="517" width="0.0815%" height="15" fill="rgb(232,45,27)" fg:x="194" fg:w="1"/><text x="16.0609%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.8924%" y="517" width="0.0815%" height="15" fill="rgb(249,103,42)" fg:x="195" fg:w="1"/><text x="16.1424%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.8924%" y="501" width="0.0815%" height="15" fill="rgb(246,81,33)" fg:x="195" fg:w="1"/><text x="16.1424%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.8924%" y="485" width="0.0815%" height="15" fill="rgb(252,33,42)" fg:x="195" fg:w="1"/><text x="16.1424%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8924%" y="469" width="0.0815%" height="15" fill="rgb(209,212,41)" fg:x="195" fg:w="1"/><text x="16.1424%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.9739%" y="517" width="0.0815%" height="15" fill="rgb(207,154,6)" fg:x="196" fg:w="1"/><text x="16.2239%" y="527.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.8924%" y="549" width="0.2445%" height="15" fill="rgb(223,64,47)" fg:x="195" fg:w="3"/><text x="16.1424%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.8924%" y="533" width="0.2445%" height="15" fill="rgb(211,161,38)" fg:x="195" fg:w="3"/><text x="16.1424%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0554%" y="517" width="0.0815%" height="15" fill="rgb(219,138,40)" fg:x="197" fg:w="1"/><text x="16.3054%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0554%" y="501" width="0.0815%" height="15" fill="rgb(241,228,46)" fg:x="197" fg:w="1"/><text x="16.3054%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.0554%" y="485" width="0.0815%" height="15" fill="rgb(223,209,38)" fg:x="197" fg:w="1"/><text x="16.3054%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0554%" y="469" width="0.0815%" height="15" fill="rgb(236,164,45)" fg:x="197" fg:w="1"/><text x="16.3054%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (6 samples, 0.49%)</title><rect x="15.8109%" y="581" width="0.4890%" height="15" fill="rgb(231,15,5)" fg:x="194" fg:w="6"/><text x="16.0609%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (6 samples, 0.49%)</title><rect x="15.8109%" y="565" width="0.4890%" height="15" fill="rgb(252,35,15)" fg:x="194" fg:w="6"/><text x="16.0609%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.1369%" y="549" width="0.1630%" height="15" fill="rgb(248,181,18)" fg:x="198" fg:w="2"/><text x="16.3869%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.2184%" y="533" width="0.0815%" height="15" fill="rgb(233,39,42)" fg:x="199" fg:w="1"/><text x="16.4684%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2184%" y="517" width="0.0815%" height="15" fill="rgb(238,110,33)" fg:x="199" fg:w="1"/><text x="16.4684%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2999%" y="517" width="0.0815%" height="15" fill="rgb(233,195,10)" fg:x="200" fg:w="1"/><text x="16.5499%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2999%" y="501" width="0.0815%" height="15" fill="rgb(254,105,3)" fg:x="200" fg:w="1"/><text x="16.5499%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.2999%" y="485" width="0.0815%" height="15" fill="rgb(221,225,9)" fg:x="200" fg:w="1"/><text x="16.5499%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.2999%" y="469" width="0.0815%" height="15" fill="rgb(224,227,45)" fg:x="200" fg:w="1"/><text x="16.5499%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.2999%" y="453" width="0.0815%" height="15" fill="rgb(229,198,43)" fg:x="200" fg:w="1"/><text x="16.5499%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2999%" y="437" width="0.0815%" height="15" fill="rgb(206,209,35)" fg:x="200" fg:w="1"/><text x="16.5499%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2999%" y="421" width="0.0815%" height="15" fill="rgb(245,195,53)" fg:x="200" fg:w="1"/><text x="16.5499%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.2999%" y="405" width="0.0815%" height="15" fill="rgb(240,92,26)" fg:x="200" fg:w="1"/><text x="16.5499%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.2999%" y="389" width="0.0815%" height="15" fill="rgb(207,40,23)" fg:x="200" fg:w="1"/><text x="16.5499%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.2999%" y="373" width="0.0815%" height="15" fill="rgb(223,111,35)" fg:x="200" fg:w="1"/><text x="16.5499%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.2999%" y="357" width="0.0815%" height="15" fill="rgb(229,147,28)" fg:x="200" fg:w="1"/><text x="16.5499%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2999%" y="341" width="0.0815%" height="15" fill="rgb(211,29,28)" fg:x="200" fg:w="1"/><text x="16.5499%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.2999%" y="533" width="0.1630%" height="15" fill="rgb(228,72,33)" fg:x="200" fg:w="2"/><text x="16.5499%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="16.3814%" y="517" width="0.0815%" height="15" fill="rgb(205,214,31)" fg:x="201" fg:w="1"/><text x="16.6314%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="16.3814%" y="501" width="0.0815%" height="15" fill="rgb(224,111,15)" fg:x="201" fg:w="1"/><text x="16.6314%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.33%)</title><rect x="16.2999%" y="565" width="0.3260%" height="15" fill="rgb(253,21,26)" fg:x="200" fg:w="4"/><text x="16.5499%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="16.2999%" y="549" width="0.3260%" height="15" fill="rgb(245,139,43)" fg:x="200" fg:w="4"/><text x="16.5499%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="16.4629%" y="533" width="0.1630%" height="15" fill="rgb(252,170,7)" fg:x="202" fg:w="2"/><text x="16.7129%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="16.4629%" y="517" width="0.1630%" height="15" fill="rgb(231,118,14)" fg:x="202" fg:w="2"/><text x="16.7129%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="16.6259%" y="565" width="0.0815%" height="15" fill="rgb(238,83,0)" fg:x="204" fg:w="1"/><text x="16.8759%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7889%" y="469" width="0.0815%" height="15" fill="rgb(221,39,39)" fg:x="206" fg:w="1"/><text x="17.0389%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7889%" y="453" width="0.0815%" height="15" fill="rgb(222,119,46)" fg:x="206" fg:w="1"/><text x="17.0389%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7889%" y="437" width="0.0815%" height="15" fill="rgb(222,165,49)" fg:x="206" fg:w="1"/><text x="17.0389%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7889%" y="421" width="0.0815%" height="15" fill="rgb(219,113,52)" fg:x="206" fg:w="1"/><text x="17.0389%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7889%" y="405" width="0.0815%" height="15" fill="rgb(214,7,15)" fg:x="206" fg:w="1"/><text x="17.0389%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7889%" y="389" width="0.0815%" height="15" fill="rgb(235,32,4)" fg:x="206" fg:w="1"/><text x="17.0389%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7889%" y="373" width="0.0815%" height="15" fill="rgb(238,90,54)" fg:x="206" fg:w="1"/><text x="17.0389%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7889%" y="357" width="0.0815%" height="15" fill="rgb(213,208,19)" fg:x="206" fg:w="1"/><text x="17.0389%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7889%" y="341" width="0.0815%" height="15" fill="rgb(233,156,4)" fg:x="206" fg:w="1"/><text x="17.0389%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.7889%" y="325" width="0.0815%" height="15" fill="rgb(207,194,5)" fg:x="206" fg:w="1"/><text x="17.0389%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.7889%" y="309" width="0.0815%" height="15" fill="rgb(206,111,30)" fg:x="206" fg:w="1"/><text x="17.0389%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.7889%" y="293" width="0.0815%" height="15" fill="rgb(243,70,54)" fg:x="206" fg:w="1"/><text x="17.0389%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7889%" y="277" width="0.0815%" height="15" fill="rgb(242,28,8)" fg:x="206" fg:w="1"/><text x="17.0389%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.8704%" y="469" width="0.1630%" height="15" fill="rgb(219,106,18)" fg:x="207" fg:w="2"/><text x="17.1204%" y="479.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.33%)</title><rect x="16.7889%" y="501" width="0.3260%" height="15" fill="rgb(244,222,10)" fg:x="206" fg:w="4"/><text x="17.0389%" y="511.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.33%)</title><rect x="16.7889%" y="485" width="0.3260%" height="15" fill="rgb(236,179,52)" fg:x="206" fg:w="4"/><text x="17.0389%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0334%" y="469" width="0.0815%" height="15" fill="rgb(213,23,39)" fg:x="209" fg:w="1"/><text x="17.2834%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0334%" y="453" width="0.0815%" height="15" fill="rgb(238,48,10)" fg:x="209" fg:w="1"/><text x="17.2834%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.0334%" y="437" width="0.0815%" height="15" fill="rgb(251,196,23)" fg:x="209" fg:w="1"/><text x="17.2834%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (5 samples, 0.41%)</title><rect x="16.7889%" y="517" width="0.4075%" height="15" fill="rgb(250,152,24)" fg:x="206" fg:w="5"/><text x="17.0389%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.1149%" y="501" width="0.0815%" height="15" fill="rgb(209,150,17)" fg:x="210" fg:w="1"/><text x="17.3649%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.1149%" y="485" width="0.0815%" height="15" fill="rgb(234,202,34)" fg:x="210" fg:w="1"/><text x="17.3649%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1964%" y="341" width="0.0815%" height="15" fill="rgb(253,148,53)" fg:x="211" fg:w="1"/><text x="17.4464%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1964%" y="325" width="0.0815%" height="15" fill="rgb(218,129,16)" fg:x="211" fg:w="1"/><text x="17.4464%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2779%" y="309" width="0.0815%" height="15" fill="rgb(216,85,19)" fg:x="212" fg:w="1"/><text x="17.5279%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="17.1964%" y="421" width="0.2445%" height="15" fill="rgb(235,228,7)" fg:x="211" fg:w="3"/><text x="17.4464%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="17.1964%" y="405" width="0.2445%" height="15" fill="rgb(245,175,0)" fg:x="211" fg:w="3"/><text x="17.4464%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="17.1964%" y="389" width="0.2445%" height="15" fill="rgb(208,168,36)" fg:x="211" fg:w="3"/><text x="17.4464%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="17.1964%" y="373" width="0.2445%" height="15" fill="rgb(246,171,24)" fg:x="211" fg:w="3"/><text x="17.4464%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="17.1964%" y="357" width="0.2445%" height="15" fill="rgb(215,142,24)" fg:x="211" fg:w="3"/><text x="17.4464%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="17.2779%" y="341" width="0.1630%" height="15" fill="rgb(250,187,7)" fg:x="212" fg:w="2"/><text x="17.5279%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="17.2779%" y="325" width="0.1630%" height="15" fill="rgb(228,66,33)" fg:x="212" fg:w="2"/><text x="17.5279%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.3594%" y="309" width="0.0815%" height="15" fill="rgb(234,215,21)" fg:x="213" fg:w="1"/><text x="17.6094%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.3594%" y="293" width="0.0815%" height="15" fill="rgb(222,191,20)" fg:x="213" fg:w="1"/><text x="17.6094%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3594%" y="277" width="0.0815%" height="15" fill="rgb(245,79,54)" fg:x="213" fg:w="1"/><text x="17.6094%" y="287.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="17.1964%" y="469" width="0.3260%" height="15" fill="rgb(240,10,37)" fg:x="211" fg:w="4"/><text x="17.4464%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.33%)</title><rect x="17.1964%" y="453" width="0.3260%" height="15" fill="rgb(214,192,32)" fg:x="211" fg:w="4"/><text x="17.4464%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="17.1964%" y="437" width="0.3260%" height="15" fill="rgb(209,36,54)" fg:x="211" fg:w="4"/><text x="17.4464%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="17.4409%" y="421" width="0.0815%" height="15" fill="rgb(220,10,11)" fg:x="214" fg:w="1"/><text x="17.6909%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4409%" y="405" width="0.0815%" height="15" fill="rgb(221,106,17)" fg:x="214" fg:w="1"/><text x="17.6909%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4409%" y="389" width="0.0815%" height="15" fill="rgb(251,142,44)" fg:x="214" fg:w="1"/><text x="17.6909%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5224%" y="421" width="0.0815%" height="15" fill="rgb(238,13,15)" fg:x="215" fg:w="1"/><text x="17.7724%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.5224%" y="405" width="0.0815%" height="15" fill="rgb(208,107,27)" fg:x="215" fg:w="1"/><text x="17.7724%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5224%" y="389" width="0.0815%" height="15" fill="rgb(205,136,37)" fg:x="215" fg:w="1"/><text x="17.7724%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5224%" y="373" width="0.0815%" height="15" fill="rgb(250,205,27)" fg:x="215" fg:w="1"/><text x="17.7724%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.5224%" y="453" width="0.1630%" height="15" fill="rgb(210,80,43)" fg:x="215" fg:w="2"/><text x="17.7724%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.5224%" y="437" width="0.1630%" height="15" fill="rgb(247,160,36)" fg:x="215" fg:w="2"/><text x="17.7724%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.6039%" y="421" width="0.0815%" height="15" fill="rgb(234,13,49)" fg:x="216" fg:w="1"/><text x="17.8539%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.6039%" y="405" width="0.0815%" height="15" fill="rgb(234,122,0)" fg:x="216" fg:w="1"/><text x="17.8539%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="17.5224%" y="469" width="0.3260%" height="15" fill="rgb(207,146,38)" fg:x="215" fg:w="4"/><text x="17.7724%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="17.6854%" y="453" width="0.1630%" height="15" fill="rgb(207,177,25)" fg:x="217" fg:w="2"/><text x="17.9354%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.6854%" y="437" width="0.1630%" height="15" fill="rgb(211,178,42)" fg:x="217" fg:w="2"/><text x="17.9354%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6854%" y="421" width="0.1630%" height="15" fill="rgb(230,69,54)" fg:x="217" fg:w="2"/><text x="17.9354%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6854%" y="405" width="0.1630%" height="15" fill="rgb(214,135,41)" fg:x="217" fg:w="2"/><text x="17.9354%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7669%" y="389" width="0.0815%" height="15" fill="rgb(237,67,25)" fg:x="218" fg:w="1"/><text x="18.0169%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.7669%" y="373" width="0.0815%" height="15" fill="rgb(222,189,50)" fg:x="218" fg:w="1"/><text x="18.0169%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.7669%" y="357" width="0.0815%" height="15" fill="rgb(245,148,34)" fg:x="218" fg:w="1"/><text x="18.0169%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.7669%" y="341" width="0.0815%" height="15" fill="rgb(222,29,6)" fg:x="218" fg:w="1"/><text x="18.0169%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.7669%" y="325" width="0.0815%" height="15" fill="rgb(221,189,43)" fg:x="218" fg:w="1"/><text x="18.0169%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7669%" y="309" width="0.0815%" height="15" fill="rgb(207,36,27)" fg:x="218" fg:w="1"/><text x="18.0169%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.7669%" y="293" width="0.0815%" height="15" fill="rgb(217,90,24)" fg:x="218" fg:w="1"/><text x="18.0169%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.7669%" y="277" width="0.0815%" height="15" fill="rgb(224,66,35)" fg:x="218" fg:w="1"/><text x="18.0169%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.7669%" y="261" width="0.0815%" height="15" fill="rgb(221,13,50)" fg:x="218" fg:w="1"/><text x="18.0169%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.7669%" y="245" width="0.0815%" height="15" fill="rgb(236,68,49)" fg:x="218" fg:w="1"/><text x="18.0169%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.7669%" y="229" width="0.0815%" height="15" fill="rgb(229,146,28)" fg:x="218" fg:w="1"/><text x="18.0169%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7669%" y="213" width="0.0815%" height="15" fill="rgb(225,31,38)" fg:x="218" fg:w="1"/><text x="18.0169%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8484%" y="405" width="0.1630%" height="15" fill="rgb(250,208,3)" fg:x="219" fg:w="2"/><text x="18.0984%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8484%" y="389" width="0.1630%" height="15" fill="rgb(246,54,23)" fg:x="219" fg:w="2"/><text x="18.0984%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8484%" y="373" width="0.1630%" height="15" fill="rgb(243,76,11)" fg:x="219" fg:w="2"/><text x="18.0984%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9299%" y="357" width="0.0815%" height="15" fill="rgb(245,21,50)" fg:x="220" fg:w="1"/><text x="18.1799%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.9299%" y="341" width="0.0815%" height="15" fill="rgb(228,9,43)" fg:x="220" fg:w="1"/><text x="18.1799%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.9299%" y="325" width="0.0815%" height="15" fill="rgb(208,100,47)" fg:x="220" fg:w="1"/><text x="18.1799%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.9299%" y="309" width="0.0815%" height="15" fill="rgb(232,26,8)" fg:x="220" fg:w="1"/><text x="18.1799%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.9299%" y="293" width="0.0815%" height="15" fill="rgb(216,166,38)" fg:x="220" fg:w="1"/><text x="18.1799%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9299%" y="277" width="0.0815%" height="15" fill="rgb(251,202,51)" fg:x="220" fg:w="1"/><text x="18.1799%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.9299%" y="261" width="0.0815%" height="15" fill="rgb(254,216,34)" fg:x="220" fg:w="1"/><text x="18.1799%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.9299%" y="245" width="0.0815%" height="15" fill="rgb(251,32,27)" fg:x="220" fg:w="1"/><text x="18.1799%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.9299%" y="229" width="0.0815%" height="15" fill="rgb(208,127,28)" fg:x="220" fg:w="1"/><text x="18.1799%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.9299%" y="213" width="0.0815%" height="15" fill="rgb(224,137,22)" fg:x="220" fg:w="1"/><text x="18.1799%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.9299%" y="197" width="0.0815%" height="15" fill="rgb(254,70,32)" fg:x="220" fg:w="1"/><text x="18.1799%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.9299%" y="181" width="0.0815%" height="15" fill="rgb(229,75,37)" fg:x="220" fg:w="1"/><text x="18.1799%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0114%" y="341" width="0.0815%" height="15" fill="rgb(252,64,23)" fg:x="221" fg:w="1"/><text x="18.2614%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.0114%" y="325" width="0.0815%" height="15" fill="rgb(232,162,48)" fg:x="221" fg:w="1"/><text x="18.2614%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.0114%" y="309" width="0.0815%" height="15" fill="rgb(246,160,12)" fg:x="221" fg:w="1"/><text x="18.2614%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="17.8484%" y="437" width="0.3260%" height="15" fill="rgb(247,166,0)" fg:x="219" fg:w="4"/><text x="18.0984%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="17.8484%" y="421" width="0.3260%" height="15" fill="rgb(249,219,21)" fg:x="219" fg:w="4"/><text x="18.0984%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.0114%" y="405" width="0.1630%" height="15" fill="rgb(205,209,3)" fg:x="221" fg:w="2"/><text x="18.2614%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0114%" y="389" width="0.1630%" height="15" fill="rgb(243,44,1)" fg:x="221" fg:w="2"/><text x="18.2614%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.0114%" y="373" width="0.1630%" height="15" fill="rgb(206,159,16)" fg:x="221" fg:w="2"/><text x="18.2614%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0114%" y="357" width="0.1630%" height="15" fill="rgb(244,77,30)" fg:x="221" fg:w="2"/><text x="18.2614%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0929%" y="341" width="0.0815%" height="15" fill="rgb(218,69,12)" fg:x="222" fg:w="1"/><text x="18.3429%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0929%" y="325" width="0.0815%" height="15" fill="rgb(212,87,7)" fg:x="222" fg:w="1"/><text x="18.3429%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0929%" y="309" width="0.0815%" height="15" fill="rgb(245,114,25)" fg:x="222" fg:w="1"/><text x="18.3429%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2559%" y="405" width="0.0815%" height="15" fill="rgb(210,61,42)" fg:x="224" fg:w="1"/><text x="18.5059%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2559%" y="389" width="0.0815%" height="15" fill="rgb(211,52,33)" fg:x="224" fg:w="1"/><text x="18.5059%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.2559%" y="373" width="0.0815%" height="15" fill="rgb(234,58,33)" fg:x="224" fg:w="1"/><text x="18.5059%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.22%)</title><rect x="17.1964%" y="485" width="1.2225%" height="15" fill="rgb(220,115,36)" fg:x="211" fg:w="15"/><text x="17.4464%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (7 samples, 0.57%)</title><rect x="17.8484%" y="469" width="0.5705%" height="15" fill="rgb(243,153,54)" fg:x="219" fg:w="7"/><text x="18.0984%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.57%)</title><rect x="17.8484%" y="453" width="0.5705%" height="15" fill="rgb(251,47,18)" fg:x="219" fg:w="7"/><text x="18.0984%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="18.1744%" y="437" width="0.2445%" height="15" fill="rgb(242,102,42)" fg:x="223" fg:w="3"/><text x="18.4244%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.1744%" y="421" width="0.2445%" height="15" fill="rgb(234,31,38)" fg:x="223" fg:w="3"/><text x="18.4244%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3374%" y="405" width="0.0815%" height="15" fill="rgb(221,117,51)" fg:x="225" fg:w="1"/><text x="18.5874%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3374%" y="389" width="0.0815%" height="15" fill="rgb(212,20,18)" fg:x="225" fg:w="1"/><text x="18.5874%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.3374%" y="373" width="0.0815%" height="15" fill="rgb(245,133,36)" fg:x="225" fg:w="1"/><text x="18.5874%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.3374%" y="357" width="0.0815%" height="15" fill="rgb(212,6,19)" fg:x="225" fg:w="1"/><text x="18.5874%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.3374%" y="341" width="0.0815%" height="15" fill="rgb(218,1,36)" fg:x="225" fg:w="1"/><text x="18.5874%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.4189%" y="469" width="0.0815%" height="15" fill="rgb(246,84,54)" fg:x="226" fg:w="1"/><text x="18.6689%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.4189%" y="453" width="0.0815%" height="15" fill="rgb(242,110,6)" fg:x="226" fg:w="1"/><text x="18.6689%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.39%)</title><rect x="17.1964%" y="501" width="1.3855%" height="15" fill="rgb(214,47,5)" fg:x="211" fg:w="17"/><text x="17.4464%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.4189%" y="485" width="0.1630%" height="15" fill="rgb(218,159,25)" fg:x="226" fg:w="2"/><text x="18.6689%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.5004%" y="469" width="0.0815%" height="15" fill="rgb(215,211,28)" fg:x="227" fg:w="1"/><text x="18.7504%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.5004%" y="453" width="0.0815%" height="15" fill="rgb(238,59,32)" fg:x="227" fg:w="1"/><text x="18.7504%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.5004%" y="437" width="0.0815%" height="15" fill="rgb(226,82,3)" fg:x="227" fg:w="1"/><text x="18.7504%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.5819%" y="357" width="0.0815%" height="15" fill="rgb(240,164,32)" fg:x="228" fg:w="1"/><text x="18.8319%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.5819%" y="341" width="0.0815%" height="15" fill="rgb(232,46,7)" fg:x="228" fg:w="1"/><text x="18.8319%" y="351.50"></text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.55%)</title><rect x="17.1964%" y="517" width="1.5485%" height="15" fill="rgb(229,129,53)" fg:x="211" fg:w="19"/><text x="17.4464%" y="527.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="18.5819%" y="501" width="0.1630%" height="15" fill="rgb(234,188,29)" fg:x="228" fg:w="2"/><text x="18.8319%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="18.5819%" y="485" width="0.1630%" height="15" fill="rgb(246,141,4)" fg:x="228" fg:w="2"/><text x="18.8319%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="18.5819%" y="469" width="0.1630%" height="15" fill="rgb(229,23,39)" fg:x="228" fg:w="2"/><text x="18.8319%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.5819%" y="453" width="0.1630%" height="15" fill="rgb(206,12,3)" fg:x="228" fg:w="2"/><text x="18.8319%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="18.5819%" y="437" width="0.1630%" height="15" fill="rgb(252,226,20)" fg:x="228" fg:w="2"/><text x="18.8319%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.5819%" y="421" width="0.1630%" height="15" fill="rgb(216,123,35)" fg:x="228" fg:w="2"/><text x="18.8319%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5819%" y="405" width="0.1630%" height="15" fill="rgb(212,68,40)" fg:x="228" fg:w="2"/><text x="18.8319%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="18.5819%" y="389" width="0.1630%" height="15" fill="rgb(254,125,32)" fg:x="228" fg:w="2"/><text x="18.8319%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.5819%" y="373" width="0.1630%" height="15" fill="rgb(253,97,22)" fg:x="228" fg:w="2"/><text x="18.8319%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.6634%" y="357" width="0.0815%" height="15" fill="rgb(241,101,14)" fg:x="229" fg:w="1"/><text x="18.9134%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.6634%" y="341" width="0.0815%" height="15" fill="rgb(238,103,29)" fg:x="229" fg:w="1"/><text x="18.9134%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 2.12%)</title><rect x="16.7074%" y="565" width="2.1190%" height="15" fill="rgb(233,195,47)" fg:x="205" fg:w="26"/><text x="16.9574%" y="575.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.12%)</title><rect x="16.7074%" y="549" width="2.1190%" height="15" fill="rgb(246,218,30)" fg:x="205" fg:w="26"/><text x="16.9574%" y="559.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (26 samples, 2.12%)</title><rect x="16.7074%" y="533" width="2.1190%" height="15" fill="rgb(219,145,47)" fg:x="205" fg:w="26"/><text x="16.9574%" y="543.50">p..</text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="18.7449%" y="517" width="0.0815%" height="15" fill="rgb(243,12,26)" fg:x="230" fg:w="1"/><text x="18.9949%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="18.7449%" y="501" width="0.0815%" height="15" fill="rgb(214,87,16)" fg:x="230" fg:w="1"/><text x="18.9949%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.8264%" y="549" width="0.1630%" height="15" fill="rgb(208,99,42)" fg:x="231" fg:w="2"/><text x="19.0764%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9079%" y="533" width="0.0815%" height="15" fill="rgb(253,99,2)" fg:x="232" fg:w="1"/><text x="19.1579%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9079%" y="517" width="0.0815%" height="15" fill="rgb(220,168,23)" fg:x="232" fg:w="1"/><text x="19.1579%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.9079%" y="501" width="0.0815%" height="15" fill="rgb(242,38,24)" fg:x="232" fg:w="1"/><text x="19.1579%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.9079%" y="485" width="0.0815%" height="15" fill="rgb(225,182,9)" fg:x="232" fg:w="1"/><text x="19.1579%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.9079%" y="469" width="0.0815%" height="15" fill="rgb(243,178,37)" fg:x="232" fg:w="1"/><text x="19.1579%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9079%" y="453" width="0.0815%" height="15" fill="rgb(232,139,19)" fg:x="232" fg:w="1"/><text x="19.1579%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9079%" y="437" width="0.0815%" height="15" fill="rgb(225,201,24)" fg:x="232" fg:w="1"/><text x="19.1579%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.9079%" y="421" width="0.0815%" height="15" fill="rgb(221,47,46)" fg:x="232" fg:w="1"/><text x="19.1579%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.9079%" y="405" width="0.0815%" height="15" fill="rgb(249,23,13)" fg:x="232" fg:w="1"/><text x="19.1579%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.9079%" y="389" width="0.0815%" height="15" fill="rgb(219,9,5)" fg:x="232" fg:w="1"/><text x="19.1579%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.9079%" y="373" width="0.0815%" height="15" fill="rgb(254,171,16)" fg:x="232" fg:w="1"/><text x="19.1579%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9079%" y="357" width="0.0815%" height="15" fill="rgb(230,171,20)" fg:x="232" fg:w="1"/><text x="19.1579%" y="367.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="18.9894%" y="469" width="0.0815%" height="15" fill="rgb(210,71,41)" fg:x="233" fg:w="1"/><text x="19.2394%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="18.9894%" y="501" width="0.1630%" height="15" fill="rgb(206,173,20)" fg:x="233" fg:w="2"/><text x="19.2394%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="18.9894%" y="485" width="0.1630%" height="15" fill="rgb(233,88,34)" fg:x="233" fg:w="2"/><text x="19.2394%" y="495.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="19.0709%" y="469" width="0.0815%" height="15" fill="rgb(223,209,46)" fg:x="234" fg:w="1"/><text x="19.3209%" y="479.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="19.0709%" y="453" width="0.0815%" height="15" fill="rgb(250,43,18)" fg:x="234" fg:w="1"/><text x="19.3209%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.2339%" y="421" width="0.1630%" height="15" fill="rgb(208,13,10)" fg:x="236" fg:w="2"/><text x="19.4839%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.3154%" y="405" width="0.0815%" height="15" fill="rgb(212,200,36)" fg:x="237" fg:w="1"/><text x="19.5654%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3154%" y="389" width="0.0815%" height="15" fill="rgb(225,90,30)" fg:x="237" fg:w="1"/><text x="19.5654%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.3154%" y="373" width="0.0815%" height="15" fill="rgb(236,182,39)" fg:x="237" fg:w="1"/><text x="19.5654%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="19.2339%" y="437" width="0.3260%" height="15" fill="rgb(212,144,35)" fg:x="236" fg:w="4"/><text x="19.4839%" y="447.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.3969%" y="421" width="0.1630%" height="15" fill="rgb(228,63,44)" fg:x="238" fg:w="2"/><text x="19.6469%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.5599%" y="421" width="0.0815%" height="15" fill="rgb(228,109,6)" fg:x="240" fg:w="1"/><text x="19.8099%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5599%" y="405" width="0.0815%" height="15" fill="rgb(238,117,24)" fg:x="240" fg:w="1"/><text x="19.8099%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.5599%" y="389" width="0.0815%" height="15" fill="rgb(242,26,26)" fg:x="240" fg:w="1"/><text x="19.8099%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.6414%" y="421" width="0.2445%" height="15" fill="rgb(221,92,48)" fg:x="241" fg:w="3"/><text x="19.8914%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8044%" y="405" width="0.0815%" height="15" fill="rgb(209,209,32)" fg:x="243" fg:w="1"/><text x="20.0544%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8044%" y="389" width="0.0815%" height="15" fill="rgb(221,70,22)" fg:x="243" fg:w="1"/><text x="20.0544%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9674%" y="373" width="0.0815%" height="15" fill="rgb(248,145,5)" fg:x="245" fg:w="1"/><text x="20.2174%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.0489%" y="373" width="0.1630%" height="15" fill="rgb(226,116,26)" fg:x="246" fg:w="2"/><text x="20.2989%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.0489%" y="357" width="0.1630%" height="15" fill="rgb(244,5,17)" fg:x="246" fg:w="2"/><text x="20.2989%" y="367.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.0489%" y="341" width="0.1630%" height="15" fill="rgb(252,159,33)" fg:x="246" fg:w="2"/><text x="20.2989%" y="351.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1304%" y="325" width="0.0815%" height="15" fill="rgb(206,71,0)" fg:x="247" fg:w="1"/><text x="20.3804%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1304%" y="309" width="0.0815%" height="15" fill="rgb(233,118,54)" fg:x="247" fg:w="1"/><text x="20.3804%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="19.9674%" y="405" width="0.3260%" height="15" fill="rgb(234,83,48)" fg:x="245" fg:w="4"/><text x="20.2174%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.33%)</title><rect x="19.9674%" y="389" width="0.3260%" height="15" fill="rgb(228,3,54)" fg:x="245" fg:w="4"/><text x="20.2174%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2119%" y="373" width="0.0815%" height="15" fill="rgb(226,155,13)" fg:x="248" fg:w="1"/><text x="20.4619%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="20.2934%" y="405" width="0.2445%" height="15" fill="rgb(241,28,37)" fg:x="249" fg:w="3"/><text x="20.5434%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.2934%" y="389" width="0.2445%" height="15" fill="rgb(233,93,10)" fg:x="249" fg:w="3"/><text x="20.5434%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4564%" y="373" width="0.0815%" height="15" fill="rgb(225,113,19)" fg:x="251" fg:w="1"/><text x="20.7064%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="20.6194%" y="389" width="0.4075%" height="15" fill="rgb(241,2,18)" fg:x="253" fg:w="5"/><text x="20.8694%" y="399.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.41%)</title><rect x="20.6194%" y="373" width="0.4075%" height="15" fill="rgb(228,207,21)" fg:x="253" fg:w="5"/><text x="20.8694%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.7824%" y="357" width="0.2445%" height="15" fill="rgb(213,211,35)" fg:x="255" fg:w="3"/><text x="21.0324%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.8639%" y="341" width="0.1630%" height="15" fill="rgb(209,83,10)" fg:x="256" fg:w="2"/><text x="21.1139%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.1899%" y="325" width="0.0815%" height="15" fill="rgb(209,164,1)" fg:x="260" fg:w="1"/><text x="21.4399%" y="335.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="21.1084%" y="373" width="0.2445%" height="15" fill="rgb(213,184,43)" fg:x="259" fg:w="3"/><text x="21.3584%" y="383.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.1084%" y="357" width="0.2445%" height="15" fill="rgb(231,61,34)" fg:x="259" fg:w="3"/><text x="21.3584%" y="367.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.1899%" y="341" width="0.1630%" height="15" fill="rgb(235,75,3)" fg:x="260" fg:w="2"/><text x="21.4399%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.2714%" y="325" width="0.0815%" height="15" fill="rgb(220,106,47)" fg:x="261" fg:w="1"/><text x="21.5214%" y="335.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="21.3529%" y="373" width="0.1630%" height="15" fill="rgb(210,196,33)" fg:x="262" fg:w="2"/><text x="21.6029%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.4344%" y="357" width="0.0815%" height="15" fill="rgb(229,154,42)" fg:x="263" fg:w="1"/><text x="21.6844%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="21.0269%" y="389" width="0.7335%" height="15" fill="rgb(228,114,26)" fg:x="258" fg:w="9"/><text x="21.2769%" y="399.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.5159%" y="373" width="0.2445%" height="15" fill="rgb(208,144,1)" fg:x="264" fg:w="3"/><text x="21.7659%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.7604%" y="357" width="0.0815%" height="15" fill="rgb(239,112,37)" fg:x="267" fg:w="1"/><text x="22.0104%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.39%)</title><rect x="20.5379%" y="405" width="1.3855%" height="15" fill="rgb(210,96,50)" fg:x="252" fg:w="17"/><text x="20.7879%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.7604%" y="389" width="0.1630%" height="15" fill="rgb(222,178,2)" fg:x="267" fg:w="2"/><text x="22.0104%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.7604%" y="373" width="0.1630%" height="15" fill="rgb(226,74,18)" fg:x="267" fg:w="2"/><text x="22.0104%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.8419%" y="357" width="0.0815%" height="15" fill="rgb(225,67,54)" fg:x="268" fg:w="1"/><text x="22.0919%" y="367.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.12%)</title><rect x="19.8859%" y="421" width="2.1190%" height="15" fill="rgb(251,92,32)" fg:x="244" fg:w="26"/><text x="20.1359%" y="431.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.9234%" y="405" width="0.0815%" height="15" fill="rgb(228,149,22)" fg:x="269" fg:w="1"/><text x="22.1734%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.9234%" y="389" width="0.0815%" height="15" fill="rgb(243,54,13)" fg:x="269" fg:w="1"/><text x="22.1734%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="22.1679%" y="389" width="0.2445%" height="15" fill="rgb(243,180,28)" fg:x="272" fg:w="3"/><text x="22.4179%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="22.1679%" y="373" width="0.2445%" height="15" fill="rgb(208,167,24)" fg:x="272" fg:w="3"/><text x="22.4179%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="22.2494%" y="357" width="0.1630%" height="15" fill="rgb(245,73,45)" fg:x="273" fg:w="2"/><text x="22.4994%" y="367.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="22.2494%" y="341" width="0.1630%" height="15" fill="rgb(237,203,48)" fg:x="273" fg:w="2"/><text x="22.4994%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.93%)</title><rect x="19.5599%" y="437" width="2.9340%" height="15" fill="rgb(211,197,16)" fg:x="240" fg:w="36"/><text x="19.8099%" y="447.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="22.0049%" y="421" width="0.4890%" height="15" fill="rgb(243,99,51)" fg:x="270" fg:w="6"/><text x="22.2549%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.41%)</title><rect x="22.0864%" y="405" width="0.4075%" height="15" fill="rgb(215,123,29)" fg:x="271" fg:w="5"/><text x="22.3364%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="22.4124%" y="389" width="0.0815%" height="15" fill="rgb(239,186,37)" fg:x="275" fg:w="1"/><text x="22.6624%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.42%)</title><rect x="19.1524%" y="453" width="3.4230%" height="15" fill="rgb(252,136,39)" fg:x="235" fg:w="42"/><text x="19.4024%" y="463.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.4939%" y="437" width="0.0815%" height="15" fill="rgb(223,213,32)" fg:x="276" fg:w="1"/><text x="22.7439%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5754%" y="421" width="0.0815%" height="15" fill="rgb(233,115,5)" fg:x="277" fg:w="1"/><text x="22.8254%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6569%" y="421" width="0.0815%" height="15" fill="rgb(207,226,44)" fg:x="278" fg:w="1"/><text x="22.9069%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6569%" y="405" width="0.0815%" height="15" fill="rgb(208,126,0)" fg:x="278" fg:w="1"/><text x="22.9069%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7384%" y="405" width="0.0815%" height="15" fill="rgb(244,66,21)" fg:x="279" fg:w="1"/><text x="22.9884%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8199%" y="405" width="0.0815%" height="15" fill="rgb(222,97,12)" fg:x="280" fg:w="1"/><text x="23.0699%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9014%" y="389" width="0.0815%" height="15" fill="rgb(219,213,19)" fg:x="281" fg:w="1"/><text x="23.1514%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.9829%" y="389" width="0.0815%" height="15" fill="rgb(252,169,30)" fg:x="282" fg:w="1"/><text x="23.2329%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.1459%" y="373" width="0.0815%" height="15" fill="rgb(206,32,51)" fg:x="284" fg:w="1"/><text x="23.3959%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="23.2274%" y="373" width="0.0815%" height="15" fill="rgb(250,172,42)" fg:x="285" fg:w="1"/><text x="23.4774%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.2274%" y="357" width="0.0815%" height="15" fill="rgb(209,34,43)" fg:x="285" fg:w="1"/><text x="23.4774%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="22.5754%" y="453" width="0.8965%" height="15" fill="rgb(223,11,35)" fg:x="277" fg:w="11"/><text x="22.8254%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.90%)</title><rect x="22.5754%" y="437" width="0.8965%" height="15" fill="rgb(251,219,26)" fg:x="277" fg:w="11"/><text x="22.8254%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="22.7384%" y="421" width="0.7335%" height="15" fill="rgb(231,119,3)" fg:x="279" fg:w="9"/><text x="22.9884%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="22.9014%" y="405" width="0.5705%" height="15" fill="rgb(216,97,11)" fg:x="281" fg:w="7"/><text x="23.1514%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="23.0644%" y="389" width="0.4075%" height="15" fill="rgb(223,59,9)" fg:x="283" fg:w="5"/><text x="23.3144%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.3089%" y="373" width="0.1630%" height="15" fill="rgb(233,93,31)" fg:x="286" fg:w="2"/><text x="23.5589%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3904%" y="357" width="0.0815%" height="15" fill="rgb(239,81,33)" fg:x="287" fg:w="1"/><text x="23.6404%" y="367.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="23.4719%" y="437" width="0.0815%" height="15" fill="rgb(213,120,34)" fg:x="288" fg:w="1"/><text x="23.7219%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="23.4719%" y="421" width="0.0815%" height="15" fill="rgb(243,49,53)" fg:x="288" fg:w="1"/><text x="23.7219%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4719%" y="405" width="0.0815%" height="15" fill="rgb(247,216,33)" fg:x="288" fg:w="1"/><text x="23.7219%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6349%" y="405" width="0.0815%" height="15" fill="rgb(226,26,14)" fg:x="290" fg:w="1"/><text x="23.8849%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.7164%" y="405" width="0.1630%" height="15" fill="rgb(215,49,53)" fg:x="291" fg:w="2"/><text x="23.9664%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7979%" y="389" width="0.0815%" height="15" fill="rgb(245,162,40)" fg:x="292" fg:w="1"/><text x="24.0479%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.7979%" y="373" width="0.0815%" height="15" fill="rgb(229,68,17)" fg:x="292" fg:w="1"/><text x="24.0479%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8794%" y="405" width="0.0815%" height="15" fill="rgb(213,182,10)" fg:x="293" fg:w="1"/><text x="24.1294%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8794%" y="389" width="0.0815%" height="15" fill="rgb(245,125,30)" fg:x="293" fg:w="1"/><text x="24.1294%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1239%" y="373" width="0.0815%" height="15" fill="rgb(232,202,2)" fg:x="296" fg:w="1"/><text x="24.3739%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.33%)</title><rect x="23.9609%" y="405" width="0.3260%" height="15" fill="rgb(237,140,51)" fg:x="294" fg:w="4"/><text x="24.2109%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="23.9609%" y="389" width="0.3260%" height="15" fill="rgb(236,157,25)" fg:x="294" fg:w="4"/><text x="24.2109%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2054%" y="373" width="0.0815%" height="15" fill="rgb(219,209,0)" fg:x="297" fg:w="1"/><text x="24.4554%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2054%" y="357" width="0.0815%" height="15" fill="rgb(240,116,54)" fg:x="297" fg:w="1"/><text x="24.4554%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2054%" y="341" width="0.0815%" height="15" fill="rgb(216,10,36)" fg:x="297" fg:w="1"/><text x="24.4554%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.2869%" y="389" width="0.0815%" height="15" fill="rgb(222,72,44)" fg:x="298" fg:w="1"/><text x="24.5369%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3684%" y="357" width="0.0815%" height="15" fill="rgb(232,159,9)" fg:x="299" fg:w="1"/><text x="24.6184%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3684%" y="341" width="0.0815%" height="15" fill="rgb(210,39,32)" fg:x="299" fg:w="1"/><text x="24.6184%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3684%" y="325" width="0.0815%" height="15" fill="rgb(216,194,45)" fg:x="299" fg:w="1"/><text x="24.6184%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="24.4499%" y="357" width="0.2445%" height="15" fill="rgb(218,18,35)" fg:x="300" fg:w="3"/><text x="24.6999%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="24.4499%" y="341" width="0.2445%" height="15" fill="rgb(207,83,51)" fg:x="300" fg:w="3"/><text x="24.6999%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="24.6129%" y="325" width="0.0815%" height="15" fill="rgb(225,63,43)" fg:x="302" fg:w="1"/><text x="24.8629%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6129%" y="309" width="0.0815%" height="15" fill="rgb(207,57,36)" fg:x="302" fg:w="1"/><text x="24.8629%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6129%" y="293" width="0.0815%" height="15" fill="rgb(216,99,33)" fg:x="302" fg:w="1"/><text x="24.8629%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6129%" y="277" width="0.0815%" height="15" fill="rgb(225,42,16)" fg:x="302" fg:w="1"/><text x="24.8629%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.6944%" y="325" width="0.2445%" height="15" fill="rgb(220,201,45)" fg:x="303" fg:w="3"/><text x="24.9444%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.7759%" y="309" width="0.1630%" height="15" fill="rgb(225,33,4)" fg:x="304" fg:w="2"/><text x="25.0259%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.1834%" y="293" width="0.2445%" height="15" fill="rgb(224,33,50)" fg:x="309" fg:w="3"/><text x="25.4334%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.1834%" y="277" width="0.2445%" height="15" fill="rgb(246,198,51)" fg:x="309" fg:w="3"/><text x="25.4334%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.2649%" y="261" width="0.1630%" height="15" fill="rgb(205,22,4)" fg:x="310" fg:w="2"/><text x="25.5149%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.14%)</title><rect x="24.3684%" y="389" width="1.1410%" height="15" fill="rgb(206,3,8)" fg:x="299" fg:w="14"/><text x="24.6184%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.14%)</title><rect x="24.3684%" y="373" width="1.1410%" height="15" fill="rgb(251,23,15)" fg:x="299" fg:w="14"/><text x="24.6184%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="24.6944%" y="357" width="0.8150%" height="15" fill="rgb(252,88,28)" fg:x="303" fg:w="10"/><text x="24.9444%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="24.6944%" y="341" width="0.8150%" height="15" fill="rgb(212,127,14)" fg:x="303" fg:w="10"/><text x="24.9444%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="24.9389%" y="325" width="0.5705%" height="15" fill="rgb(247,145,37)" fg:x="306" fg:w="7"/><text x="25.1889%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="25.1019%" y="309" width="0.4075%" height="15" fill="rgb(209,117,53)" fg:x="308" fg:w="5"/><text x="25.3519%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.4279%" y="293" width="0.0815%" height="15" fill="rgb(212,90,42)" fg:x="312" fg:w="1"/><text x="25.6779%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.5094%" y="389" width="0.1630%" height="15" fill="rgb(218,164,37)" fg:x="313" fg:w="2"/><text x="25.7594%" y="399.50"></text></g><g><title>engine::session::Session::flush (86 samples, 7.01%)</title><rect x="18.8264%" y="565" width="7.0090%" height="15" fill="rgb(246,65,34)" fg:x="231" fg:w="86"/><text x="19.0764%" y="575.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (84 samples, 6.85%)</title><rect x="18.9894%" y="549" width="6.8460%" height="15" fill="rgb(231,100,33)" fg:x="233" fg:w="84"/><text x="19.2394%" y="559.50">engine::s..</text></g><g><title>engine::session::state::State::close (84 samples, 6.85%)</title><rect x="18.9894%" y="533" width="6.8460%" height="15" fill="rgb(228,126,14)" fg:x="233" fg:w="84"/><text x="19.2394%" y="543.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (84 samples, 6.85%)</title><rect x="18.9894%" y="517" width="6.8460%" height="15" fill="rgb(215,173,21)" fg:x="233" fg:w="84"/><text x="19.2394%" y="527.50">engine::s..</text></g><g><title>core::iter::adapters::try_process (82 samples, 6.68%)</title><rect x="19.1524%" y="501" width="6.6830%" height="15" fill="rgb(210,6,40)" fg:x="235" fg:w="82"/><text x="19.4024%" y="511.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82 samples, 6.68%)</title><rect x="19.1524%" y="485" width="6.6830%" height="15" fill="rgb(212,48,18)" fg:x="235" fg:w="82"/><text x="19.4024%" y="495.50">&lt;alloc::v..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (82 samples, 6.68%)</title><rect x="19.1524%" y="469" width="6.6830%" height="15" fill="rgb(230,214,11)" fg:x="235" fg:w="82"/><text x="19.4024%" y="479.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.36%)</title><rect x="23.4719%" y="453" width="2.3635%" height="15" fill="rgb(254,105,39)" fg:x="288" fg:w="29"/><text x="23.7219%" y="463.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.28%)</title><rect x="23.5534%" y="437" width="2.2820%" height="15" fill="rgb(245,158,5)" fg:x="289" fg:w="28"/><text x="23.8034%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.28%)</title><rect x="23.5534%" y="421" width="2.2820%" height="15" fill="rgb(249,208,11)" fg:x="289" fg:w="28"/><text x="23.8034%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.55%)</title><rect x="24.2869%" y="405" width="1.5485%" height="15" fill="rgb(210,39,28)" fg:x="298" fg:w="19"/><text x="24.5369%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.6724%" y="389" width="0.1630%" height="15" fill="rgb(211,56,53)" fg:x="315" fg:w="2"/><text x="25.9224%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.6724%" y="373" width="0.1630%" height="15" fill="rgb(226,201,30)" fg:x="315" fg:w="2"/><text x="25.9224%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.6724%" y="357" width="0.1630%" height="15" fill="rgb(239,101,34)" fg:x="315" fg:w="2"/><text x="25.9224%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8354%" y="549" width="0.0815%" height="15" fill="rgb(226,209,5)" fg:x="317" fg:w="1"/><text x="26.0854%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="25.9169%" y="549" width="0.0815%" height="15" fill="rgb(250,105,47)" fg:x="318" fg:w="1"/><text x="26.1669%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.9984%" y="501" width="0.0815%" height="15" fill="rgb(230,72,3)" fg:x="319" fg:w="1"/><text x="26.2484%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.9984%" y="485" width="0.0815%" height="15" fill="rgb(232,218,39)" fg:x="319" fg:w="1"/><text x="26.2484%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.9984%" y="469" width="0.0815%" height="15" fill="rgb(248,166,6)" fg:x="319" fg:w="1"/><text x="26.2484%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="25.9984%" y="533" width="0.1630%" height="15" fill="rgb(247,89,20)" fg:x="319" fg:w="2"/><text x="26.2484%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="25.9984%" y="517" width="0.1630%" height="15" fill="rgb(248,130,54)" fg:x="319" fg:w="2"/><text x="26.2484%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="26.0799%" y="501" width="0.0815%" height="15" fill="rgb(234,196,4)" fg:x="320" fg:w="1"/><text x="26.3299%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.0799%" y="485" width="0.0815%" height="15" fill="rgb(250,143,31)" fg:x="320" fg:w="1"/><text x="26.3299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1614%" y="485" width="0.0815%" height="15" fill="rgb(211,110,34)" fg:x="321" fg:w="1"/><text x="26.4114%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.1614%" y="469" width="0.0815%" height="15" fill="rgb(215,124,48)" fg:x="321" fg:w="1"/><text x="26.4114%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.1614%" y="453" width="0.0815%" height="15" fill="rgb(216,46,13)" fg:x="321" fg:w="1"/><text x="26.4114%" y="463.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="26.1614%" y="533" width="0.2445%" height="15" fill="rgb(205,184,25)" fg:x="321" fg:w="3"/><text x="26.4114%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="26.1614%" y="517" width="0.2445%" height="15" fill="rgb(228,1,10)" fg:x="321" fg:w="3"/><text x="26.4114%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="26.1614%" y="501" width="0.2445%" height="15" fill="rgb(213,116,27)" fg:x="321" fg:w="3"/><text x="26.4114%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="26.2429%" y="485" width="0.1630%" height="15" fill="rgb(241,95,50)" fg:x="322" fg:w="2"/><text x="26.4929%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="26.2429%" y="469" width="0.1630%" height="15" fill="rgb(238,48,32)" fg:x="322" fg:w="2"/><text x="26.4929%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.2429%" y="453" width="0.1630%" height="15" fill="rgb(235,113,49)" fg:x="322" fg:w="2"/><text x="26.4929%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3244%" y="437" width="0.0815%" height="15" fill="rgb(205,127,43)" fg:x="323" fg:w="1"/><text x="26.5744%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4874%" y="453" width="0.0815%" height="15" fill="rgb(250,162,2)" fg:x="325" fg:w="1"/><text x="26.7374%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4874%" y="437" width="0.0815%" height="15" fill="rgb(220,13,41)" fg:x="325" fg:w="1"/><text x="26.7374%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="26.4059%" y="485" width="0.2445%" height="15" fill="rgb(249,221,25)" fg:x="324" fg:w="3"/><text x="26.6559%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.4059%" y="469" width="0.2445%" height="15" fill="rgb(215,208,19)" fg:x="324" fg:w="3"/><text x="26.6559%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.5689%" y="453" width="0.0815%" height="15" fill="rgb(236,175,2)" fg:x="326" fg:w="1"/><text x="26.8189%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5689%" y="437" width="0.0815%" height="15" fill="rgb(241,52,2)" fg:x="326" fg:w="1"/><text x="26.8189%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.5689%" y="421" width="0.0815%" height="15" fill="rgb(248,140,14)" fg:x="326" fg:w="1"/><text x="26.8189%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6504%" y="341" width="0.0815%" height="15" fill="rgb(253,22,42)" fg:x="327" fg:w="1"/><text x="26.9004%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6504%" y="325" width="0.0815%" height="15" fill="rgb(234,61,47)" fg:x="327" fg:w="1"/><text x="26.9004%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6504%" y="309" width="0.0815%" height="15" fill="rgb(208,226,15)" fg:x="327" fg:w="1"/><text x="26.9004%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6504%" y="293" width="0.0815%" height="15" fill="rgb(217,221,4)" fg:x="327" fg:w="1"/><text x="26.9004%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6504%" y="277" width="0.0815%" height="15" fill="rgb(212,174,34)" fg:x="327" fg:w="1"/><text x="26.9004%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6504%" y="261" width="0.0815%" height="15" fill="rgb(253,83,4)" fg:x="327" fg:w="1"/><text x="26.9004%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6504%" y="245" width="0.0815%" height="15" fill="rgb(250,195,49)" fg:x="327" fg:w="1"/><text x="26.9004%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.6504%" y="437" width="0.1630%" height="15" fill="rgb(241,192,25)" fg:x="327" fg:w="2"/><text x="26.9004%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.6504%" y="421" width="0.1630%" height="15" fill="rgb(208,124,10)" fg:x="327" fg:w="2"/><text x="26.9004%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.6504%" y="405" width="0.1630%" height="15" fill="rgb(222,33,0)" fg:x="327" fg:w="2"/><text x="26.9004%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="26.6504%" y="389" width="0.1630%" height="15" fill="rgb(234,209,28)" fg:x="327" fg:w="2"/><text x="26.9004%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="26.6504%" y="373" width="0.1630%" height="15" fill="rgb(224,11,23)" fg:x="327" fg:w="2"/><text x="26.9004%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="26.6504%" y="357" width="0.1630%" height="15" fill="rgb(232,99,1)" fg:x="327" fg:w="2"/><text x="26.9004%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7319%" y="341" width="0.0815%" height="15" fill="rgb(237,95,45)" fg:x="328" fg:w="1"/><text x="26.9819%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.7319%" y="325" width="0.0815%" height="15" fill="rgb(208,109,11)" fg:x="328" fg:w="1"/><text x="26.9819%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.6504%" y="453" width="0.2445%" height="15" fill="rgb(216,190,48)" fg:x="327" fg:w="3"/><text x="26.9004%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.8134%" y="437" width="0.0815%" height="15" fill="rgb(251,171,36)" fg:x="329" fg:w="1"/><text x="27.0634%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.8134%" y="421" width="0.0815%" height="15" fill="rgb(230,62,22)" fg:x="329" fg:w="1"/><text x="27.0634%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.8134%" y="405" width="0.0815%" height="15" fill="rgb(225,114,35)" fg:x="329" fg:w="1"/><text x="27.0634%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.8134%" y="389" width="0.0815%" height="15" fill="rgb(215,118,42)" fg:x="329" fg:w="1"/><text x="27.0634%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.8134%" y="373" width="0.0815%" height="15" fill="rgb(243,119,21)" fg:x="329" fg:w="1"/><text x="27.0634%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.8134%" y="357" width="0.0815%" height="15" fill="rgb(252,177,53)" fg:x="329" fg:w="1"/><text x="27.0634%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.8134%" y="341" width="0.0815%" height="15" fill="rgb(237,209,29)" fg:x="329" fg:w="1"/><text x="27.0634%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.8949%" y="389" width="0.0815%" height="15" fill="rgb(212,65,23)" fg:x="330" fg:w="1"/><text x="27.1449%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.8949%" y="373" width="0.0815%" height="15" fill="rgb(230,222,46)" fg:x="330" fg:w="1"/><text x="27.1449%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9764%" y="389" width="0.0815%" height="15" fill="rgb(215,135,32)" fg:x="331" fg:w="1"/><text x="27.2264%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.73%)</title><rect x="26.4059%" y="533" width="0.7335%" height="15" fill="rgb(246,101,22)" fg:x="324" fg:w="9"/><text x="26.6559%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="26.4059%" y="517" width="0.7335%" height="15" fill="rgb(206,107,13)" fg:x="324" fg:w="9"/><text x="26.6559%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="26.4059%" y="501" width="0.7335%" height="15" fill="rgb(250,100,44)" fg:x="324" fg:w="9"/><text x="26.6559%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="26.6504%" y="485" width="0.4890%" height="15" fill="rgb(231,147,38)" fg:x="327" fg:w="6"/><text x="26.9004%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="26.6504%" y="469" width="0.4890%" height="15" fill="rgb(229,8,40)" fg:x="327" fg:w="6"/><text x="26.9004%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="26.8949%" y="453" width="0.2445%" height="15" fill="rgb(221,135,30)" fg:x="330" fg:w="3"/><text x="27.1449%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.8949%" y="437" width="0.2445%" height="15" fill="rgb(249,193,18)" fg:x="330" fg:w="3"/><text x="27.1449%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="26.8949%" y="421" width="0.2445%" height="15" fill="rgb(209,133,39)" fg:x="330" fg:w="3"/><text x="27.1449%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.8949%" y="405" width="0.2445%" height="15" fill="rgb(232,100,14)" fg:x="330" fg:w="3"/><text x="27.1449%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0579%" y="389" width="0.0815%" height="15" fill="rgb(224,185,1)" fg:x="332" fg:w="1"/><text x="27.3079%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0579%" y="373" width="0.0815%" height="15" fill="rgb(223,139,8)" fg:x="332" fg:w="1"/><text x="27.3079%" y="383.50"></text></g><g><title>&lt;replies::Json as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="27.1394%" y="501" width="0.0815%" height="15" fill="rgb(232,213,38)" fg:x="333" fg:w="1"/><text x="27.3894%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.47%)</title><rect x="25.8354%" y="565" width="1.4670%" height="15" fill="rgb(207,94,22)" fg:x="317" fg:w="18"/><text x="26.0854%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (16 samples, 1.30%)</title><rect x="25.9984%" y="549" width="1.3040%" height="15" fill="rgb(219,183,54)" fg:x="319" fg:w="16"/><text x="26.2484%" y="559.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="27.1394%" y="533" width="0.1630%" height="15" fill="rgb(216,185,54)" fg:x="333" fg:w="2"/><text x="27.3894%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.1394%" y="517" width="0.1630%" height="15" fill="rgb(254,217,39)" fg:x="333" fg:w="2"/><text x="27.3894%" y="527.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2209%" y="501" width="0.0815%" height="15" fill="rgb(240,178,23)" fg:x="334" fg:w="1"/><text x="27.4709%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2209%" y="485" width="0.0815%" height="15" fill="rgb(218,11,47)" fg:x="334" fg:w="1"/><text x="27.4709%" y="495.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2209%" y="469" width="0.0815%" height="15" fill="rgb(218,51,51)" fg:x="334" fg:w="1"/><text x="27.4709%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2209%" y="453" width="0.0815%" height="15" fill="rgb(238,126,27)" fg:x="334" fg:w="1"/><text x="27.4709%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.2209%" y="437" width="0.0815%" height="15" fill="rgb(249,202,22)" fg:x="334" fg:w="1"/><text x="27.4709%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3024%" y="469" width="0.0815%" height="15" fill="rgb(254,195,49)" fg:x="335" fg:w="1"/><text x="27.5524%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3024%" y="453" width="0.0815%" height="15" fill="rgb(208,123,14)" fg:x="335" fg:w="1"/><text x="27.5524%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3024%" y="437" width="0.0815%" height="15" fill="rgb(224,200,8)" fg:x="335" fg:w="1"/><text x="27.5524%" y="447.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="27.3024%" y="565" width="0.1630%" height="15" fill="rgb(217,61,36)" fg:x="335" fg:w="2"/><text x="27.5524%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="27.3024%" y="549" width="0.1630%" height="15" fill="rgb(206,35,45)" fg:x="335" fg:w="2"/><text x="27.5524%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="27.3024%" y="533" width="0.1630%" height="15" fill="rgb(217,65,33)" fg:x="335" fg:w="2"/><text x="27.5524%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.3024%" y="517" width="0.1630%" height="15" fill="rgb(222,158,48)" fg:x="335" fg:w="2"/><text x="27.5524%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="27.3024%" y="501" width="0.1630%" height="15" fill="rgb(254,2,54)" fg:x="335" fg:w="2"/><text x="27.5524%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.3024%" y="485" width="0.1630%" height="15" fill="rgb(250,143,38)" fg:x="335" fg:w="2"/><text x="27.5524%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="27.3839%" y="469" width="0.0815%" height="15" fill="rgb(248,25,0)" fg:x="336" fg:w="1"/><text x="27.6339%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="27.4654%" y="533" width="0.0815%" height="15" fill="rgb(206,152,27)" fg:x="337" fg:w="1"/><text x="27.7154%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="27.4654%" y="517" width="0.0815%" height="15" fill="rgb(240,77,30)" fg:x="337" fg:w="1"/><text x="27.7154%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="27.4654%" y="565" width="0.1630%" height="15" fill="rgb(231,5,3)" fg:x="337" fg:w="2"/><text x="27.7154%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="27.4654%" y="549" width="0.1630%" height="15" fill="rgb(207,226,32)" fg:x="337" fg:w="2"/><text x="27.7154%" y="559.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="27.5469%" y="533" width="0.0815%" height="15" fill="rgb(222,207,47)" fg:x="338" fg:w="1"/><text x="27.7969%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5469%" y="517" width="0.0815%" height="15" fill="rgb(229,115,45)" fg:x="338" fg:w="1"/><text x="27.7969%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5469%" y="501" width="0.0815%" height="15" fill="rgb(224,191,6)" fg:x="338" fg:w="1"/><text x="27.7969%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5469%" y="485" width="0.0815%" height="15" fill="rgb(230,227,24)" fg:x="338" fg:w="1"/><text x="27.7969%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5469%" y="469" width="0.0815%" height="15" fill="rgb(228,80,19)" fg:x="338" fg:w="1"/><text x="27.7969%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5469%" y="453" width="0.0815%" height="15" fill="rgb(247,229,0)" fg:x="338" fg:w="1"/><text x="27.7969%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.7099%" y="485" width="0.0815%" height="15" fill="rgb(237,194,15)" fg:x="340" fg:w="1"/><text x="27.9599%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7099%" y="469" width="0.0815%" height="15" fill="rgb(219,203,20)" fg:x="340" fg:w="1"/><text x="27.9599%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.7099%" y="453" width="0.0815%" height="15" fill="rgb(234,128,8)" fg:x="340" fg:w="1"/><text x="27.9599%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.7099%" y="437" width="0.0815%" height="15" fill="rgb(248,202,8)" fg:x="340" fg:w="1"/><text x="27.9599%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.7099%" y="421" width="0.0815%" height="15" fill="rgb(206,104,37)" fg:x="340" fg:w="1"/><text x="27.9599%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.7099%" y="405" width="0.0815%" height="15" fill="rgb(223,8,27)" fg:x="340" fg:w="1"/><text x="27.9599%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7099%" y="389" width="0.0815%" height="15" fill="rgb(216,217,28)" fg:x="340" fg:w="1"/><text x="27.9599%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.7099%" y="373" width="0.0815%" height="15" fill="rgb(249,199,1)" fg:x="340" fg:w="1"/><text x="27.9599%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.7099%" y="357" width="0.0815%" height="15" fill="rgb(240,85,17)" fg:x="340" fg:w="1"/><text x="27.9599%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.7099%" y="341" width="0.0815%" height="15" fill="rgb(206,108,45)" fg:x="340" fg:w="1"/><text x="27.9599%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.7099%" y="325" width="0.0815%" height="15" fill="rgb(245,210,41)" fg:x="340" fg:w="1"/><text x="27.9599%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.7099%" y="309" width="0.0815%" height="15" fill="rgb(206,13,37)" fg:x="340" fg:w="1"/><text x="27.9599%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7099%" y="293" width="0.0815%" height="15" fill="rgb(250,61,18)" fg:x="340" fg:w="1"/><text x="27.9599%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.7914%" y="453" width="0.0815%" height="15" fill="rgb(235,172,48)" fg:x="341" fg:w="1"/><text x="28.0414%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.7914%" y="437" width="0.0815%" height="15" fill="rgb(249,201,17)" fg:x="341" fg:w="1"/><text x="28.0414%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="27.7099%" y="517" width="0.2445%" height="15" fill="rgb(219,208,6)" fg:x="340" fg:w="3"/><text x="27.9599%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.7099%" y="501" width="0.2445%" height="15" fill="rgb(248,31,23)" fg:x="340" fg:w="3"/><text x="27.9599%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.7914%" y="485" width="0.1630%" height="15" fill="rgb(245,15,42)" fg:x="341" fg:w="2"/><text x="28.0414%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.7914%" y="469" width="0.1630%" height="15" fill="rgb(222,217,39)" fg:x="341" fg:w="2"/><text x="28.0414%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.8729%" y="453" width="0.0815%" height="15" fill="rgb(210,219,27)" fg:x="342" fg:w="1"/><text x="28.1229%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8729%" y="437" width="0.0815%" height="15" fill="rgb(252,166,36)" fg:x="342" fg:w="1"/><text x="28.1229%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.8729%" y="421" width="0.0815%" height="15" fill="rgb(245,132,34)" fg:x="342" fg:w="1"/><text x="28.1229%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.8729%" y="405" width="0.0815%" height="15" fill="rgb(236,54,3)" fg:x="342" fg:w="1"/><text x="28.1229%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="28.0359%" y="469" width="0.0815%" height="15" fill="rgb(241,173,43)" fg:x="344" fg:w="1"/><text x="28.2859%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.0359%" y="453" width="0.0815%" height="15" fill="rgb(215,190,9)" fg:x="344" fg:w="1"/><text x="28.2859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.0359%" y="437" width="0.0815%" height="15" fill="rgb(242,101,16)" fg:x="344" fg:w="1"/><text x="28.2859%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0359%" y="421" width="0.0815%" height="15" fill="rgb(223,190,21)" fg:x="344" fg:w="1"/><text x="28.2859%" y="431.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="27.9544%" y="517" width="0.2445%" height="15" fill="rgb(215,228,25)" fg:x="343" fg:w="3"/><text x="28.2044%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="27.9544%" y="501" width="0.2445%" height="15" fill="rgb(225,36,22)" fg:x="343" fg:w="3"/><text x="28.2044%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.9544%" y="485" width="0.2445%" height="15" fill="rgb(251,106,46)" fg:x="343" fg:w="3"/><text x="28.2044%" y="495.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.1174%" y="469" width="0.0815%" height="15" fill="rgb(208,90,1)" fg:x="345" fg:w="1"/><text x="28.3674%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1174%" y="453" width="0.0815%" height="15" fill="rgb(243,10,4)" fg:x="345" fg:w="1"/><text x="28.3674%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1174%" y="437" width="0.0815%" height="15" fill="rgb(212,137,27)" fg:x="345" fg:w="1"/><text x="28.3674%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="28.1989%" y="469" width="0.0815%" height="15" fill="rgb(231,220,49)" fg:x="346" fg:w="1"/><text x="28.4489%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.1989%" y="453" width="0.0815%" height="15" fill="rgb(237,96,20)" fg:x="346" fg:w="1"/><text x="28.4489%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1989%" y="437" width="0.0815%" height="15" fill="rgb(239,229,30)" fg:x="346" fg:w="1"/><text x="28.4489%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1989%" y="421" width="0.0815%" height="15" fill="rgb(219,65,33)" fg:x="346" fg:w="1"/><text x="28.4489%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.1989%" y="405" width="0.0815%" height="15" fill="rgb(243,134,7)" fg:x="346" fg:w="1"/><text x="28.4489%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.1989%" y="389" width="0.0815%" height="15" fill="rgb(216,177,54)" fg:x="346" fg:w="1"/><text x="28.4489%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2804%" y="453" width="0.0815%" height="15" fill="rgb(211,160,20)" fg:x="347" fg:w="1"/><text x="28.5304%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2804%" y="437" width="0.0815%" height="15" fill="rgb(239,85,39)" fg:x="347" fg:w="1"/><text x="28.5304%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2804%" y="421" width="0.0815%" height="15" fill="rgb(232,125,22)" fg:x="347" fg:w="1"/><text x="28.5304%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2804%" y="405" width="0.0815%" height="15" fill="rgb(244,57,34)" fg:x="347" fg:w="1"/><text x="28.5304%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="28.1989%" y="501" width="0.2445%" height="15" fill="rgb(214,203,32)" fg:x="346" fg:w="3"/><text x="28.4489%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="28.1989%" y="485" width="0.2445%" height="15" fill="rgb(207,58,43)" fg:x="346" fg:w="3"/><text x="28.4489%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.2804%" y="469" width="0.1630%" height="15" fill="rgb(215,193,15)" fg:x="347" fg:w="2"/><text x="28.5304%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3619%" y="453" width="0.0815%" height="15" fill="rgb(232,15,44)" fg:x="348" fg:w="1"/><text x="28.6119%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3619%" y="437" width="0.0815%" height="15" fill="rgb(212,3,48)" fg:x="348" fg:w="1"/><text x="28.6119%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="28.1989%" y="517" width="0.3260%" height="15" fill="rgb(218,128,7)" fg:x="346" fg:w="4"/><text x="28.4489%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4434%" y="501" width="0.0815%" height="15" fill="rgb(226,216,39)" fg:x="349" fg:w="1"/><text x="28.6934%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5249%" y="469" width="0.0815%" height="15" fill="rgb(243,47,51)" fg:x="350" fg:w="1"/><text x="28.7749%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="28.5249%" y="517" width="0.1630%" height="15" fill="rgb(241,183,40)" fg:x="350" fg:w="2"/><text x="28.7749%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.5249%" y="501" width="0.1630%" height="15" fill="rgb(231,217,32)" fg:x="350" fg:w="2"/><text x="28.7749%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.5249%" y="485" width="0.1630%" height="15" fill="rgb(229,61,38)" fg:x="350" fg:w="2"/><text x="28.7749%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.6064%" y="469" width="0.0815%" height="15" fill="rgb(225,210,5)" fg:x="351" fg:w="1"/><text x="28.8564%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6064%" y="453" width="0.0815%" height="15" fill="rgb(231,79,45)" fg:x="351" fg:w="1"/><text x="28.8564%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.6064%" y="437" width="0.0815%" height="15" fill="rgb(224,100,7)" fg:x="351" fg:w="1"/><text x="28.8564%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6064%" y="421" width="0.0815%" height="15" fill="rgb(241,198,18)" fg:x="351" fg:w="1"/><text x="28.8564%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.6064%" y="405" width="0.0815%" height="15" fill="rgb(252,97,53)" fg:x="351" fg:w="1"/><text x="28.8564%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.6064%" y="389" width="0.0815%" height="15" fill="rgb(220,88,7)" fg:x="351" fg:w="1"/><text x="28.8564%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.6879%" y="469" width="0.0815%" height="15" fill="rgb(213,176,14)" fg:x="352" fg:w="1"/><text x="28.9379%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.6879%" y="485" width="0.1630%" height="15" fill="rgb(246,73,7)" fg:x="352" fg:w="2"/><text x="28.9379%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.7694%" y="469" width="0.0815%" height="15" fill="rgb(245,64,36)" fg:x="353" fg:w="1"/><text x="29.0194%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7694%" y="453" width="0.0815%" height="15" fill="rgb(245,80,10)" fg:x="353" fg:w="1"/><text x="29.0194%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7694%" y="437" width="0.0815%" height="15" fill="rgb(232,107,50)" fg:x="353" fg:w="1"/><text x="29.0194%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.7694%" y="421" width="0.0815%" height="15" fill="rgb(253,3,0)" fg:x="353" fg:w="1"/><text x="29.0194%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7694%" y="405" width="0.0815%" height="15" fill="rgb(212,99,53)" fg:x="353" fg:w="1"/><text x="29.0194%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.22%)</title><rect x="27.7099%" y="533" width="1.2225%" height="15" fill="rgb(249,111,54)" fg:x="340" fg:w="15"/><text x="27.9599%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="28.6879%" y="517" width="0.2445%" height="15" fill="rgb(249,55,30)" fg:x="352" fg:w="3"/><text x="28.9379%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="28.6879%" y="501" width="0.2445%" height="15" fill="rgb(237,47,42)" fg:x="352" fg:w="3"/><text x="28.9379%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="28.8509%" y="485" width="0.0815%" height="15" fill="rgb(211,20,18)" fg:x="354" fg:w="1"/><text x="29.1009%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.8509%" y="469" width="0.0815%" height="15" fill="rgb(231,203,46)" fg:x="354" fg:w="1"/><text x="29.1009%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.8509%" y="453" width="0.0815%" height="15" fill="rgb(237,142,3)" fg:x="354" fg:w="1"/><text x="29.1009%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.8509%" y="437" width="0.0815%" height="15" fill="rgb(241,107,1)" fg:x="354" fg:w="1"/><text x="29.1009%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.8509%" y="421" width="0.0815%" height="15" fill="rgb(229,83,13)" fg:x="354" fg:w="1"/><text x="29.1009%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.8509%" y="405" width="0.0815%" height="15" fill="rgb(241,91,40)" fg:x="354" fg:w="1"/><text x="29.1009%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.8509%" y="389" width="0.0815%" height="15" fill="rgb(225,3,45)" fg:x="354" fg:w="1"/><text x="29.1009%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.8509%" y="373" width="0.0815%" height="15" fill="rgb(244,223,14)" fg:x="354" fg:w="1"/><text x="29.1009%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.9324%" y="517" width="0.0815%" height="15" fill="rgb(224,124,37)" fg:x="355" fg:w="1"/><text x="29.1824%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0954%" y="501" width="0.0815%" height="15" fill="rgb(251,171,30)" fg:x="357" fg:w="1"/><text x="29.3454%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0954%" y="485" width="0.0815%" height="15" fill="rgb(236,46,54)" fg:x="357" fg:w="1"/><text x="29.3454%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0954%" y="469" width="0.0815%" height="15" fill="rgb(245,213,5)" fg:x="357" fg:w="1"/><text x="29.3454%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.0954%" y="453" width="0.0815%" height="15" fill="rgb(230,144,27)" fg:x="357" fg:w="1"/><text x="29.3454%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.0954%" y="437" width="0.0815%" height="15" fill="rgb(220,86,6)" fg:x="357" fg:w="1"/><text x="29.3454%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.55%)</title><rect x="27.7099%" y="549" width="1.5485%" height="15" fill="rgb(240,20,13)" fg:x="340" fg:w="19"/><text x="27.9599%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="28.9324%" y="533" width="0.3260%" height="15" fill="rgb(217,89,34)" fg:x="355" fg:w="4"/><text x="29.1824%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.0139%" y="517" width="0.2445%" height="15" fill="rgb(229,13,5)" fg:x="356" fg:w="3"/><text x="29.2639%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.1769%" y="501" width="0.0815%" height="15" fill="rgb(244,67,35)" fg:x="358" fg:w="1"/><text x="29.4269%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.3399%" y="469" width="0.1630%" height="15" fill="rgb(221,40,2)" fg:x="360" fg:w="2"/><text x="29.5899%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.3399%" y="453" width="0.1630%" height="15" fill="rgb(237,157,21)" fg:x="360" fg:w="2"/><text x="29.5899%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.3399%" y="437" width="0.1630%" height="15" fill="rgb(222,94,11)" fg:x="360" fg:w="2"/><text x="29.5899%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4214%" y="421" width="0.0815%" height="15" fill="rgb(249,113,6)" fg:x="361" fg:w="1"/><text x="29.6714%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="29.2584%" y="533" width="0.3260%" height="15" fill="rgb(238,137,36)" fg:x="359" fg:w="4"/><text x="29.5084%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="29.2584%" y="517" width="0.3260%" height="15" fill="rgb(210,102,26)" fg:x="359" fg:w="4"/><text x="29.5084%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="29.2584%" y="501" width="0.3260%" height="15" fill="rgb(218,30,30)" fg:x="359" fg:w="4"/><text x="29.5084%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.3399%" y="485" width="0.2445%" height="15" fill="rgb(214,67,26)" fg:x="360" fg:w="3"/><text x="29.5899%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5029%" y="469" width="0.0815%" height="15" fill="rgb(251,9,53)" fg:x="362" fg:w="1"/><text x="29.7529%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.5029%" y="453" width="0.0815%" height="15" fill="rgb(228,204,25)" fg:x="362" fg:w="1"/><text x="29.7529%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5029%" y="437" width="0.0815%" height="15" fill="rgb(207,153,8)" fg:x="362" fg:w="1"/><text x="29.7529%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.5029%" y="421" width="0.0815%" height="15" fill="rgb(242,9,16)" fg:x="362" fg:w="1"/><text x="29.7529%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.5029%" y="405" width="0.0815%" height="15" fill="rgb(217,211,10)" fg:x="362" fg:w="1"/><text x="29.7529%" y="415.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.5844%" y="533" width="0.1630%" height="15" fill="rgb(219,228,52)" fg:x="363" fg:w="2"/><text x="29.8344%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.6659%" y="517" width="0.0815%" height="15" fill="rgb(231,92,29)" fg:x="364" fg:w="1"/><text x="29.9159%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.6659%" y="501" width="0.0815%" height="15" fill="rgb(232,8,23)" fg:x="364" fg:w="1"/><text x="29.9159%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.6659%" y="485" width="0.0815%" height="15" fill="rgb(216,211,34)" fg:x="364" fg:w="1"/><text x="29.9159%" y="495.50"></text></g><g><title>plugins_core::build::Build::occupying (27 samples, 2.20%)</title><rect x="27.6284%" y="565" width="2.2005%" height="15" fill="rgb(236,151,0)" fg:x="339" fg:w="27"/><text x="27.8784%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_occupying (7 samples, 0.57%)</title><rect x="29.2584%" y="549" width="0.5705%" height="15" fill="rgb(209,168,3)" fg:x="359" fg:w="7"/><text x="29.5084%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="29.7474%" y="533" width="0.0815%" height="15" fill="rgb(208,129,28)" fg:x="365" fg:w="1"/><text x="29.9974%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="29.7474%" y="517" width="0.0815%" height="15" fill="rgb(229,78,22)" fg:x="365" fg:w="1"/><text x="29.9974%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="29.7474%" y="501" width="0.0815%" height="15" fill="rgb(228,187,13)" fg:x="365" fg:w="1"/><text x="29.9974%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.7474%" y="485" width="0.0815%" height="15" fill="rgb(240,119,24)" fg:x="365" fg:w="1"/><text x="29.9974%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.7474%" y="469" width="0.0815%" height="15" fill="rgb(209,194,42)" fg:x="365" fg:w="1"/><text x="29.9974%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7474%" y="453" width="0.0815%" height="15" fill="rgb(247,200,46)" fg:x="365" fg:w="1"/><text x="29.9974%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7474%" y="437" width="0.0815%" height="15" fill="rgb(218,76,16)" fg:x="365" fg:w="1"/><text x="29.9974%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.7474%" y="421" width="0.0815%" height="15" fill="rgb(225,21,48)" fg:x="365" fg:w="1"/><text x="29.9974%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7474%" y="405" width="0.0815%" height="15" fill="rgb(239,223,50)" fg:x="365" fg:w="1"/><text x="29.9974%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7474%" y="389" width="0.0815%" height="15" fill="rgb(244,45,21)" fg:x="365" fg:w="1"/><text x="29.9974%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.7474%" y="373" width="0.0815%" height="15" fill="rgb(232,33,43)" fg:x="365" fg:w="1"/><text x="29.9974%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.7474%" y="357" width="0.0815%" height="15" fill="rgb(209,8,3)" fg:x="365" fg:w="1"/><text x="29.9974%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.7474%" y="341" width="0.0815%" height="15" fill="rgb(214,25,53)" fg:x="365" fg:w="1"/><text x="29.9974%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7474%" y="325" width="0.0815%" height="15" fill="rgb(254,186,54)" fg:x="365" fg:w="1"/><text x="29.9974%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7474%" y="309" width="0.0815%" height="15" fill="rgb(208,174,49)" fg:x="365" fg:w="1"/><text x="29.9974%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.7474%" y="293" width="0.0815%" height="15" fill="rgb(233,191,51)" fg:x="365" fg:w="1"/><text x="29.9974%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.7474%" y="277" width="0.0815%" height="15" fill="rgb(222,134,10)" fg:x="365" fg:w="1"/><text x="29.9974%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.7474%" y="261" width="0.0815%" height="15" fill="rgb(230,226,20)" fg:x="365" fg:w="1"/><text x="29.9974%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.7474%" y="245" width="0.0815%" height="15" fill="rgb(251,111,25)" fg:x="365" fg:w="1"/><text x="29.9974%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7474%" y="229" width="0.0815%" height="15" fill="rgb(224,40,46)" fg:x="365" fg:w="1"/><text x="29.9974%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8289%" y="533" width="0.0815%" height="15" fill="rgb(236,108,47)" fg:x="366" fg:w="1"/><text x="30.0789%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8289%" y="517" width="0.0815%" height="15" fill="rgb(234,93,0)" fg:x="366" fg:w="1"/><text x="30.0789%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.8289%" y="501" width="0.0815%" height="15" fill="rgb(224,213,32)" fg:x="366" fg:w="1"/><text x="30.0789%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.8289%" y="485" width="0.0815%" height="15" fill="rgb(251,11,48)" fg:x="366" fg:w="1"/><text x="30.0789%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.8289%" y="469" width="0.0815%" height="15" fill="rgb(236,173,5)" fg:x="366" fg:w="1"/><text x="30.0789%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8289%" y="453" width="0.0815%" height="15" fill="rgb(230,95,12)" fg:x="366" fg:w="1"/><text x="30.0789%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8289%" y="437" width="0.0815%" height="15" fill="rgb(232,209,1)" fg:x="366" fg:w="1"/><text x="30.0789%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.8289%" y="421" width="0.0815%" height="15" fill="rgb(232,6,1)" fg:x="366" fg:w="1"/><text x="30.0789%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.8289%" y="405" width="0.0815%" height="15" fill="rgb(210,224,50)" fg:x="366" fg:w="1"/><text x="30.0789%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.8289%" y="389" width="0.0815%" height="15" fill="rgb(228,127,35)" fg:x="366" fg:w="1"/><text x="30.0789%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.8289%" y="373" width="0.0815%" height="15" fill="rgb(245,102,45)" fg:x="366" fg:w="1"/><text x="30.0789%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.8289%" y="357" width="0.0815%" height="15" fill="rgb(214,1,49)" fg:x="366" fg:w="1"/><text x="30.0789%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.8289%" y="341" width="0.0815%" height="15" fill="rgb(226,163,40)" fg:x="366" fg:w="1"/><text x="30.0789%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.9104%" y="485" width="0.1630%" height="15" fill="rgb(239,212,28)" fg:x="367" fg:w="2"/><text x="30.1604%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.9919%" y="469" width="0.0815%" height="15" fill="rgb(220,20,13)" fg:x="368" fg:w="1"/><text x="30.2419%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.9919%" y="453" width="0.0815%" height="15" fill="rgb(210,164,35)" fg:x="368" fg:w="1"/><text x="30.2419%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9919%" y="437" width="0.0815%" height="15" fill="rgb(248,109,41)" fg:x="368" fg:w="1"/><text x="30.2419%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="29.9104%" y="517" width="0.3260%" height="15" fill="rgb(238,23,50)" fg:x="367" fg:w="4"/><text x="30.1604%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="29.9104%" y="501" width="0.3260%" height="15" fill="rgb(211,48,49)" fg:x="367" fg:w="4"/><text x="30.1604%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.0733%" y="485" width="0.1630%" height="15" fill="rgb(223,36,21)" fg:x="369" fg:w="2"/><text x="30.3233%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.0733%" y="469" width="0.1630%" height="15" fill="rgb(207,123,46)" fg:x="369" fg:w="2"/><text x="30.3233%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.1548%" y="453" width="0.0815%" height="15" fill="rgb(240,218,32)" fg:x="370" fg:w="1"/><text x="30.4048%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1548%" y="437" width="0.0815%" height="15" fill="rgb(252,5,43)" fg:x="370" fg:w="1"/><text x="30.4048%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1548%" y="421" width="0.0815%" height="15" fill="rgb(252,84,19)" fg:x="370" fg:w="1"/><text x="30.4048%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1548%" y="405" width="0.0815%" height="15" fill="rgb(243,152,39)" fg:x="370" fg:w="1"/><text x="30.4048%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1548%" y="389" width="0.0815%" height="15" fill="rgb(234,160,15)" fg:x="370" fg:w="1"/><text x="30.4048%" y="399.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="30.2363%" y="517" width="0.1630%" height="15" fill="rgb(237,34,20)" fg:x="371" fg:w="2"/><text x="30.4863%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="30.2363%" y="501" width="0.1630%" height="15" fill="rgb(229,97,13)" fg:x="371" fg:w="2"/><text x="30.4863%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.2363%" y="485" width="0.1630%" height="15" fill="rgb(234,71,50)" fg:x="371" fg:w="2"/><text x="30.4863%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="30.3178%" y="469" width="0.0815%" height="15" fill="rgb(253,155,4)" fg:x="372" fg:w="1"/><text x="30.5678%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.3178%" y="453" width="0.0815%" height="15" fill="rgb(222,185,37)" fg:x="372" fg:w="1"/><text x="30.5678%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.3178%" y="437" width="0.0815%" height="15" fill="rgb(251,177,13)" fg:x="372" fg:w="1"/><text x="30.5678%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3178%" y="421" width="0.0815%" height="15" fill="rgb(250,179,40)" fg:x="372" fg:w="1"/><text x="30.5678%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="30.3993%" y="517" width="0.0815%" height="15" fill="rgb(242,44,2)" fg:x="373" fg:w="1"/><text x="30.6493%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.3993%" y="501" width="0.0815%" height="15" fill="rgb(216,177,13)" fg:x="373" fg:w="1"/><text x="30.6493%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="30.4808%" y="517" width="0.1630%" height="15" fill="rgb(216,106,43)" fg:x="374" fg:w="2"/><text x="30.7308%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="30.4808%" y="501" width="0.1630%" height="15" fill="rgb(216,183,2)" fg:x="374" fg:w="2"/><text x="30.7308%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.4808%" y="485" width="0.1630%" height="15" fill="rgb(249,75,3)" fg:x="374" fg:w="2"/><text x="30.7308%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="30.4808%" y="469" width="0.1630%" height="15" fill="rgb(219,67,39)" fg:x="374" fg:w="2"/><text x="30.7308%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="30.4808%" y="453" width="0.1630%" height="15" fill="rgb(253,228,2)" fg:x="374" fg:w="2"/><text x="30.7308%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.5623%" y="437" width="0.0815%" height="15" fill="rgb(235,138,27)" fg:x="375" fg:w="1"/><text x="30.8123%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="30.5623%" y="421" width="0.0815%" height="15" fill="rgb(236,97,51)" fg:x="375" fg:w="1"/><text x="30.8123%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="30.5623%" y="405" width="0.0815%" height="15" fill="rgb(240,80,30)" fg:x="375" fg:w="1"/><text x="30.8123%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5623%" y="389" width="0.0815%" height="15" fill="rgb(230,178,19)" fg:x="375" fg:w="1"/><text x="30.8123%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6438%" y="469" width="0.0815%" height="15" fill="rgb(210,190,27)" fg:x="376" fg:w="1"/><text x="30.8938%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6438%" y="453" width="0.0815%" height="15" fill="rgb(222,107,31)" fg:x="376" fg:w="1"/><text x="30.8938%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6438%" y="437" width="0.0815%" height="15" fill="rgb(216,127,34)" fg:x="376" fg:w="1"/><text x="30.8938%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6438%" y="421" width="0.0815%" height="15" fill="rgb(234,116,52)" fg:x="376" fg:w="1"/><text x="30.8938%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.6438%" y="405" width="0.0815%" height="15" fill="rgb(222,124,15)" fg:x="376" fg:w="1"/><text x="30.8938%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.6438%" y="389" width="0.0815%" height="15" fill="rgb(231,179,28)" fg:x="376" fg:w="1"/><text x="30.8938%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.6438%" y="373" width="0.0815%" height="15" fill="rgb(226,93,45)" fg:x="376" fg:w="1"/><text x="30.8938%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6438%" y="357" width="0.0815%" height="15" fill="rgb(215,8,51)" fg:x="376" fg:w="1"/><text x="30.8938%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6438%" y="341" width="0.0815%" height="15" fill="rgb(223,106,5)" fg:x="376" fg:w="1"/><text x="30.8938%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.6438%" y="325" width="0.0815%" height="15" fill="rgb(250,191,5)" fg:x="376" fg:w="1"/><text x="30.8938%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.6438%" y="309" width="0.0815%" height="15" fill="rgb(242,132,44)" fg:x="376" fg:w="1"/><text x="30.8938%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.6438%" y="293" width="0.0815%" height="15" fill="rgb(251,152,29)" fg:x="376" fg:w="1"/><text x="30.8938%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.6438%" y="277" width="0.0815%" height="15" fill="rgb(218,179,5)" fg:x="376" fg:w="1"/><text x="30.8938%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6438%" y="261" width="0.0815%" height="15" fill="rgb(227,67,19)" fg:x="376" fg:w="1"/><text x="30.8938%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.6438%" y="501" width="0.1630%" height="15" fill="rgb(233,119,31)" fg:x="376" fg:w="2"/><text x="30.8938%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.6438%" y="485" width="0.1630%" height="15" fill="rgb(241,120,22)" fg:x="376" fg:w="2"/><text x="30.8938%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7253%" y="469" width="0.0815%" height="15" fill="rgb(224,102,30)" fg:x="377" fg:w="1"/><text x="30.9753%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7253%" y="453" width="0.0815%" height="15" fill="rgb(210,164,37)" fg:x="377" fg:w="1"/><text x="30.9753%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.7253%" y="437" width="0.0815%" height="15" fill="rgb(226,191,16)" fg:x="377" fg:w="1"/><text x="30.9753%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7253%" y="421" width="0.0815%" height="15" fill="rgb(214,40,45)" fg:x="377" fg:w="1"/><text x="30.9753%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7253%" y="405" width="0.0815%" height="15" fill="rgb(244,29,26)" fg:x="377" fg:w="1"/><text x="30.9753%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7253%" y="389" width="0.0815%" height="15" fill="rgb(216,16,5)" fg:x="377" fg:w="1"/><text x="30.9753%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.7253%" y="373" width="0.0815%" height="15" fill="rgb(249,76,35)" fg:x="377" fg:w="1"/><text x="30.9753%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.7253%" y="357" width="0.0815%" height="15" fill="rgb(207,11,44)" fg:x="377" fg:w="1"/><text x="30.9753%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="30.6438%" y="517" width="0.2445%" height="15" fill="rgb(228,190,49)" fg:x="376" fg:w="3"/><text x="30.8938%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="30.8068%" y="501" width="0.0815%" height="15" fill="rgb(214,173,12)" fg:x="378" fg:w="1"/><text x="31.0568%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.8068%" y="485" width="0.0815%" height="15" fill="rgb(218,26,35)" fg:x="378" fg:w="1"/><text x="31.0568%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8883%" y="453" width="0.0815%" height="15" fill="rgb(220,200,19)" fg:x="379" fg:w="1"/><text x="31.1383%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8883%" y="437" width="0.0815%" height="15" fill="rgb(239,95,49)" fg:x="379" fg:w="1"/><text x="31.1383%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8883%" y="421" width="0.0815%" height="15" fill="rgb(235,85,53)" fg:x="379" fg:w="1"/><text x="31.1383%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8883%" y="405" width="0.0815%" height="15" fill="rgb(233,133,31)" fg:x="379" fg:w="1"/><text x="31.1383%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.14%)</title><rect x="29.9104%" y="533" width="1.1410%" height="15" fill="rgb(218,25,20)" fg:x="367" fg:w="14"/><text x="30.1604%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="30.8883%" y="517" width="0.1630%" height="15" fill="rgb(252,210,38)" fg:x="379" fg:w="2"/><text x="31.1383%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="30.8883%" y="501" width="0.1630%" height="15" fill="rgb(242,134,21)" fg:x="379" fg:w="2"/><text x="31.1383%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="30.8883%" y="485" width="0.1630%" height="15" fill="rgb(213,28,48)" fg:x="379" fg:w="2"/><text x="31.1383%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.8883%" y="469" width="0.1630%" height="15" fill="rgb(250,196,2)" fg:x="379" fg:w="2"/><text x="31.1383%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9698%" y="453" width="0.0815%" height="15" fill="rgb(227,5,17)" fg:x="380" fg:w="1"/><text x="31.2198%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9698%" y="437" width="0.0815%" height="15" fill="rgb(221,226,24)" fg:x="380" fg:w="1"/><text x="31.2198%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.9698%" y="421" width="0.0815%" height="15" fill="rgb(211,5,48)" fg:x="380" fg:w="1"/><text x="31.2198%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9698%" y="405" width="0.0815%" height="15" fill="rgb(219,150,6)" fg:x="380" fg:w="1"/><text x="31.2198%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.9698%" y="389" width="0.0815%" height="15" fill="rgb(251,46,16)" fg:x="380" fg:w="1"/><text x="31.2198%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.9698%" y="373" width="0.0815%" height="15" fill="rgb(220,204,40)" fg:x="380" fg:w="1"/><text x="31.2198%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1328%" y="501" width="0.0815%" height="15" fill="rgb(211,85,2)" fg:x="382" fg:w="1"/><text x="31.3828%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.55%)</title><rect x="29.8289%" y="549" width="1.5485%" height="15" fill="rgb(229,17,7)" fg:x="366" fg:w="19"/><text x="30.0789%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="31.0513%" y="533" width="0.3260%" height="15" fill="rgb(239,72,28)" fg:x="381" fg:w="4"/><text x="31.3013%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="31.0513%" y="517" width="0.3260%" height="15" fill="rgb(230,47,54)" fg:x="381" fg:w="4"/><text x="31.3013%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.2143%" y="501" width="0.1630%" height="15" fill="rgb(214,50,8)" fg:x="383" fg:w="2"/><text x="31.4643%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.2143%" y="485" width="0.1630%" height="15" fill="rgb(216,198,43)" fg:x="383" fg:w="2"/><text x="31.4643%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.2958%" y="469" width="0.0815%" height="15" fill="rgb(234,20,35)" fg:x="384" fg:w="1"/><text x="31.5458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2958%" y="453" width="0.0815%" height="15" fill="rgb(254,45,19)" fg:x="384" fg:w="1"/><text x="31.5458%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="31.3773%" y="533" width="0.1630%" height="15" fill="rgb(219,14,44)" fg:x="385" fg:w="2"/><text x="31.6273%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.3773%" y="517" width="0.1630%" height="15" fill="rgb(217,220,26)" fg:x="385" fg:w="2"/><text x="31.6273%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4588%" y="501" width="0.0815%" height="15" fill="rgb(213,158,28)" fg:x="386" fg:w="1"/><text x="31.7088%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (188 samples, 15.32%)</title><rect x="16.2999%" y="581" width="15.3219%" height="15" fill="rgb(252,51,52)" fg:x="200" fg:w="188"/><text x="16.5499%" y="591.50">plugins_core::build::Bu..</text></g><g><title>plugins_core::build::Build::wearing (22 samples, 1.79%)</title><rect x="29.8289%" y="565" width="1.7930%" height="15" fill="rgb(246,89,16)" fg:x="366" fg:w="22"/><text x="30.0789%" y="575.50">p..</text></g><g><title>plugins_core::tools::set_wearing (3 samples, 0.24%)</title><rect x="31.3773%" y="549" width="0.2445%" height="15" fill="rgb(216,158,49)" fg:x="385" fg:w="3"/><text x="31.6273%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.5403%" y="533" width="0.0815%" height="15" fill="rgb(236,107,19)" fg:x="387" fg:w="1"/><text x="31.7903%" y="543.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="31.5403%" y="517" width="0.0815%" height="15" fill="rgb(228,185,30)" fg:x="387" fg:w="1"/><text x="31.7903%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.5403%" y="501" width="0.0815%" height="15" fill="rgb(246,134,8)" fg:x="387" fg:w="1"/><text x="31.7903%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="31.6218%" y="581" width="0.0815%" height="15" fill="rgb(214,143,50)" fg:x="388" fg:w="1"/><text x="31.8718%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="31.6218%" y="565" width="0.0815%" height="15" fill="rgb(228,75,8)" fg:x="388" fg:w="1"/><text x="31.8718%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="31.6218%" y="549" width="0.0815%" height="15" fill="rgb(207,175,4)" fg:x="388" fg:w="1"/><text x="31.8718%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="31.6218%" y="533" width="0.0815%" height="15" fill="rgb(205,108,24)" fg:x="388" fg:w="1"/><text x="31.8718%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="31.7033%" y="549" width="0.0815%" height="15" fill="rgb(244,120,49)" fg:x="389" fg:w="1"/><text x="31.9533%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.7033%" y="533" width="0.0815%" height="15" fill="rgb(223,47,38)" fg:x="389" fg:w="1"/><text x="31.9533%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.7848%" y="517" width="0.0815%" height="15" fill="rgb(229,179,11)" fg:x="390" fg:w="1"/><text x="32.0348%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.7848%" y="501" width="0.0815%" height="15" fill="rgb(231,122,1)" fg:x="390" fg:w="1"/><text x="32.0348%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.7848%" y="485" width="0.0815%" height="15" fill="rgb(245,119,9)" fg:x="390" fg:w="1"/><text x="32.0348%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.7848%" y="469" width="0.0815%" height="15" fill="rgb(241,163,25)" fg:x="390" fg:w="1"/><text x="32.0348%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="31.8663%" y="501" width="0.0815%" height="15" fill="rgb(217,214,3)" fg:x="391" fg:w="1"/><text x="32.1163%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="31.8663%" y="485" width="0.0815%" height="15" fill="rgb(240,86,28)" fg:x="391" fg:w="1"/><text x="32.1163%" y="495.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.8663%" y="469" width="0.0815%" height="15" fill="rgb(215,47,9)" fg:x="391" fg:w="1"/><text x="32.1163%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.8663%" y="453" width="0.0815%" height="15" fill="rgb(252,25,45)" fg:x="391" fg:w="1"/><text x="32.1163%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8663%" y="437" width="0.0815%" height="15" fill="rgb(251,164,9)" fg:x="391" fg:w="1"/><text x="32.1163%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.8663%" y="421" width="0.0815%" height="15" fill="rgb(233,194,0)" fg:x="391" fg:w="1"/><text x="32.1163%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.8663%" y="405" width="0.0815%" height="15" fill="rgb(249,111,24)" fg:x="391" fg:w="1"/><text x="32.1163%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8663%" y="389" width="0.0815%" height="15" fill="rgb(250,223,3)" fg:x="391" fg:w="1"/><text x="32.1163%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8663%" y="373" width="0.0815%" height="15" fill="rgb(236,178,37)" fg:x="391" fg:w="1"/><text x="32.1163%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9478%" y="389" width="0.0815%" height="15" fill="rgb(241,158,50)" fg:x="392" fg:w="1"/><text x="32.1978%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9478%" y="373" width="0.0815%" height="15" fill="rgb(213,121,41)" fg:x="392" fg:w="1"/><text x="32.1978%" y="383.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="31.8663%" y="517" width="0.3260%" height="15" fill="rgb(240,92,3)" fg:x="391" fg:w="4"/><text x="32.1163%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="31.9478%" y="501" width="0.2445%" height="15" fill="rgb(205,123,3)" fg:x="392" fg:w="3"/><text x="32.1978%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="31.9478%" y="485" width="0.2445%" height="15" fill="rgb(205,97,47)" fg:x="392" fg:w="3"/><text x="32.1978%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="31.9478%" y="469" width="0.2445%" height="15" fill="rgb(247,152,14)" fg:x="392" fg:w="3"/><text x="32.1978%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="31.9478%" y="453" width="0.2445%" height="15" fill="rgb(248,195,53)" fg:x="392" fg:w="3"/><text x="32.1978%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="31.9478%" y="437" width="0.2445%" height="15" fill="rgb(226,201,16)" fg:x="392" fg:w="3"/><text x="32.1978%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="31.9478%" y="421" width="0.2445%" height="15" fill="rgb(205,98,0)" fg:x="392" fg:w="3"/><text x="32.1978%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="31.9478%" y="405" width="0.2445%" height="15" fill="rgb(214,191,48)" fg:x="392" fg:w="3"/><text x="32.1978%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="32.0293%" y="389" width="0.1630%" height="15" fill="rgb(237,112,39)" fg:x="393" fg:w="2"/><text x="32.2793%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.0293%" y="373" width="0.1630%" height="15" fill="rgb(247,203,27)" fg:x="393" fg:w="2"/><text x="32.2793%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="32.1108%" y="357" width="0.0815%" height="15" fill="rgb(235,124,28)" fg:x="394" fg:w="1"/><text x="32.3608%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1108%" y="341" width="0.0815%" height="15" fill="rgb(208,207,46)" fg:x="394" fg:w="1"/><text x="32.3608%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.1923%" y="501" width="0.1630%" height="15" fill="rgb(234,176,4)" fg:x="395" fg:w="2"/><text x="32.4423%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.1923%" y="485" width="0.1630%" height="15" fill="rgb(230,133,28)" fg:x="395" fg:w="2"/><text x="32.4423%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2738%" y="469" width="0.0815%" height="15" fill="rgb(211,137,40)" fg:x="396" fg:w="1"/><text x="32.5238%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2738%" y="453" width="0.0815%" height="15" fill="rgb(254,35,13)" fg:x="396" fg:w="1"/><text x="32.5238%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.2738%" y="437" width="0.0815%" height="15" fill="rgb(225,49,51)" fg:x="396" fg:w="1"/><text x="32.5238%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.49%)</title><rect x="32.1923%" y="517" width="0.4890%" height="15" fill="rgb(251,10,15)" fg:x="395" fg:w="6"/><text x="32.4423%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="32.3553%" y="501" width="0.3260%" height="15" fill="rgb(228,207,15)" fg:x="397" fg:w="4"/><text x="32.6053%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="32.3553%" y="485" width="0.3260%" height="15" fill="rgb(241,99,19)" fg:x="397" fg:w="4"/><text x="32.6053%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.4368%" y="469" width="0.2445%" height="15" fill="rgb(207,104,49)" fg:x="398" fg:w="3"/><text x="32.6868%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5183%" y="453" width="0.1630%" height="15" fill="rgb(234,99,18)" fg:x="399" fg:w="2"/><text x="32.7683%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.5183%" y="437" width="0.1630%" height="15" fill="rgb(213,191,49)" fg:x="399" fg:w="2"/><text x="32.7683%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5998%" y="421" width="0.0815%" height="15" fill="rgb(210,226,19)" fg:x="400" fg:w="1"/><text x="32.8498%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="32.6813%" y="501" width="0.0815%" height="15" fill="rgb(229,97,18)" fg:x="401" fg:w="1"/><text x="32.9313%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="32.6813%" y="485" width="0.0815%" height="15" fill="rgb(211,167,15)" fg:x="401" fg:w="1"/><text x="32.9313%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.7628%" y="485" width="0.0815%" height="15" fill="rgb(210,169,34)" fg:x="402" fg:w="1"/><text x="33.0128%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.7628%" y="469" width="0.0815%" height="15" fill="rgb(241,121,31)" fg:x="402" fg:w="1"/><text x="33.0128%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.7628%" y="453" width="0.0815%" height="15" fill="rgb(232,40,11)" fg:x="402" fg:w="1"/><text x="33.0128%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="32.8443%" y="469" width="0.0815%" height="15" fill="rgb(205,86,26)" fg:x="403" fg:w="1"/><text x="33.0943%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.8443%" y="453" width="0.0815%" height="15" fill="rgb(231,126,28)" fg:x="403" fg:w="1"/><text x="33.0943%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.8443%" y="437" width="0.0815%" height="15" fill="rgb(219,221,18)" fg:x="403" fg:w="1"/><text x="33.0943%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.22%)</title><rect x="31.7848%" y="533" width="1.2225%" height="15" fill="rgb(211,40,0)" fg:x="390" fg:w="15"/><text x="32.0348%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.33%)</title><rect x="32.6813%" y="517" width="0.3260%" height="15" fill="rgb(239,85,43)" fg:x="401" fg:w="4"/><text x="32.9313%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="32.7628%" y="501" width="0.2445%" height="15" fill="rgb(231,55,21)" fg:x="402" fg:w="3"/><text x="33.0128%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="32.8443%" y="485" width="0.1630%" height="15" fill="rgb(225,184,43)" fg:x="403" fg:w="2"/><text x="33.0943%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.9258%" y="469" width="0.0815%" height="15" fill="rgb(251,158,41)" fg:x="404" fg:w="1"/><text x="33.1758%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9258%" y="453" width="0.0815%" height="15" fill="rgb(234,159,37)" fg:x="404" fg:w="1"/><text x="33.1758%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9258%" y="437" width="0.0815%" height="15" fill="rgb(216,204,22)" fg:x="404" fg:w="1"/><text x="33.1758%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9258%" y="421" width="0.0815%" height="15" fill="rgb(214,17,3)" fg:x="404" fg:w="1"/><text x="33.1758%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.30%)</title><rect x="31.7848%" y="549" width="1.3040%" height="15" fill="rgb(212,111,17)" fg:x="390" fg:w="16"/><text x="32.0348%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="33.0073%" y="533" width="0.0815%" height="15" fill="rgb(221,157,24)" fg:x="405" fg:w="1"/><text x="33.2573%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="33.0073%" y="517" width="0.0815%" height="15" fill="rgb(252,16,13)" fg:x="405" fg:w="1"/><text x="33.2573%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0073%" y="501" width="0.0815%" height="15" fill="rgb(221,62,2)" fg:x="405" fg:w="1"/><text x="33.2573%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0073%" y="485" width="0.0815%" height="15" fill="rgb(247,87,22)" fg:x="405" fg:w="1"/><text x="33.2573%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.0073%" y="469" width="0.0815%" height="15" fill="rgb(215,73,9)" fg:x="405" fg:w="1"/><text x="33.2573%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0073%" y="453" width="0.0815%" height="15" fill="rgb(207,175,33)" fg:x="405" fg:w="1"/><text x="33.2573%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.0073%" y="437" width="0.0815%" height="15" fill="rgb(243,129,54)" fg:x="405" fg:w="1"/><text x="33.2573%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="33.0888%" y="533" width="0.0815%" height="15" fill="rgb(227,119,45)" fg:x="406" fg:w="1"/><text x="33.3388%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="33.0888%" y="517" width="0.0815%" height="15" fill="rgb(205,109,36)" fg:x="406" fg:w="1"/><text x="33.3388%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.0888%" y="501" width="0.0815%" height="15" fill="rgb(205,6,39)" fg:x="406" fg:w="1"/><text x="33.3388%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="33.0888%" y="485" width="0.0815%" height="15" fill="rgb(221,32,16)" fg:x="406" fg:w="1"/><text x="33.3388%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="33.0888%" y="469" width="0.0815%" height="15" fill="rgb(228,144,50)" fg:x="406" fg:w="1"/><text x="33.3388%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0888%" y="453" width="0.0815%" height="15" fill="rgb(229,201,53)" fg:x="406" fg:w="1"/><text x="33.3388%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.0888%" y="437" width="0.0815%" height="15" fill="rgb(249,153,27)" fg:x="406" fg:w="1"/><text x="33.3388%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.0888%" y="421" width="0.0815%" height="15" fill="rgb(227,106,25)" fg:x="406" fg:w="1"/><text x="33.3388%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.0888%" y="405" width="0.0815%" height="15" fill="rgb(230,65,29)" fg:x="406" fg:w="1"/><text x="33.3388%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.0888%" y="389" width="0.0815%" height="15" fill="rgb(221,57,46)" fg:x="406" fg:w="1"/><text x="33.3388%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.0888%" y="373" width="0.0815%" height="15" fill="rgb(229,161,17)" fg:x="406" fg:w="1"/><text x="33.3388%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0888%" y="357" width="0.0815%" height="15" fill="rgb(222,213,11)" fg:x="406" fg:w="1"/><text x="33.3388%" y="367.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (20 samples, 1.63%)</title><rect x="31.7033%" y="581" width="1.6300%" height="15" fill="rgb(235,35,13)" fg:x="389" fg:w="20"/><text x="31.9533%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.63%)</title><rect x="31.7033%" y="565" width="1.6300%" height="15" fill="rgb(233,158,34)" fg:x="389" fg:w="20"/><text x="31.9533%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (3 samples, 0.24%)</title><rect x="33.0888%" y="549" width="0.2445%" height="15" fill="rgb(215,151,48)" fg:x="406" fg:w="3"/><text x="33.3388%" y="559.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="33.1703%" y="533" width="0.1630%" height="15" fill="rgb(229,84,14)" fg:x="407" fg:w="2"/><text x="33.4203%" y="543.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="33.1703%" y="517" width="0.1630%" height="15" fill="rgb(229,68,14)" fg:x="407" fg:w="2"/><text x="33.4203%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="33.1703%" y="501" width="0.1630%" height="15" fill="rgb(243,106,26)" fg:x="407" fg:w="2"/><text x="33.4203%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.2518%" y="485" width="0.0815%" height="15" fill="rgb(206,45,38)" fg:x="408" fg:w="1"/><text x="33.5018%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3333%" y="533" width="0.0815%" height="15" fill="rgb(226,6,15)" fg:x="409" fg:w="1"/><text x="33.5833%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.4148%" y="517" width="0.0815%" height="15" fill="rgb(232,22,54)" fg:x="410" fg:w="1"/><text x="33.6648%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.4148%" y="501" width="0.0815%" height="15" fill="rgb(229,222,32)" fg:x="410" fg:w="1"/><text x="33.6648%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.4148%" y="485" width="0.0815%" height="15" fill="rgb(228,62,29)" fg:x="410" fg:w="1"/><text x="33.6648%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.4148%" y="469" width="0.0815%" height="15" fill="rgb(251,103,34)" fg:x="410" fg:w="1"/><text x="33.6648%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="33.3333%" y="565" width="0.2445%" height="15" fill="rgb(233,12,30)" fg:x="409" fg:w="3"/><text x="33.5833%" y="575.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="33.3333%" y="549" width="0.2445%" height="15" fill="rgb(238,52,0)" fg:x="409" fg:w="3"/><text x="33.5833%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="33.4148%" y="533" width="0.1630%" height="15" fill="rgb(223,98,5)" fg:x="410" fg:w="2"/><text x="33.6648%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="33.4963%" y="517" width="0.0815%" height="15" fill="rgb(228,75,37)" fg:x="411" fg:w="1"/><text x="33.7463%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="33.4963%" y="501" width="0.0815%" height="15" fill="rgb(205,115,49)" fg:x="411" fg:w="1"/><text x="33.7463%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="33.4963%" y="485" width="0.0815%" height="15" fill="rgb(250,154,43)" fg:x="411" fg:w="1"/><text x="33.7463%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="33.4963%" y="469" width="0.0815%" height="15" fill="rgb(226,43,29)" fg:x="411" fg:w="1"/><text x="33.7463%" y="479.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="33.5778%" y="485" width="0.0815%" height="15" fill="rgb(249,228,39)" fg:x="412" fg:w="1"/><text x="33.8278%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="33.5778%" y="469" width="0.0815%" height="15" fill="rgb(216,79,43)" fg:x="412" fg:w="1"/><text x="33.8278%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.5778%" y="453" width="0.0815%" height="15" fill="rgb(228,95,12)" fg:x="412" fg:w="1"/><text x="33.8278%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.5778%" y="437" width="0.0815%" height="15" fill="rgb(249,221,15)" fg:x="412" fg:w="1"/><text x="33.8278%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.5778%" y="421" width="0.0815%" height="15" fill="rgb(233,34,13)" fg:x="412" fg:w="1"/><text x="33.8278%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.6593%" y="437" width="0.1630%" height="15" fill="rgb(214,103,39)" fg:x="413" fg:w="2"/><text x="33.9093%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7408%" y="421" width="0.0815%" height="15" fill="rgb(251,126,39)" fg:x="414" fg:w="1"/><text x="33.9908%" y="431.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.33%)</title><rect x="33.5778%" y="517" width="0.3260%" height="15" fill="rgb(214,216,36)" fg:x="412" fg:w="4"/><text x="33.8278%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.33%)</title><rect x="33.5778%" y="501" width="0.3260%" height="15" fill="rgb(220,221,8)" fg:x="412" fg:w="4"/><text x="33.8278%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="33.6593%" y="485" width="0.2445%" height="15" fill="rgb(240,216,3)" fg:x="413" fg:w="3"/><text x="33.9093%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="33.6593%" y="469" width="0.2445%" height="15" fill="rgb(232,218,17)" fg:x="413" fg:w="3"/><text x="33.9093%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.6593%" y="453" width="0.2445%" height="15" fill="rgb(229,163,45)" fg:x="413" fg:w="3"/><text x="33.9093%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="33.8223%" y="437" width="0.0815%" height="15" fill="rgb(231,110,42)" fg:x="415" fg:w="1"/><text x="34.0723%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8223%" y="421" width="0.0815%" height="15" fill="rgb(208,170,48)" fg:x="415" fg:w="1"/><text x="34.0723%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.8223%" y="405" width="0.0815%" height="15" fill="rgb(239,116,25)" fg:x="415" fg:w="1"/><text x="34.0723%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.8223%" y="389" width="0.0815%" height="15" fill="rgb(219,200,50)" fg:x="415" fg:w="1"/><text x="34.0723%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="33.9038%" y="517" width="0.0815%" height="15" fill="rgb(245,200,0)" fg:x="416" fg:w="1"/><text x="34.1538%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0668%" y="485" width="0.0815%" height="15" fill="rgb(245,119,33)" fg:x="418" fg:w="1"/><text x="34.3168%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.65%)</title><rect x="33.5778%" y="533" width="0.6520%" height="15" fill="rgb(231,125,12)" fg:x="412" fg:w="8"/><text x="33.8278%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="33.9853%" y="517" width="0.2445%" height="15" fill="rgb(216,96,41)" fg:x="417" fg:w="3"/><text x="34.2353%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="33.9853%" y="501" width="0.2445%" height="15" fill="rgb(248,43,45)" fg:x="417" fg:w="3"/><text x="34.2353%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1483%" y="485" width="0.0815%" height="15" fill="rgb(217,222,7)" fg:x="419" fg:w="1"/><text x="34.3983%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="34.2298%" y="517" width="0.1630%" height="15" fill="rgb(233,28,6)" fg:x="420" fg:w="2"/><text x="34.4798%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.2298%" y="501" width="0.1630%" height="15" fill="rgb(231,218,15)" fg:x="420" fg:w="2"/><text x="34.4798%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.2298%" y="485" width="0.1630%" height="15" fill="rgb(226,171,48)" fg:x="420" fg:w="2"/><text x="34.4798%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2298%" y="469" width="0.1630%" height="15" fill="rgb(235,201,9)" fg:x="420" fg:w="2"/><text x="34.4798%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.3113%" y="453" width="0.0815%" height="15" fill="rgb(217,80,15)" fg:x="421" fg:w="1"/><text x="34.5613%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.3113%" y="437" width="0.0815%" height="15" fill="rgb(219,152,8)" fg:x="421" fg:w="1"/><text x="34.5613%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.98%)</title><rect x="33.5778%" y="549" width="0.9780%" height="15" fill="rgb(243,107,38)" fg:x="412" fg:w="12"/><text x="33.8278%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="34.2298%" y="533" width="0.3260%" height="15" fill="rgb(231,17,5)" fg:x="420" fg:w="4"/><text x="34.4798%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="34.3928%" y="517" width="0.1630%" height="15" fill="rgb(209,25,54)" fg:x="422" fg:w="2"/><text x="34.6428%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="34.3928%" y="501" width="0.1630%" height="15" fill="rgb(219,0,2)" fg:x="422" fg:w="2"/><text x="34.6428%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4743%" y="485" width="0.0815%" height="15" fill="rgb(246,9,5)" fg:x="423" fg:w="1"/><text x="34.7243%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.06%)</title><rect x="33.5778%" y="565" width="1.0595%" height="15" fill="rgb(226,159,4)" fg:x="412" fg:w="13"/><text x="33.8278%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="34.5558%" y="549" width="0.0815%" height="15" fill="rgb(219,175,34)" fg:x="424" fg:w="1"/><text x="34.8058%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.5558%" y="533" width="0.0815%" height="15" fill="rgb(236,10,46)" fg:x="424" fg:w="1"/><text x="34.8058%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5558%" y="517" width="0.0815%" height="15" fill="rgb(240,211,16)" fg:x="424" fg:w="1"/><text x="34.8058%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5558%" y="501" width="0.0815%" height="15" fill="rgb(205,3,43)" fg:x="424" fg:w="1"/><text x="34.8058%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.5558%" y="485" width="0.0815%" height="15" fill="rgb(245,7,22)" fg:x="424" fg:w="1"/><text x="34.8058%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5558%" y="469" width="0.0815%" height="15" fill="rgb(239,132,32)" fg:x="424" fg:w="1"/><text x="34.8058%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.5558%" y="453" width="0.0815%" height="15" fill="rgb(228,202,34)" fg:x="424" fg:w="1"/><text x="34.8058%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.5558%" y="437" width="0.0815%" height="15" fill="rgb(254,200,22)" fg:x="424" fg:w="1"/><text x="34.8058%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.5558%" y="421" width="0.0815%" height="15" fill="rgb(219,10,39)" fg:x="424" fg:w="1"/><text x="34.8058%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.5558%" y="405" width="0.0815%" height="15" fill="rgb(226,210,39)" fg:x="424" fg:w="1"/><text x="34.8058%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5558%" y="389" width="0.0815%" height="15" fill="rgb(208,219,16)" fg:x="424" fg:w="1"/><text x="34.8058%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5558%" y="373" width="0.0815%" height="15" fill="rgb(216,158,51)" fg:x="424" fg:w="1"/><text x="34.8058%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5558%" y="357" width="0.0815%" height="15" fill="rgb(233,14,44)" fg:x="424" fg:w="1"/><text x="34.8058%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5558%" y="341" width="0.0815%" height="15" fill="rgb(237,97,39)" fg:x="424" fg:w="1"/><text x="34.8058%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5558%" y="325" width="0.0815%" height="15" fill="rgb(218,198,43)" fg:x="424" fg:w="1"/><text x="34.8058%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5558%" y="309" width="0.0815%" height="15" fill="rgb(231,104,20)" fg:x="424" fg:w="1"/><text x="34.8058%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5558%" y="293" width="0.0815%" height="15" fill="rgb(254,36,13)" fg:x="424" fg:w="1"/><text x="34.8058%" y="303.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.39%)</title><rect x="33.3333%" y="581" width="1.3855%" height="15" fill="rgb(248,14,50)" fg:x="409" fg:w="17"/><text x="33.5833%" y="591.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="34.6373%" y="565" width="0.0815%" height="15" fill="rgb(217,107,29)" fg:x="425" fg:w="1"/><text x="34.8873%" y="575.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (351 samples, 28.61%)</title><rect x="6.1940%" y="597" width="28.6064%" height="15" fill="rgb(251,169,33)" fg:x="76" fg:w="351"/><text x="6.4440%" y="607.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixt..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="34.7188%" y="581" width="0.0815%" height="15" fill="rgb(217,108,32)" fg:x="426" fg:w="1"/><text x="34.9688%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7188%" y="565" width="0.0815%" height="15" fill="rgb(219,66,42)" fg:x="426" fg:w="1"/><text x="34.9688%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="34.8003%" y="597" width="0.1630%" height="15" fill="rgb(206,180,7)" fg:x="427" fg:w="2"/><text x="35.0503%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="34.8003%" y="581" width="0.1630%" height="15" fill="rgb(208,226,31)" fg:x="427" fg:w="2"/><text x="35.0503%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="34.8003%" y="565" width="0.1630%" height="15" fill="rgb(218,26,49)" fg:x="427" fg:w="2"/><text x="35.0503%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="34.8003%" y="549" width="0.1630%" height="15" fill="rgb(233,197,48)" fg:x="427" fg:w="2"/><text x="35.0503%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.8003%" y="533" width="0.1630%" height="15" fill="rgb(252,181,51)" fg:x="427" fg:w="2"/><text x="35.0503%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Effect&gt; (1 samples, 0.08%)</title><rect x="34.9633%" y="597" width="0.0815%" height="15" fill="rgb(253,90,19)" fg:x="429" fg:w="1"/><text x="35.2133%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.0448%" y="549" width="0.0815%" height="15" fill="rgb(215,171,30)" fg:x="430" fg:w="1"/><text x="35.2948%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.1263%" y="549" width="0.0815%" height="15" fill="rgb(214,222,9)" fg:x="431" fg:w="1"/><text x="35.3763%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="35.1263%" y="533" width="0.0815%" height="15" fill="rgb(223,3,22)" fg:x="431" fg:w="1"/><text x="35.3763%" y="543.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="35.1263%" y="517" width="0.0815%" height="15" fill="rgb(225,196,46)" fg:x="431" fg:w="1"/><text x="35.3763%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2078%" y="517" width="0.0815%" height="15" fill="rgb(209,110,37)" fg:x="432" fg:w="1"/><text x="35.4578%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.2893%" y="501" width="0.0815%" height="15" fill="rgb(249,89,12)" fg:x="433" fg:w="1"/><text x="35.5393%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.2893%" y="485" width="0.0815%" height="15" fill="rgb(226,27,33)" fg:x="433" fg:w="1"/><text x="35.5393%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.2893%" y="469" width="0.0815%" height="15" fill="rgb(213,82,22)" fg:x="433" fg:w="1"/><text x="35.5393%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.2893%" y="453" width="0.0815%" height="15" fill="rgb(248,140,0)" fg:x="433" fg:w="1"/><text x="35.5393%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.2893%" y="437" width="0.0815%" height="15" fill="rgb(228,106,3)" fg:x="433" fg:w="1"/><text x="35.5393%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.4523%" y="469" width="0.1630%" height="15" fill="rgb(209,23,37)" fg:x="435" fg:w="2"/><text x="35.7023%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.5338%" y="453" width="0.0815%" height="15" fill="rgb(241,93,50)" fg:x="436" fg:w="1"/><text x="35.7838%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.33%)</title><rect x="35.3708%" y="485" width="0.3260%" height="15" fill="rgb(253,46,43)" fg:x="434" fg:w="4"/><text x="35.6208%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.6153%" y="469" width="0.0815%" height="15" fill="rgb(226,206,43)" fg:x="437" fg:w="1"/><text x="35.8653%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.6153%" y="453" width="0.0815%" height="15" fill="rgb(217,54,7)" fg:x="437" fg:w="1"/><text x="35.8653%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.6153%" y="437" width="0.0815%" height="15" fill="rgb(223,5,52)" fg:x="437" fg:w="1"/><text x="35.8653%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.6968%" y="469" width="0.0815%" height="15" fill="rgb(206,52,46)" fg:x="438" fg:w="1"/><text x="35.9468%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="35.7783%" y="469" width="0.4890%" height="15" fill="rgb(253,136,11)" fg:x="439" fg:w="6"/><text x="36.0283%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.33%)</title><rect x="35.9413%" y="453" width="0.3260%" height="15" fill="rgb(208,106,33)" fg:x="441" fg:w="4"/><text x="36.1913%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.1043%" y="437" width="0.1630%" height="15" fill="rgb(206,54,4)" fg:x="443" fg:w="2"/><text x="36.3543%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.1043%" y="421" width="0.1630%" height="15" fill="rgb(213,3,15)" fg:x="443" fg:w="2"/><text x="36.3543%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.4303%" y="421" width="0.1630%" height="15" fill="rgb(252,211,39)" fg:x="447" fg:w="2"/><text x="36.6803%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.4303%" y="405" width="0.1630%" height="15" fill="rgb(223,6,36)" fg:x="447" fg:w="2"/><text x="36.6803%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.5118%" y="389" width="0.0815%" height="15" fill="rgb(252,169,45)" fg:x="448" fg:w="1"/><text x="36.7618%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="36.2673%" y="453" width="0.4075%" height="15" fill="rgb(212,48,26)" fg:x="445" fg:w="5"/><text x="36.5173%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="36.2673%" y="437" width="0.4075%" height="15" fill="rgb(251,102,48)" fg:x="445" fg:w="5"/><text x="36.5173%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="36.5933%" y="421" width="0.0815%" height="15" fill="rgb(243,208,16)" fg:x="449" fg:w="1"/><text x="36.8433%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.5933%" y="405" width="0.0815%" height="15" fill="rgb(219,96,24)" fg:x="449" fg:w="1"/><text x="36.8433%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.49%)</title><rect x="36.6748%" y="453" width="0.4890%" height="15" fill="rgb(219,33,29)" fg:x="450" fg:w="6"/><text x="36.9248%" y="463.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.49%)</title><rect x="36.6748%" y="437" width="0.4890%" height="15" fill="rgb(223,176,5)" fg:x="450" fg:w="6"/><text x="36.9248%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="36.9193%" y="421" width="0.2445%" height="15" fill="rgb(228,140,14)" fg:x="453" fg:w="3"/><text x="37.1693%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0823%" y="405" width="0.0815%" height="15" fill="rgb(217,179,31)" fg:x="455" fg:w="1"/><text x="37.3323%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.0823%" y="389" width="0.0815%" height="15" fill="rgb(230,9,30)" fg:x="455" fg:w="1"/><text x="37.3323%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.0823%" y="373" width="0.0815%" height="15" fill="rgb(230,136,20)" fg:x="455" fg:w="1"/><text x="37.3323%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.0823%" y="357" width="0.0815%" height="15" fill="rgb(215,210,22)" fg:x="455" fg:w="1"/><text x="37.3323%" y="367.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="37.4083%" y="421" width="0.2445%" height="15" fill="rgb(218,43,5)" fg:x="459" fg:w="3"/><text x="37.6583%" y="431.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.4898%" y="405" width="0.1630%" height="15" fill="rgb(216,11,5)" fg:x="460" fg:w="2"/><text x="37.7398%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.5713%" y="389" width="0.0815%" height="15" fill="rgb(209,82,29)" fg:x="461" fg:w="1"/><text x="37.8213%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="37.5713%" y="373" width="0.0815%" height="15" fill="rgb(244,115,12)" fg:x="461" fg:w="1"/><text x="37.8213%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="37.3268%" y="437" width="0.5705%" height="15" fill="rgb(222,82,18)" fg:x="458" fg:w="7"/><text x="37.5768%" y="447.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="37.6528%" y="421" width="0.2445%" height="15" fill="rgb(249,227,8)" fg:x="462" fg:w="3"/><text x="37.9028%" y="431.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8158%" y="405" width="0.0815%" height="15" fill="rgb(253,141,45)" fg:x="464" fg:w="1"/><text x="38.0658%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8158%" y="389" width="0.0815%" height="15" fill="rgb(234,184,4)" fg:x="464" fg:w="1"/><text x="38.0658%" y="399.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="37.1638%" y="453" width="0.8150%" height="15" fill="rgb(218,194,23)" fg:x="456" fg:w="10"/><text x="37.4138%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.8973%" y="437" width="0.0815%" height="15" fill="rgb(235,66,41)" fg:x="465" fg:w="1"/><text x="38.1473%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8973%" y="421" width="0.0815%" height="15" fill="rgb(245,217,1)" fg:x="465" fg:w="1"/><text x="38.1473%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="37.8973%" y="405" width="0.0815%" height="15" fill="rgb(229,91,1)" fg:x="465" fg:w="1"/><text x="38.1473%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.87%)</title><rect x="36.2673%" y="469" width="1.8745%" height="15" fill="rgb(207,101,30)" fg:x="445" fg:w="23"/><text x="36.5173%" y="479.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.9788%" y="453" width="0.1630%" height="15" fill="rgb(223,82,49)" fg:x="466" fg:w="2"/><text x="38.2288%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.0603%" y="437" width="0.0815%" height="15" fill="rgb(218,167,17)" fg:x="467" fg:w="1"/><text x="38.3103%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.0603%" y="421" width="0.0815%" height="15" fill="rgb(208,103,14)" fg:x="467" fg:w="1"/><text x="38.3103%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.41%)</title><rect x="38.4678%" y="437" width="0.4075%" height="15" fill="rgb(238,20,8)" fg:x="472" fg:w="5"/><text x="38.7178%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.7938%" y="421" width="0.0815%" height="15" fill="rgb(218,80,54)" fg:x="476" fg:w="1"/><text x="39.0438%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.7938%" y="405" width="0.0815%" height="15" fill="rgb(240,144,17)" fg:x="476" fg:w="1"/><text x="39.0438%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.7938%" y="389" width="0.0815%" height="15" fill="rgb(245,27,50)" fg:x="476" fg:w="1"/><text x="39.0438%" y="399.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.59%)</title><rect x="35.3708%" y="501" width="3.5860%" height="15" fill="rgb(251,51,7)" fg:x="434" fg:w="44"/><text x="35.6208%" y="511.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 3.26%)</title><rect x="35.6968%" y="485" width="3.2600%" height="15" fill="rgb(245,217,29)" fg:x="438" fg:w="40"/><text x="35.9468%" y="495.50">ser..</text></g><g><title>std::io::Write::write_all (10 samples, 0.81%)</title><rect x="38.1418%" y="469" width="0.8150%" height="15" fill="rgb(221,176,29)" fg:x="468" fg:w="10"/><text x="38.3918%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.57%)</title><rect x="38.3863%" y="453" width="0.5705%" height="15" fill="rgb(212,180,24)" fg:x="471" fg:w="7"/><text x="38.6363%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="38.8753%" y="437" width="0.0815%" height="15" fill="rgb(254,24,2)" fg:x="477" fg:w="1"/><text x="39.1253%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0383%" y="469" width="0.1630%" height="15" fill="rgb(230,100,2)" fg:x="479" fg:w="2"/><text x="39.2883%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2013%" y="469" width="0.0815%" height="15" fill="rgb(219,142,25)" fg:x="481" fg:w="1"/><text x="39.4513%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3643%" y="437" width="0.0815%" height="15" fill="rgb(240,73,43)" fg:x="483" fg:w="1"/><text x="39.6143%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.4458%" y="437" width="0.1630%" height="15" fill="rgb(214,114,15)" fg:x="484" fg:w="2"/><text x="39.6958%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.5273%" y="421" width="0.0815%" height="15" fill="rgb(207,130,4)" fg:x="485" fg:w="1"/><text x="39.7773%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7718%" y="421" width="0.0815%" height="15" fill="rgb(221,25,40)" fg:x="488" fg:w="1"/><text x="40.0218%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.8533%" y="421" width="0.0815%" height="15" fill="rgb(241,184,7)" fg:x="489" fg:w="1"/><text x="40.1033%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8533%" y="405" width="0.0815%" height="15" fill="rgb(235,159,4)" fg:x="489" fg:w="1"/><text x="40.1033%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="39.9348%" y="421" width="0.0815%" height="15" fill="rgb(214,87,48)" fg:x="490" fg:w="1"/><text x="40.1848%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="39.9348%" y="405" width="0.0815%" height="15" fill="rgb(246,198,24)" fg:x="490" fg:w="1"/><text x="40.1848%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.22%)</title><rect x="38.9568%" y="501" width="1.2225%" height="15" fill="rgb(209,66,40)" fg:x="478" fg:w="15"/><text x="39.2068%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.22%)</title><rect x="38.9568%" y="485" width="1.2225%" height="15" fill="rgb(233,147,39)" fg:x="478" fg:w="15"/><text x="39.2068%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.90%)</title><rect x="39.2828%" y="469" width="0.8965%" height="15" fill="rgb(231,145,52)" fg:x="482" fg:w="11"/><text x="39.5328%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="39.3643%" y="453" width="0.8150%" height="15" fill="rgb(206,20,26)" fg:x="483" fg:w="10"/><text x="39.6143%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="39.6088%" y="437" width="0.5705%" height="15" fill="rgb(238,220,4)" fg:x="486" fg:w="7"/><text x="39.8588%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.0163%" y="421" width="0.1630%" height="15" fill="rgb(252,195,42)" fg:x="491" fg:w="2"/><text x="40.2663%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.0163%" y="405" width="0.1630%" height="15" fill="rgb(209,10,6)" fg:x="491" fg:w="2"/><text x="40.2663%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0978%" y="389" width="0.0815%" height="15" fill="rgb(229,3,52)" fg:x="492" fg:w="1"/><text x="40.3478%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2608%" y="437" width="0.0815%" height="15" fill="rgb(253,49,37)" fg:x="494" fg:w="1"/><text x="40.5108%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3423%" y="437" width="0.0815%" height="15" fill="rgb(240,103,49)" fg:x="495" fg:w="1"/><text x="40.5923%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3423%" y="421" width="0.0815%" height="15" fill="rgb(250,182,30)" fg:x="495" fg:w="1"/><text x="40.5923%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.5053%" y="421" width="0.1630%" height="15" fill="rgb(248,8,30)" fg:x="497" fg:w="2"/><text x="40.7553%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.6683%" y="421" width="0.1630%" height="15" fill="rgb(237,120,30)" fg:x="499" fg:w="2"/><text x="40.9183%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.6683%" y="405" width="0.1630%" height="15" fill="rgb(221,146,34)" fg:x="499" fg:w="2"/><text x="40.9183%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.8313%" y="405" width="0.1630%" height="15" fill="rgb(242,55,13)" fg:x="501" fg:w="2"/><text x="41.0813%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.9943%" y="405" width="0.1630%" height="15" fill="rgb(242,112,31)" fg:x="503" fg:w="2"/><text x="41.2443%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0758%" y="389" width="0.0815%" height="15" fill="rgb(249,192,27)" fg:x="504" fg:w="1"/><text x="41.3258%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.2388%" y="389" width="0.0815%" height="15" fill="rgb(208,204,44)" fg:x="506" fg:w="1"/><text x="41.4888%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3203%" y="357" width="0.0815%" height="15" fill="rgb(208,93,54)" fg:x="507" fg:w="1"/><text x="41.5703%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="41.3203%" y="389" width="0.1630%" height="15" fill="rgb(242,1,31)" fg:x="507" fg:w="2"/><text x="41.5703%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.3203%" y="373" width="0.1630%" height="15" fill="rgb(241,83,25)" fg:x="507" fg:w="2"/><text x="41.5703%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4018%" y="357" width="0.0815%" height="15" fill="rgb(205,169,50)" fg:x="508" fg:w="1"/><text x="41.6518%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4018%" y="341" width="0.0815%" height="15" fill="rgb(239,186,37)" fg:x="508" fg:w="1"/><text x="41.6518%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4833%" y="373" width="0.0815%" height="15" fill="rgb(205,221,10)" fg:x="509" fg:w="1"/><text x="41.7333%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.47%)</title><rect x="40.1793%" y="469" width="1.4670%" height="15" fill="rgb(218,196,15)" fg:x="493" fg:w="18"/><text x="40.4293%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.47%)</title><rect x="40.1793%" y="453" width="1.4670%" height="15" fill="rgb(218,196,35)" fg:x="493" fg:w="18"/><text x="40.4293%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.22%)</title><rect x="40.4238%" y="437" width="1.2225%" height="15" fill="rgb(233,63,24)" fg:x="496" fg:w="15"/><text x="40.6738%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="40.8313%" y="421" width="0.8150%" height="15" fill="rgb(225,8,4)" fg:x="501" fg:w="10"/><text x="41.0813%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="41.1573%" y="405" width="0.4890%" height="15" fill="rgb(234,105,35)" fg:x="505" fg:w="6"/><text x="41.4073%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="41.4833%" y="389" width="0.1630%" height="15" fill="rgb(236,21,32)" fg:x="509" fg:w="2"/><text x="41.7333%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.5648%" y="373" width="0.0815%" height="15" fill="rgb(228,109,6)" fg:x="510" fg:w="1"/><text x="41.8148%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5648%" y="357" width="0.0815%" height="15" fill="rgb(229,215,31)" fg:x="510" fg:w="1"/><text x="41.8148%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.7278%" y="389" width="0.0815%" height="15" fill="rgb(221,52,54)" fg:x="512" fg:w="1"/><text x="41.9778%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.7278%" y="373" width="0.0815%" height="15" fill="rgb(252,129,43)" fg:x="512" fg:w="1"/><text x="41.9778%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.7278%" y="421" width="0.1630%" height="15" fill="rgb(248,183,27)" fg:x="512" fg:w="2"/><text x="41.9778%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.7278%" y="405" width="0.1630%" height="15" fill="rgb(250,0,22)" fg:x="512" fg:w="2"/><text x="41.9778%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.8093%" y="389" width="0.0815%" height="15" fill="rgb(213,166,10)" fg:x="513" fg:w="1"/><text x="42.0593%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="41.6463%" y="453" width="0.3260%" height="15" fill="rgb(207,163,36)" fg:x="511" fg:w="4"/><text x="41.8963%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="41.6463%" y="437" width="0.3260%" height="15" fill="rgb(208,122,22)" fg:x="511" fg:w="4"/><text x="41.8963%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.8908%" y="421" width="0.0815%" height="15" fill="rgb(207,104,49)" fg:x="514" fg:w="1"/><text x="42.1408%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9723%" y="453" width="0.0815%" height="15" fill="rgb(248,211,50)" fg:x="515" fg:w="1"/><text x="42.2223%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (24 samples, 1.96%)</title><rect x="40.1793%" y="485" width="1.9560%" height="15" fill="rgb(217,13,45)" fg:x="493" fg:w="24"/><text x="40.4293%" y="495.50">&lt;..</text></g><g><title>treediff::diff::diff (6 samples, 0.49%)</title><rect x="41.6463%" y="469" width="0.4890%" height="15" fill="rgb(211,216,49)" fg:x="511" fg:w="6"/><text x="41.8963%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0538%" y="453" width="0.0815%" height="15" fill="rgb(221,58,53)" fg:x="516" fg:w="1"/><text x="42.3038%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3798%" y="453" width="0.0815%" height="15" fill="rgb(220,112,41)" fg:x="520" fg:w="1"/><text x="42.6298%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="42.4613%" y="453" width="0.4890%" height="15" fill="rgb(236,38,28)" fg:x="521" fg:w="6"/><text x="42.7113%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.7873%" y="437" width="0.1630%" height="15" fill="rgb(227,195,22)" fg:x="525" fg:w="2"/><text x="43.0373%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.8688%" y="421" width="0.0815%" height="15" fill="rgb(214,55,33)" fg:x="526" fg:w="1"/><text x="43.1188%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.1948%" y="405" width="0.1630%" height="15" fill="rgb(248,80,13)" fg:x="530" fg:w="2"/><text x="43.4448%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2763%" y="389" width="0.0815%" height="15" fill="rgb(238,52,6)" fg:x="531" fg:w="1"/><text x="43.5263%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="43.3578%" y="389" width="0.0815%" height="15" fill="rgb(224,198,47)" fg:x="532" fg:w="1"/><text x="43.6078%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.3578%" y="373" width="0.0815%" height="15" fill="rgb(233,171,20)" fg:x="532" fg:w="1"/><text x="43.6078%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.3578%" y="357" width="0.0815%" height="15" fill="rgb(241,30,25)" fg:x="532" fg:w="1"/><text x="43.6078%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.6023%" y="373" width="0.0815%" height="15" fill="rgb(207,171,38)" fg:x="535" fg:w="1"/><text x="43.8523%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.6838%" y="373" width="0.0815%" height="15" fill="rgb(234,70,1)" fg:x="536" fg:w="1"/><text x="43.9338%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="43.7653%" y="373" width="0.2445%" height="15" fill="rgb(232,178,18)" fg:x="537" fg:w="3"/><text x="44.0153%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.8468%" y="357" width="0.1630%" height="15" fill="rgb(241,78,40)" fg:x="538" fg:w="2"/><text x="44.0968%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.9283%" y="341" width="0.0815%" height="15" fill="rgb(222,35,25)" fg:x="539" fg:w="1"/><text x="44.1783%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.73%)</title><rect x="43.3578%" y="405" width="0.7335%" height="15" fill="rgb(207,92,16)" fg:x="532" fg:w="9"/><text x="43.6078%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="43.4393%" y="389" width="0.6520%" height="15" fill="rgb(216,59,51)" fg:x="533" fg:w="8"/><text x="43.6893%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.0098%" y="373" width="0.0815%" height="15" fill="rgb(213,80,28)" fg:x="540" fg:w="1"/><text x="44.2598%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.1728%" y="389" width="0.0815%" height="15" fill="rgb(220,93,7)" fg:x="542" fg:w="1"/><text x="44.4228%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="44.4173%" y="373" width="0.3260%" height="15" fill="rgb(225,24,44)" fg:x="545" fg:w="4"/><text x="44.6673%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.6618%" y="357" width="0.0815%" height="15" fill="rgb(243,74,40)" fg:x="548" fg:w="1"/><text x="44.9118%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6618%" y="341" width="0.0815%" height="15" fill="rgb(228,39,7)" fg:x="548" fg:w="1"/><text x="44.9118%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3138%" y="309" width="0.0815%" height="15" fill="rgb(227,79,8)" fg:x="556" fg:w="1"/><text x="45.5638%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.36%)</title><rect x="43.1133%" y="421" width="2.3635%" height="15" fill="rgb(236,58,11)" fg:x="529" fg:w="29"/><text x="43.3633%" y="431.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.39%)</title><rect x="44.0913%" y="405" width="1.3855%" height="15" fill="rgb(249,63,35)" fg:x="541" fg:w="17"/><text x="44.3413%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.22%)</title><rect x="44.2543%" y="389" width="1.2225%" height="15" fill="rgb(252,114,16)" fg:x="543" fg:w="15"/><text x="44.5043%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="44.7433%" y="373" width="0.7335%" height="15" fill="rgb(254,151,24)" fg:x="549" fg:w="9"/><text x="44.9933%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="44.9063%" y="357" width="0.5705%" height="15" fill="rgb(253,54,39)" fg:x="551" fg:w="7"/><text x="45.1563%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.33%)</title><rect x="45.1508%" y="341" width="0.3260%" height="15" fill="rgb(243,25,45)" fg:x="554" fg:w="4"/><text x="45.4008%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.2323%" y="325" width="0.2445%" height="15" fill="rgb(234,134,9)" fg:x="555" fg:w="3"/><text x="45.4823%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.3953%" y="309" width="0.0815%" height="15" fill="rgb(227,166,31)" fg:x="557" fg:w="1"/><text x="45.6453%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.53%)</title><rect x="43.0318%" y="437" width="2.5265%" height="15" fill="rgb(245,143,41)" fg:x="528" fg:w="31"/><text x="43.2818%" y="447.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="45.4768%" y="421" width="0.0815%" height="15" fill="rgb(238,181,32)" fg:x="558" fg:w="1"/><text x="45.7268%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.5583%" y="437" width="0.1630%" height="15" fill="rgb(224,113,18)" fg:x="559" fg:w="2"/><text x="45.8083%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.83%)</title><rect x="42.1353%" y="485" width="3.8305%" height="15" fill="rgb(240,229,28)" fg:x="517" fg:w="47"/><text x="42.3853%" y="495.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.75%)</title><rect x="42.2168%" y="469" width="3.7490%" height="15" fill="rgb(250,185,3)" fg:x="518" fg:w="46"/><text x="42.4668%" y="479.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (37 samples, 3.02%)</title><rect x="42.9503%" y="453" width="3.0155%" height="15" fill="rgb(212,59,25)" fg:x="527" fg:w="37"/><text x="43.2003%" y="463.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.7213%" y="437" width="0.2445%" height="15" fill="rgb(221,87,20)" fg:x="561" fg:w="3"/><text x="45.9713%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.7213%" y="421" width="0.2445%" height="15" fill="rgb(213,74,28)" fg:x="561" fg:w="3"/><text x="45.9713%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.8843%" y="405" width="0.0815%" height="15" fill="rgb(224,132,34)" fg:x="563" fg:w="1"/><text x="46.1343%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="46.2103%" y="373" width="0.1630%" height="15" fill="rgb(222,101,24)" fg:x="567" fg:w="2"/><text x="46.4603%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.5363%" y="309" width="0.0815%" height="15" fill="rgb(254,142,4)" fg:x="571" fg:w="1"/><text x="46.7863%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.5363%" y="341" width="0.1630%" height="15" fill="rgb(230,229,49)" fg:x="571" fg:w="2"/><text x="46.7863%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.5363%" y="325" width="0.1630%" height="15" fill="rgb(238,70,47)" fg:x="571" fg:w="2"/><text x="46.7863%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6178%" y="309" width="0.0815%" height="15" fill="rgb(231,160,17)" fg:x="572" fg:w="1"/><text x="46.8678%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6178%" y="293" width="0.0815%" height="15" fill="rgb(218,68,53)" fg:x="572" fg:w="1"/><text x="46.8678%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="47.0253%" y="293" width="0.1630%" height="15" fill="rgb(236,111,10)" fg:x="577" fg:w="2"/><text x="47.2753%" y="303.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="47.1068%" y="277" width="0.0815%" height="15" fill="rgb(224,34,41)" fg:x="578" fg:w="1"/><text x="47.3568%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="46.9438%" y="325" width="0.4890%" height="15" fill="rgb(241,118,19)" fg:x="576" fg:w="6"/><text x="47.1938%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="46.9438%" y="309" width="0.4890%" height="15" fill="rgb(238,129,25)" fg:x="576" fg:w="6"/><text x="47.1938%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="47.1883%" y="293" width="0.2445%" height="15" fill="rgb(238,22,31)" fg:x="579" fg:w="3"/><text x="47.4383%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.2698%" y="277" width="0.1630%" height="15" fill="rgb(222,174,48)" fg:x="580" fg:w="2"/><text x="47.5198%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.4328%" y="325" width="0.1630%" height="15" fill="rgb(206,152,40)" fg:x="582" fg:w="2"/><text x="47.6828%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.4328%" y="309" width="0.1630%" height="15" fill="rgb(218,99,54)" fg:x="582" fg:w="2"/><text x="47.6828%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.06%)</title><rect x="46.6993%" y="341" width="1.0595%" height="15" fill="rgb(220,174,26)" fg:x="573" fg:w="13"/><text x="46.9493%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.5958%" y="325" width="0.1630%" height="15" fill="rgb(245,116,9)" fg:x="584" fg:w="2"/><text x="47.8458%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.5958%" y="309" width="0.1630%" height="15" fill="rgb(209,72,35)" fg:x="584" fg:w="2"/><text x="47.8458%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.47%)</title><rect x="46.3733%" y="357" width="1.4670%" height="15" fill="rgb(226,126,21)" fg:x="569" fg:w="18"/><text x="46.6233%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="47.7588%" y="341" width="0.0815%" height="15" fill="rgb(227,192,1)" fg:x="586" fg:w="1"/><text x="48.0088%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.55%)</title><rect x="46.3733%" y="373" width="1.5485%" height="15" fill="rgb(237,180,29)" fg:x="569" fg:w="19"/><text x="46.6233%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.8403%" y="357" width="0.0815%" height="15" fill="rgb(230,197,35)" fg:x="587" fg:w="1"/><text x="48.0903%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.79%)</title><rect x="46.2103%" y="389" width="1.7930%" height="15" fill="rgb(246,193,31)" fg:x="567" fg:w="22"/><text x="46.4603%" y="399.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.9218%" y="373" width="0.0815%" height="15" fill="rgb(241,36,4)" fg:x="588" fg:w="1"/><text x="48.1718%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.0033%" y="389" width="0.1630%" height="15" fill="rgb(241,130,17)" fg:x="589" fg:w="2"/><text x="48.2533%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.0848%" y="373" width="0.0815%" height="15" fill="rgb(206,137,32)" fg:x="590" fg:w="1"/><text x="48.3348%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.12%)</title><rect x="46.1288%" y="421" width="2.1190%" height="15" fill="rgb(237,228,51)" fg:x="566" fg:w="26"/><text x="46.3788%" y="431.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.04%)</title><rect x="46.2103%" y="405" width="2.0375%" height="15" fill="rgb(243,6,42)" fg:x="567" fg:w="25"/><text x="46.4603%" y="415.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1663%" y="389" width="0.0815%" height="15" fill="rgb(251,74,28)" fg:x="591" fg:w="1"/><text x="48.4163%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1663%" y="373" width="0.0815%" height="15" fill="rgb(218,20,49)" fg:x="591" fg:w="1"/><text x="48.4163%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1663%" y="357" width="0.0815%" height="15" fill="rgb(238,28,14)" fg:x="591" fg:w="1"/><text x="48.4163%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.2478%" y="405" width="0.0815%" height="15" fill="rgb(229,40,46)" fg:x="592" fg:w="1"/><text x="48.4978%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.2478%" y="421" width="0.1630%" height="15" fill="rgb(244,195,20)" fg:x="592" fg:w="2"/><text x="48.4978%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3293%" y="405" width="0.0815%" height="15" fill="rgb(253,56,35)" fg:x="593" fg:w="1"/><text x="48.5793%" y="415.50"></text></g><g><title>engine::session::Session::close (166 samples, 13.53%)</title><rect x="35.0448%" y="597" width="13.5289%" height="15" fill="rgb(210,149,44)" fg:x="430" fg:w="166"/><text x="35.2948%" y="607.50">engine::session::Ses..</text></g><g><title>engine::session::state::State::close (166 samples, 13.53%)</title><rect x="35.0448%" y="581" width="13.5289%" height="15" fill="rgb(240,135,12)" fg:x="430" fg:w="166"/><text x="35.2948%" y="591.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (166 samples, 13.53%)</title><rect x="35.0448%" y="565" width="13.5289%" height="15" fill="rgb(251,24,50)" fg:x="430" fg:w="166"/><text x="35.2948%" y="575.50">engine::session::sta..</text></g><g><title>core::iter::adapters::try_process (164 samples, 13.37%)</title><rect x="35.2078%" y="549" width="13.3659%" height="15" fill="rgb(243,200,47)" fg:x="432" fg:w="164"/><text x="35.4578%" y="559.50">core::iter::adapters..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (164 samples, 13.37%)</title><rect x="35.2078%" y="533" width="13.3659%" height="15" fill="rgb(224,166,26)" fg:x="432" fg:w="164"/><text x="35.4578%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (163 samples, 13.28%)</title><rect x="35.2893%" y="517" width="13.2844%" height="15" fill="rgb(233,0,47)" fg:x="433" fg:w="163"/><text x="35.5393%" y="527.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (103 samples, 8.39%)</title><rect x="40.1793%" y="501" width="8.3945%" height="15" fill="rgb(253,80,5)" fg:x="493" fg:w="103"/><text x="40.4293%" y="511.50">kernel::mode..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.61%)</title><rect x="45.9658%" y="485" width="2.6080%" height="15" fill="rgb(214,133,25)" fg:x="564" fg:w="32"/><text x="46.2158%" y="495.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.61%)</title><rect x="45.9658%" y="469" width="2.6080%" height="15" fill="rgb(209,27,14)" fg:x="564" fg:w="32"/><text x="46.2158%" y="479.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.61%)</title><rect x="45.9658%" y="453" width="2.6080%" height="15" fill="rgb(219,102,51)" fg:x="564" fg:w="32"/><text x="46.2158%" y="463.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.53%)</title><rect x="46.0473%" y="437" width="2.5265%" height="15" fill="rgb(237,18,16)" fg:x="565" fg:w="31"/><text x="46.2973%" y="447.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.4108%" y="421" width="0.1630%" height="15" fill="rgb(241,85,17)" fg:x="594" fg:w="2"/><text x="48.6608%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.4923%" y="405" width="0.0815%" height="15" fill="rgb(236,90,42)" fg:x="595" fg:w="1"/><text x="48.7423%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4923%" y="389" width="0.0815%" height="15" fill="rgb(249,57,21)" fg:x="595" fg:w="1"/><text x="48.7423%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8183%" y="389" width="0.0815%" height="15" fill="rgb(243,12,36)" fg:x="599" fg:w="1"/><text x="49.0683%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.8183%" y="373" width="0.0815%" height="15" fill="rgb(253,128,47)" fg:x="599" fg:w="1"/><text x="49.0683%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8183%" y="357" width="0.0815%" height="15" fill="rgb(207,33,20)" fg:x="599" fg:w="1"/><text x="49.0683%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.8183%" y="341" width="0.0815%" height="15" fill="rgb(233,215,35)" fg:x="599" fg:w="1"/><text x="49.0683%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="48.7368%" y="421" width="0.2445%" height="15" fill="rgb(249,188,52)" fg:x="598" fg:w="3"/><text x="48.9868%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.7368%" y="405" width="0.2445%" height="15" fill="rgb(225,12,32)" fg:x="598" fg:w="3"/><text x="48.9868%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8998%" y="389" width="0.0815%" height="15" fill="rgb(247,98,14)" fg:x="600" fg:w="1"/><text x="49.1498%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8998%" y="373" width="0.0815%" height="15" fill="rgb(247,219,48)" fg:x="600" fg:w="1"/><text x="49.1498%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.8998%" y="357" width="0.0815%" height="15" fill="rgb(253,60,48)" fg:x="600" fg:w="1"/><text x="49.1498%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8998%" y="341" width="0.0815%" height="15" fill="rgb(245,15,52)" fg:x="600" fg:w="1"/><text x="49.1498%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9813%" y="405" width="0.0815%" height="15" fill="rgb(220,133,28)" fg:x="601" fg:w="1"/><text x="49.2313%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9813%" y="389" width="0.0815%" height="15" fill="rgb(217,180,4)" fg:x="601" fg:w="1"/><text x="49.2313%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9813%" y="373" width="0.0815%" height="15" fill="rgb(251,24,1)" fg:x="601" fg:w="1"/><text x="49.2313%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9813%" y="357" width="0.0815%" height="15" fill="rgb(212,185,49)" fg:x="601" fg:w="1"/><text x="49.2313%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9813%" y="341" width="0.0815%" height="15" fill="rgb(215,175,22)" fg:x="601" fg:w="1"/><text x="49.2313%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9813%" y="325" width="0.0815%" height="15" fill="rgb(250,205,14)" fg:x="601" fg:w="1"/><text x="49.2313%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9813%" y="309" width="0.0815%" height="15" fill="rgb(225,211,22)" fg:x="601" fg:w="1"/><text x="49.2313%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9813%" y="293" width="0.0815%" height="15" fill="rgb(251,179,42)" fg:x="601" fg:w="1"/><text x="49.2313%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9813%" y="277" width="0.0815%" height="15" fill="rgb(208,216,51)" fg:x="601" fg:w="1"/><text x="49.2313%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9813%" y="261" width="0.0815%" height="15" fill="rgb(235,36,11)" fg:x="601" fg:w="1"/><text x="49.2313%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9813%" y="245" width="0.0815%" height="15" fill="rgb(213,189,28)" fg:x="601" fg:w="1"/><text x="49.2313%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9813%" y="229" width="0.0815%" height="15" fill="rgb(227,203,42)" fg:x="601" fg:w="1"/><text x="49.2313%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1443%" y="373" width="0.0815%" height="15" fill="rgb(244,72,36)" fg:x="603" fg:w="1"/><text x="49.3943%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1443%" y="357" width="0.0815%" height="15" fill="rgb(213,53,17)" fg:x="603" fg:w="1"/><text x="49.3943%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="49.0628%" y="389" width="0.2445%" height="15" fill="rgb(207,167,3)" fg:x="602" fg:w="3"/><text x="49.3128%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.2258%" y="373" width="0.0815%" height="15" fill="rgb(216,98,30)" fg:x="604" fg:w="1"/><text x="49.4758%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.2258%" y="357" width="0.0815%" height="15" fill="rgb(236,123,15)" fg:x="604" fg:w="1"/><text x="49.4758%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.2258%" y="341" width="0.0815%" height="15" fill="rgb(248,81,50)" fg:x="604" fg:w="1"/><text x="49.4758%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.2258%" y="325" width="0.0815%" height="15" fill="rgb(214,120,4)" fg:x="604" fg:w="1"/><text x="49.4758%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.2258%" y="309" width="0.0815%" height="15" fill="rgb(208,179,34)" fg:x="604" fg:w="1"/><text x="49.4758%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.2258%" y="293" width="0.0815%" height="15" fill="rgb(227,140,7)" fg:x="604" fg:w="1"/><text x="49.4758%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.2258%" y="277" width="0.0815%" height="15" fill="rgb(214,22,6)" fg:x="604" fg:w="1"/><text x="49.4758%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="48.9813%" y="421" width="0.4890%" height="15" fill="rgb(207,137,27)" fg:x="601" fg:w="6"/><text x="49.2313%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="49.0628%" y="405" width="0.4075%" height="15" fill="rgb(210,8,46)" fg:x="602" fg:w="5"/><text x="49.3128%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.3073%" y="389" width="0.1630%" height="15" fill="rgb(240,16,54)" fg:x="605" fg:w="2"/><text x="49.5573%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.3073%" y="373" width="0.1630%" height="15" fill="rgb(211,209,29)" fg:x="605" fg:w="2"/><text x="49.5573%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="49.3073%" y="357" width="0.1630%" height="15" fill="rgb(226,228,24)" fg:x="605" fg:w="2"/><text x="49.5573%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.3073%" y="341" width="0.1630%" height="15" fill="rgb(222,84,9)" fg:x="605" fg:w="2"/><text x="49.5573%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.3888%" y="325" width="0.0815%" height="15" fill="rgb(234,203,30)" fg:x="606" fg:w="1"/><text x="49.6388%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.3888%" y="309" width="0.0815%" height="15" fill="rgb(238,109,14)" fg:x="606" fg:w="1"/><text x="49.6388%" y="319.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (10 samples, 0.81%)</title><rect x="48.7368%" y="469" width="0.8150%" height="15" fill="rgb(233,206,34)" fg:x="598" fg:w="10"/><text x="48.9868%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (10 samples, 0.81%)</title><rect x="48.7368%" y="453" width="0.8150%" height="15" fill="rgb(220,167,47)" fg:x="598" fg:w="10"/><text x="48.9868%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.81%)</title><rect x="48.7368%" y="437" width="0.8150%" height="15" fill="rgb(238,105,10)" fg:x="598" fg:w="10"/><text x="48.9868%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.4703%" y="421" width="0.0815%" height="15" fill="rgb(213,227,17)" fg:x="607" fg:w="1"/><text x="49.7203%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.4703%" y="405" width="0.0815%" height="15" fill="rgb(217,132,38)" fg:x="607" fg:w="1"/><text x="49.7203%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.4703%" y="389" width="0.0815%" height="15" fill="rgb(242,146,4)" fg:x="607" fg:w="1"/><text x="49.7203%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4703%" y="373" width="0.0815%" height="15" fill="rgb(212,61,9)" fg:x="607" fg:w="1"/><text x="49.7203%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.4703%" y="357" width="0.0815%" height="15" fill="rgb(247,126,22)" fg:x="607" fg:w="1"/><text x="49.7203%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.4703%" y="341" width="0.0815%" height="15" fill="rgb(220,196,2)" fg:x="607" fg:w="1"/><text x="49.7203%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.4703%" y="325" width="0.0815%" height="15" fill="rgb(208,46,4)" fg:x="607" fg:w="1"/><text x="49.7203%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.4703%" y="309" width="0.0815%" height="15" fill="rgb(252,104,46)" fg:x="607" fg:w="1"/><text x="49.7203%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.4703%" y="293" width="0.0815%" height="15" fill="rgb(237,152,48)" fg:x="607" fg:w="1"/><text x="49.7203%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4703%" y="277" width="0.0815%" height="15" fill="rgb(221,59,37)" fg:x="607" fg:w="1"/><text x="49.7203%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.4703%" y="261" width="0.0815%" height="15" fill="rgb(209,202,51)" fg:x="607" fg:w="1"/><text x="49.7203%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="49.4703%" y="245" width="0.0815%" height="15" fill="rgb(228,81,30)" fg:x="607" fg:w="1"/><text x="49.7203%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="49.4703%" y="229" width="0.0815%" height="15" fill="rgb(227,42,39)" fg:x="607" fg:w="1"/><text x="49.7203%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.5518%" y="405" width="0.1630%" height="15" fill="rgb(221,26,2)" fg:x="608" fg:w="2"/><text x="49.8018%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.5518%" y="389" width="0.1630%" height="15" fill="rgb(254,61,31)" fg:x="608" fg:w="2"/><text x="49.8018%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="49.6333%" y="373" width="0.0815%" height="15" fill="rgb(222,173,38)" fg:x="609" fg:w="1"/><text x="49.8833%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (13 samples, 1.06%)</title><rect x="48.7368%" y="485" width="1.0595%" height="15" fill="rgb(218,50,12)" fg:x="598" fg:w="13"/><text x="48.9868%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="49.5518%" y="469" width="0.2445%" height="15" fill="rgb(223,88,40)" fg:x="608" fg:w="3"/><text x="49.8018%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="49.5518%" y="453" width="0.2445%" height="15" fill="rgb(237,54,19)" fg:x="608" fg:w="3"/><text x="49.8018%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.5518%" y="437" width="0.2445%" height="15" fill="rgb(251,129,25)" fg:x="608" fg:w="3"/><text x="49.8018%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.5518%" y="421" width="0.2445%" height="15" fill="rgb(238,97,19)" fg:x="608" fg:w="3"/><text x="49.8018%" y="431.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="49.7148%" y="405" width="0.0815%" height="15" fill="rgb(240,169,18)" fg:x="610" fg:w="1"/><text x="49.9648%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7963%" y="405" width="0.0815%" height="15" fill="rgb(230,187,49)" fg:x="611" fg:w="1"/><text x="50.0463%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7963%" y="389" width="0.0815%" height="15" fill="rgb(209,44,26)" fg:x="611" fg:w="1"/><text x="50.0463%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="49.7963%" y="437" width="0.2445%" height="15" fill="rgb(244,0,6)" fg:x="611" fg:w="3"/><text x="50.0463%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="49.7963%" y="421" width="0.2445%" height="15" fill="rgb(248,18,21)" fg:x="611" fg:w="3"/><text x="50.0463%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.8778%" y="405" width="0.1630%" height="15" fill="rgb(245,180,19)" fg:x="612" fg:w="2"/><text x="50.1278%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.8778%" y="389" width="0.1630%" height="15" fill="rgb(252,118,36)" fg:x="612" fg:w="2"/><text x="50.1278%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.9593%" y="373" width="0.0815%" height="15" fill="rgb(210,224,19)" fg:x="613" fg:w="1"/><text x="50.2093%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9593%" y="357" width="0.0815%" height="15" fill="rgb(218,30,24)" fg:x="613" fg:w="1"/><text x="50.2093%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9593%" y="341" width="0.0815%" height="15" fill="rgb(219,75,50)" fg:x="613" fg:w="1"/><text x="50.2093%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9593%" y="325" width="0.0815%" height="15" fill="rgb(234,72,50)" fg:x="613" fg:w="1"/><text x="50.2093%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="50.0407%" y="421" width="0.0815%" height="15" fill="rgb(219,100,48)" fg:x="614" fg:w="1"/><text x="50.2907%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0407%" y="405" width="0.0815%" height="15" fill="rgb(253,5,41)" fg:x="614" fg:w="1"/><text x="50.2907%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.1222%" y="405" width="0.0815%" height="15" fill="rgb(247,181,11)" fg:x="615" fg:w="1"/><text x="50.3722%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.1222%" y="389" width="0.0815%" height="15" fill="rgb(222,223,25)" fg:x="615" fg:w="1"/><text x="50.3722%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.1222%" y="373" width="0.0815%" height="15" fill="rgb(214,198,28)" fg:x="615" fg:w="1"/><text x="50.3722%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.1222%" y="357" width="0.0815%" height="15" fill="rgb(230,46,43)" fg:x="615" fg:w="1"/><text x="50.3722%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.1222%" y="341" width="0.0815%" height="15" fill="rgb(233,65,53)" fg:x="615" fg:w="1"/><text x="50.3722%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1222%" y="325" width="0.0815%" height="15" fill="rgb(221,121,27)" fg:x="615" fg:w="1"/><text x="50.3722%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="50.0407%" y="437" width="0.2445%" height="15" fill="rgb(247,70,47)" fg:x="614" fg:w="3"/><text x="50.2907%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.1222%" y="421" width="0.1630%" height="15" fill="rgb(228,85,35)" fg:x="615" fg:w="2"/><text x="50.3722%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.2037%" y="405" width="0.0815%" height="15" fill="rgb(209,50,18)" fg:x="616" fg:w="1"/><text x="50.4537%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2037%" y="389" width="0.0815%" height="15" fill="rgb(250,19,35)" fg:x="616" fg:w="1"/><text x="50.4537%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.2037%" y="373" width="0.0815%" height="15" fill="rgb(253,107,29)" fg:x="616" fg:w="1"/><text x="50.4537%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2037%" y="357" width="0.0815%" height="15" fill="rgb(252,179,29)" fg:x="616" fg:w="1"/><text x="50.4537%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.2037%" y="341" width="0.0815%" height="15" fill="rgb(238,194,6)" fg:x="616" fg:w="1"/><text x="50.4537%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2037%" y="325" width="0.0815%" height="15" fill="rgb(238,164,29)" fg:x="616" fg:w="1"/><text x="50.4537%" y="335.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (7 samples, 0.57%)</title><rect x="49.7963%" y="469" width="0.5705%" height="15" fill="rgb(224,25,9)" fg:x="611" fg:w="7"/><text x="50.0463%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.57%)</title><rect x="49.7963%" y="453" width="0.5705%" height="15" fill="rgb(244,153,23)" fg:x="611" fg:w="7"/><text x="50.0463%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.2852%" y="437" width="0.0815%" height="15" fill="rgb(212,203,14)" fg:x="617" fg:w="1"/><text x="50.5352%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (21 samples, 1.71%)</title><rect x="48.7368%" y="501" width="1.7115%" height="15" fill="rgb(220,164,20)" fg:x="598" fg:w="21"/><text x="48.9868%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (8 samples, 0.65%)</title><rect x="49.7963%" y="485" width="0.6520%" height="15" fill="rgb(222,203,48)" fg:x="611" fg:w="8"/><text x="50.0463%" y="495.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="50.3667%" y="469" width="0.0815%" height="15" fill="rgb(215,159,22)" fg:x="618" fg:w="1"/><text x="50.6167%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.9372%" y="325" width="0.0815%" height="15" fill="rgb(216,183,47)" fg:x="625" fg:w="1"/><text x="51.1872%" y="335.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="51.0187%" y="293" width="0.1630%" height="15" fill="rgb(229,195,25)" fg:x="626" fg:w="2"/><text x="51.2687%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="51.0187%" y="277" width="0.1630%" height="15" fill="rgb(224,132,51)" fg:x="626" fg:w="2"/><text x="51.2687%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.0187%" y="261" width="0.1630%" height="15" fill="rgb(240,63,7)" fg:x="626" fg:w="2"/><text x="51.2687%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.0187%" y="245" width="0.1630%" height="15" fill="rgb(249,182,41)" fg:x="626" fg:w="2"/><text x="51.2687%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="51.1002%" y="229" width="0.0815%" height="15" fill="rgb(243,47,26)" fg:x="627" fg:w="1"/><text x="51.3502%" y="239.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (5 samples, 0.41%)</title><rect x="50.9372%" y="341" width="0.4075%" height="15" fill="rgb(233,48,2)" fg:x="625" fg:w="5"/><text x="51.1872%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (4 samples, 0.33%)</title><rect x="51.0187%" y="325" width="0.3260%" height="15" fill="rgb(244,165,34)" fg:x="626" fg:w="4"/><text x="51.2687%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.33%)</title><rect x="51.0187%" y="309" width="0.3260%" height="15" fill="rgb(207,89,7)" fg:x="626" fg:w="4"/><text x="51.2687%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="51.1817%" y="293" width="0.1630%" height="15" fill="rgb(244,117,36)" fg:x="628" fg:w="2"/><text x="51.4317%" y="303.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="51.1817%" y="277" width="0.1630%" height="15" fill="rgb(226,144,34)" fg:x="628" fg:w="2"/><text x="51.4317%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="51.1817%" y="261" width="0.1630%" height="15" fill="rgb(213,23,19)" fg:x="628" fg:w="2"/><text x="51.4317%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.1817%" y="245" width="0.1630%" height="15" fill="rgb(217,75,12)" fg:x="628" fg:w="2"/><text x="51.4317%" y="255.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (10 samples, 0.81%)</title><rect x="50.8557%" y="357" width="0.8150%" height="15" fill="rgb(224,159,17)" fg:x="624" fg:w="10"/><text x="51.1057%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (4 samples, 0.33%)</title><rect x="51.3447%" y="341" width="0.3260%" height="15" fill="rgb(217,118,1)" fg:x="630" fg:w="4"/><text x="51.5947%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (3 samples, 0.24%)</title><rect x="51.4262%" y="325" width="0.2445%" height="15" fill="rgb(232,180,48)" fg:x="631" fg:w="3"/><text x="51.6762%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.5077%" y="309" width="0.1630%" height="15" fill="rgb(230,27,33)" fg:x="632" fg:w="2"/><text x="51.7577%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="51.9152%" y="325" width="0.1630%" height="15" fill="rgb(205,31,21)" fg:x="637" fg:w="2"/><text x="52.1652%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="51.9152%" y="309" width="0.1630%" height="15" fill="rgb(253,59,4)" fg:x="637" fg:w="2"/><text x="52.1652%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.9152%" y="293" width="0.1630%" height="15" fill="rgb(224,201,9)" fg:x="637" fg:w="2"/><text x="52.1652%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="51.9152%" y="277" width="0.1630%" height="15" fill="rgb(229,206,30)" fg:x="637" fg:w="2"/><text x="52.1652%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.9967%" y="261" width="0.0815%" height="15" fill="rgb(212,67,47)" fg:x="638" fg:w="1"/><text x="52.2467%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.9967%" y="245" width="0.0815%" height="15" fill="rgb(211,96,50)" fg:x="638" fg:w="1"/><text x="52.2467%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.9967%" y="229" width="0.0815%" height="15" fill="rgb(252,114,18)" fg:x="638" fg:w="1"/><text x="52.2467%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.9967%" y="213" width="0.0815%" height="15" fill="rgb(223,58,37)" fg:x="638" fg:w="1"/><text x="52.2467%" y="223.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="52.3227%" y="309" width="0.1630%" height="15" fill="rgb(237,70,4)" fg:x="642" fg:w="2"/><text x="52.5727%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.4042%" y="293" width="0.0815%" height="15" fill="rgb(244,85,46)" fg:x="643" fg:w="1"/><text x="52.6542%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7302%" y="261" width="0.0815%" height="15" fill="rgb(223,39,52)" fg:x="647" fg:w="1"/><text x="52.9802%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="52.5672%" y="277" width="0.3260%" height="15" fill="rgb(218,200,14)" fg:x="645" fg:w="4"/><text x="52.8172%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8117%" y="261" width="0.0815%" height="15" fill="rgb(208,171,16)" fg:x="648" fg:w="1"/><text x="53.0617%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8117%" y="245" width="0.0815%" height="15" fill="rgb(234,200,18)" fg:x="648" fg:w="1"/><text x="53.0617%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8117%" y="229" width="0.0815%" height="15" fill="rgb(228,45,11)" fg:x="648" fg:w="1"/><text x="53.0617%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8117%" y="213" width="0.0815%" height="15" fill="rgb(237,182,11)" fg:x="648" fg:w="1"/><text x="53.0617%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8117%" y="197" width="0.0815%" height="15" fill="rgb(241,175,49)" fg:x="648" fg:w="1"/><text x="53.0617%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8117%" y="181" width="0.0815%" height="15" fill="rgb(247,38,35)" fg:x="648" fg:w="1"/><text x="53.0617%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8117%" y="165" width="0.0815%" height="15" fill="rgb(228,39,49)" fg:x="648" fg:w="1"/><text x="53.0617%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8117%" y="149" width="0.0815%" height="15" fill="rgb(226,101,26)" fg:x="648" fg:w="1"/><text x="53.0617%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8117%" y="133" width="0.0815%" height="15" fill="rgb(206,141,19)" fg:x="648" fg:w="1"/><text x="53.0617%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8117%" y="117" width="0.0815%" height="15" fill="rgb(211,200,13)" fg:x="648" fg:w="1"/><text x="53.0617%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8117%" y="101" width="0.0815%" height="15" fill="rgb(241,121,6)" fg:x="648" fg:w="1"/><text x="53.0617%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8117%" y="85" width="0.0815%" height="15" fill="rgb(234,221,29)" fg:x="648" fg:w="1"/><text x="53.0617%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="52.5672%" y="293" width="0.4890%" height="15" fill="rgb(229,136,5)" fg:x="645" fg:w="6"/><text x="52.8172%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8932%" y="277" width="0.1630%" height="15" fill="rgb(238,36,11)" fg:x="649" fg:w="2"/><text x="53.1432%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8932%" y="261" width="0.1630%" height="15" fill="rgb(251,55,41)" fg:x="649" fg:w="2"/><text x="53.1432%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.8932%" y="245" width="0.1630%" height="15" fill="rgb(242,34,40)" fg:x="649" fg:w="2"/><text x="53.1432%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.8932%" y="229" width="0.1630%" height="15" fill="rgb(215,42,17)" fg:x="649" fg:w="2"/><text x="53.1432%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.8932%" y="213" width="0.1630%" height="15" fill="rgb(207,44,46)" fg:x="649" fg:w="2"/><text x="53.1432%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.8932%" y="197" width="0.1630%" height="15" fill="rgb(211,206,28)" fg:x="649" fg:w="2"/><text x="53.1432%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.8932%" y="181" width="0.1630%" height="15" fill="rgb(237,167,16)" fg:x="649" fg:w="2"/><text x="53.1432%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="52.8932%" y="165" width="0.1630%" height="15" fill="rgb(233,66,6)" fg:x="649" fg:w="2"/><text x="53.1432%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="52.8932%" y="149" width="0.1630%" height="15" fill="rgb(246,123,29)" fg:x="649" fg:w="2"/><text x="53.1432%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="52.8932%" y="133" width="0.1630%" height="15" fill="rgb(209,62,40)" fg:x="649" fg:w="2"/><text x="53.1432%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="52.8932%" y="117" width="0.1630%" height="15" fill="rgb(218,4,25)" fg:x="649" fg:w="2"/><text x="53.1432%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9747%" y="101" width="0.0815%" height="15" fill="rgb(253,91,49)" fg:x="650" fg:w="1"/><text x="53.2247%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.0562%" y="293" width="0.0815%" height="15" fill="rgb(228,155,29)" fg:x="651" fg:w="1"/><text x="53.3062%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3007%" y="261" width="0.0815%" height="15" fill="rgb(243,57,37)" fg:x="654" fg:w="1"/><text x="53.5507%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.4637%" y="229" width="0.1630%" height="15" fill="rgb(244,167,17)" fg:x="656" fg:w="2"/><text x="53.7137%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.5452%" y="213" width="0.0815%" height="15" fill="rgb(207,181,38)" fg:x="657" fg:w="1"/><text x="53.7952%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5452%" y="197" width="0.0815%" height="15" fill="rgb(211,8,23)" fg:x="657" fg:w="1"/><text x="53.7952%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.7082%" y="213" width="0.0815%" height="15" fill="rgb(235,11,44)" fg:x="659" fg:w="1"/><text x="53.9582%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="53.6267%" y="229" width="0.2445%" height="15" fill="rgb(248,18,52)" fg:x="658" fg:w="3"/><text x="53.8767%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.7897%" y="213" width="0.0815%" height="15" fill="rgb(208,4,7)" fg:x="660" fg:w="1"/><text x="54.0397%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (23 samples, 1.87%)</title><rect x="52.0782%" y="325" width="1.8745%" height="15" fill="rgb(240,17,39)" fg:x="639" fg:w="23"/><text x="52.3282%" y="335.50">&lt;..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.47%)</title><rect x="52.4857%" y="309" width="1.4670%" height="15" fill="rgb(207,170,3)" fg:x="644" fg:w="18"/><text x="52.7357%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="53.1377%" y="293" width="0.8150%" height="15" fill="rgb(236,100,52)" fg:x="652" fg:w="10"/><text x="53.3877%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="53.1377%" y="277" width="0.8150%" height="15" fill="rgb(246,78,51)" fg:x="652" fg:w="10"/><text x="53.3877%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.57%)</title><rect x="53.3822%" y="261" width="0.5705%" height="15" fill="rgb(211,17,15)" fg:x="655" fg:w="7"/><text x="53.6322%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="53.4637%" y="245" width="0.4890%" height="15" fill="rgb(209,59,46)" fg:x="656" fg:w="6"/><text x="53.7137%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.8712%" y="229" width="0.0815%" height="15" fill="rgb(210,92,25)" fg:x="661" fg:w="1"/><text x="54.1212%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.8712%" y="213" width="0.0815%" height="15" fill="rgb(238,174,52)" fg:x="661" fg:w="1"/><text x="54.1212%" y="223.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="53.9527%" y="309" width="0.0815%" height="15" fill="rgb(230,73,7)" fg:x="662" fg:w="1"/><text x="54.2027%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.9527%" y="293" width="0.0815%" height="15" fill="rgb(243,124,40)" fg:x="662" fg:w="1"/><text x="54.2027%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0342%" y="293" width="0.0815%" height="15" fill="rgb(244,170,11)" fg:x="663" fg:w="1"/><text x="54.2842%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0342%" y="277" width="0.0815%" height="15" fill="rgb(207,114,54)" fg:x="663" fg:w="1"/><text x="54.2842%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.0342%" y="261" width="0.0815%" height="15" fill="rgb(205,42,20)" fg:x="663" fg:w="1"/><text x="54.2842%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0342%" y="245" width="0.0815%" height="15" fill="rgb(230,30,28)" fg:x="663" fg:w="1"/><text x="54.2842%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.0342%" y="229" width="0.0815%" height="15" fill="rgb(205,73,54)" fg:x="663" fg:w="1"/><text x="54.2842%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.0342%" y="213" width="0.0815%" height="15" fill="rgb(254,227,23)" fg:x="663" fg:w="1"/><text x="54.2842%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.0342%" y="197" width="0.0815%" height="15" fill="rgb(228,202,34)" fg:x="663" fg:w="1"/><text x="54.2842%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.0342%" y="181" width="0.0815%" height="15" fill="rgb(222,225,37)" fg:x="663" fg:w="1"/><text x="54.2842%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0342%" y="165" width="0.0815%" height="15" fill="rgb(221,14,54)" fg:x="663" fg:w="1"/><text x="54.2842%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.0342%" y="149" width="0.0815%" height="15" fill="rgb(254,102,2)" fg:x="663" fg:w="1"/><text x="54.2842%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.1157%" y="293" width="0.0815%" height="15" fill="rgb(232,104,17)" fg:x="664" fg:w="1"/><text x="54.3657%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2787%" y="261" width="0.0815%" height="15" fill="rgb(250,220,14)" fg:x="666" fg:w="1"/><text x="54.5287%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="54.1972%" y="293" width="0.2445%" height="15" fill="rgb(241,158,9)" fg:x="665" fg:w="3"/><text x="54.4472%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="54.1972%" y="277" width="0.2445%" height="15" fill="rgb(246,9,43)" fg:x="665" fg:w="3"/><text x="54.4472%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.3602%" y="261" width="0.0815%" height="15" fill="rgb(206,73,33)" fg:x="667" fg:w="1"/><text x="54.6102%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3602%" y="245" width="0.0815%" height="15" fill="rgb(222,79,8)" fg:x="667" fg:w="1"/><text x="54.6102%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4417%" y="261" width="0.0815%" height="15" fill="rgb(234,8,54)" fg:x="668" fg:w="1"/><text x="54.6917%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.5232%" y="229" width="0.1630%" height="15" fill="rgb(209,134,38)" fg:x="669" fg:w="2"/><text x="54.7732%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.6862%" y="229" width="0.0815%" height="15" fill="rgb(230,127,29)" fg:x="671" fg:w="1"/><text x="54.9362%" y="239.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (38 samples, 3.10%)</title><rect x="51.7522%" y="341" width="3.0970%" height="15" fill="rgb(242,44,41)" fg:x="635" fg:w="38"/><text x="52.0022%" y="351.50">&lt;&amp;k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.90%)</title><rect x="53.9527%" y="325" width="0.8965%" height="15" fill="rgb(222,56,43)" fg:x="662" fg:w="11"/><text x="54.2027%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="54.0342%" y="309" width="0.8150%" height="15" fill="rgb(238,39,47)" fg:x="663" fg:w="10"/><text x="54.2842%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="54.4417%" y="293" width="0.4075%" height="15" fill="rgb(226,79,43)" fg:x="668" fg:w="5"/><text x="54.6917%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="54.4417%" y="277" width="0.4075%" height="15" fill="rgb(242,105,53)" fg:x="668" fg:w="5"/><text x="54.6917%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="54.5232%" y="261" width="0.3260%" height="15" fill="rgb(251,132,46)" fg:x="669" fg:w="4"/><text x="54.7732%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="54.5232%" y="245" width="0.3260%" height="15" fill="rgb(231,77,14)" fg:x="669" fg:w="4"/><text x="54.7732%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.7677%" y="229" width="0.0815%" height="15" fill="rgb(240,135,9)" fg:x="672" fg:w="1"/><text x="55.0177%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.7677%" y="213" width="0.0815%" height="15" fill="rgb(248,109,14)" fg:x="672" fg:w="1"/><text x="55.0177%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="54.8492%" y="341" width="0.4075%" height="15" fill="rgb(227,146,52)" fg:x="673" fg:w="5"/><text x="55.0992%" y="351.50"></text></g><g><title>__libc_malloc (4 samples, 0.33%)</title><rect x="54.9307%" y="325" width="0.3260%" height="15" fill="rgb(232,54,3)" fg:x="674" fg:w="4"/><text x="55.1807%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="55.2567%" y="309" width="0.0815%" height="15" fill="rgb(229,201,43)" fg:x="678" fg:w="1"/><text x="55.5067%" y="319.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="55.2567%" y="293" width="0.0815%" height="15" fill="rgb(252,161,33)" fg:x="678" fg:w="1"/><text x="55.5067%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.2567%" y="277" width="0.0815%" height="15" fill="rgb(226,146,40)" fg:x="678" fg:w="1"/><text x="55.5067%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="55.2567%" y="261" width="0.0815%" height="15" fill="rgb(219,47,25)" fg:x="678" fg:w="1"/><text x="55.5067%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.3382%" y="245" width="0.0815%" height="15" fill="rgb(250,135,13)" fg:x="679" fg:w="1"/><text x="55.5882%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3382%" y="229" width="0.0815%" height="15" fill="rgb(219,229,18)" fg:x="679" fg:w="1"/><text x="55.5882%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3382%" y="213" width="0.0815%" height="15" fill="rgb(217,152,27)" fg:x="679" fg:w="1"/><text x="55.5882%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.3382%" y="197" width="0.0815%" height="15" fill="rgb(225,71,47)" fg:x="679" fg:w="1"/><text x="55.5882%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.3382%" y="181" width="0.0815%" height="15" fill="rgb(220,139,14)" fg:x="679" fg:w="1"/><text x="55.5882%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.3382%" y="165" width="0.0815%" height="15" fill="rgb(247,54,32)" fg:x="679" fg:w="1"/><text x="55.5882%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3382%" y="149" width="0.0815%" height="15" fill="rgb(252,131,39)" fg:x="679" fg:w="1"/><text x="55.5882%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3382%" y="133" width="0.0815%" height="15" fill="rgb(210,108,39)" fg:x="679" fg:w="1"/><text x="55.5882%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.3382%" y="117" width="0.0815%" height="15" fill="rgb(205,23,29)" fg:x="679" fg:w="1"/><text x="55.5882%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.3382%" y="101" width="0.0815%" height="15" fill="rgb(246,139,46)" fg:x="679" fg:w="1"/><text x="55.5882%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.3382%" y="85" width="0.0815%" height="15" fill="rgb(250,81,26)" fg:x="679" fg:w="1"/><text x="55.5882%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.3382%" y="69" width="0.0815%" height="15" fill="rgb(214,104,7)" fg:x="679" fg:w="1"/><text x="55.5882%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3382%" y="53" width="0.0815%" height="15" fill="rgb(233,189,8)" fg:x="679" fg:w="1"/><text x="55.5882%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.3382%" y="261" width="0.1630%" height="15" fill="rgb(228,141,17)" fg:x="679" fg:w="2"/><text x="55.5882%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4197%" y="245" width="0.0815%" height="15" fill="rgb(247,157,1)" fg:x="680" fg:w="1"/><text x="55.6697%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5012%" y="261" width="0.0815%" height="15" fill="rgb(249,225,5)" fg:x="681" fg:w="1"/><text x="55.7512%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.41%)</title><rect x="55.3382%" y="293" width="0.4075%" height="15" fill="rgb(242,55,13)" fg:x="679" fg:w="5"/><text x="55.5882%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="55.3382%" y="277" width="0.4075%" height="15" fill="rgb(230,49,50)" fg:x="679" fg:w="5"/><text x="55.5882%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.5827%" y="261" width="0.1630%" height="15" fill="rgb(241,111,38)" fg:x="682" fg:w="2"/><text x="55.8327%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5827%" y="245" width="0.1630%" height="15" fill="rgb(252,155,4)" fg:x="682" fg:w="2"/><text x="55.8327%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.5827%" y="229" width="0.1630%" height="15" fill="rgb(212,69,32)" fg:x="682" fg:w="2"/><text x="55.8327%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5827%" y="213" width="0.1630%" height="15" fill="rgb(243,107,47)" fg:x="682" fg:w="2"/><text x="55.8327%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.5827%" y="197" width="0.1630%" height="15" fill="rgb(247,130,12)" fg:x="682" fg:w="2"/><text x="55.8327%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5827%" y="181" width="0.1630%" height="15" fill="rgb(233,74,16)" fg:x="682" fg:w="2"/><text x="55.8327%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="55.7457%" y="277" width="0.0815%" height="15" fill="rgb(208,58,18)" fg:x="684" fg:w="1"/><text x="55.9957%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7457%" y="261" width="0.0815%" height="15" fill="rgb(242,225,1)" fg:x="684" fg:w="1"/><text x="55.9957%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8272%" y="261" width="0.1630%" height="15" fill="rgb(249,39,40)" fg:x="685" fg:w="2"/><text x="56.0772%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9087%" y="245" width="0.0815%" height="15" fill="rgb(207,72,44)" fg:x="686" fg:w="1"/><text x="56.1587%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9087%" y="229" width="0.0815%" height="15" fill="rgb(215,193,12)" fg:x="686" fg:w="1"/><text x="56.1587%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9087%" y="213" width="0.0815%" height="15" fill="rgb(248,41,39)" fg:x="686" fg:w="1"/><text x="56.1587%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9087%" y="197" width="0.0815%" height="15" fill="rgb(253,85,4)" fg:x="686" fg:w="1"/><text x="56.1587%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.9087%" y="181" width="0.0815%" height="15" fill="rgb(243,70,31)" fg:x="686" fg:w="1"/><text x="56.1587%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.9087%" y="165" width="0.0815%" height="15" fill="rgb(253,195,26)" fg:x="686" fg:w="1"/><text x="56.1587%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.9087%" y="149" width="0.0815%" height="15" fill="rgb(243,42,11)" fg:x="686" fg:w="1"/><text x="56.1587%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9087%" y="133" width="0.0815%" height="15" fill="rgb(239,66,17)" fg:x="686" fg:w="1"/><text x="56.1587%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9087%" y="117" width="0.0815%" height="15" fill="rgb(217,132,21)" fg:x="686" fg:w="1"/><text x="56.1587%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.9087%" y="101" width="0.0815%" height="15" fill="rgb(252,202,21)" fg:x="686" fg:w="1"/><text x="56.1587%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.9087%" y="85" width="0.0815%" height="15" fill="rgb(233,98,36)" fg:x="686" fg:w="1"/><text x="56.1587%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.9087%" y="69" width="0.0815%" height="15" fill="rgb(216,153,54)" fg:x="686" fg:w="1"/><text x="56.1587%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.9087%" y="53" width="0.0815%" height="15" fill="rgb(250,99,7)" fg:x="686" fg:w="1"/><text x="56.1587%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9087%" y="37" width="0.0815%" height="15" fill="rgb(207,56,50)" fg:x="686" fg:w="1"/><text x="56.1587%" y="47.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.9902%" y="261" width="0.0815%" height="15" fill="rgb(244,61,34)" fg:x="687" fg:w="1"/><text x="56.2402%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0717%" y="261" width="0.0815%" height="15" fill="rgb(241,50,38)" fg:x="688" fg:w="1"/><text x="56.3217%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.0717%" y="245" width="0.0815%" height="15" fill="rgb(212,166,30)" fg:x="688" fg:w="1"/><text x="56.3217%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0717%" y="229" width="0.0815%" height="15" fill="rgb(249,127,32)" fg:x="688" fg:w="1"/><text x="56.3217%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0717%" y="213" width="0.0815%" height="15" fill="rgb(209,103,0)" fg:x="688" fg:w="1"/><text x="56.3217%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.3162%" y="197" width="0.1630%" height="15" fill="rgb(238,209,51)" fg:x="691" fg:w="2"/><text x="56.5662%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="56.3162%" y="181" width="0.1630%" height="15" fill="rgb(237,56,23)" fg:x="691" fg:w="2"/><text x="56.5662%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.3977%" y="165" width="0.0815%" height="15" fill="rgb(215,153,46)" fg:x="692" fg:w="1"/><text x="56.6477%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.90%)</title><rect x="55.7457%" y="293" width="0.8965%" height="15" fill="rgb(224,49,31)" fg:x="684" fg:w="11"/><text x="55.9957%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="55.8272%" y="277" width="0.8150%" height="15" fill="rgb(250,18,42)" fg:x="685" fg:w="10"/><text x="56.0772%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="56.1532%" y="261" width="0.4890%" height="15" fill="rgb(215,176,39)" fg:x="689" fg:w="6"/><text x="56.4032%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="56.1532%" y="245" width="0.4890%" height="15" fill="rgb(223,77,29)" fg:x="689" fg:w="6"/><text x="56.4032%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.41%)</title><rect x="56.2347%" y="229" width="0.4075%" height="15" fill="rgb(234,94,52)" fg:x="690" fg:w="5"/><text x="56.4847%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="56.3162%" y="213" width="0.3260%" height="15" fill="rgb(220,154,50)" fg:x="691" fg:w="4"/><text x="56.5662%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4792%" y="197" width="0.1630%" height="15" fill="rgb(212,11,10)" fg:x="693" fg:w="2"/><text x="56.7292%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5607%" y="181" width="0.0815%" height="15" fill="rgb(205,166,19)" fg:x="694" fg:w="1"/><text x="56.8107%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (18 samples, 1.47%)</title><rect x="55.2567%" y="341" width="1.4670%" height="15" fill="rgb(244,198,16)" fg:x="678" fg:w="18"/><text x="55.5067%" y="351.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (18 samples, 1.47%)</title><rect x="55.2567%" y="325" width="1.4670%" height="15" fill="rgb(219,69,12)" fg:x="678" fg:w="18"/><text x="55.5067%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (17 samples, 1.39%)</title><rect x="55.3382%" y="309" width="1.3855%" height="15" fill="rgb(245,30,7)" fg:x="679" fg:w="17"/><text x="55.5882%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="56.6422%" y="293" width="0.0815%" height="15" fill="rgb(218,221,48)" fg:x="695" fg:w="1"/><text x="56.8922%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="277" width="0.0815%" height="15" fill="rgb(216,66,15)" fg:x="695" fg:w="1"/><text x="56.8922%" y="287.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6422%" y="261" width="0.0815%" height="15" fill="rgb(226,122,50)" fg:x="695" fg:w="1"/><text x="56.8922%" y="271.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="245" width="0.0815%" height="15" fill="rgb(239,156,16)" fg:x="695" fg:w="1"/><text x="56.8922%" y="255.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="229" width="0.0815%" height="15" fill="rgb(224,27,38)" fg:x="695" fg:w="1"/><text x="56.8922%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="213" width="0.0815%" height="15" fill="rgb(224,39,27)" fg:x="695" fg:w="1"/><text x="56.8922%" y="223.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.6422%" y="197" width="0.0815%" height="15" fill="rgb(215,92,29)" fg:x="695" fg:w="1"/><text x="56.8922%" y="207.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="181" width="0.0815%" height="15" fill="rgb(207,159,16)" fg:x="695" fg:w="1"/><text x="56.8922%" y="191.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="56.6422%" y="165" width="0.0815%" height="15" fill="rgb(238,163,47)" fg:x="695" fg:w="1"/><text x="56.8922%" y="175.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="56.6422%" y="149" width="0.0815%" height="15" fill="rgb(219,91,49)" fg:x="695" fg:w="1"/><text x="56.8922%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.6422%" y="133" width="0.0815%" height="15" fill="rgb(227,167,31)" fg:x="695" fg:w="1"/><text x="56.8922%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="56.6422%" y="117" width="0.0815%" height="15" fill="rgb(234,80,54)" fg:x="695" fg:w="1"/><text x="56.8922%" y="127.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="56.6422%" y="101" width="0.0815%" height="15" fill="rgb(212,114,2)" fg:x="695" fg:w="1"/><text x="56.8922%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="56.6422%" y="85" width="0.0815%" height="15" fill="rgb(234,50,24)" fg:x="695" fg:w="1"/><text x="56.8922%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="56.6422%" y="69" width="0.0815%" height="15" fill="rgb(221,68,8)" fg:x="695" fg:w="1"/><text x="56.8922%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="56.6422%" y="53" width="0.0815%" height="15" fill="rgb(254,180,31)" fg:x="695" fg:w="1"/><text x="56.8922%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6422%" y="37" width="0.0815%" height="15" fill="rgb(247,130,50)" fg:x="695" fg:w="1"/><text x="56.8922%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7237%" y="341" width="0.0815%" height="15" fill="rgb(211,109,4)" fg:x="696" fg:w="1"/><text x="56.9737%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8867%" y="309" width="0.0815%" height="15" fill="rgb(238,50,21)" fg:x="698" fg:w="1"/><text x="57.1367%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8867%" y="293" width="0.0815%" height="15" fill="rgb(225,57,45)" fg:x="698" fg:w="1"/><text x="57.1367%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8867%" y="277" width="0.0815%" height="15" fill="rgb(209,196,50)" fg:x="698" fg:w="1"/><text x="57.1367%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8867%" y="261" width="0.0815%" height="15" fill="rgb(242,140,13)" fg:x="698" fg:w="1"/><text x="57.1367%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8867%" y="245" width="0.0815%" height="15" fill="rgb(217,111,7)" fg:x="698" fg:w="1"/><text x="57.1367%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8867%" y="229" width="0.0815%" height="15" fill="rgb(253,193,51)" fg:x="698" fg:w="1"/><text x="57.1367%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8867%" y="213" width="0.0815%" height="15" fill="rgb(252,70,29)" fg:x="698" fg:w="1"/><text x="57.1367%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8867%" y="197" width="0.0815%" height="15" fill="rgb(232,127,12)" fg:x="698" fg:w="1"/><text x="57.1367%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8867%" y="181" width="0.0815%" height="15" fill="rgb(211,180,21)" fg:x="698" fg:w="1"/><text x="57.1367%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8867%" y="165" width="0.0815%" height="15" fill="rgb(229,72,13)" fg:x="698" fg:w="1"/><text x="57.1367%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8867%" y="149" width="0.0815%" height="15" fill="rgb(240,211,49)" fg:x="698" fg:w="1"/><text x="57.1367%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.8867%" y="133" width="0.0815%" height="15" fill="rgb(219,149,40)" fg:x="698" fg:w="1"/><text x="57.1367%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.8867%" y="117" width="0.0815%" height="15" fill="rgb(210,127,46)" fg:x="698" fg:w="1"/><text x="57.1367%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.8867%" y="101" width="0.0815%" height="15" fill="rgb(220,106,7)" fg:x="698" fg:w="1"/><text x="57.1367%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.8867%" y="85" width="0.0815%" height="15" fill="rgb(249,31,22)" fg:x="698" fg:w="1"/><text x="57.1367%" y="95.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.9682%" y="309" width="0.0815%" height="15" fill="rgb(253,1,49)" fg:x="699" fg:w="1"/><text x="57.2182%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.2127%" y="277" width="0.0815%" height="15" fill="rgb(227,144,33)" fg:x="702" fg:w="1"/><text x="57.4627%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.2127%" y="261" width="0.0815%" height="15" fill="rgb(249,163,44)" fg:x="702" fg:w="1"/><text x="57.4627%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.2127%" y="245" width="0.0815%" height="15" fill="rgb(234,15,39)" fg:x="702" fg:w="1"/><text x="57.4627%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.2127%" y="229" width="0.0815%" height="15" fill="rgb(207,66,16)" fg:x="702" fg:w="1"/><text x="57.4627%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2127%" y="213" width="0.0815%" height="15" fill="rgb(233,112,24)" fg:x="702" fg:w="1"/><text x="57.4627%" y="223.50"></text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (82 samples, 6.68%)</title><rect x="50.7742%" y="373" width="6.6830%" height="15" fill="rgb(230,90,22)" fg:x="623" fg:w="82"/><text x="51.0242%" y="383.50">&lt;plugins_..</text></g><g><title>plugins_core::looking::model::new_area_observation (71 samples, 5.79%)</title><rect x="51.6707%" y="357" width="5.7865%" height="15" fill="rgb(229,61,13)" fg:x="634" fg:w="71"/><text x="51.9207%" y="367.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="56.8052%" y="341" width="0.6520%" height="15" fill="rgb(225,57,24)" fg:x="697" fg:w="8"/><text x="57.0552%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.65%)</title><rect x="56.8052%" y="325" width="0.6520%" height="15" fill="rgb(208,169,48)" fg:x="697" fg:w="8"/><text x="57.0552%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="57.0497%" y="309" width="0.4075%" height="15" fill="rgb(244,218,51)" fg:x="700" fg:w="5"/><text x="57.2997%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="57.1312%" y="293" width="0.3260%" height="15" fill="rgb(214,148,10)" fg:x="701" fg:w="4"/><text x="57.3812%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2942%" y="277" width="0.1630%" height="15" fill="rgb(225,174,27)" fg:x="703" fg:w="2"/><text x="57.5442%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2942%" y="261" width="0.1630%" height="15" fill="rgb(230,96,26)" fg:x="703" fg:w="2"/><text x="57.5442%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.3757%" y="245" width="0.0815%" height="15" fill="rgb(232,10,30)" fg:x="704" fg:w="1"/><text x="57.6257%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4572%" y="373" width="0.0815%" height="15" fill="rgb(222,8,50)" fg:x="705" fg:w="1"/><text x="57.7072%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (110 samples, 8.96%)</title><rect x="48.6553%" y="565" width="8.9650%" height="15" fill="rgb(213,81,27)" fg:x="597" fg:w="110"/><text x="48.9053%" y="575.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::apply_middleware (110 samples, 8.96%)</title><rect x="48.6553%" y="549" width="8.9650%" height="15" fill="rgb(245,50,10)" fg:x="597" fg:w="110"/><text x="48.9053%" y="559.50">kernel::plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (110 samples, 8.96%)</title><rect x="48.6553%" y="533" width="8.9650%" height="15" fill="rgb(216,100,18)" fg:x="597" fg:w="110"/><text x="48.9053%" y="543.50">kernel::plugi..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (110 samples, 8.96%)</title><rect x="48.6553%" y="517" width="8.9650%" height="15" fill="rgb(236,147,54)" fg:x="597" fg:w="110"/><text x="48.9053%" y="527.50">&lt;engine::sess..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (88 samples, 7.17%)</title><rect x="50.4482%" y="501" width="7.1720%" height="15" fill="rgb(205,143,26)" fg:x="619" fg:w="88"/><text x="50.6982%" y="511.50">kernel::pl..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (88 samples, 7.17%)</title><rect x="50.4482%" y="485" width="7.1720%" height="15" fill="rgb(236,26,9)" fg:x="619" fg:w="88"/><text x="50.6982%" y="495.50">&lt;plugins_d..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (88 samples, 7.17%)</title><rect x="50.4482%" y="469" width="7.1720%" height="15" fill="rgb(221,165,53)" fg:x="619" fg:w="88"/><text x="50.6982%" y="479.50">kernel::pl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (87 samples, 7.09%)</title><rect x="50.5297%" y="453" width="7.0905%" height="15" fill="rgb(214,110,17)" fg:x="620" fg:w="87"/><text x="50.7797%" y="463.50">core::ops:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (86 samples, 7.01%)</title><rect x="50.6112%" y="437" width="7.0090%" height="15" fill="rgb(237,197,12)" fg:x="621" fg:w="86"/><text x="50.8612%" y="447.50">kernel::p..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (85 samples, 6.93%)</title><rect x="50.6927%" y="421" width="6.9275%" height="15" fill="rgb(205,84,17)" fg:x="622" fg:w="85"/><text x="50.9427%" y="431.50">core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 6.93%)</title><rect x="50.6927%" y="405" width="6.9275%" height="15" fill="rgb(237,18,45)" fg:x="622" fg:w="85"/><text x="50.9427%" y="415.50">&lt;alloc::b..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (85 samples, 6.93%)</title><rect x="50.6927%" y="389" width="6.9275%" height="15" fill="rgb(221,87,14)" fg:x="622" fg:w="85"/><text x="50.9427%" y="399.50">&lt;engine::..</text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="57.5387%" y="373" width="0.0815%" height="15" fill="rgb(238,186,15)" fg:x="706" fg:w="1"/><text x="57.7887%" y="383.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="57.6202%" y="565" width="0.0815%" height="15" fill="rgb(208,115,11)" fg:x="707" fg:w="1"/><text x="57.8702%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="57.6202%" y="549" width="0.0815%" height="15" fill="rgb(254,175,0)" fg:x="707" fg:w="1"/><text x="57.8702%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8647%" y="453" width="0.1630%" height="15" fill="rgb(227,24,42)" fg:x="710" fg:w="2"/><text x="58.1147%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.8647%" y="437" width="0.1630%" height="15" fill="rgb(223,211,37)" fg:x="710" fg:w="2"/><text x="58.1147%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.8647%" y="421" width="0.1630%" height="15" fill="rgb(235,49,27)" fg:x="710" fg:w="2"/><text x="58.1147%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.8647%" y="405" width="0.1630%" height="15" fill="rgb(254,97,51)" fg:x="710" fg:w="2"/><text x="58.1147%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.8647%" y="389" width="0.1630%" height="15" fill="rgb(249,51,40)" fg:x="710" fg:w="2"/><text x="58.1147%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.8647%" y="373" width="0.1630%" height="15" fill="rgb(210,128,45)" fg:x="710" fg:w="2"/><text x="58.1147%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.8647%" y="357" width="0.1630%" height="15" fill="rgb(224,137,50)" fg:x="710" fg:w="2"/><text x="58.1147%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.8647%" y="341" width="0.1630%" height="15" fill="rgb(242,15,9)" fg:x="710" fg:w="2"/><text x="58.1147%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.8647%" y="325" width="0.1630%" height="15" fill="rgb(233,187,41)" fg:x="710" fg:w="2"/><text x="58.1147%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.8647%" y="309" width="0.1630%" height="15" fill="rgb(227,2,29)" fg:x="710" fg:w="2"/><text x="58.1147%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.8647%" y="293" width="0.1630%" height="15" fill="rgb(222,70,3)" fg:x="710" fg:w="2"/><text x="58.1147%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.8647%" y="277" width="0.1630%" height="15" fill="rgb(213,11,42)" fg:x="710" fg:w="2"/><text x="58.1147%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.8647%" y="261" width="0.1630%" height="15" fill="rgb(225,150,9)" fg:x="710" fg:w="2"/><text x="58.1147%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.8647%" y="469" width="0.2445%" height="15" fill="rgb(230,162,45)" fg:x="710" fg:w="3"/><text x="58.1147%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0277%" y="453" width="0.0815%" height="15" fill="rgb(222,14,52)" fg:x="712" fg:w="1"/><text x="58.2777%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0277%" y="437" width="0.0815%" height="15" fill="rgb(254,198,14)" fg:x="712" fg:w="1"/><text x="58.2777%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.0277%" y="421" width="0.0815%" height="15" fill="rgb(220,217,30)" fg:x="712" fg:w="1"/><text x="58.2777%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.0277%" y="405" width="0.0815%" height="15" fill="rgb(215,146,41)" fg:x="712" fg:w="1"/><text x="58.2777%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.0277%" y="389" width="0.0815%" height="15" fill="rgb(217,27,36)" fg:x="712" fg:w="1"/><text x="58.2777%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0277%" y="373" width="0.0815%" height="15" fill="rgb(219,218,39)" fg:x="712" fg:w="1"/><text x="58.2777%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0277%" y="357" width="0.0815%" height="15" fill="rgb(219,4,42)" fg:x="712" fg:w="1"/><text x="58.2777%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.0277%" y="341" width="0.0815%" height="15" fill="rgb(249,119,36)" fg:x="712" fg:w="1"/><text x="58.2777%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.0277%" y="325" width="0.0815%" height="15" fill="rgb(209,23,33)" fg:x="712" fg:w="1"/><text x="58.2777%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.0277%" y="309" width="0.0815%" height="15" fill="rgb(211,10,0)" fg:x="712" fg:w="1"/><text x="58.2777%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.0277%" y="293" width="0.0815%" height="15" fill="rgb(208,99,37)" fg:x="712" fg:w="1"/><text x="58.2777%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0277%" y="277" width="0.0815%" height="15" fill="rgb(213,132,31)" fg:x="712" fg:w="1"/><text x="58.2777%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="57.7017%" y="501" width="0.5705%" height="15" fill="rgb(243,129,40)" fg:x="708" fg:w="7"/><text x="57.9517%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="57.7017%" y="485" width="0.5705%" height="15" fill="rgb(210,66,33)" fg:x="708" fg:w="7"/><text x="57.9517%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.1092%" y="469" width="0.1630%" height="15" fill="rgb(209,189,4)" fg:x="713" fg:w="2"/><text x="58.3592%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2722%" y="469" width="0.0815%" height="15" fill="rgb(214,107,37)" fg:x="715" fg:w="1"/><text x="58.5222%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.3537%" y="405" width="0.0815%" height="15" fill="rgb(245,88,54)" fg:x="716" fg:w="1"/><text x="58.6037%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="58.2722%" y="501" width="0.2445%" height="15" fill="rgb(205,146,20)" fg:x="715" fg:w="3"/><text x="58.5222%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="58.2722%" y="485" width="0.2445%" height="15" fill="rgb(220,161,25)" fg:x="715" fg:w="3"/><text x="58.5222%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.3537%" y="469" width="0.1630%" height="15" fill="rgb(215,152,15)" fg:x="716" fg:w="2"/><text x="58.6037%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.3537%" y="453" width="0.1630%" height="15" fill="rgb(233,192,44)" fg:x="716" fg:w="2"/><text x="58.6037%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.3537%" y="437" width="0.1630%" height="15" fill="rgb(240,170,46)" fg:x="716" fg:w="2"/><text x="58.6037%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.3537%" y="421" width="0.1630%" height="15" fill="rgb(207,104,33)" fg:x="716" fg:w="2"/><text x="58.6037%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4352%" y="405" width="0.0815%" height="15" fill="rgb(219,21,39)" fg:x="717" fg:w="1"/><text x="58.6852%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4352%" y="389" width="0.0815%" height="15" fill="rgb(214,133,29)" fg:x="717" fg:w="1"/><text x="58.6852%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.4352%" y="373" width="0.0815%" height="15" fill="rgb(226,93,6)" fg:x="717" fg:w="1"/><text x="58.6852%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="58.5167%" y="421" width="0.2445%" height="15" fill="rgb(252,222,34)" fg:x="718" fg:w="3"/><text x="58.7667%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.7612%" y="405" width="0.1630%" height="15" fill="rgb(252,92,48)" fg:x="721" fg:w="2"/><text x="59.0112%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.7612%" y="389" width="0.1630%" height="15" fill="rgb(245,223,24)" fg:x="721" fg:w="2"/><text x="59.0112%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="58.7612%" y="373" width="0.1630%" height="15" fill="rgb(205,176,3)" fg:x="721" fg:w="2"/><text x="59.0112%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="58.7612%" y="357" width="0.1630%" height="15" fill="rgb(235,151,15)" fg:x="721" fg:w="2"/><text x="59.0112%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.8427%" y="341" width="0.0815%" height="15" fill="rgb(237,209,11)" fg:x="722" fg:w="1"/><text x="59.0927%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.8427%" y="325" width="0.0815%" height="15" fill="rgb(243,227,24)" fg:x="722" fg:w="1"/><text x="59.0927%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.8427%" y="309" width="0.0815%" height="15" fill="rgb(239,193,16)" fg:x="722" fg:w="1"/><text x="59.0927%" y="319.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="58.8427%" y="293" width="0.0815%" height="15" fill="rgb(231,27,9)" fg:x="722" fg:w="1"/><text x="59.0927%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="58.8427%" y="277" width="0.0815%" height="15" fill="rgb(219,169,10)" fg:x="722" fg:w="1"/><text x="59.0927%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.9242%" y="405" width="0.1630%" height="15" fill="rgb(244,229,43)" fg:x="723" fg:w="2"/><text x="59.1742%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="58.9242%" y="389" width="0.1630%" height="15" fill="rgb(254,38,20)" fg:x="723" fg:w="2"/><text x="59.1742%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.9242%" y="373" width="0.1630%" height="15" fill="rgb(250,47,30)" fg:x="723" fg:w="2"/><text x="59.1742%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.9242%" y="357" width="0.1630%" height="15" fill="rgb(224,124,36)" fg:x="723" fg:w="2"/><text x="59.1742%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.0057%" y="341" width="0.0815%" height="15" fill="rgb(246,68,51)" fg:x="724" fg:w="1"/><text x="59.2557%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (8 samples, 0.65%)</title><rect x="58.5167%" y="453" width="0.6520%" height="15" fill="rgb(253,43,49)" fg:x="718" fg:w="8"/><text x="58.7667%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="58.5167%" y="437" width="0.6520%" height="15" fill="rgb(219,54,36)" fg:x="718" fg:w="8"/><text x="58.7667%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="58.7612%" y="421" width="0.4075%" height="15" fill="rgb(227,133,34)" fg:x="721" fg:w="5"/><text x="59.0112%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0872%" y="405" width="0.0815%" height="15" fill="rgb(247,227,15)" fg:x="725" fg:w="1"/><text x="59.3372%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.0872%" y="389" width="0.0815%" height="15" fill="rgb(229,96,14)" fg:x="725" fg:w="1"/><text x="59.3372%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="59.0872%" y="373" width="0.0815%" height="15" fill="rgb(220,79,17)" fg:x="725" fg:w="1"/><text x="59.3372%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.0872%" y="357" width="0.0815%" height="15" fill="rgb(205,131,53)" fg:x="725" fg:w="1"/><text x="59.3372%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.0872%" y="341" width="0.0815%" height="15" fill="rgb(209,50,29)" fg:x="725" fg:w="1"/><text x="59.3372%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::from_value (10 samples, 0.81%)</title><rect x="58.5167%" y="501" width="0.8150%" height="15" fill="rgb(245,86,46)" fg:x="718" fg:w="10"/><text x="58.7667%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="58.5167%" y="485" width="0.8150%" height="15" fill="rgb(235,66,46)" fg:x="718" fg:w="10"/><text x="58.7667%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="58.5167%" y="469" width="0.8150%" height="15" fill="rgb(232,148,31)" fg:x="718" fg:w="10"/><text x="58.7667%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.1687%" y="453" width="0.1630%" height="15" fill="rgb(217,149,8)" fg:x="726" fg:w="2"/><text x="59.4187%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.1687%" y="437" width="0.1630%" height="15" fill="rgb(209,183,11)" fg:x="726" fg:w="2"/><text x="59.4187%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="59.1687%" y="421" width="0.1630%" height="15" fill="rgb(208,55,20)" fg:x="726" fg:w="2"/><text x="59.4187%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.4132%" y="309" width="0.0815%" height="15" fill="rgb(218,39,14)" fg:x="729" fg:w="1"/><text x="59.6632%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4132%" y="293" width="0.0815%" height="15" fill="rgb(216,169,33)" fg:x="729" fg:w="1"/><text x="59.6632%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.3317%" y="373" width="0.2445%" height="15" fill="rgb(233,80,24)" fg:x="728" fg:w="3"/><text x="59.5817%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="59.3317%" y="357" width="0.2445%" height="15" fill="rgb(213,179,31)" fg:x="728" fg:w="3"/><text x="59.5817%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="59.4132%" y="341" width="0.1630%" height="15" fill="rgb(209,19,5)" fg:x="729" fg:w="2"/><text x="59.6632%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.4132%" y="325" width="0.1630%" height="15" fill="rgb(219,18,35)" fg:x="729" fg:w="2"/><text x="59.6632%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.4947%" y="309" width="0.0815%" height="15" fill="rgb(209,169,16)" fg:x="730" fg:w="1"/><text x="59.7447%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.4947%" y="293" width="0.0815%" height="15" fill="rgb(245,90,51)" fg:x="730" fg:w="1"/><text x="59.7447%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4947%" y="277" width="0.0815%" height="15" fill="rgb(220,99,45)" fg:x="730" fg:w="1"/><text x="59.7447%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="59.3317%" y="405" width="0.3260%" height="15" fill="rgb(249,89,25)" fg:x="728" fg:w="4"/><text x="59.5817%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="59.3317%" y="389" width="0.3260%" height="15" fill="rgb(239,193,0)" fg:x="728" fg:w="4"/><text x="59.5817%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.5762%" y="373" width="0.0815%" height="15" fill="rgb(231,126,1)" fg:x="731" fg:w="1"/><text x="59.8262%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="59.5762%" y="357" width="0.0815%" height="15" fill="rgb(243,166,3)" fg:x="731" fg:w="1"/><text x="59.8262%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.6577%" y="405" width="0.0815%" height="15" fill="rgb(223,22,34)" fg:x="732" fg:w="1"/><text x="59.9077%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="59.3317%" y="437" width="0.4890%" height="15" fill="rgb(251,52,51)" fg:x="728" fg:w="6"/><text x="59.5817%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="59.3317%" y="421" width="0.4890%" height="15" fill="rgb(221,165,28)" fg:x="728" fg:w="6"/><text x="59.5817%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7392%" y="405" width="0.0815%" height="15" fill="rgb(218,121,47)" fg:x="733" fg:w="1"/><text x="59.9892%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7392%" y="389" width="0.0815%" height="15" fill="rgb(209,120,9)" fg:x="733" fg:w="1"/><text x="59.9892%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (27 samples, 2.20%)</title><rect x="57.7017%" y="533" width="2.2005%" height="15" fill="rgb(236,68,12)" fg:x="708" fg:w="27"/><text x="57.9517%" y="543.50">e..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.20%)</title><rect x="57.7017%" y="517" width="2.2005%" height="15" fill="rgb(225,194,26)" fg:x="708" fg:w="27"/><text x="57.9517%" y="527.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.57%)</title><rect x="59.3317%" y="501" width="0.5705%" height="15" fill="rgb(231,84,39)" fg:x="728" fg:w="7"/><text x="59.5817%" y="511.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="59.3317%" y="485" width="0.5705%" height="15" fill="rgb(210,11,45)" fg:x="728" fg:w="7"/><text x="59.5817%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="59.3317%" y="469" width="0.5705%" height="15" fill="rgb(224,54,52)" fg:x="728" fg:w="7"/><text x="59.5817%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="59.3317%" y="453" width="0.5705%" height="15" fill="rgb(238,102,14)" fg:x="728" fg:w="7"/><text x="59.5817%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8207%" y="437" width="0.0815%" height="15" fill="rgb(243,160,52)" fg:x="734" fg:w="1"/><text x="60.0707%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8207%" y="421" width="0.0815%" height="15" fill="rgb(216,114,19)" fg:x="734" fg:w="1"/><text x="60.0707%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.9022%" y="517" width="0.0815%" height="15" fill="rgb(244,166,37)" fg:x="735" fg:w="1"/><text x="60.1522%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="59.9022%" y="501" width="0.0815%" height="15" fill="rgb(246,29,44)" fg:x="735" fg:w="1"/><text x="60.1522%" y="511.50"></text></g><g><title>kernel::model::entity_ref::&lt;impl core::convert::From&lt;kernel::model::entity_ref::EntityRef&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="59.9022%" y="485" width="0.0815%" height="15" fill="rgb(215,56,53)" fg:x="735" fg:w="1"/><text x="60.1522%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9022%" y="469" width="0.0815%" height="15" fill="rgb(217,60,2)" fg:x="735" fg:w="1"/><text x="60.1522%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1467%" y="421" width="0.0815%" height="15" fill="rgb(207,26,24)" fg:x="738" fg:w="1"/><text x="60.3967%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.1467%" y="405" width="0.0815%" height="15" fill="rgb(252,210,15)" fg:x="738" fg:w="1"/><text x="60.3967%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.1467%" y="389" width="0.0815%" height="15" fill="rgb(253,209,26)" fg:x="738" fg:w="1"/><text x="60.3967%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.1467%" y="373" width="0.0815%" height="15" fill="rgb(238,170,14)" fg:x="738" fg:w="1"/><text x="60.3967%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.1467%" y="357" width="0.0815%" height="15" fill="rgb(216,178,15)" fg:x="738" fg:w="1"/><text x="60.3967%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1467%" y="341" width="0.0815%" height="15" fill="rgb(250,197,2)" fg:x="738" fg:w="1"/><text x="60.3967%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.1467%" y="325" width="0.0815%" height="15" fill="rgb(212,70,42)" fg:x="738" fg:w="1"/><text x="60.3967%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.1467%" y="309" width="0.0815%" height="15" fill="rgb(227,213,9)" fg:x="738" fg:w="1"/><text x="60.3967%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.1467%" y="293" width="0.0815%" height="15" fill="rgb(245,99,25)" fg:x="738" fg:w="1"/><text x="60.3967%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.1467%" y="277" width="0.0815%" height="15" fill="rgb(250,82,29)" fg:x="738" fg:w="1"/><text x="60.3967%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.1467%" y="261" width="0.0815%" height="15" fill="rgb(241,226,54)" fg:x="738" fg:w="1"/><text x="60.3967%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1467%" y="245" width="0.0815%" height="15" fill="rgb(221,99,41)" fg:x="738" fg:w="1"/><text x="60.3967%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.1467%" y="453" width="0.1630%" height="15" fill="rgb(213,90,21)" fg:x="738" fg:w="2"/><text x="60.3967%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.1467%" y="437" width="0.1630%" height="15" fill="rgb(205,208,24)" fg:x="738" fg:w="2"/><text x="60.3967%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.2282%" y="421" width="0.0815%" height="15" fill="rgb(246,31,12)" fg:x="739" fg:w="1"/><text x="60.4782%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="60.0652%" y="469" width="0.3260%" height="15" fill="rgb(213,154,6)" fg:x="737" fg:w="4"/><text x="60.3152%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3097%" y="453" width="0.0815%" height="15" fill="rgb(222,163,29)" fg:x="740" fg:w="1"/><text x="60.5597%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3097%" y="437" width="0.0815%" height="15" fill="rgb(227,201,8)" fg:x="740" fg:w="1"/><text x="60.5597%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3097%" y="421" width="0.0815%" height="15" fill="rgb(233,9,32)" fg:x="740" fg:w="1"/><text x="60.5597%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3097%" y="405" width="0.0815%" height="15" fill="rgb(217,54,24)" fg:x="740" fg:w="1"/><text x="60.5597%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3097%" y="389" width="0.0815%" height="15" fill="rgb(235,192,0)" fg:x="740" fg:w="1"/><text x="60.5597%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3097%" y="373" width="0.0815%" height="15" fill="rgb(235,45,9)" fg:x="740" fg:w="1"/><text x="60.5597%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3097%" y="357" width="0.0815%" height="15" fill="rgb(246,42,40)" fg:x="740" fg:w="1"/><text x="60.5597%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3097%" y="341" width="0.0815%" height="15" fill="rgb(248,111,24)" fg:x="740" fg:w="1"/><text x="60.5597%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3097%" y="325" width="0.0815%" height="15" fill="rgb(249,65,22)" fg:x="740" fg:w="1"/><text x="60.5597%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3097%" y="309" width="0.0815%" height="15" fill="rgb(238,111,51)" fg:x="740" fg:w="1"/><text x="60.5597%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3097%" y="293" width="0.0815%" height="15" fill="rgb(250,118,22)" fg:x="740" fg:w="1"/><text x="60.5597%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3097%" y="277" width="0.0815%" height="15" fill="rgb(234,84,26)" fg:x="740" fg:w="1"/><text x="60.5597%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3912%" y="469" width="0.0815%" height="15" fill="rgb(243,172,12)" fg:x="741" fg:w="1"/><text x="60.6412%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.3912%" y="453" width="0.0815%" height="15" fill="rgb(236,150,49)" fg:x="741" fg:w="1"/><text x="60.6412%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.3912%" y="437" width="0.0815%" height="15" fill="rgb(225,197,26)" fg:x="741" fg:w="1"/><text x="60.6412%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.3912%" y="421" width="0.0815%" height="15" fill="rgb(214,17,42)" fg:x="741" fg:w="1"/><text x="60.6412%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.3912%" y="405" width="0.0815%" height="15" fill="rgb(224,165,40)" fg:x="741" fg:w="1"/><text x="60.6412%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3912%" y="389" width="0.0815%" height="15" fill="rgb(246,100,4)" fg:x="741" fg:w="1"/><text x="60.6412%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.3912%" y="373" width="0.0815%" height="15" fill="rgb(222,103,0)" fg:x="741" fg:w="1"/><text x="60.6412%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.3912%" y="357" width="0.0815%" height="15" fill="rgb(227,189,26)" fg:x="741" fg:w="1"/><text x="60.6412%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.3912%" y="341" width="0.0815%" height="15" fill="rgb(214,202,17)" fg:x="741" fg:w="1"/><text x="60.6412%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.3912%" y="325" width="0.0815%" height="15" fill="rgb(229,111,3)" fg:x="741" fg:w="1"/><text x="60.6412%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.3912%" y="309" width="0.0815%" height="15" fill="rgb(229,172,15)" fg:x="741" fg:w="1"/><text x="60.6412%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="60.0652%" y="501" width="0.4890%" height="15" fill="rgb(230,224,35)" fg:x="737" fg:w="6"/><text x="60.3152%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="60.0652%" y="485" width="0.4890%" height="15" fill="rgb(251,141,6)" fg:x="737" fg:w="6"/><text x="60.3152%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.4727%" y="469" width="0.0815%" height="15" fill="rgb(225,208,6)" fg:x="742" fg:w="1"/><text x="60.7227%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.5542%" y="469" width="0.0815%" height="15" fill="rgb(246,181,16)" fg:x="743" fg:w="1"/><text x="60.8042%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8802%" y="309" width="0.0815%" height="15" fill="rgb(227,129,36)" fg:x="747" fg:w="1"/><text x="61.1302%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8802%" y="293" width="0.0815%" height="15" fill="rgb(248,117,24)" fg:x="747" fg:w="1"/><text x="61.1302%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8802%" y="277" width="0.0815%" height="15" fill="rgb(214,185,35)" fg:x="747" fg:w="1"/><text x="61.1302%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8802%" y="261" width="0.0815%" height="15" fill="rgb(236,150,34)" fg:x="747" fg:w="1"/><text x="61.1302%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8802%" y="245" width="0.0815%" height="15" fill="rgb(243,228,27)" fg:x="747" fg:w="1"/><text x="61.1302%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8802%" y="229" width="0.0815%" height="15" fill="rgb(245,77,44)" fg:x="747" fg:w="1"/><text x="61.1302%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8802%" y="213" width="0.0815%" height="15" fill="rgb(235,214,42)" fg:x="747" fg:w="1"/><text x="61.1302%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="60.7172%" y="421" width="0.3260%" height="15" fill="rgb(221,74,3)" fg:x="745" fg:w="4"/><text x="60.9672%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="60.7172%" y="405" width="0.3260%" height="15" fill="rgb(206,121,29)" fg:x="745" fg:w="4"/><text x="60.9672%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.8802%" y="389" width="0.1630%" height="15" fill="rgb(249,131,53)" fg:x="747" fg:w="2"/><text x="61.1302%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.8802%" y="373" width="0.1630%" height="15" fill="rgb(236,170,29)" fg:x="747" fg:w="2"/><text x="61.1302%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.8802%" y="357" width="0.1630%" height="15" fill="rgb(247,96,15)" fg:x="747" fg:w="2"/><text x="61.1302%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.8802%" y="341" width="0.1630%" height="15" fill="rgb(211,210,7)" fg:x="747" fg:w="2"/><text x="61.1302%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.8802%" y="325" width="0.1630%" height="15" fill="rgb(240,88,50)" fg:x="747" fg:w="2"/><text x="61.1302%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.9617%" y="309" width="0.0815%" height="15" fill="rgb(209,229,26)" fg:x="748" fg:w="1"/><text x="61.2117%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.9617%" y="293" width="0.0815%" height="15" fill="rgb(210,68,23)" fg:x="748" fg:w="1"/><text x="61.2117%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="60.6357%" y="437" width="0.4890%" height="15" fill="rgb(229,180,13)" fg:x="744" fg:w="6"/><text x="60.8857%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0432%" y="421" width="0.0815%" height="15" fill="rgb(236,53,44)" fg:x="749" fg:w="1"/><text x="61.2932%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.0432%" y="405" width="0.0815%" height="15" fill="rgb(244,214,29)" fg:x="749" fg:w="1"/><text x="61.2932%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0432%" y="389" width="0.0815%" height="15" fill="rgb(220,75,29)" fg:x="749" fg:w="1"/><text x="61.2932%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.0432%" y="373" width="0.0815%" height="15" fill="rgb(214,183,37)" fg:x="749" fg:w="1"/><text x="61.2932%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.0432%" y="357" width="0.0815%" height="15" fill="rgb(239,117,29)" fg:x="749" fg:w="1"/><text x="61.2932%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.0432%" y="341" width="0.0815%" height="15" fill="rgb(237,171,35)" fg:x="749" fg:w="1"/><text x="61.2932%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.0432%" y="325" width="0.0815%" height="15" fill="rgb(229,178,53)" fg:x="749" fg:w="1"/><text x="61.2932%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.0432%" y="309" width="0.0815%" height="15" fill="rgb(210,102,19)" fg:x="749" fg:w="1"/><text x="61.2932%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.0432%" y="293" width="0.0815%" height="15" fill="rgb(235,127,22)" fg:x="749" fg:w="1"/><text x="61.2932%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="60.6357%" y="453" width="0.5705%" height="15" fill="rgb(244,31,31)" fg:x="744" fg:w="7"/><text x="60.8857%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.1247%" y="437" width="0.0815%" height="15" fill="rgb(231,43,21)" fg:x="750" fg:w="1"/><text x="61.3747%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.1247%" y="421" width="0.0815%" height="15" fill="rgb(217,131,35)" fg:x="750" fg:w="1"/><text x="61.3747%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.3692%" y="389" width="0.0815%" height="15" fill="rgb(221,149,4)" fg:x="753" fg:w="1"/><text x="61.6192%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="61.2877%" y="405" width="0.3260%" height="15" fill="rgb(232,170,28)" fg:x="752" fg:w="4"/><text x="61.5377%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.4507%" y="389" width="0.1630%" height="15" fill="rgb(238,56,10)" fg:x="754" fg:w="2"/><text x="61.7007%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4507%" y="373" width="0.1630%" height="15" fill="rgb(235,196,14)" fg:x="754" fg:w="2"/><text x="61.7007%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.4507%" y="357" width="0.1630%" height="15" fill="rgb(216,45,48)" fg:x="754" fg:w="2"/><text x="61.7007%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.4507%" y="341" width="0.1630%" height="15" fill="rgb(238,213,17)" fg:x="754" fg:w="2"/><text x="61.7007%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="61.4507%" y="325" width="0.1630%" height="15" fill="rgb(212,13,2)" fg:x="754" fg:w="2"/><text x="61.7007%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="61.4507%" y="309" width="0.1630%" height="15" fill="rgb(240,114,20)" fg:x="754" fg:w="2"/><text x="61.7007%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="61.4507%" y="293" width="0.1630%" height="15" fill="rgb(228,41,40)" fg:x="754" fg:w="2"/><text x="61.7007%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.4507%" y="277" width="0.1630%" height="15" fill="rgb(244,132,35)" fg:x="754" fg:w="2"/><text x="61.7007%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.4507%" y="261" width="0.1630%" height="15" fill="rgb(253,189,4)" fg:x="754" fg:w="2"/><text x="61.7007%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="61.4507%" y="245" width="0.1630%" height="15" fill="rgb(224,37,19)" fg:x="754" fg:w="2"/><text x="61.7007%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="61.4507%" y="229" width="0.1630%" height="15" fill="rgb(235,223,18)" fg:x="754" fg:w="2"/><text x="61.7007%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="61.4507%" y="213" width="0.1630%" height="15" fill="rgb(235,163,25)" fg:x="754" fg:w="2"/><text x="61.7007%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="61.4507%" y="197" width="0.1630%" height="15" fill="rgb(217,145,28)" fg:x="754" fg:w="2"/><text x="61.7007%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.4507%" y="181" width="0.1630%" height="15" fill="rgb(223,223,32)" fg:x="754" fg:w="2"/><text x="61.7007%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.6952%" y="373" width="0.0815%" height="15" fill="rgb(227,189,39)" fg:x="757" fg:w="1"/><text x="61.9452%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.7767%" y="357" width="0.1630%" height="15" fill="rgb(248,10,22)" fg:x="758" fg:w="2"/><text x="62.0267%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.8582%" y="341" width="0.0815%" height="15" fill="rgb(248,46,39)" fg:x="759" fg:w="1"/><text x="62.1082%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.8582%" y="325" width="0.0815%" height="15" fill="rgb(248,113,48)" fg:x="759" fg:w="1"/><text x="62.1082%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.8582%" y="309" width="0.0815%" height="15" fill="rgb(245,16,25)" fg:x="759" fg:w="1"/><text x="62.1082%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.8582%" y="293" width="0.0815%" height="15" fill="rgb(249,152,16)" fg:x="759" fg:w="1"/><text x="62.1082%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.8582%" y="277" width="0.0815%" height="15" fill="rgb(250,16,1)" fg:x="759" fg:w="1"/><text x="62.1082%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.8582%" y="261" width="0.0815%" height="15" fill="rgb(249,138,3)" fg:x="759" fg:w="1"/><text x="62.1082%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8582%" y="245" width="0.0815%" height="15" fill="rgb(227,71,41)" fg:x="759" fg:w="1"/><text x="62.1082%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.8582%" y="229" width="0.0815%" height="15" fill="rgb(209,184,23)" fg:x="759" fg:w="1"/><text x="62.1082%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.8582%" y="213" width="0.0815%" height="15" fill="rgb(223,215,31)" fg:x="759" fg:w="1"/><text x="62.1082%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.8582%" y="197" width="0.0815%" height="15" fill="rgb(210,146,28)" fg:x="759" fg:w="1"/><text x="62.1082%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.8582%" y="181" width="0.0815%" height="15" fill="rgb(209,183,41)" fg:x="759" fg:w="1"/><text x="62.1082%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.8582%" y="165" width="0.0815%" height="15" fill="rgb(209,224,45)" fg:x="759" fg:w="1"/><text x="62.1082%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9397%" y="309" width="0.0815%" height="15" fill="rgb(224,209,51)" fg:x="760" fg:w="1"/><text x="62.1897%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9397%" y="293" width="0.0815%" height="15" fill="rgb(223,17,39)" fg:x="760" fg:w="1"/><text x="62.1897%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9397%" y="277" width="0.0815%" height="15" fill="rgb(234,204,37)" fg:x="760" fg:w="1"/><text x="62.1897%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9397%" y="261" width="0.0815%" height="15" fill="rgb(236,120,5)" fg:x="760" fg:w="1"/><text x="62.1897%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9397%" y="245" width="0.0815%" height="15" fill="rgb(248,97,27)" fg:x="760" fg:w="1"/><text x="62.1897%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9397%" y="229" width="0.0815%" height="15" fill="rgb(240,66,17)" fg:x="760" fg:w="1"/><text x="62.1897%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9397%" y="213" width="0.0815%" height="15" fill="rgb(210,79,3)" fg:x="760" fg:w="1"/><text x="62.1897%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9397%" y="197" width="0.0815%" height="15" fill="rgb(214,176,27)" fg:x="760" fg:w="1"/><text x="62.1897%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9397%" y="181" width="0.0815%" height="15" fill="rgb(235,185,3)" fg:x="760" fg:w="1"/><text x="62.1897%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9397%" y="165" width="0.0815%" height="15" fill="rgb(227,24,12)" fg:x="760" fg:w="1"/><text x="62.1897%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9397%" y="149" width="0.0815%" height="15" fill="rgb(252,169,48)" fg:x="760" fg:w="1"/><text x="62.1897%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9397%" y="133" width="0.0815%" height="15" fill="rgb(212,65,1)" fg:x="760" fg:w="1"/><text x="62.1897%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.9397%" y="117" width="0.0815%" height="15" fill="rgb(242,39,24)" fg:x="760" fg:w="1"/><text x="62.1897%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.9397%" y="101" width="0.0815%" height="15" fill="rgb(249,32,23)" fg:x="760" fg:w="1"/><text x="62.1897%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="61.6137%" y="405" width="0.4890%" height="15" fill="rgb(251,195,23)" fg:x="756" fg:w="6"/><text x="61.8637%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.41%)</title><rect x="61.6952%" y="389" width="0.4075%" height="15" fill="rgb(236,174,8)" fg:x="757" fg:w="5"/><text x="61.9452%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.33%)</title><rect x="61.7767%" y="373" width="0.3260%" height="15" fill="rgb(220,197,8)" fg:x="758" fg:w="4"/><text x="62.0267%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="61.9397%" y="357" width="0.1630%" height="15" fill="rgb(240,108,37)" fg:x="760" fg:w="2"/><text x="62.1897%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="61.9397%" y="341" width="0.1630%" height="15" fill="rgb(232,176,24)" fg:x="760" fg:w="2"/><text x="62.1897%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="61.9397%" y="325" width="0.1630%" height="15" fill="rgb(243,35,29)" fg:x="760" fg:w="2"/><text x="62.1897%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.0212%" y="309" width="0.0815%" height="15" fill="rgb(210,37,18)" fg:x="761" fg:w="1"/><text x="62.2712%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0212%" y="293" width="0.0815%" height="15" fill="rgb(224,184,40)" fg:x="761" fg:w="1"/><text x="62.2712%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0212%" y="277" width="0.0815%" height="15" fill="rgb(236,39,29)" fg:x="761" fg:w="1"/><text x="62.2712%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.1842%" y="373" width="0.0815%" height="15" fill="rgb(232,48,39)" fg:x="763" fg:w="1"/><text x="62.4342%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.1842%" y="357" width="0.0815%" height="15" fill="rgb(236,34,42)" fg:x="763" fg:w="1"/><text x="62.4342%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.14%)</title><rect x="61.2062%" y="453" width="1.1410%" height="15" fill="rgb(243,106,37)" fg:x="751" fg:w="14"/><text x="61.4562%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.14%)</title><rect x="61.2062%" y="437" width="1.1410%" height="15" fill="rgb(218,96,6)" fg:x="751" fg:w="14"/><text x="61.4562%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (14 samples, 1.14%)</title><rect x="61.2062%" y="421" width="1.1410%" height="15" fill="rgb(235,130,12)" fg:x="751" fg:w="14"/><text x="61.4562%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.1027%" y="405" width="0.2445%" height="15" fill="rgb(231,95,0)" fg:x="762" fg:w="3"/><text x="62.3527%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1027%" y="389" width="0.2445%" height="15" fill="rgb(228,12,23)" fg:x="762" fg:w="3"/><text x="62.3527%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.2657%" y="373" width="0.0815%" height="15" fill="rgb(216,12,1)" fg:x="764" fg:w="1"/><text x="62.5157%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="62.2657%" y="357" width="0.0815%" height="15" fill="rgb(219,59,3)" fg:x="764" fg:w="1"/><text x="62.5157%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.2657%" y="341" width="0.0815%" height="15" fill="rgb(215,208,46)" fg:x="764" fg:w="1"/><text x="62.5157%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2657%" y="325" width="0.0815%" height="15" fill="rgb(254,224,29)" fg:x="764" fg:w="1"/><text x="62.5157%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4287%" y="389" width="0.0815%" height="15" fill="rgb(232,14,29)" fg:x="766" fg:w="1"/><text x="62.6787%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5102%" y="373" width="0.0815%" height="15" fill="rgb(208,45,52)" fg:x="767" fg:w="1"/><text x="62.7602%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.5917%" y="373" width="0.0815%" height="15" fill="rgb(234,191,28)" fg:x="768" fg:w="1"/><text x="62.8417%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6732%" y="357" width="0.0815%" height="15" fill="rgb(244,67,43)" fg:x="769" fg:w="1"/><text x="62.9232%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.28%)</title><rect x="60.5542%" y="501" width="2.2820%" height="15" fill="rgb(236,189,24)" fg:x="743" fg:w="28"/><text x="60.8042%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 2.28%)</title><rect x="60.5542%" y="485" width="2.2820%" height="15" fill="rgb(239,214,33)" fg:x="743" fg:w="28"/><text x="60.8042%" y="495.50">&lt;..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (27 samples, 2.20%)</title><rect x="60.6357%" y="469" width="2.2005%" height="15" fill="rgb(226,176,41)" fg:x="744" fg:w="27"/><text x="60.8857%" y="479.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="62.3472%" y="453" width="0.4890%" height="15" fill="rgb(248,47,8)" fg:x="765" fg:w="6"/><text x="62.5972%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="62.3472%" y="437" width="0.4890%" height="15" fill="rgb(218,81,44)" fg:x="765" fg:w="6"/><text x="62.5972%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="62.3472%" y="421" width="0.4890%" height="15" fill="rgb(213,98,6)" fg:x="765" fg:w="6"/><text x="62.5972%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="62.4287%" y="405" width="0.4075%" height="15" fill="rgb(222,85,22)" fg:x="766" fg:w="5"/><text x="62.6787%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="62.5102%" y="389" width="0.3260%" height="15" fill="rgb(239,46,39)" fg:x="767" fg:w="4"/><text x="62.7602%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.6732%" y="373" width="0.1630%" height="15" fill="rgb(237,12,29)" fg:x="769" fg:w="2"/><text x="62.9232%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.7547%" y="357" width="0.0815%" height="15" fill="rgb(214,77,8)" fg:x="770" fg:w="1"/><text x="63.0047%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7547%" y="341" width="0.0815%" height="15" fill="rgb(217,168,37)" fg:x="770" fg:w="1"/><text x="63.0047%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.8362%" y="453" width="0.0815%" height="15" fill="rgb(221,217,23)" fg:x="771" fg:w="1"/><text x="63.0862%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8362%" y="437" width="0.0815%" height="15" fill="rgb(243,229,36)" fg:x="771" fg:w="1"/><text x="63.0862%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9177%" y="437" width="0.0815%" height="15" fill="rgb(251,163,40)" fg:x="772" fg:w="1"/><text x="63.1677%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (39 samples, 3.18%)</title><rect x="59.9022%" y="533" width="3.1785%" height="15" fill="rgb(237,222,12)" fg:x="735" fg:w="39"/><text x="60.1522%" y="543.50">eng..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (38 samples, 3.10%)</title><rect x="59.9837%" y="517" width="3.0970%" height="15" fill="rgb(248,132,6)" fg:x="736" fg:w="38"/><text x="60.2337%" y="527.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.8362%" y="501" width="0.2445%" height="15" fill="rgb(227,167,50)" fg:x="771" fg:w="3"/><text x="63.0862%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.8362%" y="485" width="0.2445%" height="15" fill="rgb(242,84,37)" fg:x="771" fg:w="3"/><text x="63.0862%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="62.8362%" y="469" width="0.2445%" height="15" fill="rgb(212,4,50)" fg:x="771" fg:w="3"/><text x="63.0862%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.9177%" y="453" width="0.1630%" height="15" fill="rgb(230,228,32)" fg:x="772" fg:w="2"/><text x="63.1677%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.9992%" y="437" width="0.0815%" height="15" fill="rgb(248,217,23)" fg:x="773" fg:w="1"/><text x="63.2492%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.9992%" y="421" width="0.0815%" height="15" fill="rgb(238,197,32)" fg:x="773" fg:w="1"/><text x="63.2492%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="62.9992%" y="405" width="0.0815%" height="15" fill="rgb(236,106,1)" fg:x="773" fg:w="1"/><text x="63.2492%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.9992%" y="389" width="0.0815%" height="15" fill="rgb(219,228,13)" fg:x="773" fg:w="1"/><text x="63.2492%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9992%" y="373" width="0.0815%" height="15" fill="rgb(238,30,35)" fg:x="773" fg:w="1"/><text x="63.2492%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.33%)</title><rect x="63.1622%" y="469" width="0.3260%" height="15" fill="rgb(236,70,23)" fg:x="775" fg:w="4"/><text x="63.4122%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.2437%" y="453" width="0.2445%" height="15" fill="rgb(249,104,48)" fg:x="776" fg:w="3"/><text x="63.4937%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="63.2437%" y="437" width="0.2445%" height="15" fill="rgb(254,117,50)" fg:x="776" fg:w="3"/><text x="63.4937%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.49%)</title><rect x="63.0807%" y="485" width="0.4890%" height="15" fill="rgb(223,152,4)" fg:x="774" fg:w="6"/><text x="63.3307%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4882%" y="469" width="0.0815%" height="15" fill="rgb(245,6,2)" fg:x="779" fg:w="1"/><text x="63.7382%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4882%" y="453" width="0.0815%" height="15" fill="rgb(249,150,24)" fg:x="779" fg:w="1"/><text x="63.7382%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="63.0807%" y="517" width="0.5705%" height="15" fill="rgb(228,185,42)" fg:x="774" fg:w="7"/><text x="63.3307%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.57%)</title><rect x="63.0807%" y="501" width="0.5705%" height="15" fill="rgb(226,39,33)" fg:x="774" fg:w="7"/><text x="63.3307%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5697%" y="485" width="0.0815%" height="15" fill="rgb(221,166,19)" fg:x="780" fg:w="1"/><text x="63.8197%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.5697%" y="469" width="0.0815%" height="15" fill="rgb(209,109,2)" fg:x="780" fg:w="1"/><text x="63.8197%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.5697%" y="453" width="0.0815%" height="15" fill="rgb(252,216,26)" fg:x="780" fg:w="1"/><text x="63.8197%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.5697%" y="437" width="0.0815%" height="15" fill="rgb(227,173,36)" fg:x="780" fg:w="1"/><text x="63.8197%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.5697%" y="421" width="0.0815%" height="15" fill="rgb(209,90,7)" fg:x="780" fg:w="1"/><text x="63.8197%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5697%" y="405" width="0.0815%" height="15" fill="rgb(250,194,11)" fg:x="780" fg:w="1"/><text x="63.8197%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5697%" y="389" width="0.0815%" height="15" fill="rgb(220,72,50)" fg:x="780" fg:w="1"/><text x="63.8197%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.5697%" y="373" width="0.0815%" height="15" fill="rgb(222,106,48)" fg:x="780" fg:w="1"/><text x="63.8197%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.5697%" y="357" width="0.0815%" height="15" fill="rgb(216,220,45)" fg:x="780" fg:w="1"/><text x="63.8197%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.5697%" y="341" width="0.0815%" height="15" fill="rgb(234,112,18)" fg:x="780" fg:w="1"/><text x="63.8197%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.5697%" y="325" width="0.0815%" height="15" fill="rgb(206,179,9)" fg:x="780" fg:w="1"/><text x="63.8197%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5697%" y="309" width="0.0815%" height="15" fill="rgb(215,115,40)" fg:x="780" fg:w="1"/><text x="63.8197%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6512%" y="453" width="0.0815%" height="15" fill="rgb(222,69,34)" fg:x="781" fg:w="1"/><text x="63.9012%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6512%" y="437" width="0.0815%" height="15" fill="rgb(209,161,10)" fg:x="781" fg:w="1"/><text x="63.9012%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6512%" y="421" width="0.0815%" height="15" fill="rgb(217,6,38)" fg:x="781" fg:w="1"/><text x="63.9012%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6512%" y="405" width="0.0815%" height="15" fill="rgb(229,229,48)" fg:x="781" fg:w="1"/><text x="63.9012%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6512%" y="389" width="0.0815%" height="15" fill="rgb(225,21,28)" fg:x="781" fg:w="1"/><text x="63.9012%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6512%" y="373" width="0.0815%" height="15" fill="rgb(206,33,13)" fg:x="781" fg:w="1"/><text x="63.9012%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6512%" y="357" width="0.0815%" height="15" fill="rgb(242,178,17)" fg:x="781" fg:w="1"/><text x="63.9012%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6512%" y="341" width="0.0815%" height="15" fill="rgb(220,162,5)" fg:x="781" fg:w="1"/><text x="63.9012%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.6512%" y="325" width="0.0815%" height="15" fill="rgb(210,33,43)" fg:x="781" fg:w="1"/><text x="63.9012%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.6512%" y="309" width="0.0815%" height="15" fill="rgb(216,116,54)" fg:x="781" fg:w="1"/><text x="63.9012%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.6512%" y="293" width="0.0815%" height="15" fill="rgb(249,92,24)" fg:x="781" fg:w="1"/><text x="63.9012%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.6512%" y="277" width="0.0815%" height="15" fill="rgb(231,189,14)" fg:x="781" fg:w="1"/><text x="63.9012%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6512%" y="261" width="0.0815%" height="15" fill="rgb(230,8,41)" fg:x="781" fg:w="1"/><text x="63.9012%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6512%" y="485" width="0.1630%" height="15" fill="rgb(249,7,27)" fg:x="781" fg:w="2"/><text x="63.9012%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.6512%" y="469" width="0.1630%" height="15" fill="rgb(232,86,5)" fg:x="781" fg:w="2"/><text x="63.9012%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.7327%" y="453" width="0.0815%" height="15" fill="rgb(224,175,18)" fg:x="782" fg:w="1"/><text x="63.9827%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8142%" y="453" width="0.0815%" height="15" fill="rgb(220,129,12)" fg:x="783" fg:w="1"/><text x="64.0642%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8142%" y="437" width="0.0815%" height="15" fill="rgb(210,19,36)" fg:x="783" fg:w="1"/><text x="64.0642%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="63.6512%" y="517" width="0.3260%" height="15" fill="rgb(219,96,14)" fg:x="781" fg:w="4"/><text x="63.9012%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="63.6512%" y="501" width="0.3260%" height="15" fill="rgb(249,106,1)" fg:x="781" fg:w="4"/><text x="63.9012%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.8142%" y="485" width="0.1630%" height="15" fill="rgb(249,155,20)" fg:x="783" fg:w="2"/><text x="64.0642%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.8142%" y="469" width="0.1630%" height="15" fill="rgb(244,168,9)" fg:x="783" fg:w="2"/><text x="64.0642%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.8957%" y="453" width="0.0815%" height="15" fill="rgb(216,23,50)" fg:x="784" fg:w="1"/><text x="64.1457%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.8957%" y="437" width="0.0815%" height="15" fill="rgb(224,219,20)" fg:x="784" fg:w="1"/><text x="64.1457%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.8957%" y="421" width="0.0815%" height="15" fill="rgb(222,156,15)" fg:x="784" fg:w="1"/><text x="64.1457%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.8957%" y="405" width="0.0815%" height="15" fill="rgb(231,97,17)" fg:x="784" fg:w="1"/><text x="64.1457%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8957%" y="389" width="0.0815%" height="15" fill="rgb(218,70,48)" fg:x="784" fg:w="1"/><text x="64.1457%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8957%" y="373" width="0.0815%" height="15" fill="rgb(212,196,52)" fg:x="784" fg:w="1"/><text x="64.1457%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="63.9772%" y="469" width="0.0815%" height="15" fill="rgb(243,203,18)" fg:x="785" fg:w="1"/><text x="64.2272%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.0587%" y="437" width="0.0815%" height="15" fill="rgb(252,125,41)" fg:x="786" fg:w="1"/><text x="64.3087%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.0587%" y="421" width="0.0815%" height="15" fill="rgb(223,180,33)" fg:x="786" fg:w="1"/><text x="64.3087%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.1402%" y="389" width="0.0815%" height="15" fill="rgb(254,159,46)" fg:x="787" fg:w="1"/><text x="64.3902%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.1402%" y="373" width="0.0815%" height="15" fill="rgb(254,38,10)" fg:x="787" fg:w="1"/><text x="64.3902%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.1402%" y="357" width="0.0815%" height="15" fill="rgb(208,217,32)" fg:x="787" fg:w="1"/><text x="64.3902%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.1402%" y="341" width="0.0815%" height="15" fill="rgb(221,120,13)" fg:x="787" fg:w="1"/><text x="64.3902%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.1402%" y="325" width="0.0815%" height="15" fill="rgb(246,54,52)" fg:x="787" fg:w="1"/><text x="64.3902%" y="335.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.1402%" y="309" width="0.0815%" height="15" fill="rgb(242,34,25)" fg:x="787" fg:w="1"/><text x="64.3902%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.1402%" y="293" width="0.0815%" height="15" fill="rgb(247,209,9)" fg:x="787" fg:w="1"/><text x="64.3902%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.2217%" y="373" width="0.1630%" height="15" fill="rgb(228,71,26)" fg:x="788" fg:w="2"/><text x="64.4717%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.2217%" y="357" width="0.1630%" height="15" fill="rgb(222,145,49)" fg:x="788" fg:w="2"/><text x="64.4717%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.2217%" y="341" width="0.1630%" height="15" fill="rgb(218,121,17)" fg:x="788" fg:w="2"/><text x="64.4717%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="64.2217%" y="325" width="0.1630%" height="15" fill="rgb(244,50,7)" fg:x="788" fg:w="2"/><text x="64.4717%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.3032%" y="309" width="0.0815%" height="15" fill="rgb(246,229,37)" fg:x="789" fg:w="1"/><text x="64.5532%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3032%" y="293" width="0.0815%" height="15" fill="rgb(225,18,5)" fg:x="789" fg:w="1"/><text x="64.5532%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="64.1402%" y="421" width="0.3260%" height="15" fill="rgb(213,204,8)" fg:x="787" fg:w="4"/><text x="64.3902%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="64.1402%" y="405" width="0.3260%" height="15" fill="rgb(238,103,6)" fg:x="787" fg:w="4"/><text x="64.3902%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="64.2217%" y="389" width="0.2445%" height="15" fill="rgb(222,25,35)" fg:x="788" fg:w="3"/><text x="64.4717%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.3847%" y="373" width="0.0815%" height="15" fill="rgb(213,203,35)" fg:x="790" fg:w="1"/><text x="64.6347%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3847%" y="357" width="0.0815%" height="15" fill="rgb(221,79,53)" fg:x="790" fg:w="1"/><text x="64.6347%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4662%" y="389" width="0.0815%" height="15" fill="rgb(243,200,35)" fg:x="791" fg:w="1"/><text x="64.7162%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="64.4662%" y="421" width="0.2445%" height="15" fill="rgb(248,60,25)" fg:x="791" fg:w="3"/><text x="64.7162%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="64.4662%" y="405" width="0.2445%" height="15" fill="rgb(227,53,46)" fg:x="791" fg:w="3"/><text x="64.7162%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="64.5477%" y="389" width="0.1630%" height="15" fill="rgb(216,120,32)" fg:x="792" fg:w="2"/><text x="64.7977%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.6292%" y="373" width="0.0815%" height="15" fill="rgb(220,134,1)" fg:x="793" fg:w="1"/><text x="64.8792%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6292%" y="357" width="0.0815%" height="15" fill="rgb(237,168,5)" fg:x="793" fg:w="1"/><text x="64.8792%" y="367.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (10 samples, 0.81%)</title><rect x="64.0587%" y="469" width="0.8150%" height="15" fill="rgb(231,100,33)" fg:x="786" fg:w="10"/><text x="64.3087%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="64.0587%" y="453" width="0.8150%" height="15" fill="rgb(236,177,47)" fg:x="786" fg:w="10"/><text x="64.3087%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.73%)</title><rect x="64.1402%" y="437" width="0.7335%" height="15" fill="rgb(235,7,49)" fg:x="787" fg:w="9"/><text x="64.3902%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.7107%" y="421" width="0.1630%" height="15" fill="rgb(232,119,22)" fg:x="794" fg:w="2"/><text x="64.9607%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.7107%" y="405" width="0.1630%" height="15" fill="rgb(254,73,53)" fg:x="794" fg:w="2"/><text x="64.9607%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.7922%" y="389" width="0.0815%" height="15" fill="rgb(251,35,20)" fg:x="795" fg:w="1"/><text x="65.0422%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (12 samples, 0.98%)</title><rect x="63.9772%" y="517" width="0.9780%" height="15" fill="rgb(241,119,20)" fg:x="785" fg:w="12"/><text x="64.2272%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.98%)</title><rect x="63.9772%" y="501" width="0.9780%" height="15" fill="rgb(207,102,14)" fg:x="785" fg:w="12"/><text x="64.2272%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.98%)</title><rect x="63.9772%" y="485" width="0.9780%" height="15" fill="rgb(248,201,50)" fg:x="785" fg:w="12"/><text x="64.2272%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.8737%" y="469" width="0.0815%" height="15" fill="rgb(222,185,44)" fg:x="796" fg:w="1"/><text x="65.1237%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.8737%" y="453" width="0.0815%" height="15" fill="rgb(218,107,18)" fg:x="796" fg:w="1"/><text x="65.1237%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.1182%" y="341" width="0.0815%" height="15" fill="rgb(237,177,39)" fg:x="799" fg:w="1"/><text x="65.3682%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="65.1182%" y="373" width="0.1630%" height="15" fill="rgb(246,69,6)" fg:x="799" fg:w="2"/><text x="65.3682%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="65.1182%" y="357" width="0.1630%" height="15" fill="rgb(234,208,37)" fg:x="799" fg:w="2"/><text x="65.3682%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.1997%" y="341" width="0.0815%" height="15" fill="rgb(225,4,6)" fg:x="800" fg:w="1"/><text x="65.4497%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="65.3627%" y="325" width="0.0815%" height="15" fill="rgb(233,45,0)" fg:x="802" fg:w="1"/><text x="65.6127%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3627%" y="309" width="0.0815%" height="15" fill="rgb(226,136,5)" fg:x="802" fg:w="1"/><text x="65.6127%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="65.4442%" y="309" width="0.0815%" height="15" fill="rgb(211,91,47)" fg:x="803" fg:w="1"/><text x="65.6942%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="65.1182%" y="389" width="0.4890%" height="15" fill="rgb(242,88,51)" fg:x="799" fg:w="6"/><text x="65.3682%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="65.2812%" y="373" width="0.3260%" height="15" fill="rgb(230,91,28)" fg:x="801" fg:w="4"/><text x="65.5312%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="65.2812%" y="357" width="0.3260%" height="15" fill="rgb(254,186,29)" fg:x="801" fg:w="4"/><text x="65.5312%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="65.2812%" y="341" width="0.3260%" height="15" fill="rgb(238,6,4)" fg:x="801" fg:w="4"/><text x="65.5312%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="65.4442%" y="325" width="0.1630%" height="15" fill="rgb(221,151,16)" fg:x="803" fg:w="2"/><text x="65.6942%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5257%" y="309" width="0.0815%" height="15" fill="rgb(251,143,52)" fg:x="804" fg:w="1"/><text x="65.7757%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="65.0367%" y="421" width="0.7335%" height="15" fill="rgb(206,90,15)" fg:x="798" fg:w="9"/><text x="65.2867%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="65.1182%" y="405" width="0.6520%" height="15" fill="rgb(218,35,8)" fg:x="799" fg:w="8"/><text x="65.3682%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.6072%" y="389" width="0.1630%" height="15" fill="rgb(239,215,6)" fg:x="805" fg:w="2"/><text x="65.8572%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.7702%" y="421" width="0.0815%" height="15" fill="rgb(245,116,39)" fg:x="807" fg:w="1"/><text x="66.0202%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7702%" y="405" width="0.0815%" height="15" fill="rgb(242,65,28)" fg:x="807" fg:w="1"/><text x="66.0202%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.98%)</title><rect x="64.9552%" y="453" width="0.9780%" height="15" fill="rgb(252,132,53)" fg:x="797" fg:w="12"/><text x="65.2052%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.98%)</title><rect x="64.9552%" y="437" width="0.9780%" height="15" fill="rgb(224,159,50)" fg:x="797" fg:w="12"/><text x="65.2052%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8517%" y="421" width="0.0815%" height="15" fill="rgb(224,93,4)" fg:x="808" fg:w="1"/><text x="66.1017%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.8517%" y="405" width="0.0815%" height="15" fill="rgb(208,81,34)" fg:x="808" fg:w="1"/><text x="66.1017%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8517%" y="389" width="0.0815%" height="15" fill="rgb(233,92,54)" fg:x="808" fg:w="1"/><text x="66.1017%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="65.9332%" y="453" width="0.1630%" height="15" fill="rgb(237,21,14)" fg:x="809" fg:w="2"/><text x="66.1832%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="65.9332%" y="437" width="0.1630%" height="15" fill="rgb(249,128,51)" fg:x="809" fg:w="2"/><text x="66.1832%" y="447.50"></text></g><g><title>engine::session::Session::load_entity (106 samples, 8.64%)</title><rect x="57.7017%" y="549" width="8.6390%" height="15" fill="rgb(223,129,24)" fg:x="708" fg:w="106"/><text x="57.9517%" y="559.50">engine::sess..</text></g><g><title>engine::session::internal::Entities::add_persisted (40 samples, 3.26%)</title><rect x="63.0807%" y="533" width="3.2600%" height="15" fill="rgb(231,168,25)" fg:x="774" fg:w="40"/><text x="63.3307%" y="543.50">eng..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (17 samples, 1.39%)</title><rect x="64.9552%" y="517" width="1.3855%" height="15" fill="rgb(224,39,20)" fg:x="797" fg:w="17"/><text x="65.2052%" y="527.50"></text></g><g><title>serde_json::de::from_trait (17 samples, 1.39%)</title><rect x="64.9552%" y="501" width="1.3855%" height="15" fill="rgb(225,152,53)" fg:x="797" fg:w="17"/><text x="65.2052%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.39%)</title><rect x="64.9552%" y="485" width="1.3855%" height="15" fill="rgb(252,17,24)" fg:x="797" fg:w="17"/><text x="65.2052%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.39%)</title><rect x="64.9552%" y="469" width="1.3855%" height="15" fill="rgb(250,114,30)" fg:x="797" fg:w="17"/><text x="65.2052%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="66.0962%" y="453" width="0.2445%" height="15" fill="rgb(229,5,4)" fg:x="811" fg:w="3"/><text x="66.3462%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.2592%" y="437" width="0.0815%" height="15" fill="rgb(225,176,49)" fg:x="813" fg:w="1"/><text x="66.5092%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.3407%" y="485" width="0.0815%" height="15" fill="rgb(224,221,49)" fg:x="814" fg:w="1"/><text x="66.5907%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.3407%" y="469" width="0.0815%" height="15" fill="rgb(253,169,27)" fg:x="814" fg:w="1"/><text x="66.5907%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4222%" y="485" width="0.0815%" height="15" fill="rgb(211,206,16)" fg:x="815" fg:w="1"/><text x="66.6722%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4222%" y="469" width="0.0815%" height="15" fill="rgb(244,87,35)" fg:x="815" fg:w="1"/><text x="66.6722%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4222%" y="453" width="0.0815%" height="15" fill="rgb(246,28,10)" fg:x="815" fg:w="1"/><text x="66.6722%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4222%" y="437" width="0.0815%" height="15" fill="rgb(229,12,44)" fg:x="815" fg:w="1"/><text x="66.6722%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4222%" y="421" width="0.0815%" height="15" fill="rgb(210,145,37)" fg:x="815" fg:w="1"/><text x="66.6722%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4222%" y="405" width="0.0815%" height="15" fill="rgb(227,112,52)" fg:x="815" fg:w="1"/><text x="66.6722%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4222%" y="389" width="0.0815%" height="15" fill="rgb(238,155,34)" fg:x="815" fg:w="1"/><text x="66.6722%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4222%" y="373" width="0.0815%" height="15" fill="rgb(239,226,36)" fg:x="815" fg:w="1"/><text x="66.6722%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4222%" y="357" width="0.0815%" height="15" fill="rgb(230,16,23)" fg:x="815" fg:w="1"/><text x="66.6722%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4222%" y="341" width="0.0815%" height="15" fill="rgb(236,171,36)" fg:x="815" fg:w="1"/><text x="66.6722%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4222%" y="325" width="0.0815%" height="15" fill="rgb(221,22,14)" fg:x="815" fg:w="1"/><text x="66.6722%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4222%" y="309" width="0.0815%" height="15" fill="rgb(242,43,11)" fg:x="815" fg:w="1"/><text x="66.6722%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.3407%" y="517" width="0.2445%" height="15" fill="rgb(232,69,23)" fg:x="814" fg:w="3"/><text x="66.5907%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.3407%" y="501" width="0.2445%" height="15" fill="rgb(216,180,54)" fg:x="814" fg:w="3"/><text x="66.5907%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5037%" y="485" width="0.0815%" height="15" fill="rgb(216,5,24)" fg:x="816" fg:w="1"/><text x="66.7537%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0815%" height="15" fill="rgb(225,89,9)" fg:x="818" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8297%" y="373" width="0.0815%" height="15" fill="rgb(243,75,33)" fg:x="820" fg:w="1"/><text x="67.0797%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8297%" y="357" width="0.0815%" height="15" fill="rgb(247,141,45)" fg:x="820" fg:w="1"/><text x="67.0797%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.9112%" y="373" width="0.0815%" height="15" fill="rgb(232,177,36)" fg:x="821" fg:w="1"/><text x="67.1612%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="66.9112%" y="357" width="0.0815%" height="15" fill="rgb(219,125,36)" fg:x="821" fg:w="1"/><text x="67.1612%" y="367.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="66.9112%" y="341" width="0.0815%" height="15" fill="rgb(227,94,9)" fg:x="821" fg:w="1"/><text x="67.1612%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.9112%" y="325" width="0.0815%" height="15" fill="rgb(240,34,52)" fg:x="821" fg:w="1"/><text x="67.1612%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9112%" y="309" width="0.0815%" height="15" fill="rgb(216,45,12)" fg:x="821" fg:w="1"/><text x="67.1612%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9112%" y="293" width="0.0815%" height="15" fill="rgb(246,21,19)" fg:x="821" fg:w="1"/><text x="67.1612%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.9112%" y="277" width="0.0815%" height="15" fill="rgb(213,98,42)" fg:x="821" fg:w="1"/><text x="67.1612%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.9112%" y="261" width="0.0815%" height="15" fill="rgb(250,136,47)" fg:x="821" fg:w="1"/><text x="67.1612%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.9112%" y="245" width="0.0815%" height="15" fill="rgb(251,124,27)" fg:x="821" fg:w="1"/><text x="67.1612%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9112%" y="229" width="0.0815%" height="15" fill="rgb(229,180,14)" fg:x="821" fg:w="1"/><text x="67.1612%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.9112%" y="213" width="0.0815%" height="15" fill="rgb(245,216,25)" fg:x="821" fg:w="1"/><text x="67.1612%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.9112%" y="197" width="0.0815%" height="15" fill="rgb(251,43,5)" fg:x="821" fg:w="1"/><text x="67.1612%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.9112%" y="181" width="0.0815%" height="15" fill="rgb(250,128,24)" fg:x="821" fg:w="1"/><text x="67.1612%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.9112%" y="165" width="0.0815%" height="15" fill="rgb(217,117,27)" fg:x="821" fg:w="1"/><text x="67.1612%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.9112%" y="149" width="0.0815%" height="15" fill="rgb(245,147,4)" fg:x="821" fg:w="1"/><text x="67.1612%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="66.7482%" y="421" width="0.3260%" height="15" fill="rgb(242,201,35)" fg:x="819" fg:w="4"/><text x="66.9982%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="66.8297%" y="405" width="0.2445%" height="15" fill="rgb(218,181,1)" fg:x="820" fg:w="3"/><text x="67.0797%" y="415.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="66.8297%" y="389" width="0.2445%" height="15" fill="rgb(222,6,29)" fg:x="820" fg:w="3"/><text x="67.0797%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.9927%" y="373" width="0.0815%" height="15" fill="rgb(208,186,3)" fg:x="822" fg:w="1"/><text x="67.2427%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.9927%" y="357" width="0.0815%" height="15" fill="rgb(216,36,26)" fg:x="822" fg:w="1"/><text x="67.2427%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.57%)</title><rect x="66.5852%" y="453" width="0.5705%" height="15" fill="rgb(248,201,23)" fg:x="817" fg:w="7"/><text x="66.8352%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.49%)</title><rect x="66.6667%" y="437" width="0.4890%" height="15" fill="rgb(251,170,31)" fg:x="818" fg:w="6"/><text x="66.9167%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.0742%" y="421" width="0.0815%" height="15" fill="rgb(207,110,25)" fg:x="823" fg:w="1"/><text x="67.3242%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.0742%" y="405" width="0.0815%" height="15" fill="rgb(250,54,15)" fg:x="823" fg:w="1"/><text x="67.3242%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.0742%" y="389" width="0.0815%" height="15" fill="rgb(227,68,33)" fg:x="823" fg:w="1"/><text x="67.3242%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.0742%" y="373" width="0.0815%" height="15" fill="rgb(238,34,41)" fg:x="823" fg:w="1"/><text x="67.3242%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.0742%" y="357" width="0.0815%" height="15" fill="rgb(220,11,15)" fg:x="823" fg:w="1"/><text x="67.3242%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="66.5852%" y="517" width="0.6520%" height="15" fill="rgb(246,111,35)" fg:x="817" fg:w="8"/><text x="66.8352%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.65%)</title><rect x="66.5852%" y="501" width="0.6520%" height="15" fill="rgb(209,88,53)" fg:x="817" fg:w="8"/><text x="66.8352%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.65%)</title><rect x="66.5852%" y="485" width="0.6520%" height="15" fill="rgb(231,185,47)" fg:x="817" fg:w="8"/><text x="66.8352%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="66.5852%" y="469" width="0.6520%" height="15" fill="rgb(233,154,1)" fg:x="817" fg:w="8"/><text x="66.8352%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::iter::adapters::flatten::FlatMap&lt;serde_json::map::Iter,core::option::Option&lt;alloc::vec::Vec&lt;kernel::model::entity_ref::EntityRef&gt;&gt;,kernel::model::entity_ref::find_entity_refs::{{closure}}&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="67.1557%" y="453" width="0.0815%" height="15" fill="rgb(225,15,46)" fg:x="824" fg:w="1"/><text x="67.4057%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.2372%" y="469" width="0.1630%" height="15" fill="rgb(211,135,41)" fg:x="825" fg:w="2"/><text x="67.4872%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4817%" y="421" width="0.0815%" height="15" fill="rgb(208,54,0)" fg:x="828" fg:w="1"/><text x="67.7317%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4817%" y="405" width="0.0815%" height="15" fill="rgb(244,136,14)" fg:x="828" fg:w="1"/><text x="67.7317%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="67.2372%" y="485" width="0.4890%" height="15" fill="rgb(241,56,14)" fg:x="825" fg:w="6"/><text x="67.4872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.33%)</title><rect x="67.4002%" y="469" width="0.3260%" height="15" fill="rgb(205,80,24)" fg:x="827" fg:w="4"/><text x="67.6502%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.4817%" y="453" width="0.2445%" height="15" fill="rgb(220,57,4)" fg:x="828" fg:w="3"/><text x="67.7317%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.4817%" y="437" width="0.2445%" height="15" fill="rgb(226,193,50)" fg:x="828" fg:w="3"/><text x="67.7317%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="67.5632%" y="421" width="0.1630%" height="15" fill="rgb(231,168,22)" fg:x="829" fg:w="2"/><text x="67.8132%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.5632%" y="405" width="0.1630%" height="15" fill="rgb(254,215,14)" fg:x="829" fg:w="2"/><text x="67.8132%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.5632%" y="389" width="0.1630%" height="15" fill="rgb(211,115,16)" fg:x="829" fg:w="2"/><text x="67.8132%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.6447%" y="373" width="0.0815%" height="15" fill="rgb(236,210,16)" fg:x="830" fg:w="1"/><text x="67.8947%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (19 samples, 1.55%)</title><rect x="66.3407%" y="549" width="1.5485%" height="15" fill="rgb(221,94,12)" fg:x="814" fg:w="19"/><text x="66.5907%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (19 samples, 1.55%)</title><rect x="66.3407%" y="533" width="1.5485%" height="15" fill="rgb(235,218,49)" fg:x="814" fg:w="19"/><text x="66.5907%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="67.2372%" y="517" width="0.6520%" height="15" fill="rgb(217,114,14)" fg:x="825" fg:w="8"/><text x="67.4872%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="67.2372%" y="501" width="0.6520%" height="15" fill="rgb(216,145,22)" fg:x="825" fg:w="8"/><text x="67.4872%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="67.7262%" y="485" width="0.1630%" height="15" fill="rgb(217,112,39)" fg:x="831" fg:w="2"/><text x="67.9762%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="67.7262%" y="469" width="0.1630%" height="15" fill="rgb(225,85,32)" fg:x="831" fg:w="2"/><text x="67.9762%" y="479.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (2 samples, 0.16%)</title><rect x="67.7262%" y="453" width="0.1630%" height="15" fill="rgb(245,209,47)" fg:x="831" fg:w="2"/><text x="67.9762%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (2 samples, 0.16%)</title><rect x="67.7262%" y="437" width="0.1630%" height="15" fill="rgb(218,220,15)" fg:x="831" fg:w="2"/><text x="67.9762%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="67.7262%" y="421" width="0.1630%" height="15" fill="rgb(222,202,31)" fg:x="831" fg:w="2"/><text x="67.9762%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.8077%" y="405" width="0.0815%" height="15" fill="rgb(243,203,4)" fg:x="832" fg:w="1"/><text x="68.0577%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.8077%" y="389" width="0.0815%" height="15" fill="rgb(237,92,17)" fg:x="832" fg:w="1"/><text x="68.0577%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.8077%" y="373" width="0.0815%" height="15" fill="rgb(231,119,7)" fg:x="832" fg:w="1"/><text x="68.0577%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8892%" y="517" width="0.1630%" height="15" fill="rgb(237,82,41)" fg:x="833" fg:w="2"/><text x="68.1392%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9707%" y="501" width="0.0815%" height="15" fill="rgb(226,81,48)" fg:x="834" fg:w="1"/><text x="68.2207%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9707%" y="485" width="0.0815%" height="15" fill="rgb(234,70,51)" fg:x="834" fg:w="1"/><text x="68.2207%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9707%" y="469" width="0.0815%" height="15" fill="rgb(251,86,4)" fg:x="834" fg:w="1"/><text x="68.2207%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9707%" y="453" width="0.0815%" height="15" fill="rgb(244,144,28)" fg:x="834" fg:w="1"/><text x="68.2207%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.8892%" y="533" width="0.2445%" height="15" fill="rgb(232,161,39)" fg:x="833" fg:w="3"/><text x="68.1392%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0522%" y="517" width="0.0815%" height="15" fill="rgb(247,34,51)" fg:x="835" fg:w="1"/><text x="68.3022%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0522%" y="501" width="0.0815%" height="15" fill="rgb(225,132,2)" fg:x="835" fg:w="1"/><text x="68.3022%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.0522%" y="485" width="0.0815%" height="15" fill="rgb(209,159,44)" fg:x="835" fg:w="1"/><text x="68.3022%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.0522%" y="469" width="0.0815%" height="15" fill="rgb(251,214,1)" fg:x="835" fg:w="1"/><text x="68.3022%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.0522%" y="453" width="0.0815%" height="15" fill="rgb(247,84,47)" fg:x="835" fg:w="1"/><text x="68.3022%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.0522%" y="437" width="0.0815%" height="15" fill="rgb(240,111,43)" fg:x="835" fg:w="1"/><text x="68.3022%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.0522%" y="421" width="0.0815%" height="15" fill="rgb(215,214,35)" fg:x="835" fg:w="1"/><text x="68.3022%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.1337%" y="533" width="0.0815%" height="15" fill="rgb(248,207,23)" fg:x="836" fg:w="1"/><text x="68.3837%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.1337%" y="517" width="0.0815%" height="15" fill="rgb(214,186,4)" fg:x="836" fg:w="1"/><text x="68.3837%" y="527.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="68.2152%" y="533" width="0.0815%" height="15" fill="rgb(220,133,22)" fg:x="837" fg:w="1"/><text x="68.4652%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2152%" y="517" width="0.0815%" height="15" fill="rgb(239,134,19)" fg:x="837" fg:w="1"/><text x="68.4652%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.2152%" y="501" width="0.0815%" height="15" fill="rgb(250,140,9)" fg:x="837" fg:w="1"/><text x="68.4652%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="68.2152%" y="485" width="0.0815%" height="15" fill="rgb(225,59,14)" fg:x="837" fg:w="1"/><text x="68.4652%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.3782%" y="405" width="0.0815%" height="15" fill="rgb(214,152,51)" fg:x="839" fg:w="1"/><text x="68.6282%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.3782%" y="389" width="0.0815%" height="15" fill="rgb(251,227,43)" fg:x="839" fg:w="1"/><text x="68.6282%" y="399.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.3782%" y="373" width="0.0815%" height="15" fill="rgb(241,96,17)" fg:x="839" fg:w="1"/><text x="68.6282%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="68.2967%" y="533" width="0.2445%" height="15" fill="rgb(234,198,43)" fg:x="838" fg:w="3"/><text x="68.5467%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.2967%" y="517" width="0.2445%" height="15" fill="rgb(220,108,29)" fg:x="838" fg:w="3"/><text x="68.5467%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2967%" y="501" width="0.2445%" height="15" fill="rgb(226,163,33)" fg:x="838" fg:w="3"/><text x="68.5467%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.2967%" y="485" width="0.2445%" height="15" fill="rgb(205,194,45)" fg:x="838" fg:w="3"/><text x="68.5467%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2967%" y="469" width="0.2445%" height="15" fill="rgb(206,143,44)" fg:x="838" fg:w="3"/><text x="68.5467%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="68.2967%" y="453" width="0.2445%" height="15" fill="rgb(236,136,36)" fg:x="838" fg:w="3"/><text x="68.5467%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.3782%" y="437" width="0.1630%" height="15" fill="rgb(249,172,42)" fg:x="839" fg:w="2"/><text x="68.6282%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.3782%" y="421" width="0.1630%" height="15" fill="rgb(216,139,23)" fg:x="839" fg:w="2"/><text x="68.6282%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.4597%" y="405" width="0.0815%" height="15" fill="rgb(207,166,20)" fg:x="840" fg:w="1"/><text x="68.7097%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="68.4597%" y="389" width="0.0815%" height="15" fill="rgb(210,209,22)" fg:x="840" fg:w="1"/><text x="68.7097%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="68.7857%" y="437" width="0.2445%" height="15" fill="rgb(232,118,20)" fg:x="844" fg:w="3"/><text x="69.0357%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.7857%" y="421" width="0.2445%" height="15" fill="rgb(238,113,42)" fg:x="844" fg:w="3"/><text x="69.0357%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="68.8672%" y="405" width="0.1630%" height="15" fill="rgb(231,42,5)" fg:x="845" fg:w="2"/><text x="69.1172%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="68.8672%" y="389" width="0.1630%" height="15" fill="rgb(243,166,24)" fg:x="845" fg:w="2"/><text x="69.1172%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.9487%" y="373" width="0.0815%" height="15" fill="rgb(237,226,12)" fg:x="846" fg:w="1"/><text x="69.1987%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9487%" y="357" width="0.0815%" height="15" fill="rgb(229,133,24)" fg:x="846" fg:w="1"/><text x="69.1987%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.9487%" y="341" width="0.0815%" height="15" fill="rgb(238,33,43)" fg:x="846" fg:w="1"/><text x="69.1987%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9487%" y="325" width="0.0815%" height="15" fill="rgb(227,59,38)" fg:x="846" fg:w="1"/><text x="69.1987%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.41%)</title><rect x="68.7042%" y="469" width="0.4075%" height="15" fill="rgb(230,97,0)" fg:x="843" fg:w="5"/><text x="68.9542%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="68.7857%" y="453" width="0.3260%" height="15" fill="rgb(250,173,50)" fg:x="844" fg:w="4"/><text x="69.0357%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.0302%" y="437" width="0.0815%" height="15" fill="rgb(240,15,50)" fg:x="847" fg:w="1"/><text x="69.2802%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0302%" y="421" width="0.0815%" height="15" fill="rgb(221,93,22)" fg:x="847" fg:w="1"/><text x="69.2802%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.1117%" y="469" width="0.0815%" height="15" fill="rgb(245,180,53)" fg:x="848" fg:w="1"/><text x="69.3617%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (142 samples, 11.57%)</title><rect x="57.7017%" y="565" width="11.5729%" height="15" fill="rgb(231,88,51)" fg:x="708" fg:w="142"/><text x="57.9517%" y="575.50">engine::session::..</text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.39%)</title><rect x="67.8892%" y="549" width="1.3855%" height="15" fill="rgb(240,58,21)" fg:x="833" fg:w="17"/><text x="68.1392%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.73%)</title><rect x="68.5412%" y="533" width="0.7335%" height="15" fill="rgb(237,21,10)" fg:x="841" fg:w="9"/><text x="68.7912%" y="543.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="68.5412%" y="517" width="0.7335%" height="15" fill="rgb(218,43,11)" fg:x="841" fg:w="9"/><text x="68.7912%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="68.6227%" y="501" width="0.6520%" height="15" fill="rgb(218,221,29)" fg:x="842" fg:w="8"/><text x="68.8727%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="68.6227%" y="485" width="0.6520%" height="15" fill="rgb(214,118,42)" fg:x="842" fg:w="8"/><text x="68.8727%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1932%" y="469" width="0.0815%" height="15" fill="rgb(251,200,26)" fg:x="849" fg:w="1"/><text x="69.4432%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1932%" y="453" width="0.0815%" height="15" fill="rgb(237,101,39)" fg:x="849" fg:w="1"/><text x="69.4432%" y="463.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="69.2747%" y="565" width="0.2445%" height="15" fill="rgb(251,117,11)" fg:x="850" fg:w="3"/><text x="69.5247%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="69.3562%" y="549" width="0.1630%" height="15" fill="rgb(216,223,23)" fg:x="851" fg:w="2"/><text x="69.6062%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.3562%" y="533" width="0.1630%" height="15" fill="rgb(251,54,12)" fg:x="851" fg:w="2"/><text x="69.6062%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.4377%" y="517" width="0.0815%" height="15" fill="rgb(254,176,54)" fg:x="852" fg:w="1"/><text x="69.6877%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.4377%" y="501" width="0.0815%" height="15" fill="rgb(210,32,8)" fg:x="852" fg:w="1"/><text x="69.6877%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.5192%" y="549" width="0.1630%" height="15" fill="rgb(235,52,38)" fg:x="853" fg:w="2"/><text x="69.7692%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.5192%" y="533" width="0.1630%" height="15" fill="rgb(231,4,44)" fg:x="853" fg:w="2"/><text x="69.7692%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.5192%" y="517" width="0.1630%" height="15" fill="rgb(249,2,32)" fg:x="853" fg:w="2"/><text x="69.7692%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6007%" y="501" width="0.0815%" height="15" fill="rgb(224,65,26)" fg:x="854" fg:w="1"/><text x="69.8507%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.6007%" y="485" width="0.0815%" height="15" fill="rgb(250,73,40)" fg:x="854" fg:w="1"/><text x="69.8507%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6007%" y="469" width="0.0815%" height="15" fill="rgb(253,177,16)" fg:x="854" fg:w="1"/><text x="69.8507%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.6007%" y="453" width="0.0815%" height="15" fill="rgb(217,32,34)" fg:x="854" fg:w="1"/><text x="69.8507%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.6007%" y="437" width="0.0815%" height="15" fill="rgb(212,7,10)" fg:x="854" fg:w="1"/><text x="69.8507%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.6007%" y="421" width="0.0815%" height="15" fill="rgb(245,89,8)" fg:x="854" fg:w="1"/><text x="69.8507%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.6007%" y="405" width="0.0815%" height="15" fill="rgb(237,16,53)" fg:x="854" fg:w="1"/><text x="69.8507%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6007%" y="389" width="0.0815%" height="15" fill="rgb(250,204,30)" fg:x="854" fg:w="1"/><text x="69.8507%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.6007%" y="373" width="0.0815%" height="15" fill="rgb(208,77,27)" fg:x="854" fg:w="1"/><text x="69.8507%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.6007%" y="357" width="0.0815%" height="15" fill="rgb(250,204,28)" fg:x="854" fg:w="1"/><text x="69.8507%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.6007%" y="341" width="0.0815%" height="15" fill="rgb(244,63,21)" fg:x="854" fg:w="1"/><text x="69.8507%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.6007%" y="325" width="0.0815%" height="15" fill="rgb(236,85,44)" fg:x="854" fg:w="1"/><text x="69.8507%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.6007%" y="309" width="0.0815%" height="15" fill="rgb(215,98,4)" fg:x="854" fg:w="1"/><text x="69.8507%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6007%" y="293" width="0.0815%" height="15" fill="rgb(235,38,11)" fg:x="854" fg:w="1"/><text x="69.8507%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7637%" y="485" width="0.0815%" height="15" fill="rgb(254,186,25)" fg:x="856" fg:w="1"/><text x="70.0137%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7637%" y="469" width="0.0815%" height="15" fill="rgb(225,55,31)" fg:x="856" fg:w="1"/><text x="70.0137%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7637%" y="453" width="0.0815%" height="15" fill="rgb(211,15,21)" fg:x="856" fg:w="1"/><text x="70.0137%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7637%" y="437" width="0.0815%" height="15" fill="rgb(215,187,41)" fg:x="856" fg:w="1"/><text x="70.0137%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7637%" y="421" width="0.0815%" height="15" fill="rgb(248,69,32)" fg:x="856" fg:w="1"/><text x="70.0137%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.7637%" y="405" width="0.0815%" height="15" fill="rgb(252,102,52)" fg:x="856" fg:w="1"/><text x="70.0137%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.7637%" y="389" width="0.0815%" height="15" fill="rgb(253,140,32)" fg:x="856" fg:w="1"/><text x="70.0137%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6822%" y="517" width="0.2445%" height="15" fill="rgb(216,56,42)" fg:x="855" fg:w="3"/><text x="69.9322%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6822%" y="501" width="0.2445%" height="15" fill="rgb(216,184,14)" fg:x="855" fg:w="3"/><text x="69.9322%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8452%" y="485" width="0.0815%" height="15" fill="rgb(237,187,27)" fg:x="857" fg:w="1"/><text x="70.0952%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.49%)</title><rect x="69.5192%" y="565" width="0.4890%" height="15" fill="rgb(219,65,3)" fg:x="853" fg:w="6"/><text x="69.7692%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="69.6822%" y="549" width="0.3260%" height="15" fill="rgb(245,83,25)" fg:x="855" fg:w="4"/><text x="69.9322%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.33%)</title><rect x="69.6822%" y="533" width="0.3260%" height="15" fill="rgb(214,205,45)" fg:x="855" fg:w="4"/><text x="69.9322%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9267%" y="517" width="0.0815%" height="15" fill="rgb(241,20,18)" fg:x="858" fg:w="1"/><text x="70.1767%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.9267%" y="501" width="0.0815%" height="15" fill="rgb(232,163,23)" fg:x="858" fg:w="1"/><text x="70.1767%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9267%" y="485" width="0.0815%" height="15" fill="rgb(214,5,46)" fg:x="858" fg:w="1"/><text x="70.1767%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.9267%" y="469" width="0.0815%" height="15" fill="rgb(229,78,17)" fg:x="858" fg:w="1"/><text x="70.1767%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9267%" y="453" width="0.0815%" height="15" fill="rgb(248,89,10)" fg:x="858" fg:w="1"/><text x="70.1767%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1711%" y="517" width="0.0815%" height="15" fill="rgb(248,54,15)" fg:x="861" fg:w="1"/><text x="70.4211%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1711%" y="501" width="0.0815%" height="15" fill="rgb(223,116,6)" fg:x="861" fg:w="1"/><text x="70.4211%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1711%" y="485" width="0.0815%" height="15" fill="rgb(205,125,38)" fg:x="861" fg:w="1"/><text x="70.4211%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2526%" y="485" width="0.0815%" height="15" fill="rgb(251,78,38)" fg:x="862" fg:w="1"/><text x="70.5026%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2526%" y="469" width="0.0815%" height="15" fill="rgb(253,78,28)" fg:x="862" fg:w="1"/><text x="70.5026%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2526%" y="453" width="0.0815%" height="15" fill="rgb(209,120,3)" fg:x="862" fg:w="1"/><text x="70.5026%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2526%" y="437" width="0.0815%" height="15" fill="rgb(238,229,9)" fg:x="862" fg:w="1"/><text x="70.5026%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2526%" y="421" width="0.0815%" height="15" fill="rgb(253,159,18)" fg:x="862" fg:w="1"/><text x="70.5026%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.2526%" y="405" width="0.0815%" height="15" fill="rgb(244,42,34)" fg:x="862" fg:w="1"/><text x="70.5026%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.2526%" y="389" width="0.0815%" height="15" fill="rgb(224,8,7)" fg:x="862" fg:w="1"/><text x="70.5026%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.2526%" y="373" width="0.0815%" height="15" fill="rgb(210,201,45)" fg:x="862" fg:w="1"/><text x="70.5026%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2526%" y="357" width="0.0815%" height="15" fill="rgb(252,185,21)" fg:x="862" fg:w="1"/><text x="70.5026%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2526%" y="341" width="0.0815%" height="15" fill="rgb(223,131,1)" fg:x="862" fg:w="1"/><text x="70.5026%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.2526%" y="325" width="0.0815%" height="15" fill="rgb(245,141,16)" fg:x="862" fg:w="1"/><text x="70.5026%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.2526%" y="309" width="0.0815%" height="15" fill="rgb(229,55,45)" fg:x="862" fg:w="1"/><text x="70.5026%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.2526%" y="293" width="0.0815%" height="15" fill="rgb(208,92,15)" fg:x="862" fg:w="1"/><text x="70.5026%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.2526%" y="277" width="0.0815%" height="15" fill="rgb(234,185,47)" fg:x="862" fg:w="1"/><text x="70.5026%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2526%" y="261" width="0.0815%" height="15" fill="rgb(253,104,50)" fg:x="862" fg:w="1"/><text x="70.5026%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.2526%" y="517" width="0.1630%" height="15" fill="rgb(205,70,7)" fg:x="862" fg:w="2"/><text x="70.5026%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.2526%" y="501" width="0.1630%" height="15" fill="rgb(240,178,43)" fg:x="862" fg:w="2"/><text x="70.5026%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.3341%" y="485" width="0.0815%" height="15" fill="rgb(214,112,2)" fg:x="863" fg:w="1"/><text x="70.5841%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.3341%" y="469" width="0.0815%" height="15" fill="rgb(206,46,17)" fg:x="863" fg:w="1"/><text x="70.5841%" y="479.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="70.4156%" y="517" width="0.1630%" height="15" fill="rgb(225,220,16)" fg:x="864" fg:w="2"/><text x="70.6656%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.4971%" y="501" width="0.0815%" height="15" fill="rgb(238,65,40)" fg:x="865" fg:w="1"/><text x="70.7471%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.7416%" y="437" width="0.1630%" height="15" fill="rgb(230,151,21)" fg:x="868" fg:w="2"/><text x="70.9916%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8231%" y="421" width="0.0815%" height="15" fill="rgb(218,58,49)" fg:x="869" fg:w="1"/><text x="71.0731%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="70.9046%" y="421" width="0.0815%" height="15" fill="rgb(219,179,14)" fg:x="870" fg:w="1"/><text x="71.1546%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.9861%" y="421" width="0.0815%" height="15" fill="rgb(223,72,1)" fg:x="871" fg:w="1"/><text x="71.2361%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.9861%" y="405" width="0.0815%" height="15" fill="rgb(238,126,10)" fg:x="871" fg:w="1"/><text x="71.2361%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.9861%" y="389" width="0.0815%" height="15" fill="rgb(224,206,38)" fg:x="871" fg:w="1"/><text x="71.2361%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="70.9861%" y="373" width="0.0815%" height="15" fill="rgb(212,201,54)" fg:x="871" fg:w="1"/><text x="71.2361%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.0676%" y="389" width="0.0815%" height="15" fill="rgb(218,154,48)" fg:x="872" fg:w="1"/><text x="71.3176%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (9 samples, 0.73%)</title><rect x="70.5786%" y="517" width="0.7335%" height="15" fill="rgb(232,93,24)" fg:x="866" fg:w="9"/><text x="70.8286%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.73%)</title><rect x="70.5786%" y="501" width="0.7335%" height="15" fill="rgb(245,30,21)" fg:x="866" fg:w="9"/><text x="70.8286%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.73%)</title><rect x="70.5786%" y="485" width="0.7335%" height="15" fill="rgb(242,148,29)" fg:x="866" fg:w="9"/><text x="70.8286%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.57%)</title><rect x="70.7416%" y="469" width="0.5705%" height="15" fill="rgb(244,153,54)" fg:x="868" fg:w="7"/><text x="70.9916%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="70.7416%" y="453" width="0.5705%" height="15" fill="rgb(252,87,22)" fg:x="868" fg:w="7"/><text x="70.9916%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="70.9046%" y="437" width="0.4075%" height="15" fill="rgb(210,51,29)" fg:x="870" fg:w="5"/><text x="71.1546%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.0676%" y="421" width="0.2445%" height="15" fill="rgb(242,136,47)" fg:x="872" fg:w="3"/><text x="71.3176%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.0676%" y="405" width="0.2445%" height="15" fill="rgb(238,68,4)" fg:x="872" fg:w="3"/><text x="71.3176%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="71.1491%" y="389" width="0.1630%" height="15" fill="rgb(242,161,30)" fg:x="873" fg:w="2"/><text x="71.3991%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.1491%" y="373" width="0.1630%" height="15" fill="rgb(218,58,44)" fg:x="873" fg:w="2"/><text x="71.3991%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.2306%" y="357" width="0.0815%" height="15" fill="rgb(252,125,32)" fg:x="874" fg:w="1"/><text x="71.4806%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.3121%" y="389" width="0.0815%" height="15" fill="rgb(219,178,0)" fg:x="875" fg:w="1"/><text x="71.5621%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3121%" y="373" width="0.0815%" height="15" fill="rgb(213,152,7)" fg:x="875" fg:w="1"/><text x="71.5621%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="71.3121%" y="357" width="0.0815%" height="15" fill="rgb(249,109,34)" fg:x="875" fg:w="1"/><text x="71.5621%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.3121%" y="341" width="0.0815%" height="15" fill="rgb(232,96,21)" fg:x="875" fg:w="1"/><text x="71.5621%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3121%" y="325" width="0.0815%" height="15" fill="rgb(228,27,39)" fg:x="875" fg:w="1"/><text x="71.5621%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3121%" y="309" width="0.0815%" height="15" fill="rgb(211,182,52)" fg:x="875" fg:w="1"/><text x="71.5621%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3121%" y="293" width="0.0815%" height="15" fill="rgb(234,178,38)" fg:x="875" fg:w="1"/><text x="71.5621%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3121%" y="453" width="0.1630%" height="15" fill="rgb(221,111,3)" fg:x="875" fg:w="2"/><text x="71.5621%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.3121%" y="437" width="0.1630%" height="15" fill="rgb(228,175,21)" fg:x="875" fg:w="2"/><text x="71.5621%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="71.3121%" y="421" width="0.1630%" height="15" fill="rgb(228,174,43)" fg:x="875" fg:w="2"/><text x="71.5621%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.3121%" y="405" width="0.1630%" height="15" fill="rgb(211,191,0)" fg:x="875" fg:w="2"/><text x="71.5621%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3936%" y="389" width="0.0815%" height="15" fill="rgb(253,117,3)" fg:x="876" fg:w="1"/><text x="71.6436%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.3936%" y="373" width="0.0815%" height="15" fill="rgb(241,127,19)" fg:x="876" fg:w="1"/><text x="71.6436%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3936%" y="357" width="0.0815%" height="15" fill="rgb(218,103,12)" fg:x="876" fg:w="1"/><text x="71.6436%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (17 samples, 1.39%)</title><rect x="70.1711%" y="549" width="1.3855%" height="15" fill="rgb(236,214,43)" fg:x="861" fg:w="17"/><text x="70.4211%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.39%)</title><rect x="70.1711%" y="533" width="1.3855%" height="15" fill="rgb(244,144,19)" fg:x="861" fg:w="17"/><text x="70.4211%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="71.3121%" y="517" width="0.2445%" height="15" fill="rgb(246,188,10)" fg:x="875" fg:w="3"/><text x="71.5621%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="71.3121%" y="501" width="0.2445%" height="15" fill="rgb(212,193,33)" fg:x="875" fg:w="3"/><text x="71.5621%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="71.3121%" y="485" width="0.2445%" height="15" fill="rgb(241,51,29)" fg:x="875" fg:w="3"/><text x="71.5621%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="71.3121%" y="469" width="0.2445%" height="15" fill="rgb(211,58,19)" fg:x="875" fg:w="3"/><text x="71.5621%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.4751%" y="453" width="0.0815%" height="15" fill="rgb(229,111,26)" fg:x="877" fg:w="1"/><text x="71.7251%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4751%" y="437" width="0.0815%" height="15" fill="rgb(213,115,40)" fg:x="877" fg:w="1"/><text x="71.7251%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.5566%" y="501" width="0.0815%" height="15" fill="rgb(209,56,44)" fg:x="878" fg:w="1"/><text x="71.8066%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.5566%" y="485" width="0.0815%" height="15" fill="rgb(230,108,32)" fg:x="878" fg:w="1"/><text x="71.8066%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5566%" y="469" width="0.0815%" height="15" fill="rgb(216,165,31)" fg:x="878" fg:w="1"/><text x="71.8066%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="71.5566%" y="533" width="0.2445%" height="15" fill="rgb(218,122,21)" fg:x="878" fg:w="3"/><text x="71.8066%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.5566%" y="517" width="0.2445%" height="15" fill="rgb(223,224,47)" fg:x="878" fg:w="3"/><text x="71.8066%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.6381%" y="501" width="0.1630%" height="15" fill="rgb(238,102,44)" fg:x="879" fg:w="2"/><text x="71.8881%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6381%" y="485" width="0.1630%" height="15" fill="rgb(236,46,40)" fg:x="879" fg:w="2"/><text x="71.8881%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.6381%" y="469" width="0.1630%" height="15" fill="rgb(247,202,50)" fg:x="879" fg:w="2"/><text x="71.8881%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6381%" y="453" width="0.1630%" height="15" fill="rgb(209,99,20)" fg:x="879" fg:w="2"/><text x="71.8881%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.7196%" y="437" width="0.0815%" height="15" fill="rgb(252,27,34)" fg:x="880" fg:w="1"/><text x="71.9696%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.8011%" y="501" width="0.0815%" height="15" fill="rgb(215,206,23)" fg:x="881" fg:w="1"/><text x="72.0511%" y="511.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (287 samples, 23.39%)</title><rect x="48.5738%" y="597" width="23.3904%" height="15" fill="rgb(212,135,36)" fg:x="596" fg:w="287"/><text x="48.8238%" y="607.50">engine::session::Session::evaluate_an..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (287 samples, 23.39%)</title><rect x="48.5738%" y="581" width="23.3904%" height="15" fill="rgb(240,189,1)" fg:x="596" fg:w="287"/><text x="48.8238%" y="591.50">engine::session::Session::evaluate_an..</text></g><g><title>kernel::model::entry::EntryResolver::world (24 samples, 1.96%)</title><rect x="70.0081%" y="565" width="1.9560%" height="15" fill="rgb(242,56,20)" fg:x="859" fg:w="24"/><text x="70.2581%" y="575.50">k..</text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.41%)</title><rect x="71.5566%" y="549" width="0.4075%" height="15" fill="rgb(247,132,33)" fg:x="878" fg:w="5"/><text x="71.8066%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="71.8011%" y="533" width="0.1630%" height="15" fill="rgb(208,149,11)" fg:x="881" fg:w="2"/><text x="72.0511%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.8011%" y="517" width="0.1630%" height="15" fill="rgb(211,33,11)" fg:x="881" fg:w="2"/><text x="72.0511%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.8826%" y="501" width="0.0815%" height="15" fill="rgb(221,29,38)" fg:x="882" fg:w="1"/><text x="72.1326%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.8826%" y="485" width="0.0815%" height="15" fill="rgb(206,182,49)" fg:x="882" fg:w="1"/><text x="72.1326%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.8826%" y="469" width="0.0815%" height="15" fill="rgb(216,140,1)" fg:x="882" fg:w="1"/><text x="72.1326%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.8826%" y="453" width="0.0815%" height="15" fill="rgb(232,57,40)" fg:x="882" fg:w="1"/><text x="72.1326%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.8826%" y="437" width="0.0815%" height="15" fill="rgb(224,186,18)" fg:x="882" fg:w="1"/><text x="72.1326%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.8826%" y="421" width="0.0815%" height="15" fill="rgb(215,121,11)" fg:x="882" fg:w="1"/><text x="72.1326%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (884 samples, 72.05%)</title><rect x="0.0000%" y="645" width="72.0456%" height="15" fill="rgb(245,147,10)" fg:x="0" fg:w="884"/><text x="0.2500%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (884 samples, 72.05%)</title><rect x="0.0000%" y="629" width="72.0456%" height="15" fill="rgb(238,153,13)" fg:x="0" fg:w="884"/><text x="0.2500%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (884 samples, 72.05%)</title><rect x="0.0000%" y="613" width="72.0456%" height="15" fill="rgb(233,108,0)" fg:x="0" fg:w="884"/><text x="0.2500%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="71.9641%" y="597" width="0.0815%" height="15" fill="rgb(212,157,17)" fg:x="883" fg:w="1"/><text x="72.2141%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9641%" y="581" width="0.0815%" height="15" fill="rgb(225,213,38)" fg:x="883" fg:w="1"/><text x="72.2141%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.0456%" y="597" width="0.1630%" height="15" fill="rgb(248,16,11)" fg:x="884" fg:w="2"/><text x="72.2956%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.0456%" y="581" width="0.1630%" height="15" fill="rgb(241,33,4)" fg:x="884" fg:w="2"/><text x="72.2956%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="72.0456%" y="565" width="0.1630%" height="15" fill="rgb(222,26,43)" fg:x="884" fg:w="2"/><text x="72.2956%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.0456%" y="549" width="0.1630%" height="15" fill="rgb(243,29,36)" fg:x="884" fg:w="2"/><text x="72.2956%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="72.2086%" y="581" width="0.0815%" height="15" fill="rgb(241,9,27)" fg:x="886" fg:w="1"/><text x="72.4586%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.3716%" y="501" width="0.1630%" height="15" fill="rgb(205,117,26)" fg:x="888" fg:w="2"/><text x="72.6216%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5346%" y="485" width="0.0815%" height="15" fill="rgb(209,80,39)" fg:x="890" fg:w="1"/><text x="72.7846%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6161%" y="469" width="0.0815%" height="15" fill="rgb(239,155,6)" fg:x="891" fg:w="1"/><text x="72.8661%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.6976%" y="469" width="0.0815%" height="15" fill="rgb(212,104,12)" fg:x="892" fg:w="1"/><text x="72.9476%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.7791%" y="453" width="0.0815%" height="15" fill="rgb(234,204,3)" fg:x="893" fg:w="1"/><text x="73.0291%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7791%" y="437" width="0.0815%" height="15" fill="rgb(251,218,7)" fg:x="893" fg:w="1"/><text x="73.0291%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="72.3716%" y="517" width="0.6520%" height="15" fill="rgb(221,81,32)" fg:x="888" fg:w="8"/><text x="72.6216%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="72.5346%" y="501" width="0.4890%" height="15" fill="rgb(214,152,26)" fg:x="890" fg:w="6"/><text x="72.7846%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="72.6161%" y="485" width="0.4075%" height="15" fill="rgb(223,22,3)" fg:x="891" fg:w="5"/><text x="72.8661%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.7791%" y="469" width="0.2445%" height="15" fill="rgb(207,174,7)" fg:x="893" fg:w="3"/><text x="73.0291%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.8606%" y="453" width="0.1630%" height="15" fill="rgb(224,19,52)" fg:x="894" fg:w="2"/><text x="73.1106%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9421%" y="437" width="0.0815%" height="15" fill="rgb(228,24,14)" fg:x="895" fg:w="1"/><text x="73.1921%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.0236%" y="485" width="0.0815%" height="15" fill="rgb(230,153,43)" fg:x="896" fg:w="1"/><text x="73.2736%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0236%" y="469" width="0.0815%" height="15" fill="rgb(231,106,12)" fg:x="896" fg:w="1"/><text x="73.2736%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.1866%" y="469" width="0.0815%" height="15" fill="rgb(215,92,2)" fg:x="898" fg:w="1"/><text x="73.4366%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.1866%" y="453" width="0.0815%" height="15" fill="rgb(249,143,25)" fg:x="898" fg:w="1"/><text x="73.4366%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1866%" y="437" width="0.0815%" height="15" fill="rgb(252,7,35)" fg:x="898" fg:w="1"/><text x="73.4366%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="73.0236%" y="517" width="0.3260%" height="15" fill="rgb(216,69,40)" fg:x="896" fg:w="4"/><text x="73.2736%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.33%)</title><rect x="73.0236%" y="501" width="0.3260%" height="15" fill="rgb(240,36,33)" fg:x="896" fg:w="4"/><text x="73.2736%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.1051%" y="485" width="0.2445%" height="15" fill="rgb(231,128,14)" fg:x="897" fg:w="3"/><text x="73.3551%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2681%" y="469" width="0.0815%" height="15" fill="rgb(245,143,14)" fg:x="899" fg:w="1"/><text x="73.5181%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2681%" y="453" width="0.0815%" height="15" fill="rgb(222,130,28)" fg:x="899" fg:w="1"/><text x="73.5181%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="72.2086%" y="597" width="1.2225%" height="15" fill="rgb(212,10,48)" fg:x="886" fg:w="15"/><text x="72.4586%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (14 samples, 1.14%)</title><rect x="72.2901%" y="581" width="1.1410%" height="15" fill="rgb(254,118,45)" fg:x="887" fg:w="14"/><text x="72.5401%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.14%)</title><rect x="72.2901%" y="565" width="1.1410%" height="15" fill="rgb(228,6,45)" fg:x="887" fg:w="14"/><text x="72.5401%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.06%)</title><rect x="72.3716%" y="549" width="1.0595%" height="15" fill="rgb(241,18,35)" fg:x="888" fg:w="13"/><text x="72.6216%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.06%)</title><rect x="72.3716%" y="533" width="1.0595%" height="15" fill="rgb(227,214,53)" fg:x="888" fg:w="13"/><text x="72.6216%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3496%" y="517" width="0.0815%" height="15" fill="rgb(224,107,51)" fg:x="900" fg:w="1"/><text x="73.5996%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="73.5126%" y="549" width="0.0815%" height="15" fill="rgb(248,60,28)" fg:x="902" fg:w="1"/><text x="73.7626%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="73.5126%" y="533" width="0.0815%" height="15" fill="rgb(249,101,23)" fg:x="902" fg:w="1"/><text x="73.7626%" y="543.50"></text></g><g><title>&lt;alloc::ffi::c_str::NulError as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5941%" y="485" width="0.0815%" height="15" fill="rgb(228,51,19)" fg:x="903" fg:w="1"/><text x="73.8441%" y="495.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="73.6756%" y="485" width="0.0815%" height="15" fill="rgb(213,20,6)" fg:x="904" fg:w="1"/><text x="73.9256%" y="495.50"></text></g><g><title>libloading::safe::Library::new (4 samples, 0.33%)</title><rect x="73.5941%" y="501" width="0.3260%" height="15" fill="rgb(212,124,10)" fg:x="903" fg:w="4"/><text x="73.8441%" y="511.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="73.7571%" y="485" width="0.1630%" height="15" fill="rgb(248,3,40)" fg:x="905" fg:w="2"/><text x="74.0071%" y="495.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="73.7571%" y="469" width="0.1630%" height="15" fill="rgb(223,178,23)" fg:x="905" fg:w="2"/><text x="74.0071%" y="479.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.7571%" y="453" width="0.1630%" height="15" fill="rgb(240,132,45)" fg:x="905" fg:w="2"/><text x="74.0071%" y="463.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.7571%" y="437" width="0.1630%" height="15" fill="rgb(245,164,36)" fg:x="905" fg:w="2"/><text x="74.0071%" y="447.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="73.7571%" y="421" width="0.1630%" height="15" fill="rgb(231,188,53)" fg:x="905" fg:w="2"/><text x="74.0071%" y="431.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.41%)</title><rect x="73.5941%" y="517" width="0.4075%" height="15" fill="rgb(237,198,39)" fg:x="903" fg:w="5"/><text x="73.8441%" y="527.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="73.9201%" y="501" width="0.0815%" height="15" fill="rgb(223,120,35)" fg:x="907" fg:w="1"/><text x="74.1701%" y="511.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="73.9201%" y="485" width="0.0815%" height="15" fill="rgb(253,107,49)" fg:x="907" fg:w="1"/><text x="74.1701%" y="495.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.49%)</title><rect x="73.5941%" y="533" width="0.4890%" height="15" fill="rgb(216,44,31)" fg:x="903" fg:w="6"/><text x="73.8441%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="74.0016%" y="517" width="0.0815%" height="15" fill="rgb(253,87,21)" fg:x="908" fg:w="1"/><text x="74.2516%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="74.0016%" y="501" width="0.0815%" height="15" fill="rgb(226,18,2)" fg:x="908" fg:w="1"/><text x="74.2516%" y="511.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.57%)</title><rect x="73.5941%" y="549" width="0.5705%" height="15" fill="rgb(216,8,46)" fg:x="903" fg:w="7"/><text x="73.8441%" y="559.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="74.0831%" y="533" width="0.0815%" height="15" fill="rgb(226,140,39)" fg:x="909" fg:w="1"/><text x="74.3331%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="74.0831%" y="517" width="0.0815%" height="15" fill="rgb(221,194,54)" fg:x="909" fg:w="1"/><text x="74.3331%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="74.0831%" y="501" width="0.0815%" height="15" fill="rgb(213,92,11)" fg:x="909" fg:w="1"/><text x="74.3331%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.0831%" y="485" width="0.0815%" height="15" fill="rgb(229,162,46)" fg:x="909" fg:w="1"/><text x="74.3331%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.0831%" y="469" width="0.0815%" height="15" fill="rgb(214,111,36)" fg:x="909" fg:w="1"/><text x="74.3331%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.0831%" y="453" width="0.0815%" height="15" fill="rgb(207,6,21)" fg:x="909" fg:w="1"/><text x="74.3331%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.81%)</title><rect x="73.4311%" y="597" width="0.8150%" height="15" fill="rgb(213,127,38)" fg:x="901" fg:w="10"/><text x="73.6811%" y="607.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (10 samples, 0.81%)</title><rect x="73.4311%" y="581" width="0.8150%" height="15" fill="rgb(238,118,32)" fg:x="901" fg:w="10"/><text x="73.6811%" y="591.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.81%)</title><rect x="73.4311%" y="565" width="0.8150%" height="15" fill="rgb(240,139,39)" fg:x="901" fg:w="10"/><text x="73.6811%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="74.1646%" y="549" width="0.0815%" height="15" fill="rgb(235,10,37)" fg:x="910" fg:w="1"/><text x="74.4146%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="74.1646%" y="533" width="0.0815%" height="15" fill="rgb(249,171,38)" fg:x="910" fg:w="1"/><text x="74.4146%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="74.2461%" y="565" width="0.0815%" height="15" fill="rgb(242,144,32)" fg:x="911" fg:w="1"/><text x="74.4961%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2461%" y="549" width="0.0815%" height="15" fill="rgb(217,117,21)" fg:x="911" fg:w="1"/><text x="74.4961%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="74.3276%" y="485" width="0.0815%" height="15" fill="rgb(249,87,1)" fg:x="912" fg:w="1"/><text x="74.5776%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.3276%" y="469" width="0.0815%" height="15" fill="rgb(248,196,48)" fg:x="912" fg:w="1"/><text x="74.5776%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.3276%" y="453" width="0.0815%" height="15" fill="rgb(251,206,33)" fg:x="912" fg:w="1"/><text x="74.5776%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.3276%" y="437" width="0.0815%" height="15" fill="rgb(232,141,28)" fg:x="912" fg:w="1"/><text x="74.5776%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.3276%" y="421" width="0.0815%" height="15" fill="rgb(209,167,14)" fg:x="912" fg:w="1"/><text x="74.5776%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4091%" y="469" width="0.0815%" height="15" fill="rgb(225,11,50)" fg:x="913" fg:w="1"/><text x="74.6591%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="74.4906%" y="469" width="0.2445%" height="15" fill="rgb(209,50,20)" fg:x="914" fg:w="3"/><text x="74.7406%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.4906%" y="453" width="0.2445%" height="15" fill="rgb(212,17,46)" fg:x="914" fg:w="3"/><text x="74.7406%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.5721%" y="437" width="0.1630%" height="15" fill="rgb(216,101,39)" fg:x="915" fg:w="2"/><text x="74.8221%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.5721%" y="421" width="0.1630%" height="15" fill="rgb(212,228,48)" fg:x="915" fg:w="2"/><text x="74.8221%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.7351%" y="453" width="0.0815%" height="15" fill="rgb(250,6,50)" fg:x="917" fg:w="1"/><text x="74.9851%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="74.8166%" y="453" width="0.1630%" height="15" fill="rgb(250,160,48)" fg:x="918" fg:w="2"/><text x="75.0666%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="74.8166%" y="437" width="0.1630%" height="15" fill="rgb(244,216,33)" fg:x="918" fg:w="2"/><text x="75.0666%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.8981%" y="421" width="0.0815%" height="15" fill="rgb(207,157,5)" fg:x="919" fg:w="1"/><text x="75.1481%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8981%" y="405" width="0.0815%" height="15" fill="rgb(228,199,8)" fg:x="919" fg:w="1"/><text x="75.1481%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.8981%" y="389" width="0.0815%" height="15" fill="rgb(227,80,20)" fg:x="919" fg:w="1"/><text x="75.1481%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.8981%" y="373" width="0.0815%" height="15" fill="rgb(222,9,33)" fg:x="919" fg:w="1"/><text x="75.1481%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="74.8981%" y="357" width="0.0815%" height="15" fill="rgb(239,44,28)" fg:x="919" fg:w="1"/><text x="75.1481%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.0611%" y="437" width="0.0815%" height="15" fill="rgb(249,187,43)" fg:x="921" fg:w="1"/><text x="75.3111%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0611%" y="421" width="0.0815%" height="15" fill="rgb(216,141,28)" fg:x="921" fg:w="1"/><text x="75.3111%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.0611%" y="405" width="0.0815%" height="15" fill="rgb(230,154,53)" fg:x="921" fg:w="1"/><text x="75.3111%" y="415.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0611%" y="389" width="0.0815%" height="15" fill="rgb(227,82,4)" fg:x="921" fg:w="1"/><text x="75.3111%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0611%" y="373" width="0.0815%" height="15" fill="rgb(220,107,16)" fg:x="921" fg:w="1"/><text x="75.3111%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0611%" y="357" width="0.0815%" height="15" fill="rgb(207,187,2)" fg:x="921" fg:w="1"/><text x="75.3111%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0611%" y="341" width="0.0815%" height="15" fill="rgb(210,162,52)" fg:x="921" fg:w="1"/><text x="75.3111%" y="351.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.1426%" y="437" width="0.0815%" height="15" fill="rgb(217,216,49)" fg:x="922" fg:w="1"/><text x="75.3926%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.1426%" y="421" width="0.0815%" height="15" fill="rgb(218,146,49)" fg:x="922" fg:w="1"/><text x="75.3926%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.2241%" y="421" width="0.0815%" height="15" fill="rgb(216,55,40)" fg:x="923" fg:w="1"/><text x="75.4741%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.2241%" y="437" width="0.1630%" height="15" fill="rgb(208,196,21)" fg:x="923" fg:w="2"/><text x="75.4741%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.3056%" y="421" width="0.0815%" height="15" fill="rgb(242,117,42)" fg:x="924" fg:w="1"/><text x="75.5556%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3056%" y="405" width="0.0815%" height="15" fill="rgb(210,11,23)" fg:x="924" fg:w="1"/><text x="75.5556%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.3056%" y="389" width="0.0815%" height="15" fill="rgb(217,110,2)" fg:x="924" fg:w="1"/><text x="75.5556%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.3056%" y="373" width="0.0815%" height="15" fill="rgb(229,77,54)" fg:x="924" fg:w="1"/><text x="75.5556%" y="383.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="74.9796%" y="453" width="0.4890%" height="15" fill="rgb(218,53,16)" fg:x="920" fg:w="6"/><text x="75.2296%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3871%" y="437" width="0.0815%" height="15" fill="rgb(215,38,13)" fg:x="925" fg:w="1"/><text x="75.6371%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.14%)</title><rect x="74.4091%" y="485" width="1.1410%" height="15" fill="rgb(235,42,18)" fg:x="913" fg:w="14"/><text x="74.6591%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="74.7351%" y="469" width="0.8150%" height="15" fill="rgb(219,66,54)" fg:x="917" fg:w="10"/><text x="74.9851%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4686%" y="453" width="0.0815%" height="15" fill="rgb(222,205,4)" fg:x="926" fg:w="1"/><text x="75.7186%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4686%" y="437" width="0.0815%" height="15" fill="rgb(227,213,46)" fg:x="926" fg:w="1"/><text x="75.7186%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4686%" y="421" width="0.0815%" height="15" fill="rgb(250,145,42)" fg:x="926" fg:w="1"/><text x="75.7186%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5501%" y="405" width="0.0815%" height="15" fill="rgb(219,15,2)" fg:x="927" fg:w="1"/><text x="75.8001%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5501%" y="485" width="0.1630%" height="15" fill="rgb(231,181,52)" fg:x="927" fg:w="2"/><text x="75.8001%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="75.5501%" y="469" width="0.1630%" height="15" fill="rgb(235,1,42)" fg:x="927" fg:w="2"/><text x="75.8001%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5501%" y="453" width="0.1630%" height="15" fill="rgb(249,88,27)" fg:x="927" fg:w="2"/><text x="75.8001%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5501%" y="437" width="0.1630%" height="15" fill="rgb(235,145,16)" fg:x="927" fg:w="2"/><text x="75.8001%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.5501%" y="421" width="0.1630%" height="15" fill="rgb(237,114,19)" fg:x="927" fg:w="2"/><text x="75.8001%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.6316%" y="405" width="0.0815%" height="15" fill="rgb(238,51,50)" fg:x="928" fg:w="1"/><text x="75.8816%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6316%" y="389" width="0.0815%" height="15" fill="rgb(205,194,25)" fg:x="928" fg:w="1"/><text x="75.8816%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6316%" y="373" width="0.0815%" height="15" fill="rgb(215,203,17)" fg:x="928" fg:w="1"/><text x="75.8816%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="75.7131%" y="437" width="0.1630%" height="15" fill="rgb(233,112,49)" fg:x="929" fg:w="2"/><text x="75.9631%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.7131%" y="421" width="0.1630%" height="15" fill="rgb(241,130,26)" fg:x="929" fg:w="2"/><text x="75.9631%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.7131%" y="405" width="0.1630%" height="15" fill="rgb(252,223,19)" fg:x="929" fg:w="2"/><text x="75.9631%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.7131%" y="389" width="0.1630%" height="15" fill="rgb(211,95,25)" fg:x="929" fg:w="2"/><text x="75.9631%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.9576%" y="389" width="0.0815%" height="15" fill="rgb(251,182,27)" fg:x="932" fg:w="1"/><text x="76.2076%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9576%" y="373" width="0.0815%" height="15" fill="rgb(238,24,4)" fg:x="932" fg:w="1"/><text x="76.2076%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="75.9576%" y="357" width="0.0815%" height="15" fill="rgb(224,220,25)" fg:x="932" fg:w="1"/><text x="76.2076%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9576%" y="341" width="0.0815%" height="15" fill="rgb(239,133,26)" fg:x="932" fg:w="1"/><text x="76.2076%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9576%" y="325" width="0.0815%" height="15" fill="rgb(211,94,48)" fg:x="932" fg:w="1"/><text x="76.2076%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9576%" y="309" width="0.0815%" height="15" fill="rgb(239,87,6)" fg:x="932" fg:w="1"/><text x="76.2076%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1206%" y="357" width="0.0815%" height="15" fill="rgb(227,62,0)" fg:x="934" fg:w="1"/><text x="76.3706%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1206%" y="341" width="0.0815%" height="15" fill="rgb(211,226,4)" fg:x="934" fg:w="1"/><text x="76.3706%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.1206%" y="325" width="0.0815%" height="15" fill="rgb(253,38,52)" fg:x="934" fg:w="1"/><text x="76.3706%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="76.0391%" y="373" width="0.2445%" height="15" fill="rgb(229,126,40)" fg:x="933" fg:w="3"/><text x="76.2891%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2021%" y="357" width="0.0815%" height="15" fill="rgb(229,165,44)" fg:x="935" fg:w="1"/><text x="76.4521%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.2021%" y="341" width="0.0815%" height="15" fill="rgb(247,95,47)" fg:x="935" fg:w="1"/><text x="76.4521%" y="351.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.12%)</title><rect x="74.2461%" y="581" width="2.1190%" height="15" fill="rgb(216,140,30)" fg:x="911" fg:w="26"/><text x="74.4961%" y="591.50">e..</text></g><g><title>engine::session::state::State::close (25 samples, 2.04%)</title><rect x="74.3276%" y="565" width="2.0375%" height="15" fill="rgb(246,214,8)" fg:x="912" fg:w="25"/><text x="74.5776%" y="575.50">e..</text></g><g><title>engine::session::state::State::flush_entities (25 samples, 2.04%)</title><rect x="74.3276%" y="549" width="2.0375%" height="15" fill="rgb(227,224,15)" fg:x="912" fg:w="25"/><text x="74.5776%" y="559.50">e..</text></g><g><title>core::iter::adapters::try_process (25 samples, 2.04%)</title><rect x="74.3276%" y="533" width="2.0375%" height="15" fill="rgb(233,175,4)" fg:x="912" fg:w="25"/><text x="74.5776%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.04%)</title><rect x="74.3276%" y="517" width="2.0375%" height="15" fill="rgb(221,66,45)" fg:x="912" fg:w="25"/><text x="74.5776%" y="527.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (25 samples, 2.04%)</title><rect x="74.3276%" y="501" width="2.0375%" height="15" fill="rgb(221,178,18)" fg:x="912" fg:w="25"/><text x="74.5776%" y="511.50">e..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.65%)</title><rect x="75.7131%" y="485" width="0.6520%" height="15" fill="rgb(213,81,29)" fg:x="929" fg:w="8"/><text x="75.9631%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="75.7131%" y="469" width="0.6520%" height="15" fill="rgb(220,89,49)" fg:x="929" fg:w="8"/><text x="75.9631%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="75.7131%" y="453" width="0.6520%" height="15" fill="rgb(227,60,33)" fg:x="929" fg:w="8"/><text x="75.9631%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="75.8761%" y="437" width="0.4890%" height="15" fill="rgb(205,113,12)" fg:x="931" fg:w="6"/><text x="76.1261%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.49%)</title><rect x="75.8761%" y="421" width="0.4890%" height="15" fill="rgb(211,32,1)" fg:x="931" fg:w="6"/><text x="76.1261%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="75.8761%" y="405" width="0.4890%" height="15" fill="rgb(246,2,12)" fg:x="931" fg:w="6"/><text x="76.1261%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="76.0391%" y="389" width="0.3260%" height="15" fill="rgb(243,37,27)" fg:x="933" fg:w="4"/><text x="76.2891%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2836%" y="373" width="0.0815%" height="15" fill="rgb(248,211,31)" fg:x="936" fg:w="1"/><text x="76.5336%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3651%" y="501" width="0.0815%" height="15" fill="rgb(242,146,47)" fg:x="937" fg:w="1"/><text x="76.6151%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3651%" y="485" width="0.0815%" height="15" fill="rgb(206,70,20)" fg:x="937" fg:w="1"/><text x="76.6151%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.3651%" y="533" width="0.1630%" height="15" fill="rgb(215,10,51)" fg:x="937" fg:w="2"/><text x="76.6151%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3651%" y="517" width="0.1630%" height="15" fill="rgb(243,178,53)" fg:x="937" fg:w="2"/><text x="76.6151%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4466%" y="501" width="0.0815%" height="15" fill="rgb(233,221,20)" fg:x="938" fg:w="1"/><text x="76.6966%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.4466%" y="485" width="0.0815%" height="15" fill="rgb(218,95,35)" fg:x="938" fg:w="1"/><text x="76.6966%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.4466%" y="469" width="0.0815%" height="15" fill="rgb(229,13,5)" fg:x="938" fg:w="1"/><text x="76.6966%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.5281%" y="517" width="0.0815%" height="15" fill="rgb(252,164,30)" fg:x="939" fg:w="1"/><text x="76.7781%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5281%" y="501" width="0.0815%" height="15" fill="rgb(232,68,36)" fg:x="939" fg:w="1"/><text x="76.7781%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5281%" y="485" width="0.0815%" height="15" fill="rgb(219,59,54)" fg:x="939" fg:w="1"/><text x="76.7781%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5281%" y="469" width="0.0815%" height="15" fill="rgb(250,92,33)" fg:x="939" fg:w="1"/><text x="76.7781%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5281%" y="453" width="0.0815%" height="15" fill="rgb(229,162,54)" fg:x="939" fg:w="1"/><text x="76.7781%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5281%" y="437" width="0.0815%" height="15" fill="rgb(244,114,52)" fg:x="939" fg:w="1"/><text x="76.7781%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="76.5281%" y="533" width="0.1630%" height="15" fill="rgb(212,211,43)" fg:x="939" fg:w="2"/><text x="76.7781%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.6096%" y="517" width="0.0815%" height="15" fill="rgb(226,147,8)" fg:x="940" fg:w="1"/><text x="76.8596%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="76.6096%" y="501" width="0.0815%" height="15" fill="rgb(226,23,13)" fg:x="940" fg:w="1"/><text x="76.8596%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.6096%" y="485" width="0.0815%" height="15" fill="rgb(240,63,4)" fg:x="940" fg:w="1"/><text x="76.8596%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.6096%" y="469" width="0.0815%" height="15" fill="rgb(221,1,32)" fg:x="940" fg:w="1"/><text x="76.8596%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="76.3651%" y="565" width="0.4075%" height="15" fill="rgb(242,117,10)" fg:x="937" fg:w="5"/><text x="76.6151%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="76.3651%" y="549" width="0.4075%" height="15" fill="rgb(249,172,44)" fg:x="937" fg:w="5"/><text x="76.6151%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.6911%" y="533" width="0.0815%" height="15" fill="rgb(244,46,45)" fg:x="941" fg:w="1"/><text x="76.9411%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.6911%" y="517" width="0.0815%" height="15" fill="rgb(206,43,17)" fg:x="941" fg:w="1"/><text x="76.9411%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.6911%" y="501" width="0.0815%" height="15" fill="rgb(239,218,39)" fg:x="941" fg:w="1"/><text x="76.9411%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6911%" y="485" width="0.0815%" height="15" fill="rgb(208,169,54)" fg:x="941" fg:w="1"/><text x="76.9411%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.6911%" y="469" width="0.0815%" height="15" fill="rgb(247,25,42)" fg:x="941" fg:w="1"/><text x="76.9411%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.49%)</title><rect x="76.3651%" y="581" width="0.4890%" height="15" fill="rgb(226,23,31)" fg:x="937" fg:w="6"/><text x="76.6151%" y="591.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="76.7726%" y="565" width="0.0815%" height="15" fill="rgb(247,16,28)" fg:x="942" fg:w="1"/><text x="77.0226%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.7726%" y="549" width="0.0815%" height="15" fill="rgb(231,147,38)" fg:x="942" fg:w="1"/><text x="77.0226%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7726%" y="533" width="0.0815%" height="15" fill="rgb(253,81,48)" fg:x="942" fg:w="1"/><text x="77.0226%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8541%" y="549" width="0.0815%" height="15" fill="rgb(249,222,43)" fg:x="943" fg:w="1"/><text x="77.1041%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.9356%" y="549" width="0.0815%" height="15" fill="rgb(221,3,27)" fg:x="944" fg:w="1"/><text x="77.1856%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.9356%" y="533" width="0.0815%" height="15" fill="rgb(228,180,5)" fg:x="944" fg:w="1"/><text x="77.1856%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9356%" y="517" width="0.0815%" height="15" fill="rgb(227,131,42)" fg:x="944" fg:w="1"/><text x="77.1856%" y="527.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9356%" y="501" width="0.0815%" height="15" fill="rgb(212,3,39)" fg:x="944" fg:w="1"/><text x="77.1856%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9356%" y="485" width="0.0815%" height="15" fill="rgb(226,45,5)" fg:x="944" fg:w="1"/><text x="77.1856%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.9356%" y="469" width="0.0815%" height="15" fill="rgb(215,167,45)" fg:x="944" fg:w="1"/><text x="77.1856%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.0171%" y="549" width="0.0815%" height="15" fill="rgb(250,218,53)" fg:x="945" fg:w="1"/><text x="77.2671%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0171%" y="533" width="0.0815%" height="15" fill="rgb(207,140,0)" fg:x="945" fg:w="1"/><text x="77.2671%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.0171%" y="517" width="0.0815%" height="15" fill="rgb(238,133,51)" fg:x="945" fg:w="1"/><text x="77.2671%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.0171%" y="501" width="0.0815%" height="15" fill="rgb(218,203,53)" fg:x="945" fg:w="1"/><text x="77.2671%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="77.0171%" y="485" width="0.0815%" height="15" fill="rgb(226,184,25)" fg:x="945" fg:w="1"/><text x="77.2671%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.0171%" y="469" width="0.0815%" height="15" fill="rgb(231,121,21)" fg:x="945" fg:w="1"/><text x="77.2671%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0171%" y="453" width="0.0815%" height="15" fill="rgb(251,14,34)" fg:x="945" fg:w="1"/><text x="77.2671%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.0171%" y="437" width="0.0815%" height="15" fill="rgb(249,193,11)" fg:x="945" fg:w="1"/><text x="77.2671%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.0171%" y="421" width="0.0815%" height="15" fill="rgb(220,172,37)" fg:x="945" fg:w="1"/><text x="77.2671%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.0171%" y="405" width="0.0815%" height="15" fill="rgb(231,229,43)" fg:x="945" fg:w="1"/><text x="77.2671%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0171%" y="389" width="0.0815%" height="15" fill="rgb(250,161,5)" fg:x="945" fg:w="1"/><text x="77.2671%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0171%" y="373" width="0.0815%" height="15" fill="rgb(218,225,18)" fg:x="945" fg:w="1"/><text x="77.2671%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0171%" y="357" width="0.0815%" height="15" fill="rgb(245,45,42)" fg:x="945" fg:w="1"/><text x="77.2671%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.1801%" y="517" width="0.0815%" height="15" fill="rgb(211,115,1)" fg:x="947" fg:w="1"/><text x="77.4301%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1801%" y="501" width="0.0815%" height="15" fill="rgb(248,133,52)" fg:x="947" fg:w="1"/><text x="77.4301%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1801%" y="485" width="0.0815%" height="15" fill="rgb(238,100,21)" fg:x="947" fg:w="1"/><text x="77.4301%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1801%" y="469" width="0.0815%" height="15" fill="rgb(247,144,11)" fg:x="947" fg:w="1"/><text x="77.4301%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.1801%" y="453" width="0.0815%" height="15" fill="rgb(206,164,16)" fg:x="947" fg:w="1"/><text x="77.4301%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1801%" y="437" width="0.0815%" height="15" fill="rgb(222,34,3)" fg:x="947" fg:w="1"/><text x="77.4301%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.1801%" y="421" width="0.0815%" height="15" fill="rgb(248,82,4)" fg:x="947" fg:w="1"/><text x="77.4301%" y="431.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.57%)</title><rect x="76.8541%" y="581" width="0.5705%" height="15" fill="rgb(228,81,46)" fg:x="943" fg:w="7"/><text x="77.1041%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="76.8541%" y="565" width="0.5705%" height="15" fill="rgb(227,67,47)" fg:x="943" fg:w="7"/><text x="77.1041%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.33%)</title><rect x="77.0986%" y="549" width="0.3260%" height="15" fill="rgb(215,93,53)" fg:x="946" fg:w="4"/><text x="77.3486%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="77.1801%" y="533" width="0.2445%" height="15" fill="rgb(248,194,39)" fg:x="947" fg:w="3"/><text x="77.4301%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.2616%" y="517" width="0.1630%" height="15" fill="rgb(215,5,19)" fg:x="948" fg:w="2"/><text x="77.5116%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3431%" y="501" width="0.0815%" height="15" fill="rgb(226,215,51)" fg:x="949" fg:w="1"/><text x="77.5931%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.3431%" y="485" width="0.0815%" height="15" fill="rgb(225,56,26)" fg:x="949" fg:w="1"/><text x="77.5931%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.3431%" y="469" width="0.0815%" height="15" fill="rgb(222,75,29)" fg:x="949" fg:w="1"/><text x="77.5931%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3431%" y="453" width="0.0815%" height="15" fill="rgb(236,139,6)" fg:x="949" fg:w="1"/><text x="77.5931%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3431%" y="437" width="0.0815%" height="15" fill="rgb(223,137,36)" fg:x="949" fg:w="1"/><text x="77.5931%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="77.5876%" y="565" width="0.0815%" height="15" fill="rgb(226,99,2)" fg:x="952" fg:w="1"/><text x="77.8376%" y="575.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="77.5876%" y="549" width="0.0815%" height="15" fill="rgb(206,133,23)" fg:x="952" fg:w="1"/><text x="77.8376%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.5876%" y="533" width="0.0815%" height="15" fill="rgb(243,173,15)" fg:x="952" fg:w="1"/><text x="77.8376%" y="543.50"></text></g><g><title>&lt;replies::Json as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="77.5876%" y="517" width="0.0815%" height="15" fill="rgb(228,69,28)" fg:x="952" fg:w="1"/><text x="77.8376%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.6691%" y="533" width="0.0815%" height="15" fill="rgb(212,51,22)" fg:x="953" fg:w="1"/><text x="77.9191%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="77.7506%" y="517" width="0.0815%" height="15" fill="rgb(227,113,0)" fg:x="954" fg:w="1"/><text x="78.0006%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8321%" y="485" width="0.0815%" height="15" fill="rgb(252,84,27)" fg:x="955" fg:w="1"/><text x="78.0821%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8321%" y="469" width="0.0815%" height="15" fill="rgb(223,145,39)" fg:x="955" fg:w="1"/><text x="78.0821%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8321%" y="453" width="0.0815%" height="15" fill="rgb(239,219,30)" fg:x="955" fg:w="1"/><text x="78.0821%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8321%" y="437" width="0.0815%" height="15" fill="rgb(224,196,39)" fg:x="955" fg:w="1"/><text x="78.0821%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8321%" y="421" width="0.0815%" height="15" fill="rgb(205,35,43)" fg:x="955" fg:w="1"/><text x="78.0821%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8321%" y="405" width="0.0815%" height="15" fill="rgb(228,201,21)" fg:x="955" fg:w="1"/><text x="78.0821%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8321%" y="389" width="0.0815%" height="15" fill="rgb(237,118,16)" fg:x="955" fg:w="1"/><text x="78.0821%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8321%" y="373" width="0.0815%" height="15" fill="rgb(241,17,19)" fg:x="955" fg:w="1"/><text x="78.0821%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8321%" y="357" width="0.0815%" height="15" fill="rgb(214,10,25)" fg:x="955" fg:w="1"/><text x="78.0821%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8321%" y="341" width="0.0815%" height="15" fill="rgb(238,37,29)" fg:x="955" fg:w="1"/><text x="78.0821%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8321%" y="325" width="0.0815%" height="15" fill="rgb(253,83,25)" fg:x="955" fg:w="1"/><text x="78.0821%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8321%" y="309" width="0.0815%" height="15" fill="rgb(234,192,12)" fg:x="955" fg:w="1"/><text x="78.0821%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.9136%" y="469" width="0.1630%" height="15" fill="rgb(241,216,45)" fg:x="956" fg:w="2"/><text x="78.1636%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.9136%" y="453" width="0.1630%" height="15" fill="rgb(242,22,33)" fg:x="956" fg:w="2"/><text x="78.1636%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9136%" y="437" width="0.1630%" height="15" fill="rgb(231,105,49)" fg:x="956" fg:w="2"/><text x="78.1636%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9136%" y="421" width="0.1630%" height="15" fill="rgb(218,204,15)" fg:x="956" fg:w="2"/><text x="78.1636%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.9951%" y="405" width="0.0815%" height="15" fill="rgb(235,138,41)" fg:x="957" fg:w="1"/><text x="78.2451%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.0766%" y="453" width="0.0815%" height="15" fill="rgb(246,0,9)" fg:x="958" fg:w="1"/><text x="78.3266%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.0766%" y="437" width="0.0815%" height="15" fill="rgb(210,74,4)" fg:x="958" fg:w="1"/><text x="78.3266%" y="447.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.0766%" y="421" width="0.0815%" height="15" fill="rgb(250,60,41)" fg:x="958" fg:w="1"/><text x="78.3266%" y="431.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.0766%" y="405" width="0.0815%" height="15" fill="rgb(220,115,12)" fg:x="958" fg:w="1"/><text x="78.3266%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0766%" y="389" width="0.0815%" height="15" fill="rgb(237,100,13)" fg:x="958" fg:w="1"/><text x="78.3266%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.0766%" y="373" width="0.0815%" height="15" fill="rgb(213,55,26)" fg:x="958" fg:w="1"/><text x="78.3266%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.0766%" y="357" width="0.0815%" height="15" fill="rgb(216,17,4)" fg:x="958" fg:w="1"/><text x="78.3266%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="78.0766%" y="341" width="0.0815%" height="15" fill="rgb(220,153,47)" fg:x="958" fg:w="1"/><text x="78.3266%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.0766%" y="325" width="0.0815%" height="15" fill="rgb(215,131,9)" fg:x="958" fg:w="1"/><text x="78.3266%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="78.1581%" y="421" width="0.0815%" height="15" fill="rgb(233,46,42)" fg:x="959" fg:w="1"/><text x="78.4081%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="78.1581%" y="405" width="0.0815%" height="15" fill="rgb(226,86,7)" fg:x="959" fg:w="1"/><text x="78.4081%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.1581%" y="389" width="0.0815%" height="15" fill="rgb(239,226,21)" fg:x="959" fg:w="1"/><text x="78.4081%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1581%" y="373" width="0.0815%" height="15" fill="rgb(244,137,22)" fg:x="959" fg:w="1"/><text x="78.4081%" y="383.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.1581%" y="357" width="0.0815%" height="15" fill="rgb(211,139,35)" fg:x="959" fg:w="1"/><text x="78.4081%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.1581%" y="341" width="0.0815%" height="15" fill="rgb(214,62,50)" fg:x="959" fg:w="1"/><text x="78.4081%" y="351.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.1581%" y="325" width="0.0815%" height="15" fill="rgb(212,113,44)" fg:x="959" fg:w="1"/><text x="78.4081%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1581%" y="309" width="0.0815%" height="15" fill="rgb(226,150,43)" fg:x="959" fg:w="1"/><text x="78.4081%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.0766%" y="469" width="0.2445%" height="15" fill="rgb(250,71,37)" fg:x="958" fg:w="3"/><text x="78.3266%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="78.1581%" y="453" width="0.1630%" height="15" fill="rgb(219,76,19)" fg:x="959" fg:w="2"/><text x="78.4081%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.1581%" y="437" width="0.1630%" height="15" fill="rgb(250,39,11)" fg:x="959" fg:w="2"/><text x="78.4081%" y="447.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="78.2396%" y="421" width="0.0815%" height="15" fill="rgb(230,64,31)" fg:x="960" fg:w="1"/><text x="78.4896%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="77.9136%" y="485" width="0.4890%" height="15" fill="rgb(208,222,23)" fg:x="956" fg:w="6"/><text x="78.1636%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.3211%" y="469" width="0.0815%" height="15" fill="rgb(227,125,18)" fg:x="961" fg:w="1"/><text x="78.5711%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.3211%" y="453" width="0.0815%" height="15" fill="rgb(234,210,9)" fg:x="961" fg:w="1"/><text x="78.5711%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3211%" y="437" width="0.0815%" height="15" fill="rgb(217,127,24)" fg:x="961" fg:w="1"/><text x="78.5711%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3211%" y="421" width="0.0815%" height="15" fill="rgb(239,141,48)" fg:x="961" fg:w="1"/><text x="78.5711%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3211%" y="405" width="0.0815%" height="15" fill="rgb(227,109,8)" fg:x="961" fg:w="1"/><text x="78.5711%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.3211%" y="389" width="0.0815%" height="15" fill="rgb(235,184,23)" fg:x="961" fg:w="1"/><text x="78.5711%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3211%" y="373" width="0.0815%" height="15" fill="rgb(227,226,48)" fg:x="961" fg:w="1"/><text x="78.5711%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3211%" y="357" width="0.0815%" height="15" fill="rgb(206,150,11)" fg:x="961" fg:w="1"/><text x="78.5711%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3211%" y="341" width="0.0815%" height="15" fill="rgb(254,2,33)" fg:x="961" fg:w="1"/><text x="78.5711%" y="351.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.65%)</title><rect x="77.8321%" y="517" width="0.6520%" height="15" fill="rgb(243,160,20)" fg:x="955" fg:w="8"/><text x="78.0821%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.65%)</title><rect x="77.8321%" y="501" width="0.6520%" height="15" fill="rgb(218,208,30)" fg:x="955" fg:w="8"/><text x="78.0821%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4026%" y="485" width="0.0815%" height="15" fill="rgb(224,120,49)" fg:x="962" fg:w="1"/><text x="78.6526%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4026%" y="469" width="0.0815%" height="15" fill="rgb(246,12,2)" fg:x="962" fg:w="1"/><text x="78.6526%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4026%" y="453" width="0.0815%" height="15" fill="rgb(236,117,3)" fg:x="962" fg:w="1"/><text x="78.6526%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4026%" y="437" width="0.0815%" height="15" fill="rgb(216,128,52)" fg:x="962" fg:w="1"/><text x="78.6526%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4026%" y="421" width="0.0815%" height="15" fill="rgb(246,145,19)" fg:x="962" fg:w="1"/><text x="78.6526%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4026%" y="405" width="0.0815%" height="15" fill="rgb(222,11,46)" fg:x="962" fg:w="1"/><text x="78.6526%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.90%)</title><rect x="77.6691%" y="565" width="0.8965%" height="15" fill="rgb(245,82,36)" fg:x="953" fg:w="11"/><text x="77.9191%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.90%)</title><rect x="77.6691%" y="549" width="0.8965%" height="15" fill="rgb(250,73,51)" fg:x="953" fg:w="11"/><text x="77.9191%" y="559.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.81%)</title><rect x="77.7506%" y="533" width="0.8150%" height="15" fill="rgb(221,189,23)" fg:x="954" fg:w="10"/><text x="78.0006%" y="543.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="78.4841%" y="517" width="0.0815%" height="15" fill="rgb(210,33,7)" fg:x="963" fg:w="1"/><text x="78.7341%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="78.4841%" y="501" width="0.0815%" height="15" fill="rgb(210,107,22)" fg:x="963" fg:w="1"/><text x="78.7341%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="78.4841%" y="485" width="0.0815%" height="15" fill="rgb(222,116,37)" fg:x="963" fg:w="1"/><text x="78.7341%" y="495.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="78.4841%" y="469" width="0.0815%" height="15" fill="rgb(254,17,48)" fg:x="963" fg:w="1"/><text x="78.7341%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.4841%" y="453" width="0.0815%" height="15" fill="rgb(224,36,32)" fg:x="963" fg:w="1"/><text x="78.7341%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.4841%" y="437" width="0.0815%" height="15" fill="rgb(232,90,46)" fg:x="963" fg:w="1"/><text x="78.7341%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4841%" y="421" width="0.0815%" height="15" fill="rgb(241,66,40)" fg:x="963" fg:w="1"/><text x="78.7341%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4841%" y="405" width="0.0815%" height="15" fill="rgb(249,184,29)" fg:x="963" fg:w="1"/><text x="78.7341%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4841%" y="389" width="0.0815%" height="15" fill="rgb(231,181,1)" fg:x="963" fg:w="1"/><text x="78.7341%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.4841%" y="373" width="0.0815%" height="15" fill="rgb(224,94,2)" fg:x="963" fg:w="1"/><text x="78.7341%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="78.4841%" y="357" width="0.0815%" height="15" fill="rgb(229,170,15)" fg:x="963" fg:w="1"/><text x="78.7341%" y="367.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5656%" y="501" width="0.0815%" height="15" fill="rgb(240,127,35)" fg:x="964" fg:w="1"/><text x="78.8156%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.7286%" y="437" width="0.0815%" height="15" fill="rgb(248,196,34)" fg:x="966" fg:w="1"/><text x="78.9786%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.7286%" y="421" width="0.0815%" height="15" fill="rgb(236,137,7)" fg:x="966" fg:w="1"/><text x="78.9786%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.8916%" y="421" width="0.0815%" height="15" fill="rgb(235,127,16)" fg:x="968" fg:w="1"/><text x="79.1416%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.0546%" y="405" width="0.0815%" height="15" fill="rgb(250,192,54)" fg:x="970" fg:w="1"/><text x="79.3046%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0546%" y="389" width="0.0815%" height="15" fill="rgb(218,98,20)" fg:x="970" fg:w="1"/><text x="79.3046%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0546%" y="373" width="0.0815%" height="15" fill="rgb(230,176,47)" fg:x="970" fg:w="1"/><text x="79.3046%" y="383.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="79.1361%" y="405" width="0.2445%" height="15" fill="rgb(244,2,33)" fg:x="971" fg:w="3"/><text x="79.3861%" y="415.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.1361%" y="389" width="0.2445%" height="15" fill="rgb(231,100,17)" fg:x="971" fg:w="3"/><text x="79.3861%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="79.2176%" y="373" width="0.1630%" height="15" fill="rgb(245,23,12)" fg:x="972" fg:w="2"/><text x="79.4676%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="79.2176%" y="357" width="0.1630%" height="15" fill="rgb(249,55,22)" fg:x="972" fg:w="2"/><text x="79.4676%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="79.2176%" y="341" width="0.1630%" height="15" fill="rgb(207,134,9)" fg:x="972" fg:w="2"/><text x="79.4676%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="79.2176%" y="325" width="0.1630%" height="15" fill="rgb(218,134,0)" fg:x="972" fg:w="2"/><text x="79.4676%" y="335.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="79.2176%" y="309" width="0.1630%" height="15" fill="rgb(213,212,33)" fg:x="972" fg:w="2"/><text x="79.4676%" y="319.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.3806%" y="389" width="0.1630%" height="15" fill="rgb(252,106,18)" fg:x="974" fg:w="2"/><text x="79.6306%" y="399.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.3806%" y="373" width="0.1630%" height="15" fill="rgb(208,126,42)" fg:x="974" fg:w="2"/><text x="79.6306%" y="383.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4621%" y="357" width="0.0815%" height="15" fill="rgb(246,175,29)" fg:x="975" fg:w="1"/><text x="79.7121%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4621%" y="341" width="0.0815%" height="15" fill="rgb(215,13,50)" fg:x="975" fg:w="1"/><text x="79.7121%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="78.9731%" y="421" width="0.6520%" height="15" fill="rgb(216,172,15)" fg:x="969" fg:w="8"/><text x="79.2231%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.3806%" y="405" width="0.2445%" height="15" fill="rgb(212,103,13)" fg:x="974" fg:w="3"/><text x="79.6306%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5436%" y="389" width="0.0815%" height="15" fill="rgb(231,171,36)" fg:x="976" fg:w="1"/><text x="79.7936%" y="399.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.5436%" y="373" width="0.0815%" height="15" fill="rgb(250,123,20)" fg:x="976" fg:w="1"/><text x="79.7936%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5436%" y="357" width="0.0815%" height="15" fill="rgb(212,53,50)" fg:x="976" fg:w="1"/><text x="79.7936%" y="367.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.98%)</title><rect x="78.7286%" y="453" width="0.9780%" height="15" fill="rgb(243,54,12)" fg:x="966" fg:w="12"/><text x="78.9786%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="78.8101%" y="437" width="0.8965%" height="15" fill="rgb(234,101,34)" fg:x="967" fg:w="11"/><text x="79.0601%" y="447.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6251%" y="421" width="0.0815%" height="15" fill="rgb(254,67,22)" fg:x="977" fg:w="1"/><text x="79.8751%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7066%" y="421" width="0.0815%" height="15" fill="rgb(250,35,47)" fg:x="978" fg:w="1"/><text x="79.9566%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.7881%" y="389" width="0.1630%" height="15" fill="rgb(226,126,38)" fg:x="979" fg:w="2"/><text x="80.0381%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="80.0326%" y="373" width="0.1630%" height="15" fill="rgb(216,138,53)" fg:x="982" fg:w="2"/><text x="80.2826%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.0326%" y="357" width="0.1630%" height="15" fill="rgb(246,199,43)" fg:x="982" fg:w="2"/><text x="80.2826%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="80.0326%" y="341" width="0.1630%" height="15" fill="rgb(232,125,11)" fg:x="982" fg:w="2"/><text x="80.2826%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2771%" y="357" width="0.0815%" height="15" fill="rgb(218,219,45)" fg:x="985" fg:w="1"/><text x="80.5271%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="79.7066%" y="453" width="0.7335%" height="15" fill="rgb(216,102,54)" fg:x="978" fg:w="9"/><text x="79.9566%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="79.7066%" y="437" width="0.7335%" height="15" fill="rgb(250,228,7)" fg:x="978" fg:w="9"/><text x="79.9566%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="79.7881%" y="421" width="0.6520%" height="15" fill="rgb(226,125,25)" fg:x="979" fg:w="8"/><text x="80.0381%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="79.7881%" y="405" width="0.6520%" height="15" fill="rgb(224,165,27)" fg:x="979" fg:w="8"/><text x="80.0381%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="79.9511%" y="389" width="0.4890%" height="15" fill="rgb(233,86,3)" fg:x="981" fg:w="6"/><text x="80.2011%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.1956%" y="373" width="0.2445%" height="15" fill="rgb(228,116,20)" fg:x="984" fg:w="3"/><text x="80.4456%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.3586%" y="357" width="0.0815%" height="15" fill="rgb(209,192,17)" fg:x="986" fg:w="1"/><text x="80.6086%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3586%" y="341" width="0.0815%" height="15" fill="rgb(224,88,34)" fg:x="986" fg:w="1"/><text x="80.6086%" y="351.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.5216%" y="437" width="0.0815%" height="15" fill="rgb(233,38,6)" fg:x="988" fg:w="1"/><text x="80.7716%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5216%" y="421" width="0.0815%" height="15" fill="rgb(212,59,30)" fg:x="988" fg:w="1"/><text x="80.7716%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6031%" y="405" width="0.0815%" height="15" fill="rgb(213,80,3)" fg:x="989" fg:w="1"/><text x="80.8531%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6846%" y="405" width="0.0815%" height="15" fill="rgb(251,178,7)" fg:x="990" fg:w="1"/><text x="80.9346%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.6846%" y="389" width="0.0815%" height="15" fill="rgb(213,154,26)" fg:x="990" fg:w="1"/><text x="80.9346%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.6846%" y="373" width="0.0815%" height="15" fill="rgb(238,165,49)" fg:x="990" fg:w="1"/><text x="80.9346%" y="383.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7661%" y="405" width="0.0815%" height="15" fill="rgb(248,91,46)" fg:x="991" fg:w="1"/><text x="81.0161%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8476%" y="357" width="0.0815%" height="15" fill="rgb(244,21,52)" fg:x="992" fg:w="1"/><text x="81.0976%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8476%" y="341" width="0.0815%" height="15" fill="rgb(247,122,20)" fg:x="992" fg:w="1"/><text x="81.0976%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8476%" y="325" width="0.0815%" height="15" fill="rgb(218,27,9)" fg:x="992" fg:w="1"/><text x="81.0976%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0106%" y="325" width="0.0815%" height="15" fill="rgb(246,7,6)" fg:x="994" fg:w="1"/><text x="81.2606%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0106%" y="309" width="0.0815%" height="15" fill="rgb(227,135,54)" fg:x="994" fg:w="1"/><text x="81.2606%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0106%" y="293" width="0.0815%" height="15" fill="rgb(247,14,11)" fg:x="994" fg:w="1"/><text x="81.2606%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.0106%" y="341" width="0.1630%" height="15" fill="rgb(206,149,34)" fg:x="994" fg:w="2"/><text x="81.2606%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0921%" y="325" width="0.0815%" height="15" fill="rgb(227,228,4)" fg:x="995" fg:w="1"/><text x="81.3421%" y="335.50"></text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.69%)</title><rect x="78.5656%" y="517" width="2.6895%" height="15" fill="rgb(238,218,28)" fg:x="964" fg:w="33"/><text x="78.8156%" y="527.50">en..</text></g><g><title>core::iter::adapters::try_process (32 samples, 2.61%)</title><rect x="78.6471%" y="501" width="2.6080%" height="15" fill="rgb(252,86,40)" fg:x="965" fg:w="32"/><text x="78.8971%" y="511.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 2.61%)</title><rect x="78.6471%" y="485" width="2.6080%" height="15" fill="rgb(251,225,11)" fg:x="965" fg:w="32"/><text x="78.8971%" y="495.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.53%)</title><rect x="78.7286%" y="469" width="2.5265%" height="15" fill="rgb(206,46,49)" fg:x="966" fg:w="31"/><text x="78.9786%" y="479.50">en..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="80.4401%" y="453" width="0.8150%" height="15" fill="rgb(245,128,24)" fg:x="987" fg:w="10"/><text x="80.6901%" y="463.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="80.6031%" y="437" width="0.6520%" height="15" fill="rgb(219,177,34)" fg:x="989" fg:w="8"/><text x="80.8531%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="80.6031%" y="421" width="0.6520%" height="15" fill="rgb(218,60,48)" fg:x="989" fg:w="8"/><text x="80.8531%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.41%)</title><rect x="80.8476%" y="405" width="0.4075%" height="15" fill="rgb(221,11,5)" fg:x="992" fg:w="5"/><text x="81.0976%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.41%)</title><rect x="80.8476%" y="389" width="0.4075%" height="15" fill="rgb(220,148,13)" fg:x="992" fg:w="5"/><text x="81.0976%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="80.8476%" y="373" width="0.4075%" height="15" fill="rgb(210,16,3)" fg:x="992" fg:w="5"/><text x="81.0976%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="80.9291%" y="357" width="0.3260%" height="15" fill="rgb(236,80,2)" fg:x="993" fg:w="4"/><text x="81.1791%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1736%" y="341" width="0.0815%" height="15" fill="rgb(239,129,19)" fg:x="996" fg:w="1"/><text x="81.4236%" y="351.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.77%)</title><rect x="78.5656%" y="565" width="2.7710%" height="15" fill="rgb(220,106,35)" fg:x="964" fg:w="34"/><text x="78.8156%" y="575.50">en..</text></g><g><title>engine::session::Session::save_changes (34 samples, 2.77%)</title><rect x="78.5656%" y="549" width="2.7710%" height="15" fill="rgb(252,139,45)" fg:x="964" fg:w="34"/><text x="78.8156%" y="559.50">en..</text></g><g><title>engine::session::state::State::close (34 samples, 2.77%)</title><rect x="78.5656%" y="533" width="2.7710%" height="15" fill="rgb(229,8,36)" fg:x="964" fg:w="34"/><text x="78.8156%" y="543.50">en..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="81.2551%" y="517" width="0.0815%" height="15" fill="rgb(230,126,33)" fg:x="997" fg:w="1"/><text x="81.5051%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3366%" y="485" width="0.0815%" height="15" fill="rgb(239,140,21)" fg:x="998" fg:w="1"/><text x="81.5866%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.3366%" y="533" width="0.1630%" height="15" fill="rgb(254,104,9)" fg:x="998" fg:w="2"/><text x="81.5866%" y="543.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.3366%" y="517" width="0.1630%" height="15" fill="rgb(239,52,14)" fg:x="998" fg:w="2"/><text x="81.5866%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.3366%" y="501" width="0.1630%" height="15" fill="rgb(208,227,44)" fg:x="998" fg:w="2"/><text x="81.5866%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4181%" y="485" width="0.0815%" height="15" fill="rgb(246,18,19)" fg:x="999" fg:w="1"/><text x="81.6681%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4181%" y="469" width="0.0815%" height="15" fill="rgb(235,228,25)" fg:x="999" fg:w="1"/><text x="81.6681%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4181%" y="453" width="0.0815%" height="15" fill="rgb(240,156,20)" fg:x="999" fg:w="1"/><text x="81.6681%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.4181%" y="437" width="0.0815%" height="15" fill="rgb(224,8,20)" fg:x="999" fg:w="1"/><text x="81.6681%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4181%" y="421" width="0.0815%" height="15" fill="rgb(214,12,52)" fg:x="999" fg:w="1"/><text x="81.6681%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4181%" y="405" width="0.0815%" height="15" fill="rgb(211,220,47)" fg:x="999" fg:w="1"/><text x="81.6681%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4181%" y="389" width="0.0815%" height="15" fill="rgb(250,173,5)" fg:x="999" fg:w="1"/><text x="81.6681%" y="399.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.4996%" y="533" width="0.0815%" height="15" fill="rgb(250,125,52)" fg:x="1000" fg:w="1"/><text x="81.7496%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4996%" y="517" width="0.0815%" height="15" fill="rgb(209,133,18)" fg:x="1000" fg:w="1"/><text x="81.7496%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4996%" y="501" width="0.0815%" height="15" fill="rgb(216,173,22)" fg:x="1000" fg:w="1"/><text x="81.7496%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.4996%" y="485" width="0.0815%" height="15" fill="rgb(205,3,22)" fg:x="1000" fg:w="1"/><text x="81.7496%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="81.4996%" y="469" width="0.0815%" height="15" fill="rgb(248,22,20)" fg:x="1000" fg:w="1"/><text x="81.7496%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.5811%" y="485" width="0.1630%" height="15" fill="rgb(233,6,29)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.5811%" y="469" width="0.1630%" height="15" fill="rgb(240,22,54)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.5811%" y="453" width="0.1630%" height="15" fill="rgb(231,133,32)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.5811%" y="437" width="0.1630%" height="15" fill="rgb(248,193,4)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="81.5811%" y="421" width="0.1630%" height="15" fill="rgb(211,178,46)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.5811%" y="405" width="0.1630%" height="15" fill="rgb(224,5,42)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="81.5811%" y="389" width="0.1630%" height="15" fill="rgb(239,176,25)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="81.5811%" y="373" width="0.1630%" height="15" fill="rgb(245,187,50)" fg:x="1001" fg:w="2"/><text x="81.8311%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="81.6626%" y="357" width="0.0815%" height="15" fill="rgb(248,24,15)" fg:x="1002" fg:w="1"/><text x="81.9126%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6626%" y="341" width="0.0815%" height="15" fill="rgb(205,166,13)" fg:x="1002" fg:w="1"/><text x="81.9126%" y="351.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.57%)</title><rect x="81.3366%" y="565" width="0.5705%" height="15" fill="rgb(208,114,23)" fg:x="998" fg:w="7"/><text x="81.5866%" y="575.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.57%)</title><rect x="81.3366%" y="549" width="0.5705%" height="15" fill="rgb(239,127,18)" fg:x="998" fg:w="7"/><text x="81.5866%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.33%)</title><rect x="81.5811%" y="533" width="0.3260%" height="15" fill="rgb(219,154,28)" fg:x="1001" fg:w="4"/><text x="81.8311%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.33%)</title><rect x="81.5811%" y="517" width="0.3260%" height="15" fill="rgb(225,157,23)" fg:x="1001" fg:w="4"/><text x="81.8311%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.33%)</title><rect x="81.5811%" y="501" width="0.3260%" height="15" fill="rgb(219,8,6)" fg:x="1001" fg:w="4"/><text x="81.8311%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.7441%" y="485" width="0.1630%" height="15" fill="rgb(212,47,6)" fg:x="1003" fg:w="2"/><text x="81.9941%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.7441%" y="469" width="0.1630%" height="15" fill="rgb(224,190,4)" fg:x="1003" fg:w="2"/><text x="81.9941%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8256%" y="453" width="0.0815%" height="15" fill="rgb(239,183,29)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8256%" y="437" width="0.0815%" height="15" fill="rgb(213,57,7)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.8256%" y="421" width="0.0815%" height="15" fill="rgb(216,148,1)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8256%" y="405" width="0.0815%" height="15" fill="rgb(236,182,29)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8256%" y="389" width="0.0815%" height="15" fill="rgb(244,120,48)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8256%" y="373" width="0.0815%" height="15" fill="rgb(206,71,34)" fg:x="1004" fg:w="1"/><text x="82.0756%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="81.9071%" y="565" width="0.0815%" height="15" fill="rgb(242,32,6)" fg:x="1005" fg:w="1"/><text x="82.1571%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.9071%" y="549" width="0.0815%" height="15" fill="rgb(241,35,3)" fg:x="1005" fg:w="1"/><text x="82.1571%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.9071%" y="533" width="0.0815%" height="15" fill="rgb(222,62,19)" fg:x="1005" fg:w="1"/><text x="82.1571%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9071%" y="517" width="0.0815%" height="15" fill="rgb(223,110,41)" fg:x="1005" fg:w="1"/><text x="82.1571%" y="527.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="81.9886%" y="549" width="0.0815%" height="15" fill="rgb(208,224,4)" fg:x="1006" fg:w="1"/><text x="82.2386%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="81.9886%" y="533" width="0.0815%" height="15" fill="rgb(241,137,19)" fg:x="1006" fg:w="1"/><text x="82.2386%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9886%" y="517" width="0.0815%" height="15" fill="rgb(244,24,17)" fg:x="1006" fg:w="1"/><text x="82.2386%" y="527.50"></text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="81.9886%" y="565" width="0.1630%" height="15" fill="rgb(245,178,49)" fg:x="1006" fg:w="2"/><text x="82.2386%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="82.0701%" y="549" width="0.0815%" height="15" fill="rgb(219,160,38)" fg:x="1007" fg:w="1"/><text x="82.3201%" y="559.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="82.0701%" y="533" width="0.0815%" height="15" fill="rgb(228,137,14)" fg:x="1007" fg:w="1"/><text x="82.3201%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0701%" y="517" width="0.0815%" height="15" fill="rgb(237,134,11)" fg:x="1007" fg:w="1"/><text x="82.3201%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1516%" y="485" width="0.0815%" height="15" fill="rgb(211,126,44)" fg:x="1008" fg:w="1"/><text x="82.4016%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.1516%" y="517" width="0.1630%" height="15" fill="rgb(226,171,33)" fg:x="1008" fg:w="2"/><text x="82.4016%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.1516%" y="501" width="0.1630%" height="15" fill="rgb(253,99,13)" fg:x="1008" fg:w="2"/><text x="82.4016%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2331%" y="485" width="0.0815%" height="15" fill="rgb(244,48,7)" fg:x="1009" fg:w="1"/><text x="82.4831%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.2331%" y="469" width="0.0815%" height="15" fill="rgb(244,217,54)" fg:x="1009" fg:w="1"/><text x="82.4831%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2331%" y="453" width="0.0815%" height="15" fill="rgb(224,15,18)" fg:x="1009" fg:w="1"/><text x="82.4831%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2331%" y="437" width="0.0815%" height="15" fill="rgb(244,99,12)" fg:x="1009" fg:w="1"/><text x="82.4831%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.3146%" y="517" width="0.0815%" height="15" fill="rgb(233,226,8)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.3146%" y="501" width="0.0815%" height="15" fill="rgb(229,211,3)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3146%" y="485" width="0.0815%" height="15" fill="rgb(216,140,21)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3146%" y="469" width="0.0815%" height="15" fill="rgb(234,122,30)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.3146%" y="453" width="0.0815%" height="15" fill="rgb(236,25,46)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3146%" y="437" width="0.0815%" height="15" fill="rgb(217,52,54)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3146%" y="421" width="0.0815%" height="15" fill="rgb(222,29,26)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3146%" y="405" width="0.0815%" height="15" fill="rgb(216,177,29)" fg:x="1010" fg:w="1"/><text x="82.5646%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="82.1516%" y="549" width="0.4075%" height="15" fill="rgb(247,136,51)" fg:x="1008" fg:w="5"/><text x="82.4016%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="82.1516%" y="533" width="0.4075%" height="15" fill="rgb(231,47,47)" fg:x="1008" fg:w="5"/><text x="82.4016%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="82.3961%" y="517" width="0.1630%" height="15" fill="rgb(211,192,36)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="82.3961%" y="501" width="0.1630%" height="15" fill="rgb(229,156,32)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.3961%" y="485" width="0.1630%" height="15" fill="rgb(248,213,20)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.3961%" y="469" width="0.1630%" height="15" fill="rgb(217,64,7)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.3961%" y="453" width="0.1630%" height="15" fill="rgb(232,142,8)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.3961%" y="437" width="0.1630%" height="15" fill="rgb(224,92,44)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.3961%" y="421" width="0.1630%" height="15" fill="rgb(214,169,17)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.3961%" y="405" width="0.1630%" height="15" fill="rgb(210,59,37)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.3961%" y="389" width="0.1630%" height="15" fill="rgb(214,116,48)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.3961%" y="373" width="0.1630%" height="15" fill="rgb(244,191,6)" fg:x="1011" fg:w="2"/><text x="82.6461%" y="383.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.5591%" y="533" width="0.0815%" height="15" fill="rgb(241,50,52)" fg:x="1013" fg:w="1"/><text x="82.8091%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5591%" y="517" width="0.0815%" height="15" fill="rgb(236,75,39)" fg:x="1013" fg:w="1"/><text x="82.8091%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.5591%" y="501" width="0.0815%" height="15" fill="rgb(236,99,0)" fg:x="1013" fg:w="1"/><text x="82.8091%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="82.5591%" y="485" width="0.0815%" height="15" fill="rgb(207,202,15)" fg:x="1013" fg:w="1"/><text x="82.8091%" y="495.50"></text></g><g><title>plugins_core::build::Build::occupying (7 samples, 0.57%)</title><rect x="82.1516%" y="565" width="0.5705%" height="15" fill="rgb(233,207,14)" fg:x="1008" fg:w="7"/><text x="82.4016%" y="575.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="82.5591%" y="549" width="0.1630%" height="15" fill="rgb(226,27,51)" fg:x="1013" fg:w="2"/><text x="82.8091%" y="559.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="82.6406%" y="533" width="0.0815%" height="15" fill="rgb(206,104,42)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.6406%" y="517" width="0.0815%" height="15" fill="rgb(212,225,4)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="527.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.6406%" y="501" width="0.0815%" height="15" fill="rgb(233,96,42)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.6406%" y="485" width="0.0815%" height="15" fill="rgb(229,21,32)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.6406%" y="469" width="0.0815%" height="15" fill="rgb(226,216,24)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6406%" y="453" width="0.0815%" height="15" fill="rgb(221,163,17)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.6406%" y="437" width="0.0815%" height="15" fill="rgb(216,216,42)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.6406%" y="421" width="0.0815%" height="15" fill="rgb(240,118,7)" fg:x="1014" fg:w="1"/><text x="82.8906%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7221%" y="437" width="0.0815%" height="15" fill="rgb(221,67,37)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7221%" y="421" width="0.0815%" height="15" fill="rgb(241,32,44)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7221%" y="405" width="0.0815%" height="15" fill="rgb(235,204,43)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7221%" y="389" width="0.0815%" height="15" fill="rgb(213,116,10)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7221%" y="373" width="0.0815%" height="15" fill="rgb(239,15,48)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7221%" y="357" width="0.0815%" height="15" fill="rgb(207,123,36)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7221%" y="341" width="0.0815%" height="15" fill="rgb(209,103,30)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7221%" y="325" width="0.0815%" height="15" fill="rgb(238,100,19)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7221%" y="309" width="0.0815%" height="15" fill="rgb(244,30,14)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7221%" y="293" width="0.0815%" height="15" fill="rgb(249,174,6)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7221%" y="277" width="0.0815%" height="15" fill="rgb(235,213,41)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7221%" y="261" width="0.0815%" height="15" fill="rgb(213,118,6)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7221%" y="245" width="0.0815%" height="15" fill="rgb(235,44,51)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7221%" y="229" width="0.0815%" height="15" fill="rgb(217,9,53)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7221%" y="213" width="0.0815%" height="15" fill="rgb(237,172,34)" fg:x="1015" fg:w="1"/><text x="82.9721%" y="223.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.7221%" y="501" width="0.1630%" height="15" fill="rgb(206,206,11)" fg:x="1015" fg:w="2"/><text x="82.9721%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.7221%" y="485" width="0.1630%" height="15" fill="rgb(214,149,29)" fg:x="1015" fg:w="2"/><text x="82.9721%" y="495.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.7221%" y="469" width="0.1630%" height="15" fill="rgb(208,123,3)" fg:x="1015" fg:w="2"/><text x="82.9721%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.7221%" y="453" width="0.1630%" height="15" fill="rgb(229,126,4)" fg:x="1015" fg:w="2"/><text x="82.9721%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8036%" y="437" width="0.0815%" height="15" fill="rgb(222,92,36)" fg:x="1016" fg:w="1"/><text x="83.0536%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="82.8036%" y="421" width="0.0815%" height="15" fill="rgb(216,39,41)" fg:x="1016" fg:w="1"/><text x="83.0536%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.33%)</title><rect x="82.7221%" y="517" width="0.3260%" height="15" fill="rgb(253,127,28)" fg:x="1015" fg:w="4"/><text x="82.9721%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8851%" y="501" width="0.1630%" height="15" fill="rgb(249,152,51)" fg:x="1017" fg:w="2"/><text x="83.1351%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.8851%" y="485" width="0.1630%" height="15" fill="rgb(209,123,42)" fg:x="1017" fg:w="2"/><text x="83.1351%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.9666%" y="469" width="0.0815%" height="15" fill="rgb(241,118,22)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="82.9666%" y="453" width="0.0815%" height="15" fill="rgb(208,25,7)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.9666%" y="437" width="0.0815%" height="15" fill="rgb(243,144,39)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9666%" y="421" width="0.0815%" height="15" fill="rgb(250,50,5)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.9666%" y="405" width="0.0815%" height="15" fill="rgb(207,67,11)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9666%" y="389" width="0.0815%" height="15" fill="rgb(245,204,40)" fg:x="1018" fg:w="1"/><text x="83.2166%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0481%" y="485" width="0.0815%" height="15" fill="rgb(238,228,24)" fg:x="1019" fg:w="1"/><text x="83.2981%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="83.0481%" y="517" width="0.1630%" height="15" fill="rgb(217,116,22)" fg:x="1019" fg:w="2"/><text x="83.2981%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.0481%" y="501" width="0.1630%" height="15" fill="rgb(234,98,12)" fg:x="1019" fg:w="2"/><text x="83.2981%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1296%" y="485" width="0.0815%" height="15" fill="rgb(242,170,50)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1296%" y="469" width="0.0815%" height="15" fill="rgb(235,7,5)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1296%" y="453" width="0.0815%" height="15" fill="rgb(241,114,28)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.1296%" y="437" width="0.0815%" height="15" fill="rgb(246,112,42)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1296%" y="421" width="0.0815%" height="15" fill="rgb(248,228,14)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1296%" y="405" width="0.0815%" height="15" fill="rgb(208,133,18)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1296%" y="389" width="0.0815%" height="15" fill="rgb(207,35,49)" fg:x="1020" fg:w="1"/><text x="83.3796%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="83.2111%" y="469" width="0.0815%" height="15" fill="rgb(205,68,36)" fg:x="1021" fg:w="1"/><text x="83.4611%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.2111%" y="485" width="0.1630%" height="15" fill="rgb(245,62,40)" fg:x="1021" fg:w="2"/><text x="83.4611%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.2926%" y="469" width="0.0815%" height="15" fill="rgb(228,27,24)" fg:x="1022" fg:w="1"/><text x="83.5426%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2926%" y="453" width="0.0815%" height="15" fill="rgb(253,19,12)" fg:x="1022" fg:w="1"/><text x="83.5426%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2926%" y="437" width="0.0815%" height="15" fill="rgb(232,28,20)" fg:x="1022" fg:w="1"/><text x="83.5426%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3741%" y="453" width="0.0815%" height="15" fill="rgb(218,35,51)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3741%" y="437" width="0.0815%" height="15" fill="rgb(212,90,40)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3741%" y="421" width="0.0815%" height="15" fill="rgb(220,172,12)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3741%" y="405" width="0.0815%" height="15" fill="rgb(226,159,20)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3741%" y="389" width="0.0815%" height="15" fill="rgb(234,205,16)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3741%" y="373" width="0.0815%" height="15" fill="rgb(207,9,39)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3741%" y="357" width="0.0815%" height="15" fill="rgb(249,143,15)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3741%" y="341" width="0.0815%" height="15" fill="rgb(253,133,29)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.3741%" y="325" width="0.0815%" height="15" fill="rgb(221,187,0)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.3741%" y="309" width="0.0815%" height="15" fill="rgb(205,204,26)" fg:x="1023" fg:w="1"/><text x="83.6241%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.3741%" y="485" width="0.1630%" height="15" fill="rgb(224,68,54)" fg:x="1023" fg:w="2"/><text x="83.6241%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.3741%" y="469" width="0.1630%" height="15" fill="rgb(209,67,4)" fg:x="1023" fg:w="2"/><text x="83.6241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.4556%" y="453" width="0.0815%" height="15" fill="rgb(228,229,18)" fg:x="1024" fg:w="1"/><text x="83.7056%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4556%" y="437" width="0.0815%" height="15" fill="rgb(231,89,13)" fg:x="1024" fg:w="1"/><text x="83.7056%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.4556%" y="421" width="0.0815%" height="15" fill="rgb(210,182,18)" fg:x="1024" fg:w="1"/><text x="83.7056%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.4556%" y="405" width="0.0815%" height="15" fill="rgb(240,105,2)" fg:x="1024" fg:w="1"/><text x="83.7056%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (76 samples, 6.19%)</title><rect x="77.4246%" y="581" width="6.1940%" height="15" fill="rgb(207,170,50)" fg:x="950" fg:w="76"/><text x="77.6746%" y="591.50">plugins_..</text></g><g><title>plugins_core::build::Build::wearing (11 samples, 0.90%)</title><rect x="82.7221%" y="565" width="0.8965%" height="15" fill="rgb(232,133,24)" fg:x="1015" fg:w="11"/><text x="82.9721%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.90%)</title><rect x="82.7221%" y="549" width="0.8965%" height="15" fill="rgb(235,166,27)" fg:x="1015" fg:w="11"/><text x="82.9721%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.90%)</title><rect x="82.7221%" y="533" width="0.8965%" height="15" fill="rgb(209,19,13)" fg:x="1015" fg:w="11"/><text x="82.9721%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.41%)</title><rect x="83.2111%" y="517" width="0.4075%" height="15" fill="rgb(226,79,39)" fg:x="1021" fg:w="5"/><text x="83.4611%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.41%)</title><rect x="83.2111%" y="501" width="0.4075%" height="15" fill="rgb(222,163,10)" fg:x="1021" fg:w="5"/><text x="83.4611%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.5371%" y="485" width="0.0815%" height="15" fill="rgb(214,44,19)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.5371%" y="469" width="0.0815%" height="15" fill="rgb(210,217,13)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.5371%" y="453" width="0.0815%" height="15" fill="rgb(237,61,54)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.5371%" y="437" width="0.0815%" height="15" fill="rgb(226,184,24)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="447.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.5371%" y="421" width="0.0815%" height="15" fill="rgb(223,226,4)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.5371%" y="405" width="0.0815%" height="15" fill="rgb(210,26,41)" fg:x="1025" fg:w="1"/><text x="83.7871%" y="415.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="83.6186%" y="581" width="0.0815%" height="15" fill="rgb(220,221,6)" fg:x="1026" fg:w="1"/><text x="83.8686%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="83.6186%" y="565" width="0.0815%" height="15" fill="rgb(225,89,49)" fg:x="1026" fg:w="1"/><text x="83.8686%" y="575.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.7001%" y="533" width="0.0815%" height="15" fill="rgb(218,70,45)" fg:x="1027" fg:w="1"/><text x="83.9501%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.7001%" y="517" width="0.0815%" height="15" fill="rgb(238,166,21)" fg:x="1027" fg:w="1"/><text x="83.9501%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.7001%" y="501" width="0.0815%" height="15" fill="rgb(224,141,44)" fg:x="1027" fg:w="1"/><text x="83.9501%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.7001%" y="485" width="0.0815%" height="15" fill="rgb(230,12,49)" fg:x="1027" fg:w="1"/><text x="83.9501%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="83.7001%" y="549" width="0.1630%" height="15" fill="rgb(212,174,12)" fg:x="1027" fg:w="2"/><text x="83.9501%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.7816%" y="533" width="0.0815%" height="15" fill="rgb(246,67,9)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.7816%" y="517" width="0.0815%" height="15" fill="rgb(239,35,23)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7816%" y="501" width="0.0815%" height="15" fill="rgb(211,167,0)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7816%" y="485" width="0.0815%" height="15" fill="rgb(225,119,45)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.7816%" y="469" width="0.0815%" height="15" fill="rgb(210,162,6)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.7816%" y="453" width="0.0815%" height="15" fill="rgb(208,118,35)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.7816%" y="437" width="0.0815%" height="15" fill="rgb(239,4,53)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7816%" y="421" width="0.0815%" height="15" fill="rgb(213,130,21)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7816%" y="405" width="0.0815%" height="15" fill="rgb(235,148,0)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.7816%" y="389" width="0.0815%" height="15" fill="rgb(244,224,18)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.7816%" y="373" width="0.0815%" height="15" fill="rgb(211,214,4)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.7816%" y="357" width="0.0815%" height="15" fill="rgb(206,119,25)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.7816%" y="341" width="0.0815%" height="15" fill="rgb(243,93,47)" fg:x="1028" fg:w="1"/><text x="84.0316%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8631%" y="485" width="0.0815%" height="15" fill="rgb(224,194,6)" fg:x="1029" fg:w="1"/><text x="84.1131%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8631%" y="469" width="0.0815%" height="15" fill="rgb(243,229,6)" fg:x="1029" fg:w="1"/><text x="84.1131%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8631%" y="453" width="0.0815%" height="15" fill="rgb(207,23,50)" fg:x="1029" fg:w="1"/><text x="84.1131%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8631%" y="437" width="0.0815%" height="15" fill="rgb(253,192,32)" fg:x="1029" fg:w="1"/><text x="84.1131%" y="447.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="83.7001%" y="581" width="0.4075%" height="15" fill="rgb(213,21,6)" fg:x="1027" fg:w="5"/><text x="83.9501%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="83.7001%" y="565" width="0.4075%" height="15" fill="rgb(243,151,13)" fg:x="1027" fg:w="5"/><text x="83.9501%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="83.8631%" y="549" width="0.2445%" height="15" fill="rgb(233,165,41)" fg:x="1029" fg:w="3"/><text x="84.1131%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="83.8631%" y="533" width="0.2445%" height="15" fill="rgb(246,176,45)" fg:x="1029" fg:w="3"/><text x="84.1131%" y="543.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="83.8631%" y="517" width="0.2445%" height="15" fill="rgb(217,170,52)" fg:x="1029" fg:w="3"/><text x="84.1131%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="83.8631%" y="501" width="0.2445%" height="15" fill="rgb(214,203,54)" fg:x="1029" fg:w="3"/><text x="84.1131%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.9446%" y="485" width="0.1630%" height="15" fill="rgb(248,215,49)" fg:x="1030" fg:w="2"/><text x="84.1946%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.0261%" y="469" width="0.0815%" height="15" fill="rgb(208,46,10)" fg:x="1031" fg:w="1"/><text x="84.2761%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0261%" y="453" width="0.0815%" height="15" fill="rgb(254,5,31)" fg:x="1031" fg:w="1"/><text x="84.2761%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.0261%" y="437" width="0.0815%" height="15" fill="rgb(222,104,33)" fg:x="1031" fg:w="1"/><text x="84.2761%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0261%" y="421" width="0.0815%" height="15" fill="rgb(248,49,16)" fg:x="1031" fg:w="1"/><text x="84.2761%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0261%" y="405" width="0.0815%" height="15" fill="rgb(232,198,41)" fg:x="1031" fg:w="1"/><text x="84.2761%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1076%" y="437" width="0.0815%" height="15" fill="rgb(214,125,3)" fg:x="1032" fg:w="1"/><text x="84.3576%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.1076%" y="421" width="0.0815%" height="15" fill="rgb(229,220,28)" fg:x="1032" fg:w="1"/><text x="84.3576%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1076%" y="405" width="0.0815%" height="15" fill="rgb(222,64,37)" fg:x="1032" fg:w="1"/><text x="84.3576%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="84.1076%" y="517" width="0.1630%" height="15" fill="rgb(249,184,13)" fg:x="1032" fg:w="2"/><text x="84.3576%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="84.1076%" y="501" width="0.1630%" height="15" fill="rgb(252,176,6)" fg:x="1032" fg:w="2"/><text x="84.3576%" y="511.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="84.1076%" y="485" width="0.1630%" height="15" fill="rgb(228,153,7)" fg:x="1032" fg:w="2"/><text x="84.3576%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="84.1076%" y="469" width="0.1630%" height="15" fill="rgb(242,193,5)" fg:x="1032" fg:w="2"/><text x="84.3576%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.1076%" y="453" width="0.1630%" height="15" fill="rgb(232,140,9)" fg:x="1032" fg:w="2"/><text x="84.3576%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1891%" y="437" width="0.0815%" height="15" fill="rgb(213,222,16)" fg:x="1033" fg:w="1"/><text x="84.4391%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="84.1076%" y="533" width="0.2445%" height="15" fill="rgb(222,75,50)" fg:x="1032" fg:w="3"/><text x="84.3576%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2706%" y="517" width="0.0815%" height="15" fill="rgb(205,180,2)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2706%" y="501" width="0.0815%" height="15" fill="rgb(216,34,7)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="511.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="84.2706%" y="485" width="0.0815%" height="15" fill="rgb(253,16,32)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.2706%" y="469" width="0.0815%" height="15" fill="rgb(208,97,28)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2706%" y="453" width="0.0815%" height="15" fill="rgb(225,92,11)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2706%" y="437" width="0.0815%" height="15" fill="rgb(243,38,12)" fg:x="1034" fg:w="1"/><text x="84.5206%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3521%" y="485" width="0.0815%" height="15" fill="rgb(208,139,16)" fg:x="1035" fg:w="1"/><text x="84.6021%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3521%" y="469" width="0.0815%" height="15" fill="rgb(227,24,9)" fg:x="1035" fg:w="1"/><text x="84.6021%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.3521%" y="453" width="0.0815%" height="15" fill="rgb(206,62,11)" fg:x="1035" fg:w="1"/><text x="84.6021%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.3521%" y="517" width="0.1630%" height="15" fill="rgb(228,134,27)" fg:x="1035" fg:w="2"/><text x="84.6021%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.3521%" y="501" width="0.1630%" height="15" fill="rgb(205,55,33)" fg:x="1035" fg:w="2"/><text x="84.6021%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.4336%" y="485" width="0.0815%" height="15" fill="rgb(243,75,43)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4336%" y="469" width="0.0815%" height="15" fill="rgb(223,27,42)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.4336%" y="453" width="0.0815%" height="15" fill="rgb(232,189,33)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.4336%" y="437" width="0.0815%" height="15" fill="rgb(210,9,39)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4336%" y="421" width="0.0815%" height="15" fill="rgb(242,85,26)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4336%" y="405" width="0.0815%" height="15" fill="rgb(248,44,4)" fg:x="1036" fg:w="1"/><text x="84.6836%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5151%" y="501" width="0.0815%" height="15" fill="rgb(250,96,46)" fg:x="1037" fg:w="1"/><text x="84.7651%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="84.5151%" y="517" width="0.2445%" height="15" fill="rgb(229,116,26)" fg:x="1037" fg:w="3"/><text x="84.7651%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.5966%" y="501" width="0.1630%" height="15" fill="rgb(246,94,34)" fg:x="1038" fg:w="2"/><text x="84.8466%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.5966%" y="485" width="0.1630%" height="15" fill="rgb(251,73,21)" fg:x="1038" fg:w="2"/><text x="84.8466%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.5966%" y="469" width="0.1630%" height="15" fill="rgb(254,121,25)" fg:x="1038" fg:w="2"/><text x="84.8466%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.5966%" y="453" width="0.1630%" height="15" fill="rgb(215,161,49)" fg:x="1038" fg:w="2"/><text x="84.8466%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6781%" y="437" width="0.0815%" height="15" fill="rgb(221,43,13)" fg:x="1039" fg:w="1"/><text x="84.9281%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="84.1076%" y="549" width="0.7335%" height="15" fill="rgb(249,5,37)" fg:x="1032" fg:w="9"/><text x="84.3576%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.49%)</title><rect x="84.3521%" y="533" width="0.4890%" height="15" fill="rgb(226,25,44)" fg:x="1035" fg:w="6"/><text x="84.6021%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="84.7596%" y="517" width="0.0815%" height="15" fill="rgb(238,189,16)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.7596%" y="501" width="0.0815%" height="15" fill="rgb(251,186,8)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="84.7596%" y="485" width="0.0815%" height="15" fill="rgb(254,34,31)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.7596%" y="469" width="0.0815%" height="15" fill="rgb(225,215,27)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.7596%" y="453" width="0.0815%" height="15" fill="rgb(221,192,48)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="84.7596%" y="437" width="0.0815%" height="15" fill="rgb(219,137,20)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="84.7596%" y="421" width="0.0815%" height="15" fill="rgb(219,84,11)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="84.7596%" y="405" width="0.0815%" height="15" fill="rgb(224,10,23)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="84.7596%" y="389" width="0.0815%" height="15" fill="rgb(248,22,39)" fg:x="1040" fg:w="1"/><text x="85.0096%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8411%" y="517" width="0.0815%" height="15" fill="rgb(212,154,20)" fg:x="1041" fg:w="1"/><text x="85.0911%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.8411%" y="501" width="0.0815%" height="15" fill="rgb(236,199,50)" fg:x="1041" fg:w="1"/><text x="85.0911%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.8411%" y="485" width="0.0815%" height="15" fill="rgb(211,9,17)" fg:x="1041" fg:w="1"/><text x="85.0911%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.90%)</title><rect x="84.1076%" y="565" width="0.8965%" height="15" fill="rgb(243,216,36)" fg:x="1032" fg:w="11"/><text x="84.3576%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.8411%" y="549" width="0.1630%" height="15" fill="rgb(250,2,10)" fg:x="1041" fg:w="2"/><text x="85.0911%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.8411%" y="533" width="0.1630%" height="15" fill="rgb(226,50,48)" fg:x="1041" fg:w="2"/><text x="85.0911%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9226%" y="517" width="0.0815%" height="15" fill="rgb(243,81,16)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9226%" y="501" width="0.0815%" height="15" fill="rgb(250,14,2)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.9226%" y="485" width="0.0815%" height="15" fill="rgb(233,135,29)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9226%" y="469" width="0.0815%" height="15" fill="rgb(224,64,43)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.9226%" y="453" width="0.0815%" height="15" fill="rgb(238,84,13)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.9226%" y="437" width="0.0815%" height="15" fill="rgb(253,48,26)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9226%" y="421" width="0.0815%" height="15" fill="rgb(205,223,31)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9226%" y="405" width="0.0815%" height="15" fill="rgb(221,41,32)" fg:x="1042" fg:w="1"/><text x="85.1726%" y="415.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (133 samples, 10.84%)</title><rect x="74.2461%" y="597" width="10.8394%" height="15" fill="rgb(213,158,31)" fg:x="911" fg:w="133"/><text x="74.4961%" y="607.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.98%)</title><rect x="84.1076%" y="581" width="0.9780%" height="15" fill="rgb(245,126,43)" fg:x="1032" fg:w="12"/><text x="84.3576%" y="591.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="85.0041%" y="565" width="0.0815%" height="15" fill="rgb(227,7,22)" fg:x="1043" fg:w="1"/><text x="85.2541%" y="575.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="85.0041%" y="549" width="0.0815%" height="15" fill="rgb(252,90,44)" fg:x="1043" fg:w="1"/><text x="85.2541%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.0041%" y="533" width="0.0815%" height="15" fill="rgb(253,91,0)" fg:x="1043" fg:w="1"/><text x="85.2541%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.0041%" y="517" width="0.0815%" height="15" fill="rgb(252,175,49)" fg:x="1043" fg:w="1"/><text x="85.2541%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="85.0856%" y="581" width="0.0815%" height="15" fill="rgb(246,150,1)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0856%" y="565" width="0.0815%" height="15" fill="rgb(241,192,25)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0856%" y="549" width="0.0815%" height="15" fill="rgb(239,187,11)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0856%" y="533" width="0.0815%" height="15" fill="rgb(218,202,51)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0856%" y="517" width="0.0815%" height="15" fill="rgb(225,176,8)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0856%" y="501" width="0.0815%" height="15" fill="rgb(219,122,41)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0856%" y="485" width="0.0815%" height="15" fill="rgb(248,140,20)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.0856%" y="469" width="0.0815%" height="15" fill="rgb(245,41,37)" fg:x="1044" fg:w="1"/><text x="85.3356%" y="479.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="85.1671%" y="501" width="0.0815%" height="15" fill="rgb(235,82,39)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.1671%" y="485" width="0.0815%" height="15" fill="rgb(230,108,42)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.1671%" y="469" width="0.0815%" height="15" fill="rgb(215,150,50)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.1671%" y="453" width="0.0815%" height="15" fill="rgb(233,212,5)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1671%" y="437" width="0.0815%" height="15" fill="rgb(245,80,22)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.1671%" y="421" width="0.0815%" height="15" fill="rgb(238,129,16)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1671%" y="405" width="0.0815%" height="15" fill="rgb(240,19,0)" fg:x="1045" fg:w="1"/><text x="85.4171%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.2486%" y="469" width="0.0815%" height="15" fill="rgb(232,42,35)" fg:x="1046" fg:w="1"/><text x="85.4986%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="85.3301%" y="469" width="0.2445%" height="15" fill="rgb(223,130,24)" fg:x="1047" fg:w="3"/><text x="85.5801%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="85.3301%" y="453" width="0.2445%" height="15" fill="rgb(237,16,22)" fg:x="1047" fg:w="3"/><text x="85.5801%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.4116%" y="437" width="0.1630%" height="15" fill="rgb(248,192,20)" fg:x="1048" fg:w="2"/><text x="85.6616%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.4931%" y="421" width="0.0815%" height="15" fill="rgb(233,167,2)" fg:x="1049" fg:w="1"/><text x="85.7431%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.5746%" y="405" width="0.0815%" height="15" fill="rgb(252,71,44)" fg:x="1050" fg:w="1"/><text x="85.8246%" y="415.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.5746%" y="389" width="0.0815%" height="15" fill="rgb(238,37,47)" fg:x="1050" fg:w="1"/><text x="85.8246%" y="399.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.5746%" y="373" width="0.0815%" height="15" fill="rgb(214,202,54)" fg:x="1050" fg:w="1"/><text x="85.8246%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="85.5746%" y="357" width="0.0815%" height="15" fill="rgb(254,165,40)" fg:x="1050" fg:w="1"/><text x="85.8246%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="85.5746%" y="453" width="0.1630%" height="15" fill="rgb(246,173,38)" fg:x="1050" fg:w="2"/><text x="85.8246%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.5746%" y="437" width="0.1630%" height="15" fill="rgb(215,3,27)" fg:x="1050" fg:w="2"/><text x="85.8246%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.5746%" y="421" width="0.1630%" height="15" fill="rgb(239,169,51)" fg:x="1050" fg:w="2"/><text x="85.8246%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.6561%" y="405" width="0.0815%" height="15" fill="rgb(212,5,25)" fg:x="1051" fg:w="1"/><text x="85.9061%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7376%" y="437" width="0.0815%" height="15" fill="rgb(243,45,17)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7376%" y="421" width="0.0815%" height="15" fill="rgb(242,97,9)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.7376%" y="405" width="0.0815%" height="15" fill="rgb(228,71,31)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="415.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.7376%" y="389" width="0.0815%" height="15" fill="rgb(252,184,16)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.7376%" y="373" width="0.0815%" height="15" fill="rgb(236,169,46)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.7376%" y="357" width="0.0815%" height="15" fill="rgb(207,17,47)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.7376%" y="341" width="0.0815%" height="15" fill="rgb(206,201,28)" fg:x="1052" fg:w="1"/><text x="85.9876%" y="351.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="85.7376%" y="453" width="0.2445%" height="15" fill="rgb(224,184,23)" fg:x="1052" fg:w="3"/><text x="85.9876%" y="463.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.8191%" y="437" width="0.1630%" height="15" fill="rgb(208,139,48)" fg:x="1053" fg:w="2"/><text x="86.0691%" y="447.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.8191%" y="421" width="0.1630%" height="15" fill="rgb(208,130,10)" fg:x="1053" fg:w="2"/><text x="86.0691%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.9006%" y="405" width="0.0815%" height="15" fill="rgb(211,213,45)" fg:x="1054" fg:w="1"/><text x="86.1506%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.90%)</title><rect x="85.2486%" y="501" width="0.8965%" height="15" fill="rgb(235,100,30)" fg:x="1046" fg:w="11"/><text x="85.4986%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.90%)</title><rect x="85.2486%" y="485" width="0.8965%" height="15" fill="rgb(206,144,31)" fg:x="1046" fg:w="11"/><text x="85.4986%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="85.5746%" y="469" width="0.5705%" height="15" fill="rgb(224,200,26)" fg:x="1050" fg:w="7"/><text x="85.8246%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.9821%" y="453" width="0.1630%" height="15" fill="rgb(247,104,53)" fg:x="1055" fg:w="2"/><text x="86.2321%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.9821%" y="437" width="0.1630%" height="15" fill="rgb(220,14,17)" fg:x="1055" fg:w="2"/><text x="86.2321%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.9821%" y="421" width="0.1630%" height="15" fill="rgb(230,140,40)" fg:x="1055" fg:w="2"/><text x="86.2321%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.1451%" y="453" width="0.0815%" height="15" fill="rgb(229,2,41)" fg:x="1057" fg:w="1"/><text x="86.3951%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.2266%" y="437" width="0.0815%" height="15" fill="rgb(232,89,16)" fg:x="1058" fg:w="1"/><text x="86.4766%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2266%" y="421" width="0.0815%" height="15" fill="rgb(247,59,52)" fg:x="1058" fg:w="1"/><text x="86.4766%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.1451%" y="501" width="0.2445%" height="15" fill="rgb(226,110,21)" fg:x="1057" fg:w="3"/><text x="86.3951%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="86.1451%" y="485" width="0.2445%" height="15" fill="rgb(224,176,43)" fg:x="1057" fg:w="3"/><text x="86.3951%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="86.1451%" y="469" width="0.2445%" height="15" fill="rgb(221,73,6)" fg:x="1057" fg:w="3"/><text x="86.3951%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="86.2266%" y="453" width="0.1630%" height="15" fill="rgb(232,78,19)" fg:x="1058" fg:w="2"/><text x="86.4766%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.3081%" y="437" width="0.0815%" height="15" fill="rgb(233,112,48)" fg:x="1059" fg:w="1"/><text x="86.5581%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="86.3081%" y="421" width="0.0815%" height="15" fill="rgb(243,131,47)" fg:x="1059" fg:w="1"/><text x="86.5581%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.3081%" y="405" width="0.0815%" height="15" fill="rgb(226,51,1)" fg:x="1059" fg:w="1"/><text x="86.5581%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.3081%" y="389" width="0.0815%" height="15" fill="rgb(247,58,7)" fg:x="1059" fg:w="1"/><text x="86.5581%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="86.3896%" y="421" width="0.1630%" height="15" fill="rgb(209,7,32)" fg:x="1060" fg:w="2"/><text x="86.6396%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4711%" y="405" width="0.0815%" height="15" fill="rgb(209,39,41)" fg:x="1061" fg:w="1"/><text x="86.7211%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.6341%" y="405" width="0.1630%" height="15" fill="rgb(226,182,46)" fg:x="1063" fg:w="2"/><text x="86.8841%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="86.7971%" y="405" width="0.2445%" height="15" fill="rgb(230,219,10)" fg:x="1065" fg:w="3"/><text x="87.0471%" y="415.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="86.7971%" y="389" width="0.2445%" height="15" fill="rgb(227,175,30)" fg:x="1065" fg:w="3"/><text x="87.0471%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0416%" y="389" width="0.0815%" height="15" fill="rgb(217,2,50)" fg:x="1068" fg:w="1"/><text x="87.2916%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0416%" y="373" width="0.0815%" height="15" fill="rgb(229,160,0)" fg:x="1068" fg:w="1"/><text x="87.2916%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="86.3896%" y="469" width="0.8150%" height="15" fill="rgb(207,78,37)" fg:x="1060" fg:w="10"/><text x="86.6396%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.81%)</title><rect x="86.3896%" y="453" width="0.8150%" height="15" fill="rgb(225,57,0)" fg:x="1060" fg:w="10"/><text x="86.6396%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="86.3896%" y="437" width="0.8150%" height="15" fill="rgb(232,154,2)" fg:x="1060" fg:w="10"/><text x="86.6396%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="86.5526%" y="421" width="0.6520%" height="15" fill="rgb(241,212,25)" fg:x="1062" fg:w="8"/><text x="86.8026%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="87.0416%" y="405" width="0.1630%" height="15" fill="rgb(226,69,20)" fg:x="1068" fg:w="2"/><text x="87.2916%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1231%" y="389" width="0.0815%" height="15" fill="rgb(247,184,54)" fg:x="1069" fg:w="1"/><text x="87.3731%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1231%" y="373" width="0.0815%" height="15" fill="rgb(210,145,0)" fg:x="1069" fg:w="1"/><text x="87.3731%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="87.2861%" y="405" width="0.0815%" height="15" fill="rgb(253,82,12)" fg:x="1071" fg:w="1"/><text x="87.5361%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="87.2046%" y="437" width="0.3260%" height="15" fill="rgb(245,42,11)" fg:x="1070" fg:w="4"/><text x="87.4546%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.33%)</title><rect x="87.2046%" y="421" width="0.3260%" height="15" fill="rgb(219,147,32)" fg:x="1070" fg:w="4"/><text x="87.4546%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="87.3676%" y="405" width="0.1630%" height="15" fill="rgb(246,12,7)" fg:x="1072" fg:w="2"/><text x="87.6176%" y="415.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.22%)</title><rect x="86.3896%" y="485" width="1.2225%" height="15" fill="rgb(243,50,9)" fg:x="1060" fg:w="15"/><text x="86.6396%" y="495.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.41%)</title><rect x="87.2046%" y="469" width="0.4075%" height="15" fill="rgb(219,149,6)" fg:x="1070" fg:w="5"/><text x="87.4546%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.41%)</title><rect x="87.2046%" y="453" width="0.4075%" height="15" fill="rgb(241,51,42)" fg:x="1070" fg:w="5"/><text x="87.4546%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.5306%" y="437" width="0.0815%" height="15" fill="rgb(226,128,27)" fg:x="1074" fg:w="1"/><text x="87.7806%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="87.6936%" y="453" width="0.2445%" height="15" fill="rgb(244,144,4)" fg:x="1076" fg:w="3"/><text x="87.9436%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8566%" y="437" width="0.0815%" height="15" fill="rgb(221,4,13)" fg:x="1078" fg:w="1"/><text x="88.1066%" y="447.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9381%" y="453" width="0.0815%" height="15" fill="rgb(208,170,28)" fg:x="1079" fg:w="1"/><text x="88.1881%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="88.0196%" y="453" width="0.1630%" height="15" fill="rgb(226,131,13)" fg:x="1080" fg:w="2"/><text x="88.2696%" y="463.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1826%" y="453" width="0.0815%" height="15" fill="rgb(215,72,41)" fg:x="1082" fg:w="1"/><text x="88.4326%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1826%" y="437" width="0.0815%" height="15" fill="rgb(243,108,20)" fg:x="1082" fg:w="1"/><text x="88.4326%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1826%" y="421" width="0.0815%" height="15" fill="rgb(230,189,17)" fg:x="1082" fg:w="1"/><text x="88.4326%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="88.4271%" y="421" width="0.0815%" height="15" fill="rgb(220,50,17)" fg:x="1085" fg:w="1"/><text x="88.6771%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="88.5901%" y="405" width="0.2445%" height="15" fill="rgb(248,152,48)" fg:x="1087" fg:w="3"/><text x="88.8401%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="88.5901%" y="389" width="0.2445%" height="15" fill="rgb(244,91,11)" fg:x="1087" fg:w="3"/><text x="88.8401%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.6716%" y="373" width="0.1630%" height="15" fill="rgb(220,157,5)" fg:x="1088" fg:w="2"/><text x="88.9216%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="88.9161%" y="373" width="0.1630%" height="15" fill="rgb(253,137,8)" fg:x="1091" fg:w="2"/><text x="89.1661%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9976%" y="357" width="0.0815%" height="15" fill="rgb(217,137,51)" fg:x="1092" fg:w="1"/><text x="89.2476%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.9976%" y="341" width="0.0815%" height="15" fill="rgb(218,209,53)" fg:x="1092" fg:w="1"/><text x="89.2476%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.9976%" y="325" width="0.0815%" height="15" fill="rgb(249,137,25)" fg:x="1092" fg:w="1"/><text x="89.2476%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.33%)</title><rect x="88.8346%" y="405" width="0.3260%" height="15" fill="rgb(239,155,26)" fg:x="1090" fg:w="4"/><text x="89.0846%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="88.9161%" y="389" width="0.2445%" height="15" fill="rgb(227,85,46)" fg:x="1091" fg:w="3"/><text x="89.1661%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0791%" y="373" width="0.0815%" height="15" fill="rgb(251,107,43)" fg:x="1093" fg:w="1"/><text x="89.3291%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="89.2421%" y="389" width="0.0815%" height="15" fill="rgb(234,170,33)" fg:x="1095" fg:w="1"/><text x="89.4921%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.06%)</title><rect x="88.4271%" y="437" width="1.0595%" height="15" fill="rgb(206,29,35)" fg:x="1085" fg:w="13"/><text x="88.6771%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.98%)</title><rect x="88.5086%" y="421" width="0.9780%" height="15" fill="rgb(227,138,25)" fg:x="1086" fg:w="12"/><text x="88.7586%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.33%)</title><rect x="89.1606%" y="405" width="0.3260%" height="15" fill="rgb(249,131,35)" fg:x="1094" fg:w="4"/><text x="89.4106%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="89.3236%" y="389" width="0.1630%" height="15" fill="rgb(239,6,40)" fg:x="1096" fg:w="2"/><text x="89.5736%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.3236%" y="373" width="0.1630%" height="15" fill="rgb(246,136,47)" fg:x="1096" fg:w="2"/><text x="89.5736%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.3236%" y="357" width="0.1630%" height="15" fill="rgb(253,58,26)" fg:x="1096" fg:w="2"/><text x="89.5736%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4051%" y="341" width="0.0815%" height="15" fill="rgb(237,141,10)" fg:x="1097" fg:w="1"/><text x="89.6551%" y="351.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (24 samples, 1.96%)</title><rect x="87.6121%" y="485" width="1.9560%" height="15" fill="rgb(234,156,12)" fg:x="1075" fg:w="24"/><text x="87.8621%" y="495.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.96%)</title><rect x="87.6121%" y="469" width="1.9560%" height="15" fill="rgb(243,224,36)" fg:x="1075" fg:w="24"/><text x="87.8621%" y="479.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.30%)</title><rect x="88.2641%" y="453" width="1.3040%" height="15" fill="rgb(205,229,51)" fg:x="1083" fg:w="16"/><text x="88.5141%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4866%" y="437" width="0.0815%" height="15" fill="rgb(223,189,4)" fg:x="1098" fg:w="1"/><text x="89.7366%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.4866%" y="421" width="0.0815%" height="15" fill="rgb(249,167,54)" fg:x="1098" fg:w="1"/><text x="89.7366%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4866%" y="405" width="0.0815%" height="15" fill="rgb(218,34,28)" fg:x="1098" fg:w="1"/><text x="89.7366%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.6496%" y="341" width="0.0815%" height="15" fill="rgb(232,109,42)" fg:x="1100" fg:w="1"/><text x="89.8996%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.6496%" y="325" width="0.0815%" height="15" fill="rgb(248,214,46)" fg:x="1100" fg:w="1"/><text x="89.8996%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6496%" y="309" width="0.0815%" height="15" fill="rgb(244,216,40)" fg:x="1100" fg:w="1"/><text x="89.8996%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.7311%" y="309" width="0.0815%" height="15" fill="rgb(231,226,31)" fg:x="1101" fg:w="1"/><text x="89.9811%" y="319.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="89.7311%" y="325" width="0.2445%" height="15" fill="rgb(238,38,43)" fg:x="1101" fg:w="3"/><text x="89.9811%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.8126%" y="309" width="0.1630%" height="15" fill="rgb(208,88,43)" fg:x="1102" fg:w="2"/><text x="90.0626%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8941%" y="293" width="0.0815%" height="15" fill="rgb(205,136,37)" fg:x="1103" fg:w="1"/><text x="90.1441%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8941%" y="277" width="0.0815%" height="15" fill="rgb(237,34,14)" fg:x="1103" fg:w="1"/><text x="90.1441%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8941%" y="261" width="0.0815%" height="15" fill="rgb(236,193,44)" fg:x="1103" fg:w="1"/><text x="90.1441%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="89.6496%" y="357" width="0.4890%" height="15" fill="rgb(231,48,10)" fg:x="1100" fg:w="6"/><text x="89.8996%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="89.7311%" y="341" width="0.4075%" height="15" fill="rgb(213,141,34)" fg:x="1101" fg:w="5"/><text x="89.9811%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="89.9756%" y="325" width="0.1630%" height="15" fill="rgb(249,130,34)" fg:x="1104" fg:w="2"/><text x="90.2256%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="89.5681%" y="421" width="0.6520%" height="15" fill="rgb(219,42,41)" fg:x="1099" fg:w="8"/><text x="89.8181%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="89.5681%" y="405" width="0.6520%" height="15" fill="rgb(224,100,54)" fg:x="1099" fg:w="8"/><text x="89.8181%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="89.6496%" y="389" width="0.5705%" height="15" fill="rgb(229,200,27)" fg:x="1100" fg:w="7"/><text x="89.8996%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="89.6496%" y="373" width="0.5705%" height="15" fill="rgb(217,118,10)" fg:x="1100" fg:w="7"/><text x="89.8996%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1385%" y="357" width="0.0815%" height="15" fill="rgb(206,22,3)" fg:x="1106" fg:w="1"/><text x="90.3885%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1385%" y="341" width="0.0815%" height="15" fill="rgb(232,163,46)" fg:x="1106" fg:w="1"/><text x="90.3885%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.2200%" y="405" width="0.0815%" height="15" fill="rgb(206,95,13)" fg:x="1107" fg:w="1"/><text x="90.4700%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="90.2200%" y="421" width="0.1630%" height="15" fill="rgb(253,154,18)" fg:x="1107" fg:w="2"/><text x="90.4700%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3015%" y="405" width="0.0815%" height="15" fill="rgb(219,32,23)" fg:x="1108" fg:w="1"/><text x="90.5515%" y="415.50"></text></g><g><title>engine::session::state::State::close (65 samples, 5.30%)</title><rect x="85.1671%" y="581" width="5.2975%" height="15" fill="rgb(230,191,45)" fg:x="1045" fg:w="65"/><text x="85.4171%" y="591.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (65 samples, 5.30%)</title><rect x="85.1671%" y="565" width="5.2975%" height="15" fill="rgb(229,64,36)" fg:x="1045" fg:w="65"/><text x="85.4171%" y="575.50">engine..</text></g><g><title>core::iter::adapters::try_process (65 samples, 5.30%)</title><rect x="85.1671%" y="549" width="5.2975%" height="15" fill="rgb(205,129,25)" fg:x="1045" fg:w="65"/><text x="85.4171%" y="559.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 5.30%)</title><rect x="85.1671%" y="533" width="5.2975%" height="15" fill="rgb(254,112,7)" fg:x="1045" fg:w="65"/><text x="85.4171%" y="543.50">&lt;alloc..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (65 samples, 5.30%)</title><rect x="85.1671%" y="517" width="5.2975%" height="15" fill="rgb(226,53,48)" fg:x="1045" fg:w="65"/><text x="85.4171%" y="527.50">engine..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 4.07%)</title><rect x="86.3896%" y="501" width="4.0750%" height="15" fill="rgb(214,153,38)" fg:x="1060" fg:w="50"/><text x="86.6396%" y="511.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (11 samples, 0.90%)</title><rect x="89.5681%" y="485" width="0.8965%" height="15" fill="rgb(243,101,7)" fg:x="1099" fg:w="11"/><text x="89.8181%" y="495.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.90%)</title><rect x="89.5681%" y="469" width="0.8965%" height="15" fill="rgb(240,140,22)" fg:x="1099" fg:w="11"/><text x="89.8181%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.90%)</title><rect x="89.5681%" y="453" width="0.8965%" height="15" fill="rgb(235,114,2)" fg:x="1099" fg:w="11"/><text x="89.8181%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.90%)</title><rect x="89.5681%" y="437" width="0.8965%" height="15" fill="rgb(242,59,12)" fg:x="1099" fg:w="11"/><text x="89.8181%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3830%" y="421" width="0.0815%" height="15" fill="rgb(252,134,9)" fg:x="1109" fg:w="1"/><text x="90.6330%" y="431.50"></text></g><g><title>engine::session::Session::close (67 samples, 5.46%)</title><rect x="85.0856%" y="597" width="5.4605%" height="15" fill="rgb(236,4,44)" fg:x="1044" fg:w="67"/><text x="85.3356%" y="607.50">engine:..</text></g><g><title>engine::session::state::State::size (1 samples, 0.08%)</title><rect x="90.4645%" y="581" width="0.0815%" height="15" fill="rgb(254,172,41)" fg:x="1110" fg:w="1"/><text x="90.7145%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6275%" y="389" width="0.0815%" height="15" fill="rgb(244,63,20)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6275%" y="373" width="0.0815%" height="15" fill="rgb(250,73,31)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6275%" y="357" width="0.0815%" height="15" fill="rgb(241,38,36)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6275%" y="341" width="0.0815%" height="15" fill="rgb(245,211,2)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6275%" y="325" width="0.0815%" height="15" fill="rgb(206,120,28)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6275%" y="309" width="0.0815%" height="15" fill="rgb(211,59,34)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6275%" y="293" width="0.0815%" height="15" fill="rgb(233,168,5)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6275%" y="277" width="0.0815%" height="15" fill="rgb(234,33,13)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6275%" y="261" width="0.0815%" height="15" fill="rgb(231,150,26)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6275%" y="245" width="0.0815%" height="15" fill="rgb(217,191,4)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.6275%" y="229" width="0.0815%" height="15" fill="rgb(246,198,38)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.6275%" y="213" width="0.0815%" height="15" fill="rgb(245,64,37)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.6275%" y="197" width="0.0815%" height="15" fill="rgb(250,30,36)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.6275%" y="181" width="0.0815%" height="15" fill="rgb(217,86,53)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6275%" y="165" width="0.0815%" height="15" fill="rgb(228,157,16)" fg:x="1112" fg:w="1"/><text x="90.8775%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.6275%" y="421" width="0.2445%" height="15" fill="rgb(217,59,31)" fg:x="1112" fg:w="3"/><text x="90.8775%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.6275%" y="405" width="0.2445%" height="15" fill="rgb(237,138,41)" fg:x="1112" fg:w="3"/><text x="90.8775%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.7090%" y="389" width="0.1630%" height="15" fill="rgb(227,91,49)" fg:x="1113" fg:w="2"/><text x="90.9590%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.7090%" y="373" width="0.1630%" height="15" fill="rgb(247,21,44)" fg:x="1113" fg:w="2"/><text x="90.9590%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.7905%" y="357" width="0.0815%" height="15" fill="rgb(219,210,51)" fg:x="1114" fg:w="1"/><text x="91.0405%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7905%" y="341" width="0.0815%" height="15" fill="rgb(209,140,6)" fg:x="1114" fg:w="1"/><text x="91.0405%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7905%" y="325" width="0.0815%" height="15" fill="rgb(221,188,24)" fg:x="1114" fg:w="1"/><text x="91.0405%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8720%" y="389" width="0.0815%" height="15" fill="rgb(232,154,20)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8720%" y="373" width="0.0815%" height="15" fill="rgb(244,137,50)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8720%" y="357" width="0.0815%" height="15" fill="rgb(225,185,43)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8720%" y="341" width="0.0815%" height="15" fill="rgb(213,205,38)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.8720%" y="325" width="0.0815%" height="15" fill="rgb(236,73,12)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.8720%" y="309" width="0.0815%" height="15" fill="rgb(235,219,13)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.8720%" y="293" width="0.0815%" height="15" fill="rgb(218,59,36)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8720%" y="277" width="0.0815%" height="15" fill="rgb(205,110,39)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.8720%" y="261" width="0.0815%" height="15" fill="rgb(218,206,42)" fg:x="1115" fg:w="1"/><text x="91.1220%" y="271.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.41%)</title><rect x="90.6275%" y="469" width="0.4075%" height="15" fill="rgb(248,125,24)" fg:x="1112" fg:w="5"/><text x="90.8775%" y="479.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (5 samples, 0.41%)</title><rect x="90.6275%" y="453" width="0.4075%" height="15" fill="rgb(242,28,27)" fg:x="1112" fg:w="5"/><text x="90.8775%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.41%)</title><rect x="90.6275%" y="437" width="0.4075%" height="15" fill="rgb(216,228,15)" fg:x="1112" fg:w="5"/><text x="90.8775%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.8720%" y="421" width="0.1630%" height="15" fill="rgb(235,116,46)" fg:x="1115" fg:w="2"/><text x="91.1220%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.8720%" y="405" width="0.1630%" height="15" fill="rgb(224,18,32)" fg:x="1115" fg:w="2"/><text x="91.1220%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9535%" y="389" width="0.0815%" height="15" fill="rgb(252,5,12)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9535%" y="373" width="0.0815%" height="15" fill="rgb(251,36,5)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.9535%" y="357" width="0.0815%" height="15" fill="rgb(217,53,14)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9535%" y="341" width="0.0815%" height="15" fill="rgb(215,86,45)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9535%" y="325" width="0.0815%" height="15" fill="rgb(242,169,11)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9535%" y="309" width="0.0815%" height="15" fill="rgb(211,213,45)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.9535%" y="293" width="0.0815%" height="15" fill="rgb(205,88,11)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9535%" y="277" width="0.0815%" height="15" fill="rgb(252,69,26)" fg:x="1116" fg:w="1"/><text x="91.2035%" y="287.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (6 samples, 0.49%)</title><rect x="90.6275%" y="485" width="0.4890%" height="15" fill="rgb(246,123,37)" fg:x="1112" fg:w="6"/><text x="90.8775%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="91.0350%" y="469" width="0.0815%" height="15" fill="rgb(212,205,5)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.0350%" y="453" width="0.0815%" height="15" fill="rgb(253,148,0)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0350%" y="437" width="0.0815%" height="15" fill="rgb(239,22,4)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0350%" y="421" width="0.0815%" height="15" fill="rgb(226,26,53)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0350%" y="405" width="0.0815%" height="15" fill="rgb(225,229,45)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0350%" y="389" width="0.0815%" height="15" fill="rgb(220,60,37)" fg:x="1117" fg:w="1"/><text x="91.2850%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1165%" y="405" width="0.0815%" height="15" fill="rgb(217,180,35)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1165%" y="389" width="0.0815%" height="15" fill="rgb(229,7,53)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1165%" y="373" width="0.0815%" height="15" fill="rgb(254,137,3)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1165%" y="357" width="0.0815%" height="15" fill="rgb(215,140,41)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1165%" y="341" width="0.0815%" height="15" fill="rgb(250,80,15)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1165%" y="325" width="0.0815%" height="15" fill="rgb(252,191,6)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1165%" y="309" width="0.0815%" height="15" fill="rgb(246,217,18)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1165%" y="293" width="0.0815%" height="15" fill="rgb(223,93,7)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1165%" y="277" width="0.0815%" height="15" fill="rgb(225,55,52)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1165%" y="261" width="0.0815%" height="15" fill="rgb(240,31,24)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1165%" y="245" width="0.0815%" height="15" fill="rgb(205,56,52)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1165%" y="229" width="0.0815%" height="15" fill="rgb(246,146,12)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1165%" y="213" width="0.0815%" height="15" fill="rgb(239,84,36)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1165%" y="197" width="0.0815%" height="15" fill="rgb(207,41,40)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1165%" y="181" width="0.0815%" height="15" fill="rgb(241,179,25)" fg:x="1118" fg:w="1"/><text x="91.3665%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.1165%" y="437" width="0.1630%" height="15" fill="rgb(210,0,34)" fg:x="1118" fg:w="2"/><text x="91.3665%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.1165%" y="421" width="0.1630%" height="15" fill="rgb(225,217,29)" fg:x="1118" fg:w="2"/><text x="91.3665%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.1980%" y="405" width="0.0815%" height="15" fill="rgb(216,191,38)" fg:x="1119" fg:w="1"/><text x="91.4480%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1980%" y="389" width="0.0815%" height="15" fill="rgb(232,140,52)" fg:x="1119" fg:w="1"/><text x="91.4480%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1980%" y="373" width="0.0815%" height="15" fill="rgb(223,158,51)" fg:x="1119" fg:w="1"/><text x="91.4480%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.2795%" y="405" width="0.1630%" height="15" fill="rgb(235,29,51)" fg:x="1120" fg:w="2"/><text x="91.5295%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.2795%" y="389" width="0.1630%" height="15" fill="rgb(215,181,18)" fg:x="1120" fg:w="2"/><text x="91.5295%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.2795%" y="373" width="0.1630%" height="15" fill="rgb(227,125,34)" fg:x="1120" fg:w="2"/><text x="91.5295%" y="383.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (11 samples, 0.90%)</title><rect x="90.6275%" y="501" width="0.8965%" height="15" fill="rgb(230,197,49)" fg:x="1112" fg:w="11"/><text x="90.8775%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (5 samples, 0.41%)</title><rect x="91.1165%" y="485" width="0.4075%" height="15" fill="rgb(239,141,16)" fg:x="1118" fg:w="5"/><text x="91.3665%" y="495.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.41%)</title><rect x="91.1165%" y="469" width="0.4075%" height="15" fill="rgb(225,105,43)" fg:x="1118" fg:w="5"/><text x="91.3665%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.41%)</title><rect x="91.1165%" y="453" width="0.4075%" height="15" fill="rgb(214,131,14)" fg:x="1118" fg:w="5"/><text x="91.3665%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="91.2795%" y="437" width="0.2445%" height="15" fill="rgb(229,177,11)" fg:x="1120" fg:w="3"/><text x="91.5295%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="91.2795%" y="421" width="0.2445%" height="15" fill="rgb(231,180,14)" fg:x="1120" fg:w="3"/><text x="91.5295%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.4425%" y="405" width="0.0815%" height="15" fill="rgb(232,88,2)" fg:x="1122" fg:w="1"/><text x="91.6925%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4425%" y="389" width="0.0815%" height="15" fill="rgb(205,220,8)" fg:x="1122" fg:w="1"/><text x="91.6925%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.4425%" y="373" width="0.0815%" height="15" fill="rgb(225,23,53)" fg:x="1122" fg:w="1"/><text x="91.6925%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4425%" y="357" width="0.0815%" height="15" fill="rgb(213,62,29)" fg:x="1122" fg:w="1"/><text x="91.6925%" y="367.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.5240%" y="293" width="0.1630%" height="15" fill="rgb(227,75,7)" fg:x="1123" fg:w="2"/><text x="91.7740%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="91.6055%" y="277" width="0.0815%" height="15" fill="rgb(207,105,14)" fg:x="1124" fg:w="1"/><text x="91.8555%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.6870%" y="245" width="0.1630%" height="15" fill="rgb(245,62,29)" fg:x="1125" fg:w="2"/><text x="91.9370%" y="255.50"></text></g><g><title>&lt;replies::AreaObservation as replies::ToTaggedJson&gt;::to_tagged_json (5 samples, 0.41%)</title><rect x="91.5240%" y="341" width="0.4075%" height="15" fill="rgb(236,202,4)" fg:x="1123" fg:w="5"/><text x="91.7740%" y="351.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::AreaObservation&gt;::serialize (5 samples, 0.41%)</title><rect x="91.5240%" y="325" width="0.4075%" height="15" fill="rgb(250,67,1)" fg:x="1123" fg:w="5"/><text x="91.7740%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.41%)</title><rect x="91.5240%" y="309" width="0.4075%" height="15" fill="rgb(253,115,44)" fg:x="1123" fg:w="5"/><text x="91.7740%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="91.6870%" y="293" width="0.2445%" height="15" fill="rgb(251,139,18)" fg:x="1125" fg:w="3"/><text x="91.9370%" y="303.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="91.6870%" y="277" width="0.2445%" height="15" fill="rgb(218,22,32)" fg:x="1125" fg:w="3"/><text x="91.9370%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.6870%" y="261" width="0.2445%" height="15" fill="rgb(243,53,5)" fg:x="1125" fg:w="3"/><text x="91.9370%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8500%" y="245" width="0.0815%" height="15" fill="rgb(227,56,16)" fg:x="1127" fg:w="1"/><text x="92.1000%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8500%" y="229" width="0.0815%" height="15" fill="rgb(245,53,0)" fg:x="1127" fg:w="1"/><text x="92.1000%" y="239.50"></text></g><g><title>&lt;kernel::actions::Effect as core::convert::TryFrom&lt;replies::AreaObservation&gt;&gt;::try_from (7 samples, 0.57%)</title><rect x="91.5240%" y="357" width="0.5705%" height="15" fill="rgb(216,170,35)" fg:x="1123" fg:w="7"/><text x="91.7740%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::AreaObservation&gt; (2 samples, 0.16%)</title><rect x="91.9315%" y="341" width="0.1630%" height="15" fill="rgb(211,200,8)" fg:x="1128" fg:w="2"/><text x="92.1815%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (2 samples, 0.16%)</title><rect x="91.9315%" y="325" width="0.1630%" height="15" fill="rgb(228,204,44)" fg:x="1128" fg:w="2"/><text x="92.1815%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.0130%" y="309" width="0.0815%" height="15" fill="rgb(214,121,17)" fg:x="1129" fg:w="1"/><text x="92.2630%" y="319.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.0945%" y="325" width="0.0815%" height="15" fill="rgb(233,64,38)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.0945%" y="309" width="0.0815%" height="15" fill="rgb(253,54,19)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.0945%" y="293" width="0.0815%" height="15" fill="rgb(253,94,18)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.0945%" y="277" width="0.0815%" height="15" fill="rgb(227,57,52)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="92.0945%" y="261" width="0.0815%" height="15" fill="rgb(230,228,50)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="92.0945%" y="245" width="0.0815%" height="15" fill="rgb(217,205,27)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="92.0945%" y="229" width="0.0815%" height="15" fill="rgb(252,71,50)" fg:x="1130" fg:w="1"/><text x="92.3445%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.1760%" y="293" width="0.1630%" height="15" fill="rgb(209,86,4)" fg:x="1131" fg:w="2"/><text x="92.4260%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.1760%" y="277" width="0.1630%" height="15" fill="rgb(229,94,0)" fg:x="1131" fg:w="2"/><text x="92.4260%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.2575%" y="261" width="0.0815%" height="15" fill="rgb(252,223,21)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2575%" y="245" width="0.0815%" height="15" fill="rgb(230,210,4)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2575%" y="229" width="0.0815%" height="15" fill="rgb(240,149,38)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2575%" y="213" width="0.0815%" height="15" fill="rgb(254,105,20)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2575%" y="197" width="0.0815%" height="15" fill="rgb(253,87,46)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2575%" y="181" width="0.0815%" height="15" fill="rgb(253,116,33)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2575%" y="165" width="0.0815%" height="15" fill="rgb(229,198,5)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2575%" y="149" width="0.0815%" height="15" fill="rgb(242,38,37)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2575%" y="133" width="0.0815%" height="15" fill="rgb(242,69,53)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2575%" y="117" width="0.0815%" height="15" fill="rgb(249,80,16)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2575%" y="101" width="0.0815%" height="15" fill="rgb(206,128,11)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2575%" y="85" width="0.0815%" height="15" fill="rgb(212,35,20)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2575%" y="69" width="0.0815%" height="15" fill="rgb(236,79,13)" fg:x="1132" fg:w="1"/><text x="92.5075%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3390%" y="293" width="0.0815%" height="15" fill="rgb(233,123,3)" fg:x="1133" fg:w="1"/><text x="92.5890%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.4205%" y="293" width="0.0815%" height="15" fill="rgb(214,93,52)" fg:x="1134" fg:w="1"/><text x="92.6705%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.4205%" y="277" width="0.0815%" height="15" fill="rgb(251,37,40)" fg:x="1134" fg:w="1"/><text x="92.6705%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.4205%" y="261" width="0.0815%" height="15" fill="rgb(227,80,54)" fg:x="1134" fg:w="1"/><text x="92.6705%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.4205%" y="245" width="0.0815%" height="15" fill="rgb(254,48,11)" fg:x="1134" fg:w="1"/><text x="92.6705%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4205%" y="229" width="0.0815%" height="15" fill="rgb(235,193,26)" fg:x="1134" fg:w="1"/><text x="92.6705%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.41%)</title><rect x="92.1760%" y="325" width="0.4075%" height="15" fill="rgb(229,99,21)" fg:x="1131" fg:w="5"/><text x="92.4260%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="92.1760%" y="309" width="0.4075%" height="15" fill="rgb(211,140,41)" fg:x="1131" fg:w="5"/><text x="92.4260%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5020%" y="293" width="0.0815%" height="15" fill="rgb(240,227,30)" fg:x="1135" fg:w="1"/><text x="92.7520%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5020%" y="277" width="0.0815%" height="15" fill="rgb(215,224,45)" fg:x="1135" fg:w="1"/><text x="92.7520%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.5020%" y="261" width="0.0815%" height="15" fill="rgb(206,123,31)" fg:x="1135" fg:w="1"/><text x="92.7520%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5020%" y="245" width="0.0815%" height="15" fill="rgb(210,138,16)" fg:x="1135" fg:w="1"/><text x="92.7520%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6650%" y="293" width="0.0815%" height="15" fill="rgb(228,57,28)" fg:x="1137" fg:w="1"/><text x="92.9150%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6650%" y="277" width="0.0815%" height="15" fill="rgb(242,170,10)" fg:x="1137" fg:w="1"/><text x="92.9150%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8280%" y="229" width="0.0815%" height="15" fill="rgb(228,214,39)" fg:x="1139" fg:w="1"/><text x="93.0780%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9095%" y="229" width="0.0815%" height="15" fill="rgb(218,179,33)" fg:x="1140" fg:w="1"/><text x="93.1595%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.9095%" y="213" width="0.0815%" height="15" fill="rgb(235,193,39)" fg:x="1140" fg:w="1"/><text x="93.1595%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.9095%" y="197" width="0.0815%" height="15" fill="rgb(219,221,36)" fg:x="1140" fg:w="1"/><text x="93.1595%" y="207.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (13 samples, 1.06%)</title><rect x="92.0945%" y="341" width="1.0595%" height="15" fill="rgb(248,218,19)" fg:x="1130" fg:w="13"/><text x="92.3445%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.57%)</title><rect x="92.5835%" y="325" width="0.5705%" height="15" fill="rgb(205,50,9)" fg:x="1136" fg:w="7"/><text x="92.8335%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="92.6650%" y="309" width="0.4890%" height="15" fill="rgb(238,81,28)" fg:x="1137" fg:w="6"/><text x="92.9150%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="92.7465%" y="293" width="0.4075%" height="15" fill="rgb(235,110,19)" fg:x="1138" fg:w="5"/><text x="92.9965%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="92.7465%" y="277" width="0.4075%" height="15" fill="rgb(214,7,14)" fg:x="1138" fg:w="5"/><text x="92.9965%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.33%)</title><rect x="92.8280%" y="261" width="0.3260%" height="15" fill="rgb(211,77,3)" fg:x="1139" fg:w="4"/><text x="93.0780%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.33%)</title><rect x="92.8280%" y="245" width="0.3260%" height="15" fill="rgb(229,5,9)" fg:x="1139" fg:w="4"/><text x="93.0780%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.9910%" y="229" width="0.1630%" height="15" fill="rgb(225,90,11)" fg:x="1141" fg:w="2"/><text x="93.2410%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.9910%" y="213" width="0.1630%" height="15" fill="rgb(242,56,8)" fg:x="1141" fg:w="2"/><text x="93.2410%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="93.0725%" y="197" width="0.0815%" height="15" fill="rgb(249,212,39)" fg:x="1142" fg:w="1"/><text x="93.3225%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2355%" y="277" width="0.0815%" height="15" fill="rgb(236,90,9)" fg:x="1144" fg:w="1"/><text x="93.4855%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.33%)</title><rect x="93.2355%" y="293" width="0.3260%" height="15" fill="rgb(206,88,35)" fg:x="1144" fg:w="4"/><text x="93.4855%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.3170%" y="277" width="0.2445%" height="15" fill="rgb(205,126,30)" fg:x="1145" fg:w="3"/><text x="93.5670%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.3170%" y="261" width="0.2445%" height="15" fill="rgb(230,176,12)" fg:x="1145" fg:w="3"/><text x="93.5670%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.3170%" y="245" width="0.2445%" height="15" fill="rgb(243,19,9)" fg:x="1145" fg:w="3"/><text x="93.5670%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.3170%" y="229" width="0.2445%" height="15" fill="rgb(245,171,17)" fg:x="1145" fg:w="3"/><text x="93.5670%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.3985%" y="213" width="0.1630%" height="15" fill="rgb(227,52,21)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.3985%" y="197" width="0.1630%" height="15" fill="rgb(238,69,14)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.3985%" y="181" width="0.1630%" height="15" fill="rgb(241,156,39)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.3985%" y="165" width="0.1630%" height="15" fill="rgb(212,227,28)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.3985%" y="149" width="0.1630%" height="15" fill="rgb(209,118,27)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.3985%" y="133" width="0.1630%" height="15" fill="rgb(226,102,5)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.3985%" y="117" width="0.1630%" height="15" fill="rgb(223,34,3)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="93.3985%" y="101" width="0.1630%" height="15" fill="rgb(221,81,38)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="93.3985%" y="85" width="0.1630%" height="15" fill="rgb(236,219,28)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="93.3985%" y="69" width="0.1630%" height="15" fill="rgb(213,200,14)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="93.3985%" y="53" width="0.1630%" height="15" fill="rgb(240,33,19)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="63.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.3985%" y="37" width="0.1630%" height="15" fill="rgb(233,113,27)" fg:x="1146" fg:w="2"/><text x="93.6485%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.5615%" y="277" width="0.0815%" height="15" fill="rgb(220,221,18)" fg:x="1148" fg:w="1"/><text x="93.8115%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.6430%" y="261" width="0.0815%" height="15" fill="rgb(238,92,8)" fg:x="1149" fg:w="1"/><text x="93.8930%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.6430%" y="245" width="0.0815%" height="15" fill="rgb(222,164,16)" fg:x="1149" fg:w="1"/><text x="93.8930%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.6430%" y="229" width="0.0815%" height="15" fill="rgb(241,119,3)" fg:x="1149" fg:w="1"/><text x="93.8930%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7245%" y="197" width="0.0815%" height="15" fill="rgb(241,44,8)" fg:x="1150" fg:w="1"/><text x="93.9745%" y="207.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (9 samples, 0.73%)</title><rect x="93.1540%" y="325" width="0.7335%" height="15" fill="rgb(230,36,40)" fg:x="1143" fg:w="9"/><text x="93.4040%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.73%)</title><rect x="93.1540%" y="309" width="0.7335%" height="15" fill="rgb(243,16,36)" fg:x="1143" fg:w="9"/><text x="93.4040%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.33%)</title><rect x="93.5615%" y="293" width="0.3260%" height="15" fill="rgb(231,4,26)" fg:x="1148" fg:w="4"/><text x="93.8115%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.6430%" y="277" width="0.2445%" height="15" fill="rgb(240,9,31)" fg:x="1149" fg:w="3"/><text x="93.8930%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.7245%" y="261" width="0.1630%" height="15" fill="rgb(207,173,15)" fg:x="1150" fg:w="2"/><text x="93.9745%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.7245%" y="245" width="0.1630%" height="15" fill="rgb(224,192,53)" fg:x="1150" fg:w="2"/><text x="93.9745%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.7245%" y="229" width="0.1630%" height="15" fill="rgb(223,67,28)" fg:x="1150" fg:w="2"/><text x="93.9745%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.7245%" y="213" width="0.1630%" height="15" fill="rgb(211,20,47)" fg:x="1150" fg:w="2"/><text x="93.9745%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8060%" y="197" width="0.0815%" height="15" fill="rgb(240,228,2)" fg:x="1151" fg:w="1"/><text x="94.0560%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8060%" y="181" width="0.0815%" height="15" fill="rgb(248,151,12)" fg:x="1151" fg:w="1"/><text x="94.0560%" y="191.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (10 samples, 0.81%)</title><rect x="93.1540%" y="341" width="0.8150%" height="15" fill="rgb(244,8,39)" fg:x="1143" fg:w="10"/><text x="93.4040%" y="351.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="93.8875%" y="325" width="0.0815%" height="15" fill="rgb(222,26,8)" fg:x="1152" fg:w="1"/><text x="94.1375%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::HasScopes&gt;::scopes (1 samples, 0.08%)</title><rect x="93.9690%" y="325" width="0.0815%" height="15" fill="rgb(213,106,44)" fg:x="1153" fg:w="1"/><text x="94.2190%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0505%" y="309" width="0.0815%" height="15" fill="rgb(214,129,20)" fg:x="1154" fg:w="1"/><text x="94.3005%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0505%" y="293" width="0.0815%" height="15" fill="rgb(212,32,13)" fg:x="1154" fg:w="1"/><text x="94.3005%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0505%" y="277" width="0.0815%" height="15" fill="rgb(208,168,33)" fg:x="1154" fg:w="1"/><text x="94.3005%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0505%" y="261" width="0.0815%" height="15" fill="rgb(231,207,8)" fg:x="1154" fg:w="1"/><text x="94.3005%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.1320%" y="277" width="0.0815%" height="15" fill="rgb(235,219,23)" fg:x="1155" fg:w="1"/><text x="94.3820%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.1320%" y="261" width="0.0815%" height="15" fill="rgb(226,216,26)" fg:x="1155" fg:w="1"/><text x="94.3820%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.1320%" y="245" width="0.0815%" height="15" fill="rgb(239,137,16)" fg:x="1155" fg:w="1"/><text x="94.3820%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1320%" y="229" width="0.0815%" height="15" fill="rgb(207,12,36)" fg:x="1155" fg:w="1"/><text x="94.3820%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1320%" y="213" width="0.0815%" height="15" fill="rgb(210,214,24)" fg:x="1155" fg:w="1"/><text x="94.3820%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (46 samples, 3.75%)</title><rect x="90.5460%" y="565" width="3.7490%" height="15" fill="rgb(206,56,30)" fg:x="1111" fg:w="46"/><text x="90.7960%" y="575.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::apply_middleware (46 samples, 3.75%)</title><rect x="90.5460%" y="549" width="3.7490%" height="15" fill="rgb(228,143,26)" fg:x="1111" fg:w="46"/><text x="90.7960%" y="559.50">kern..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (45 samples, 3.67%)</title><rect x="90.6275%" y="533" width="3.6675%" height="15" fill="rgb(216,218,46)" fg:x="1112" fg:w="45"/><text x="90.8775%" y="543.50">kern..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (45 samples, 3.67%)</title><rect x="90.6275%" y="517" width="3.6675%" height="15" fill="rgb(206,6,19)" fg:x="1112" fg:w="45"/><text x="90.8775%" y="527.50">&lt;eng..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.77%)</title><rect x="91.5240%" y="501" width="2.7710%" height="15" fill="rgb(239,177,51)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="511.50">ke..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (34 samples, 2.77%)</title><rect x="91.5240%" y="485" width="2.7710%" height="15" fill="rgb(216,55,25)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="495.50">&lt;p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.77%)</title><rect x="91.5240%" y="469" width="2.7710%" height="15" fill="rgb(231,163,29)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="479.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 2.77%)</title><rect x="91.5240%" y="453" width="2.7710%" height="15" fill="rgb(232,149,50)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="463.50">co..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (34 samples, 2.77%)</title><rect x="91.5240%" y="437" width="2.7710%" height="15" fill="rgb(223,142,48)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="447.50">ke..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 2.77%)</title><rect x="91.5240%" y="421" width="2.7710%" height="15" fill="rgb(245,83,23)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="431.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 2.77%)</title><rect x="91.5240%" y="405" width="2.7710%" height="15" fill="rgb(224,63,2)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="415.50">&lt;a..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (34 samples, 2.77%)</title><rect x="91.5240%" y="389" width="2.7710%" height="15" fill="rgb(218,65,53)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="399.50">&lt;e..</text></g><g><title>&lt;plugins_core::looking::actions::LookAction as kernel::actions::Action&gt;::perform (34 samples, 2.77%)</title><rect x="91.5240%" y="373" width="2.7710%" height="15" fill="rgb(221,84,29)" fg:x="1123" fg:w="34"/><text x="91.7740%" y="383.50">&lt;p..</text></g><g><title>plugins_core::looking::model::new_area_observation (27 samples, 2.20%)</title><rect x="92.0945%" y="357" width="2.2005%" height="15" fill="rgb(234,0,32)" fg:x="1130" fg:w="27"/><text x="92.3445%" y="367.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.33%)</title><rect x="93.9690%" y="341" width="0.3260%" height="15" fill="rgb(206,20,16)" fg:x="1153" fg:w="4"/><text x="94.2190%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.0505%" y="325" width="0.2445%" height="15" fill="rgb(244,172,18)" fg:x="1154" fg:w="3"/><text x="94.3005%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.1320%" y="309" width="0.1630%" height="15" fill="rgb(254,133,1)" fg:x="1155" fg:w="2"/><text x="94.3820%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.1320%" y="293" width="0.1630%" height="15" fill="rgb(222,206,41)" fg:x="1155" fg:w="2"/><text x="94.3820%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2135%" y="277" width="0.0815%" height="15" fill="rgb(212,3,42)" fg:x="1156" fg:w="1"/><text x="94.4635%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2135%" y="261" width="0.0815%" height="15" fill="rgb(241,11,4)" fg:x="1156" fg:w="1"/><text x="94.4635%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.2135%" y="245" width="0.0815%" height="15" fill="rgb(205,19,26)" fg:x="1156" fg:w="1"/><text x="94.4635%" y="255.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.2950%" y="565" width="0.0815%" height="15" fill="rgb(210,179,32)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="94.2950%" y="549" width="0.0815%" height="15" fill="rgb(227,116,49)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="559.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.2950%" y="533" width="0.0815%" height="15" fill="rgb(211,146,6)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="543.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="94.2950%" y="517" width="0.0815%" height="15" fill="rgb(219,44,39)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="94.2950%" y="501" width="0.0815%" height="15" fill="rgb(234,128,11)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="94.2950%" y="485" width="0.0815%" height="15" fill="rgb(220,183,53)" fg:x="1157" fg:w="1"/><text x="94.5450%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4580%" y="501" width="0.1630%" height="15" fill="rgb(213,219,32)" fg:x="1159" fg:w="2"/><text x="94.7080%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.5395%" y="485" width="0.0815%" height="15" fill="rgb(232,156,16)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5395%" y="469" width="0.0815%" height="15" fill="rgb(246,135,34)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5395%" y="453" width="0.0815%" height="15" fill="rgb(241,99,0)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5395%" y="437" width="0.0815%" height="15" fill="rgb(222,103,45)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5395%" y="421" width="0.0815%" height="15" fill="rgb(212,57,4)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5395%" y="405" width="0.0815%" height="15" fill="rgb(215,68,47)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5395%" y="389" width="0.0815%" height="15" fill="rgb(230,84,2)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5395%" y="373" width="0.0815%" height="15" fill="rgb(220,102,14)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5395%" y="357" width="0.0815%" height="15" fill="rgb(240,10,32)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5395%" y="341" width="0.0815%" height="15" fill="rgb(215,47,27)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5395%" y="325" width="0.0815%" height="15" fill="rgb(233,188,43)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5395%" y="309" width="0.0815%" height="15" fill="rgb(253,190,1)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5395%" y="293" width="0.0815%" height="15" fill="rgb(206,114,52)" fg:x="1160" fg:w="1"/><text x="94.7895%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6210%" y="501" width="0.0815%" height="15" fill="rgb(233,120,37)" fg:x="1161" fg:w="1"/><text x="94.8710%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.8655%" y="341" width="0.0815%" height="15" fill="rgb(214,52,39)" fg:x="1164" fg:w="1"/><text x="95.1155%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="94.8655%" y="325" width="0.0815%" height="15" fill="rgb(223,80,29)" fg:x="1164" fg:w="1"/><text x="95.1155%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.7840%" y="453" width="0.2445%" height="15" fill="rgb(230,101,40)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.7840%" y="437" width="0.2445%" height="15" fill="rgb(219,211,8)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="447.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.7840%" y="421" width="0.2445%" height="15" fill="rgb(252,126,28)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.7840%" y="405" width="0.2445%" height="15" fill="rgb(215,56,38)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.7840%" y="389" width="0.2445%" height="15" fill="rgb(249,55,44)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.7840%" y="373" width="0.2445%" height="15" fill="rgb(220,221,32)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.7840%" y="357" width="0.2445%" height="15" fill="rgb(212,216,41)" fg:x="1163" fg:w="3"/><text x="95.0340%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9470%" y="341" width="0.0815%" height="15" fill="rgb(228,213,43)" fg:x="1165" fg:w="1"/><text x="95.1970%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9470%" y="325" width="0.0815%" height="15" fill="rgb(211,31,26)" fg:x="1165" fg:w="1"/><text x="95.1970%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.49%)</title><rect x="94.7025%" y="501" width="0.4890%" height="15" fill="rgb(229,202,19)" fg:x="1162" fg:w="6"/><text x="94.9525%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.49%)</title><rect x="94.7025%" y="485" width="0.4890%" height="15" fill="rgb(229,105,46)" fg:x="1162" fg:w="6"/><text x="94.9525%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="94.7025%" y="469" width="0.4890%" height="15" fill="rgb(235,108,1)" fg:x="1162" fg:w="6"/><text x="94.9525%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.0285%" y="453" width="0.1630%" height="15" fill="rgb(245,111,35)" fg:x="1166" fg:w="2"/><text x="95.2785%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.0285%" y="437" width="0.1630%" height="15" fill="rgb(219,185,31)" fg:x="1166" fg:w="2"/><text x="95.2785%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.1100%" y="421" width="0.0815%" height="15" fill="rgb(214,4,43)" fg:x="1167" fg:w="1"/><text x="95.3600%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.1100%" y="405" width="0.0815%" height="15" fill="rgb(235,227,40)" fg:x="1167" fg:w="1"/><text x="95.3600%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.1915%" y="373" width="0.1630%" height="15" fill="rgb(230,88,30)" fg:x="1168" fg:w="2"/><text x="95.4415%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.1915%" y="357" width="0.1630%" height="15" fill="rgb(216,217,1)" fg:x="1168" fg:w="2"/><text x="95.4415%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2730%" y="341" width="0.0815%" height="15" fill="rgb(248,139,50)" fg:x="1169" fg:w="1"/><text x="95.5230%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.1915%" y="437" width="0.2445%" height="15" fill="rgb(233,1,21)" fg:x="1168" fg:w="3"/><text x="95.4415%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.1915%" y="421" width="0.2445%" height="15" fill="rgb(215,183,12)" fg:x="1168" fg:w="3"/><text x="95.4415%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="95.1915%" y="405" width="0.2445%" height="15" fill="rgb(229,104,42)" fg:x="1168" fg:w="3"/><text x="95.4415%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.1915%" y="389" width="0.2445%" height="15" fill="rgb(243,34,48)" fg:x="1168" fg:w="3"/><text x="95.4415%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3545%" y="373" width="0.0815%" height="15" fill="rgb(239,11,44)" fg:x="1170" fg:w="1"/><text x="95.6045%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3545%" y="357" width="0.0815%" height="15" fill="rgb(231,98,35)" fg:x="1170" fg:w="1"/><text x="95.6045%" y="367.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.06%)</title><rect x="94.4580%" y="533" width="1.0595%" height="15" fill="rgb(233,28,25)" fg:x="1159" fg:w="13"/><text x="94.7080%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.06%)</title><rect x="94.4580%" y="517" width="1.0595%" height="15" fill="rgb(234,123,11)" fg:x="1159" fg:w="13"/><text x="94.7080%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.33%)</title><rect x="95.1915%" y="501" width="0.3260%" height="15" fill="rgb(220,69,3)" fg:x="1168" fg:w="4"/><text x="95.4415%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.33%)</title><rect x="95.1915%" y="485" width="0.3260%" height="15" fill="rgb(214,64,36)" fg:x="1168" fg:w="4"/><text x="95.4415%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.33%)</title><rect x="95.1915%" y="469" width="0.3260%" height="15" fill="rgb(211,138,32)" fg:x="1168" fg:w="4"/><text x="95.4415%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.33%)</title><rect x="95.1915%" y="453" width="0.3260%" height="15" fill="rgb(213,118,47)" fg:x="1168" fg:w="4"/><text x="95.4415%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.4360%" y="437" width="0.0815%" height="15" fill="rgb(243,124,49)" fg:x="1171" fg:w="1"/><text x="95.6860%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="95.4360%" y="421" width="0.0815%" height="15" fill="rgb(221,30,28)" fg:x="1171" fg:w="1"/><text x="95.6860%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5175%" y="453" width="0.0815%" height="15" fill="rgb(246,37,13)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5175%" y="437" width="0.0815%" height="15" fill="rgb(249,66,14)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5175%" y="421" width="0.0815%" height="15" fill="rgb(213,166,5)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5175%" y="405" width="0.0815%" height="15" fill="rgb(221,66,24)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5175%" y="389" width="0.0815%" height="15" fill="rgb(210,132,17)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5175%" y="373" width="0.0815%" height="15" fill="rgb(243,202,5)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5175%" y="357" width="0.0815%" height="15" fill="rgb(233,70,48)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5175%" y="341" width="0.0815%" height="15" fill="rgb(238,41,26)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5175%" y="325" width="0.0815%" height="15" fill="rgb(241,19,31)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5175%" y="309" width="0.0815%" height="15" fill="rgb(214,76,10)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5175%" y="293" width="0.0815%" height="15" fill="rgb(254,202,22)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5175%" y="277" width="0.0815%" height="15" fill="rgb(214,72,24)" fg:x="1172" fg:w="1"/><text x="95.7675%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5175%" y="501" width="0.1630%" height="15" fill="rgb(221,92,46)" fg:x="1172" fg:w="2"/><text x="95.7675%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5175%" y="485" width="0.1630%" height="15" fill="rgb(246,13,50)" fg:x="1172" fg:w="2"/><text x="95.7675%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5175%" y="469" width="0.1630%" height="15" fill="rgb(240,165,38)" fg:x="1172" fg:w="2"/><text x="95.7675%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5990%" y="453" width="0.0815%" height="15" fill="rgb(241,24,51)" fg:x="1173" fg:w="1"/><text x="95.8490%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5990%" y="437" width="0.0815%" height="15" fill="rgb(227,51,44)" fg:x="1173" fg:w="1"/><text x="95.8490%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.6805%" y="453" width="0.1630%" height="15" fill="rgb(231,121,3)" fg:x="1174" fg:w="2"/><text x="95.9305%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.6805%" y="437" width="0.1630%" height="15" fill="rgb(245,3,41)" fg:x="1174" fg:w="2"/><text x="95.9305%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7620%" y="421" width="0.0815%" height="15" fill="rgb(214,13,26)" fg:x="1175" fg:w="1"/><text x="96.0120%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7620%" y="405" width="0.0815%" height="15" fill="rgb(252,75,11)" fg:x="1175" fg:w="1"/><text x="96.0120%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7620%" y="389" width="0.0815%" height="15" fill="rgb(218,226,17)" fg:x="1175" fg:w="1"/><text x="96.0120%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8435%" y="405" width="0.0815%" height="15" fill="rgb(248,89,38)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.8435%" y="389" width="0.0815%" height="15" fill="rgb(237,73,46)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="399.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.8435%" y="373" width="0.0815%" height="15" fill="rgb(242,78,33)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8435%" y="357" width="0.0815%" height="15" fill="rgb(235,60,3)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.8435%" y="341" width="0.0815%" height="15" fill="rgb(216,172,19)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="351.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.8435%" y="325" width="0.0815%" height="15" fill="rgb(227,6,42)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.8435%" y="309" width="0.0815%" height="15" fill="rgb(223,207,42)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.8435%" y="293" width="0.0815%" height="15" fill="rgb(246,138,30)" fg:x="1176" fg:w="1"/><text x="96.0935%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9250%" y="373" width="0.0815%" height="15" fill="rgb(251,199,47)" fg:x="1177" fg:w="1"/><text x="96.1750%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9250%" y="357" width="0.0815%" height="15" fill="rgb(228,218,44)" fg:x="1177" fg:w="1"/><text x="96.1750%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.33%)</title><rect x="95.8435%" y="453" width="0.3260%" height="15" fill="rgb(220,68,6)" fg:x="1176" fg:w="4"/><text x="96.0935%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.33%)</title><rect x="95.8435%" y="437" width="0.3260%" height="15" fill="rgb(240,60,26)" fg:x="1176" fg:w="4"/><text x="96.0935%" y="447.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.33%)</title><rect x="95.8435%" y="421" width="0.3260%" height="15" fill="rgb(211,200,19)" fg:x="1176" fg:w="4"/><text x="96.0935%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.9250%" y="405" width="0.2445%" height="15" fill="rgb(242,145,30)" fg:x="1177" fg:w="3"/><text x="96.1750%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.9250%" y="389" width="0.2445%" height="15" fill="rgb(225,64,13)" fg:x="1177" fg:w="3"/><text x="96.1750%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.0065%" y="373" width="0.1630%" height="15" fill="rgb(218,103,35)" fg:x="1178" fg:w="2"/><text x="96.2565%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="96.0065%" y="357" width="0.1630%" height="15" fill="rgb(216,93,46)" fg:x="1178" fg:w="2"/><text x="96.2565%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.0065%" y="341" width="0.1630%" height="15" fill="rgb(225,159,27)" fg:x="1178" fg:w="2"/><text x="96.2565%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0880%" y="325" width="0.0815%" height="15" fill="rgb(225,204,11)" fg:x="1179" fg:w="1"/><text x="96.3380%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="95.6805%" y="501" width="0.6520%" height="15" fill="rgb(205,56,4)" fg:x="1174" fg:w="8"/><text x="95.9305%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.65%)</title><rect x="95.6805%" y="485" width="0.6520%" height="15" fill="rgb(206,6,35)" fg:x="1174" fg:w="8"/><text x="95.9305%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.65%)</title><rect x="95.6805%" y="469" width="0.6520%" height="15" fill="rgb(247,73,52)" fg:x="1174" fg:w="8"/><text x="95.9305%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.1695%" y="453" width="0.1630%" height="15" fill="rgb(246,97,4)" fg:x="1180" fg:w="2"/><text x="96.4195%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1695%" y="437" width="0.1630%" height="15" fill="rgb(212,37,15)" fg:x="1180" fg:w="2"/><text x="96.4195%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2510%" y="421" width="0.0815%" height="15" fill="rgb(208,130,40)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2510%" y="405" width="0.0815%" height="15" fill="rgb(236,55,29)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.2510%" y="389" width="0.0815%" height="15" fill="rgb(209,156,45)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.2510%" y="373" width="0.0815%" height="15" fill="rgb(249,107,4)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.2510%" y="357" width="0.0815%" height="15" fill="rgb(227,7,13)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2510%" y="341" width="0.0815%" height="15" fill="rgb(250,129,14)" fg:x="1181" fg:w="1"/><text x="96.5010%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3325%" y="405" width="0.0815%" height="15" fill="rgb(229,92,13)" fg:x="1182" fg:w="1"/><text x="96.5825%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="96.3325%" y="469" width="0.1630%" height="15" fill="rgb(245,98,39)" fg:x="1182" fg:w="2"/><text x="96.5825%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.3325%" y="453" width="0.1630%" height="15" fill="rgb(234,135,48)" fg:x="1182" fg:w="2"/><text x="96.5825%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.3325%" y="437" width="0.1630%" height="15" fill="rgb(230,98,28)" fg:x="1182" fg:w="2"/><text x="96.5825%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.3325%" y="421" width="0.1630%" height="15" fill="rgb(223,121,0)" fg:x="1182" fg:w="2"/><text x="96.5825%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.4140%" y="405" width="0.0815%" height="15" fill="rgb(234,173,33)" fg:x="1183" fg:w="1"/><text x="96.6640%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.4140%" y="389" width="0.0815%" height="15" fill="rgb(245,47,8)" fg:x="1183" fg:w="1"/><text x="96.6640%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4140%" y="373" width="0.0815%" height="15" fill="rgb(205,17,20)" fg:x="1183" fg:w="1"/><text x="96.6640%" y="383.50"></text></g><g><title>engine::session::internal::Added::find_refs (13 samples, 1.06%)</title><rect x="95.5175%" y="533" width="1.0595%" height="15" fill="rgb(232,151,16)" fg:x="1172" fg:w="13"/><text x="95.7675%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (13 samples, 1.06%)</title><rect x="95.5175%" y="517" width="1.0595%" height="15" fill="rgb(208,30,32)" fg:x="1172" fg:w="13"/><text x="95.7675%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.3325%" y="501" width="0.2445%" height="15" fill="rgb(254,26,3)" fg:x="1182" fg:w="3"/><text x="96.5825%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.3325%" y="485" width="0.2445%" height="15" fill="rgb(240,177,30)" fg:x="1182" fg:w="3"/><text x="96.5825%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4955%" y="469" width="0.0815%" height="15" fill="rgb(248,76,44)" fg:x="1184" fg:w="1"/><text x="96.7455%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.4955%" y="453" width="0.0815%" height="15" fill="rgb(241,186,54)" fg:x="1184" fg:w="1"/><text x="96.7455%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4955%" y="437" width="0.0815%" height="15" fill="rgb(249,171,29)" fg:x="1184" fg:w="1"/><text x="96.7455%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.5770%" y="501" width="0.1630%" height="15" fill="rgb(237,151,44)" fg:x="1185" fg:w="2"/><text x="96.8270%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6585%" y="485" width="0.0815%" height="15" fill="rgb(228,174,30)" fg:x="1186" fg:w="1"/><text x="96.9085%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6585%" y="469" width="0.0815%" height="15" fill="rgb(252,14,37)" fg:x="1186" fg:w="1"/><text x="96.9085%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="96.5770%" y="517" width="0.2445%" height="15" fill="rgb(207,111,40)" fg:x="1185" fg:w="3"/><text x="96.8270%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7400%" y="501" width="0.0815%" height="15" fill="rgb(248,171,54)" fg:x="1187" fg:w="1"/><text x="96.9900%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8215%" y="437" width="0.0815%" height="15" fill="rgb(211,127,2)" fg:x="1188" fg:w="1"/><text x="97.0715%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9030%" y="437" width="0.0815%" height="15" fill="rgb(236,87,47)" fg:x="1189" fg:w="1"/><text x="97.1530%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9030%" y="421" width="0.0815%" height="15" fill="rgb(223,190,45)" fg:x="1189" fg:w="1"/><text x="97.1530%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="96.9845%" y="421" width="0.1630%" height="15" fill="rgb(215,5,16)" fg:x="1190" fg:w="2"/><text x="97.2345%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9845%" y="405" width="0.1630%" height="15" fill="rgb(252,82,33)" fg:x="1190" fg:w="2"/><text x="97.2345%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="96.9845%" y="389" width="0.1630%" height="15" fill="rgb(247,213,44)" fg:x="1190" fg:w="2"/><text x="97.2345%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="97.1475%" y="421" width="0.0815%" height="15" fill="rgb(205,196,44)" fg:x="1192" fg:w="1"/><text x="97.3975%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.1475%" y="405" width="0.0815%" height="15" fill="rgb(237,96,54)" fg:x="1192" fg:w="1"/><text x="97.3975%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1475%" y="389" width="0.0815%" height="15" fill="rgb(230,113,34)" fg:x="1192" fg:w="1"/><text x="97.3975%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.2290%" y="389" width="0.0815%" height="15" fill="rgb(221,224,12)" fg:x="1193" fg:w="1"/><text x="97.4790%" y="399.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.57%)</title><rect x="96.8215%" y="517" width="0.5705%" height="15" fill="rgb(219,112,44)" fg:x="1188" fg:w="7"/><text x="97.0715%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="96.8215%" y="501" width="0.5705%" height="15" fill="rgb(210,31,13)" fg:x="1188" fg:w="7"/><text x="97.0715%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="96.8215%" y="485" width="0.5705%" height="15" fill="rgb(230,25,16)" fg:x="1188" fg:w="7"/><text x="97.0715%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.57%)</title><rect x="96.8215%" y="469" width="0.5705%" height="15" fill="rgb(246,108,53)" fg:x="1188" fg:w="7"/><text x="97.0715%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="96.8215%" y="453" width="0.5705%" height="15" fill="rgb(241,172,50)" fg:x="1188" fg:w="7"/><text x="97.0715%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.41%)</title><rect x="96.9845%" y="437" width="0.4075%" height="15" fill="rgb(235,141,10)" fg:x="1190" fg:w="5"/><text x="97.2345%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.2290%" y="421" width="0.1630%" height="15" fill="rgb(220,174,43)" fg:x="1193" fg:w="2"/><text x="97.4790%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.2290%" y="405" width="0.1630%" height="15" fill="rgb(215,181,40)" fg:x="1193" fg:w="2"/><text x="97.4790%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="97.3105%" y="389" width="0.0815%" height="15" fill="rgb(230,97,2)" fg:x="1194" fg:w="1"/><text x="97.5605%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.3105%" y="373" width="0.0815%" height="15" fill="rgb(211,25,27)" fg:x="1194" fg:w="1"/><text x="97.5605%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.3105%" y="357" width="0.0815%" height="15" fill="rgb(230,87,26)" fg:x="1194" fg:w="1"/><text x="97.5605%" y="367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3920%" y="453" width="0.1630%" height="15" fill="rgb(227,160,17)" fg:x="1195" fg:w="2"/><text x="97.6420%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3920%" y="437" width="0.1630%" height="15" fill="rgb(244,85,34)" fg:x="1195" fg:w="2"/><text x="97.6420%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="97.3920%" y="421" width="0.1630%" height="15" fill="rgb(207,70,0)" fg:x="1195" fg:w="2"/><text x="97.6420%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3920%" y="405" width="0.1630%" height="15" fill="rgb(223,129,7)" fg:x="1195" fg:w="2"/><text x="97.6420%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4735%" y="389" width="0.0815%" height="15" fill="rgb(246,105,7)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.4735%" y="373" width="0.0815%" height="15" fill="rgb(215,154,42)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4735%" y="357" width="0.0815%" height="15" fill="rgb(220,215,30)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4735%" y="341" width="0.0815%" height="15" fill="rgb(228,81,51)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4735%" y="325" width="0.0815%" height="15" fill="rgb(247,71,54)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4735%" y="309" width="0.0815%" height="15" fill="rgb(234,176,34)" fg:x="1196" fg:w="1"/><text x="97.7235%" y="319.50"></text></g><g><title>engine::session::Session::load_entity (39 samples, 3.18%)</title><rect x="94.4580%" y="549" width="3.1785%" height="15" fill="rgb(241,103,54)" fg:x="1159" fg:w="39"/><text x="94.7080%" y="559.50">eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.06%)</title><rect x="96.5770%" y="533" width="1.0595%" height="15" fill="rgb(228,22,34)" fg:x="1185" fg:w="13"/><text x="96.8270%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="97.3920%" y="517" width="0.2445%" height="15" fill="rgb(241,179,48)" fg:x="1195" fg:w="3"/><text x="97.6420%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.3920%" y="501" width="0.2445%" height="15" fill="rgb(235,167,37)" fg:x="1195" fg:w="3"/><text x="97.6420%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.3920%" y="485" width="0.2445%" height="15" fill="rgb(213,109,30)" fg:x="1195" fg:w="3"/><text x="97.6420%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.3920%" y="469" width="0.2445%" height="15" fill="rgb(222,172,16)" fg:x="1195" fg:w="3"/><text x="97.6420%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5550%" y="453" width="0.0815%" height="15" fill="rgb(233,192,5)" fg:x="1197" fg:w="1"/><text x="97.8050%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.5550%" y="437" width="0.0815%" height="15" fill="rgb(247,189,41)" fg:x="1197" fg:w="1"/><text x="97.8050%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6365%" y="501" width="0.0815%" height="15" fill="rgb(218,134,47)" fg:x="1198" fg:w="1"/><text x="97.8865%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6365%" y="485" width="0.0815%" height="15" fill="rgb(216,29,3)" fg:x="1198" fg:w="1"/><text x="97.8865%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6365%" y="469" width="0.0815%" height="15" fill="rgb(246,140,12)" fg:x="1198" fg:w="1"/><text x="97.8865%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6365%" y="453" width="0.0815%" height="15" fill="rgb(230,136,11)" fg:x="1198" fg:w="1"/><text x="97.8865%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6365%" y="517" width="0.1630%" height="15" fill="rgb(247,22,47)" fg:x="1198" fg:w="2"/><text x="97.8865%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7180%" y="501" width="0.0815%" height="15" fill="rgb(218,84,22)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.7180%" y="485" width="0.0815%" height="15" fill="rgb(216,87,39)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.7180%" y="469" width="0.0815%" height="15" fill="rgb(221,178,8)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.7180%" y="453" width="0.0815%" height="15" fill="rgb(230,42,11)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.7180%" y="437" width="0.0815%" height="15" fill="rgb(237,229,4)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7180%" y="421" width="0.0815%" height="15" fill="rgb(222,31,33)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.7180%" y="405" width="0.0815%" height="15" fill="rgb(210,17,39)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.7180%" y="389" width="0.0815%" height="15" fill="rgb(244,93,20)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.7180%" y="373" width="0.0815%" height="15" fill="rgb(210,40,47)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.7180%" y="357" width="0.0815%" height="15" fill="rgb(239,211,47)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.7180%" y="341" width="0.0815%" height="15" fill="rgb(251,223,49)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7180%" y="325" width="0.0815%" height="15" fill="rgb(221,149,5)" fg:x="1199" fg:w="1"/><text x="97.9680%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.7995%" y="517" width="0.1630%" height="15" fill="rgb(219,224,51)" fg:x="1200" fg:w="2"/><text x="98.0495%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.7995%" y="501" width="0.1630%" height="15" fill="rgb(223,7,8)" fg:x="1200" fg:w="2"/><text x="98.0495%" y="511.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8810%" y="485" width="0.0815%" height="15" fill="rgb(241,217,22)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.8810%" y="469" width="0.0815%" height="15" fill="rgb(248,209,0)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8810%" y="453" width="0.0815%" height="15" fill="rgb(217,205,4)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="463.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.8810%" y="437" width="0.0815%" height="15" fill="rgb(228,124,39)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8810%" y="421" width="0.0815%" height="15" fill="rgb(250,116,42)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8810%" y="405" width="0.0815%" height="15" fill="rgb(223,202,9)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8810%" y="389" width="0.0815%" height="15" fill="rgb(242,222,40)" fg:x="1201" fg:w="1"/><text x="98.1310%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.9625%" y="485" width="0.0815%" height="15" fill="rgb(229,99,46)" fg:x="1202" fg:w="1"/><text x="98.2125%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9625%" y="469" width="0.0815%" height="15" fill="rgb(225,56,46)" fg:x="1202" fg:w="1"/><text x="98.2125%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.9625%" y="453" width="0.0815%" height="15" fill="rgb(227,94,5)" fg:x="1202" fg:w="1"/><text x="98.2125%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.9625%" y="437" width="0.0815%" height="15" fill="rgb(205,112,38)" fg:x="1202" fg:w="1"/><text x="98.2125%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (6 samples, 0.49%)</title><rect x="97.6365%" y="549" width="0.4890%" height="15" fill="rgb(231,133,46)" fg:x="1198" fg:w="6"/><text x="97.8865%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.49%)</title><rect x="97.6365%" y="533" width="0.4890%" height="15" fill="rgb(217,16,9)" fg:x="1198" fg:w="6"/><text x="97.8865%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.9625%" y="517" width="0.1630%" height="15" fill="rgb(249,173,9)" fg:x="1202" fg:w="2"/><text x="98.2125%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.9625%" y="501" width="0.1630%" height="15" fill="rgb(205,163,53)" fg:x="1202" fg:w="2"/><text x="98.2125%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.0440%" y="485" width="0.0815%" height="15" fill="rgb(217,54,41)" fg:x="1203" fg:w="1"/><text x="98.2940%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0440%" y="469" width="0.0815%" height="15" fill="rgb(228,216,12)" fg:x="1203" fg:w="1"/><text x="98.2940%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0440%" y="453" width="0.0815%" height="15" fill="rgb(244,228,15)" fg:x="1203" fg:w="1"/><text x="98.2940%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0440%" y="437" width="0.0815%" height="15" fill="rgb(221,176,53)" fg:x="1203" fg:w="1"/><text x="98.2940%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1255%" y="533" width="0.0815%" height="15" fill="rgb(205,94,34)" fg:x="1204" fg:w="1"/><text x="98.3755%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1255%" y="517" width="0.0815%" height="15" fill="rgb(213,110,48)" fg:x="1204" fg:w="1"/><text x="98.3755%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1255%" y="501" width="0.0815%" height="15" fill="rgb(236,142,28)" fg:x="1204" fg:w="1"/><text x="98.3755%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1255%" y="485" width="0.0815%" height="15" fill="rgb(225,135,29)" fg:x="1204" fg:w="1"/><text x="98.3755%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.2070%" y="405" width="0.0815%" height="15" fill="rgb(252,45,31)" fg:x="1205" fg:w="1"/><text x="98.4570%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2070%" y="389" width="0.0815%" height="15" fill="rgb(211,187,50)" fg:x="1205" fg:w="1"/><text x="98.4570%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2070%" y="373" width="0.0815%" height="15" fill="rgb(229,109,7)" fg:x="1205" fg:w="1"/><text x="98.4570%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2070%" y="357" width="0.0815%" height="15" fill="rgb(251,131,51)" fg:x="1205" fg:w="1"/><text x="98.4570%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.2070%" y="437" width="0.1630%" height="15" fill="rgb(251,180,35)" fg:x="1205" fg:w="2"/><text x="98.4570%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.2070%" y="421" width="0.1630%" height="15" fill="rgb(211,46,32)" fg:x="1205" fg:w="2"/><text x="98.4570%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2885%" y="405" width="0.0815%" height="15" fill="rgb(248,123,17)" fg:x="1206" fg:w="1"/><text x="98.5385%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2885%" y="389" width="0.0815%" height="15" fill="rgb(227,141,18)" fg:x="1206" fg:w="1"/><text x="98.5385%" y="399.50"></text></g><g><title>engine::session::Session::load_entity (50 samples, 4.07%)</title><rect x="94.3765%" y="565" width="4.0750%" height="15" fill="rgb(216,102,9)" fg:x="1158" fg:w="50"/><text x="94.6265%" y="575.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.33%)</title><rect x="98.1255%" y="549" width="0.3260%" height="15" fill="rgb(253,47,13)" fg:x="1204" fg:w="4"/><text x="98.3755%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="98.2070%" y="533" width="0.2445%" height="15" fill="rgb(226,93,23)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.2070%" y="517" width="0.2445%" height="15" fill="rgb(247,104,17)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.2070%" y="501" width="0.2445%" height="15" fill="rgb(233,203,26)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.2070%" y="485" width="0.2445%" height="15" fill="rgb(244,98,49)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.2070%" y="469" width="0.2445%" height="15" fill="rgb(235,134,22)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.2070%" y="453" width="0.2445%" height="15" fill="rgb(221,70,32)" fg:x="1205" fg:w="3"/><text x="98.4570%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3700%" y="437" width="0.0815%" height="15" fill="rgb(238,15,50)" fg:x="1207" fg:w="1"/><text x="98.6200%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3700%" y="421" width="0.0815%" height="15" fill="rgb(215,221,48)" fg:x="1207" fg:w="1"/><text x="98.6200%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.3700%" y="405" width="0.0815%" height="15" fill="rgb(236,73,3)" fg:x="1207" fg:w="1"/><text x="98.6200%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3700%" y="389" width="0.0815%" height="15" fill="rgb(250,107,11)" fg:x="1207" fg:w="1"/><text x="98.6200%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3700%" y="373" width="0.0815%" height="15" fill="rgb(242,39,14)" fg:x="1207" fg:w="1"/><text x="98.6200%" y="383.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="98.4515%" y="565" width="0.0815%" height="15" fill="rgb(248,164,37)" fg:x="1208" fg:w="1"/><text x="98.7015%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.4515%" y="549" width="0.0815%" height="15" fill="rgb(217,60,12)" fg:x="1208" fg:w="1"/><text x="98.7015%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4515%" y="533" width="0.0815%" height="15" fill="rgb(240,125,29)" fg:x="1208" fg:w="1"/><text x="98.7015%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5330%" y="485" width="0.0815%" height="15" fill="rgb(208,207,28)" fg:x="1209" fg:w="1"/><text x="98.7830%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="98.5330%" y="565" width="0.1630%" height="15" fill="rgb(209,159,27)" fg:x="1209" fg:w="2"/><text x="98.7830%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.5330%" y="549" width="0.1630%" height="15" fill="rgb(251,176,53)" fg:x="1209" fg:w="2"/><text x="98.7830%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.5330%" y="533" width="0.1630%" height="15" fill="rgb(211,85,7)" fg:x="1209" fg:w="2"/><text x="98.7830%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.5330%" y="517" width="0.1630%" height="15" fill="rgb(216,64,54)" fg:x="1209" fg:w="2"/><text x="98.7830%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5330%" y="501" width="0.1630%" height="15" fill="rgb(217,54,24)" fg:x="1209" fg:w="2"/><text x="98.7830%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.6145%" y="485" width="0.0815%" height="15" fill="rgb(208,206,53)" fg:x="1210" fg:w="1"/><text x="98.8645%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6145%" y="469" width="0.0815%" height="15" fill="rgb(251,74,39)" fg:x="1210" fg:w="1"/><text x="98.8645%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6145%" y="453" width="0.0815%" height="15" fill="rgb(226,47,5)" fg:x="1210" fg:w="1"/><text x="98.8645%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6145%" y="437" width="0.0815%" height="15" fill="rgb(234,111,33)" fg:x="1210" fg:w="1"/><text x="98.8645%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.6960%" y="549" width="0.0815%" height="15" fill="rgb(251,14,10)" fg:x="1211" fg:w="1"/><text x="98.9460%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="98.7775%" y="533" width="0.1630%" height="15" fill="rgb(232,43,0)" fg:x="1212" fg:w="2"/><text x="99.0275%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9405%" y="517" width="0.1630%" height="15" fill="rgb(222,68,43)" fg:x="1214" fg:w="2"/><text x="99.1905%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="98.9405%" y="501" width="0.1630%" height="15" fill="rgb(217,24,23)" fg:x="1214" fg:w="2"/><text x="99.1905%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0220%" y="485" width="0.0815%" height="15" fill="rgb(229,209,14)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0220%" y="469" width="0.0815%" height="15" fill="rgb(250,149,48)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.0220%" y="453" width="0.0815%" height="15" fill="rgb(210,120,37)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.0220%" y="437" width="0.0815%" height="15" fill="rgb(210,21,8)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.0220%" y="421" width="0.0815%" height="15" fill="rgb(243,145,7)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.0220%" y="405" width="0.0815%" height="15" fill="rgb(238,178,32)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0220%" y="389" width="0.0815%" height="15" fill="rgb(222,4,10)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.0220%" y="373" width="0.0815%" height="15" fill="rgb(239,7,37)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.0220%" y="357" width="0.0815%" height="15" fill="rgb(215,31,37)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.0220%" y="341" width="0.0815%" height="15" fill="rgb(224,83,33)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.0220%" y="325" width="0.0815%" height="15" fill="rgb(239,55,3)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.0220%" y="309" width="0.0815%" height="15" fill="rgb(247,92,11)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0220%" y="293" width="0.0815%" height="15" fill="rgb(239,200,7)" fg:x="1215" fg:w="1"/><text x="99.2720%" y="303.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.1035%" y="517" width="0.0815%" height="15" fill="rgb(227,115,8)" fg:x="1216" fg:w="1"/><text x="99.3535%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1035%" y="501" width="0.0815%" height="15" fill="rgb(215,189,27)" fg:x="1216" fg:w="1"/><text x="99.3535%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1035%" y="485" width="0.0815%" height="15" fill="rgb(251,216,39)" fg:x="1216" fg:w="1"/><text x="99.3535%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.1035%" y="469" width="0.0815%" height="15" fill="rgb(207,29,47)" fg:x="1216" fg:w="1"/><text x="99.3535%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1850%" y="437" width="0.0815%" height="15" fill="rgb(210,71,34)" fg:x="1217" fg:w="1"/><text x="99.4350%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1850%" y="469" width="0.1630%" height="15" fill="rgb(253,217,51)" fg:x="1217" fg:w="2"/><text x="99.4350%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1850%" y="453" width="0.1630%" height="15" fill="rgb(222,117,46)" fg:x="1217" fg:w="2"/><text x="99.4350%" y="463.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2665%" y="437" width="0.0815%" height="15" fill="rgb(226,132,6)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2665%" y="421" width="0.0815%" height="15" fill="rgb(254,145,51)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2665%" y="405" width="0.0815%" height="15" fill="rgb(231,199,27)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2665%" y="389" width="0.0815%" height="15" fill="rgb(245,158,14)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2665%" y="373" width="0.0815%" height="15" fill="rgb(240,113,14)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="99.2665%" y="357" width="0.0815%" height="15" fill="rgb(210,20,13)" fg:x="1218" fg:w="1"/><text x="99.5165%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="99.1850%" y="517" width="0.2445%" height="15" fill="rgb(241,144,13)" fg:x="1217" fg:w="3"/><text x="99.4350%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.1850%" y="501" width="0.2445%" height="15" fill="rgb(235,43,34)" fg:x="1217" fg:w="3"/><text x="99.4350%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1850%" y="485" width="0.2445%" height="15" fill="rgb(208,36,20)" fg:x="1217" fg:w="3"/><text x="99.4350%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3480%" y="469" width="0.0815%" height="15" fill="rgb(239,204,10)" fg:x="1219" fg:w="1"/><text x="99.5980%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3480%" y="453" width="0.0815%" height="15" fill="rgb(217,84,43)" fg:x="1219" fg:w="1"/><text x="99.5980%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.3480%" y="437" width="0.0815%" height="15" fill="rgb(241,170,50)" fg:x="1219" fg:w="1"/><text x="99.5980%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.3480%" y="421" width="0.0815%" height="15" fill="rgb(226,205,29)" fg:x="1219" fg:w="1"/><text x="99.5980%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4295%" y="421" width="0.0815%" height="15" fill="rgb(233,113,1)" fg:x="1220" fg:w="1"/><text x="99.6795%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4295%" y="405" width="0.0815%" height="15" fill="rgb(253,98,13)" fg:x="1220" fg:w="1"/><text x="99.6795%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4295%" y="389" width="0.0815%" height="15" fill="rgb(211,115,12)" fg:x="1220" fg:w="1"/><text x="99.6795%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4295%" y="373" width="0.0815%" height="15" fill="rgb(208,12,16)" fg:x="1220" fg:w="1"/><text x="99.6795%" y="383.50"></text></g><g><title>engine::session::Session::load_entity (10 samples, 0.81%)</title><rect x="98.7775%" y="549" width="0.8150%" height="15" fill="rgb(237,193,54)" fg:x="1212" fg:w="10"/><text x="99.0275%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.65%)</title><rect x="98.9405%" y="533" width="0.6520%" height="15" fill="rgb(243,22,42)" fg:x="1214" fg:w="8"/><text x="99.1905%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="99.4295%" y="517" width="0.1630%" height="15" fill="rgb(233,151,36)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="527.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.4295%" y="501" width="0.1630%" height="15" fill="rgb(237,57,45)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.4295%" y="485" width="0.1630%" height="15" fill="rgb(221,88,17)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.4295%" y="469" width="0.1630%" height="15" fill="rgb(230,79,15)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.4295%" y="453" width="0.1630%" height="15" fill="rgb(213,57,13)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.4295%" y="437" width="0.1630%" height="15" fill="rgb(222,116,39)" fg:x="1220" fg:w="2"/><text x="99.6795%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5110%" y="421" width="0.0815%" height="15" fill="rgb(245,107,2)" fg:x="1221" fg:w="1"/><text x="99.7610%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5110%" y="405" width="0.0815%" height="15" fill="rgb(238,1,10)" fg:x="1221" fg:w="1"/><text x="99.7610%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.5110%" y="389" width="0.0815%" height="15" fill="rgb(249,4,48)" fg:x="1221" fg:w="1"/><text x="99.7610%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="99.5110%" y="373" width="0.0815%" height="15" fill="rgb(223,151,18)" fg:x="1221" fg:w="1"/><text x="99.7610%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.5925%" y="533" width="0.1630%" height="15" fill="rgb(227,65,43)" fg:x="1222" fg:w="2"/><text x="99.8425%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.5925%" y="517" width="0.1630%" height="15" fill="rgb(218,40,45)" fg:x="1222" fg:w="2"/><text x="99.8425%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.6740%" y="501" width="0.0815%" height="15" fill="rgb(252,121,31)" fg:x="1223" fg:w="1"/><text x="99.9240%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="99.6740%" y="485" width="0.0815%" height="15" fill="rgb(219,158,43)" fg:x="1223" fg:w="1"/><text x="99.9240%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="99.6740%" y="469" width="0.0815%" height="15" fill="rgb(231,162,42)" fg:x="1223" fg:w="1"/><text x="99.9240%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6740%" y="453" width="0.0815%" height="15" fill="rgb(217,179,25)" fg:x="1223" fg:w="1"/><text x="99.9240%" y="463.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (115 samples, 9.37%)</title><rect x="90.5460%" y="597" width="9.3725%" height="15" fill="rgb(206,212,31)" fg:x="1111" fg:w="115"/><text x="90.7960%" y="607.50">engine::sessi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (115 samples, 9.37%)</title><rect x="90.5460%" y="581" width="9.3725%" height="15" fill="rgb(235,144,12)" fg:x="1111" fg:w="115"/><text x="90.7960%" y="591.50">engine::sessi..</text></g><g><title>kernel::model::entry::EntryResolver::world (15 samples, 1.22%)</title><rect x="98.6960%" y="565" width="1.2225%" height="15" fill="rgb(213,51,10)" fg:x="1211" fg:w="15"/><text x="98.9460%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.33%)</title><rect x="99.5925%" y="549" width="0.3260%" height="15" fill="rgb(231,145,14)" fg:x="1222" fg:w="4"/><text x="99.8425%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.7555%" y="533" width="0.1630%" height="15" fill="rgb(235,15,28)" fg:x="1224" fg:w="2"/><text x="100.0055%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.7555%" y="517" width="0.1630%" height="15" fill="rgb(237,206,10)" fg:x="1224" fg:w="2"/><text x="100.0055%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8370%" y="501" width="0.0815%" height="15" fill="rgb(236,227,27)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8370%" y="485" width="0.0815%" height="15" fill="rgb(246,83,35)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.8370%" y="469" width="0.0815%" height="15" fill="rgb(220,136,24)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8370%" y="453" width="0.0815%" height="15" fill="rgb(217,3,25)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8370%" y="437" width="0.0815%" height="15" fill="rgb(239,24,14)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8370%" y="421" width="0.0815%" height="15" fill="rgb(244,16,53)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8370%" y="405" width="0.0815%" height="15" fill="rgb(208,175,44)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8370%" y="389" width="0.0815%" height="15" fill="rgb(252,18,48)" fg:x="1225" fg:w="1"/><text x="100.0870%" y="399.50"></text></g><g><title>all (1,227 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(234,199,32)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="959.50"></text></g><g><title>simple-f9bc7d3f (1,227 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(225,77,54)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="943.50">simple-f9bc7d3f</text></g><g><title>_start (1,227 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(225,42,25)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="927.50">_start</text></g><g><title>__libc_start_main (1,227 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(242,227,46)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="911.50">__libc_start_main</text></g><g><title>main (1,227 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(246,197,35)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (1,227 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(215,159,26)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,227 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(212,194,50)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,227 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(246,132,1)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,227 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(217,71,7)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,227 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(252,59,32)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,227 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(253,204,25)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,227 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(232,21,16)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,227 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(248,90,29)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,227 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(249,223,7)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,227 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(231,119,42)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,227 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(215,41,35)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,227 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(220,44,45)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="703.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,227 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(253,197,36)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,227 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(245,225,54)" fg:x="0" fg:w="1227"/><text x="0.2500%" y="671.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (343 samples, 27.95%)</title><rect x="72.0456%" y="645" width="27.9544%" height="15" fill="rgb(239,94,37)" fg:x="884" fg:w="343"/><text x="72.2956%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as crite..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (343 samples, 27.95%)</title><rect x="72.0456%" y="629" width="27.9544%" height="15" fill="rgb(242,217,10)" fg:x="884" fg:w="343"/><text x="72.2956%" y="639.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (343 samples, 27.95%)</title><rect x="72.0456%" y="613" width="27.9544%" height="15" fill="rgb(250,193,7)" fg:x="884" fg:w="343"/><text x="72.2956%" y="623.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9185%" y="597" width="0.0815%" height="15" fill="rgb(230,104,19)" fg:x="1226" fg:w="1"/><text x="100.1685%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9185%" y="581" width="0.0815%" height="15" fill="rgb(230,181,4)" fg:x="1226" fg:w="1"/><text x="100.1685%" y="591.50"></text></g></svg></svg>